{"/": [{"p": "/api_docs/python/hub/", "k": ["__version__"], "r": "master", "t": "hub"}, {"p": "/api_docs/python/hub/LatestModuleExporter", "k": ["name", "__init__", "export"], "r": "master", "t": "hub.LatestModuleExporter"}, {"p": "/api_docs/python/hub/Module", "k": ["variable_map", "__call__", "__init__", "export", "get_input_info_dict", "get_output_info_dict", "get_signature_names"], "r": "master", "t": "hub.Module"}, {"p": "/api_docs/python/hub/ModuleSpec", "k": ["__init__", "get_input_info_dict", "get_output_info_dict", "get_signature_names", "get_tags"], "r": "master", "t": "hub.ModuleSpec"}, {"p": "/api_docs/python/hub/add_signature", "k": [], "r": "master", "t": "hub.add_signature"}, {"p": "/api_docs/python/hub/create_module_spec", "k": [], "r": "master", "t": "hub.create_module_spec"}, {"p": "/api_docs/python/hub/get_expected_image_size", "k": [], "r": "master", "t": "hub.get_expected_image_size"}, {"p": "/api_docs/python/hub/get_num_image_channels", "k": [], "r": "master", "t": "hub.get_num_image_channels"}, {"p": "/api_docs/python/hub/image_embedding_column", "k": [], "r": "master", "t": "hub.image_embedding_column"}, {"p": "/api_docs/python/hub/load_module_spec", "k": [], "r": "master", "t": "hub.load_module_spec"}, {"p": "/api_docs/python/hub/register_module_for_export", "k": [], "r": "master", "t": "hub.register_module_for_export"}, {"p": "/api_docs/python/hub/text_embedding_column", "k": [], "r": "master", "t": "hub.text_embedding_column"}, {"p": "/api_docs/python/tf", "k": ["AUTO_REUSE", "COMPILER_VERSION", "CXX11_ABI_FLAG", "GIT_VERSION", "GRAPH_DEF_VERSION", "GRAPH_DEF_VERSION_MIN_CONSUMER", "GRAPH_DEF_VERSION_MIN_PRODUCER", "MONOLITHIC_BUILD", "QUANTIZED_DTYPES", "VERSION", "__cached__", "__compiler_version__", "__cxx11_abi_flag__", "__git_version__", "__loader__", "__monolithic_build__", "__spec__", "__version__", "bfloat16", "bool", "complex128", "complex64", "double", "float16", "float32", "float64", "half", "int16", "int32", "int64", "int8", "newaxis", "qint16", "qint32", "qint8", "quint16", "quint8", "resource", "string", "uint16", "uint32", "uint64", "uint8", "variant"], "r": "r1.8", "t": "tf"}, {"p": "/api_docs/python/tf/AggregationMethod", "k": ["ADD_N", "DEFAULT", "EXPERIMENTAL_ACCUMULATE_N", "EXPERIMENTAL_TREE"], "r": "r1.8", "t": "tf.AggregationMethod"}, {"p": "/api_docs/python/tf/Assert", "k": [], "r": "r1.8", "t": "tf.Assert"}, {"p": "/api_docs/python/tf/AttrValue", "k": ["ListValue"], "r": "r1.8", "t": "tf.AttrValue"}, {"p": "/api_docs/python/tf/AttrValue/ListValue", "k": [], "r": "r1.8", "t": "tf.AttrValue.ListValue"}, {"p": "/api_docs/python/tf/ConditionalAccumulator", "k": ["accumulator_ref", "dtype", "name", "__init__", "apply_grad", "num_accumulated", "set_global_step", "take_grad"], "r": "r1.8", "t": "tf.ConditionalAccumulator"}, {"p": "/api_docs/python/tf/ConditionalAccumulatorBase", "k": ["accumulator_ref", "dtype", "name", "__init__", "num_accumulated", "set_global_step"], "r": "r1.8", "t": "tf.ConditionalAccumulatorBase"}, {"p": "/api_docs/python/tf/ConfigProto", "k": ["DeviceCountEntry"], "r": "r1.8", "t": "tf.ConfigProto"}, {"p": "/api_docs/python/tf/ConfigProto/DeviceCountEntry", "k": [], "r": "r1.8", "t": "tf.ConfigProto.DeviceCountEntry"}, {"p": "/api_docs/python/tf/DType", "k": ["as_datatype_enum", "as_numpy_dtype", "base_dtype", "is_bool", "is_complex", "is_floating", "is_integer", "is_numpy_compatible", "is_quantized", "is_unsigned", "limits", "max", "min", "name", "real_dtype", "size", "__eq__", "__init__", "__int__", "__ne__", "is_compatible_with"], "r": "r1.8", "t": "tf.DType"}, {"p": "/api_docs/python/tf/DeviceSpec", "k": ["job", "replica", "task", "__init__", "from_string", "merge_from", "parse_from_string", "to_string"], "r": "r1.8", "t": "tf.DeviceSpec"}, {"p": "/api_docs/python/tf/Dimension", "k": ["value", "__add__", "__div__", "__eq__", "__floordiv__", "__ge__", "__gt__", "__index__", "__init__", "__int__", "__le__", "__long__", "__lt__", "__mod__", "__mul__", "__ne__", "__radd__", "__rfloordiv__", "__rmod__", "__rmul__", "__rsub__", "__sub__", "assert_is_compatible_with", "is_compatible_with", "merge_with"], "r": "r1.8", "t": "tf.Dimension"}, {"p": "/api_docs/python/tf/Event", "k": [], "r": "r1.8", "t": "tf.Event"}, {"p": "/api_docs/python/tf/FIFOQueue", "k": ["dtypes", "name", "names", "queue_ref", "shapes", "__init__", "close", "dequeue", "dequeue_many", "dequeue_up_to", "enqueue", "enqueue_many", "from_list", "is_closed", "size"], "r": "r1.8", "t": "tf.FIFOQueue"}, {"p": "/api_docs/python/tf/FixedLenFeature", "k": ["default_value", "dtype", "shape", "__new__"], "r": "r1.8", "t": "tf.FixedLenFeature"}, {"p": "/api_docs/python/tf/FixedLenSequenceFeature", "k": ["allow_missing", "default_value", "dtype", "shape", "__new__"], "r": "r1.8", "t": "tf.FixedLenSequenceFeature"}, {"p": "/api_docs/python/tf/FixedLengthRecordReader", "k": ["reader_ref", "supports_serialize", "__init__", "num_records_produced", "num_work_units_completed", "read", "read_up_to", "reset", "restore_state", "serialize_state"], "r": "r1.8", "t": "tf.FixedLengthRecordReader"}, {"p": "/api_docs/python/tf/GPUOptions", "k": ["Experimental"], "r": "r1.8", "t": "tf.GPUOptions"}, {"p": "/api_docs/python/tf/GPUOptions/Experimental", "k": ["VirtualDevices"], "r": "r1.8", "t": "tf.GPUOptions.Experimental"}, {"p": "/api_docs/python/tf/GPUOptions/Experimental/VirtualDevices", "k": [], "r": "r1.8", "t": "tf.GPUOptions.Experimental.VirtualDevices"}, {"p": "/api_docs/python/tf/GradientTape", "k": ["__enter__", "__exit__", "__init__", "gradient", "watch", "watched_variables"], "r": "r1.8", "t": "tf.GradientTape"}, {"p": "/api_docs/python/tf/Graph", "k": ["building_function", "collections", "finalized", "graph_def_versions", "seed", "version", "__init__", "add_to_collection", "add_to_collections", "as_default", "as_graph_def", "as_graph_element", "clear_collection", "colocate_with", "container", "control_dependencies", "create_op", "device", "finalize", "get_all_collection_keys", "get_collection", "get_collection_ref", "get_name_scope", "get_operation_by_name", "get_operations", "get_tensor_by_name", "gradient_override_map", "is_feedable", "is_fetchable", "name_scope", "prevent_feeding", "prevent_fetching", "switch_to_thread_local", "unique_name"], "r": "r1.8", "t": "tf.Graph"}, {"p": "/api_docs/python/tf/GraphDef", "k": [], "r": "r1.8", "t": "tf.GraphDef"}, {"p": "/api_docs/python/tf/GraphKeys", "k": ["ACTIVATIONS", "ASSET_FILEPATHS", "BIASES", "CONCATENATED_VARIABLES", "COND_CONTEXT", "EVAL_STEP", "GLOBAL_STEP", "GLOBAL_VARIABLES", "INIT_OP", "LOCAL_INIT_OP", "LOCAL_RESOURCES", "LOCAL_VARIABLES", "LOSSES", "METRIC_VARIABLES", "MODEL_VARIABLES", "MOVING_AVERAGE_VARIABLES", "QUEUE_RUNNERS", "READY_FOR_LOCAL_INIT_OP", "READY_OP", "REGULARIZATION_LOSSES", "RESOURCES", "SAVEABLE_OBJECTS", "SAVERS", "SUMMARIES", "SUMMARY_OP", "TABLE_INITIALIZERS", "TRAINABLE_RESOURCE_VARIABLES", "TRAINABLE_VARIABLES", "TRAIN_OP", "UPDATE_OPS", "VARIABLES", "WEIGHTS", "WHILE_CONTEXT"], "r": "r1.8", "t": "tf.GraphKeys"}, {"p": "/api_docs/python/tf/GraphOptions", "k": [], "r": "r1.8", "t": "tf.GraphOptions"}, {"p": "/api_docs/python/tf/HistogramProto", "k": [], "r": "r1.8", "t": "tf.HistogramProto"}, {"p": "/api_docs/python/tf/IdentityReader", "k": ["reader_ref", "supports_serialize", "__init__", "num_records_produced", "num_work_units_completed", "read", "read_up_to", "reset", "restore_state", "serialize_state"], "r": "r1.8", "t": "tf.IdentityReader"}, {"p": "/api_docs/python/tf/IndexedSlices", "k": ["dense_shape", "device", "dtype", "graph", "indices", "name", "op", "values", "__init__", "__neg__"], "r": "r1.8", "t": "tf.IndexedSlices"}, {"p": "/api_docs/python/tf/InteractiveSession", "k": ["graph", "graph_def", "sess_str", "__init__", "as_default", "close", "list_devices", "make_callable", "partial_run", "partial_run_setup", "run"], "r": "r1.8", "t": "tf.InteractiveSession"}, {"p": "/api_docs/python/tf/LMDBReader", "k": ["reader_ref", "supports_serialize", "__init__", "num_records_produced", "num_work_units_completed", "read", "read_up_to", "reset", "restore_state", "serialize_state"], "r": "r1.8", "t": "tf.LMDBReader"}, {"p": "/api_docs/python/tf/LogMessage", "k": ["DEBUGGING", "ERROR", "FATAL", "INFO", "Level", "UNKNOWN", "WARN"], "r": "r1.8", "t": "tf.LogMessage"}, {"p": "/api_docs/python/tf/MetaGraphDef", "k": ["CollectionDefEntry", "MetaInfoDef", "SignatureDefEntry"], "r": "r1.8", "t": "tf.MetaGraphDef"}, {"p": "/api_docs/python/tf/MetaGraphDef/CollectionDefEntry", "k": [], "r": "r1.8", "t": "tf.MetaGraphDef.CollectionDefEntry"}, {"p": "/api_docs/python/tf/MetaGraphDef/MetaInfoDef", "k": [], "r": "r1.8", "t": "tf.MetaGraphDef.MetaInfoDef"}, {"p": "/api_docs/python/tf/MetaGraphDef/SignatureDefEntry", "k": [], "r": "r1.8", "t": "tf.MetaGraphDef.SignatureDefEntry"}, {"p": "/api_docs/python/tf/NameAttrList", "k": ["AttrEntry"], "r": "r1.8", "t": "tf.NameAttrList"}, {"p": "/api_docs/python/tf/NameAttrList/AttrEntry", "k": [], "r": "r1.8", "t": "tf.NameAttrList.AttrEntry"}, {"p": "/api_docs/python/tf/NoGradient", "k": [], "r": "r1.8", "t": "tf.NoGradient"}, {"p": "/api_docs/python/tf/NodeDef", "k": ["AttrEntry"], "r": "r1.8", "t": "tf.NodeDef"}, {"p": "/api_docs/python/tf/NodeDef/AttrEntry", "k": [], "r": "r1.8", "t": "tf.NodeDef.AttrEntry"}, {"p": "/api_docs/python/tf/OpError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "r1.8", "t": "tf.OpError"}, {"p": "/api_docs/python/tf/Operation", "k": ["control_inputs", "device", "graph", "inputs", "name", "node_def", "op_def", "outputs", "traceback", "traceback_with_start_lines", "type", "__init__", "colocation_groups", "get_attr", "run", "values"], "r": "r1.8", "t": "tf.Operation"}, {"p": "/api_docs/python/tf/OptimizerOptions", "k": ["DEFAULT", "GlobalJitLevel", "L0", "L1", "Level", "OFF", "ON_1", "ON_2"], "r": "r1.8", "t": "tf.OptimizerOptions"}, {"p": "/api_docs/python/tf/PaddingFIFOQueue", "k": ["dtypes", "name", "names", "queue_ref", "shapes", "__init__", "close", "dequeue", "dequeue_many", "dequeue_up_to", "enqueue", "enqueue_many", "from_list", "is_closed", "size"], "r": "r1.8", "t": "tf.PaddingFIFOQueue"}, {"p": "/api_docs/python/tf/Print", "k": [], "r": "r1.8", "t": "tf.Print"}, {"p": "/api_docs/python/tf/PriorityQueue", "k": ["dtypes", "name", "names", "queue_ref", "shapes", "__init__", "close", "dequeue", "dequeue_many", "dequeue_up_to", "enqueue", "enqueue_many", "from_list", "is_closed", "size"], "r": "r1.8", "t": "tf.PriorityQueue"}, {"p": "/api_docs/python/tf/QueueBase", "k": ["dtypes", "name", "names", "queue_ref", "shapes", "__init__", "close", "dequeue", "dequeue_many", "dequeue_up_to", "enqueue", "enqueue_many", "from_list", "is_closed", "size"], "r": "r1.8", "t": "tf.QueueBase"}, {"p": "/api_docs/python/tf/RandomShuffleQueue", "k": ["dtypes", "name", "names", "queue_ref", "shapes", "__init__", "close", "dequeue", "dequeue_many", "dequeue_up_to", "enqueue", "enqueue_many", "from_list", "is_closed", "size"], "r": "r1.8", "t": "tf.RandomShuffleQueue"}, {"p": "/api_docs/python/tf/ReaderBase", "k": ["reader_ref", "supports_serialize", "__init__", "num_records_produced", "num_work_units_completed", "read", "read_up_to", "reset", "restore_state", "serialize_state"], "r": "r1.8", "t": "tf.ReaderBase"}, {"p": "/api_docs/python/tf/RegisterGradient", "k": ["__call__", "__init__"], "r": "r1.8", "t": "tf.RegisterGradient"}, {"p": "/api_docs/python/tf/RunMetadata", "k": [], "r": "r1.8", "t": "tf.RunMetadata"}, {"p": "/api_docs/python/tf/RunOptions", "k": ["FULL_TRACE", "HARDWARE_TRACE", "NO_TRACE", "SOFTWARE_TRACE", "TraceLevel"], "r": "r1.8", "t": "tf.RunOptions"}, {"p": "/api_docs/python/tf/Session", "k": ["graph", "graph_def", "sess_str", "__enter__", "__exit__", "__init__", "as_default", "close", "list_devices", "make_callable", "partial_run", "partial_run_setup", "reset", "run"], "r": "r1.8", "t": "tf.Session"}, {"p": "/api_docs/python/tf/SessionLog", "k": ["CHECKPOINT", "START", "STATUS_UNSPECIFIED", "STOP", "SessionStatus"], "r": "r1.8", "t": "tf.SessionLog"}, {"p": "/api_docs/python/tf/SparseConditionalAccumulator", "k": ["accumulator_ref", "dtype", "name", "__init__", "apply_grad", "apply_indexed_slices_grad", "num_accumulated", "set_global_step", "take_grad", "take_indexed_slices_grad"], "r": "r1.8", "t": "tf.SparseConditionalAccumulator"}, {"p": "/api_docs/python/tf/SparseFeature", "k": ["already_sorted", "dtype", "index_key", "size", "value_key", "__new__"], "r": "r1.8", "t": "tf.SparseFeature"}, {"p": "/api_docs/python/tf/SparseTensor", "k": ["dense_shape", "dtype", "graph", "indices", "op", "values", "__div__", "__init__", "__mul__", "__truediv__", "eval", "from_value", "get_shape"], "r": "r1.8", "t": "tf.SparseTensor"}, {"p": "/api_docs/python/tf/SparseTensorValue", "k": ["dense_shape", "indices", "values", "__new__"], "r": "r1.8", "t": "tf.SparseTensorValue"}, {"p": "/api_docs/python/tf/Summary", "k": ["Audio", "Image", "Value"], "r": "r1.8", "t": "tf.Summary"}, {"p": "/api_docs/python/tf/Summary/Audio", "k": [], "r": "r1.8", "t": "tf.Summary.Audio"}, {"p": "/api_docs/python/tf/Summary/Image", "k": [], "r": "r1.8", "t": "tf.Summary.Image"}, {"p": "/api_docs/python/tf/Summary/Value", "k": [], "r": "r1.8", "t": "tf.Summary.Value"}, {"p": "/api_docs/python/tf/SummaryMetadata", "k": ["PluginData"], "r": "r1.8", "t": "tf.SummaryMetadata"}, {"p": "/api_docs/python/tf/SummaryMetadata/PluginData", "k": [], "r": "r1.8", "t": "tf.SummaryMetadata.PluginData"}, {"p": "/api_docs/python/tf/TFRecordReader", "k": ["reader_ref", "supports_serialize", "__init__", "num_records_produced", "num_work_units_completed", "read", "read_up_to", "reset", "restore_state", "serialize_state"], "r": "r1.8", "t": "tf.TFRecordReader"}, {"p": "/api_docs/python/tf/Tensor", "k": ["device", "dtype", "graph", "name", "op", "shape", "value_index", "__abs__", "__add__", "__and__", "__bool__", "__div__", "__eq__", "__floordiv__", "__ge__", "__getitem__", "__gt__", "__init__", "__invert__", "__iter__", "__le__", "__lt__", "__matmul__", "__mod__", "__mul__", "__neg__", "__nonzero__", "__or__", "__pow__", "__radd__", "__rand__", "__rdiv__", "__rfloordiv__", "__rmatmul__", "__rmod__", "__rmul__", "__ror__", "__rpow__", "__rsub__", "__rtruediv__", "__rxor__", "__sub__", "__truediv__", "__xor__", "consumers", "eval", "get_shape", "set_shape", "OVERLOADABLE_OPERATORS", "__array_priority__"], "r": "r1.8", "t": "tf.Tensor"}, {"p": "/api_docs/python/tf/TensorArray", "k": ["dtype", "flow", "handle", "__init__", "close", "concat", "gather", "grad", "identity", "read", "scatter", "size", "split", "stack", "unstack", "write"], "r": "r1.8", "t": "tf.TensorArray"}, {"p": "/api_docs/python/tf/TensorInfo", "k": ["CooSparse"], "r": "r1.8", "t": "tf.TensorInfo"}, {"p": "/api_docs/python/tf/TensorInfo/CooSparse", "k": [], "r": "r1.8", "t": "tf.TensorInfo.CooSparse"}, {"p": "/api_docs/python/tf/TensorShape", "k": ["dims", "ndims", "__bool__", "__eq__", "__getitem__", "__init__", "__iter__", "__len__", "__ne__", "__nonzero__", "as_list", "as_proto", "assert_has_rank", "assert_is_compatible_with", "assert_is_fully_defined", "assert_same_rank", "concatenate", "is_compatible_with", "is_fully_defined", "merge_with", "most_specific_compatible_shape", "num_elements", "with_rank", "with_rank_at_least", "with_rank_at_most"], "r": "r1.8", "t": "tf.TensorShape"}, {"p": "/api_docs/python/tf/TextLineReader", "k": ["reader_ref", "supports_serialize", "__init__", "num_records_produced", "num_work_units_completed", "read", "read_up_to", "reset", "restore_state", "serialize_state"], "r": "r1.8", "t": "tf.TextLineReader"}, {"p": "/api_docs/python/tf/VarLenFeature", "k": ["dtype", "__new__"], "r": "r1.8", "t": "tf.VarLenFeature"}, {"p": "/api_docs/python/tf/Variable", "k": ["SaveSliceInfo", "constraint", "device", "dtype", "graph", "initial_value", "initializer", "name", "op", "shape", "__abs__", "__add__", "__and__", "__div__", "__floordiv__", "__ge__", "__getitem__", "__gt__", "__iadd__", "__idiv__", "__imul__", "__init__", "__invert__", "__ipow__", "__irealdiv__", "__isub__", "__iter__", "__itruediv__", "__le__", "__lt__", "__matmul__", "__mod__", "__mul__", "__neg__", "__or__", "__pow__", "__radd__", "__rand__", "__rdiv__", "__rfloordiv__", "__rmatmul__", "__rmod__", "__rmul__", "__ror__", "__rpow__", "__rsub__", "__rtruediv__", "__rxor__", "__sub__", "__truediv__", "__xor__", "assign", "assign_add", "assign_sub", "count_up_to", "eval", "from_proto", "get_shape", "initialized_value", "load", "read_value", "scatter_sub", "set_shape", "to_proto", "value", "__array_priority__"], "r": "r1.8", "t": "tf.Variable"}, {"p": "/api_docs/python/tf/Variable/SaveSliceInfo", "k": ["spec", "__init__", "to_proto"], "r": "r1.8", "t": "tf.Variable.SaveSliceInfo"}, {"p": "/api_docs/python/tf/VariableScope", "k": ["caching_device", "constraint", "custom_getter", "dtype", "initializer", "name", "original_name_scope", "partitioner", "regularizer", "reuse", "use_resource", "__init__", "get_collection", "get_variable", "global_variables", "local_variables", "reuse_variables", "set_caching_device", "set_custom_getter", "set_dtype", "set_initializer", "set_partitioner", "set_regularizer", "set_use_resource", "trainable_variables"], "r": "r1.8", "t": "tf.VariableScope"}, {"p": "/api_docs/python/tf/WholeFileReader", "k": ["reader_ref", "supports_serialize", "__init__", "num_records_produced", "num_work_units_completed", "read", "read_up_to", "reset", "restore_state", "serialize_state"], "r": "r1.8", "t": "tf.WholeFileReader"}, {"p": "/api_docs/python/tf/abs", "k": [], "r": "r1.8", "t": "tf.abs"}, {"p": "/api_docs/python/tf/accumulate_n", "k": [], "r": "r1.8", "t": "tf.accumulate_n"}, {"p": "/api_docs/python/tf/acos", "k": [], "r": "r1.8", "t": "tf.acos"}, {"p": "/api_docs/python/tf/acosh", "k": [], "r": "r1.8", "t": "tf.acosh"}, {"p": "/api_docs/python/tf/add", "k": [], "r": "r1.8", "t": "tf.add"}, {"p": "/api_docs/python/tf/add_check_numerics_ops", "k": [], "r": "r1.8", "t": "tf.add_check_numerics_ops"}, {"p": "/api_docs/python/tf/add_n", "k": [], "r": "r1.8", "t": "tf.add_n"}, {"p": "/api_docs/python/tf/add_to_collection", "k": [], "r": "r1.8", "t": "tf.add_to_collection"}, {"p": "/api_docs/python/tf/add_to_collections", "k": [], "r": "r1.8", "t": "tf.add_to_collections"}, {"p": "/api_docs/python/tf/all_variables", "k": [], "r": "r1.8", "t": "tf.all_variables"}, {"p": "/api_docs/python/tf/angle", "k": [], "r": "r1.8", "t": "tf.angle"}, {"p": "/api_docs/python/tf/app", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.app"}, {"p": "/api_docs/python/tf/app/run", "k": [], "r": "r1.8", "t": "tf.app.run"}, {"p": "/api_docs/python/tf/arg_max", "k": [], "r": "r1.8", "t": "tf.arg_max"}, {"p": "/api_docs/python/tf/arg_min", "k": [], "r": "r1.8", "t": "tf.arg_min"}, {"p": "/api_docs/python/tf/argmax", "k": [], "r": "r1.8", "t": "tf.argmax"}, {"p": "/api_docs/python/tf/argmin", "k": [], "r": "r1.8", "t": "tf.argmin"}, {"p": "/api_docs/python/tf/as_dtype", "k": [], "r": "r1.8", "t": "tf.as_dtype"}, {"p": "/api_docs/python/tf/as_string", "k": [], "r": "r1.8", "t": "tf.as_string"}, {"p": "/api_docs/python/tf/asin", "k": [], "r": "r1.8", "t": "tf.asin"}, {"p": "/api_docs/python/tf/asinh", "k": [], "r": "r1.8", "t": "tf.asinh"}, {"p": "/api_docs/python/tf/assert_equal", "k": [], "r": "r1.8", "t": "tf.assert_equal"}, {"p": "/api_docs/python/tf/assert_greater", "k": [], "r": "r1.8", "t": "tf.assert_greater"}, {"p": "/api_docs/python/tf/assert_greater_equal", "k": [], "r": "r1.8", "t": "tf.assert_greater_equal"}, {"p": "/api_docs/python/tf/assert_integer", "k": [], "r": "r1.8", "t": "tf.assert_integer"}, {"p": "/api_docs/python/tf/assert_less", "k": [], "r": "r1.8", "t": "tf.assert_less"}, {"p": "/api_docs/python/tf/assert_less_equal", "k": [], "r": "r1.8", "t": "tf.assert_less_equal"}, {"p": "/api_docs/python/tf/assert_near", "k": [], "r": "r1.8", "t": "tf.assert_near"}, {"p": "/api_docs/python/tf/assert_negative", "k": [], "r": "r1.8", "t": "tf.assert_negative"}, {"p": "/api_docs/python/tf/assert_non_negative", "k": [], "r": "r1.8", "t": "tf.assert_non_negative"}, {"p": "/api_docs/python/tf/assert_non_positive", "k": [], "r": "r1.8", "t": "tf.assert_non_positive"}, {"p": "/api_docs/python/tf/assert_none_equal", "k": [], "r": "r1.8", "t": "tf.assert_none_equal"}, {"p": "/api_docs/python/tf/assert_positive", "k": [], "r": "r1.8", "t": "tf.assert_positive"}, {"p": "/api_docs/python/tf/assert_proper_iterable", "k": [], "r": "r1.8", "t": "tf.assert_proper_iterable"}, {"p": "/api_docs/python/tf/assert_rank", "k": [], "r": "r1.8", "t": "tf.assert_rank"}, {"p": "/api_docs/python/tf/assert_rank_at_least", "k": [], "r": "r1.8", "t": "tf.assert_rank_at_least"}, {"p": "/api_docs/python/tf/assert_rank_in", "k": [], "r": "r1.8", "t": "tf.assert_rank_in"}, {"p": "/api_docs/python/tf/assert_same_float_dtype", "k": [], "r": "r1.8", "t": "tf.assert_same_float_dtype"}, {"p": "/api_docs/python/tf/assert_scalar", "k": [], "r": "r1.8", "t": "tf.assert_scalar"}, {"p": "/api_docs/python/tf/assert_type", "k": [], "r": "r1.8", "t": "tf.assert_type"}, {"p": "/api_docs/python/tf/assert_variables_initialized", "k": [], "r": "r1.8", "t": "tf.assert_variables_initialized"}, {"p": "/api_docs/python/tf/assign", "k": [], "r": "r1.8", "t": "tf.assign"}, {"p": "/api_docs/python/tf/assign_add", "k": [], "r": "r1.8", "t": "tf.assign_add"}, {"p": "/api_docs/python/tf/assign_sub", "k": [], "r": "r1.8", "t": "tf.assign_sub"}, {"p": "/api_docs/python/tf/atan", "k": [], "r": "r1.8", "t": "tf.atan"}, {"p": "/api_docs/python/tf/atan2", "k": [], "r": "r1.8", "t": "tf.atan2"}, {"p": "/api_docs/python/tf/atanh", "k": [], "r": "r1.8", "t": "tf.atanh"}, {"p": "/api_docs/python/tf/batch_to_space", "k": [], "r": "r1.8", "t": "tf.batch_to_space"}, {"p": "/api_docs/python/tf/batch_to_space_nd", "k": [], "r": "r1.8", "t": "tf.batch_to_space_nd"}, {"p": "/api_docs/python/tf/betainc", "k": [], "r": "r1.8", "t": "tf.betainc"}, {"p": "/api_docs/python/tf/bincount", "k": [], "r": "r1.8", "t": "tf.bincount"}, {"p": "/api_docs/python/tf/bitcast", "k": [], "r": "r1.8", "t": "tf.bitcast"}, {"p": "/api_docs/python/tf/bitwise", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.bitwise"}, {"p": "/api_docs/python/tf/bitwise/bitwise_and", "k": [], "r": "r1.8", "t": "tf.bitwise.bitwise_and"}, {"p": "/api_docs/python/tf/bitwise/bitwise_or", "k": [], "r": "r1.8", "t": "tf.bitwise.bitwise_or"}, {"p": "/api_docs/python/tf/bitwise/bitwise_xor", "k": [], "r": "r1.8", "t": "tf.bitwise.bitwise_xor"}, {"p": "/api_docs/python/tf/bitwise/invert", "k": [], "r": "r1.8", "t": "tf.bitwise.invert"}, {"p": "/api_docs/python/tf/bitwise/left_shift", "k": [], "r": "r1.8", "t": "tf.bitwise.left_shift"}, {"p": "/api_docs/python/tf/bitwise/right_shift", "k": [], "r": "r1.8", "t": "tf.bitwise.right_shift"}, {"p": "/api_docs/python/tf/boolean_mask", "k": [], "r": "r1.8", "t": "tf.boolean_mask"}, {"p": "/api_docs/python/tf/broadcast_dynamic_shape", "k": [], "r": "r1.8", "t": "tf.broadcast_dynamic_shape"}, {"p": "/api_docs/python/tf/broadcast_static_shape", "k": [], "r": "r1.8", "t": "tf.broadcast_static_shape"}, {"p": "/api_docs/python/tf/case", "k": [], "r": "r1.8", "t": "tf.case"}, {"p": "/api_docs/python/tf/cast", "k": [], "r": "r1.8", "t": "tf.cast"}, {"p": "/api_docs/python/tf/ceil", "k": [], "r": "r1.8", "t": "tf.ceil"}, {"p": "/api_docs/python/tf/check_numerics", "k": [], "r": "r1.8", "t": "tf.check_numerics"}, {"p": "/api_docs/python/tf/cholesky", "k": [], "r": "r1.8", "t": "tf.cholesky"}, {"p": "/api_docs/python/tf/cholesky_solve", "k": [], "r": "r1.8", "t": "tf.cholesky_solve"}, {"p": "/api_docs/python/tf/clip_by_average_norm", "k": [], "r": "r1.8", "t": "tf.clip_by_average_norm"}, {"p": "/api_docs/python/tf/clip_by_global_norm", "k": [], "r": "r1.8", "t": "tf.clip_by_global_norm"}, {"p": "/api_docs/python/tf/clip_by_norm", "k": [], "r": "r1.8", "t": "tf.clip_by_norm"}, {"p": "/api_docs/python/tf/clip_by_value", "k": [], "r": "r1.8", "t": "tf.clip_by_value"}, {"p": "/api_docs/python/tf/colocate_with", "k": [], "r": "r1.8", "t": "tf.colocate_with"}, {"p": "/api_docs/python/tf/compat", "k": ["__cached__", "__loader__", "__spec__", "bytes_or_text_types", "complex_types", "integral_types", "real_types"], "r": "r1.8", "t": "tf.compat"}, {"p": "/api_docs/python/tf/compat/as_bytes", "k": [], "r": "r1.8", "t": "tf.compat.as_bytes"}, {"p": "/api_docs/python/tf/compat/as_str", "k": [], "r": "r1.8", "t": "tf.compat.as_str"}, {"p": "/api_docs/python/tf/compat/as_str_any", "k": [], "r": "r1.8", "t": "tf.compat.as_str_any"}, {"p": "/api_docs/python/tf/compat/path_to_str", "k": [], "r": "r1.8", "t": "tf.compat.path_to_str"}, {"p": "/api_docs/python/tf/complex", "k": [], "r": "r1.8", "t": "tf.complex"}, {"p": "/api_docs/python/tf/concat", "k": [], "r": "r1.8", "t": "tf.concat"}, {"p": "/api_docs/python/tf/cond", "k": [], "r": "r1.8", "t": "tf.cond"}, {"p": "/api_docs/python/tf/confusion_matrix", "k": [], "r": "r1.8", "t": "tf.confusion_matrix"}, {"p": "/api_docs/python/tf/conj", "k": [], "r": "r1.8", "t": "tf.conj"}, {"p": "/api_docs/python/tf/constant", "k": [], "r": "r1.8", "t": "tf.constant"}, {"p": "/api_docs/python/tf/constant_initializer", "k": ["__call__", "__init__", "from_config", "get_config"], "r": "r1.8", "t": "tf.constant_initializer"}, {"p": "/api_docs/python/tf/container", "k": [], "r": "r1.8", "t": "tf.container"}, {"p": "/api_docs/python/tf/contrib", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.contrib"}, {"p": "/api_docs/python/tf/contrib/batching", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.contrib.batching"}, {"p": "/api_docs/python/tf/contrib/batching/batch_function", "k": [], "r": "r1.8", "t": "tf.contrib.batching.batch_function"}, {"p": "/api_docs/python/tf/contrib/bayesflow", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.contrib.bayesflow"}, {"p": "/api_docs/python/tf/contrib/bayesflow/monte_carlo", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.contrib.bayesflow.monte_carlo"}, {"p": "/api_docs/python/tf/contrib/bayesflow/monte_carlo/expectation", "k": [], "r": "r1.8", "t": "tf.contrib.bayesflow.monte_carlo.expectation"}, {"p": "/api_docs/python/tf/contrib/bayesflow/monte_carlo/expectation_importance_sampler", "k": [], "r": "r1.8", "t": "tf.contrib.bayesflow.monte_carlo.expectation_importance_sampler"}, {"p": "/api_docs/python/tf/contrib/bayesflow/monte_carlo/expectation_importance_sampler_logspace", "k": [], "r": "r1.8", "t": "tf.contrib.bayesflow.monte_carlo.expectation_importance_sampler_logspace"}, {"p": "/api_docs/python/tf/contrib/cloud", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.contrib.cloud"}, {"p": "/api_docs/python/tf/contrib/cloud/BigQueryReader", "k": ["reader_ref", "supports_serialize", "__init__", "num_records_produced", "num_work_units_completed", "partitions", "read", "read_up_to", "reset", "restore_state", "serialize_state"], "r": "r1.8", "t": "tf.contrib.cloud.BigQueryReader"}, {"p": "/api_docs/python/tf/contrib/cluster_resolver", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.contrib.cluster_resolver"}, {"p": "/api_docs/python/tf/contrib/cluster_resolver/ClusterResolver", "k": ["cluster_spec", "master"], "r": "r1.8", "t": "tf.contrib.cluster_resolver.ClusterResolver"}, {"p": "/api_docs/python/tf/contrib/cluster_resolver/GceClusterResolver", "k": ["__init__", "cluster_spec", "master"], "r": "r1.8", "t": "tf.contrib.cluster_resolver.GceClusterResolver"}, {"p": "/api_docs/python/tf/contrib/cluster_resolver/SimpleClusterResolver", "k": ["__init__", "cluster_spec", "master"], "r": "r1.8", "t": "tf.contrib.cluster_resolver.SimpleClusterResolver"}, {"p": "/api_docs/python/tf/contrib/cluster_resolver/TPUClusterResolver", "k": ["__deepcopy__", "__init__", "cluster_spec", "get_master", "master"], "r": "r1.8", "t": "tf.contrib.cluster_resolver.TPUClusterResolver"}, {"p": "/api_docs/python/tf/contrib/cluster_resolver/UnionClusterResolver", "k": ["__init__", "cluster_spec", "master"], "r": "r1.8", "t": "tf.contrib.cluster_resolver.UnionClusterResolver"}, {"p": "/api_docs/python/tf/contrib/coder", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.contrib.coder"}, {"p": "/api_docs/python/tf/contrib/compiler", "k": [], "r": "r1.8", "t": "tf.contrib.compiler"}, {"p": "/api_docs/python/tf/contrib/copy_graph", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.contrib.copy_graph"}, {"p": "/api_docs/python/tf/contrib/copy_graph/copy_op_to_graph", "k": [], "r": "r1.8", "t": "tf.contrib.copy_graph.copy_op_to_graph"}, {"p": "/api_docs/python/tf/contrib/copy_graph/copy_variable_to_graph", "k": [], "r": "r1.8", "t": "tf.contrib.copy_graph.copy_variable_to_graph"}, {"p": "/api_docs/python/tf/contrib/copy_graph/get_copied_op", "k": [], "r": "r1.8", "t": "tf.contrib.copy_graph.get_copied_op"}, {"p": "/api_docs/python/tf/contrib/crf", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.contrib.crf"}, {"p": "/api_docs/python/tf/contrib/crf/CrfDecodeBackwardRnnCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.8", "t": "tf.contrib.crf.CrfDecodeBackwardRnnCell"}, {"p": "/api_docs/python/tf/contrib/crf/CrfDecodeForwardRnnCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.8", "t": "tf.contrib.crf.CrfDecodeForwardRnnCell"}, {"p": "/api_docs/python/tf/contrib/crf/CrfForwardRnnCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.8", "t": "tf.contrib.crf.CrfForwardRnnCell"}, {"p": "/api_docs/python/tf/contrib/crf/crf_binary_score", "k": [], "r": "r1.8", "t": "tf.contrib.crf.crf_binary_score"}, {"p": "/api_docs/python/tf/contrib/crf/crf_decode", "k": [], "r": "r1.8", "t": "tf.contrib.crf.crf_decode"}, {"p": "/api_docs/python/tf/contrib/crf/crf_log_likelihood", "k": [], "r": "r1.8", "t": "tf.contrib.crf.crf_log_likelihood"}, {"p": "/api_docs/python/tf/contrib/crf/crf_log_norm", "k": [], "r": "r1.8", "t": "tf.contrib.crf.crf_log_norm"}, {"p": "/api_docs/python/tf/contrib/crf/crf_sequence_score", "k": [], "r": "r1.8", "t": "tf.contrib.crf.crf_sequence_score"}, {"p": "/api_docs/python/tf/contrib/crf/crf_unary_score", "k": [], "r": "r1.8", "t": "tf.contrib.crf.crf_unary_score"}, {"p": "/api_docs/python/tf/contrib/crf/viterbi_decode", "k": [], "r": "r1.8", "t": "tf.contrib.crf.viterbi_decode"}, {"p": "/api_docs/python/tf/contrib/cudnn_rnn", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.contrib.cudnn_rnn"}, {"p": "/api_docs/python/tf/contrib/cudnn_rnn/CudnnCompatibleGRUCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.8", "t": "tf.contrib.cudnn_rnn.CudnnCompatibleGRUCell"}, {"p": "/api_docs/python/tf/contrib/cudnn_rnn/CudnnCompatibleLSTMCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.8", "t": "tf.contrib.cudnn_rnn.CudnnCompatibleLSTMCell"}, {"p": "/api_docs/python/tf/contrib/cudnn_rnn/CudnnGRU", "k": ["activity_regularizer", "canonical_bias_shapes", "canonical_weight_shapes", "direction", "dtype", "graph", "input", "input_mode", "input_shape", "input_size", "losses", "name", "non_trainable_variables", "non_trainable_weights", "num_dirs", "num_layers", "num_units", "output", "output_shape", "rnn_mode", "saveable", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "state_shape"], "r": "r1.8", "t": "tf.contrib.cudnn_rnn.CudnnGRU"}, {"p": "/api_docs/python/tf/contrib/cudnn_rnn/CudnnGRUSaveable", "k": ["device", "__init__", "restore"], "r": "r1.8", "t": "tf.contrib.cudnn_rnn.CudnnGRUSaveable"}, {"p": "/api_docs/python/tf/contrib/cudnn_rnn/CudnnLSTM", "k": ["activity_regularizer", "canonical_bias_shapes", "canonical_weight_shapes", "direction", "dtype", "graph", "input", "input_mode", "input_shape", "input_size", "losses", "name", "non_trainable_variables", "non_trainable_weights", "num_dirs", "num_layers", "num_units", "output", "output_shape", "rnn_mode", "saveable", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "state_shape"], "r": "r1.8", "t": "tf.contrib.cudnn_rnn.CudnnLSTM"}, {"p": "/api_docs/python/tf/contrib/cudnn_rnn/CudnnLSTMSaveable", "k": ["device", "__init__", "restore"], "r": "r1.8", "t": "tf.contrib.cudnn_rnn.CudnnLSTMSaveable"}, {"p": "/api_docs/python/tf/contrib/cudnn_rnn/CudnnRNNRelu", "k": ["activity_regularizer", "canonical_bias_shapes", "canonical_weight_shapes", "direction", "dtype", "graph", "input", "input_mode", "input_shape", "input_size", "losses", "name", "non_trainable_variables", "non_trainable_weights", "num_dirs", "num_layers", "num_units", "output", "output_shape", "rnn_mode", "saveable", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "state_shape"], "r": "r1.8", "t": "tf.contrib.cudnn_rnn.CudnnRNNRelu"}, {"p": "/api_docs/python/tf/contrib/cudnn_rnn/CudnnRNNReluSaveable", "k": ["device", "__init__", "restore"], "r": "r1.8", "t": "tf.contrib.cudnn_rnn.CudnnRNNReluSaveable"}, {"p": "/api_docs/python/tf/contrib/cudnn_rnn/CudnnRNNTanh", "k": ["activity_regularizer", "canonical_bias_shapes", "canonical_weight_shapes", "direction", "dtype", "graph", "input", "input_mode", "input_shape", "input_size", "losses", "name", "non_trainable_variables", "non_trainable_weights", "num_dirs", "num_layers", "num_units", "output", "output_shape", "rnn_mode", "saveable", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "state_shape"], "r": "r1.8", "t": "tf.contrib.cudnn_rnn.CudnnRNNTanh"}, {"p": "/api_docs/python/tf/contrib/cudnn_rnn/CudnnRNNTanhSaveable", "k": ["device", "__init__", "restore"], "r": "r1.8", "t": "tf.contrib.cudnn_rnn.CudnnRNNTanhSaveable"}, {"p": "/api_docs/python/tf/contrib/data", "k": ["AUTOTUNE", "__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.contrib.data"}, {"p": "/api_docs/python/tf/contrib/data/Counter", "k": [], "r": "r1.8", "t": "tf.contrib.data.Counter"}, {"p": "/api_docs/python/tf/contrib/data/SqlDataset", "k": ["output_classes", "output_shapes", "output_types", "__init__", "__iter__", "apply", "batch", "cache", "concatenate", "filter", "flat_map", "from_generator", "from_sparse_tensor_slices", "from_tensor_slices", "from_tensors", "interleave", "list_files", "make_initializable_iterator", "make_one_shot_iterator", "map", "padded_batch", "prefetch", "range", "repeat", "shard", "shuffle", "skip", "take", "zip"], "r": "r1.8", "t": "tf.contrib.data.SqlDataset"}, {"p": "/api_docs/python/tf/contrib/data/assert_element_shape", "k": [], "r": "r1.8", "t": "tf.contrib.data.assert_element_shape"}, {"p": "/api_docs/python/tf/contrib/data/batch_and_drop_remainder", "k": [], "r": "r1.8", "t": "tf.contrib.data.batch_and_drop_remainder"}, {"p": "/api_docs/python/tf/contrib/data/bucket_by_sequence_length", "k": [], "r": "r1.8", "t": "tf.contrib.data.bucket_by_sequence_length"}, {"p": "/api_docs/python/tf/contrib/data/dense_to_sparse_batch", "k": [], "r": "r1.8", "t": "tf.contrib.data.dense_to_sparse_batch"}, {"p": "/api_docs/python/tf/contrib/data/enumerate_dataset", "k": [], "r": "r1.8", "t": "tf.contrib.data.enumerate_dataset"}, {"p": "/api_docs/python/tf/contrib/data/get_single_element", "k": [], "r": "r1.8", "t": "tf.contrib.data.get_single_element"}, {"p": "/api_docs/python/tf/contrib/data/group_by_window", "k": [], "r": "r1.8", "t": "tf.contrib.data.group_by_window"}, {"p": "/api_docs/python/tf/contrib/data/ignore_errors", "k": [], "r": "r1.8", "t": "tf.contrib.data.ignore_errors"}, {"p": "/api_docs/python/tf/contrib/data/make_batched_features_dataset", "k": [], "r": "r1.8", "t": "tf.contrib.data.make_batched_features_dataset"}, {"p": "/api_docs/python/tf/contrib/data/make_csv_dataset", "k": [], "r": "r1.8", "t": "tf.contrib.data.make_csv_dataset"}, {"p": "/api_docs/python/tf/contrib/data/make_saveable_from_iterator", "k": [], "r": "r1.8", "t": "tf.contrib.data.make_saveable_from_iterator"}, {"p": "/api_docs/python/tf/contrib/data/map_and_batch", "k": [], "r": "r1.8", "t": "tf.contrib.data.map_and_batch"}, {"p": "/api_docs/python/tf/contrib/data/padded_batch_and_drop_remainder", "k": [], "r": "r1.8", "t": "tf.contrib.data.padded_batch_and_drop_remainder"}, {"p": "/api_docs/python/tf/contrib/data/parallel_interleave", "k": [], "r": "r1.8", "t": "tf.contrib.data.parallel_interleave"}, {"p": "/api_docs/python/tf/contrib/data/prefetch_to_device", "k": [], "r": "r1.8", "t": "tf.contrib.data.prefetch_to_device"}, {"p": "/api_docs/python/tf/contrib/data/read_batch_features", "k": [], "r": "r1.8", "t": "tf.contrib.data.read_batch_features"}, {"p": "/api_docs/python/tf/contrib/data/rejection_resample", "k": [], "r": "r1.8", "t": "tf.contrib.data.rejection_resample"}, {"p": "/api_docs/python/tf/contrib/data/scan", "k": [], "r": "r1.8", "t": "tf.contrib.data.scan"}, {"p": "/api_docs/python/tf/contrib/data/shuffle_and_repeat", "k": [], "r": "r1.8", "t": "tf.contrib.data.shuffle_and_repeat"}, {"p": "/api_docs/python/tf/contrib/data/sliding_window_batch", "k": [], "r": "r1.8", "t": "tf.contrib.data.sliding_window_batch"}, {"p": "/api_docs/python/tf/contrib/data/sloppy_interleave", "k": [], "r": "r1.8", "t": "tf.contrib.data.sloppy_interleave"}, {"p": "/api_docs/python/tf/contrib/data/unbatch", "k": [], "r": "r1.8", "t": "tf.contrib.data.unbatch"}, {"p": "/api_docs/python/tf/contrib/decision_trees", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.contrib.decision_trees"}, {"p": "/api_docs/python/tf/contrib/deprecated", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.contrib.deprecated"}, {"p": "/api_docs/python/tf/contrib/deprecated/audio_summary", "k": [], "r": "r1.8", "t": "tf.contrib.deprecated.audio_summary"}, {"p": "/api_docs/python/tf/contrib/deprecated/histogram_summary", "k": [], "r": "r1.8", "t": "tf.contrib.deprecated.histogram_summary"}, {"p": "/api_docs/python/tf/contrib/deprecated/image_summary", "k": [], "r": "r1.8", "t": "tf.contrib.deprecated.image_summary"}, {"p": "/api_docs/python/tf/contrib/deprecated/merge_all_summaries", "k": [], "r": "r1.8", "t": "tf.contrib.deprecated.merge_all_summaries"}, {"p": "/api_docs/python/tf/contrib/deprecated/merge_summary", "k": [], "r": "r1.8", "t": "tf.contrib.deprecated.merge_summary"}, {"p": "/api_docs/python/tf/contrib/deprecated/scalar_summary", "k": [], "r": "r1.8", "t": "tf.contrib.deprecated.scalar_summary"}, {"p": "/api_docs/python/tf/contrib/distribute", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.contrib.distribute"}, {"p": "/api_docs/python/tf/contrib/distribute/AllReduceCrossTowerOps", "k": ["__init__", "batch_reduce", "broadcast", "reduce"], "r": "r1.8", "t": "tf.contrib.distribute.AllReduceCrossTowerOps"}, {"p": "/api_docs/python/tf/contrib/distribute/CrossTowerOps", "k": ["__init__", "batch_reduce", "broadcast", "reduce"], "r": "r1.8", "t": "tf.contrib.distribute.CrossTowerOps"}, {"p": "/api_docs/python/tf/contrib/distribute/DistributionStrategy", "k": ["is_single_tower", "num_towers", "parameter_devices", "worker_device_index", "worker_devices", "batch_reduce", "broadcast", "call_for_each_tower", "colocate_vars_with", "configure", "distribute_dataset", "fetch", "group", "non_slot_devices", "reduce", "scope", "tower_local_var_scope", "unwrap", "update", "update_non_slot"], "r": "r1.8", "t": "tf.contrib.distribute.DistributionStrategy"}, {"p": "/api_docs/python/tf/contrib/distribute/MirroredStrategy", "k": ["is_single_tower", "num_towers", "parameter_devices", "worker_device_index", "worker_devices", "__init__", "batch_reduce", "broadcast", "call_for_each_tower", "colocate_vars_with", "configure", "distribute_dataset", "fetch", "group", "map", "non_slot_devices", "reduce", "scope", "tower_local_var_scope", "unwrap", "update", "update_non_slot"], "r": "r1.8", "t": "tf.contrib.distribute.MirroredStrategy"}, {"p": "/api_docs/python/tf/contrib/distribute/Monitor", "k": ["__init__", "run_steps"], "r": "r1.8", "t": "tf.contrib.distribute.Monitor"}, {"p": "/api_docs/python/tf/contrib/distribute/OneDeviceStrategy", "k": ["is_single_tower", "num_towers", "parameter_devices", "worker_device_index", "worker_devices", "__init__", "batch_reduce", "broadcast", "call_for_each_tower", "colocate_vars_with", "configure", "distribute_dataset", "fetch", "group", "map", "non_slot_devices", "reduce", "scope", "tower_local_var_scope", "unwrap", "update", "update_non_slot"], "r": "r1.8", "t": "tf.contrib.distribute.OneDeviceStrategy"}, {"p": "/api_docs/python/tf/contrib/distribute/ReductionToOneDeviceCrossTowerOps", "k": ["__init__", "batch_reduce", "broadcast", "reduce"], "r": "r1.8", "t": "tf.contrib.distribute.ReductionToOneDeviceCrossTowerOps"}, {"p": "/api_docs/python/tf/contrib/distribute/StandardInputStep", "k": ["distribution", "__call__", "__init__", "inputs", "step"], "r": "r1.8", "t": "tf.contrib.distribute.StandardInputStep"}, {"p": "/api_docs/python/tf/contrib/distribute/StandardSingleLossStep", "k": ["distribution", "__call__", "__init__", "inputs", "step"], "r": "r1.8", "t": "tf.contrib.distribute.StandardSingleLossStep"}, {"p": "/api_docs/python/tf/contrib/distribute/Step", "k": ["distribution", "__call__", "__init__", "inputs", "step"], "r": "r1.8", "t": "tf.contrib.distribute.Step"}, {"p": "/api_docs/python/tf/contrib/distribute/TowerContext", "k": ["device", "distribution_strategy", "is_single_tower", "num_towers", "tower_id", "__enter__", "__exit__", "__init__", "merge_call", "tower_local_var_scope"], "r": "r1.8", "t": "tf.contrib.distribute.TowerContext"}, {"p": "/api_docs/python/tf/contrib/distribute/get_cross_tower_context", "k": [], "r": "r1.8", "t": "tf.contrib.distribute.get_cross_tower_context"}, {"p": "/api_docs/python/tf/contrib/distribute/get_distribution_strategy", "k": [], "r": "r1.8", "t": "tf.contrib.distribute.get_distribution_strategy"}, {"p": "/api_docs/python/tf/contrib/distribute/get_loss_reduction", "k": [], "r": "r1.8", "t": "tf.contrib.distribute.get_loss_reduction"}, {"p": "/api_docs/python/tf/contrib/distribute/get_tower_context", "k": [], "r": "r1.8", "t": "tf.contrib.distribute.get_tower_context"}, {"p": "/api_docs/python/tf/contrib/distribute/has_distribution_strategy", "k": [], "r": "r1.8", "t": "tf.contrib.distribute.has_distribution_strategy"}, {"p": "/api_docs/python/tf/contrib/distribute/require_tower_context", "k": [], "r": "r1.8", "t": "tf.contrib.distribute.require_tower_context"}, {"p": "/api_docs/python/tf/contrib/distributions", "k": ["FULLY_REPARAMETERIZED", "NOT_REPARAMETERIZED", "__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.contrib.distributions"}, {"p": "/api_docs/python/tf/contrib/distributions/Autoregressive", "k": ["allow_nan_stats", "batch_shape", "distribution0", "distribution_fn", "dtype", "event_shape", "name", "num_steps", "parameters", "reparameterization_type", "sample0", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.8", "t": "tf.contrib.distributions.Autoregressive"}, {"p": "/api_docs/python/tf/contrib/distributions/BatchReshape", "k": ["allow_nan_stats", "batch_shape", "distribution", "dtype", "event_shape", "name", "parameters", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.8", "t": "tf.contrib.distributions.BatchReshape"}, {"p": "/api_docs/python/tf/contrib/distributions/BetaWithSoftplusConcentration", "k": ["allow_nan_stats", "batch_shape", "concentration0", "concentration1", "dtype", "event_shape", "name", "parameters", "reparameterization_type", "total_concentration", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.8", "t": "tf.contrib.distributions.BetaWithSoftplusConcentration"}, {"p": "/api_docs/python/tf/contrib/distributions/Binomial", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "logits", "name", "parameters", "probs", "reparameterization_type", "total_count", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.8", "t": "tf.contrib.distributions.Binomial"}, {"p": "/api_docs/python/tf/contrib/distributions/Cauchy", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.8", "t": "tf.contrib.distributions.Cauchy"}, {"p": "/api_docs/python/tf/contrib/distributions/Chi2", "k": ["allow_nan_stats", "batch_shape", "concentration", "df", "dtype", "event_shape", "name", "parameters", "rate", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.8", "t": "tf.contrib.distributions.Chi2"}, {"p": "/api_docs/python/tf/contrib/distributions/Chi2WithAbsDf", "k": ["allow_nan_stats", "batch_shape", "concentration", "df", "dtype", "event_shape", "name", "parameters", "rate", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.8", "t": "tf.contrib.distributions.Chi2WithAbsDf"}, {"p": "/api_docs/python/tf/contrib/distributions/ConditionalDistribution", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "name", "parameters", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.8", "t": "tf.contrib.distributions.ConditionalDistribution"}, {"p": "/api_docs/python/tf/contrib/distributions/ConditionalTransformedDistribution", "k": ["allow_nan_stats", "batch_shape", "bijector", "distribution", "dtype", "event_shape", "name", "parameters", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.8", "t": "tf.contrib.distributions.ConditionalTransformedDistribution"}, {"p": "/api_docs/python/tf/contrib/distributions/Deterministic", "k": ["allow_nan_stats", "atol", "batch_shape", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "rtol", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.8", "t": "tf.contrib.distributions.Deterministic"}, {"p": "/api_docs/python/tf/contrib/distributions/ExpRelaxedOneHotCategorical", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "event_size", "logits", "name", "parameters", "probs", "reparameterization_type", "temperature", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.8", "t": "tf.contrib.distributions.ExpRelaxedOneHotCategorical"}, {"p": "/api_docs/python/tf/contrib/distributions/ExponentialWithSoftplusRate", "k": ["allow_nan_stats", "batch_shape", "concentration", "dtype", "event_shape", "name", "parameters", "rate", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.8", "t": "tf.contrib.distributions.ExponentialWithSoftplusRate"}, {"p": "/api_docs/python/tf/contrib/distributions/GammaWithSoftplusConcentrationRate", "k": ["allow_nan_stats", "batch_shape", "concentration", "dtype", "event_shape", "name", "parameters", "rate", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.8", "t": "tf.contrib.distributions.GammaWithSoftplusConcentrationRate"}, {"p": "/api_docs/python/tf/contrib/distributions/Geometric", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "logits", "name", "parameters", "probs", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.8", "t": "tf.contrib.distributions.Geometric"}, {"p": "/api_docs/python/tf/contrib/distributions/HalfNormal", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "name", "parameters", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.8", "t": "tf.contrib.distributions.HalfNormal"}, {"p": "/api_docs/python/tf/contrib/distributions/Independent", "k": ["allow_nan_stats", "batch_shape", "distribution", "dtype", "event_shape", "name", "parameters", "reinterpreted_batch_ndims", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.8", "t": "tf.contrib.distributions.Independent"}, {"p": "/api_docs/python/tf/contrib/distributions/InverseGamma", "k": ["allow_nan_stats", "batch_shape", "concentration", "dtype", "event_shape", "name", "parameters", "rate", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.8", "t": "tf.contrib.distributions.InverseGamma"}, {"p": "/api_docs/python/tf/contrib/distributions/InverseGammaWithSoftplusConcentrationRate", "k": ["allow_nan_stats", "batch_shape", "concentration", "dtype", "event_shape", "name", "parameters", "rate", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.8", "t": "tf.contrib.distributions.InverseGammaWithSoftplusConcentrationRate"}, {"p": "/api_docs/python/tf/contrib/distributions/Kumaraswamy", "k": ["allow_nan_stats", "batch_shape", "bijector", "concentration0", "concentration1", "distribution", "dtype", "event_shape", "name", "parameters", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.8", "t": "tf.contrib.distributions.Kumaraswamy"}, {"p": "/api_docs/python/tf/contrib/distributions/LaplaceWithSoftplusScale", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.8", "t": "tf.contrib.distributions.LaplaceWithSoftplusScale"}, {"p": "/api_docs/python/tf/contrib/distributions/Logistic", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.8", "t": "tf.contrib.distributions.Logistic"}, {"p": "/api_docs/python/tf/contrib/distributions/Mixture", "k": ["allow_nan_stats", "batch_shape", "cat", "components", "dtype", "event_shape", "name", "num_components", "parameters", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "entropy_lower_bound", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.8", "t": "tf.contrib.distributions.Mixture"}, {"p": "/api_docs/python/tf/contrib/distributions/MixtureSameFamily", "k": ["allow_nan_stats", "batch_shape", "components_distribution", "dtype", "event_shape", "mixture_distribution", "name", "parameters", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.8", "t": "tf.contrib.distributions.MixtureSameFamily"}, {"p": "/api_docs/python/tf/contrib/distributions/MultivariateNormalDiag", "k": ["allow_nan_stats", "batch_shape", "bijector", "distribution", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.8", "t": "tf.contrib.distributions.MultivariateNormalDiag"}, {"p": "/api_docs/python/tf/contrib/distributions/MultivariateNormalDiagPlusLowRank", "k": ["allow_nan_stats", "batch_shape", "bijector", "distribution", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.8", "t": "tf.contrib.distributions.MultivariateNormalDiagPlusLowRank"}, {"p": "/api_docs/python/tf/contrib/distributions/MultivariateNormalDiagWithSoftplusScale", "k": ["allow_nan_stats", "batch_shape", "bijector", "distribution", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.8", "t": "tf.contrib.distributions.MultivariateNormalDiagWithSoftplusScale"}, {"p": "/api_docs/python/tf/contrib/distributions/MultivariateNormalFullCovariance", "k": ["allow_nan_stats", "batch_shape", "bijector", "distribution", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.8", "t": "tf.contrib.distributions.MultivariateNormalFullCovariance"}, {"p": "/api_docs/python/tf/contrib/distributions/MultivariateNormalTriL", "k": ["allow_nan_stats", "batch_shape", "bijector", "distribution", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.8", "t": "tf.contrib.distributions.MultivariateNormalTriL"}, {"p": "/api_docs/python/tf/contrib/distributions/NegativeBinomial", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "logits", "name", "parameters", "probs", "reparameterization_type", "total_count", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.8", "t": "tf.contrib.distributions.NegativeBinomial"}, {"p": "/api_docs/python/tf/contrib/distributions/NormalWithSoftplusScale", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.8", "t": "tf.contrib.distributions.NormalWithSoftplusScale"}, {"p": "/api_docs/python/tf/contrib/distributions/OneHotCategorical", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "event_size", "logits", "name", "parameters", "probs", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.8", "t": "tf.contrib.distributions.OneHotCategorical"}, {"p": "/api_docs/python/tf/contrib/distributions/Poisson", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "log_rate", "name", "parameters", "rate", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.8", "t": "tf.contrib.distributions.Poisson"}, {"p": "/api_docs/python/tf/contrib/distributions/PoissonLogNormalQuadratureCompound", "k": ["allow_nan_stats", "batch_shape", "distribution", "dtype", "event_shape", "loc", "mixture_distribution", "name", "parameters", "quadrature_size", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.8", "t": "tf.contrib.distributions.PoissonLogNormalQuadratureCompound"}, {"p": "/api_docs/python/tf/contrib/distributions/QuantizedDistribution", "k": ["allow_nan_stats", "batch_shape", "distribution", "dtype", "event_shape", "name", "parameters", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.8", "t": "tf.contrib.distributions.QuantizedDistribution"}, {"p": "/api_docs/python/tf/contrib/distributions/RelaxedBernoulli", "k": ["allow_nan_stats", "batch_shape", "bijector", "distribution", "dtype", "event_shape", "logits", "name", "parameters", "probs", "reparameterization_type", "temperature", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.8", "t": "tf.contrib.distributions.RelaxedBernoulli"}, {"p": "/api_docs/python/tf/contrib/distributions/RelaxedOneHotCategorical", "k": ["allow_nan_stats", "batch_shape", "bijector", "distribution", "dtype", "event_shape", "name", "parameters", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.8", "t": "tf.contrib.distributions.RelaxedOneHotCategorical"}, {"p": "/api_docs/python/tf/contrib/distributions/SeedStream", "k": ["original_seed", "salt", "__call__", "__init__"], "r": "r1.8", "t": "tf.contrib.distributions.SeedStream"}, {"p": "/api_docs/python/tf/contrib/distributions/SinhArcsinh", "k": ["allow_nan_stats", "batch_shape", "bijector", "distribution", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "skewness", "tailweight", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.8", "t": "tf.contrib.distributions.SinhArcsinh"}, {"p": "/api_docs/python/tf/contrib/distributions/StudentTWithAbsDfSoftplusScale", "k": ["allow_nan_stats", "batch_shape", "df", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.8", "t": "tf.contrib.distributions.StudentTWithAbsDfSoftplusScale"}, {"p": "/api_docs/python/tf/contrib/distributions/TransformedDistribution", "k": ["allow_nan_stats", "batch_shape", "bijector", "distribution", "dtype", "event_shape", "name", "parameters", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.8", "t": "tf.contrib.distributions.TransformedDistribution"}, {"p": "/api_docs/python/tf/contrib/distributions/VectorDeterministic", "k": ["allow_nan_stats", "atol", "batch_shape", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "rtol", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.8", "t": "tf.contrib.distributions.VectorDeterministic"}, {"p": "/api_docs/python/tf/contrib/distributions/VectorDiffeomixture", "k": ["allow_nan_stats", "batch_shape", "distribution", "dtype", "endpoint_affine", "event_shape", "grid", "interpolated_affine", "mixture_distribution", "name", "parameters", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.8", "t": "tf.contrib.distributions.VectorDiffeomixture"}, {"p": "/api_docs/python/tf/contrib/distributions/VectorExponentialDiag", "k": ["allow_nan_stats", "batch_shape", "bijector", "distribution", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.8", "t": "tf.contrib.distributions.VectorExponentialDiag"}, {"p": "/api_docs/python/tf/contrib/distributions/VectorLaplaceDiag", "k": ["allow_nan_stats", "batch_shape", "bijector", "distribution", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.8", "t": "tf.contrib.distributions.VectorLaplaceDiag"}, {"p": "/api_docs/python/tf/contrib/distributions/VectorSinhArcsinhDiag", "k": ["allow_nan_stats", "batch_shape", "bijector", "distribution", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "skewness", "tailweight", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.8", "t": "tf.contrib.distributions.VectorSinhArcsinhDiag"}, {"p": "/api_docs/python/tf/contrib/distributions/WishartCholesky", "k": ["allow_nan_stats", "batch_shape", "cholesky_input_output_matrices", "df", "dimension", "dtype", "event_shape", "name", "parameters", "reparameterization_type", "scale_operator", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_normalization", "log_prob", "log_survival_function", "mean", "mean_log_det", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "scale", "stddev", "survival_function", "variance"], "r": "r1.8", "t": "tf.contrib.distributions.WishartCholesky"}, {"p": "/api_docs/python/tf/contrib/distributions/WishartFull", "k": ["allow_nan_stats", "batch_shape", "cholesky_input_output_matrices", "df", "dimension", "dtype", "event_shape", "name", "parameters", "reparameterization_type", "scale_operator", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_normalization", "log_prob", "log_survival_function", "mean", "mean_log_det", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "scale", "stddev", "survival_function", "variance"], "r": "r1.8", "t": "tf.contrib.distributions.WishartFull"}, {"p": "/api_docs/python/tf/contrib/distributions/assign_log_moving_mean_exp", "k": [], "r": "r1.8", "t": "tf.contrib.distributions.assign_log_moving_mean_exp"}, {"p": "/api_docs/python/tf/contrib/distributions/assign_moving_mean_variance", "k": [], "r": "r1.8", "t": "tf.contrib.distributions.assign_moving_mean_variance"}, {"p": "/api_docs/python/tf/contrib/distributions/auto_correlation", "k": [], "r": "r1.8", "t": "tf.contrib.distributions.auto_correlation"}, {"p": "/api_docs/python/tf/contrib/distributions/bijectors", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.contrib.distributions.bijectors"}, {"p": "/api_docs/python/tf/contrib/distributions/bijectors/AbsoluteValue", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.8", "t": "tf.contrib.distributions.bijectors.AbsoluteValue"}, {"p": "/api_docs/python/tf/contrib/distributions/bijectors/Affine", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "scale", "shift", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.8", "t": "tf.contrib.distributions.bijectors.Affine"}, {"p": "/api_docs/python/tf/contrib/distributions/bijectors/AffineLinearOperator", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "scale", "shift", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.8", "t": "tf.contrib.distributions.bijectors.AffineLinearOperator"}, {"p": "/api_docs/python/tf/contrib/distributions/bijectors/AffineScalar", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "scale", "shift", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.8", "t": "tf.contrib.distributions.bijectors.AffineScalar"}, {"p": "/api_docs/python/tf/contrib/distributions/bijectors/BatchNormalization", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.8", "t": "tf.contrib.distributions.bijectors.BatchNormalization"}, {"p": "/api_docs/python/tf/contrib/distributions/bijectors/Chain", "k": ["bijectors", "dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.8", "t": "tf.contrib.distributions.bijectors.Chain"}, {"p": "/api_docs/python/tf/contrib/distributions/bijectors/CholeskyOuterProduct", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.8", "t": "tf.contrib.distributions.bijectors.CholeskyOuterProduct"}, {"p": "/api_docs/python/tf/contrib/distributions/bijectors/ConditionalBijector", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.8", "t": "tf.contrib.distributions.bijectors.ConditionalBijector"}, {"p": "/api_docs/python/tf/contrib/distributions/bijectors/Exp", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "power", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.8", "t": "tf.contrib.distributions.bijectors.Exp"}, {"p": "/api_docs/python/tf/contrib/distributions/bijectors/Gumbel", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "loc", "name", "scale", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.8", "t": "tf.contrib.distributions.bijectors.Gumbel"}, {"p": "/api_docs/python/tf/contrib/distributions/bijectors/Inline", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.8", "t": "tf.contrib.distributions.bijectors.Inline"}, {"p": "/api_docs/python/tf/contrib/distributions/bijectors/Invert", "k": ["bijector", "dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.8", "t": "tf.contrib.distributions.bijectors.Invert"}, {"p": "/api_docs/python/tf/contrib/distributions/bijectors/Kumaraswamy", "k": ["concentration0", "concentration1", "dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.8", "t": "tf.contrib.distributions.bijectors.Kumaraswamy"}, {"p": "/api_docs/python/tf/contrib/distributions/bijectors/MaskedAutoregressiveFlow", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.8", "t": "tf.contrib.distributions.bijectors.MaskedAutoregressiveFlow"}, {"p": "/api_docs/python/tf/contrib/distributions/bijectors/Permute", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "permutation", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.8", "t": "tf.contrib.distributions.bijectors.Permute"}, {"p": "/api_docs/python/tf/contrib/distributions/bijectors/PowerTransform", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "power", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.8", "t": "tf.contrib.distributions.bijectors.PowerTransform"}, {"p": "/api_docs/python/tf/contrib/distributions/bijectors/RealNVP", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.8", "t": "tf.contrib.distributions.bijectors.RealNVP"}, {"p": "/api_docs/python/tf/contrib/distributions/bijectors/Reshape", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.8", "t": "tf.contrib.distributions.bijectors.Reshape"}, {"p": "/api_docs/python/tf/contrib/distributions/bijectors/Sigmoid", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.8", "t": "tf.contrib.distributions.bijectors.Sigmoid"}, {"p": "/api_docs/python/tf/contrib/distributions/bijectors/SinhArcsinh", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "skewness", "tailweight", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.8", "t": "tf.contrib.distributions.bijectors.SinhArcsinh"}, {"p": "/api_docs/python/tf/contrib/distributions/bijectors/SoftmaxCentered", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.8", "t": "tf.contrib.distributions.bijectors.SoftmaxCentered"}, {"p": "/api_docs/python/tf/contrib/distributions/bijectors/Softplus", "k": ["dtype", "event_ndims", "graph_parents", "hinge_softness", "is_constant_jacobian", "name", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.8", "t": "tf.contrib.distributions.bijectors.Softplus"}, {"p": "/api_docs/python/tf/contrib/distributions/bijectors/Square", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.8", "t": "tf.contrib.distributions.bijectors.Square"}, {"p": "/api_docs/python/tf/contrib/distributions/bijectors/masked_autoregressive_default_template", "k": [], "r": "r1.8", "t": "tf.contrib.distributions.bijectors.masked_autoregressive_default_template"}, {"p": "/api_docs/python/tf/contrib/distributions/bijectors/masked_dense", "k": [], "r": "r1.8", "t": "tf.contrib.distributions.bijectors.masked_dense"}, {"p": "/api_docs/python/tf/contrib/distributions/bijectors/real_nvp_default_template", "k": [], "r": "r1.8", "t": "tf.contrib.distributions.bijectors.real_nvp_default_template"}, {"p": "/api_docs/python/tf/contrib/distributions/estimator_head_distribution_regression", "k": [], "r": "r1.8", "t": "tf.contrib.distributions.estimator_head_distribution_regression"}, {"p": "/api_docs/python/tf/contrib/distributions/fill_triangular", "k": [], "r": "r1.8", "t": "tf.contrib.distributions.fill_triangular"}, {"p": "/api_docs/python/tf/contrib/distributions/matrix_diag_transform", "k": [], "r": "r1.8", "t": "tf.contrib.distributions.matrix_diag_transform"}, {"p": "/api_docs/python/tf/contrib/distributions/moving_mean_variance", "k": [], "r": "r1.8", "t": "tf.contrib.distributions.moving_mean_variance"}, {"p": "/api_docs/python/tf/contrib/distributions/normal_conjugates_known_scale_posterior", "k": [], "r": "r1.8", "t": "tf.contrib.distributions.normal_conjugates_known_scale_posterior"}, {"p": "/api_docs/python/tf/contrib/distributions/normal_conjugates_known_scale_predictive", "k": [], "r": "r1.8", "t": "tf.contrib.distributions.normal_conjugates_known_scale_predictive"}, {"p": "/api_docs/python/tf/contrib/distributions/percentile", "k": [], "r": "r1.8", "t": "tf.contrib.distributions.percentile"}, {"p": "/api_docs/python/tf/contrib/distributions/quadrature_scheme_lognormal_gauss_hermite", "k": [], "r": "r1.8", "t": "tf.contrib.distributions.quadrature_scheme_lognormal_gauss_hermite"}, {"p": "/api_docs/python/tf/contrib/distributions/quadrature_scheme_lognormal_quantiles", "k": [], "r": "r1.8", "t": "tf.contrib.distributions.quadrature_scheme_lognormal_quantiles"}, {"p": "/api_docs/python/tf/contrib/distributions/quadrature_scheme_softmaxnormal_gauss_hermite", "k": [], "r": "r1.8", "t": "tf.contrib.distributions.quadrature_scheme_softmaxnormal_gauss_hermite"}, {"p": "/api_docs/python/tf/contrib/distributions/quadrature_scheme_softmaxnormal_quantiles", "k": [], "r": "r1.8", "t": "tf.contrib.distributions.quadrature_scheme_softmaxnormal_quantiles"}, {"p": "/api_docs/python/tf/contrib/distributions/reduce_weighted_logsumexp", "k": [], "r": "r1.8", "t": "tf.contrib.distributions.reduce_weighted_logsumexp"}, {"p": "/api_docs/python/tf/contrib/distributions/softplus_inverse", "k": [], "r": "r1.8", "t": "tf.contrib.distributions.softplus_inverse"}, {"p": "/api_docs/python/tf/contrib/distributions/tridiag", "k": [], "r": "r1.8", "t": "tf.contrib.distributions.tridiag"}, {"p": "/api_docs/python/tf/contrib/eager", "k": ["ASYNC", "DEVICE_PLACEMENT_EXPLICIT", "DEVICE_PLACEMENT_SILENT", "DEVICE_PLACEMENT_WARN", "SYNC", "__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.contrib.eager"}, {"p": "/api_docs/python/tf/contrib/eager/Checkpoint", "k": ["save_counter", "__init__", "__setattr__", "restore", "save"], "r": "r1.8", "t": "tf.contrib.eager.Checkpoint"}, {"p": "/api_docs/python/tf/contrib/eager/Checkpointable", "k": ["__setattr__"], "r": "r1.8", "t": "tf.contrib.eager.Checkpointable"}, {"p": "/api_docs/python/tf/contrib/eager/CheckpointableSaver", "k": ["__init__", "restore", "save"], "r": "r1.8", "t": "tf.contrib.eager.CheckpointableSaver"}, {"p": "/api_docs/python/tf/contrib/eager/EagerVariableStore", "k": ["__init__", "as_default", "copy", "non_trainable_variables", "trainable_variables", "variables"], "r": "r1.8", "t": "tf.contrib.eager.EagerVariableStore"}, {"p": "/api_docs/python/tf/contrib/eager/Iterator", "k": ["output_classes", "output_shapes", "output_types", "__init__", "__iter__", "__next__", "get_next", "next"], "r": "r1.8", "t": "tf.contrib.eager.Iterator"}, {"p": "/api_docs/python/tf/contrib/eager/Network", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "layers", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_layer", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "track_layer"], "r": "r1.8", "t": "tf.contrib.eager.Network"}, {"p": "/api_docs/python/tf/contrib/eager/Saver", "k": ["__init__", "restore", "save"], "r": "r1.8", "t": "tf.contrib.eager.Saver"}, {"p": "/api_docs/python/tf/contrib/eager/Sequential", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "layers", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_layer", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "track_layer"], "r": "r1.8", "t": "tf.contrib.eager.Sequential"}, {"p": "/api_docs/python/tf/contrib/eager/Variable", "k": ["SaveSliceInfo", "constraint", "create", "device", "dtype", "graph", "handle", "initial_value", "initializer", "name", "op", "shape", "__abs__", "__add__", "__and__", "__bool__", "__div__", "__floordiv__", "__ge__", "__getitem__", "__gt__", "__iadd__", "__idiv__", "__imul__", "__init__", "__int__", "__invert__", "__ipow__", "__irealdiv__", "__isub__", "__iter__", "__itruediv__", "__le__", "__lt__", "__matmul__", "__mod__", "__mul__", "__neg__", "__nonzero__", "__or__", "__pow__", "__radd__", "__rand__", "__rdiv__", "__rfloordiv__", "__rmatmul__", "__rmod__", "__rmul__", "__ror__", "__rpow__", "__rsub__", "__rtruediv__", "__rxor__", "__sub__", "__truediv__", "__xor__", "assign", "assign_add", "assign_sub", "count_up_to", "eval", "from_proto", "get_shape", "initialized_value", "load", "numpy", "read_value", "scatter_sub", "set_shape", "sparse_read", "to_proto", "value", "__array_priority__"], "r": "r1.8", "t": "tf.contrib.eager.Variable"}, {"p": "/api_docs/python/tf/contrib/eager/add_execution_callback", "k": [], "r": "r1.8", "t": "tf.contrib.eager.add_execution_callback"}, {"p": "/api_docs/python/tf/contrib/eager/async_clear_error", "k": [], "r": "r1.8", "t": "tf.contrib.eager.async_clear_error"}, {"p": "/api_docs/python/tf/contrib/eager/async_wait", "k": [], "r": "r1.8", "t": "tf.contrib.eager.async_wait"}, {"p": "/api_docs/python/tf/contrib/eager/clear_execution_callbacks", "k": [], "r": "r1.8", "t": "tf.contrib.eager.clear_execution_callbacks"}, {"p": "/api_docs/python/tf/contrib/eager/defun", "k": [], "r": "r1.8", "t": "tf.contrib.eager.defun"}, {"p": "/api_docs/python/tf/contrib/eager/execution_mode", "k": [], "r": "r1.8", "t": "tf.contrib.eager.execution_mode"}, {"p": "/api_docs/python/tf/contrib/eager/get_optimizer_variables", "k": [], "r": "r1.8", "t": "tf.contrib.eager.get_optimizer_variables"}, {"p": "/api_docs/python/tf/contrib/eager/gradients_function", "k": [], "r": "r1.8", "t": "tf.contrib.eager.gradients_function"}, {"p": "/api_docs/python/tf/contrib/eager/implicit_gradients", "k": [], "r": "r1.8", "t": "tf.contrib.eager.implicit_gradients"}, {"p": "/api_docs/python/tf/contrib/eager/implicit_value_and_gradients", "k": [], "r": "r1.8", "t": "tf.contrib.eager.implicit_value_and_gradients"}, {"p": "/api_docs/python/tf/contrib/eager/inf_callback", "k": [], "r": "r1.8", "t": "tf.contrib.eager.inf_callback"}, {"p": "/api_docs/python/tf/contrib/eager/inf_nan_callback", "k": [], "r": "r1.8", "t": "tf.contrib.eager.inf_nan_callback"}, {"p": "/api_docs/python/tf/contrib/eager/list_devices", "k": [], "r": "r1.8", "t": "tf.contrib.eager.list_devices"}, {"p": "/api_docs/python/tf/contrib/eager/make_template", "k": [], "r": "r1.8", "t": "tf.contrib.eager.make_template"}, {"p": "/api_docs/python/tf/contrib/eager/metrics", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.contrib.eager.metrics"}, {"p": "/api_docs/python/tf/contrib/eager/metrics/Accuracy", "k": ["name", "variables", "__call__", "__init__", "add_variable", "aggregate", "build", "call", "init_variables", "result", "value"], "r": "r1.8", "t": "tf.contrib.eager.metrics.Accuracy"}, {"p": "/api_docs/python/tf/contrib/eager/metrics/Mean", "k": ["name", "variables", "__call__", "__init__", "add_variable", "aggregate", "build", "call", "init_variables", "result", "value"], "r": "r1.8", "t": "tf.contrib.eager.metrics.Mean"}, {"p": "/api_docs/python/tf/contrib/eager/metrics/Metric", "k": ["name", "variables", "__call__", "__init__", "add_variable", "aggregate", "build", "call", "init_variables", "result", "value"], "r": "r1.8", "t": "tf.contrib.eager.metrics.Metric"}, {"p": "/api_docs/python/tf/contrib/eager/nan_callback", "k": [], "r": "r1.8", "t": "tf.contrib.eager.nan_callback"}, {"p": "/api_docs/python/tf/contrib/eager/num_gpus", "k": [], "r": "r1.8", "t": "tf.contrib.eager.num_gpus"}, {"p": "/api_docs/python/tf/contrib/eager/py_func", "k": [], "r": "r1.8", "t": "tf.contrib.eager.py_func"}, {"p": "/api_docs/python/tf/contrib/eager/restore_network_checkpoint", "k": [], "r": "r1.8", "t": "tf.contrib.eager.restore_network_checkpoint"}, {"p": "/api_docs/python/tf/contrib/eager/restore_variables_on_create", "k": [], "r": "r1.8", "t": "tf.contrib.eager.restore_variables_on_create"}, {"p": "/api_docs/python/tf/contrib/eager/run", "k": [], "r": "r1.8", "t": "tf.contrib.eager.run"}, {"p": "/api_docs/python/tf/contrib/eager/run_test_in_graph_and_eager_modes", "k": [], "r": "r1.8", "t": "tf.contrib.eager.run_test_in_graph_and_eager_modes"}, {"p": "/api_docs/python/tf/contrib/eager/save_network_checkpoint", "k": [], "r": "r1.8", "t": "tf.contrib.eager.save_network_checkpoint"}, {"p": "/api_docs/python/tf/contrib/eager/set_execution_mode", "k": [], "r": "r1.8", "t": "tf.contrib.eager.set_execution_mode"}, {"p": "/api_docs/python/tf/contrib/eager/seterr", "k": [], "r": "r1.8", "t": "tf.contrib.eager.seterr"}, {"p": "/api_docs/python/tf/contrib/eager/value_and_gradients_function", "k": [], "r": "r1.8", "t": "tf.contrib.eager.value_and_gradients_function"}, {"p": "/api_docs/python/tf/contrib/estimator", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.contrib.estimator"}, {"p": "/api_docs/python/tf/contrib/estimator/DNNEstimator", "k": ["config", "model_dir", "model_fn", "params", "__init__", "evaluate", "export_savedmodel", "get_variable_names", "get_variable_value", "latest_checkpoint", "predict", "train"], "r": "r1.8", "t": "tf.contrib.estimator.DNNEstimator"}, {"p": "/api_docs/python/tf/contrib/estimator/DNNLinearCombinedEstimator", "k": ["config", "model_dir", "model_fn", "params", "__init__", "evaluate", "export_savedmodel", "get_variable_names", "get_variable_value", "latest_checkpoint", "predict", "train"], "r": "r1.8", "t": "tf.contrib.estimator.DNNLinearCombinedEstimator"}, {"p": "/api_docs/python/tf/contrib/estimator/LinearEstimator", "k": ["config", "model_dir", "model_fn", "params", "__init__", "evaluate", "export_savedmodel", "get_variable_names", "get_variable_value", "latest_checkpoint", "predict", "train"], "r": "r1.8", "t": "tf.contrib.estimator.LinearEstimator"}, {"p": "/api_docs/python/tf/contrib/estimator/TowerOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "has_been_used", "minimize", "variables", "COLLECTION_FOR_GRAPH_STATES", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.8", "t": "tf.contrib.estimator.TowerOptimizer"}, {"p": "/api_docs/python/tf/contrib/estimator/add_metrics", "k": [], "r": "r1.8", "t": "tf.contrib.estimator.add_metrics"}, {"p": "/api_docs/python/tf/contrib/estimator/binary_classification_head", "k": [], "r": "r1.8", "t": "tf.contrib.estimator.binary_classification_head"}, {"p": "/api_docs/python/tf/contrib/estimator/boosted_trees_classifier_train_in_memory", "k": [], "r": "r1.8", "t": "tf.contrib.estimator.boosted_trees_classifier_train_in_memory"}, {"p": "/api_docs/python/tf/contrib/estimator/boosted_trees_regressor_train_in_memory", "k": [], "r": "r1.8", "t": "tf.contrib.estimator.boosted_trees_regressor_train_in_memory"}, {"p": "/api_docs/python/tf/contrib/estimator/call_logit_fn", "k": [], "r": "r1.8", "t": "tf.contrib.estimator.call_logit_fn"}, {"p": "/api_docs/python/tf/contrib/estimator/clip_gradients_by_norm", "k": [], "r": "r1.8", "t": "tf.contrib.estimator.clip_gradients_by_norm"}, {"p": "/api_docs/python/tf/contrib/estimator/dnn_logit_fn_builder", "k": [], "r": "r1.8", "t": "tf.contrib.estimator.dnn_logit_fn_builder"}, {"p": "/api_docs/python/tf/contrib/estimator/forward_features", "k": [], "r": "r1.8", "t": "tf.contrib.estimator.forward_features"}, {"p": "/api_docs/python/tf/contrib/estimator/linear_logit_fn_builder", "k": [], "r": "r1.8", "t": "tf.contrib.estimator.linear_logit_fn_builder"}, {"p": "/api_docs/python/tf/contrib/estimator/multi_class_head", "k": [], "r": "r1.8", "t": "tf.contrib.estimator.multi_class_head"}, {"p": "/api_docs/python/tf/contrib/estimator/multi_head", "k": [], "r": "r1.8", "t": "tf.contrib.estimator.multi_head"}, {"p": "/api_docs/python/tf/contrib/estimator/multi_label_head", "k": [], "r": "r1.8", "t": "tf.contrib.estimator.multi_label_head"}, {"p": "/api_docs/python/tf/contrib/estimator/poisson_regression_head", "k": [], "r": "r1.8", "t": "tf.contrib.estimator.poisson_regression_head"}, {"p": "/api_docs/python/tf/contrib/estimator/regression_head", "k": [], "r": "r1.8", "t": "tf.contrib.estimator.regression_head"}, {"p": "/api_docs/python/tf/contrib/estimator/replicate_model_fn", "k": [], "r": "r1.8", "t": "tf.contrib.estimator.replicate_model_fn"}, {"p": "/api_docs/python/tf/contrib/factorization", "k": ["COSINE_DISTANCE", "KMEANS_PLUS_PLUS_INIT", "RANDOM_INIT", "SQUARED_EUCLIDEAN_DISTANCE", "__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.contrib.factorization"}, {"p": "/api_docs/python/tf/contrib/factorization/GMM", "k": ["config", "model_dir", "model_fn", "__init__", "clusters", "covariances", "evaluate", "export", "export_savedmodel", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "predict_assignments", "score", "set_params", "weights", "ASSIGNMENTS", "LOG_LIKELIHOOD", "SCORES"], "r": "r1.8", "t": "tf.contrib.factorization.GMM"}, {"p": "/api_docs/python/tf/contrib/factorization/GmmAlgorithm", "k": ["__init__", "alphas", "assignments", "clusters", "covariances", "init_ops", "is_initialized", "log_likelihood_op", "scores", "training_ops", "CLUSTERS_COVS_VARIABLE", "CLUSTERS_VARIABLE", "CLUSTERS_WEIGHT"], "r": "r1.8", "t": "tf.contrib.factorization.GmmAlgorithm"}, {"p": "/api_docs/python/tf/contrib/factorization/KMeans", "k": ["__init__", "training_graph"], "r": "r1.8", "t": "tf.contrib.factorization.KMeans"}, {"p": "/api_docs/python/tf/contrib/factorization/KMeansClustering", "k": ["config", "model_dir", "model_fn", "params", "__init__", "cluster_centers", "evaluate", "export_savedmodel", "get_variable_names", "get_variable_value", "latest_checkpoint", "predict", "predict_cluster_index", "score", "train", "transform", "ALL_DISTANCES", "CLUSTER_CENTERS_VAR_NAME", "CLUSTER_INDEX", "COSINE_DISTANCE", "KMEANS_PLUS_PLUS_INIT", "RANDOM_INIT", "SCORE", "SQUARED_EUCLIDEAN_DISTANCE"], "r": "r1.8", "t": "tf.contrib.factorization.KMeansClustering"}, {"p": "/api_docs/python/tf/contrib/factorization/WALSMatrixFactorization", "k": ["config", "model_dir", "model_fn", "__init__", "evaluate", "export", "export_savedmodel", "fit", "get_col_factors", "get_params", "get_projections", "get_row_factors", "get_variable_names", "get_variable_value", "partial_fit", "predict", "set_params", "COMPLETED_SWEEPS", "INPUT_COLS", "INPUT_ROWS", "LOSS", "PROJECTION_RESULT", "PROJECTION_WEIGHTS", "PROJECT_ROW", "RWSE"], "r": "r1.8", "t": "tf.contrib.factorization.WALSMatrixFactorization"}, {"p": "/api_docs/python/tf/contrib/factorization/WALSModel", "k": ["col_factors", "col_update_prep_gramian_op", "col_weights", "initialize_col_update_op", "initialize_op", "initialize_row_update_op", "row_factors", "row_update_prep_gramian_op", "row_weights", "worker_init", "__init__", "project_col_factors", "project_row_factors", "scatter_update", "update_col_factors", "update_row_factors"], "r": "r1.8", "t": "tf.contrib.factorization.WALSModel"}, {"p": "/api_docs/python/tf/contrib/factorization/gmm", "k": [], "r": "r1.8", "t": "tf.contrib.factorization.gmm"}, {"p": "/api_docs/python/tf/contrib/feature_column", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.contrib.feature_column"}, {"p": "/api_docs/python/tf/contrib/feature_column/sequence_categorical_column_with_hash_bucket", "k": [], "r": "r1.8", "t": "tf.contrib.feature_column.sequence_categorical_column_with_hash_bucket"}, {"p": "/api_docs/python/tf/contrib/feature_column/sequence_categorical_column_with_identity", "k": [], "r": "r1.8", "t": "tf.contrib.feature_column.sequence_categorical_column_with_identity"}, {"p": "/api_docs/python/tf/contrib/feature_column/sequence_categorical_column_with_vocabulary_file", "k": [], "r": "r1.8", "t": "tf.contrib.feature_column.sequence_categorical_column_with_vocabulary_file"}, {"p": "/api_docs/python/tf/contrib/feature_column/sequence_categorical_column_with_vocabulary_list", "k": [], "r": "r1.8", "t": "tf.contrib.feature_column.sequence_categorical_column_with_vocabulary_list"}, {"p": "/api_docs/python/tf/contrib/feature_column/sequence_input_layer", "k": [], "r": "r1.8", "t": "tf.contrib.feature_column.sequence_input_layer"}, {"p": "/api_docs/python/tf/contrib/feature_column/sequence_numeric_column", "k": [], "r": "r1.8", "t": "tf.contrib.feature_column.sequence_numeric_column"}, {"p": "/api_docs/python/tf/contrib/ffmpeg", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.contrib.ffmpeg"}, {"p": "/api_docs/python/tf/contrib/ffmpeg/decode_audio", "k": [], "r": "r1.8", "t": "tf.contrib.ffmpeg.decode_audio"}, {"p": "/api_docs/python/tf/contrib/ffmpeg/decode_video", "k": [], "r": "r1.8", "t": "tf.contrib.ffmpeg.decode_video"}, {"p": "/api_docs/python/tf/contrib/ffmpeg/encode_audio", "k": [], "r": "r1.8", "t": "tf.contrib.ffmpeg.encode_audio"}, {"p": "/api_docs/python/tf/contrib/framework", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.contrib.framework"}, {"p": "/api_docs/python/tf/contrib/framework/BoundedTensorSpec", "k": ["dtype", "is_continuous", "is_discrete", "maximum", "minimum", "name", "shape", "__eq__", "__init__", "__ne__", "__reduce__", "from_spec", "from_tensor", "is_bounded", "is_compatible_with"], "r": "r1.8", "t": "tf.contrib.framework.BoundedTensorSpec"}, {"p": "/api_docs/python/tf/contrib/framework/CriticalSection", "k": ["name", "__init__", "execute"], "r": "r1.8", "t": "tf.contrib.framework.CriticalSection"}, {"p": "/api_docs/python/tf/contrib/framework/TensorSpec", "k": ["dtype", "is_continuous", "is_discrete", "name", "shape", "__eq__", "__init__", "__ne__", "__reduce__", "from_spec", "from_tensor", "is_bounded", "is_compatible_with"], "r": "r1.8", "t": "tf.contrib.framework.TensorSpec"}, {"p": "/api_docs/python/tf/contrib/framework/VariableDeviceChooser", "k": ["__call__", "__init__"], "r": "r1.8", "t": "tf.contrib.framework.VariableDeviceChooser"}, {"p": "/api_docs/python/tf/contrib/framework/add_arg_scope", "k": [], "r": "r1.8", "t": "tf.contrib.framework.add_arg_scope"}, {"p": "/api_docs/python/tf/contrib/framework/add_model_variable", "k": [], "r": "r1.8", "t": "tf.contrib.framework.add_model_variable"}, {"p": "/api_docs/python/tf/contrib/framework/arg_scope", "k": [], "r": "r1.8", "t": "tf.contrib.framework.arg_scope"}, {"p": "/api_docs/python/tf/contrib/framework/arg_scoped_arguments", "k": [], "r": "r1.8", "t": "tf.contrib.framework.arg_scoped_arguments"}, {"p": "/api_docs/python/tf/contrib/framework/argsort", "k": [], "r": "r1.8", "t": "tf.contrib.framework.argsort"}, {"p": "/api_docs/python/tf/contrib/framework/assert_global_step", "k": [], "r": "r1.8", "t": "tf.contrib.framework.assert_global_step"}, {"p": "/api_docs/python/tf/contrib/framework/assert_or_get_global_step", "k": [], "r": "r1.8", "t": "tf.contrib.framework.assert_or_get_global_step"}, {"p": "/api_docs/python/tf/contrib/framework/assert_scalar_int", "k": [], "r": "r1.8", "t": "tf.contrib.framework.assert_scalar_int"}, {"p": "/api_docs/python/tf/contrib/framework/assign_from_checkpoint", "k": [], "r": "r1.8", "t": "tf.contrib.framework.assign_from_checkpoint"}, {"p": "/api_docs/python/tf/contrib/framework/assign_from_checkpoint_fn", "k": [], "r": "r1.8", "t": "tf.contrib.framework.assign_from_checkpoint_fn"}, {"p": "/api_docs/python/tf/contrib/framework/assign_from_values", "k": [], "r": "r1.8", "t": "tf.contrib.framework.assign_from_values"}, {"p": "/api_docs/python/tf/contrib/framework/assign_from_values_fn", "k": [], "r": "r1.8", "t": "tf.contrib.framework.assign_from_values_fn"}, {"p": "/api_docs/python/tf/contrib/framework/convolutional_delta_orthogonal", "k": ["__call__", "__init__", "from_config", "get_config"], "r": "r1.8", "t": "tf.contrib.framework.convolutional_delta_orthogonal"}, {"p": "/api_docs/python/tf/contrib/framework/create_global_step", "k": [], "r": "r1.8", "t": "tf.contrib.framework.create_global_step"}, {"p": "/api_docs/python/tf/contrib/framework/current_arg_scope", "k": [], "r": "r1.8", "t": "tf.contrib.framework.current_arg_scope"}, {"p": "/api_docs/python/tf/contrib/framework/deprecated", "k": [], "r": "r1.8", "t": "tf.contrib.framework.deprecated"}, {"p": "/api_docs/python/tf/contrib/framework/deprecated_arg_values", "k": [], "r": "r1.8", "t": "tf.contrib.framework.deprecated_arg_values"}, {"p": "/api_docs/python/tf/contrib/framework/deprecated_args", "k": [], "r": "r1.8", "t": "tf.contrib.framework.deprecated_args"}, {"p": "/api_docs/python/tf/contrib/framework/filter_variables", "k": [], "r": "r1.8", "t": "tf.contrib.framework.filter_variables"}, {"p": "/api_docs/python/tf/contrib/framework/fuse_op", "k": [], "r": "r1.8", "t": "tf.contrib.framework.fuse_op"}, {"p": "/api_docs/python/tf/contrib/framework/get_global_step", "k": [], "r": "r1.8", "t": "tf.contrib.framework.get_global_step"}, {"p": "/api_docs/python/tf/contrib/framework/get_graph_from_inputs", "k": [], "r": "r1.8", "t": "tf.contrib.framework.get_graph_from_inputs"}, {"p": "/api_docs/python/tf/contrib/framework/get_local_variables", "k": [], "r": "r1.8", "t": "tf.contrib.framework.get_local_variables"}, {"p": "/api_docs/python/tf/contrib/framework/get_model_variables", "k": [], "r": "r1.8", "t": "tf.contrib.framework.get_model_variables"}, {"p": "/api_docs/python/tf/contrib/framework/get_name_scope", "k": [], "r": "r1.8", "t": "tf.contrib.framework.get_name_scope"}, {"p": "/api_docs/python/tf/contrib/framework/get_or_create_global_step", "k": [], "r": "r1.8", "t": "tf.contrib.framework.get_or_create_global_step"}, {"p": "/api_docs/python/tf/contrib/framework/get_placeholders", "k": [], "r": "r1.8", "t": "tf.contrib.framework.get_placeholders"}, {"p": "/api_docs/python/tf/contrib/framework/get_trainable_variables", "k": [], "r": "r1.8", "t": "tf.contrib.framework.get_trainable_variables"}, {"p": "/api_docs/python/tf/contrib/framework/get_unique_variable", "k": [], "r": "r1.8", "t": "tf.contrib.framework.get_unique_variable"}, {"p": "/api_docs/python/tf/contrib/framework/get_variable_full_name", "k": [], "r": "r1.8", "t": "tf.contrib.framework.get_variable_full_name"}, {"p": "/api_docs/python/tf/contrib/framework/get_variables", "k": [], "r": "r1.8", "t": "tf.contrib.framework.get_variables"}, {"p": "/api_docs/python/tf/contrib/framework/get_variables_by_name", "k": [], "r": "r1.8", "t": "tf.contrib.framework.get_variables_by_name"}, {"p": "/api_docs/python/tf/contrib/framework/get_variables_by_suffix", "k": [], "r": "r1.8", "t": "tf.contrib.framework.get_variables_by_suffix"}, {"p": "/api_docs/python/tf/contrib/framework/get_variables_to_restore", "k": [], "r": "r1.8", "t": "tf.contrib.framework.get_variables_to_restore"}, {"p": "/api_docs/python/tf/contrib/framework/global_variable", "k": [], "r": "r1.8", "t": "tf.contrib.framework.global_variable"}, {"p": "/api_docs/python/tf/contrib/framework/has_arg_scope", "k": [], "r": "r1.8", "t": "tf.contrib.framework.has_arg_scope"}, {"p": "/api_docs/python/tf/contrib/framework/init_from_checkpoint", "k": [], "r": "r1.8", "t": "tf.contrib.framework.init_from_checkpoint"}, {"p": "/api_docs/python/tf/contrib/framework/is_tensor", "k": [], "r": "r1.8", "t": "tf.contrib.framework.is_tensor"}, {"p": "/api_docs/python/tf/contrib/framework/list_variables", "k": [], "r": "r1.8", "t": "tf.contrib.framework.list_variables"}, {"p": "/api_docs/python/tf/contrib/framework/load_and_remap_matrix_initializer", "k": [], "r": "r1.8", "t": "tf.contrib.framework.load_and_remap_matrix_initializer"}, {"p": "/api_docs/python/tf/contrib/framework/load_checkpoint", "k": [], "r": "r1.8", "t": "tf.contrib.framework.load_checkpoint"}, {"p": "/api_docs/python/tf/contrib/framework/load_embedding_initializer", "k": [], "r": "r1.8", "t": "tf.contrib.framework.load_embedding_initializer"}, {"p": "/api_docs/python/tf/contrib/framework/load_linear_multiclass_bias_initializer", "k": [], "r": "r1.8", "t": "tf.contrib.framework.load_linear_multiclass_bias_initializer"}, {"p": "/api_docs/python/tf/contrib/framework/load_variable", "k": [], "r": "r1.8", "t": "tf.contrib.framework.load_variable"}, {"p": "/api_docs/python/tf/contrib/framework/load_variable_slot_initializer", "k": [], "r": "r1.8", "t": "tf.contrib.framework.load_variable_slot_initializer"}, {"p": "/api_docs/python/tf/contrib/framework/local_variable", "k": [], "r": "r1.8", "t": "tf.contrib.framework.local_variable"}, {"p": "/api_docs/python/tf/contrib/framework/model_variable", "k": [], "r": "r1.8", "t": "tf.contrib.framework.model_variable"}, {"p": "/api_docs/python/tf/contrib/framework/nest", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.contrib.framework.nest"}, {"p": "/api_docs/python/tf/contrib/framework/nest/assert_same_structure", "k": [], "r": "r1.8", "t": "tf.contrib.framework.nest.assert_same_structure"}, {"p": "/api_docs/python/tf/contrib/framework/nest/assert_shallow_structure", "k": [], "r": "r1.8", "t": "tf.contrib.framework.nest.assert_shallow_structure"}, {"p": "/api_docs/python/tf/contrib/framework/nest/flatten", "k": [], "r": "r1.8", "t": "tf.contrib.framework.nest.flatten"}, {"p": "/api_docs/python/tf/contrib/framework/nest/flatten_dict_items", "k": [], "r": "r1.8", "t": "tf.contrib.framework.nest.flatten_dict_items"}, {"p": "/api_docs/python/tf/contrib/framework/nest/flatten_up_to", "k": [], "r": "r1.8", "t": "tf.contrib.framework.nest.flatten_up_to"}, {"p": "/api_docs/python/tf/contrib/framework/nest/flatten_with_joined_string_paths", "k": [], "r": "r1.8", "t": "tf.contrib.framework.nest.flatten_with_joined_string_paths"}, {"p": "/api_docs/python/tf/contrib/framework/nest/get_traverse_shallow_structure", "k": [], "r": "r1.8", "t": "tf.contrib.framework.nest.get_traverse_shallow_structure"}, {"p": "/api_docs/python/tf/contrib/framework/nest/is_sequence", "k": [], "r": "r1.8", "t": "tf.contrib.framework.nest.is_sequence"}, {"p": "/api_docs/python/tf/contrib/framework/nest/map_structure", "k": [], "r": "r1.8", "t": "tf.contrib.framework.nest.map_structure"}, {"p": "/api_docs/python/tf/contrib/framework/nest/map_structure_up_to", "k": [], "r": "r1.8", "t": "tf.contrib.framework.nest.map_structure_up_to"}, {"p": "/api_docs/python/tf/contrib/framework/nest/pack_sequence_as", "k": [], "r": "r1.8", "t": "tf.contrib.framework.nest.pack_sequence_as"}, {"p": "/api_docs/python/tf/contrib/framework/nest/yield_flat_paths", "k": [], "r": "r1.8", "t": "tf.contrib.framework.nest.yield_flat_paths"}, {"p": "/api_docs/python/tf/contrib/framework/prepend_name_scope", "k": [], "r": "r1.8", "t": "tf.contrib.framework.prepend_name_scope"}, {"p": "/api_docs/python/tf/contrib/framework/py_func", "k": [], "r": "r1.8", "t": "tf.contrib.framework.py_func"}, {"p": "/api_docs/python/tf/contrib/framework/reduce_sum_n", "k": [], "r": "r1.8", "t": "tf.contrib.framework.reduce_sum_n"}, {"p": "/api_docs/python/tf/contrib/framework/remove_squeezable_dimensions", "k": [], "r": "r1.8", "t": "tf.contrib.framework.remove_squeezable_dimensions"}, {"p": "/api_docs/python/tf/contrib/framework/smart_case", "k": [], "r": "r1.8", "t": "tf.contrib.framework.smart_case"}, {"p": "/api_docs/python/tf/contrib/framework/smart_cond", "k": [], "r": "r1.8", "t": "tf.contrib.framework.smart_cond"}, {"p": "/api_docs/python/tf/contrib/framework/smart_constant_value", "k": [], "r": "r1.8", "t": "tf.contrib.framework.smart_constant_value"}, {"p": "/api_docs/python/tf/contrib/framework/sort", "k": [], "r": "r1.8", "t": "tf.contrib.framework.sort"}, {"p": "/api_docs/python/tf/contrib/framework/strip_name_scope", "k": [], "r": "r1.8", "t": "tf.contrib.framework.strip_name_scope"}, {"p": "/api_docs/python/tf/contrib/framework/variable", "k": [], "r": "r1.8", "t": "tf.contrib.framework.variable"}, {"p": "/api_docs/python/tf/contrib/framework/with_same_shape", "k": [], "r": "r1.8", "t": "tf.contrib.framework.with_same_shape"}, {"p": "/api_docs/python/tf/contrib/framework/with_shape", "k": [], "r": "r1.8", "t": "tf.contrib.framework.with_shape"}, {"p": "/api_docs/python/tf/contrib/framework/zero_initializer", "k": [], "r": "r1.8", "t": "tf.contrib.framework.zero_initializer"}, {"p": "/api_docs/python/tf/contrib/gan", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.contrib.gan"}, {"p": "/api_docs/python/tf/contrib/gan/ACGANModel", "k": ["discriminator_fn", "discriminator_gen_classification_logits", "discriminator_gen_outputs", "discriminator_real_classification_logits", "discriminator_real_outputs", "discriminator_scope", "discriminator_variables", "generated_data", "generator_fn", "generator_inputs", "generator_scope", "generator_variables", "one_hot_labels", "real_data", "__new__"], "r": "r1.8", "t": "tf.contrib.gan.ACGANModel"}, {"p": "/api_docs/python/tf/contrib/gan/CycleGANLoss", "k": ["loss_x2y", "loss_y2x", "__new__"], "r": "r1.8", "t": "tf.contrib.gan.CycleGANLoss"}, {"p": "/api_docs/python/tf/contrib/gan/CycleGANModel", "k": ["model_x2y", "model_y2x", "reconstructed_x", "reconstructed_y", "__new__"], "r": "r1.8", "t": "tf.contrib.gan.CycleGANModel"}, {"p": "/api_docs/python/tf/contrib/gan/GANLoss", "k": ["discriminator_loss", "generator_loss", "__new__"], "r": "r1.8", "t": "tf.contrib.gan.GANLoss"}, {"p": "/api_docs/python/tf/contrib/gan/GANModel", "k": ["discriminator_fn", "discriminator_gen_outputs", "discriminator_real_outputs", "discriminator_scope", "discriminator_variables", "generated_data", "generator_fn", "generator_inputs", "generator_scope", "generator_variables", "real_data", "__new__"], "r": "r1.8", "t": "tf.contrib.gan.GANModel"}, {"p": "/api_docs/python/tf/contrib/gan/GANTrainOps", "k": ["discriminator_train_op", "generator_train_op", "global_step_inc_op", "__new__"], "r": "r1.8", "t": "tf.contrib.gan.GANTrainOps"}, {"p": "/api_docs/python/tf/contrib/gan/GANTrainSteps", "k": ["discriminator_train_steps", "generator_train_steps", "__new__"], "r": "r1.8", "t": "tf.contrib.gan.GANTrainSteps"}, {"p": "/api_docs/python/tf/contrib/gan/InfoGANModel", "k": ["discriminator_and_aux_fn", "discriminator_fn", "discriminator_gen_outputs", "discriminator_real_outputs", "discriminator_scope", "discriminator_variables", "generated_data", "generator_fn", "generator_inputs", "generator_scope", "generator_variables", "predicted_distributions", "real_data", "structured_generator_inputs", "__new__"], "r": "r1.8", "t": "tf.contrib.gan.InfoGANModel"}, {"p": "/api_docs/python/tf/contrib/gan/RunTrainOpsHook", "k": ["__init__", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "r1.8", "t": "tf.contrib.gan.RunTrainOpsHook"}, {"p": "/api_docs/python/tf/contrib/gan/acgan_model", "k": [], "r": "r1.8", "t": "tf.contrib.gan.acgan_model"}, {"p": "/api_docs/python/tf/contrib/gan/cyclegan_loss", "k": [], "r": "r1.8", "t": "tf.contrib.gan.cyclegan_loss"}, {"p": "/api_docs/python/tf/contrib/gan/cyclegan_model", "k": [], "r": "r1.8", "t": "tf.contrib.gan.cyclegan_model"}, {"p": "/api_docs/python/tf/contrib/gan/estimator", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.contrib.gan.estimator"}, {"p": "/api_docs/python/tf/contrib/gan/estimator/GANEstimator", "k": ["config", "model_dir", "model_fn", "params", "__init__", "evaluate", "export_savedmodel", "get_variable_names", "get_variable_value", "latest_checkpoint", "predict", "train"], "r": "r1.8", "t": "tf.contrib.gan.estimator.GANEstimator"}, {"p": "/api_docs/python/tf/contrib/gan/estimator/GANHead", "k": ["logits_dimension", "name", "__init__", "create_estimator_spec", "create_loss"], "r": "r1.8", "t": "tf.contrib.gan.estimator.GANHead"}, {"p": "/api_docs/python/tf/contrib/gan/estimator/SummaryType", "k": ["IMAGES", "IMAGE_COMPARISON", "NONE", "VARIABLES", "__members__"], "r": "r1.8", "t": "tf.contrib.gan.estimator.SummaryType"}, {"p": "/api_docs/python/tf/contrib/gan/estimator/gan_estimator", "k": ["__all__", "__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.contrib.gan.estimator.gan_estimator"}, {"p": "/api_docs/python/tf/contrib/gan/estimator/gan_head", "k": [], "r": "r1.8", "t": "tf.contrib.gan.estimator.gan_head"}, {"p": "/api_docs/python/tf/contrib/gan/estimator/head", "k": ["__all__", "__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.contrib.gan.estimator.head"}, {"p": "/api_docs/python/tf/contrib/gan/eval", "k": ["INCEPTION_DEFAULT_IMAGE_SIZE", "__cached__", "__loader__", "__spec__", "frechet_inception_distance", "inception_score"], "r": "r1.8", "t": "tf.contrib.gan.eval"}, {"p": "/api_docs/python/tf/contrib/gan/eval/add_cyclegan_image_summaries", "k": [], "r": "r1.8", "t": "tf.contrib.gan.eval.add_cyclegan_image_summaries"}, {"p": "/api_docs/python/tf/contrib/gan/eval/add_gan_model_image_summaries", "k": [], "r": "r1.8", "t": "tf.contrib.gan.eval.add_gan_model_image_summaries"}, {"p": "/api_docs/python/tf/contrib/gan/eval/add_gan_model_summaries", "k": [], "r": "r1.8", "t": "tf.contrib.gan.eval.add_gan_model_summaries"}, {"p": "/api_docs/python/tf/contrib/gan/eval/add_image_comparison_summaries", "k": [], "r": "r1.8", "t": "tf.contrib.gan.eval.add_image_comparison_summaries"}, {"p": "/api_docs/python/tf/contrib/gan/eval/add_regularization_loss_summaries", "k": [], "r": "r1.8", "t": "tf.contrib.gan.eval.add_regularization_loss_summaries"}, {"p": "/api_docs/python/tf/contrib/gan/eval/classifier_metrics", "k": ["INCEPTION_DEFAULT_IMAGE_SIZE", "__all__", "__cached__", "__loader__", "__spec__", "frechet_inception_distance", "inception_score"], "r": "r1.8", "t": "tf.contrib.gan.eval.classifier_metrics"}, {"p": "/api_docs/python/tf/contrib/gan/eval/classifier_score", "k": [], "r": "r1.8", "t": "tf.contrib.gan.eval.classifier_score"}, {"p": "/api_docs/python/tf/contrib/gan/eval/classifier_score_from_logits", "k": [], "r": "r1.8", "t": "tf.contrib.gan.eval.classifier_score_from_logits"}, {"p": "/api_docs/python/tf/contrib/gan/eval/diagonal_only_frechet_classifier_distance_from_activations", "k": [], "r": "r1.8", "t": "tf.contrib.gan.eval.diagonal_only_frechet_classifier_distance_from_activations"}, {"p": "/api_docs/python/tf/contrib/gan/eval/eval_utils", "k": ["__all__", "__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.contrib.gan.eval.eval_utils"}, {"p": "/api_docs/python/tf/contrib/gan/eval/frechet_classifier_distance", "k": [], "r": "r1.8", "t": "tf.contrib.gan.eval.frechet_classifier_distance"}, {"p": "/api_docs/python/tf/contrib/gan/eval/frechet_classifier_distance_from_activations", "k": [], "r": "r1.8", "t": "tf.contrib.gan.eval.frechet_classifier_distance_from_activations"}, {"p": "/api_docs/python/tf/contrib/gan/eval/get_graph_def_from_disk", "k": [], "r": "r1.8", "t": "tf.contrib.gan.eval.get_graph_def_from_disk"}, {"p": "/api_docs/python/tf/contrib/gan/eval/get_graph_def_from_resource", "k": [], "r": "r1.8", "t": "tf.contrib.gan.eval.get_graph_def_from_resource"}, {"p": "/api_docs/python/tf/contrib/gan/eval/get_graph_def_from_url_tarball", "k": [], "r": "r1.8", "t": "tf.contrib.gan.eval.get_graph_def_from_url_tarball"}, {"p": "/api_docs/python/tf/contrib/gan/eval/image_grid", "k": [], "r": "r1.8", "t": "tf.contrib.gan.eval.image_grid"}, {"p": "/api_docs/python/tf/contrib/gan/eval/image_reshaper", "k": [], "r": "r1.8", "t": "tf.contrib.gan.eval.image_reshaper"}, {"p": "/api_docs/python/tf/contrib/gan/eval/mean_only_frechet_classifier_distance_from_activations", "k": [], "r": "r1.8", "t": "tf.contrib.gan.eval.mean_only_frechet_classifier_distance_from_activations"}, {"p": "/api_docs/python/tf/contrib/gan/eval/preprocess_image", "k": [], "r": "r1.8", "t": "tf.contrib.gan.eval.preprocess_image"}, {"p": "/api_docs/python/tf/contrib/gan/eval/run_image_classifier", "k": [], "r": "r1.8", "t": "tf.contrib.gan.eval.run_image_classifier"}, {"p": "/api_docs/python/tf/contrib/gan/eval/run_inception", "k": [], "r": "r1.8", "t": "tf.contrib.gan.eval.run_inception"}, {"p": "/api_docs/python/tf/contrib/gan/eval/sliced_wasserstein_distance", "k": [], "r": "r1.8", "t": "tf.contrib.gan.eval.sliced_wasserstein_distance"}, {"p": "/api_docs/python/tf/contrib/gan/eval/summaries", "k": ["__all__", "__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.contrib.gan.eval.summaries"}, {"p": "/api_docs/python/tf/contrib/gan/features", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.contrib.gan.features"}, {"p": "/api_docs/python/tf/contrib/gan/features/VBN", "k": ["__call__", "__init__", "reference_batch_normalization"], "r": "r1.8", "t": "tf.contrib.gan.features.VBN"}, {"p": "/api_docs/python/tf/contrib/gan/features/clip_discriminator_weights", "k": [], "r": "r1.8", "t": "tf.contrib.gan.features.clip_discriminator_weights"}, {"p": "/api_docs/python/tf/contrib/gan/features/clip_variables", "k": [], "r": "r1.8", "t": "tf.contrib.gan.features.clip_variables"}, {"p": "/api_docs/python/tf/contrib/gan/features/condition_tensor", "k": [], "r": "r1.8", "t": "tf.contrib.gan.features.condition_tensor"}, {"p": "/api_docs/python/tf/contrib/gan/features/condition_tensor_from_onehot", "k": [], "r": "r1.8", "t": "tf.contrib.gan.features.condition_tensor_from_onehot"}, {"p": "/api_docs/python/tf/contrib/gan/features/tensor_pool", "k": [], "r": "r1.8", "t": "tf.contrib.gan.features.tensor_pool"}, {"p": "/api_docs/python/tf/contrib/gan/gan_loss", "k": [], "r": "r1.8", "t": "tf.contrib.gan.gan_loss"}, {"p": "/api_docs/python/tf/contrib/gan/gan_model", "k": [], "r": "r1.8", "t": "tf.contrib.gan.gan_model"}, {"p": "/api_docs/python/tf/contrib/gan/gan_train", "k": [], "r": "r1.8", "t": "tf.contrib.gan.gan_train"}, {"p": "/api_docs/python/tf/contrib/gan/gan_train_ops", "k": [], "r": "r1.8", "t": "tf.contrib.gan.gan_train_ops"}, {"p": "/api_docs/python/tf/contrib/gan/get_joint_train_hooks", "k": [], "r": "r1.8", "t": "tf.contrib.gan.get_joint_train_hooks"}, {"p": "/api_docs/python/tf/contrib/gan/get_sequential_train_hooks", "k": [], "r": "r1.8", "t": "tf.contrib.gan.get_sequential_train_hooks"}, {"p": "/api_docs/python/tf/contrib/gan/get_sequential_train_steps", "k": [], "r": "r1.8", "t": "tf.contrib.gan.get_sequential_train_steps"}, {"p": "/api_docs/python/tf/contrib/gan/infogan_model", "k": [], "r": "r1.8", "t": "tf.contrib.gan.infogan_model"}, {"p": "/api_docs/python/tf/contrib/gan/losses", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.contrib.gan.losses"}, {"p": "/api_docs/python/tf/contrib/gan/losses/acgan_discriminator_loss", "k": [], "r": "r1.8", "t": "tf.contrib.gan.losses.acgan_discriminator_loss"}, {"p": "/api_docs/python/tf/contrib/gan/losses/acgan_generator_loss", "k": [], "r": "r1.8", "t": "tf.contrib.gan.losses.acgan_generator_loss"}, {"p": "/api_docs/python/tf/contrib/gan/losses/combine_adversarial_loss", "k": [], "r": "r1.8", "t": "tf.contrib.gan.losses.combine_adversarial_loss"}, {"p": "/api_docs/python/tf/contrib/gan/losses/cycle_consistency_loss", "k": [], "r": "r1.8", "t": "tf.contrib.gan.losses.cycle_consistency_loss"}, {"p": "/api_docs/python/tf/contrib/gan/losses/least_squares_discriminator_loss", "k": [], "r": "r1.8", "t": "tf.contrib.gan.losses.least_squares_discriminator_loss"}, {"p": "/api_docs/python/tf/contrib/gan/losses/least_squares_generator_loss", "k": [], "r": "r1.8", "t": "tf.contrib.gan.losses.least_squares_generator_loss"}, {"p": "/api_docs/python/tf/contrib/gan/losses/minimax_discriminator_loss", "k": [], "r": "r1.8", "t": "tf.contrib.gan.losses.minimax_discriminator_loss"}, {"p": "/api_docs/python/tf/contrib/gan/losses/minimax_generator_loss", "k": [], "r": "r1.8", "t": "tf.contrib.gan.losses.minimax_generator_loss"}, {"p": "/api_docs/python/tf/contrib/gan/losses/modified_discriminator_loss", "k": [], "r": "r1.8", "t": "tf.contrib.gan.losses.modified_discriminator_loss"}, {"p": "/api_docs/python/tf/contrib/gan/losses/modified_generator_loss", "k": [], "r": "r1.8", "t": "tf.contrib.gan.losses.modified_generator_loss"}, {"p": "/api_docs/python/tf/contrib/gan/losses/mutual_information_penalty", "k": [], "r": "r1.8", "t": "tf.contrib.gan.losses.mutual_information_penalty"}, {"p": "/api_docs/python/tf/contrib/gan/losses/wargs", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.contrib.gan.losses.wargs"}, {"p": "/api_docs/python/tf/contrib/gan/losses/wargs/acgan_discriminator_loss", "k": [], "r": "r1.8", "t": "tf.contrib.gan.losses.wargs.acgan_discriminator_loss"}, {"p": "/api_docs/python/tf/contrib/gan/losses/wargs/acgan_generator_loss", "k": [], "r": "r1.8", "t": "tf.contrib.gan.losses.wargs.acgan_generator_loss"}, {"p": "/api_docs/python/tf/contrib/gan/losses/wargs/combine_adversarial_loss", "k": [], "r": "r1.8", "t": "tf.contrib.gan.losses.wargs.combine_adversarial_loss"}, {"p": "/api_docs/python/tf/contrib/gan/losses/wargs/cycle_consistency_loss", "k": [], "r": "r1.8", "t": "tf.contrib.gan.losses.wargs.cycle_consistency_loss"}, {"p": "/api_docs/python/tf/contrib/gan/losses/wargs/least_squares_discriminator_loss", "k": [], "r": "r1.8", "t": "tf.contrib.gan.losses.wargs.least_squares_discriminator_loss"}, {"p": "/api_docs/python/tf/contrib/gan/losses/wargs/least_squares_generator_loss", "k": [], "r": "r1.8", "t": "tf.contrib.gan.losses.wargs.least_squares_generator_loss"}, {"p": "/api_docs/python/tf/contrib/gan/losses/wargs/minimax_discriminator_loss", "k": [], "r": "r1.8", "t": "tf.contrib.gan.losses.wargs.minimax_discriminator_loss"}, {"p": "/api_docs/python/tf/contrib/gan/losses/wargs/minimax_generator_loss", "k": [], "r": "r1.8", "t": "tf.contrib.gan.losses.wargs.minimax_generator_loss"}, {"p": "/api_docs/python/tf/contrib/gan/losses/wargs/modified_discriminator_loss", "k": [], "r": "r1.8", "t": "tf.contrib.gan.losses.wargs.modified_discriminator_loss"}, {"p": "/api_docs/python/tf/contrib/gan/losses/wargs/modified_generator_loss", "k": [], "r": "r1.8", "t": "tf.contrib.gan.losses.wargs.modified_generator_loss"}, {"p": "/api_docs/python/tf/contrib/gan/losses/wargs/mutual_information_penalty", "k": [], "r": "r1.8", "t": "tf.contrib.gan.losses.wargs.mutual_information_penalty"}, {"p": "/api_docs/python/tf/contrib/gan/losses/wargs/wasserstein_discriminator_loss", "k": [], "r": "r1.8", "t": "tf.contrib.gan.losses.wargs.wasserstein_discriminator_loss"}, {"p": "/api_docs/python/tf/contrib/gan/losses/wargs/wasserstein_generator_loss", "k": [], "r": "r1.8", "t": "tf.contrib.gan.losses.wargs.wasserstein_generator_loss"}, {"p": "/api_docs/python/tf/contrib/gan/losses/wargs/wasserstein_gradient_penalty", "k": [], "r": "r1.8", "t": "tf.contrib.gan.losses.wargs.wasserstein_gradient_penalty"}, {"p": "/api_docs/python/tf/contrib/gan/losses/wasserstein_discriminator_loss", "k": [], "r": "r1.8", "t": "tf.contrib.gan.losses.wasserstein_discriminator_loss"}, {"p": "/api_docs/python/tf/contrib/gan/losses/wasserstein_generator_loss", "k": [], "r": "r1.8", "t": "tf.contrib.gan.losses.wasserstein_generator_loss"}, {"p": "/api_docs/python/tf/contrib/gan/losses/wasserstein_gradient_penalty", "k": [], "r": "r1.8", "t": "tf.contrib.gan.losses.wasserstein_gradient_penalty"}, {"p": "/api_docs/python/tf/contrib/graph_editor", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.contrib.graph_editor"}, {"p": "/api_docs/python/tf/contrib/graph_editor/ControlOutputs", "k": ["graph", "__init__", "get", "get_all", "update"], "r": "r1.8", "t": "tf.contrib.graph_editor.ControlOutputs"}, {"p": "/api_docs/python/tf/contrib/graph_editor/SubGraphView", "k": ["connected_inputs", "connected_outputs", "graph", "inputs", "ops", "outputs", "passthroughs", "__bool__", "__copy__", "__enter__", "__exit__", "__init__", "__nonzero__", "consumers", "copy", "find_op_by_name", "input_index", "is_passthrough", "op", "output_index", "remap", "remap_default", "remap_inputs", "remap_outputs", "remap_outputs_make_unique", "remap_outputs_to_consumers", "remove_unused_ops"], "r": "r1.8", "t": "tf.contrib.graph_editor.SubGraphView"}, {"p": "/api_docs/python/tf/contrib/graph_editor/Transformer", "k": ["__call__", "__init__"], "r": "r1.8", "t": "tf.contrib.graph_editor.Transformer"}, {"p": "/api_docs/python/tf/contrib/graph_editor/TransformerInfo", "k": ["__init__", "original", "transformed"], "r": "r1.8", "t": "tf.contrib.graph_editor.TransformerInfo"}, {"p": "/api_docs/python/tf/contrib/graph_editor/add_control_inputs", "k": [], "r": "r1.8", "t": "tf.contrib.graph_editor.add_control_inputs"}, {"p": "/api_docs/python/tf/contrib/graph_editor/assign_renamed_collections_handler", "k": [], "r": "r1.8", "t": "tf.contrib.graph_editor.assign_renamed_collections_handler"}, {"p": "/api_docs/python/tf/contrib/graph_editor/bypass", "k": [], "r": "r1.8", "t": "tf.contrib.graph_editor.bypass"}, {"p": "/api_docs/python/tf/contrib/graph_editor/can_be_regex", "k": [], "r": "r1.8", "t": "tf.contrib.graph_editor.can_be_regex"}, {"p": "/api_docs/python/tf/contrib/graph_editor/check_cios", "k": [], "r": "r1.8", "t": "tf.contrib.graph_editor.check_cios"}, {"p": "/api_docs/python/tf/contrib/graph_editor/compute_boundary_ts", "k": [], "r": "r1.8", "t": "tf.contrib.graph_editor.compute_boundary_ts"}, {"p": "/api_docs/python/tf/contrib/graph_editor/connect", "k": [], "r": "r1.8", "t": "tf.contrib.graph_editor.connect"}, {"p": "/api_docs/python/tf/contrib/graph_editor/copy", "k": [], "r": "r1.8", "t": "tf.contrib.graph_editor.copy"}, {"p": "/api_docs/python/tf/contrib/graph_editor/copy_op_handler", "k": [], "r": "r1.8", "t": "tf.contrib.graph_editor.copy_op_handler"}, {"p": "/api_docs/python/tf/contrib/graph_editor/copy_with_input_replacements", "k": [], "r": "r1.8", "t": "tf.contrib.graph_editor.copy_with_input_replacements"}, {"p": "/api_docs/python/tf/contrib/graph_editor/detach", "k": [], "r": "r1.8", "t": "tf.contrib.graph_editor.detach"}, {"p": "/api_docs/python/tf/contrib/graph_editor/detach_control_inputs", "k": [], "r": "r1.8", "t": "tf.contrib.graph_editor.detach_control_inputs"}, {"p": "/api_docs/python/tf/contrib/graph_editor/detach_control_outputs", "k": [], "r": "r1.8", "t": "tf.contrib.graph_editor.detach_control_outputs"}, {"p": "/api_docs/python/tf/contrib/graph_editor/detach_inputs", "k": [], "r": "r1.8", "t": "tf.contrib.graph_editor.detach_inputs"}, {"p": "/api_docs/python/tf/contrib/graph_editor/detach_outputs", "k": [], "r": "r1.8", "t": "tf.contrib.graph_editor.detach_outputs"}, {"p": "/api_docs/python/tf/contrib/graph_editor/edit", "k": [], "r": "r1.8", "t": "tf.contrib.graph_editor.edit"}, {"p": "/api_docs/python/tf/contrib/graph_editor/filter_ops", "k": [], "r": "r1.8", "t": "tf.contrib.graph_editor.filter_ops"}, {"p": "/api_docs/python/tf/contrib/graph_editor/filter_ops_from_regex", "k": [], "r": "r1.8", "t": "tf.contrib.graph_editor.filter_ops_from_regex"}, {"p": "/api_docs/python/tf/contrib/graph_editor/filter_ts", "k": [], "r": "r1.8", "t": "tf.contrib.graph_editor.filter_ts"}, {"p": "/api_docs/python/tf/contrib/graph_editor/filter_ts_from_regex", "k": [], "r": "r1.8", "t": "tf.contrib.graph_editor.filter_ts_from_regex"}, {"p": "/api_docs/python/tf/contrib/graph_editor/get_backward_walk_ops", "k": [], "r": "r1.8", "t": "tf.contrib.graph_editor.get_backward_walk_ops"}, {"p": "/api_docs/python/tf/contrib/graph_editor/get_consuming_ops", "k": [], "r": "r1.8", "t": "tf.contrib.graph_editor.get_consuming_ops"}, {"p": "/api_docs/python/tf/contrib/graph_editor/get_forward_walk_ops", "k": [], "r": "r1.8", "t": "tf.contrib.graph_editor.get_forward_walk_ops"}, {"p": "/api_docs/python/tf/contrib/graph_editor/get_generating_ops", "k": [], "r": "r1.8", "t": "tf.contrib.graph_editor.get_generating_ops"}, {"p": "/api_docs/python/tf/contrib/graph_editor/get_name_scope_ops", "k": [], "r": "r1.8", "t": "tf.contrib.graph_editor.get_name_scope_ops"}, {"p": "/api_docs/python/tf/contrib/graph_editor/get_ops_ios", "k": [], "r": "r1.8", "t": "tf.contrib.graph_editor.get_ops_ios"}, {"p": "/api_docs/python/tf/contrib/graph_editor/get_tensors", "k": [], "r": "r1.8", "t": "tf.contrib.graph_editor.get_tensors"}, {"p": "/api_docs/python/tf/contrib/graph_editor/get_walks_intersection_ops", "k": [], "r": "r1.8", "t": "tf.contrib.graph_editor.get_walks_intersection_ops"}, {"p": "/api_docs/python/tf/contrib/graph_editor/get_walks_union_ops", "k": [], "r": "r1.8", "t": "tf.contrib.graph_editor.get_walks_union_ops"}, {"p": "/api_docs/python/tf/contrib/graph_editor/get_within_boundary_ops", "k": [], "r": "r1.8", "t": "tf.contrib.graph_editor.get_within_boundary_ops"}, {"p": "/api_docs/python/tf/contrib/graph_editor/graph_replace", "k": [], "r": "r1.8", "t": "tf.contrib.graph_editor.graph_replace"}, {"p": "/api_docs/python/tf/contrib/graph_editor/keep_t_if_possible_handler", "k": [], "r": "r1.8", "t": "tf.contrib.graph_editor.keep_t_if_possible_handler"}, {"p": "/api_docs/python/tf/contrib/graph_editor/make_list_of_op", "k": [], "r": "r1.8", "t": "tf.contrib.graph_editor.make_list_of_op"}, {"p": "/api_docs/python/tf/contrib/graph_editor/make_list_of_t", "k": [], "r": "r1.8", "t": "tf.contrib.graph_editor.make_list_of_t"}, {"p": "/api_docs/python/tf/contrib/graph_editor/make_placeholder_from_dtype_and_shape", "k": [], "r": "r1.8", "t": "tf.contrib.graph_editor.make_placeholder_from_dtype_and_shape"}, {"p": "/api_docs/python/tf/contrib/graph_editor/make_placeholder_from_tensor", "k": [], "r": "r1.8", "t": "tf.contrib.graph_editor.make_placeholder_from_tensor"}, {"p": "/api_docs/python/tf/contrib/graph_editor/make_regex", "k": [], "r": "r1.8", "t": "tf.contrib.graph_editor.make_regex"}, {"p": "/api_docs/python/tf/contrib/graph_editor/make_view", "k": [], "r": "r1.8", "t": "tf.contrib.graph_editor.make_view"}, {"p": "/api_docs/python/tf/contrib/graph_editor/make_view_from_scope", "k": [], "r": "r1.8", "t": "tf.contrib.graph_editor.make_view_from_scope"}, {"p": "/api_docs/python/tf/contrib/graph_editor/placeholder_name", "k": [], "r": "r1.8", "t": "tf.contrib.graph_editor.placeholder_name"}, {"p": "/api_docs/python/tf/contrib/graph_editor/remove_control_inputs", "k": [], "r": "r1.8", "t": "tf.contrib.graph_editor.remove_control_inputs"}, {"p": "/api_docs/python/tf/contrib/graph_editor/replace_t_with_placeholder_handler", "k": [], "r": "r1.8", "t": "tf.contrib.graph_editor.replace_t_with_placeholder_handler"}, {"p": "/api_docs/python/tf/contrib/graph_editor/reroute", "k": [], "r": "r1.8", "t": "tf.contrib.graph_editor.reroute"}, {"p": "/api_docs/python/tf/contrib/graph_editor/reroute_inputs", "k": [], "r": "r1.8", "t": "tf.contrib.graph_editor.reroute_inputs"}, {"p": "/api_docs/python/tf/contrib/graph_editor/reroute_ios", "k": [], "r": "r1.8", "t": "tf.contrib.graph_editor.reroute_ios"}, {"p": "/api_docs/python/tf/contrib/graph_editor/reroute_outputs", "k": [], "r": "r1.8", "t": "tf.contrib.graph_editor.reroute_outputs"}, {"p": "/api_docs/python/tf/contrib/graph_editor/reroute_ts", "k": [], "r": "r1.8", "t": "tf.contrib.graph_editor.reroute_ts"}, {"p": "/api_docs/python/tf/contrib/graph_editor/select", "k": [], "r": "r1.8", "t": "tf.contrib.graph_editor.select"}, {"p": "/api_docs/python/tf/contrib/graph_editor/select_ops", "k": [], "r": "r1.8", "t": "tf.contrib.graph_editor.select_ops"}, {"p": "/api_docs/python/tf/contrib/graph_editor/select_ops_and_ts", "k": [], "r": "r1.8", "t": "tf.contrib.graph_editor.select_ops_and_ts"}, {"p": "/api_docs/python/tf/contrib/graph_editor/select_ts", "k": [], "r": "r1.8", "t": "tf.contrib.graph_editor.select_ts"}, {"p": "/api_docs/python/tf/contrib/graph_editor/subgraph", "k": [], "r": "r1.8", "t": "tf.contrib.graph_editor.subgraph"}, {"p": "/api_docs/python/tf/contrib/graph_editor/swap_inputs", "k": [], "r": "r1.8", "t": "tf.contrib.graph_editor.swap_inputs"}, {"p": "/api_docs/python/tf/contrib/graph_editor/swap_ios", "k": [], "r": "r1.8", "t": "tf.contrib.graph_editor.swap_ios"}, {"p": "/api_docs/python/tf/contrib/graph_editor/swap_outputs", "k": [], "r": "r1.8", "t": "tf.contrib.graph_editor.swap_outputs"}, {"p": "/api_docs/python/tf/contrib/graph_editor/swap_ts", "k": [], "r": "r1.8", "t": "tf.contrib.graph_editor.swap_ts"}, {"p": "/api_docs/python/tf/contrib/graph_editor/transform", "k": [], "r": "r1.8", "t": "tf.contrib.graph_editor.transform"}, {"p": "/api_docs/python/tf/contrib/graph_editor/transform_op_if_inside_handler", "k": [], "r": "r1.8", "t": "tf.contrib.graph_editor.transform_op_if_inside_handler"}, {"p": "/api_docs/python/tf/contrib/graph_editor/util", "k": [], "r": "r1.8", "t": "tf.contrib.graph_editor.util"}, {"p": "/api_docs/python/tf/contrib/grid_rnn", "k": [], "r": "r1.8", "t": "tf.contrib.grid_rnn"}, {"p": "/api_docs/python/tf/contrib/image", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.contrib.image"}, {"p": "/api_docs/python/tf/contrib/image/angles_to_projective_transforms", "k": [], "r": "r1.8", "t": "tf.contrib.image.angles_to_projective_transforms"}, {"p": "/api_docs/python/tf/contrib/image/compose_transforms", "k": [], "r": "r1.8", "t": "tf.contrib.image.compose_transforms"}, {"p": "/api_docs/python/tf/contrib/image/connected_components", "k": [], "r": "r1.8", "t": "tf.contrib.image.connected_components"}, {"p": "/api_docs/python/tf/contrib/image/dense_image_warp", "k": [], "r": "r1.8", "t": "tf.contrib.image.dense_image_warp"}, {"p": "/api_docs/python/tf/contrib/image/interpolate_spline", "k": [], "r": "r1.8", "t": "tf.contrib.image.interpolate_spline"}, {"p": "/api_docs/python/tf/contrib/image/rotate", "k": [], "r": "r1.8", "t": "tf.contrib.image.rotate"}, {"p": "/api_docs/python/tf/contrib/image/single_image_random_dot_stereograms", "k": [], "r": "r1.8", "t": "tf.contrib.image.single_image_random_dot_stereograms"}, {"p": "/api_docs/python/tf/contrib/image/sparse_image_warp", "k": [], "r": "r1.8", "t": "tf.contrib.image.sparse_image_warp"}, {"p": "/api_docs/python/tf/contrib/image/transform", "k": [], "r": "r1.8", "t": "tf.contrib.image.transform"}, {"p": "/api_docs/python/tf/contrib/image/translate", "k": [], "r": "r1.8", "t": "tf.contrib.image.translate"}, {"p": "/api_docs/python/tf/contrib/image/translations_to_projective_transforms", "k": [], "r": "r1.8", "t": "tf.contrib.image.translations_to_projective_transforms"}, {"p": "/api_docs/python/tf/contrib/input_pipeline", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.contrib.input_pipeline"}, {"p": "/api_docs/python/tf/contrib/input_pipeline/obtain_next", "k": [], "r": "r1.8", "t": "tf.contrib.input_pipeline.obtain_next"}, {"p": "/api_docs/python/tf/contrib/integrate", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.contrib.integrate"}, {"p": "/api_docs/python/tf/contrib/integrate/odeint", "k": [], "r": "r1.8", "t": "tf.contrib.integrate.odeint"}, {"p": "/api_docs/python/tf/contrib/integrate/odeint_fixed", "k": [], "r": "r1.8", "t": "tf.contrib.integrate.odeint_fixed"}, {"p": "/api_docs/python/tf/contrib/keras", "k": [], "r": "r1.8", "t": "tf.contrib.keras"}, {"p": "/api_docs/python/tf/contrib/kernel_methods", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.contrib.kernel_methods"}, {"p": "/api_docs/python/tf/contrib/kernel_methods/KernelLinearClassifier", "k": ["config", "model_dir", "model_fn", "__init__", "evaluate", "export", "export_savedmodel", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "predict_classes", "predict_proba", "set_params"], "r": "r1.8", "t": "tf.contrib.kernel_methods.KernelLinearClassifier"}, {"p": "/api_docs/python/tf/contrib/kernel_methods/RandomFourierFeatureMapper", "k": ["input_dim", "name", "output_dim", "__init__", "map"], "r": "r1.8", "t": "tf.contrib.kernel_methods.RandomFourierFeatureMapper"}, {"p": "/api_docs/python/tf/contrib/kernel_methods/sparse_multiclass_hinge_loss", "k": [], "r": "r1.8", "t": "tf.contrib.kernel_methods.sparse_multiclass_hinge_loss"}, {"p": "/api_docs/python/tf/contrib/kfac", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.contrib.kfac"}, {"p": "/api_docs/python/tf/contrib/kfac/curvature_matrix_vector_products", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.contrib.kfac.curvature_matrix_vector_products"}, {"p": "/api_docs/python/tf/contrib/kfac/curvature_matrix_vector_products/CurvatureMatrixVectorProductComputer", "k": ["fisher_factor_inner_shapes", "generalized_gauss_newton_factor_inner_shapes", "__init__", "multiply_fisher", "multiply_fisher_factor", "multiply_fisher_factor_transpose", "multiply_generalized_gauss_newton", "multiply_generalized_gauss_newton_factor", "multiply_generalized_gauss_newton_factor_transpose", "multiply_hessian"], "r": "r1.8", "t": "tf.contrib.kfac.curvature_matrix_vector_products.CurvatureMatrixVectorProductComputer"}, {"p": "/api_docs/python/tf/contrib/kfac/estimator", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.contrib.kfac.estimator"}, {"p": "/api_docs/python/tf/contrib/kfac/estimator/FisherEstimator", "k": ["blocks", "damping", "factors", "name", "variables", "__init__", "create_ops_and_vars_thunks", "made_vars", "make_ops_and_vars", "make_vars_and_create_op_thunks", "multiply", "multiply_inverse", "multiply_matpower"], "r": "r1.8", "t": "tf.contrib.kfac.estimator.FisherEstimator"}, {"p": "/api_docs/python/tf/contrib/kfac/fisher_blocks", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.contrib.kfac.fisher_blocks"}, {"p": "/api_docs/python/tf/contrib/kfac/fisher_blocks/ConvDiagonalFB", "k": ["num_registered_towers", "__init__", "instantiate_factors", "multiply", "multiply_inverse", "multiply_matpower", "register_additional_tower", "register_inverse", "register_matpower", "tensors_to_compute_grads"], "r": "r1.8", "t": "tf.contrib.kfac.fisher_blocks.ConvDiagonalFB"}, {"p": "/api_docs/python/tf/contrib/kfac/fisher_blocks/ConvKFCBasicFB", "k": ["num_registered_towers", "__init__", "full_fisher_block", "instantiate_factors", "multiply", "multiply_inverse", "multiply_matpower", "register_additional_tower", "register_inverse", "register_matpower", "tensors_to_compute_grads"], "r": "r1.8", "t": "tf.contrib.kfac.fisher_blocks.ConvKFCBasicFB"}, {"p": "/api_docs/python/tf/contrib/kfac/fisher_blocks/EmbeddingKFACFB", "k": ["num_registered_towers", "__init__", "full_fisher_block", "instantiate_factors", "multiply", "multiply_inverse", "multiply_matpower", "register_additional_tower", "register_inverse", "register_matpower", "tensors_to_compute_grads"], "r": "r1.8", "t": "tf.contrib.kfac.fisher_blocks.EmbeddingKFACFB"}, {"p": "/api_docs/python/tf/contrib/kfac/fisher_blocks/FisherBlock", "k": ["num_registered_towers", "__init__", "instantiate_factors", "multiply", "multiply_inverse", "multiply_matpower", "register_inverse", "register_matpower", "tensors_to_compute_grads"], "r": "r1.8", "t": "tf.contrib.kfac.fisher_blocks.FisherBlock"}, {"p": "/api_docs/python/tf/contrib/kfac/fisher_blocks/FullFB", "k": ["num_registered_towers", "__init__", "full_fisher_block", "instantiate_factors", "multiply", "multiply_inverse", "multiply_matpower", "register_additional_tower", "register_inverse", "register_matpower", "tensors_to_compute_grads"], "r": "r1.8", "t": "tf.contrib.kfac.fisher_blocks.FullFB"}, {"p": "/api_docs/python/tf/contrib/kfac/fisher_blocks/FullyConnectedDiagonalFB", "k": ["num_registered_towers", "__init__", "instantiate_factors", "multiply", "multiply_inverse", "multiply_matpower", "register_additional_tower", "register_inverse", "register_matpower", "tensors_to_compute_grads"], "r": "r1.8", "t": "tf.contrib.kfac.fisher_blocks.FullyConnectedDiagonalFB"}, {"p": "/api_docs/python/tf/contrib/kfac/fisher_blocks/FullyConnectedKFACBasicFB", "k": ["num_registered_towers", "__init__", "full_fisher_block", "instantiate_factors", "multiply", "multiply_inverse", "multiply_matpower", "register_additional_tower", "register_inverse", "register_matpower", "tensors_to_compute_grads"], "r": "r1.8", "t": "tf.contrib.kfac.fisher_blocks.FullyConnectedKFACBasicFB"}, {"p": "/api_docs/python/tf/contrib/kfac/fisher_blocks/KroneckerProductFB", "k": ["num_registered_towers", "__init__", "full_fisher_block", "instantiate_factors", "multiply", "multiply_inverse", "multiply_matpower", "register_inverse", "register_matpower", "tensors_to_compute_grads"], "r": "r1.8", "t": "tf.contrib.kfac.fisher_blocks.KroneckerProductFB"}, {"p": "/api_docs/python/tf/contrib/kfac/fisher_blocks/NaiveDiagonalFB", "k": ["num_registered_towers", "__init__", "full_fisher_block", "instantiate_factors", "multiply", "multiply_inverse", "multiply_matpower", "register_additional_tower", "register_inverse", "register_matpower", "tensors_to_compute_grads"], "r": "r1.8", "t": "tf.contrib.kfac.fisher_blocks.NaiveDiagonalFB"}, {"p": "/api_docs/python/tf/contrib/kfac/fisher_blocks/compute_pi_adjusted_damping", "k": [], "r": "r1.8", "t": "tf.contrib.kfac.fisher_blocks.compute_pi_adjusted_damping"}, {"p": "/api_docs/python/tf/contrib/kfac/fisher_blocks/compute_pi_tracenorm", "k": [], "r": "r1.8", "t": "tf.contrib.kfac.fisher_blocks.compute_pi_tracenorm"}, {"p": "/api_docs/python/tf/contrib/kfac/fisher_blocks/normalize_damping", "k": [], "r": "r1.8", "t": "tf.contrib.kfac.fisher_blocks.normalize_damping"}, {"p": "/api_docs/python/tf/contrib/kfac/fisher_blocks/num_conv_locations", "k": [], "r": "r1.8", "t": "tf.contrib.kfac.fisher_blocks.num_conv_locations"}, {"p": "/api_docs/python/tf/contrib/kfac/fisher_blocks/set_global_constants", "k": [], "r": "r1.8", "t": "tf.contrib.kfac.fisher_blocks.set_global_constants"}, {"p": "/api_docs/python/tf/contrib/kfac/fisher_factors", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.contrib.kfac.fisher_factors"}, {"p": "/api_docs/python/tf/contrib/kfac/fisher_factors/ConvDiagonalFactor", "k": ["name", "__init__", "get_cov", "get_cov_var", "instantiate_cov_variables", "instantiate_inv_variables", "left_multiply_matpower", "make_covariance_update_op", "make_inverse_update_ops", "register_matpower", "right_multiply_matpower"], "r": "r1.8", "t": "tf.contrib.kfac.fisher_factors.ConvDiagonalFactor"}, {"p": "/api_docs/python/tf/contrib/kfac/fisher_factors/ConvInputKroneckerFactor", "k": ["name", "__init__", "get_cov", "get_cov_var", "get_eigendecomp", "get_inverse", "get_matpower", "instantiate_cov_variables", "instantiate_inv_variables", "left_multiply_matpower", "make_covariance_update_op", "make_inverse_update_ops", "register_inverse", "register_matpower", "right_multiply_matpower"], "r": "r1.8", "t": "tf.contrib.kfac.fisher_factors.ConvInputKroneckerFactor"}, {"p": "/api_docs/python/tf/contrib/kfac/fisher_factors/ConvOutputKroneckerFactor", "k": ["name", "__init__", "get_cov", "get_cov_var", "get_eigendecomp", "get_inverse", "get_matpower", "instantiate_cov_variables", "instantiate_inv_variables", "left_multiply_matpower", "make_covariance_update_op", "make_inverse_update_ops", "register_inverse", "register_matpower", "right_multiply_matpower"], "r": "r1.8", "t": "tf.contrib.kfac.fisher_factors.ConvOutputKroneckerFactor"}, {"p": "/api_docs/python/tf/contrib/kfac/fisher_factors/DiagonalFactor", "k": ["name", "__init__", "get_cov", "get_cov_var", "instantiate_cov_variables", "instantiate_inv_variables", "left_multiply_matpower", "make_covariance_update_op", "make_inverse_update_ops", "register_matpower", "right_multiply_matpower"], "r": "r1.8", "t": "tf.contrib.kfac.fisher_factors.DiagonalFactor"}, {"p": "/api_docs/python/tf/contrib/kfac/fisher_factors/EmbeddingInputKroneckerFactor", "k": ["name", "__init__", "get_cov", "get_cov_var", "instantiate_cov_variables", "instantiate_inv_variables", "left_multiply_matpower", "make_covariance_update_op", "make_inverse_update_ops", "register_matpower", "right_multiply_matpower"], "r": "r1.8", "t": "tf.contrib.kfac.fisher_factors.EmbeddingInputKroneckerFactor"}, {"p": "/api_docs/python/tf/contrib/kfac/fisher_factors/FisherFactor", "k": ["name", "__init__", "get_cov", "get_cov_var", "instantiate_cov_variables", "instantiate_inv_variables", "left_multiply_matpower", "make_covariance_update_op", "make_inverse_update_ops", "right_multiply_matpower"], "r": "r1.8", "t": "tf.contrib.kfac.fisher_factors.FisherFactor"}, {"p": "/api_docs/python/tf/contrib/kfac/fisher_factors/FullFactor", "k": ["name", "__init__", "get_cov", "get_cov_var", "get_eigendecomp", "get_inverse", "get_matpower", "instantiate_cov_variables", "instantiate_inv_variables", "left_multiply_matpower", "make_covariance_update_op", "make_inverse_update_ops", "register_inverse", "register_matpower", "right_multiply_matpower"], "r": "r1.8", "t": "tf.contrib.kfac.fisher_factors.FullFactor"}, {"p": "/api_docs/python/tf/contrib/kfac/fisher_factors/FullyConnectedDiagonalFactor", "k": ["name", "__init__", "get_cov", "get_cov_var", "instantiate_cov_variables", "instantiate_inv_variables", "left_multiply_matpower", "make_covariance_update_op", "make_inverse_update_ops", "register_matpower", "right_multiply_matpower"], "r": "r1.8", "t": "tf.contrib.kfac.fisher_factors.FullyConnectedDiagonalFactor"}, {"p": "/api_docs/python/tf/contrib/kfac/fisher_factors/FullyConnectedKroneckerFactor", "k": ["name", "__init__", "get_cov", "get_cov_var", "get_eigendecomp", "get_inverse", "get_matpower", "instantiate_cov_variables", "instantiate_inv_variables", "left_multiply_matpower", "make_covariance_update_op", "make_inverse_update_ops", "register_inverse", "register_matpower", "right_multiply_matpower"], "r": "r1.8", "t": "tf.contrib.kfac.fisher_factors.FullyConnectedKroneckerFactor"}, {"p": "/api_docs/python/tf/contrib/kfac/fisher_factors/InverseProvidingFactor", "k": ["name", "__init__", "get_cov", "get_cov_var", "get_eigendecomp", "get_inverse", "get_matpower", "instantiate_cov_variables", "instantiate_inv_variables", "left_multiply_matpower", "make_covariance_update_op", "make_inverse_update_ops", "register_inverse", "register_matpower", "right_multiply_matpower"], "r": "r1.8", "t": "tf.contrib.kfac.fisher_factors.InverseProvidingFactor"}, {"p": "/api_docs/python/tf/contrib/kfac/fisher_factors/NaiveDiagonalFactor", "k": ["name", "__init__", "get_cov", "get_cov_var", "instantiate_cov_variables", "instantiate_inv_variables", "left_multiply_matpower", "make_covariance_update_op", "make_inverse_update_ops", "register_matpower", "right_multiply_matpower"], "r": "r1.8", "t": "tf.contrib.kfac.fisher_factors.NaiveDiagonalFactor"}, {"p": "/api_docs/python/tf/contrib/kfac/fisher_factors/append_homog", "k": [], "r": "r1.8", "t": "tf.contrib.kfac.fisher_factors.append_homog"}, {"p": "/api_docs/python/tf/contrib/kfac/fisher_factors/compute_cov", "k": [], "r": "r1.8", "t": "tf.contrib.kfac.fisher_factors.compute_cov"}, {"p": "/api_docs/python/tf/contrib/kfac/fisher_factors/covariance_initializer", "k": [], "r": "r1.8", "t": "tf.contrib.kfac.fisher_factors.covariance_initializer"}, {"p": "/api_docs/python/tf/contrib/kfac/fisher_factors/diagonal_covariance_initializer", "k": [], "r": "r1.8", "t": "tf.contrib.kfac.fisher_factors.diagonal_covariance_initializer"}, {"p": "/api_docs/python/tf/contrib/kfac/fisher_factors/inverse_initializer", "k": [], "r": "r1.8", "t": "tf.contrib.kfac.fisher_factors.inverse_initializer"}, {"p": "/api_docs/python/tf/contrib/kfac/fisher_factors/scalar_or_tensor_to_string", "k": [], "r": "r1.8", "t": "tf.contrib.kfac.fisher_factors.scalar_or_tensor_to_string"}, {"p": "/api_docs/python/tf/contrib/kfac/fisher_factors/scope_string_from_name", "k": [], "r": "r1.8", "t": "tf.contrib.kfac.fisher_factors.scope_string_from_name"}, {"p": "/api_docs/python/tf/contrib/kfac/fisher_factors/scope_string_from_params", "k": [], "r": "r1.8", "t": "tf.contrib.kfac.fisher_factors.scope_string_from_params"}, {"p": "/api_docs/python/tf/contrib/kfac/fisher_factors/set_global_constants", "k": [], "r": "r1.8", "t": "tf.contrib.kfac.fisher_factors.set_global_constants"}, {"p": "/api_docs/python/tf/contrib/kfac/layer_collection", "k": ["APPROX_DIAGONAL_NAME", "APPROX_FULL_NAME", "APPROX_KRONECKER_INDEP_NAME", "APPROX_KRONECKER_NAME", "APPROX_KRONECKER_SERIES_1_NAME", "APPROX_KRONECKER_SERIES_2_NAME", "VARIABLE_SCOPE", "__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.contrib.kfac.layer_collection"}, {"p": "/api_docs/python/tf/contrib/kfac/layer_collection/LayerCollection", "k": ["default_conv2d_approximation", "default_conv2d_multi_approximation", "default_embedding_approximation", "default_embedding_multi_approximation", "default_fully_connected_approximation", "default_fully_connected_multi_approximation", "default_generic_approximation", "graph", "linked_parameters", "losses", "registered_variables", "subgraph", "towers_by_loss", "__init__", "as_default", "check_registration", "create_subgraph", "define_linked_parameters", "eval_losses", "eval_losses_on_samples", "get_blocks", "get_factors", "make_or_get_factor", "register_block", "register_categorical_predictive_distribution", "register_conv2d", "register_conv2d_multi", "register_convolution", "register_depthwise_conv2d", "register_embedding", "register_embedding_multi", "register_fully_connected", "register_fully_connected_multi", "register_generic", "register_loss_function", "register_multi_bernoulli_predictive_distribution", "register_normal_predictive_distribution", "register_separable_conv2d", "set_default_conv2d_approximation", "set_default_embedding_approximation", "set_default_fully_connected_approximation", "set_default_fully_connected_multi_approximation", "set_default_generic_approximation", "total_loss", "total_sampled_loss"], "r": "r1.8", "t": "tf.contrib.kfac.layer_collection.LayerCollection"}, {"p": "/api_docs/python/tf/contrib/kfac/layer_collection/LayerParametersDict", "k": ["__contains__", "__delitem__", "__eq__", "__ge__", "__getattribute__", "__getitem__", "__gt__", "__init__", "__iter__", "__le__", "__len__", "__lt__", "__ne__", "__new__", "__setitem__"], "r": "r1.8", "t": "tf.contrib.kfac.layer_collection.LayerParametersDict"}, {"p": "/api_docs/python/tf/contrib/kfac/layer_collection/get_default_layer_collection", "k": [], "r": "r1.8", "t": "tf.contrib.kfac.layer_collection.get_default_layer_collection"}, {"p": "/api_docs/python/tf/contrib/kfac/layer_collection/set_default_layer_collection", "k": [], "r": "r1.8", "t": "tf.contrib.kfac.layer_collection.set_default_layer_collection"}, {"p": "/api_docs/python/tf/contrib/kfac/loss_functions", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.contrib.kfac.loss_functions"}, {"p": "/api_docs/python/tf/contrib/kfac/loss_functions/CategoricalLogitsNegativeLogProbLoss", "k": ["dist", "fisher_factor_inner_shape", "fisher_factor_inner_static_shape", "hessian_factor_inner_shape", "hessian_factor_inner_static_shape", "inputs", "params", "targets", "__init__", "evaluate", "evaluate_on_sample", "multiply_fisher", "multiply_fisher_factor", "multiply_fisher_factor_replicated_one_hot", "multiply_fisher_factor_transpose", "multiply_hessian", "multiply_hessian_factor", "multiply_hessian_factor_replicated_one_hot", "multiply_hessian_factor_transpose", "sample"], "r": "r1.8", "t": "tf.contrib.kfac.loss_functions.CategoricalLogitsNegativeLogProbLoss"}, {"p": "/api_docs/python/tf/contrib/kfac/loss_functions/DistributionNegativeLogProbLoss", "k": ["dist", "fisher_factor_inner_shape", "fisher_factor_inner_static_shape", "hessian_factor_inner_shape", "hessian_factor_inner_static_shape", "inputs", "params", "targets", "__init__", "evaluate", "evaluate_on_sample", "multiply_fisher", "multiply_fisher_factor", "multiply_fisher_factor_replicated_one_hot", "multiply_fisher_factor_transpose", "multiply_hessian", "multiply_hessian_factor", "multiply_hessian_factor_replicated_one_hot", "multiply_hessian_factor_transpose", "sample"], "r": "r1.8", "t": "tf.contrib.kfac.loss_functions.DistributionNegativeLogProbLoss"}, {"p": "/api_docs/python/tf/contrib/kfac/loss_functions/LossFunction", "k": ["hessian_factor_inner_shape", "hessian_factor_inner_static_shape", "inputs", "targets", "evaluate", "multiply_hessian", "multiply_hessian_factor", "multiply_hessian_factor_replicated_one_hot", "multiply_hessian_factor_transpose"], "r": "r1.8", "t": "tf.contrib.kfac.loss_functions.LossFunction"}, {"p": "/api_docs/python/tf/contrib/kfac/loss_functions/MultiBernoulliNegativeLogProbLoss", "k": ["dist", "fisher_factor_inner_shape", "fisher_factor_inner_static_shape", "hessian_factor_inner_shape", "hessian_factor_inner_static_shape", "inputs", "params", "targets", "__init__", "evaluate", "evaluate_on_sample", "multiply_fisher", "multiply_fisher_factor", "multiply_fisher_factor_replicated_one_hot", "multiply_fisher_factor_transpose", "multiply_hessian", "multiply_hessian_factor", "multiply_hessian_factor_replicated_one_hot", "multiply_hessian_factor_transpose", "sample"], "r": "r1.8", "t": "tf.contrib.kfac.loss_functions.MultiBernoulliNegativeLogProbLoss"}, {"p": "/api_docs/python/tf/contrib/kfac/loss_functions/NaturalParamsNegativeLogProbLoss", "k": ["fisher_factor_inner_shape", "fisher_factor_inner_static_shape", "hessian_factor_inner_shape", "hessian_factor_inner_static_shape", "inputs", "params", "targets", "__init__", "evaluate", "evaluate_on_sample", "multiply_fisher", "multiply_fisher_factor", "multiply_fisher_factor_replicated_one_hot", "multiply_fisher_factor_transpose", "multiply_hessian", "multiply_hessian_factor", "multiply_hessian_factor_replicated_one_hot", "multiply_hessian_factor_transpose", "sample"], "r": "r1.8", "t": "tf.contrib.kfac.loss_functions.NaturalParamsNegativeLogProbLoss"}, {"p": "/api_docs/python/tf/contrib/kfac/loss_functions/NegativeLogProbLoss", "k": ["fisher_factor_inner_shape", "fisher_factor_inner_static_shape", "hessian_factor_inner_shape", "hessian_factor_inner_static_shape", "inputs", "params", "targets", "__init__", "evaluate", "evaluate_on_sample", "multiply_fisher", "multiply_fisher_factor", "multiply_fisher_factor_replicated_one_hot", "multiply_fisher_factor_transpose", "multiply_hessian", "multiply_hessian_factor", "multiply_hessian_factor_replicated_one_hot", "multiply_hessian_factor_transpose", "sample"], "r": "r1.8", "t": "tf.contrib.kfac.loss_functions.NegativeLogProbLoss"}, {"p": "/api_docs/python/tf/contrib/kfac/loss_functions/NormalMeanNegativeLogProbLoss", "k": ["dist", "fisher_factor_inner_shape", "fisher_factor_inner_static_shape", "hessian_factor_inner_shape", "hessian_factor_inner_static_shape", "inputs", "params", "targets", "__init__", "evaluate", "evaluate_on_sample", "multiply_fisher", "multiply_fisher_factor", "multiply_fisher_factor_replicated_one_hot", "multiply_fisher_factor_transpose", "multiply_hessian", "multiply_hessian_factor", "multiply_hessian_factor_replicated_one_hot", "multiply_hessian_factor_transpose", "sample"], "r": "r1.8", "t": "tf.contrib.kfac.loss_functions.NormalMeanNegativeLogProbLoss"}, {"p": "/api_docs/python/tf/contrib/kfac/loss_functions/NormalMeanVarianceNegativeLogProbLoss", "k": ["dist", "fisher_factor_inner_shape", "fisher_factor_inner_static_shape", "hessian_factor_inner_shape", "hessian_factor_inner_static_shape", "inputs", "params", "targets", "__init__", "evaluate", "evaluate_on_sample", "multiply_fisher", "multiply_fisher_factor", "multiply_fisher_factor_replicated_one_hot", "multiply_fisher_factor_transpose", "multiply_hessian", "multiply_hessian_factor", "multiply_hessian_factor_replicated_one_hot", "multiply_hessian_factor_transpose", "sample"], "r": "r1.8", "t": "tf.contrib.kfac.loss_functions.NormalMeanVarianceNegativeLogProbLoss"}, {"p": "/api_docs/python/tf/contrib/kfac/loss_functions/OnehotCategoricalLogitsNegativeLogProbLoss", "k": ["dist", "fisher_factor_inner_shape", "fisher_factor_inner_static_shape", "hessian_factor_inner_shape", "hessian_factor_inner_static_shape", "inputs", "params", "targets", "__init__", "evaluate", "evaluate_on_sample", "multiply_fisher", "multiply_fisher_factor", "multiply_fisher_factor_replicated_one_hot", "multiply_fisher_factor_transpose", "multiply_hessian", "multiply_hessian_factor", "multiply_hessian_factor_replicated_one_hot", "multiply_hessian_factor_transpose", "sample"], "r": "r1.8", "t": "tf.contrib.kfac.loss_functions.OnehotCategoricalLogitsNegativeLogProbLoss"}, {"p": "/api_docs/python/tf/contrib/kfac/loss_functions/insert_slice_in_zeros", "k": [], "r": "r1.8", "t": "tf.contrib.kfac.loss_functions.insert_slice_in_zeros"}, {"p": "/api_docs/python/tf/contrib/kfac/op_queue", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.contrib.kfac.op_queue"}, {"p": "/api_docs/python/tf/contrib/kfac/op_queue/OpQueue", "k": ["ops", "__init__", "next_op"], "r": "r1.8", "t": "tf.contrib.kfac.op_queue.OpQueue"}, {"p": "/api_docs/python/tf/contrib/kfac/optimizer", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.contrib.kfac.optimizer"}, {"p": "/api_docs/python/tf/contrib/kfac/optimizer/KfacOptimizer", "k": ["cov_update_op", "cov_update_ops", "cov_update_thunks", "damping", "damping_adaptation_interval", "inv_update_op", "inv_update_ops", "inv_update_thunks", "variables", "__init__", "apply_gradients", "compute_gradients", "create_ops_and_vars_thunks", "get_name", "get_slot", "get_slot_names", "make_ops_and_vars", "make_vars_and_create_op_thunks", "minimize", "set_damping_adaptation_params", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.8", "t": "tf.contrib.kfac.optimizer.KfacOptimizer"}, {"p": "/api_docs/python/tf/contrib/kfac/utils", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.contrib.kfac.utils"}, {"p": "/api_docs/python/tf/contrib/kfac/utils/SequenceDict", "k": ["__getitem__", "__init__", "__setitem__", "items"], "r": "r1.8", "t": "tf.contrib.kfac.utils.SequenceDict"}, {"p": "/api_docs/python/tf/contrib/kfac/utils/SubGraph", "k": ["__init__", "filter_list", "is_member", "variable_uses"], "r": "r1.8", "t": "tf.contrib.kfac.utils.SubGraph"}, {"p": "/api_docs/python/tf/contrib/kfac/utils/batch_execute", "k": [], "r": "r1.8", "t": "tf.contrib.kfac.utils.batch_execute"}, {"p": "/api_docs/python/tf/contrib/kfac/utils/column_to_tensors", "k": [], "r": "r1.8", "t": "tf.contrib.kfac.utils.column_to_tensors"}, {"p": "/api_docs/python/tf/contrib/kfac/utils/ensure_sequence", "k": [], "r": "r1.8", "t": "tf.contrib.kfac.utils.ensure_sequence"}, {"p": "/api_docs/python/tf/contrib/kfac/utils/extract_convolution_patches", "k": [], "r": "r1.8", "t": "tf.contrib.kfac.utils.extract_convolution_patches"}, {"p": "/api_docs/python/tf/contrib/kfac/utils/extract_pointwise_conv2d_patches", "k": [], "r": "r1.8", "t": "tf.contrib.kfac.utils.extract_pointwise_conv2d_patches"}, {"p": "/api_docs/python/tf/contrib/kfac/utils/fwd_gradients", "k": [], "r": "r1.8", "t": "tf.contrib.kfac.utils.fwd_gradients"}, {"p": "/api_docs/python/tf/contrib/kfac/utils/generate_random_signs", "k": [], "r": "r1.8", "t": "tf.contrib.kfac.utils.generate_random_signs"}, {"p": "/api_docs/python/tf/contrib/kfac/utils/is_data_format_channel_last", "k": [], "r": "r1.8", "t": "tf.contrib.kfac.utils.is_data_format_channel_last"}, {"p": "/api_docs/python/tf/contrib/kfac/utils/kronecker_product", "k": [], "r": "r1.8", "t": "tf.contrib.kfac.utils.kronecker_product"}, {"p": "/api_docs/python/tf/contrib/kfac/utils/layer_params_to_mat2d", "k": [], "r": "r1.8", "t": "tf.contrib.kfac.utils.layer_params_to_mat2d"}, {"p": "/api_docs/python/tf/contrib/kfac/utils/mat2d_to_layer_params", "k": [], "r": "r1.8", "t": "tf.contrib.kfac.utils.mat2d_to_layer_params"}, {"p": "/api_docs/python/tf/contrib/kfac/utils/matmul_diag_sparse", "k": [], "r": "r1.8", "t": "tf.contrib.kfac.utils.matmul_diag_sparse"}, {"p": "/api_docs/python/tf/contrib/kfac/utils/matmul_sparse_dense", "k": [], "r": "r1.8", "t": "tf.contrib.kfac.utils.matmul_sparse_dense"}, {"p": "/api_docs/python/tf/contrib/kfac/utils/posdef_inv", "k": [], "r": "r1.8", "t": "tf.contrib.kfac.utils.posdef_inv"}, {"p": "/api_docs/python/tf/contrib/kfac/utils/posdef_inv_cholesky", "k": [], "r": "r1.8", "t": "tf.contrib.kfac.utils.posdef_inv_cholesky"}, {"p": "/api_docs/python/tf/contrib/kfac/utils/posdef_inv_matrix_inverse", "k": [], "r": "r1.8", "t": "tf.contrib.kfac.utils.posdef_inv_matrix_inverse"}, {"p": "/api_docs/python/tf/contrib/kfac/utils/set_global_constants", "k": [], "r": "r1.8", "t": "tf.contrib.kfac.utils.set_global_constants"}, {"p": "/api_docs/python/tf/contrib/kfac/utils/tensors_to_column", "k": [], "r": "r1.8", "t": "tf.contrib.kfac.utils.tensors_to_column"}, {"p": "/api_docs/python/tf/contrib/labeled_tensor", "k": [], "r": "r1.8", "t": "tf.contrib.labeled_tensor"}, {"p": "/api_docs/python/tf/contrib/layers", "k": ["OPTIMIZER_CLS_NAMES", "OPTIMIZER_SUMMARIES", "SPARSE_FEATURE_CROSS_DEFAULT_HASH_KEY", "__cached__", "__loader__", "__spec__", "elu", "legacy_linear", "legacy_relu", "linear", "relu", "relu6", "scale_gradient"], "r": "r1.8", "t": "tf.contrib.layers"}, {"p": "/api_docs/python/tf/contrib/layers/GDN", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "r1.8", "t": "tf.contrib.layers.GDN"}, {"p": "/api_docs/python/tf/contrib/layers/RevBlock", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "backward", "build", "call", "compute_output_shape", "count_params", "forward", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "r1.8", "t": "tf.contrib.layers.RevBlock"}, {"p": "/api_docs/python/tf/contrib/layers/apply_regularization", "k": [], "r": "r1.8", "t": "tf.contrib.layers.apply_regularization"}, {"p": "/api_docs/python/tf/contrib/layers/avg_pool2d", "k": [], "r": "r1.8", "t": "tf.contrib.layers.avg_pool2d"}, {"p": "/api_docs/python/tf/contrib/layers/avg_pool3d", "k": [], "r": "r1.8", "t": "tf.contrib.layers.avg_pool3d"}, {"p": "/api_docs/python/tf/contrib/layers/batch_norm", "k": [], "r": "r1.8", "t": "tf.contrib.layers.batch_norm"}, {"p": "/api_docs/python/tf/contrib/layers/bias_add", "k": [], "r": "r1.8", "t": "tf.contrib.layers.bias_add"}, {"p": "/api_docs/python/tf/contrib/layers/bow_encoder", "k": [], "r": "r1.8", "t": "tf.contrib.layers.bow_encoder"}, {"p": "/api_docs/python/tf/contrib/layers/bucketized_column", "k": [], "r": "r1.8", "t": "tf.contrib.layers.bucketized_column"}, {"p": "/api_docs/python/tf/contrib/layers/check_feature_columns", "k": [], "r": "r1.8", "t": "tf.contrib.layers.check_feature_columns"}, {"p": "/api_docs/python/tf/contrib/layers/conv2d", "k": [], "r": "r1.8", "t": "tf.contrib.layers.conv2d"}, {"p": "/api_docs/python/tf/contrib/layers/conv2d_in_plane", "k": [], "r": "r1.8", "t": "tf.contrib.layers.conv2d_in_plane"}, {"p": "/api_docs/python/tf/contrib/layers/conv2d_transpose", "k": [], "r": "r1.8", "t": "tf.contrib.layers.conv2d_transpose"}, {"p": "/api_docs/python/tf/contrib/layers/conv3d_transpose", "k": [], "r": "r1.8", "t": "tf.contrib.layers.conv3d_transpose"}, {"p": "/api_docs/python/tf/contrib/layers/create_feature_spec_for_parsing", "k": [], "r": "r1.8", "t": "tf.contrib.layers.create_feature_spec_for_parsing"}, {"p": "/api_docs/python/tf/contrib/layers/crossed_column", "k": [], "r": "r1.8", "t": "tf.contrib.layers.crossed_column"}, {"p": "/api_docs/python/tf/contrib/layers/dense_to_sparse", "k": [], "r": "r1.8", "t": "tf.contrib.layers.dense_to_sparse"}, {"p": "/api_docs/python/tf/contrib/layers/dropout", "k": [], "r": "r1.8", "t": "tf.contrib.layers.dropout"}, {"p": "/api_docs/python/tf/contrib/layers/embed_sequence", "k": [], "r": "r1.8", "t": "tf.contrib.layers.embed_sequence"}, {"p": "/api_docs/python/tf/contrib/layers/embedding_column", "k": [], "r": "r1.8", "t": "tf.contrib.layers.embedding_column"}, {"p": "/api_docs/python/tf/contrib/layers/embedding_lookup_unique", "k": [], "r": "r1.8", "t": "tf.contrib.layers.embedding_lookup_unique"}, {"p": "/api_docs/python/tf/contrib/layers/feature_column", "k": [], "r": "r1.8", "t": "tf.contrib.layers.feature_column"}, {"p": "/api_docs/python/tf/contrib/layers/flatten", "k": [], "r": "r1.8", "t": "tf.contrib.layers.flatten"}, {"p": "/api_docs/python/tf/contrib/layers/fully_connected", "k": [], "r": "r1.8", "t": "tf.contrib.layers.fully_connected"}, {"p": "/api_docs/python/tf/contrib/layers/gdn", "k": [], "r": "r1.8", "t": "tf.contrib.layers.gdn"}, {"p": "/api_docs/python/tf/contrib/layers/group_norm", "k": [], "r": "r1.8", "t": "tf.contrib.layers.group_norm"}, {"p": "/api_docs/python/tf/contrib/layers/images_to_sequence", "k": [], "r": "r1.8", "t": "tf.contrib.layers.images_to_sequence"}, {"p": "/api_docs/python/tf/contrib/layers/infer_real_valued_columns", "k": [], "r": "r1.8", "t": "tf.contrib.layers.infer_real_valued_columns"}, {"p": "/api_docs/python/tf/contrib/layers/input_from_feature_columns", "k": [], "r": "r1.8", "t": "tf.contrib.layers.input_from_feature_columns"}, {"p": "/api_docs/python/tf/contrib/layers/instance_norm", "k": [], "r": "r1.8", "t": "tf.contrib.layers.instance_norm"}, {"p": "/api_docs/python/tf/contrib/layers/joint_weighted_sum_from_feature_columns", "k": [], "r": "r1.8", "t": "tf.contrib.layers.joint_weighted_sum_from_feature_columns"}, {"p": "/api_docs/python/tf/contrib/layers/l1_l2_regularizer", "k": [], "r": "r1.8", "t": "tf.contrib.layers.l1_l2_regularizer"}, {"p": "/api_docs/python/tf/contrib/layers/l1_regularizer", "k": [], "r": "r1.8", "t": "tf.contrib.layers.l1_regularizer"}, {"p": "/api_docs/python/tf/contrib/layers/l2_regularizer", "k": [], "r": "r1.8", "t": "tf.contrib.layers.l2_regularizer"}, {"p": "/api_docs/python/tf/contrib/layers/layer_norm", "k": [], "r": "r1.8", "t": "tf.contrib.layers.layer_norm"}, {"p": "/api_docs/python/tf/contrib/layers/legacy_fully_connected", "k": [], "r": "r1.8", "t": "tf.contrib.layers.legacy_fully_connected"}, {"p": "/api_docs/python/tf/contrib/layers/make_place_holder_tensors_for_base_features", "k": [], "r": "r1.8", "t": "tf.contrib.layers.make_place_holder_tensors_for_base_features"}, {"p": "/api_docs/python/tf/contrib/layers/max_pool2d", "k": [], "r": "r1.8", "t": "tf.contrib.layers.max_pool2d"}, {"p": "/api_docs/python/tf/contrib/layers/max_pool3d", "k": [], "r": "r1.8", "t": "tf.contrib.layers.max_pool3d"}, {"p": "/api_docs/python/tf/contrib/layers/maxout", "k": [], "r": "r1.8", "t": "tf.contrib.layers.maxout"}, {"p": "/api_docs/python/tf/contrib/layers/multi_class_target", "k": [], "r": "r1.8", "t": "tf.contrib.layers.multi_class_target"}, {"p": "/api_docs/python/tf/contrib/layers/one_hot_column", "k": [], "r": "r1.8", "t": "tf.contrib.layers.one_hot_column"}, {"p": "/api_docs/python/tf/contrib/layers/one_hot_encoding", "k": [], "r": "r1.8", "t": "tf.contrib.layers.one_hot_encoding"}, {"p": "/api_docs/python/tf/contrib/layers/optimize_loss", "k": [], "r": "r1.8", "t": "tf.contrib.layers.optimize_loss"}, {"p": "/api_docs/python/tf/contrib/layers/parse_feature_columns_from_examples", "k": [], "r": "r1.8", "t": "tf.contrib.layers.parse_feature_columns_from_examples"}, {"p": "/api_docs/python/tf/contrib/layers/parse_feature_columns_from_sequence_examples", "k": [], "r": "r1.8", "t": "tf.contrib.layers.parse_feature_columns_from_sequence_examples"}, {"p": "/api_docs/python/tf/contrib/layers/real_valued_column", "k": [], "r": "r1.8", "t": "tf.contrib.layers.real_valued_column"}, {"p": "/api_docs/python/tf/contrib/layers/recompute_grad", "k": [], "r": "r1.8", "t": "tf.contrib.layers.recompute_grad"}, {"p": "/api_docs/python/tf/contrib/layers/regression_target", "k": [], "r": "r1.8", "t": "tf.contrib.layers.regression_target"}, {"p": "/api_docs/python/tf/contrib/layers/repeat", "k": [], "r": "r1.8", "t": "tf.contrib.layers.repeat"}, {"p": "/api_docs/python/tf/contrib/layers/rev_block", "k": [], "r": "r1.8", "t": "tf.contrib.layers.rev_block"}, {"p": "/api_docs/python/tf/contrib/layers/safe_embedding_lookup_sparse", "k": [], "r": "r1.8", "t": "tf.contrib.layers.safe_embedding_lookup_sparse"}, {"p": "/api_docs/python/tf/contrib/layers/scattered_embedding_column", "k": [], "r": "r1.8", "t": "tf.contrib.layers.scattered_embedding_column"}, {"p": "/api_docs/python/tf/contrib/layers/separable_conv2d", "k": [], "r": "r1.8", "t": "tf.contrib.layers.separable_conv2d"}, {"p": "/api_docs/python/tf/contrib/layers/sequence_input_from_feature_columns", "k": [], "r": "r1.8", "t": "tf.contrib.layers.sequence_input_from_feature_columns"}, {"p": "/api_docs/python/tf/contrib/layers/sequence_to_images", "k": [], "r": "r1.8", "t": "tf.contrib.layers.sequence_to_images"}, {"p": "/api_docs/python/tf/contrib/layers/shared_embedding_columns", "k": [], "r": "r1.8", "t": "tf.contrib.layers.shared_embedding_columns"}, {"p": "/api_docs/python/tf/contrib/layers/softmax", "k": [], "r": "r1.8", "t": "tf.contrib.layers.softmax"}, {"p": "/api_docs/python/tf/contrib/layers/sparse_column_with_hash_bucket", "k": [], "r": "r1.8", "t": "tf.contrib.layers.sparse_column_with_hash_bucket"}, {"p": "/api_docs/python/tf/contrib/layers/sparse_column_with_integerized_feature", "k": [], "r": "r1.8", "t": "tf.contrib.layers.sparse_column_with_integerized_feature"}, {"p": "/api_docs/python/tf/contrib/layers/sparse_column_with_keys", "k": [], "r": "r1.8", "t": "tf.contrib.layers.sparse_column_with_keys"}, {"p": "/api_docs/python/tf/contrib/layers/sparse_column_with_vocabulary_file", "k": [], "r": "r1.8", "t": "tf.contrib.layers.sparse_column_with_vocabulary_file"}, {"p": "/api_docs/python/tf/contrib/layers/spatial_softmax", "k": [], "r": "r1.8", "t": "tf.contrib.layers.spatial_softmax"}, {"p": "/api_docs/python/tf/contrib/layers/stack", "k": [], "r": "r1.8", "t": "tf.contrib.layers.stack"}, {"p": "/api_docs/python/tf/contrib/layers/sum_regularizer", "k": [], "r": "r1.8", "t": "tf.contrib.layers.sum_regularizer"}, {"p": "/api_docs/python/tf/contrib/layers/summaries", "k": [], "r": "r1.8", "t": "tf.contrib.layers.summaries"}, {"p": "/api_docs/python/tf/contrib/layers/summarize_activation", "k": [], "r": "r1.8", "t": "tf.contrib.layers.summarize_activation"}, {"p": "/api_docs/python/tf/contrib/layers/summarize_activations", "k": [], "r": "r1.8", "t": "tf.contrib.layers.summarize_activations"}, {"p": "/api_docs/python/tf/contrib/layers/summarize_collection", "k": [], "r": "r1.8", "t": "tf.contrib.layers.summarize_collection"}, {"p": "/api_docs/python/tf/contrib/layers/summarize_tensor", "k": [], "r": "r1.8", "t": "tf.contrib.layers.summarize_tensor"}, {"p": "/api_docs/python/tf/contrib/layers/summarize_tensors", "k": [], "r": "r1.8", "t": "tf.contrib.layers.summarize_tensors"}, {"p": "/api_docs/python/tf/contrib/layers/transform_features", "k": [], "r": "r1.8", "t": "tf.contrib.layers.transform_features"}, {"p": "/api_docs/python/tf/contrib/layers/unit_norm", "k": [], "r": "r1.8", "t": "tf.contrib.layers.unit_norm"}, {"p": "/api_docs/python/tf/contrib/layers/variance_scaling_initializer", "k": [], "r": "r1.8", "t": "tf.contrib.layers.variance_scaling_initializer"}, {"p": "/api_docs/python/tf/contrib/layers/weighted_sparse_column", "k": [], "r": "r1.8", "t": "tf.contrib.layers.weighted_sparse_column"}, {"p": "/api_docs/python/tf/contrib/layers/weighted_sum_from_feature_columns", "k": [], "r": "r1.8", "t": "tf.contrib.layers.weighted_sum_from_feature_columns"}, {"p": "/api_docs/python/tf/contrib/layers/xavier_initializer", "k": [], "r": "r1.8", "t": "tf.contrib.layers.xavier_initializer"}, {"p": "/api_docs/python/tf/contrib/learn", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.contrib.learn"}, {"p": "/api_docs/python/tf/contrib/learn/BaseEstimator", "k": ["config", "model_dir", "model_fn", "__init__", "evaluate", "export", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "set_params"], "r": "r1.8", "t": "tf.contrib.learn.BaseEstimator"}, {"p": "/api_docs/python/tf/contrib/learn/DNNClassifier", "k": ["config", "model_dir", "model_fn", "__init__", "evaluate", "export", "export_savedmodel", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "predict_classes", "predict_proba", "set_params"], "r": "r1.8", "t": "tf.contrib.learn.DNNClassifier"}, {"p": "/api_docs/python/tf/contrib/learn/DNNEstimator", "k": ["config", "model_dir", "model_fn", "__init__", "evaluate", "export", "export_savedmodel", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "set_params"], "r": "r1.8", "t": "tf.contrib.learn.DNNEstimator"}, {"p": "/api_docs/python/tf/contrib/learn/DNNLinearCombinedClassifier", "k": ["config", "model_dir", "model_fn", "__init__", "evaluate", "export", "export_savedmodel", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "predict_classes", "predict_proba", "set_params"], "r": "r1.8", "t": "tf.contrib.learn.DNNLinearCombinedClassifier"}, {"p": "/api_docs/python/tf/contrib/learn/DNNLinearCombinedEstimator", "k": ["config", "model_dir", "model_fn", "__init__", "evaluate", "export", "export_savedmodel", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "set_params"], "r": "r1.8", "t": "tf.contrib.learn.DNNLinearCombinedEstimator"}, {"p": "/api_docs/python/tf/contrib/learn/DNNLinearCombinedRegressor", "k": ["config", "model_dir", "model_fn", "__init__", "evaluate", "export", "export_savedmodel", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "predict_scores", "set_params"], "r": "r1.8", "t": "tf.contrib.learn.DNNLinearCombinedRegressor"}, {"p": "/api_docs/python/tf/contrib/learn/DNNRegressor", "k": ["config", "model_dir", "model_fn", "__init__", "evaluate", "export", "export_savedmodel", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "predict_scores", "set_params"], "r": "r1.8", "t": "tf.contrib.learn.DNNRegressor"}, {"p": "/api_docs/python/tf/contrib/learn/DynamicRnnEstimator", "k": ["config", "model_dir", "model_fn", "__init__", "evaluate", "export", "export_savedmodel", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "set_params"], "r": "r1.8", "t": "tf.contrib.learn.DynamicRnnEstimator"}, {"p": "/api_docs/python/tf/contrib/learn/Estimator", "k": ["config", "model_dir", "model_fn", "__init__", "evaluate", "export", "export_savedmodel", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "set_params"], "r": "r1.8", "t": "tf.contrib.learn.Estimator"}, {"p": "/api_docs/python/tf/contrib/learn/Evaluable", "k": ["model_dir", "evaluate"], "r": "r1.8", "t": "tf.contrib.learn.Evaluable"}, {"p": "/api_docs/python/tf/contrib/learn/Experiment", "k": ["estimator", "eval_metrics", "eval_steps", "train_steps", "__init__", "continuous_eval", "continuous_eval_on_train_data", "continuous_train_and_eval", "evaluate", "extend_train_hooks", "local_run", "reset_export_strategies", "run_std_server", "test", "train", "train_and_evaluate"], "r": "r1.8", "t": "tf.contrib.learn.Experiment"}, {"p": "/api_docs/python/tf/contrib/learn/ExportStrategy", "k": ["export_fn", "name", "strip_default_attrs", "__new__", "export"], "r": "r1.8", "t": "tf.contrib.learn.ExportStrategy"}, {"p": "/api_docs/python/tf/contrib/learn/Head", "k": ["logits_dimension", "create_model_fn_ops"], "r": "r1.8", "t": "tf.contrib.learn.Head"}, {"p": "/api_docs/python/tf/contrib/learn/InputFnOps", "k": ["default_inputs", "features", "labels", "__new__"], "r": "r1.8", "t": "tf.contrib.learn.InputFnOps"}, {"p": "/api_docs/python/tf/contrib/learn/KMeansClustering", "k": ["config", "model_dir", "model_fn", "__init__", "clusters", "evaluate", "export", "export_savedmodel", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "predict_cluster_idx", "score", "set_params", "transform", "ALL_SCORES", "CLUSTERS", "CLUSTER_IDX", "COSINE_DISTANCE", "KMEANS_PLUS_PLUS_INIT", "LOSS_OP_NAME", "RANDOM_INIT", "SCORES", "SQUARED_EUCLIDEAN_DISTANCE"], "r": "r1.8", "t": "tf.contrib.learn.KMeansClustering"}, {"p": "/api_docs/python/tf/contrib/learn/LinearClassifier", "k": ["config", "model_dir", "model_fn", "__init__", "evaluate", "export", "export_savedmodel", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "predict_classes", "predict_proba", "set_params"], "r": "r1.8", "t": "tf.contrib.learn.LinearClassifier"}, {"p": "/api_docs/python/tf/contrib/learn/LinearEstimator", "k": ["config", "model_dir", "model_fn", "__init__", "evaluate", "export", "export_savedmodel", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "set_params"], "r": "r1.8", "t": "tf.contrib.learn.LinearEstimator"}, {"p": "/api_docs/python/tf/contrib/learn/LinearRegressor", "k": ["config", "model_dir", "model_fn", "__init__", "evaluate", "export", "export_savedmodel", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "predict_scores", "set_params"], "r": "r1.8", "t": "tf.contrib.learn.LinearRegressor"}, {"p": "/api_docs/python/tf/contrib/learn/LogisticRegressor", "k": [], "r": "r1.8", "t": "tf.contrib.learn.LogisticRegressor"}, {"p": "/api_docs/python/tf/contrib/learn/MetricSpec", "k": ["label_key", "metric_fn", "prediction_key", "weight_key", "__init__", "create_metric_ops"], "r": "r1.8", "t": "tf.contrib.learn.MetricSpec"}, {"p": "/api_docs/python/tf/contrib/learn/ModeKeys", "k": ["validate", "EVAL", "INFER", "TRAIN"], "r": "r1.8", "t": "tf.contrib.learn.ModeKeys"}, {"p": "/api_docs/python/tf/contrib/learn/ModelFnOps", "k": ["eval_metric_ops", "loss", "mode", "output_alternatives", "predictions", "scaffold", "train_op", "training_chief_hooks", "training_hooks", "__new__", "estimator_spec"], "r": "r1.8", "t": "tf.contrib.learn.ModelFnOps"}, {"p": "/api_docs/python/tf/contrib/learn/NanLossDuringTrainingError", "k": ["__init__", "__new__"], "r": "r1.8", "t": "tf.contrib.learn.NanLossDuringTrainingError"}, {"p": "/api_docs/python/tf/contrib/learn/NotFittedError", "k": ["__init__", "__new__"], "r": "r1.8", "t": "tf.contrib.learn.NotFittedError"}, {"p": "/api_docs/python/tf/contrib/learn/PredictionKey", "k": ["CLASSES", "GENERIC", "LOGISTIC", "LOGITS", "PROBABILITIES", "SCORES", "TOP_K"], "r": "r1.8", "t": "tf.contrib.learn.PredictionKey"}, {"p": "/api_docs/python/tf/contrib/learn/ProblemType", "k": ["CLASSIFICATION", "LINEAR_REGRESSION", "LOGISTIC_REGRESSION", "UNSPECIFIED"], "r": "r1.8", "t": "tf.contrib.learn.ProblemType"}, {"p": "/api_docs/python/tf/contrib/learn/RunConfig", "k": ["cluster_spec", "environment", "evaluation_master", "global_id_in_cluster", "is_chief", "keep_checkpoint_every_n_hours", "keep_checkpoint_max", "log_step_count_steps", "master", "model_dir", "num_ps_replicas", "num_worker_replicas", "save_checkpoints_secs", "save_checkpoints_steps", "save_summary_steps", "service", "session_config", "task_id", "task_type", "tf_config", "tf_random_seed", "train_distribute", "__init__", "get_task_id", "replace", "uid"], "r": "r1.8", "t": "tf.contrib.learn.RunConfig"}, {"p": "/api_docs/python/tf/contrib/learn/SKCompat", "k": ["__init__", "fit", "get_params", "predict", "score", "set_params"], "r": "r1.8", "t": "tf.contrib.learn.SKCompat"}, {"p": "/api_docs/python/tf/contrib/learn/SVM", "k": ["config", "model_dir", "model_fn", "__init__", "evaluate", "export", "export_savedmodel", "export_with_defaults", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "predict_classes", "predict_proba", "set_params"], "r": "r1.8", "t": "tf.contrib.learn.SVM"}, {"p": "/api_docs/python/tf/contrib/learn/TaskType", "k": ["MASTER", "PS", "WORKER"], "r": "r1.8", "t": "tf.contrib.learn.TaskType"}, {"p": "/api_docs/python/tf/contrib/learn/Trainable", "k": ["fit"], "r": "r1.8", "t": "tf.contrib.learn.Trainable"}, {"p": "/api_docs/python/tf/contrib/learn/binary_svm_head", "k": [], "r": "r1.8", "t": "tf.contrib.learn.binary_svm_head"}, {"p": "/api_docs/python/tf/contrib/learn/build_parsing_serving_input_fn", "k": [], "r": "r1.8", "t": "tf.contrib.learn.build_parsing_serving_input_fn"}, {"p": "/api_docs/python/tf/contrib/learn/datasets", "k": [], "r": "r1.8", "t": "tf.contrib.learn.datasets"}, {"p": "/api_docs/python/tf/contrib/learn/evaluate", "k": [], "r": "r1.8", "t": "tf.contrib.learn.evaluate"}, {"p": "/api_docs/python/tf/contrib/learn/extract_dask_data", "k": [], "r": "r1.8", "t": "tf.contrib.learn.extract_dask_data"}, {"p": "/api_docs/python/tf/contrib/learn/extract_dask_labels", "k": [], "r": "r1.8", "t": "tf.contrib.learn.extract_dask_labels"}, {"p": "/api_docs/python/tf/contrib/learn/extract_pandas_data", "k": [], "r": "r1.8", "t": "tf.contrib.learn.extract_pandas_data"}, {"p": "/api_docs/python/tf/contrib/learn/extract_pandas_labels", "k": [], "r": "r1.8", "t": "tf.contrib.learn.extract_pandas_labels"}, {"p": "/api_docs/python/tf/contrib/learn/extract_pandas_matrix", "k": [], "r": "r1.8", "t": "tf.contrib.learn.extract_pandas_matrix"}, {"p": "/api_docs/python/tf/contrib/learn/graph_actions", "k": [], "r": "r1.8", "t": "tf.contrib.learn.graph_actions"}, {"p": "/api_docs/python/tf/contrib/learn/head", "k": [], "r": "r1.8", "t": "tf.contrib.learn.head"}, {"p": "/api_docs/python/tf/contrib/learn/infer", "k": [], "r": "r1.8", "t": "tf.contrib.learn.infer"}, {"p": "/api_docs/python/tf/contrib/learn/infer_real_valued_columns_from_input", "k": [], "r": "r1.8", "t": "tf.contrib.learn.infer_real_valued_columns_from_input"}, {"p": "/api_docs/python/tf/contrib/learn/infer_real_valued_columns_from_input_fn", "k": [], "r": "r1.8", "t": "tf.contrib.learn.infer_real_valued_columns_from_input_fn"}, {"p": "/api_docs/python/tf/contrib/learn/io", "k": [], "r": "r1.8", "t": "tf.contrib.learn.io"}, {"p": "/api_docs/python/tf/contrib/learn/learn_runner", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.contrib.learn.learn_runner"}, {"p": "/api_docs/python/tf/contrib/learn/learn_runner/run", "k": [], "r": "r1.8", "t": "tf.contrib.learn.learn_runner.run"}, {"p": "/api_docs/python/tf/contrib/learn/learn_runner/tune", "k": [], "r": "r1.8", "t": "tf.contrib.learn.learn_runner.tune"}, {"p": "/api_docs/python/tf/contrib/learn/make_export_strategy", "k": [], "r": "r1.8", "t": "tf.contrib.learn.make_export_strategy"}, {"p": "/api_docs/python/tf/contrib/learn/models", "k": [], "r": "r1.8", "t": "tf.contrib.learn.models"}, {"p": "/api_docs/python/tf/contrib/learn/monitors", "k": [], "r": "r1.8", "t": "tf.contrib.learn.monitors"}, {"p": "/api_docs/python/tf/contrib/learn/multi_class_head", "k": [], "r": "r1.8", "t": "tf.contrib.learn.multi_class_head"}, {"p": "/api_docs/python/tf/contrib/learn/multi_head", "k": [], "r": "r1.8", "t": "tf.contrib.learn.multi_head"}, {"p": "/api_docs/python/tf/contrib/learn/multi_label_head", "k": [], "r": "r1.8", "t": "tf.contrib.learn.multi_label_head"}, {"p": "/api_docs/python/tf/contrib/learn/no_op_train_fn", "k": [], "r": "r1.8", "t": "tf.contrib.learn.no_op_train_fn"}, {"p": "/api_docs/python/tf/contrib/learn/ops", "k": [], "r": "r1.8", "t": "tf.contrib.learn.ops"}, {"p": "/api_docs/python/tf/contrib/learn/poisson_regression_head", "k": [], "r": "r1.8", "t": "tf.contrib.learn.poisson_regression_head"}, {"p": "/api_docs/python/tf/contrib/learn/preprocessing", "k": [], "r": "r1.8", "t": "tf.contrib.learn.preprocessing"}, {"p": "/api_docs/python/tf/contrib/learn/read_batch_examples", "k": [], "r": "r1.8", "t": "tf.contrib.learn.read_batch_examples"}, {"p": "/api_docs/python/tf/contrib/learn/read_batch_features", "k": [], "r": "r1.8", "t": "tf.contrib.learn.read_batch_features"}, {"p": "/api_docs/python/tf/contrib/learn/read_batch_record_features", "k": [], "r": "r1.8", "t": "tf.contrib.learn.read_batch_record_features"}, {"p": "/api_docs/python/tf/contrib/learn/read_keyed_batch_examples", "k": [], "r": "r1.8", "t": "tf.contrib.learn.read_keyed_batch_examples"}, {"p": "/api_docs/python/tf/contrib/learn/read_keyed_batch_examples_shared_queue", "k": [], "r": "r1.8", "t": "tf.contrib.learn.read_keyed_batch_examples_shared_queue"}, {"p": "/api_docs/python/tf/contrib/learn/read_keyed_batch_features", "k": [], "r": "r1.8", "t": "tf.contrib.learn.read_keyed_batch_features"}, {"p": "/api_docs/python/tf/contrib/learn/read_keyed_batch_features_shared_queue", "k": [], "r": "r1.8", "t": "tf.contrib.learn.read_keyed_batch_features_shared_queue"}, {"p": "/api_docs/python/tf/contrib/learn/regression_head", "k": [], "r": "r1.8", "t": "tf.contrib.learn.regression_head"}, {"p": "/api_docs/python/tf/contrib/learn/run_feeds", "k": [], "r": "r1.8", "t": "tf.contrib.learn.run_feeds"}, {"p": "/api_docs/python/tf/contrib/learn/run_n", "k": [], "r": "r1.8", "t": "tf.contrib.learn.run_n"}, {"p": "/api_docs/python/tf/contrib/learn/train", "k": [], "r": "r1.8", "t": "tf.contrib.learn.train"}, {"p": "/api_docs/python/tf/contrib/learn/utils", "k": [], "r": "r1.8", "t": "tf.contrib.learn.utils"}, {"p": "/api_docs/python/tf/contrib/legacy_seq2seq", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.contrib.legacy_seq2seq"}, {"p": "/api_docs/python/tf/contrib/legacy_seq2seq/attention_decoder", "k": [], "r": "r1.8", "t": "tf.contrib.legacy_seq2seq.attention_decoder"}, {"p": "/api_docs/python/tf/contrib/legacy_seq2seq/basic_rnn_seq2seq", "k": [], "r": "r1.8", "t": "tf.contrib.legacy_seq2seq.basic_rnn_seq2seq"}, {"p": "/api_docs/python/tf/contrib/legacy_seq2seq/embedding_attention_decoder", "k": [], "r": "r1.8", "t": "tf.contrib.legacy_seq2seq.embedding_attention_decoder"}, {"p": "/api_docs/python/tf/contrib/legacy_seq2seq/embedding_attention_seq2seq", "k": [], "r": "r1.8", "t": "tf.contrib.legacy_seq2seq.embedding_attention_seq2seq"}, {"p": "/api_docs/python/tf/contrib/legacy_seq2seq/embedding_rnn_decoder", "k": [], "r": "r1.8", "t": "tf.contrib.legacy_seq2seq.embedding_rnn_decoder"}, {"p": "/api_docs/python/tf/contrib/legacy_seq2seq/embedding_rnn_seq2seq", "k": [], "r": "r1.8", "t": "tf.contrib.legacy_seq2seq.embedding_rnn_seq2seq"}, {"p": "/api_docs/python/tf/contrib/legacy_seq2seq/embedding_tied_rnn_seq2seq", "k": [], "r": "r1.8", "t": "tf.contrib.legacy_seq2seq.embedding_tied_rnn_seq2seq"}, {"p": "/api_docs/python/tf/contrib/legacy_seq2seq/model_with_buckets", "k": [], "r": "r1.8", "t": "tf.contrib.legacy_seq2seq.model_with_buckets"}, {"p": "/api_docs/python/tf/contrib/legacy_seq2seq/one2many_rnn_seq2seq", "k": [], "r": "r1.8", "t": "tf.contrib.legacy_seq2seq.one2many_rnn_seq2seq"}, {"p": "/api_docs/python/tf/contrib/legacy_seq2seq/rnn_decoder", "k": [], "r": "r1.8", "t": "tf.contrib.legacy_seq2seq.rnn_decoder"}, {"p": "/api_docs/python/tf/contrib/legacy_seq2seq/sequence_loss", "k": [], "r": "r1.8", "t": "tf.contrib.legacy_seq2seq.sequence_loss"}, {"p": "/api_docs/python/tf/contrib/legacy_seq2seq/sequence_loss_by_example", "k": [], "r": "r1.8", "t": "tf.contrib.legacy_seq2seq.sequence_loss_by_example"}, {"p": "/api_docs/python/tf/contrib/legacy_seq2seq/tied_rnn_seq2seq", "k": [], "r": "r1.8", "t": "tf.contrib.legacy_seq2seq.tied_rnn_seq2seq"}, {"p": "/api_docs/python/tf/contrib/linalg", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.contrib.linalg"}, {"p": "/api_docs/python/tf/contrib/linalg/LinearOperatorBlockDiag", "k": ["batch_shape", "domain_dimension", "dtype", "graph_parents", "is_non_singular", "is_positive_definite", "is_self_adjoint", "is_square", "name", "operators", "range_dimension", "shape", "tensor_rank", "__init__", "add_to_tensor", "assert_non_singular", "assert_positive_definite", "assert_self_adjoint", "batch_shape_tensor", "determinant", "diag_part", "domain_dimension_tensor", "log_abs_determinant", "matmul", "matvec", "range_dimension_tensor", "shape_tensor", "solve", "solvevec", "tensor_rank_tensor", "to_dense", "trace"], "r": "r1.8", "t": "tf.contrib.linalg.LinearOperatorBlockDiag"}, {"p": "/api_docs/python/tf/contrib/linear_optimizer", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.contrib.linear_optimizer"}, {"p": "/api_docs/python/tf/contrib/linear_optimizer/SDCAOptimizer", "k": ["adaptive", "example_id_column", "num_loss_partitions", "num_table_shards", "symmetric_l1_regularization", "symmetric_l2_regularization", "__init__", "get_name", "get_train_step"], "r": "r1.8", "t": "tf.contrib.linear_optimizer.SDCAOptimizer"}, {"p": "/api_docs/python/tf/contrib/linear_optimizer/SdcaModel", "k": ["__init__", "approximate_duality_gap", "minimize", "predictions", "regularized_loss", "unregularized_loss", "update_weights"], "r": "r1.8", "t": "tf.contrib.linear_optimizer.SdcaModel"}, {"p": "/api_docs/python/tf/contrib/linear_optimizer/SparseFeatureColumn", "k": ["example_indices", "feature_indices", "feature_values", "__init__"], "r": "r1.8", "t": "tf.contrib.linear_optimizer.SparseFeatureColumn"}, {"p": "/api_docs/python/tf/contrib/lite", "k": ["EXPERIMENTAL_USE_TOCO_API_DIRECTLY", "FLOAT", "GRAPHVIZ_DOT", "INT32", "INT64", "QUANTIZED_UINT8", "STRING", "TENSORFLOW_GRAPHDEF", "TFLITE", "__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.contrib.lite"}, {"p": "/api_docs/python/tf/contrib/lite/OpHint", "k": ["__init__", "add_inputs", "add_outputs", "FUNCTION_INPUT_INDEX_ATTR", "FUNCTION_NAME_ATTR", "FUNCTION_OUTPUT_INDEX_ATTR", "FUNCTION_UUID_ATTR"], "r": "r1.8", "t": "tf.contrib.lite.OpHint"}, {"p": "/api_docs/python/tf/contrib/lite/convert_op_hints_to_stubs", "k": [], "r": "r1.8", "t": "tf.contrib.lite.convert_op_hints_to_stubs"}, {"p": "/api_docs/python/tf/contrib/lite/toco_convert", "k": [], "r": "r1.8", "t": "tf.contrib.lite.toco_convert"}, {"p": "/api_docs/python/tf/contrib/lite/toco_convert_protos", "k": [], "r": "r1.8", "t": "tf.contrib.lite.toco_convert_protos"}, {"p": "/api_docs/python/tf/contrib/lookup", "k": ["FastHashSpec", "__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.contrib.lookup"}, {"p": "/api_docs/python/tf/contrib/lookup/HashTable", "k": ["default_value", "init", "key_dtype", "name", "table_ref", "value_dtype", "__init__", "lookup", "size"], "r": "r1.8", "t": "tf.contrib.lookup.HashTable"}, {"p": "/api_docs/python/tf/contrib/lookup/HasherSpec", "k": ["hasher", "key", "__new__"], "r": "r1.8", "t": "tf.contrib.lookup.HasherSpec"}, {"p": "/api_docs/python/tf/contrib/lookup/IdTableWithHashBuckets", "k": ["init", "key_dtype", "name", "table_ref", "value_dtype", "__init__", "lookup", "size"], "r": "r1.8", "t": "tf.contrib.lookup.IdTableWithHashBuckets"}, {"p": "/api_docs/python/tf/contrib/lookup/InitializableLookupTableBase", "k": ["default_value", "init", "key_dtype", "name", "table_ref", "value_dtype", "__init__", "lookup", "size"], "r": "r1.8", "t": "tf.contrib.lookup.InitializableLookupTableBase"}, {"p": "/api_docs/python/tf/contrib/lookup/KeyValueTensorInitializer", "k": ["key_dtype", "value_dtype", "__init__", "initialize"], "r": "r1.8", "t": "tf.contrib.lookup.KeyValueTensorInitializer"}, {"p": "/api_docs/python/tf/contrib/lookup/LookupInterface", "k": ["init", "key_dtype", "name", "value_dtype", "__init__", "lookup", "size"], "r": "r1.8", "t": "tf.contrib.lookup.LookupInterface"}, {"p": "/api_docs/python/tf/contrib/lookup/MutableDenseHashTable", "k": ["init", "key_dtype", "name", "value_dtype", "__init__", "export", "insert", "lookup", "size"], "r": "r1.8", "t": "tf.contrib.lookup.MutableDenseHashTable"}, {"p": "/api_docs/python/tf/contrib/lookup/MutableHashTable", "k": ["init", "key_dtype", "name", "value_dtype", "__init__", "export", "insert", "lookup", "size"], "r": "r1.8", "t": "tf.contrib.lookup.MutableHashTable"}, {"p": "/api_docs/python/tf/contrib/lookup/StrongHashSpec", "k": ["hasher", "key", "__new__"], "r": "r1.8", "t": "tf.contrib.lookup.StrongHashSpec"}, {"p": "/api_docs/python/tf/contrib/lookup/TableInitializerBase", "k": ["key_dtype", "value_dtype", "__init__", "initialize"], "r": "r1.8", "t": "tf.contrib.lookup.TableInitializerBase"}, {"p": "/api_docs/python/tf/contrib/lookup/TextFileIdTableInitializer", "k": ["key_dtype", "value_dtype", "__init__", "initialize"], "r": "r1.8", "t": "tf.contrib.lookup.TextFileIdTableInitializer"}, {"p": "/api_docs/python/tf/contrib/lookup/TextFileIndex", "k": ["LINE_NUMBER", "WHOLE_LINE"], "r": "r1.8", "t": "tf.contrib.lookup.TextFileIndex"}, {"p": "/api_docs/python/tf/contrib/lookup/TextFileInitializer", "k": ["key_dtype", "value_dtype", "__init__", "initialize"], "r": "r1.8", "t": "tf.contrib.lookup.TextFileInitializer"}, {"p": "/api_docs/python/tf/contrib/lookup/TextFileStringTableInitializer", "k": ["key_dtype", "value_dtype", "__init__", "initialize"], "r": "r1.8", "t": "tf.contrib.lookup.TextFileStringTableInitializer"}, {"p": "/api_docs/python/tf/contrib/lookup/index_table_from_file", "k": [], "r": "r1.8", "t": "tf.contrib.lookup.index_table_from_file"}, {"p": "/api_docs/python/tf/contrib/lookup/index_table_from_tensor", "k": [], "r": "r1.8", "t": "tf.contrib.lookup.index_table_from_tensor"}, {"p": "/api_docs/python/tf/contrib/lookup/index_to_string", "k": [], "r": "r1.8", "t": "tf.contrib.lookup.index_to_string"}, {"p": "/api_docs/python/tf/contrib/lookup/index_to_string_table_from_file", "k": [], "r": "r1.8", "t": "tf.contrib.lookup.index_to_string_table_from_file"}, {"p": "/api_docs/python/tf/contrib/lookup/index_to_string_table_from_tensor", "k": [], "r": "r1.8", "t": "tf.contrib.lookup.index_to_string_table_from_tensor"}, {"p": "/api_docs/python/tf/contrib/lookup/string_to_index", "k": [], "r": "r1.8", "t": "tf.contrib.lookup.string_to_index"}, {"p": "/api_docs/python/tf/contrib/lookup/string_to_index_table_from_file", "k": [], "r": "r1.8", "t": "tf.contrib.lookup.string_to_index_table_from_file"}, {"p": "/api_docs/python/tf/contrib/lookup/string_to_index_table_from_tensor", "k": [], "r": "r1.8", "t": "tf.contrib.lookup.string_to_index_table_from_tensor"}, {"p": "/api_docs/python/tf/contrib/losses", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.contrib.losses"}, {"p": "/api_docs/python/tf/contrib/losses/absolute_difference", "k": [], "r": "r1.8", "t": "tf.contrib.losses.absolute_difference"}, {"p": "/api_docs/python/tf/contrib/losses/add_loss", "k": [], "r": "r1.8", "t": "tf.contrib.losses.add_loss"}, {"p": "/api_docs/python/tf/contrib/losses/compute_weighted_loss", "k": [], "r": "r1.8", "t": "tf.contrib.losses.compute_weighted_loss"}, {"p": "/api_docs/python/tf/contrib/losses/cosine_distance", "k": [], "r": "r1.8", "t": "tf.contrib.losses.cosine_distance"}, {"p": "/api_docs/python/tf/contrib/losses/get_losses", "k": [], "r": "r1.8", "t": "tf.contrib.losses.get_losses"}, {"p": "/api_docs/python/tf/contrib/losses/get_regularization_losses", "k": [], "r": "r1.8", "t": "tf.contrib.losses.get_regularization_losses"}, {"p": "/api_docs/python/tf/contrib/losses/get_total_loss", "k": [], "r": "r1.8", "t": "tf.contrib.losses.get_total_loss"}, {"p": "/api_docs/python/tf/contrib/losses/hinge_loss", "k": [], "r": "r1.8", "t": "tf.contrib.losses.hinge_loss"}, {"p": "/api_docs/python/tf/contrib/losses/log_loss", "k": [], "r": "r1.8", "t": "tf.contrib.losses.log_loss"}, {"p": "/api_docs/python/tf/contrib/losses/mean_pairwise_squared_error", "k": [], "r": "r1.8", "t": "tf.contrib.losses.mean_pairwise_squared_error"}, {"p": "/api_docs/python/tf/contrib/losses/mean_squared_error", "k": [], "r": "r1.8", "t": "tf.contrib.losses.mean_squared_error"}, {"p": "/api_docs/python/tf/contrib/losses/metric_learning", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.contrib.losses.metric_learning"}, {"p": "/api_docs/python/tf/contrib/losses/metric_learning/cluster_loss", "k": [], "r": "r1.8", "t": "tf.contrib.losses.metric_learning.cluster_loss"}, {"p": "/api_docs/python/tf/contrib/losses/metric_learning/contrastive_loss", "k": [], "r": "r1.8", "t": "tf.contrib.losses.metric_learning.contrastive_loss"}, {"p": "/api_docs/python/tf/contrib/losses/metric_learning/lifted_struct_loss", "k": [], "r": "r1.8", "t": "tf.contrib.losses.metric_learning.lifted_struct_loss"}, {"p": "/api_docs/python/tf/contrib/losses/metric_learning/npairs_loss", "k": [], "r": "r1.8", "t": "tf.contrib.losses.metric_learning.npairs_loss"}, {"p": "/api_docs/python/tf/contrib/losses/metric_learning/npairs_loss_multilabel", "k": [], "r": "r1.8", "t": "tf.contrib.losses.metric_learning.npairs_loss_multilabel"}, {"p": "/api_docs/python/tf/contrib/losses/metric_learning/triplet_semihard_loss", "k": [], "r": "r1.8", "t": "tf.contrib.losses.metric_learning.triplet_semihard_loss"}, {"p": "/api_docs/python/tf/contrib/losses/sigmoid_cross_entropy", "k": [], "r": "r1.8", "t": "tf.contrib.losses.sigmoid_cross_entropy"}, {"p": "/api_docs/python/tf/contrib/losses/softmax_cross_entropy", "k": [], "r": "r1.8", "t": "tf.contrib.losses.softmax_cross_entropy"}, {"p": "/api_docs/python/tf/contrib/losses/sparse_softmax_cross_entropy", "k": [], "r": "r1.8", "t": "tf.contrib.losses.sparse_softmax_cross_entropy"}, {"p": "/api_docs/python/tf/contrib/memory_stats", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.contrib.memory_stats"}, {"p": "/api_docs/python/tf/contrib/memory_stats/BytesInUse", "k": [], "r": "r1.8", "t": "tf.contrib.memory_stats.BytesInUse"}, {"p": "/api_docs/python/tf/contrib/memory_stats/BytesLimit", "k": [], "r": "r1.8", "t": "tf.contrib.memory_stats.BytesLimit"}, {"p": "/api_docs/python/tf/contrib/memory_stats/MaxBytesInUse", "k": [], "r": "r1.8", "t": "tf.contrib.memory_stats.MaxBytesInUse"}, {"p": "/api_docs/python/tf/contrib/meta_graph_transform", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.contrib.meta_graph_transform"}, {"p": "/api_docs/python/tf/contrib/meta_graph_transform/meta_graph_transform", "k": ["__cached__", "__loader__", "__spec__", "absolute_import", "division", "print_function"], "r": "r1.8", "t": "tf.contrib.meta_graph_transform.meta_graph_transform"}, {"p": "/api_docs/python/tf/contrib/meta_graph_transform/meta_graph_transform/compat", "k": ["__cached__", "__loader__", "__spec__", "bytes_or_text_types", "complex_types", "integral_types", "real_types"], "r": "r1.8", "t": "tf.contrib.meta_graph_transform.meta_graph_transform.compat"}, {"p": "/api_docs/python/tf/contrib/meta_graph_transform/meta_graph_transform/meta_graph_transform", "k": [], "r": "r1.8", "t": "tf.contrib.meta_graph_transform.meta_graph_transform.meta_graph_transform"}, {"p": "/api_docs/python/tf/contrib/metrics", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.contrib.metrics"}, {"p": "/api_docs/python/tf/contrib/metrics/accuracy", "k": [], "r": "r1.8", "t": "tf.contrib.metrics.accuracy"}, {"p": "/api_docs/python/tf/contrib/metrics/aggregate_metric_map", "k": [], "r": "r1.8", "t": "tf.contrib.metrics.aggregate_metric_map"}, {"p": "/api_docs/python/tf/contrib/metrics/aggregate_metrics", "k": [], "r": "r1.8", "t": "tf.contrib.metrics.aggregate_metrics"}, {"p": "/api_docs/python/tf/contrib/metrics/auc_using_histogram", "k": [], "r": "r1.8", "t": "tf.contrib.metrics.auc_using_histogram"}, {"p": "/api_docs/python/tf/contrib/metrics/auc_with_confidence_intervals", "k": [], "r": "r1.8", "t": "tf.contrib.metrics.auc_with_confidence_intervals"}, {"p": "/api_docs/python/tf/contrib/metrics/cohen_kappa", "k": [], "r": "r1.8", "t": "tf.contrib.metrics.cohen_kappa"}, {"p": "/api_docs/python/tf/contrib/metrics/confusion_matrix", "k": [], "r": "r1.8", "t": "tf.contrib.metrics.confusion_matrix"}, {"p": "/api_docs/python/tf/contrib/metrics/count", "k": [], "r": "r1.8", "t": "tf.contrib.metrics.count"}, {"p": "/api_docs/python/tf/contrib/metrics/precision_recall_at_equal_thresholds", "k": [], "r": "r1.8", "t": "tf.contrib.metrics.precision_recall_at_equal_thresholds"}, {"p": "/api_docs/python/tf/contrib/metrics/recall_at_precision", "k": [], "r": "r1.8", "t": "tf.contrib.metrics.recall_at_precision"}, {"p": "/api_docs/python/tf/contrib/metrics/sparse_recall_at_top_k", "k": [], "r": "r1.8", "t": "tf.contrib.metrics.sparse_recall_at_top_k"}, {"p": "/api_docs/python/tf/contrib/metrics/streaming_accuracy", "k": [], "r": "r1.8", "t": "tf.contrib.metrics.streaming_accuracy"}, {"p": "/api_docs/python/tf/contrib/metrics/streaming_auc", "k": [], "r": "r1.8", "t": "tf.contrib.metrics.streaming_auc"}, {"p": "/api_docs/python/tf/contrib/metrics/streaming_concat", "k": [], "r": "r1.8", "t": "tf.contrib.metrics.streaming_concat"}, {"p": "/api_docs/python/tf/contrib/metrics/streaming_covariance", "k": [], "r": "r1.8", "t": "tf.contrib.metrics.streaming_covariance"}, {"p": "/api_docs/python/tf/contrib/metrics/streaming_curve_points", "k": [], "r": "r1.8", "t": "tf.contrib.metrics.streaming_curve_points"}, {"p": "/api_docs/python/tf/contrib/metrics/streaming_dynamic_auc", "k": [], "r": "r1.8", "t": "tf.contrib.metrics.streaming_dynamic_auc"}, {"p": "/api_docs/python/tf/contrib/metrics/streaming_false_negative_rate", "k": [], "r": "r1.8", "t": "tf.contrib.metrics.streaming_false_negative_rate"}, {"p": "/api_docs/python/tf/contrib/metrics/streaming_false_negative_rate_at_thresholds", "k": [], "r": "r1.8", "t": "tf.contrib.metrics.streaming_false_negative_rate_at_thresholds"}, {"p": "/api_docs/python/tf/contrib/metrics/streaming_false_negatives", "k": [], "r": "r1.8", "t": "tf.contrib.metrics.streaming_false_negatives"}, {"p": "/api_docs/python/tf/contrib/metrics/streaming_false_negatives_at_thresholds", "k": [], "r": "r1.8", "t": "tf.contrib.metrics.streaming_false_negatives_at_thresholds"}, {"p": "/api_docs/python/tf/contrib/metrics/streaming_false_positive_rate", "k": [], "r": "r1.8", "t": "tf.contrib.metrics.streaming_false_positive_rate"}, {"p": "/api_docs/python/tf/contrib/metrics/streaming_false_positive_rate_at_thresholds", "k": [], "r": "r1.8", "t": "tf.contrib.metrics.streaming_false_positive_rate_at_thresholds"}, {"p": "/api_docs/python/tf/contrib/metrics/streaming_false_positives", "k": [], "r": "r1.8", "t": "tf.contrib.metrics.streaming_false_positives"}, {"p": "/api_docs/python/tf/contrib/metrics/streaming_false_positives_at_thresholds", "k": [], "r": "r1.8", "t": "tf.contrib.metrics.streaming_false_positives_at_thresholds"}, {"p": "/api_docs/python/tf/contrib/metrics/streaming_mean", "k": [], "r": "r1.8", "t": "tf.contrib.metrics.streaming_mean"}, {"p": "/api_docs/python/tf/contrib/metrics/streaming_mean_absolute_error", "k": [], "r": "r1.8", "t": "tf.contrib.metrics.streaming_mean_absolute_error"}, {"p": "/api_docs/python/tf/contrib/metrics/streaming_mean_cosine_distance", "k": [], "r": "r1.8", "t": "tf.contrib.metrics.streaming_mean_cosine_distance"}, {"p": "/api_docs/python/tf/contrib/metrics/streaming_mean_iou", "k": [], "r": "r1.8", "t": "tf.contrib.metrics.streaming_mean_iou"}, {"p": "/api_docs/python/tf/contrib/metrics/streaming_mean_relative_error", "k": [], "r": "r1.8", "t": "tf.contrib.metrics.streaming_mean_relative_error"}, {"p": "/api_docs/python/tf/contrib/metrics/streaming_mean_squared_error", "k": [], "r": "r1.8", "t": "tf.contrib.metrics.streaming_mean_squared_error"}, {"p": "/api_docs/python/tf/contrib/metrics/streaming_mean_tensor", "k": [], "r": "r1.8", "t": "tf.contrib.metrics.streaming_mean_tensor"}, {"p": "/api_docs/python/tf/contrib/metrics/streaming_pearson_correlation", "k": [], "r": "r1.8", "t": "tf.contrib.metrics.streaming_pearson_correlation"}, {"p": "/api_docs/python/tf/contrib/metrics/streaming_percentage_less", "k": [], "r": "r1.8", "t": "tf.contrib.metrics.streaming_percentage_less"}, {"p": "/api_docs/python/tf/contrib/metrics/streaming_precision", "k": [], "r": "r1.8", "t": "tf.contrib.metrics.streaming_precision"}, {"p": "/api_docs/python/tf/contrib/metrics/streaming_precision_at_thresholds", "k": [], "r": "r1.8", "t": "tf.contrib.metrics.streaming_precision_at_thresholds"}, {"p": "/api_docs/python/tf/contrib/metrics/streaming_recall", "k": [], "r": "r1.8", "t": "tf.contrib.metrics.streaming_recall"}, {"p": "/api_docs/python/tf/contrib/metrics/streaming_recall_at_k", "k": [], "r": "r1.8", "t": "tf.contrib.metrics.streaming_recall_at_k"}, {"p": "/api_docs/python/tf/contrib/metrics/streaming_recall_at_thresholds", "k": [], "r": "r1.8", "t": "tf.contrib.metrics.streaming_recall_at_thresholds"}, {"p": "/api_docs/python/tf/contrib/metrics/streaming_root_mean_squared_error", "k": [], "r": "r1.8", "t": "tf.contrib.metrics.streaming_root_mean_squared_error"}, {"p": "/api_docs/python/tf/contrib/metrics/streaming_sensitivity_at_specificity", "k": [], "r": "r1.8", "t": "tf.contrib.metrics.streaming_sensitivity_at_specificity"}, {"p": "/api_docs/python/tf/contrib/metrics/streaming_sparse_average_precision_at_k", "k": [], "r": "r1.8", "t": "tf.contrib.metrics.streaming_sparse_average_precision_at_k"}, {"p": "/api_docs/python/tf/contrib/metrics/streaming_sparse_average_precision_at_top_k", "k": [], "r": "r1.8", "t": "tf.contrib.metrics.streaming_sparse_average_precision_at_top_k"}, {"p": "/api_docs/python/tf/contrib/metrics/streaming_sparse_precision_at_k", "k": [], "r": "r1.8", "t": "tf.contrib.metrics.streaming_sparse_precision_at_k"}, {"p": "/api_docs/python/tf/contrib/metrics/streaming_sparse_precision_at_top_k", "k": [], "r": "r1.8", "t": "tf.contrib.metrics.streaming_sparse_precision_at_top_k"}, {"p": "/api_docs/python/tf/contrib/metrics/streaming_sparse_recall_at_k", "k": [], "r": "r1.8", "t": "tf.contrib.metrics.streaming_sparse_recall_at_k"}, {"p": "/api_docs/python/tf/contrib/metrics/streaming_specificity_at_sensitivity", "k": [], "r": "r1.8", "t": "tf.contrib.metrics.streaming_specificity_at_sensitivity"}, {"p": "/api_docs/python/tf/contrib/metrics/streaming_true_negatives", "k": [], "r": "r1.8", "t": "tf.contrib.metrics.streaming_true_negatives"}, {"p": "/api_docs/python/tf/contrib/metrics/streaming_true_negatives_at_thresholds", "k": [], "r": "r1.8", "t": "tf.contrib.metrics.streaming_true_negatives_at_thresholds"}, {"p": "/api_docs/python/tf/contrib/metrics/streaming_true_positives", "k": [], "r": "r1.8", "t": "tf.contrib.metrics.streaming_true_positives"}, {"p": "/api_docs/python/tf/contrib/metrics/streaming_true_positives_at_thresholds", "k": [], "r": "r1.8", "t": "tf.contrib.metrics.streaming_true_positives_at_thresholds"}, {"p": "/api_docs/python/tf/contrib/model_pruning", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.contrib.model_pruning"}, {"p": "/api_docs/python/tf/contrib/model_pruning/MaskedBasicLSTMCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.8", "t": "tf.contrib.model_pruning.MaskedBasicLSTMCell"}, {"p": "/api_docs/python/tf/contrib/model_pruning/MaskedLSTMCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.8", "t": "tf.contrib.model_pruning.MaskedLSTMCell"}, {"p": "/api_docs/python/tf/contrib/model_pruning/Pruning", "k": ["__init__", "add_pruning_summaries", "conditional_mask_update_op", "mask_update_op", "print_hparams"], "r": "r1.8", "t": "tf.contrib.model_pruning.Pruning"}, {"p": "/api_docs/python/tf/contrib/model_pruning/apply_mask", "k": [], "r": "r1.8", "t": "tf.contrib.model_pruning.apply_mask"}, {"p": "/api_docs/python/tf/contrib/model_pruning/get_masked_weights", "k": [], "r": "r1.8", "t": "tf.contrib.model_pruning.get_masked_weights"}, {"p": "/api_docs/python/tf/contrib/model_pruning/get_masks", "k": [], "r": "r1.8", "t": "tf.contrib.model_pruning.get_masks"}, {"p": "/api_docs/python/tf/contrib/model_pruning/get_pruning_hparams", "k": [], "r": "r1.8", "t": "tf.contrib.model_pruning.get_pruning_hparams"}, {"p": "/api_docs/python/tf/contrib/model_pruning/get_thresholds", "k": [], "r": "r1.8", "t": "tf.contrib.model_pruning.get_thresholds"}, {"p": "/api_docs/python/tf/contrib/model_pruning/get_weight_sparsity", "k": [], "r": "r1.8", "t": "tf.contrib.model_pruning.get_weight_sparsity"}, {"p": "/api_docs/python/tf/contrib/model_pruning/get_weights", "k": [], "r": "r1.8", "t": "tf.contrib.model_pruning.get_weights"}, {"p": "/api_docs/python/tf/contrib/model_pruning/masked_conv2d", "k": [], "r": "r1.8", "t": "tf.contrib.model_pruning.masked_conv2d"}, {"p": "/api_docs/python/tf/contrib/model_pruning/masked_fully_connected", "k": [], "r": "r1.8", "t": "tf.contrib.model_pruning.masked_fully_connected"}, {"p": "/api_docs/python/tf/contrib/model_pruning/train", "k": [], "r": "r1.8", "t": "tf.contrib.model_pruning.train"}, {"p": "/api_docs/python/tf/contrib/nccl", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.contrib.nccl"}, {"p": "/api_docs/python/tf/contrib/nccl/all_max", "k": [], "r": "r1.8", "t": "tf.contrib.nccl.all_max"}, {"p": "/api_docs/python/tf/contrib/nccl/all_min", "k": [], "r": "r1.8", "t": "tf.contrib.nccl.all_min"}, {"p": "/api_docs/python/tf/contrib/nccl/all_prod", "k": [], "r": "r1.8", "t": "tf.contrib.nccl.all_prod"}, {"p": "/api_docs/python/tf/contrib/nccl/all_sum", "k": [], "r": "r1.8", "t": "tf.contrib.nccl.all_sum"}, {"p": "/api_docs/python/tf/contrib/nccl/broadcast", "k": [], "r": "r1.8", "t": "tf.contrib.nccl.broadcast"}, {"p": "/api_docs/python/tf/contrib/nccl/reduce_sum", "k": [], "r": "r1.8", "t": "tf.contrib.nccl.reduce_sum"}, {"p": "/api_docs/python/tf/contrib/nn", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.contrib.nn"}, {"p": "/api_docs/python/tf/contrib/nn/alpha_dropout", "k": [], "r": "r1.8", "t": "tf.contrib.nn.alpha_dropout"}, {"p": "/api_docs/python/tf/contrib/nn/conv1d_transpose", "k": [], "r": "r1.8", "t": "tf.contrib.nn.conv1d_transpose"}, {"p": "/api_docs/python/tf/contrib/nn/deprecated_flipped_sigmoid_cross_entropy_with_logits", "k": [], "r": "r1.8", "t": "tf.contrib.nn.deprecated_flipped_sigmoid_cross_entropy_with_logits"}, {"p": "/api_docs/python/tf/contrib/nn/deprecated_flipped_softmax_cross_entropy_with_logits", "k": [], "r": "r1.8", "t": "tf.contrib.nn.deprecated_flipped_softmax_cross_entropy_with_logits"}, {"p": "/api_docs/python/tf/contrib/nn/deprecated_flipped_sparse_softmax_cross_entropy_with_logits", "k": [], "r": "r1.8", "t": "tf.contrib.nn.deprecated_flipped_sparse_softmax_cross_entropy_with_logits"}, {"p": "/api_docs/python/tf/contrib/nn/nth_element", "k": [], "r": "r1.8", "t": "tf.contrib.nn.nth_element"}, {"p": "/api_docs/python/tf/contrib/nn/rank_sampled_softmax_loss", "k": [], "r": "r1.8", "t": "tf.contrib.nn.rank_sampled_softmax_loss"}, {"p": "/api_docs/python/tf/contrib/nn/sampled_sparse_softmax_loss", "k": [], "r": "r1.8", "t": "tf.contrib.nn.sampled_sparse_softmax_loss"}, {"p": "/api_docs/python/tf/contrib/nn/scaled_softplus", "k": [], "r": "r1.8", "t": "tf.contrib.nn.scaled_softplus"}, {"p": "/api_docs/python/tf/contrib/opt", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.contrib.opt"}, {"p": "/api_docs/python/tf/contrib/opt/AddSignOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.8", "t": "tf.contrib.opt.AddSignOptimizer"}, {"p": "/api_docs/python/tf/contrib/opt/DropStaleGradientOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.8", "t": "tf.contrib.opt.DropStaleGradientOptimizer"}, {"p": "/api_docs/python/tf/contrib/opt/ElasticAverageCustomGetter", "k": ["__call__", "__init__"], "r": "r1.8", "t": "tf.contrib.opt.ElasticAverageCustomGetter"}, {"p": "/api_docs/python/tf/contrib/opt/ElasticAverageOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_init_op", "get_name", "get_slot", "get_slot_names", "make_session_run_hook", "minimize", "variables", "BETA", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.8", "t": "tf.contrib.opt.ElasticAverageOptimizer"}, {"p": "/api_docs/python/tf/contrib/opt/ExternalOptimizerInterface", "k": ["__init__", "minimize"], "r": "r1.8", "t": "tf.contrib.opt.ExternalOptimizerInterface"}, {"p": "/api_docs/python/tf/contrib/opt/LazyAdamOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.8", "t": "tf.contrib.opt.LazyAdamOptimizer"}, {"p": "/api_docs/python/tf/contrib/opt/ModelAverageCustomGetter", "k": ["__call__", "__init__"], "r": "r1.8", "t": "tf.contrib.opt.ModelAverageCustomGetter"}, {"p": "/api_docs/python/tf/contrib/opt/ModelAverageOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_init_op", "get_name", "get_slot", "get_slot_names", "make_session_run_hook", "minimize", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.8", "t": "tf.contrib.opt.ModelAverageOptimizer"}, {"p": "/api_docs/python/tf/contrib/opt/MovingAverageOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "swapping_saver", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.8", "t": "tf.contrib.opt.MovingAverageOptimizer"}, {"p": "/api_docs/python/tf/contrib/opt/MultitaskOptimizerWrapper", "k": ["__getattr__", "__init__"], "r": "r1.8", "t": "tf.contrib.opt.MultitaskOptimizerWrapper"}, {"p": "/api_docs/python/tf/contrib/opt/NadamOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.8", "t": "tf.contrib.opt.NadamOptimizer"}, {"p": "/api_docs/python/tf/contrib/opt/PowerSignOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.8", "t": "tf.contrib.opt.PowerSignOptimizer"}, {"p": "/api_docs/python/tf/contrib/opt/ScipyOptimizerInterface", "k": ["__init__", "minimize"], "r": "r1.8", "t": "tf.contrib.opt.ScipyOptimizerInterface"}, {"p": "/api_docs/python/tf/contrib/opt/VariableClippingOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.8", "t": "tf.contrib.opt.VariableClippingOptimizer"}, {"p": "/api_docs/python/tf/contrib/opt/clip_gradients_by_global_norm", "k": [], "r": "r1.8", "t": "tf.contrib.opt.clip_gradients_by_global_norm"}, {"p": "/api_docs/python/tf/contrib/optimizer_v2", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.contrib.optimizer_v2"}, {"p": "/api_docs/python/tf/contrib/optimizer_v2/AdadeltaOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.8", "t": "tf.contrib.optimizer_v2.AdadeltaOptimizer"}, {"p": "/api_docs/python/tf/contrib/optimizer_v2/AdagradOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.8", "t": "tf.contrib.optimizer_v2.AdagradOptimizer"}, {"p": "/api_docs/python/tf/contrib/optimizer_v2/AdamOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.8", "t": "tf.contrib.optimizer_v2.AdamOptimizer"}, {"p": "/api_docs/python/tf/contrib/optimizer_v2/GradientDescentOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.8", "t": "tf.contrib.optimizer_v2.GradientDescentOptimizer"}, {"p": "/api_docs/python/tf/contrib/optimizer_v2/MomentumOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.8", "t": "tf.contrib.optimizer_v2.MomentumOptimizer"}, {"p": "/api_docs/python/tf/contrib/optimizer_v2/OptimizerV2", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.8", "t": "tf.contrib.optimizer_v2.OptimizerV2"}, {"p": "/api_docs/python/tf/contrib/optimizer_v2/RMSPropOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.8", "t": "tf.contrib.optimizer_v2.RMSPropOptimizer"}, {"p": "/api_docs/python/tf/contrib/periodic_resample", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.contrib.periodic_resample"}, {"p": "/api_docs/python/tf/contrib/periodic_resample/periodic_resample", "k": [], "r": "r1.8", "t": "tf.contrib.periodic_resample.periodic_resample"}, {"p": "/api_docs/python/tf/contrib/predictor", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.contrib.predictor"}, {"p": "/api_docs/python/tf/contrib/predictor/from_contrib_estimator", "k": [], "r": "r1.8", "t": "tf.contrib.predictor.from_contrib_estimator"}, {"p": "/api_docs/python/tf/contrib/predictor/from_estimator", "k": [], "r": "r1.8", "t": "tf.contrib.predictor.from_estimator"}, {"p": "/api_docs/python/tf/contrib/predictor/from_saved_model", "k": [], "r": "r1.8", "t": "tf.contrib.predictor.from_saved_model"}, {"p": "/api_docs/python/tf/contrib/proto", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.contrib.proto"}, {"p": "/api_docs/python/tf/contrib/proto/decode_proto", "k": [], "r": "r1.8", "t": "tf.contrib.proto.decode_proto"}, {"p": "/api_docs/python/tf/contrib/proto/encode_proto", "k": [], "r": "r1.8", "t": "tf.contrib.proto.encode_proto"}, {"p": "/api_docs/python/tf/contrib/quantization", "k": [], "r": "r1.8", "t": "tf.contrib.quantization"}, {"p": "/api_docs/python/tf/contrib/quantize", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.contrib.quantize"}, {"p": "/api_docs/python/tf/contrib/quantize/create_eval_graph", "k": [], "r": "r1.8", "t": "tf.contrib.quantize.create_eval_graph"}, {"p": "/api_docs/python/tf/contrib/quantize/create_training_graph", "k": [], "r": "r1.8", "t": "tf.contrib.quantize.create_training_graph"}, {"p": "/api_docs/python/tf/contrib/quantize/experimental_create_eval_graph", "k": [], "r": "r1.8", "t": "tf.contrib.quantize.experimental_create_eval_graph"}, {"p": "/api_docs/python/tf/contrib/quantize/experimental_create_training_graph", "k": [], "r": "r1.8", "t": "tf.contrib.quantize.experimental_create_training_graph"}, {"p": "/api_docs/python/tf/contrib/receptive_field", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.contrib.receptive_field"}, {"p": "/api_docs/python/tf/contrib/receptive_field/compute_receptive_field_from_graph_def", "k": [], "r": "r1.8", "t": "tf.contrib.receptive_field.compute_receptive_field_from_graph_def"}, {"p": "/api_docs/python/tf/contrib/receptive_field/get_compute_order", "k": [], "r": "r1.8", "t": "tf.contrib.receptive_field.get_compute_order"}, {"p": "/api_docs/python/tf/contrib/recurrent", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.contrib.recurrent"}, {"p": "/api_docs/python/tf/contrib/reduce_slice_ops", "k": ["__cached__", "__loader__", "__spec__", "absolute_import", "division", "print_function"], "r": "r1.8", "t": "tf.contrib.reduce_slice_ops"}, {"p": "/api_docs/python/tf/contrib/reduce_slice_ops/python", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.contrib.reduce_slice_ops.python"}, {"p": "/api_docs/python/tf/contrib/reduce_slice_ops/python/ops", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.contrib.reduce_slice_ops.python.ops"}, {"p": "/api_docs/python/tf/contrib/remote_fused_graph", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.contrib.remote_fused_graph"}, {"p": "/api_docs/python/tf/contrib/remote_fused_graph/remote_fused_graph_execute", "k": [], "r": "r1.8", "t": "tf.contrib.remote_fused_graph.remote_fused_graph_execute"}, {"p": "/api_docs/python/tf/contrib/resampler", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.contrib.resampler"}, {"p": "/api_docs/python/tf/contrib/resampler/resampler", "k": [], "r": "r1.8", "t": "tf.contrib.resampler.resampler"}, {"p": "/api_docs/python/tf/contrib/rnn", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.contrib.rnn"}, {"p": "/api_docs/python/tf/contrib/rnn/AttentionCellWrapper", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.8", "t": "tf.contrib.rnn.AttentionCellWrapper"}, {"p": "/api_docs/python/tf/contrib/rnn/BasicLSTMCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.8", "t": "tf.contrib.rnn.BasicLSTMCell"}, {"p": "/api_docs/python/tf/contrib/rnn/BasicRNNCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.8", "t": "tf.contrib.rnn.BasicRNNCell"}, {"p": "/api_docs/python/tf/contrib/rnn/BidirectionalGridLSTMCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "state_tuple_type", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.8", "t": "tf.contrib.rnn.BidirectionalGridLSTMCell"}, {"p": "/api_docs/python/tf/contrib/rnn/CompiledWrapper", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.8", "t": "tf.contrib.rnn.CompiledWrapper"}, {"p": "/api_docs/python/tf/contrib/rnn/Conv1DLSTMCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.8", "t": "tf.contrib.rnn.Conv1DLSTMCell"}, {"p": "/api_docs/python/tf/contrib/rnn/Conv2DLSTMCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.8", "t": "tf.contrib.rnn.Conv2DLSTMCell"}, {"p": "/api_docs/python/tf/contrib/rnn/Conv3DLSTMCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.8", "t": "tf.contrib.rnn.Conv3DLSTMCell"}, {"p": "/api_docs/python/tf/contrib/rnn/ConvLSTMCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.8", "t": "tf.contrib.rnn.ConvLSTMCell"}, {"p": "/api_docs/python/tf/contrib/rnn/CoupledInputForgetGateLSTMCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.8", "t": "tf.contrib.rnn.CoupledInputForgetGateLSTMCell"}, {"p": "/api_docs/python/tf/contrib/rnn/DeviceWrapper", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.8", "t": "tf.contrib.rnn.DeviceWrapper"}, {"p": "/api_docs/python/tf/contrib/rnn/DropoutWrapper", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "wrapped_cell", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.8", "t": "tf.contrib.rnn.DropoutWrapper"}, {"p": "/api_docs/python/tf/contrib/rnn/EmbeddingWrapper", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.8", "t": "tf.contrib.rnn.EmbeddingWrapper"}, {"p": "/api_docs/python/tf/contrib/rnn/FusedRNNCell", "k": ["__call__"], "r": "r1.8", "t": "tf.contrib.rnn.FusedRNNCell"}, {"p": "/api_docs/python/tf/contrib/rnn/FusedRNNCellAdaptor", "k": ["__call__", "__init__"], "r": "r1.8", "t": "tf.contrib.rnn.FusedRNNCellAdaptor"}, {"p": "/api_docs/python/tf/contrib/rnn/GLSTMCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.8", "t": "tf.contrib.rnn.GLSTMCell"}, {"p": "/api_docs/python/tf/contrib/rnn/GRUBlockCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.8", "t": "tf.contrib.rnn.GRUBlockCell"}, {"p": "/api_docs/python/tf/contrib/rnn/GRUBlockCellV2", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.8", "t": "tf.contrib.rnn.GRUBlockCellV2"}, {"p": "/api_docs/python/tf/contrib/rnn/GRUCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.8", "t": "tf.contrib.rnn.GRUCell"}, {"p": "/api_docs/python/tf/contrib/rnn/GridLSTMCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "state_tuple_type", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.8", "t": "tf.contrib.rnn.GridLSTMCell"}, {"p": "/api_docs/python/tf/contrib/rnn/HighwayWrapper", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.8", "t": "tf.contrib.rnn.HighwayWrapper"}, {"p": "/api_docs/python/tf/contrib/rnn/InputProjectionWrapper", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.8", "t": "tf.contrib.rnn.InputProjectionWrapper"}, {"p": "/api_docs/python/tf/contrib/rnn/IntersectionRNNCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.8", "t": "tf.contrib.rnn.IntersectionRNNCell"}, {"p": "/api_docs/python/tf/contrib/rnn/LSTMBlockCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.8", "t": "tf.contrib.rnn.LSTMBlockCell"}, {"p": "/api_docs/python/tf/contrib/rnn/LSTMBlockFusedCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "num_units", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "r1.8", "t": "tf.contrib.rnn.LSTMBlockFusedCell"}, {"p": "/api_docs/python/tf/contrib/rnn/LSTMBlockWrapper", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "num_units", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "r1.8", "t": "tf.contrib.rnn.LSTMBlockWrapper"}, {"p": "/api_docs/python/tf/contrib/rnn/LSTMCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.8", "t": "tf.contrib.rnn.LSTMCell"}, {"p": "/api_docs/python/tf/contrib/rnn/LSTMStateTuple", "k": ["c", "dtype", "h", "__new__"], "r": "r1.8", "t": "tf.contrib.rnn.LSTMStateTuple"}, {"p": "/api_docs/python/tf/contrib/rnn/LayerNormBasicLSTMCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.8", "t": "tf.contrib.rnn.LayerNormBasicLSTMCell"}, {"p": "/api_docs/python/tf/contrib/rnn/LayerRNNCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.8", "t": "tf.contrib.rnn.LayerRNNCell"}, {"p": "/api_docs/python/tf/contrib/rnn/MultiRNNCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.8", "t": "tf.contrib.rnn.MultiRNNCell"}, {"p": "/api_docs/python/tf/contrib/rnn/NASCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.8", "t": "tf.contrib.rnn.NASCell"}, {"p": "/api_docs/python/tf/contrib/rnn/OutputProjectionWrapper", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.8", "t": "tf.contrib.rnn.OutputProjectionWrapper"}, {"p": "/api_docs/python/tf/contrib/rnn/PhasedLSTMCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.8", "t": "tf.contrib.rnn.PhasedLSTMCell"}, {"p": "/api_docs/python/tf/contrib/rnn/RNNCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.8", "t": "tf.contrib.rnn.RNNCell"}, {"p": "/api_docs/python/tf/contrib/rnn/ResidualWrapper", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.8", "t": "tf.contrib.rnn.ResidualWrapper"}, {"p": "/api_docs/python/tf/contrib/rnn/TimeFreqLSTMCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.8", "t": "tf.contrib.rnn.TimeFreqLSTMCell"}, {"p": "/api_docs/python/tf/contrib/rnn/TimeReversedFusedRNN", "k": ["__call__", "__init__"], "r": "r1.8", "t": "tf.contrib.rnn.TimeReversedFusedRNN"}, {"p": "/api_docs/python/tf/contrib/rnn/UGRNNCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.8", "t": "tf.contrib.rnn.UGRNNCell"}, {"p": "/api_docs/python/tf/contrib/rnn/best_effort_input_batch_size", "k": [], "r": "r1.8", "t": "tf.contrib.rnn.best_effort_input_batch_size"}, {"p": "/api_docs/python/tf/contrib/rnn/stack_bidirectional_dynamic_rnn", "k": [], "r": "r1.8", "t": "tf.contrib.rnn.stack_bidirectional_dynamic_rnn"}, {"p": "/api_docs/python/tf/contrib/rnn/stack_bidirectional_rnn", "k": [], "r": "r1.8", "t": "tf.contrib.rnn.stack_bidirectional_rnn"}, {"p": "/api_docs/python/tf/contrib/rnn/transpose_batch_time", "k": [], "r": "r1.8", "t": "tf.contrib.rnn.transpose_batch_time"}, {"p": "/api_docs/python/tf/contrib/rpc", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.contrib.rpc"}, {"p": "/api_docs/python/tf/contrib/rpc/rpc", "k": [], "r": "r1.8", "t": "tf.contrib.rpc.rpc"}, {"p": "/api_docs/python/tf/contrib/rpc/try_rpc", "k": [], "r": "r1.8", "t": "tf.contrib.rpc.try_rpc"}, {"p": "/api_docs/python/tf/contrib/saved_model", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.contrib.saved_model"}, {"p": "/api_docs/python/tf/contrib/saved_model/get_signature_def_by_key", "k": [], "r": "r1.8", "t": "tf.contrib.saved_model.get_signature_def_by_key"}, {"p": "/api_docs/python/tf/contrib/seq2seq", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.contrib.seq2seq"}, {"p": "/api_docs/python/tf/contrib/seq2seq/AttentionMechanism", "k": ["alignments_size", "state_size"], "r": "r1.8", "t": "tf.contrib.seq2seq.AttentionMechanism"}, {"p": "/api_docs/python/tf/contrib/seq2seq/AttentionWrapper", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.8", "t": "tf.contrib.seq2seq.AttentionWrapper"}, {"p": "/api_docs/python/tf/contrib/seq2seq/AttentionWrapperState", "k": ["alignment_history", "alignments", "attention", "attention_state", "cell_state", "time", "__new__", "clone"], "r": "r1.8", "t": "tf.contrib.seq2seq.AttentionWrapperState"}, {"p": "/api_docs/python/tf/contrib/seq2seq/BahdanauAttention", "k": ["alignments_size", "batch_size", "keys", "memory_layer", "query_layer", "state_size", "values", "__call__", "__init__", "initial_alignments", "initial_state"], "r": "r1.8", "t": "tf.contrib.seq2seq.BahdanauAttention"}, {"p": "/api_docs/python/tf/contrib/seq2seq/BahdanauMonotonicAttention", "k": ["alignments_size", "batch_size", "keys", "memory_layer", "query_layer", "state_size", "values", "__call__", "__init__", "initial_alignments", "initial_state"], "r": "r1.8", "t": "tf.contrib.seq2seq.BahdanauMonotonicAttention"}, {"p": "/api_docs/python/tf/contrib/seq2seq/BasicDecoder", "k": ["batch_size", "output_dtype", "output_size", "tracks_own_finished", "__init__", "finalize", "initialize", "step"], "r": "r1.8", "t": "tf.contrib.seq2seq.BasicDecoder"}, {"p": "/api_docs/python/tf/contrib/seq2seq/BasicDecoderOutput", "k": ["rnn_output", "sample_id", "__new__"], "r": "r1.8", "t": "tf.contrib.seq2seq.BasicDecoderOutput"}, {"p": "/api_docs/python/tf/contrib/seq2seq/BeamSearchDecoder", "k": ["batch_size", "output_dtype", "output_size", "tracks_own_finished", "__init__", "finalize", "initialize", "step"], "r": "r1.8", "t": "tf.contrib.seq2seq.BeamSearchDecoder"}, {"p": "/api_docs/python/tf/contrib/seq2seq/BeamSearchDecoderOutput", "k": ["parent_ids", "predicted_ids", "scores", "__new__"], "r": "r1.8", "t": "tf.contrib.seq2seq.BeamSearchDecoderOutput"}, {"p": "/api_docs/python/tf/contrib/seq2seq/BeamSearchDecoderState", "k": ["cell_state", "finished", "lengths", "log_probs", "__new__"], "r": "r1.8", "t": "tf.contrib.seq2seq.BeamSearchDecoderState"}, {"p": "/api_docs/python/tf/contrib/seq2seq/CustomHelper", "k": ["batch_size", "sample_ids_dtype", "sample_ids_shape", "__init__", "initialize", "next_inputs", "sample"], "r": "r1.8", "t": "tf.contrib.seq2seq.CustomHelper"}, {"p": "/api_docs/python/tf/contrib/seq2seq/Decoder", "k": ["batch_size", "output_dtype", "output_size", "tracks_own_finished", "finalize", "initialize", "step"], "r": "r1.8", "t": "tf.contrib.seq2seq.Decoder"}, {"p": "/api_docs/python/tf/contrib/seq2seq/FinalBeamSearchDecoderOutput", "k": ["beam_search_decoder_output", "predicted_ids", "__new__"], "r": "r1.8", "t": "tf.contrib.seq2seq.FinalBeamSearchDecoderOutput"}, {"p": "/api_docs/python/tf/contrib/seq2seq/GreedyEmbeddingHelper", "k": ["batch_size", "sample_ids_dtype", "sample_ids_shape", "__init__", "initialize", "next_inputs", "sample"], "r": "r1.8", "t": "tf.contrib.seq2seq.GreedyEmbeddingHelper"}, {"p": "/api_docs/python/tf/contrib/seq2seq/Helper", "k": ["batch_size", "sample_ids_dtype", "sample_ids_shape", "initialize", "next_inputs", "sample"], "r": "r1.8", "t": "tf.contrib.seq2seq.Helper"}, {"p": "/api_docs/python/tf/contrib/seq2seq/InferenceHelper", "k": ["batch_size", "sample_ids_dtype", "sample_ids_shape", "__init__", "initialize", "next_inputs", "sample"], "r": "r1.8", "t": "tf.contrib.seq2seq.InferenceHelper"}, {"p": "/api_docs/python/tf/contrib/seq2seq/LuongAttention", "k": ["alignments_size", "batch_size", "keys", "memory_layer", "query_layer", "state_size", "values", "__call__", "__init__", "initial_alignments", "initial_state"], "r": "r1.8", "t": "tf.contrib.seq2seq.LuongAttention"}, {"p": "/api_docs/python/tf/contrib/seq2seq/LuongMonotonicAttention", "k": ["alignments_size", "batch_size", "keys", "memory_layer", "query_layer", "state_size", "values", "__call__", "__init__", "initial_alignments", "initial_state"], "r": "r1.8", "t": "tf.contrib.seq2seq.LuongMonotonicAttention"}, {"p": "/api_docs/python/tf/contrib/seq2seq/SampleEmbeddingHelper", "k": ["batch_size", "sample_ids_dtype", "sample_ids_shape", "__init__", "initialize", "next_inputs", "sample"], "r": "r1.8", "t": "tf.contrib.seq2seq.SampleEmbeddingHelper"}, {"p": "/api_docs/python/tf/contrib/seq2seq/ScheduledEmbeddingTrainingHelper", "k": ["batch_size", "inputs", "sample_ids_dtype", "sample_ids_shape", "sequence_length", "__init__", "initialize", "next_inputs", "sample"], "r": "r1.8", "t": "tf.contrib.seq2seq.ScheduledEmbeddingTrainingHelper"}, {"p": "/api_docs/python/tf/contrib/seq2seq/ScheduledOutputTrainingHelper", "k": ["batch_size", "inputs", "sample_ids_dtype", "sample_ids_shape", "sequence_length", "__init__", "initialize", "next_inputs", "sample"], "r": "r1.8", "t": "tf.contrib.seq2seq.ScheduledOutputTrainingHelper"}, {"p": "/api_docs/python/tf/contrib/seq2seq/TrainingHelper", "k": ["batch_size", "inputs", "sample_ids_dtype", "sample_ids_shape", "sequence_length", "__init__", "initialize", "next_inputs", "sample"], "r": "r1.8", "t": "tf.contrib.seq2seq.TrainingHelper"}, {"p": "/api_docs/python/tf/contrib/seq2seq/dynamic_decode", "k": [], "r": "r1.8", "t": "tf.contrib.seq2seq.dynamic_decode"}, {"p": "/api_docs/python/tf/contrib/seq2seq/gather_tree", "k": [], "r": "r1.8", "t": "tf.contrib.seq2seq.gather_tree"}, {"p": "/api_docs/python/tf/contrib/seq2seq/hardmax", "k": [], "r": "r1.8", "t": "tf.contrib.seq2seq.hardmax"}, {"p": "/api_docs/python/tf/contrib/seq2seq/monotonic_attention", "k": [], "r": "r1.8", "t": "tf.contrib.seq2seq.monotonic_attention"}, {"p": "/api_docs/python/tf/contrib/seq2seq/safe_cumprod", "k": [], "r": "r1.8", "t": "tf.contrib.seq2seq.safe_cumprod"}, {"p": "/api_docs/python/tf/contrib/seq2seq/sequence_loss", "k": [], "r": "r1.8", "t": "tf.contrib.seq2seq.sequence_loss"}, {"p": "/api_docs/python/tf/contrib/seq2seq/tile_batch", "k": [], "r": "r1.8", "t": "tf.contrib.seq2seq.tile_batch"}, {"p": "/api_docs/python/tf/contrib/session_bundle", "k": [], "r": "r1.8", "t": "tf.contrib.session_bundle"}, {"p": "/api_docs/python/tf/contrib/signal", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.contrib.signal"}, {"p": "/api_docs/python/tf/contrib/signal/frame", "k": [], "r": "r1.8", "t": "tf.contrib.signal.frame"}, {"p": "/api_docs/python/tf/contrib/signal/hamming_window", "k": [], "r": "r1.8", "t": "tf.contrib.signal.hamming_window"}, {"p": "/api_docs/python/tf/contrib/signal/hann_window", "k": [], "r": "r1.8", "t": "tf.contrib.signal.hann_window"}, {"p": "/api_docs/python/tf/contrib/signal/inverse_stft", "k": [], "r": "r1.8", "t": "tf.contrib.signal.inverse_stft"}, {"p": "/api_docs/python/tf/contrib/signal/inverse_stft_window_fn", "k": [], "r": "r1.8", "t": "tf.contrib.signal.inverse_stft_window_fn"}, {"p": "/api_docs/python/tf/contrib/signal/linear_to_mel_weight_matrix", "k": [], "r": "r1.8", "t": "tf.contrib.signal.linear_to_mel_weight_matrix"}, {"p": "/api_docs/python/tf/contrib/signal/mfccs_from_log_mel_spectrograms", "k": [], "r": "r1.8", "t": "tf.contrib.signal.mfccs_from_log_mel_spectrograms"}, {"p": "/api_docs/python/tf/contrib/signal/overlap_and_add", "k": [], "r": "r1.8", "t": "tf.contrib.signal.overlap_and_add"}, {"p": "/api_docs/python/tf/contrib/signal/stft", "k": [], "r": "r1.8", "t": "tf.contrib.signal.stft"}, {"p": "/api_docs/python/tf/contrib/slim", "k": [], "r": "r1.8", "t": "tf.contrib.slim"}, {"p": "/api_docs/python/tf/contrib/solvers", "k": [], "r": "r1.8", "t": "tf.contrib.solvers"}, {"p": "/api_docs/python/tf/contrib/sparsemax", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.contrib.sparsemax"}, {"p": "/api_docs/python/tf/contrib/sparsemax/sparsemax", "k": [], "r": "r1.8", "t": "tf.contrib.sparsemax.sparsemax"}, {"p": "/api_docs/python/tf/contrib/sparsemax/sparsemax_loss", "k": [], "r": "r1.8", "t": "tf.contrib.sparsemax.sparsemax_loss"}, {"p": "/api_docs/python/tf/contrib/specs", "k": [], "r": "r1.8", "t": "tf.contrib.specs"}, {"p": "/api_docs/python/tf/contrib/staging", "k": ["__cached__", "__loader__", "__spec__", "absolute_import", "division", "print_function"], "r": "r1.8", "t": "tf.contrib.staging"}, {"p": "/api_docs/python/tf/contrib/staging/StagingArea", "k": ["capacity", "dtypes", "memory_limit", "name", "names", "shapes", "__init__", "clear", "get", "peek", "put", "size"], "r": "r1.8", "t": "tf.contrib.staging.StagingArea"}, {"p": "/api_docs/python/tf/contrib/stat_summarizer", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.contrib.stat_summarizer"}, {"p": "/api_docs/python/tf/contrib/stat_summarizer/DeleteStatSummarizer", "k": [], "r": "r1.8", "t": "tf.contrib.stat_summarizer.DeleteStatSummarizer"}, {"p": "/api_docs/python/tf/contrib/stat_summarizer/NewStatSummarizer", "k": [], "r": "r1.8", "t": "tf.contrib.stat_summarizer.NewStatSummarizer"}, {"p": "/api_docs/python/tf/contrib/stat_summarizer/StatSummarizer", "k": ["GetOutputString", "PrintStepStats", "ProcessStepStats", "ProcessStepStatsStr", "__getattr__", "__init__", "__setattr__", "__swig_getmethods__", "__swig_setmethods__"], "r": "r1.8", "t": "tf.contrib.stat_summarizer.StatSummarizer"}, {"p": "/api_docs/python/tf/contrib/stateless", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.contrib.stateless"}, {"p": "/api_docs/python/tf/contrib/stateless/stateless_random_normal", "k": [], "r": "r1.8", "t": "tf.contrib.stateless.stateless_random_normal"}, {"p": "/api_docs/python/tf/contrib/stateless/stateless_random_uniform", "k": [], "r": "r1.8", "t": "tf.contrib.stateless.stateless_random_uniform"}, {"p": "/api_docs/python/tf/contrib/stateless/stateless_truncated_normal", "k": [], "r": "r1.8", "t": "tf.contrib.stateless.stateless_truncated_normal"}, {"p": "/api_docs/python/tf/contrib/summary", "k": ["__cached__", "__loader__", "__spec__", "absolute_import", "division", "print_function"], "r": "r1.8", "t": "tf.contrib.summary"}, {"p": "/api_docs/python/tf/contrib/summary/SummaryWriter", "k": ["__init__", "as_default", "set_as_default"], "r": "r1.8", "t": "tf.contrib.summary.SummaryWriter"}, {"p": "/api_docs/python/tf/contrib/summary/all_summary_ops", "k": [], "r": "r1.8", "t": "tf.contrib.summary.all_summary_ops"}, {"p": "/api_docs/python/tf/contrib/summary/always_record_summaries", "k": [], "r": "r1.8", "t": "tf.contrib.summary.always_record_summaries"}, {"p": "/api_docs/python/tf/contrib/summary/audio", "k": [], "r": "r1.8", "t": "tf.contrib.summary.audio"}, {"p": "/api_docs/python/tf/contrib/summary/create_db_writer", "k": [], "r": "r1.8", "t": "tf.contrib.summary.create_db_writer"}, {"p": "/api_docs/python/tf/contrib/summary/create_file_writer", "k": [], "r": "r1.8", "t": "tf.contrib.summary.create_file_writer"}, {"p": "/api_docs/python/tf/contrib/summary/create_summary_file_writer", "k": [], "r": "r1.8", "t": "tf.contrib.summary.create_summary_file_writer"}, {"p": "/api_docs/python/tf/contrib/summary/eval_dir", "k": [], "r": "r1.8", "t": "tf.contrib.summary.eval_dir"}, {"p": "/api_docs/python/tf/contrib/summary/flush", "k": [], "r": "r1.8", "t": "tf.contrib.summary.flush"}, {"p": "/api_docs/python/tf/contrib/summary/generic", "k": [], "r": "r1.8", "t": "tf.contrib.summary.generic"}, {"p": "/api_docs/python/tf/contrib/summary/graph", "k": [], "r": "r1.8", "t": "tf.contrib.summary.graph"}, {"p": "/api_docs/python/tf/contrib/summary/histogram", "k": [], "r": "r1.8", "t": "tf.contrib.summary.histogram"}, {"p": "/api_docs/python/tf/contrib/summary/image", "k": [], "r": "r1.8", "t": "tf.contrib.summary.image"}, {"p": "/api_docs/python/tf/contrib/summary/import_event", "k": [], "r": "r1.8", "t": "tf.contrib.summary.import_event"}, {"p": "/api_docs/python/tf/contrib/summary/initialize", "k": [], "r": "r1.8", "t": "tf.contrib.summary.initialize"}, {"p": "/api_docs/python/tf/contrib/summary/never_record_summaries", "k": [], "r": "r1.8", "t": "tf.contrib.summary.never_record_summaries"}, {"p": "/api_docs/python/tf/contrib/summary/record_summaries_every_n_global_steps", "k": [], "r": "r1.8", "t": "tf.contrib.summary.record_summaries_every_n_global_steps"}, {"p": "/api_docs/python/tf/contrib/summary/scalar", "k": [], "r": "r1.8", "t": "tf.contrib.summary.scalar"}, {"p": "/api_docs/python/tf/contrib/summary/should_record_summaries", "k": [], "r": "r1.8", "t": "tf.contrib.summary.should_record_summaries"}, {"p": "/api_docs/python/tf/contrib/summary/summary_writer_initializer_op", "k": [], "r": "r1.8", "t": "tf.contrib.summary.summary_writer_initializer_op"}, {"p": "/api_docs/python/tf/contrib/tensor_forest", "k": [], "r": "r1.8", "t": "tf.contrib.tensor_forest"}, {"p": "/api_docs/python/tf/contrib/tensorboard", "k": [], "r": "r1.8", "t": "tf.contrib.tensorboard"}, {"p": "/api_docs/python/tf/contrib/testing", "k": [], "r": "r1.8", "t": "tf.contrib.testing"}, {"p": "/api_docs/python/tf/contrib/tfprof", "k": [], "r": "r1.8", "t": "tf.contrib.tfprof"}, {"p": "/api_docs/python/tf/contrib/timeseries", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.contrib.timeseries"}, {"p": "/api_docs/python/tf/contrib/timeseries/ARModel", "k": ["exogenous_feature_columns", "__init__", "define_loss", "generate", "get_batch_loss", "get_start_state", "initialize_graph", "loss_op", "predict", "prediction_ops", "random_model_parameters", "NORMAL_LIKELIHOOD_LOSS", "SQUARED_LOSS"], "r": "r1.8", "t": "tf.contrib.timeseries.ARModel"}, {"p": "/api_docs/python/tf/contrib/timeseries/ARRegressor", "k": ["config", "model_dir", "model_fn", "params", "__init__", "build_raw_serving_input_receiver_fn", "evaluate", "export_savedmodel", "get_variable_names", "get_variable_value", "latest_checkpoint", "predict", "train"], "r": "r1.8", "t": "tf.contrib.timeseries.ARRegressor"}, {"p": "/api_docs/python/tf/contrib/timeseries/CSVReader", "k": ["__init__", "check_dataset_size", "read", "read_full"], "r": "r1.8", "t": "tf.contrib.timeseries.CSVReader"}, {"p": "/api_docs/python/tf/contrib/timeseries/FilteringResults", "k": ["STATE_PREFIX", "STATE_TUPLE", "TIMES"], "r": "r1.8", "t": "tf.contrib.timeseries.FilteringResults"}, {"p": "/api_docs/python/tf/contrib/timeseries/NumpyReader", "k": ["__init__", "check_dataset_size", "read", "read_full"], "r": "r1.8", "t": "tf.contrib.timeseries.NumpyReader"}, {"p": "/api_docs/python/tf/contrib/timeseries/RandomWindowInputFn", "k": ["__call__", "__init__", "create_batch"], "r": "r1.8", "t": "tf.contrib.timeseries.RandomWindowInputFn"}, {"p": "/api_docs/python/tf/contrib/timeseries/StructuralEnsembleRegressor", "k": ["config", "model_dir", "model_fn", "params", "__init__", "build_raw_serving_input_receiver_fn", "evaluate", "export_savedmodel", "get_variable_names", "get_variable_value", "latest_checkpoint", "predict", "train"], "r": "r1.8", "t": "tf.contrib.timeseries.StructuralEnsembleRegressor"}, {"p": "/api_docs/python/tf/contrib/timeseries/TrainEvalFeatures", "k": ["TIMES", "VALUES"], "r": "r1.8", "t": "tf.contrib.timeseries.TrainEvalFeatures"}, {"p": "/api_docs/python/tf/contrib/timeseries/WholeDatasetInputFn", "k": ["__call__", "__init__", "create_batch"], "r": "r1.8", "t": "tf.contrib.timeseries.WholeDatasetInputFn"}, {"p": "/api_docs/python/tf/contrib/timeseries/predict_continuation_input_fn", "k": [], "r": "r1.8", "t": "tf.contrib.timeseries.predict_continuation_input_fn"}, {"p": "/api_docs/python/tf/contrib/timeseries/saved_model_utils", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.contrib.timeseries.saved_model_utils"}, {"p": "/api_docs/python/tf/contrib/timeseries/saved_model_utils/cold_start_filter", "k": [], "r": "r1.8", "t": "tf.contrib.timeseries.saved_model_utils.cold_start_filter"}, {"p": "/api_docs/python/tf/contrib/timeseries/saved_model_utils/filter_continuation", "k": [], "r": "r1.8", "t": "tf.contrib.timeseries.saved_model_utils.filter_continuation"}, {"p": "/api_docs/python/tf/contrib/timeseries/saved_model_utils/predict_continuation", "k": [], "r": "r1.8", "t": "tf.contrib.timeseries.saved_model_utils.predict_continuation"}, {"p": "/api_docs/python/tf/contrib/tpu", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.contrib.tpu"}, {"p": "/api_docs/python/tf/contrib/tpu/CrossShardOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.8", "t": "tf.contrib.tpu.CrossShardOptimizer"}, {"p": "/api_docs/python/tf/contrib/tpu/DeviceAssignment", "k": ["computation_shape", "core_assignment", "num_cores_per_replica", "num_replicas", "topology", "__init__", "host_device", "lookup_replicas", "tpu_device", "tpu_ordinal"], "r": "r1.8", "t": "tf.contrib.tpu.DeviceAssignment"}, {"p": "/api_docs/python/tf/contrib/tpu/InfeedQueue", "k": ["number_of_shards", "number_of_tuple_elements", "shard_dimensions", "sharding_policies", "tuple_shapes", "tuple_types", "__init__", "freeze", "generate_dequeue_op", "generate_enqueue_ops", "set_configuration_from_input_tensors", "set_configuration_from_sharded_input_tensors", "set_number_of_shards", "set_shard_dimensions", "set_tuple_shapes", "set_tuple_types", "split_inputs_and_generate_enqueue_ops"], "r": "r1.8", "t": "tf.contrib.tpu.InfeedQueue"}, {"p": "/api_docs/python/tf/contrib/tpu/RunConfig", "k": ["cluster", "cluster_spec", "evaluation_master", "global_id_in_cluster", "is_chief", "keep_checkpoint_every_n_hours", "keep_checkpoint_max", "log_step_count_steps", "master", "model_dir", "num_ps_replicas", "num_worker_replicas", "save_checkpoints_secs", "save_checkpoints_steps", "save_summary_steps", "service", "session_config", "task_id", "task_type", "tf_random_seed", "tpu_config", "train_distribute", "__init__", "replace"], "r": "r1.8", "t": "tf.contrib.tpu.RunConfig"}, {"p": "/api_docs/python/tf/contrib/tpu/TPUConfig", "k": ["computation_shape", "initial_infeed_sleep_secs", "iterations_per_loop", "num_shards", "per_host_input_for_training", "tpu_job_name", "__new__"], "r": "r1.8", "t": "tf.contrib.tpu.TPUConfig"}, {"p": "/api_docs/python/tf/contrib/tpu/TPUEstimator", "k": ["config", "model_dir", "model_fn", "params", "__init__", "evaluate", "export_savedmodel", "get_variable_names", "get_variable_value", "latest_checkpoint", "predict", "train"], "r": "r1.8", "t": "tf.contrib.tpu.TPUEstimator"}, {"p": "/api_docs/python/tf/contrib/tpu/TPUEstimatorSpec", "k": ["eval_metrics", "export_outputs", "host_call", "loss", "mode", "predictions", "scaffold_fn", "train_op", "__new__", "as_estimator_spec"], "r": "r1.8", "t": "tf.contrib.tpu.TPUEstimatorSpec"}, {"p": "/api_docs/python/tf/contrib/tpu/Topology", "k": ["device_coordinates", "mesh_shape", "__init__", "serialized"], "r": "r1.8", "t": "tf.contrib.tpu.Topology"}, {"p": "/api_docs/python/tf/contrib/tpu/batch_parallel", "k": [], "r": "r1.8", "t": "tf.contrib.tpu.batch_parallel"}, {"p": "/api_docs/python/tf/contrib/tpu/core", "k": [], "r": "r1.8", "t": "tf.contrib.tpu.core"}, {"p": "/api_docs/python/tf/contrib/tpu/cross_replica_sum", "k": [], "r": "r1.8", "t": "tf.contrib.tpu.cross_replica_sum"}, {"p": "/api_docs/python/tf/contrib/tpu/device_assignment", "k": [], "r": "r1.8", "t": "tf.contrib.tpu.device_assignment"}, {"p": "/api_docs/python/tf/contrib/tpu/infeed_dequeue", "k": [], "r": "r1.8", "t": "tf.contrib.tpu.infeed_dequeue"}, {"p": "/api_docs/python/tf/contrib/tpu/infeed_dequeue_tuple", "k": [], "r": "r1.8", "t": "tf.contrib.tpu.infeed_dequeue_tuple"}, {"p": "/api_docs/python/tf/contrib/tpu/initialize_system", "k": [], "r": "r1.8", "t": "tf.contrib.tpu.initialize_system"}, {"p": "/api_docs/python/tf/contrib/tpu/outfeed_enqueue", "k": [], "r": "r1.8", "t": "tf.contrib.tpu.outfeed_enqueue"}, {"p": "/api_docs/python/tf/contrib/tpu/outfeed_enqueue_tuple", "k": [], "r": "r1.8", "t": "tf.contrib.tpu.outfeed_enqueue_tuple"}, {"p": "/api_docs/python/tf/contrib/tpu/profiler", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.contrib.tpu.profiler"}, {"p": "/api_docs/python/tf/contrib/tpu/profiler/Device", "k": ["ResourcesEntry"], "r": "r1.8", "t": "tf.contrib.tpu.profiler.Device"}, {"p": "/api_docs/python/tf/contrib/tpu/profiler/Device/ResourcesEntry", "k": [], "r": "r1.8", "t": "tf.contrib.tpu.profiler.Device.ResourcesEntry"}, {"p": "/api_docs/python/tf/contrib/tpu/profiler/Resource", "k": [], "r": "r1.8", "t": "tf.contrib.tpu.profiler.Resource"}, {"p": "/api_docs/python/tf/contrib/tpu/profiler/Trace", "k": ["DevicesEntry"], "r": "r1.8", "t": "tf.contrib.tpu.profiler.Trace"}, {"p": "/api_docs/python/tf/contrib/tpu/profiler/Trace/DevicesEntry", "k": [], "r": "r1.8", "t": "tf.contrib.tpu.profiler.Trace.DevicesEntry"}, {"p": "/api_docs/python/tf/contrib/tpu/profiler/TraceEvent", "k": [], "r": "r1.8", "t": "tf.contrib.tpu.profiler.TraceEvent"}, {"p": "/api_docs/python/tf/contrib/tpu/repeat", "k": [], "r": "r1.8", "t": "tf.contrib.tpu.repeat"}, {"p": "/api_docs/python/tf/contrib/tpu/replicate", "k": [], "r": "r1.8", "t": "tf.contrib.tpu.replicate"}, {"p": "/api_docs/python/tf/contrib/tpu/rewrite", "k": [], "r": "r1.8", "t": "tf.contrib.tpu.rewrite"}, {"p": "/api_docs/python/tf/contrib/tpu/shard", "k": [], "r": "r1.8", "t": "tf.contrib.tpu.shard"}, {"p": "/api_docs/python/tf/contrib/tpu/shutdown_system", "k": [], "r": "r1.8", "t": "tf.contrib.tpu.shutdown_system"}, {"p": "/api_docs/python/tf/contrib/tpu/while_loop", "k": [], "r": "r1.8", "t": "tf.contrib.tpu.while_loop"}, {"p": "/api_docs/python/tf/contrib/training", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.contrib.training"}, {"p": "/api_docs/python/tf/contrib/training/FeedingQueueRunner", "k": ["cancel_op", "close_op", "enqueue_ops", "exceptions_raised", "name", "queue", "queue_closed_exception_types", "__init__", "create_threads", "from_proto", "to_proto"], "r": "r1.8", "t": "tf.contrib.training.FeedingQueueRunner"}, {"p": "/api_docs/python/tf/contrib/training/GreedyLoadBalancingStrategy", "k": ["__call__", "__init__"], "r": "r1.8", "t": "tf.contrib.training.GreedyLoadBalancingStrategy"}, {"p": "/api_docs/python/tf/contrib/training/HParams", "k": ["__contains__", "__init__", "add_hparam", "from_proto", "get", "get_model_structure", "override_from_dict", "parse", "parse_json", "set_from_map", "set_hparam", "set_model_structure", "to_json", "to_proto", "values"], "r": "r1.8", "t": "tf.contrib.training.HParams"}, {"p": "/api_docs/python/tf/contrib/training/NextQueuedSequenceBatch", "k": ["batch_size", "context", "insertion_index", "key", "length", "next_key", "sequence", "sequence_count", "sequences", "total_length", "__init__", "save_state", "state"], "r": "r1.8", "t": "tf.contrib.training.NextQueuedSequenceBatch"}, {"p": "/api_docs/python/tf/contrib/training/RandomStrategy", "k": ["__call__", "__init__"], "r": "r1.8", "t": "tf.contrib.training.RandomStrategy"}, {"p": "/api_docs/python/tf/contrib/training/SequenceQueueingStateSaver", "k": ["barrier", "batch_size", "name", "next_batch", "num_unroll", "prefetch_op", "__init__", "close"], "r": "r1.8", "t": "tf.contrib.training.SequenceQueueingStateSaver"}, {"p": "/api_docs/python/tf/contrib/training/StopAfterNEvalsHook", "k": ["__init__", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "r1.8", "t": "tf.contrib.training.StopAfterNEvalsHook"}, {"p": "/api_docs/python/tf/contrib/training/SummaryAtEndHook", "k": ["__init__", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "r1.8", "t": "tf.contrib.training.SummaryAtEndHook"}, {"p": "/api_docs/python/tf/contrib/training/add_gradients_summaries", "k": [], "r": "r1.8", "t": "tf.contrib.training.add_gradients_summaries"}, {"p": "/api_docs/python/tf/contrib/training/batch_sequences_with_states", "k": [], "r": "r1.8", "t": "tf.contrib.training.batch_sequences_with_states"}, {"p": "/api_docs/python/tf/contrib/training/bucket", "k": [], "r": "r1.8", "t": "tf.contrib.training.bucket"}, {"p": "/api_docs/python/tf/contrib/training/bucket_by_sequence_length", "k": [], "r": "r1.8", "t": "tf.contrib.training.bucket_by_sequence_length"}, {"p": "/api_docs/python/tf/contrib/training/byte_size_load_fn", "k": [], "r": "r1.8", "t": "tf.contrib.training.byte_size_load_fn"}, {"p": "/api_docs/python/tf/contrib/training/checkpoints_iterator", "k": [], "r": "r1.8", "t": "tf.contrib.training.checkpoints_iterator"}, {"p": "/api_docs/python/tf/contrib/training/clip_gradient_norms", "k": [], "r": "r1.8", "t": "tf.contrib.training.clip_gradient_norms"}, {"p": "/api_docs/python/tf/contrib/training/clip_gradient_norms_fn", "k": [], "r": "r1.8", "t": "tf.contrib.training.clip_gradient_norms_fn"}, {"p": "/api_docs/python/tf/contrib/training/create_train_op", "k": [], "r": "r1.8", "t": "tf.contrib.training.create_train_op"}, {"p": "/api_docs/python/tf/contrib/training/evaluate_once", "k": [], "r": "r1.8", "t": "tf.contrib.training.evaluate_once"}, {"p": "/api_docs/python/tf/contrib/training/evaluate_repeatedly", "k": [], "r": "r1.8", "t": "tf.contrib.training.evaluate_repeatedly"}, {"p": "/api_docs/python/tf/contrib/training/get_or_create_eval_step", "k": [], "r": "r1.8", "t": "tf.contrib.training.get_or_create_eval_step"}, {"p": "/api_docs/python/tf/contrib/training/multiply_gradients", "k": [], "r": "r1.8", "t": "tf.contrib.training.multiply_gradients"}, {"p": "/api_docs/python/tf/contrib/training/parse_values", "k": [], "r": "r1.8", "t": "tf.contrib.training.parse_values"}, {"p": "/api_docs/python/tf/contrib/training/rejection_sample", "k": [], "r": "r1.8", "t": "tf.contrib.training.rejection_sample"}, {"p": "/api_docs/python/tf/contrib/training/resample_at_rate", "k": [], "r": "r1.8", "t": "tf.contrib.training.resample_at_rate"}, {"p": "/api_docs/python/tf/contrib/training/stratified_sample", "k": [], "r": "r1.8", "t": "tf.contrib.training.stratified_sample"}, {"p": "/api_docs/python/tf/contrib/training/train", "k": [], "r": "r1.8", "t": "tf.contrib.training.train"}, {"p": "/api_docs/python/tf/contrib/training/wait_for_new_checkpoint", "k": [], "r": "r1.8", "t": "tf.contrib.training.wait_for_new_checkpoint"}, {"p": "/api_docs/python/tf/contrib/training/weighted_resample", "k": [], "r": "r1.8", "t": "tf.contrib.training.weighted_resample"}, {"p": "/api_docs/python/tf/contrib/util", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.contrib.util"}, {"p": "/api_docs/python/tf/contrib/util/constant_value", "k": [], "r": "r1.8", "t": "tf.contrib.util.constant_value"}, {"p": "/api_docs/python/tf/contrib/util/loader", "k": [], "r": "r1.8", "t": "tf.contrib.util.loader"}, {"p": "/api_docs/python/tf/contrib/util/ops_used_by_graph_def", "k": [], "r": "r1.8", "t": "tf.contrib.util.ops_used_by_graph_def"}, {"p": "/api_docs/python/tf/contrib/util/stripped_op_list_for_graph", "k": [], "r": "r1.8", "t": "tf.contrib.util.stripped_op_list_for_graph"}, {"p": "/api_docs/python/tf/control_dependencies", "k": [], "r": "r1.8", "t": "tf.control_dependencies"}, {"p": "/api_docs/python/tf/convert_to_tensor", "k": [], "r": "r1.8", "t": "tf.convert_to_tensor"}, {"p": "/api_docs/python/tf/convert_to_tensor_or_indexed_slices", "k": [], "r": "r1.8", "t": "tf.convert_to_tensor_or_indexed_slices"}, {"p": "/api_docs/python/tf/convert_to_tensor_or_sparse_tensor", "k": [], "r": "r1.8", "t": "tf.convert_to_tensor_or_sparse_tensor"}, {"p": "/api_docs/python/tf/cos", "k": [], "r": "r1.8", "t": "tf.cos"}, {"p": "/api_docs/python/tf/cosh", "k": [], "r": "r1.8", "t": "tf.cosh"}, {"p": "/api_docs/python/tf/count_nonzero", "k": [], "r": "r1.8", "t": "tf.count_nonzero"}, {"p": "/api_docs/python/tf/count_up_to", "k": [], "r": "r1.8", "t": "tf.count_up_to"}, {"p": "/api_docs/python/tf/create_partitioned_variables", "k": [], "r": "r1.8", "t": "tf.create_partitioned_variables"}, {"p": "/api_docs/python/tf/cross", "k": [], "r": "r1.8", "t": "tf.cross"}, {"p": "/api_docs/python/tf/cumprod", "k": [], "r": "r1.8", "t": "tf.cumprod"}, {"p": "/api_docs/python/tf/cumsum", "k": [], "r": "r1.8", "t": "tf.cumsum"}, {"p": "/api_docs/python/tf/custom_gradient", "k": [], "r": "r1.8", "t": "tf.custom_gradient"}, {"p": "/api_docs/python/tf/data", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.data"}, {"p": "/api_docs/python/tf/data/Dataset", "k": ["output_classes", "output_shapes", "output_types", "__init__", "__iter__", "apply", "batch", "cache", "concatenate", "filter", "flat_map", "from_generator", "from_sparse_tensor_slices", "from_tensor_slices", "from_tensors", "interleave", "list_files", "make_initializable_iterator", "make_one_shot_iterator", "map", "padded_batch", "prefetch", "range", "repeat", "shard", "shuffle", "skip", "take", "zip"], "r": "r1.8", "t": "tf.data.Dataset"}, {"p": "/api_docs/python/tf/data/FixedLengthRecordDataset", "k": ["output_classes", "output_shapes", "output_types", "__init__", "__iter__", "apply", "batch", "cache", "concatenate", "filter", "flat_map", "from_generator", "from_sparse_tensor_slices", "from_tensor_slices", "from_tensors", "interleave", "list_files", "make_initializable_iterator", "make_one_shot_iterator", "map", "padded_batch", "prefetch", "range", "repeat", "shard", "shuffle", "skip", "take", "zip"], "r": "r1.8", "t": "tf.data.FixedLengthRecordDataset"}, {"p": "/api_docs/python/tf/data/Iterator", "k": ["initializer", "output_classes", "output_shapes", "output_types", "__init__", "from_string_handle", "from_structure", "get_next", "make_initializer", "string_handle"], "r": "r1.8", "t": "tf.data.Iterator"}, {"p": "/api_docs/python/tf/data/TFRecordDataset", "k": ["output_classes", "output_shapes", "output_types", "__init__", "__iter__", "apply", "batch", "cache", "concatenate", "filter", "flat_map", "from_generator", "from_sparse_tensor_slices", "from_tensor_slices", "from_tensors", "interleave", "list_files", "make_initializable_iterator", "make_one_shot_iterator", "map", "padded_batch", "prefetch", "range", "repeat", "shard", "shuffle", "skip", "take", "zip"], "r": "r1.8", "t": "tf.data.TFRecordDataset"}, {"p": "/api_docs/python/tf/data/TextLineDataset", "k": ["output_classes", "output_shapes", "output_types", "__init__", "__iter__", "apply", "batch", "cache", "concatenate", "filter", "flat_map", "from_generator", "from_sparse_tensor_slices", "from_tensor_slices", "from_tensors", "interleave", "list_files", "make_initializable_iterator", "make_one_shot_iterator", "map", "padded_batch", "prefetch", "range", "repeat", "shard", "shuffle", "skip", "take", "zip"], "r": "r1.8", "t": "tf.data.TextLineDataset"}, {"p": "/api_docs/python/tf/decode_base64", "k": [], "r": "r1.8", "t": "tf.decode_base64"}, {"p": "/api_docs/python/tf/decode_csv", "k": [], "r": "r1.8", "t": "tf.decode_csv"}, {"p": "/api_docs/python/tf/decode_json_example", "k": [], "r": "r1.8", "t": "tf.decode_json_example"}, {"p": "/api_docs/python/tf/decode_raw", "k": [], "r": "r1.8", "t": "tf.decode_raw"}, {"p": "/api_docs/python/tf/delete_session_tensor", "k": [], "r": "r1.8", "t": "tf.delete_session_tensor"}, {"p": "/api_docs/python/tf/depth_to_space", "k": [], "r": "r1.8", "t": "tf.depth_to_space"}, {"p": "/api_docs/python/tf/dequantize", "k": [], "r": "r1.8", "t": "tf.dequantize"}, {"p": "/api_docs/python/tf/deserialize_many_sparse", "k": [], "r": "r1.8", "t": "tf.deserialize_many_sparse"}, {"p": "/api_docs/python/tf/device", "k": [], "r": "r1.8", "t": "tf.device"}, {"p": "/api_docs/python/tf/diag", "k": [], "r": "r1.8", "t": "tf.diag"}, {"p": "/api_docs/python/tf/diag_part", "k": [], "r": "r1.8", "t": "tf.diag_part"}, {"p": "/api_docs/python/tf/digamma", "k": [], "r": "r1.8", "t": "tf.digamma"}, {"p": "/api_docs/python/tf/distributions", "k": ["FULLY_REPARAMETERIZED", "NOT_REPARAMETERIZED", "__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.distributions"}, {"p": "/api_docs/python/tf/distributions/Bernoulli", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "logits", "name", "parameters", "probs", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.8", "t": "tf.distributions.Bernoulli"}, {"p": "/api_docs/python/tf/distributions/Beta", "k": ["allow_nan_stats", "batch_shape", "concentration0", "concentration1", "dtype", "event_shape", "name", "parameters", "reparameterization_type", "total_concentration", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.8", "t": "tf.distributions.Beta"}, {"p": "/api_docs/python/tf/distributions/Categorical", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "event_size", "logits", "name", "parameters", "probs", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.8", "t": "tf.distributions.Categorical"}, {"p": "/api_docs/python/tf/distributions/Dirichlet", "k": ["allow_nan_stats", "batch_shape", "concentration", "dtype", "event_shape", "name", "parameters", "reparameterization_type", "total_concentration", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.8", "t": "tf.distributions.Dirichlet"}, {"p": "/api_docs/python/tf/distributions/DirichletMultinomial", "k": ["allow_nan_stats", "batch_shape", "concentration", "dtype", "event_shape", "name", "parameters", "reparameterization_type", "total_concentration", "total_count", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.8", "t": "tf.distributions.DirichletMultinomial"}, {"p": "/api_docs/python/tf/distributions/Distribution", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "name", "parameters", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.8", "t": "tf.distributions.Distribution"}, {"p": "/api_docs/python/tf/distributions/Exponential", "k": ["allow_nan_stats", "batch_shape", "concentration", "dtype", "event_shape", "name", "parameters", "rate", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.8", "t": "tf.distributions.Exponential"}, {"p": "/api_docs/python/tf/distributions/Gamma", "k": ["allow_nan_stats", "batch_shape", "concentration", "dtype", "event_shape", "name", "parameters", "rate", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.8", "t": "tf.distributions.Gamma"}, {"p": "/api_docs/python/tf/distributions/Laplace", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.8", "t": "tf.distributions.Laplace"}, {"p": "/api_docs/python/tf/distributions/Multinomial", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "logits", "name", "parameters", "probs", "reparameterization_type", "total_count", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.8", "t": "tf.distributions.Multinomial"}, {"p": "/api_docs/python/tf/distributions/Normal", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.8", "t": "tf.distributions.Normal"}, {"p": "/api_docs/python/tf/distributions/RegisterKL", "k": ["__call__", "__init__"], "r": "r1.8", "t": "tf.distributions.RegisterKL"}, {"p": "/api_docs/python/tf/distributions/ReparameterizationType", "k": ["__eq__", "__init__"], "r": "r1.8", "t": "tf.distributions.ReparameterizationType"}, {"p": "/api_docs/python/tf/distributions/StudentT", "k": ["allow_nan_stats", "batch_shape", "df", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.8", "t": "tf.distributions.StudentT"}, {"p": "/api_docs/python/tf/distributions/Uniform", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "high", "low", "name", "parameters", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "range", "sample", "stddev", "survival_function", "variance"], "r": "r1.8", "t": "tf.distributions.Uniform"}, {"p": "/api_docs/python/tf/distributions/bijectors", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.distributions.bijectors"}, {"p": "/api_docs/python/tf/distributions/bijectors/Bijector", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.8", "t": "tf.distributions.bijectors.Bijector"}, {"p": "/api_docs/python/tf/distributions/bijectors/Identity", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.8", "t": "tf.distributions.bijectors.Identity"}, {"p": "/api_docs/python/tf/distributions/kl_divergence", "k": [], "r": "r1.8", "t": "tf.distributions.kl_divergence"}, {"p": "/api_docs/python/tf/div", "k": [], "r": "r1.8", "t": "tf.div"}, {"p": "/api_docs/python/tf/divide", "k": [], "r": "r1.8", "t": "tf.divide"}, {"p": "/api_docs/python/tf/dynamic_partition", "k": [], "r": "r1.8", "t": "tf.dynamic_partition"}, {"p": "/api_docs/python/tf/dynamic_stitch", "k": [], "r": "r1.8", "t": "tf.dynamic_stitch"}, {"p": "/api_docs/python/tf/edit_distance", "k": [], "r": "r1.8", "t": "tf.edit_distance"}, {"p": "/api_docs/python/tf/einsum", "k": [], "r": "r1.8", "t": "tf.einsum"}, {"p": "/api_docs/python/tf/enable_eager_execution", "k": [], "r": "r1.8", "t": "tf.enable_eager_execution"}, {"p": "/api_docs/python/tf/encode_base64", "k": [], "r": "r1.8", "t": "tf.encode_base64"}, {"p": "/api_docs/python/tf/equal", "k": [], "r": "r1.8", "t": "tf.equal"}, {"p": "/api_docs/python/tf/erf", "k": [], "r": "r1.8", "t": "tf.erf"}, {"p": "/api_docs/python/tf/erfc", "k": [], "r": "r1.8", "t": "tf.erfc"}, {"p": "/api_docs/python/tf/errors", "k": ["ABORTED", "ALREADY_EXISTS", "CANCELLED", "DATA_LOSS", "DEADLINE_EXCEEDED", "FAILED_PRECONDITION", "INTERNAL", "INVALID_ARGUMENT", "NOT_FOUND", "OK", "OUT_OF_RANGE", "PERMISSION_DENIED", "RESOURCE_EXHAUSTED", "UNAUTHENTICATED", "UNAVAILABLE", "UNIMPLEMENTED", "UNKNOWN", "__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.errors"}, {"p": "/api_docs/python/tf/errors/AbortedError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "r1.8", "t": "tf.errors.AbortedError"}, {"p": "/api_docs/python/tf/errors/AlreadyExistsError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "r1.8", "t": "tf.errors.AlreadyExistsError"}, {"p": "/api_docs/python/tf/errors/CancelledError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "r1.8", "t": "tf.errors.CancelledError"}, {"p": "/api_docs/python/tf/errors/DataLossError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "r1.8", "t": "tf.errors.DataLossError"}, {"p": "/api_docs/python/tf/errors/DeadlineExceededError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "r1.8", "t": "tf.errors.DeadlineExceededError"}, {"p": "/api_docs/python/tf/errors/FailedPreconditionError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "r1.8", "t": "tf.errors.FailedPreconditionError"}, {"p": "/api_docs/python/tf/errors/InternalError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "r1.8", "t": "tf.errors.InternalError"}, {"p": "/api_docs/python/tf/errors/InvalidArgumentError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "r1.8", "t": "tf.errors.InvalidArgumentError"}, {"p": "/api_docs/python/tf/errors/NotFoundError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "r1.8", "t": "tf.errors.NotFoundError"}, {"p": "/api_docs/python/tf/errors/OutOfRangeError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "r1.8", "t": "tf.errors.OutOfRangeError"}, {"p": "/api_docs/python/tf/errors/PermissionDeniedError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "r1.8", "t": "tf.errors.PermissionDeniedError"}, {"p": "/api_docs/python/tf/errors/ResourceExhaustedError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "r1.8", "t": "tf.errors.ResourceExhaustedError"}, {"p": "/api_docs/python/tf/errors/UnauthenticatedError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "r1.8", "t": "tf.errors.UnauthenticatedError"}, {"p": "/api_docs/python/tf/errors/UnavailableError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "r1.8", "t": "tf.errors.UnavailableError"}, {"p": "/api_docs/python/tf/errors/UnimplementedError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "r1.8", "t": "tf.errors.UnimplementedError"}, {"p": "/api_docs/python/tf/errors/UnknownError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "r1.8", "t": "tf.errors.UnknownError"}, {"p": "/api_docs/python/tf/errors/error_code_from_exception_type", "k": [], "r": "r1.8", "t": "tf.errors.error_code_from_exception_type"}, {"p": "/api_docs/python/tf/errors/exception_type_from_error_code", "k": [], "r": "r1.8", "t": "tf.errors.exception_type_from_error_code"}, {"p": "/api_docs/python/tf/errors/raise_exception_on_not_ok_status", "k": ["__enter__", "__exit__"], "r": "r1.8", "t": "tf.errors.raise_exception_on_not_ok_status"}, {"p": "/api_docs/python/tf/estimator", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.estimator"}, {"p": "/api_docs/python/tf/estimator/BaselineClassifier", "k": ["config", "model_dir", "model_fn", "params", "__init__", "evaluate", "export_savedmodel", "get_variable_names", "get_variable_value", "latest_checkpoint", "predict", "train"], "r": "r1.8", "t": "tf.estimator.BaselineClassifier"}, {"p": "/api_docs/python/tf/estimator/BaselineRegressor", "k": ["config", "model_dir", "model_fn", "params", "__init__", "evaluate", "export_savedmodel", "get_variable_names", "get_variable_value", "latest_checkpoint", "predict", "train"], "r": "r1.8", "t": "tf.estimator.BaselineRegressor"}, {"p": "/api_docs/python/tf/estimator/BoostedTreesClassifier", "k": ["config", "model_dir", "model_fn", "params", "__init__", "evaluate", "export_savedmodel", "get_variable_names", "get_variable_value", "latest_checkpoint", "predict", "train"], "r": "r1.8", "t": "tf.estimator.BoostedTreesClassifier"}, {"p": "/api_docs/python/tf/estimator/BoostedTreesRegressor", "k": ["config", "model_dir", "model_fn", "params", "__init__", "evaluate", "export_savedmodel", "get_variable_names", "get_variable_value", "latest_checkpoint", "predict", "train"], "r": "r1.8", "t": "tf.estimator.BoostedTreesRegressor"}, {"p": "/api_docs/python/tf/estimator/DNNClassifier", "k": ["config", "model_dir", "model_fn", "params", "__init__", "evaluate", "export_savedmodel", "get_variable_names", "get_variable_value", "latest_checkpoint", "predict", "train"], "r": "r1.8", "t": "tf.estimator.DNNClassifier"}, {"p": "/api_docs/python/tf/estimator/DNNLinearCombinedClassifier", "k": ["config", "model_dir", "model_fn", "params", "__init__", "evaluate", "export_savedmodel", "get_variable_names", "get_variable_value", "latest_checkpoint", "predict", "train"], "r": "r1.8", "t": "tf.estimator.DNNLinearCombinedClassifier"}, {"p": "/api_docs/python/tf/estimator/DNNLinearCombinedRegressor", "k": ["config", "model_dir", "model_fn", "params", "__init__", "evaluate", "export_savedmodel", "get_variable_names", "get_variable_value", "latest_checkpoint", "predict", "train"], "r": "r1.8", "t": "tf.estimator.DNNLinearCombinedRegressor"}, {"p": "/api_docs/python/tf/estimator/DNNRegressor", "k": ["config", "model_dir", "model_fn", "params", "__init__", "evaluate", "export_savedmodel", "get_variable_names", "get_variable_value", "latest_checkpoint", "predict", "train"], "r": "r1.8", "t": "tf.estimator.DNNRegressor"}, {"p": "/api_docs/python/tf/estimator/Estimator", "k": ["config", "model_dir", "model_fn", "params", "__init__", "evaluate", "export_savedmodel", "get_variable_names", "get_variable_value", "latest_checkpoint", "predict", "train"], "r": "r1.8", "t": "tf.estimator.Estimator"}, {"p": "/api_docs/python/tf/estimator/EstimatorSpec", "k": ["eval_metric_ops", "evaluation_hooks", "export_outputs", "loss", "mode", "prediction_hooks", "predictions", "scaffold", "train_op", "training_chief_hooks", "training_hooks", "__new__"], "r": "r1.8", "t": "tf.estimator.EstimatorSpec"}, {"p": "/api_docs/python/tf/estimator/EvalSpec", "k": ["exporters", "hooks", "input_fn", "name", "start_delay_secs", "steps", "throttle_secs", "__new__"], "r": "r1.8", "t": "tf.estimator.EvalSpec"}, {"p": "/api_docs/python/tf/estimator/Exporter", "k": ["name", "export"], "r": "r1.8", "t": "tf.estimator.Exporter"}, {"p": "/api_docs/python/tf/estimator/FinalExporter", "k": ["name", "__init__", "export"], "r": "r1.8", "t": "tf.estimator.FinalExporter"}, {"p": "/api_docs/python/tf/estimator/LatestExporter", "k": ["name", "__init__", "export"], "r": "r1.8", "t": "tf.estimator.LatestExporter"}, {"p": "/api_docs/python/tf/estimator/LinearClassifier", "k": ["config", "model_dir", "model_fn", "params", "__init__", "evaluate", "export_savedmodel", "get_variable_names", "get_variable_value", "latest_checkpoint", "predict", "train"], "r": "r1.8", "t": "tf.estimator.LinearClassifier"}, {"p": "/api_docs/python/tf/estimator/LinearRegressor", "k": ["config", "model_dir", "model_fn", "params", "__init__", "evaluate", "export_savedmodel", "get_variable_names", "get_variable_value", "latest_checkpoint", "predict", "train"], "r": "r1.8", "t": "tf.estimator.LinearRegressor"}, {"p": "/api_docs/python/tf/estimator/ModeKeys", "k": ["EVAL", "PREDICT", "TRAIN"], "r": "r1.8", "t": "tf.estimator.ModeKeys"}, {"p": "/api_docs/python/tf/estimator/RunConfig", "k": ["cluster_spec", "evaluation_master", "global_id_in_cluster", "is_chief", "keep_checkpoint_every_n_hours", "keep_checkpoint_max", "log_step_count_steps", "master", "model_dir", "num_ps_replicas", "num_worker_replicas", "save_checkpoints_secs", "save_checkpoints_steps", "save_summary_steps", "service", "session_config", "task_id", "task_type", "tf_random_seed", "train_distribute", "__init__", "replace"], "r": "r1.8", "t": "tf.estimator.RunConfig"}, {"p": "/api_docs/python/tf/estimator/TrainSpec", "k": ["hooks", "input_fn", "max_steps", "__new__"], "r": "r1.8", "t": "tf.estimator.TrainSpec"}, {"p": "/api_docs/python/tf/estimator/VocabInfo", "k": ["backup_initializer", "new_vocab", "new_vocab_size", "num_oov_buckets", "old_vocab", "old_vocab_size", "__new__"], "r": "r1.8", "t": "tf.estimator.VocabInfo"}, {"p": "/api_docs/python/tf/estimator/WarmStartSettings", "k": ["ckpt_to_initialize_from", "var_name_to_prev_var_name", "var_name_to_vocab_info", "vars_to_warm_start", "__new__"], "r": "r1.8", "t": "tf.estimator.WarmStartSettings"}, {"p": "/api_docs/python/tf/estimator/classifier_parse_example_spec", "k": [], "r": "r1.8", "t": "tf.estimator.classifier_parse_example_spec"}, {"p": "/api_docs/python/tf/estimator/export", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.estimator.export"}, {"p": "/api_docs/python/tf/estimator/export/ClassificationOutput", "k": ["classes", "scores", "__init__", "as_signature_def"], "r": "r1.8", "t": "tf.estimator.export.ClassificationOutput"}, {"p": "/api_docs/python/tf/estimator/export/ExportOutput", "k": ["as_signature_def"], "r": "r1.8", "t": "tf.estimator.export.ExportOutput"}, {"p": "/api_docs/python/tf/estimator/export/PredictOutput", "k": ["outputs", "__init__", "as_signature_def"], "r": "r1.8", "t": "tf.estimator.export.PredictOutput"}, {"p": "/api_docs/python/tf/estimator/export/RegressionOutput", "k": ["value", "__init__", "as_signature_def"], "r": "r1.8", "t": "tf.estimator.export.RegressionOutput"}, {"p": "/api_docs/python/tf/estimator/export/ServingInputReceiver", "k": ["features", "receiver_tensors", "receiver_tensors_alternatives", "__new__"], "r": "r1.8", "t": "tf.estimator.export.ServingInputReceiver"}, {"p": "/api_docs/python/tf/estimator/export/TensorServingInputReceiver", "k": ["features", "receiver_tensors", "receiver_tensors_alternatives", "__new__"], "r": "r1.8", "t": "tf.estimator.export.TensorServingInputReceiver"}, {"p": "/api_docs/python/tf/estimator/export/build_parsing_serving_input_receiver_fn", "k": [], "r": "r1.8", "t": "tf.estimator.export.build_parsing_serving_input_receiver_fn"}, {"p": "/api_docs/python/tf/estimator/export/build_raw_serving_input_receiver_fn", "k": [], "r": "r1.8", "t": "tf.estimator.export.build_raw_serving_input_receiver_fn"}, {"p": "/api_docs/python/tf/estimator/inputs", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.estimator.inputs"}, {"p": "/api_docs/python/tf/estimator/inputs/numpy_input_fn", "k": [], "r": "r1.8", "t": "tf.estimator.inputs.numpy_input_fn"}, {"p": "/api_docs/python/tf/estimator/inputs/pandas_input_fn", "k": [], "r": "r1.8", "t": "tf.estimator.inputs.pandas_input_fn"}, {"p": "/api_docs/python/tf/estimator/regressor_parse_example_spec", "k": [], "r": "r1.8", "t": "tf.estimator.regressor_parse_example_spec"}, {"p": "/api_docs/python/tf/estimator/train_and_evaluate", "k": [], "r": "r1.8", "t": "tf.estimator.train_and_evaluate"}, {"p": "/api_docs/python/tf/executing_eagerly", "k": [], "r": "r1.8", "t": "tf.executing_eagerly"}, {"p": "/api_docs/python/tf/exp", "k": [], "r": "r1.8", "t": "tf.exp"}, {"p": "/api_docs/python/tf/expand_dims", "k": [], "r": "r1.8", "t": "tf.expand_dims"}, {"p": "/api_docs/python/tf/expm1", "k": [], "r": "r1.8", "t": "tf.expm1"}, {"p": "/api_docs/python/tf/extract_image_patches", "k": [], "r": "r1.8", "t": "tf.extract_image_patches"}, {"p": "/api_docs/python/tf/eye", "k": [], "r": "r1.8", "t": "tf.eye"}, {"p": "/api_docs/python/tf/fake_quant_with_min_max_args", "k": [], "r": "r1.8", "t": "tf.fake_quant_with_min_max_args"}, {"p": "/api_docs/python/tf/fake_quant_with_min_max_args_gradient", "k": [], "r": "r1.8", "t": "tf.fake_quant_with_min_max_args_gradient"}, {"p": "/api_docs/python/tf/fake_quant_with_min_max_vars", "k": [], "r": "r1.8", "t": "tf.fake_quant_with_min_max_vars"}, {"p": "/api_docs/python/tf/fake_quant_with_min_max_vars_gradient", "k": [], "r": "r1.8", "t": "tf.fake_quant_with_min_max_vars_gradient"}, {"p": "/api_docs/python/tf/fake_quant_with_min_max_vars_per_channel", "k": [], "r": "r1.8", "t": "tf.fake_quant_with_min_max_vars_per_channel"}, {"p": "/api_docs/python/tf/fake_quant_with_min_max_vars_per_channel_gradient", "k": [], "r": "r1.8", "t": "tf.fake_quant_with_min_max_vars_per_channel_gradient"}, {"p": "/api_docs/python/tf/feature_column", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.feature_column"}, {"p": "/api_docs/python/tf/feature_column/bucketized_column", "k": [], "r": "r1.8", "t": "tf.feature_column.bucketized_column"}, {"p": "/api_docs/python/tf/feature_column/categorical_column_with_hash_bucket", "k": [], "r": "r1.8", "t": "tf.feature_column.categorical_column_with_hash_bucket"}, {"p": "/api_docs/python/tf/feature_column/categorical_column_with_identity", "k": [], "r": "r1.8", "t": "tf.feature_column.categorical_column_with_identity"}, {"p": "/api_docs/python/tf/feature_column/categorical_column_with_vocabulary_file", "k": [], "r": "r1.8", "t": "tf.feature_column.categorical_column_with_vocabulary_file"}, {"p": "/api_docs/python/tf/feature_column/categorical_column_with_vocabulary_list", "k": [], "r": "r1.8", "t": "tf.feature_column.categorical_column_with_vocabulary_list"}, {"p": "/api_docs/python/tf/feature_column/crossed_column", "k": [], "r": "r1.8", "t": "tf.feature_column.crossed_column"}, {"p": "/api_docs/python/tf/feature_column/embedding_column", "k": [], "r": "r1.8", "t": "tf.feature_column.embedding_column"}, {"p": "/api_docs/python/tf/feature_column/indicator_column", "k": [], "r": "r1.8", "t": "tf.feature_column.indicator_column"}, {"p": "/api_docs/python/tf/feature_column/input_layer", "k": [], "r": "r1.8", "t": "tf.feature_column.input_layer"}, {"p": "/api_docs/python/tf/feature_column/linear_model", "k": [], "r": "r1.8", "t": "tf.feature_column.linear_model"}, {"p": "/api_docs/python/tf/feature_column/make_parse_example_spec", "k": [], "r": "r1.8", "t": "tf.feature_column.make_parse_example_spec"}, {"p": "/api_docs/python/tf/feature_column/numeric_column", "k": [], "r": "r1.8", "t": "tf.feature_column.numeric_column"}, {"p": "/api_docs/python/tf/feature_column/shared_embedding_columns", "k": [], "r": "r1.8", "t": "tf.feature_column.shared_embedding_columns"}, {"p": "/api_docs/python/tf/feature_column/weighted_categorical_column", "k": [], "r": "r1.8", "t": "tf.feature_column.weighted_categorical_column"}, {"p": "/api_docs/python/tf/fft", "k": [], "r": "r1.8", "t": "tf.fft"}, {"p": "/api_docs/python/tf/fft2d", "k": [], "r": "r1.8", "t": "tf.fft2d"}, {"p": "/api_docs/python/tf/fft3d", "k": [], "r": "r1.8", "t": "tf.fft3d"}, {"p": "/api_docs/python/tf/fill", "k": [], "r": "r1.8", "t": "tf.fill"}, {"p": "/api_docs/python/tf/fixed_size_partitioner", "k": [], "r": "r1.8", "t": "tf.fixed_size_partitioner"}, {"p": "/api_docs/python/tf/flags", "k": [], "r": "r1.8", "t": "tf.flags"}, {"p": "/api_docs/python/tf/floor", "k": [], "r": "r1.8", "t": "tf.floor"}, {"p": "/api_docs/python/tf/floor_div", "k": [], "r": "r1.8", "t": "tf.floor_div"}, {"p": "/api_docs/python/tf/floordiv", "k": [], "r": "r1.8", "t": "tf.floordiv"}, {"p": "/api_docs/python/tf/floormod", "k": [], "r": "r1.8", "t": "tf.floormod"}, {"p": "/api_docs/python/tf/foldl", "k": [], "r": "r1.8", "t": "tf.foldl"}, {"p": "/api_docs/python/tf/foldr", "k": [], "r": "r1.8", "t": "tf.foldr"}, {"p": "/api_docs/python/tf/gather", "k": [], "r": "r1.8", "t": "tf.gather"}, {"p": "/api_docs/python/tf/gather_nd", "k": [], "r": "r1.8", "t": "tf.gather_nd"}, {"p": "/api_docs/python/tf/get_collection", "k": [], "r": "r1.8", "t": "tf.get_collection"}, {"p": "/api_docs/python/tf/get_collection_ref", "k": [], "r": "r1.8", "t": "tf.get_collection_ref"}, {"p": "/api_docs/python/tf/get_default_graph", "k": [], "r": "r1.8", "t": "tf.get_default_graph"}, {"p": "/api_docs/python/tf/get_default_session", "k": [], "r": "r1.8", "t": "tf.get_default_session"}, {"p": "/api_docs/python/tf/get_local_variable", "k": [], "r": "r1.8", "t": "tf.get_local_variable"}, {"p": "/api_docs/python/tf/get_seed", "k": [], "r": "r1.8", "t": "tf.get_seed"}, {"p": "/api_docs/python/tf/get_session_handle", "k": [], "r": "r1.8", "t": "tf.get_session_handle"}, {"p": "/api_docs/python/tf/get_session_tensor", "k": [], "r": "r1.8", "t": "tf.get_session_tensor"}, {"p": "/api_docs/python/tf/get_variable", "k": [], "r": "r1.8", "t": "tf.get_variable"}, {"p": "/api_docs/python/tf/get_variable_scope", "k": [], "r": "r1.8", "t": "tf.get_variable_scope"}, {"p": "/api_docs/python/tf/gfile", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.gfile"}, {"p": "/api_docs/python/tf/gfile/Copy", "k": [], "r": "r1.8", "t": "tf.gfile.Copy"}, {"p": "/api_docs/python/tf/gfile/DeleteRecursively", "k": [], "r": "r1.8", "t": "tf.gfile.DeleteRecursively"}, {"p": "/api_docs/python/tf/gfile/Exists", "k": [], "r": "r1.8", "t": "tf.gfile.Exists"}, {"p": "/api_docs/python/tf/gfile/FastGFile", "k": ["mode", "name", "__enter__", "__exit__", "__init__", "__iter__", "__next__", "close", "flush", "next", "read", "readline", "readlines", "seek", "size", "tell", "write"], "r": "r1.8", "t": "tf.gfile.FastGFile"}, {"p": "/api_docs/python/tf/gfile/GFile", "k": ["mode", "name", "__enter__", "__exit__", "__init__", "__iter__", "__next__", "close", "flush", "next", "read", "readline", "readlines", "seek", "size", "tell", "write"], "r": "r1.8", "t": "tf.gfile.GFile"}, {"p": "/api_docs/python/tf/gfile/Glob", "k": [], "r": "r1.8", "t": "tf.gfile.Glob"}, {"p": "/api_docs/python/tf/gfile/IsDirectory", "k": [], "r": "r1.8", "t": "tf.gfile.IsDirectory"}, {"p": "/api_docs/python/tf/gfile/ListDirectory", "k": [], "r": "r1.8", "t": "tf.gfile.ListDirectory"}, {"p": "/api_docs/python/tf/gfile/MakeDirs", "k": [], "r": "r1.8", "t": "tf.gfile.MakeDirs"}, {"p": "/api_docs/python/tf/gfile/MkDir", "k": [], "r": "r1.8", "t": "tf.gfile.MkDir"}, {"p": "/api_docs/python/tf/gfile/Remove", "k": [], "r": "r1.8", "t": "tf.gfile.Remove"}, {"p": "/api_docs/python/tf/gfile/Rename", "k": [], "r": "r1.8", "t": "tf.gfile.Rename"}, {"p": "/api_docs/python/tf/gfile/Stat", "k": [], "r": "r1.8", "t": "tf.gfile.Stat"}, {"p": "/api_docs/python/tf/gfile/Walk", "k": [], "r": "r1.8", "t": "tf.gfile.Walk"}, {"p": "/api_docs/python/tf/global_norm", "k": [], "r": "r1.8", "t": "tf.global_norm"}, {"p": "/api_docs/python/tf/global_variables", "k": [], "r": "r1.8", "t": "tf.global_variables"}, {"p": "/api_docs/python/tf/global_variables_initializer", "k": [], "r": "r1.8", "t": "tf.global_variables_initializer"}, {"p": "/api_docs/python/tf/glorot_normal_initializer", "k": [], "r": "r1.8", "t": "tf.glorot_normal_initializer"}, {"p": "/api_docs/python/tf/glorot_uniform_initializer", "k": [], "r": "r1.8", "t": "tf.glorot_uniform_initializer"}, {"p": "/api_docs/python/tf/gradients", "k": [], "r": "r1.8", "t": "tf.gradients"}, {"p": "/api_docs/python/tf/graph_util", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.graph_util"}, {"p": "/api_docs/python/tf/graph_util/convert_variables_to_constants", "k": [], "r": "r1.8", "t": "tf.graph_util.convert_variables_to_constants"}, {"p": "/api_docs/python/tf/graph_util/extract_sub_graph", "k": [], "r": "r1.8", "t": "tf.graph_util.extract_sub_graph"}, {"p": "/api_docs/python/tf/graph_util/must_run_on_cpu", "k": [], "r": "r1.8", "t": "tf.graph_util.must_run_on_cpu"}, {"p": "/api_docs/python/tf/graph_util/remove_training_nodes", "k": [], "r": "r1.8", "t": "tf.graph_util.remove_training_nodes"}, {"p": "/api_docs/python/tf/graph_util/tensor_shape_from_node_def_name", "k": [], "r": "r1.8", "t": "tf.graph_util.tensor_shape_from_node_def_name"}, {"p": "/api_docs/python/tf/greater", "k": [], "r": "r1.8", "t": "tf.greater"}, {"p": "/api_docs/python/tf/greater_equal", "k": [], "r": "r1.8", "t": "tf.greater_equal"}, {"p": "/api_docs/python/tf/group", "k": [], "r": "r1.8", "t": "tf.group"}, {"p": "/api_docs/python/tf/guarantee_const", "k": [], "r": "r1.8", "t": "tf.guarantee_const"}, {"p": "/api_docs/python/tf/hessians", "k": [], "r": "r1.8", "t": "tf.hessians"}, {"p": "/api_docs/python/tf/histogram_fixed_width", "k": [], "r": "r1.8", "t": "tf.histogram_fixed_width"}, {"p": "/api_docs/python/tf/histogram_fixed_width_bins", "k": [], "r": "r1.8", "t": "tf.histogram_fixed_width_bins"}, {"p": "/api_docs/python/tf/identity", "k": [], "r": "r1.8", "t": "tf.identity"}, {"p": "/api_docs/python/tf/identity_n", "k": [], "r": "r1.8", "t": "tf.identity_n"}, {"p": "/api_docs/python/tf/ifft", "k": [], "r": "r1.8", "t": "tf.ifft"}, {"p": "/api_docs/python/tf/ifft2d", "k": [], "r": "r1.8", "t": "tf.ifft2d"}, {"p": "/api_docs/python/tf/ifft3d", "k": [], "r": "r1.8", "t": "tf.ifft3d"}, {"p": "/api_docs/python/tf/igamma", "k": [], "r": "r1.8", "t": "tf.igamma"}, {"p": "/api_docs/python/tf/igammac", "k": [], "r": "r1.8", "t": "tf.igammac"}, {"p": "/api_docs/python/tf/imag", "k": [], "r": "r1.8", "t": "tf.imag"}, {"p": "/api_docs/python/tf/image", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.image"}, {"p": "/api_docs/python/tf/image/ResizeMethod", "k": ["AREA", "BICUBIC", "BILINEAR", "NEAREST_NEIGHBOR"], "r": "r1.8", "t": "tf.image.ResizeMethod"}, {"p": "/api_docs/python/tf/image/adjust_brightness", "k": [], "r": "r1.8", "t": "tf.image.adjust_brightness"}, {"p": "/api_docs/python/tf/image/adjust_contrast", "k": [], "r": "r1.8", "t": "tf.image.adjust_contrast"}, {"p": "/api_docs/python/tf/image/adjust_gamma", "k": [], "r": "r1.8", "t": "tf.image.adjust_gamma"}, {"p": "/api_docs/python/tf/image/adjust_hue", "k": [], "r": "r1.8", "t": "tf.image.adjust_hue"}, {"p": "/api_docs/python/tf/image/adjust_saturation", "k": [], "r": "r1.8", "t": "tf.image.adjust_saturation"}, {"p": "/api_docs/python/tf/image/central_crop", "k": [], "r": "r1.8", "t": "tf.image.central_crop"}, {"p": "/api_docs/python/tf/image/convert_image_dtype", "k": [], "r": "r1.8", "t": "tf.image.convert_image_dtype"}, {"p": "/api_docs/python/tf/image/crop_and_resize", "k": [], "r": "r1.8", "t": "tf.image.crop_and_resize"}, {"p": "/api_docs/python/tf/image/crop_to_bounding_box", "k": [], "r": "r1.8", "t": "tf.image.crop_to_bounding_box"}, {"p": "/api_docs/python/tf/image/decode_and_crop_jpeg", "k": [], "r": "r1.8", "t": "tf.image.decode_and_crop_jpeg"}, {"p": "/api_docs/python/tf/image/decode_bmp", "k": [], "r": "r1.8", "t": "tf.image.decode_bmp"}, {"p": "/api_docs/python/tf/image/decode_gif", "k": [], "r": "r1.8", "t": "tf.image.decode_gif"}, {"p": "/api_docs/python/tf/image/decode_image", "k": [], "r": "r1.8", "t": "tf.image.decode_image"}, {"p": "/api_docs/python/tf/image/decode_jpeg", "k": [], "r": "r1.8", "t": "tf.image.decode_jpeg"}, {"p": "/api_docs/python/tf/image/decode_png", "k": [], "r": "r1.8", "t": "tf.image.decode_png"}, {"p": "/api_docs/python/tf/image/draw_bounding_boxes", "k": [], "r": "r1.8", "t": "tf.image.draw_bounding_boxes"}, {"p": "/api_docs/python/tf/image/encode_jpeg", "k": [], "r": "r1.8", "t": "tf.image.encode_jpeg"}, {"p": "/api_docs/python/tf/image/encode_png", "k": [], "r": "r1.8", "t": "tf.image.encode_png"}, {"p": "/api_docs/python/tf/image/extract_glimpse", "k": [], "r": "r1.8", "t": "tf.image.extract_glimpse"}, {"p": "/api_docs/python/tf/image/extract_jpeg_shape", "k": [], "r": "r1.8", "t": "tf.image.extract_jpeg_shape"}, {"p": "/api_docs/python/tf/image/flip_left_right", "k": [], "r": "r1.8", "t": "tf.image.flip_left_right"}, {"p": "/api_docs/python/tf/image/flip_up_down", "k": [], "r": "r1.8", "t": "tf.image.flip_up_down"}, {"p": "/api_docs/python/tf/image/grayscale_to_rgb", "k": [], "r": "r1.8", "t": "tf.image.grayscale_to_rgb"}, {"p": "/api_docs/python/tf/image/hsv_to_rgb", "k": [], "r": "r1.8", "t": "tf.image.hsv_to_rgb"}, {"p": "/api_docs/python/tf/image/image_gradients", "k": [], "r": "r1.8", "t": "tf.image.image_gradients"}, {"p": "/api_docs/python/tf/image/is_jpeg", "k": [], "r": "r1.8", "t": "tf.image.is_jpeg"}, {"p": "/api_docs/python/tf/image/non_max_suppression", "k": [], "r": "r1.8", "t": "tf.image.non_max_suppression"}, {"p": "/api_docs/python/tf/image/pad_to_bounding_box", "k": [], "r": "r1.8", "t": "tf.image.pad_to_bounding_box"}, {"p": "/api_docs/python/tf/image/per_image_standardization", "k": [], "r": "r1.8", "t": "tf.image.per_image_standardization"}, {"p": "/api_docs/python/tf/image/psnr", "k": [], "r": "r1.8", "t": "tf.image.psnr"}, {"p": "/api_docs/python/tf/image/random_brightness", "k": [], "r": "r1.8", "t": "tf.image.random_brightness"}, {"p": "/api_docs/python/tf/image/random_contrast", "k": [], "r": "r1.8", "t": "tf.image.random_contrast"}, {"p": "/api_docs/python/tf/image/random_flip_left_right", "k": [], "r": "r1.8", "t": "tf.image.random_flip_left_right"}, {"p": "/api_docs/python/tf/image/random_flip_up_down", "k": [], "r": "r1.8", "t": "tf.image.random_flip_up_down"}, {"p": "/api_docs/python/tf/image/random_hue", "k": [], "r": "r1.8", "t": "tf.image.random_hue"}, {"p": "/api_docs/python/tf/image/random_saturation", "k": [], "r": "r1.8", "t": "tf.image.random_saturation"}, {"p": "/api_docs/python/tf/image/resize_area", "k": [], "r": "r1.8", "t": "tf.image.resize_area"}, {"p": "/api_docs/python/tf/image/resize_bicubic", "k": [], "r": "r1.8", "t": "tf.image.resize_bicubic"}, {"p": "/api_docs/python/tf/image/resize_bilinear", "k": [], "r": "r1.8", "t": "tf.image.resize_bilinear"}, {"p": "/api_docs/python/tf/image/resize_image_with_crop_or_pad", "k": [], "r": "r1.8", "t": "tf.image.resize_image_with_crop_or_pad"}, {"p": "/api_docs/python/tf/image/resize_images", "k": [], "r": "r1.8", "t": "tf.image.resize_images"}, {"p": "/api_docs/python/tf/image/resize_nearest_neighbor", "k": [], "r": "r1.8", "t": "tf.image.resize_nearest_neighbor"}, {"p": "/api_docs/python/tf/image/rgb_to_grayscale", "k": [], "r": "r1.8", "t": "tf.image.rgb_to_grayscale"}, {"p": "/api_docs/python/tf/image/rgb_to_hsv", "k": [], "r": "r1.8", "t": "tf.image.rgb_to_hsv"}, {"p": "/api_docs/python/tf/image/rgb_to_yiq", "k": [], "r": "r1.8", "t": "tf.image.rgb_to_yiq"}, {"p": "/api_docs/python/tf/image/rgb_to_yuv", "k": [], "r": "r1.8", "t": "tf.image.rgb_to_yuv"}, {"p": "/api_docs/python/tf/image/rot90", "k": [], "r": "r1.8", "t": "tf.image.rot90"}, {"p": "/api_docs/python/tf/image/sample_distorted_bounding_box", "k": [], "r": "r1.8", "t": "tf.image.sample_distorted_bounding_box"}, {"p": "/api_docs/python/tf/image/sobel_edges", "k": [], "r": "r1.8", "t": "tf.image.sobel_edges"}, {"p": "/api_docs/python/tf/image/ssim", "k": [], "r": "r1.8", "t": "tf.image.ssim"}, {"p": "/api_docs/python/tf/image/ssim_multiscale", "k": [], "r": "r1.8", "t": "tf.image.ssim_multiscale"}, {"p": "/api_docs/python/tf/image/total_variation", "k": [], "r": "r1.8", "t": "tf.image.total_variation"}, {"p": "/api_docs/python/tf/image/transpose_image", "k": [], "r": "r1.8", "t": "tf.image.transpose_image"}, {"p": "/api_docs/python/tf/image/yiq_to_rgb", "k": [], "r": "r1.8", "t": "tf.image.yiq_to_rgb"}, {"p": "/api_docs/python/tf/image/yuv_to_rgb", "k": [], "r": "r1.8", "t": "tf.image.yuv_to_rgb"}, {"p": "/api_docs/python/tf/import_graph_def", "k": [], "r": "r1.8", "t": "tf.import_graph_def"}, {"p": "/api_docs/python/tf/initialize_all_tables", "k": [], "r": "r1.8", "t": "tf.initialize_all_tables"}, {"p": "/api_docs/python/tf/initialize_all_variables", "k": [], "r": "r1.8", "t": "tf.initialize_all_variables"}, {"p": "/api_docs/python/tf/initialize_local_variables", "k": [], "r": "r1.8", "t": "tf.initialize_local_variables"}, {"p": "/api_docs/python/tf/initialize_variables", "k": [], "r": "r1.8", "t": "tf.initialize_variables"}, {"p": "/api_docs/python/tf/initializers", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.initializers"}, {"p": "/api_docs/python/tf/initializers/identity", "k": ["__call__", "__init__", "from_config", "get_config"], "r": "r1.8", "t": "tf.initializers.identity"}, {"p": "/api_docs/python/tf/invert_permutation", "k": [], "r": "r1.8", "t": "tf.invert_permutation"}, {"p": "/api_docs/python/tf/is_finite", "k": [], "r": "r1.8", "t": "tf.is_finite"}, {"p": "/api_docs/python/tf/is_inf", "k": [], "r": "r1.8", "t": "tf.is_inf"}, {"p": "/api_docs/python/tf/is_nan", "k": [], "r": "r1.8", "t": "tf.is_nan"}, {"p": "/api_docs/python/tf/is_non_decreasing", "k": [], "r": "r1.8", "t": "tf.is_non_decreasing"}, {"p": "/api_docs/python/tf/is_numeric_tensor", "k": [], "r": "r1.8", "t": "tf.is_numeric_tensor"}, {"p": "/api_docs/python/tf/is_strictly_increasing", "k": [], "r": "r1.8", "t": "tf.is_strictly_increasing"}, {"p": "/api_docs/python/tf/is_variable_initialized", "k": [], "r": "r1.8", "t": "tf.is_variable_initialized"}, {"p": "/api_docs/python/tf/keras", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.keras"}, {"p": "/api_docs/python/tf/keras/Input", "k": [], "r": "r1.8", "t": "tf.keras.Input"}, {"p": "/api_docs/python/tf/keras/Model", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "input_spec", "layers", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "state_updates", "stateful", "trainable_variables", "trainable_weights", "updates", "uses_learning_phase", "variables", "weights", "__call__", "__deepcopy__", "__init__", "__setattr__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compile", "compute_mask", "compute_output_shape", "count_params", "evaluate", "evaluate_generator", "fit", "fit_generator", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_layer", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "load_weights", "predict", "predict_generator", "predict_on_batch", "reset_states", "save", "save_weights", "set_weights", "summary", "test_on_batch", "to_json", "to_yaml", "train_on_batch"], "r": "r1.8", "t": "tf.keras.Model"}, {"p": "/api_docs/python/tf/keras/Sequential", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "input_spec", "layers", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "state_updates", "stateful", "trainable_variables", "trainable_weights", "updates", "uses_learning_phase", "variables", "weights", "__call__", "__deepcopy__", "__init__", "__setattr__", "add", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compile", "compute_mask", "compute_output_shape", "count_params", "evaluate", "evaluate_generator", "fit", "fit_generator", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_layer", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "load_weights", "pop", "predict", "predict_classes", "predict_generator", "predict_on_batch", "predict_proba", "reset_states", "save", "save_weights", "set_weights", "summary", "test_on_batch", "to_json", "to_yaml", "train_on_batch"], "r": "r1.8", "t": "tf.keras.Sequential"}, {"p": "/api_docs/python/tf/keras/activations", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.keras.activations"}, {"p": "/api_docs/python/tf/keras/activations/deserialize", "k": [], "r": "r1.8", "t": "tf.keras.activations.deserialize"}, {"p": "/api_docs/python/tf/keras/activations/elu", "k": [], "r": "r1.8", "t": "tf.keras.activations.elu"}, {"p": "/api_docs/python/tf/keras/activations/get", "k": [], "r": "r1.8", "t": "tf.keras.activations.get"}, {"p": "/api_docs/python/tf/keras/activations/hard_sigmoid", "k": [], "r": "r1.8", "t": "tf.keras.activations.hard_sigmoid"}, {"p": "/api_docs/python/tf/keras/activations/linear", "k": [], "r": "r1.8", "t": "tf.keras.activations.linear"}, {"p": "/api_docs/python/tf/keras/activations/relu", "k": [], "r": "r1.8", "t": "tf.keras.activations.relu"}, {"p": "/api_docs/python/tf/keras/activations/selu", "k": [], "r": "r1.8", "t": "tf.keras.activations.selu"}, {"p": "/api_docs/python/tf/keras/activations/serialize", "k": [], "r": "r1.8", "t": "tf.keras.activations.serialize"}, {"p": "/api_docs/python/tf/keras/activations/sigmoid", "k": [], "r": "r1.8", "t": "tf.keras.activations.sigmoid"}, {"p": "/api_docs/python/tf/keras/activations/softmax", "k": [], "r": "r1.8", "t": "tf.keras.activations.softmax"}, {"p": "/api_docs/python/tf/keras/activations/softplus", "k": [], "r": "r1.8", "t": "tf.keras.activations.softplus"}, {"p": "/api_docs/python/tf/keras/activations/softsign", "k": [], "r": "r1.8", "t": "tf.keras.activations.softsign"}, {"p": "/api_docs/python/tf/keras/activations/tanh", "k": [], "r": "r1.8", "t": "tf.keras.activations.tanh"}, {"p": "/api_docs/python/tf/keras/applications", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.keras.applications"}, {"p": "/api_docs/python/tf/keras/applications/DenseNet121", "k": [], "r": "r1.8", "t": "tf.keras.applications.DenseNet121"}, {"p": "/api_docs/python/tf/keras/applications/DenseNet169", "k": [], "r": "r1.8", "t": "tf.keras.applications.DenseNet169"}, {"p": "/api_docs/python/tf/keras/applications/DenseNet201", "k": [], "r": "r1.8", "t": "tf.keras.applications.DenseNet201"}, {"p": "/api_docs/python/tf/keras/applications/InceptionResNetV2", "k": [], "r": "r1.8", "t": "tf.keras.applications.InceptionResNetV2"}, {"p": "/api_docs/python/tf/keras/applications/InceptionV3", "k": [], "r": "r1.8", "t": "tf.keras.applications.InceptionV3"}, {"p": "/api_docs/python/tf/keras/applications/MobileNet", "k": [], "r": "r1.8", "t": "tf.keras.applications.MobileNet"}, {"p": "/api_docs/python/tf/keras/applications/NASNetLarge", "k": [], "r": "r1.8", "t": "tf.keras.applications.NASNetLarge"}, {"p": "/api_docs/python/tf/keras/applications/NASNetMobile", "k": [], "r": "r1.8", "t": "tf.keras.applications.NASNetMobile"}, {"p": "/api_docs/python/tf/keras/applications/ResNet50", "k": [], "r": "r1.8", "t": "tf.keras.applications.ResNet50"}, {"p": "/api_docs/python/tf/keras/applications/VGG16", "k": [], "r": "r1.8", "t": "tf.keras.applications.VGG16"}, {"p": "/api_docs/python/tf/keras/applications/VGG19", "k": [], "r": "r1.8", "t": "tf.keras.applications.VGG19"}, {"p": "/api_docs/python/tf/keras/applications/Xception", "k": [], "r": "r1.8", "t": "tf.keras.applications.Xception"}, {"p": "/api_docs/python/tf/keras/applications/densenet", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.keras.applications.densenet"}, {"p": "/api_docs/python/tf/keras/applications/densenet/decode_predictions", "k": [], "r": "r1.8", "t": "tf.keras.applications.densenet.decode_predictions"}, {"p": "/api_docs/python/tf/keras/applications/densenet/preprocess_input", "k": [], "r": "r1.8", "t": "tf.keras.applications.densenet.preprocess_input"}, {"p": "/api_docs/python/tf/keras/applications/inception_resnet_v2", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.keras.applications.inception_resnet_v2"}, {"p": "/api_docs/python/tf/keras/applications/inception_resnet_v2/preprocess_input", "k": [], "r": "r1.8", "t": "tf.keras.applications.inception_resnet_v2.preprocess_input"}, {"p": "/api_docs/python/tf/keras/applications/inception_v3", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.keras.applications.inception_v3"}, {"p": "/api_docs/python/tf/keras/applications/inception_v3/preprocess_input", "k": [], "r": "r1.8", "t": "tf.keras.applications.inception_v3.preprocess_input"}, {"p": "/api_docs/python/tf/keras/applications/mobilenet", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.keras.applications.mobilenet"}, {"p": "/api_docs/python/tf/keras/applications/mobilenet/preprocess_input", "k": [], "r": "r1.8", "t": "tf.keras.applications.mobilenet.preprocess_input"}, {"p": "/api_docs/python/tf/keras/applications/nasnet", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.keras.applications.nasnet"}, {"p": "/api_docs/python/tf/keras/applications/resnet50", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.keras.applications.resnet50"}, {"p": "/api_docs/python/tf/keras/applications/resnet50/preprocess_input", "k": [], "r": "r1.8", "t": "tf.keras.applications.resnet50.preprocess_input"}, {"p": "/api_docs/python/tf/keras/applications/vgg16", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.keras.applications.vgg16"}, {"p": "/api_docs/python/tf/keras/applications/vgg19", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.keras.applications.vgg19"}, {"p": "/api_docs/python/tf/keras/applications/xception", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.keras.applications.xception"}, {"p": "/api_docs/python/tf/keras/applications/xception/preprocess_input", "k": [], "r": "r1.8", "t": "tf.keras.applications.xception.preprocess_input"}, {"p": "/api_docs/python/tf/keras/backend", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.keras.backend"}, {"p": "/api_docs/python/tf/keras/backend/abs", "k": [], "r": "r1.8", "t": "tf.keras.backend.abs"}, {"p": "/api_docs/python/tf/keras/backend/all", "k": [], "r": "r1.8", "t": "tf.keras.backend.all"}, {"p": "/api_docs/python/tf/keras/backend/any", "k": [], "r": "r1.8", "t": "tf.keras.backend.any"}, {"p": "/api_docs/python/tf/keras/backend/arange", "k": [], "r": "r1.8", "t": "tf.keras.backend.arange"}, {"p": "/api_docs/python/tf/keras/backend/argmax", "k": [], "r": "r1.8", "t": "tf.keras.backend.argmax"}, {"p": "/api_docs/python/tf/keras/backend/argmin", "k": [], "r": "r1.8", "t": "tf.keras.backend.argmin"}, {"p": "/api_docs/python/tf/keras/backend/backend", "k": [], "r": "r1.8", "t": "tf.keras.backend.backend"}, {"p": "/api_docs/python/tf/keras/backend/batch_dot", "k": [], "r": "r1.8", "t": "tf.keras.backend.batch_dot"}, {"p": "/api_docs/python/tf/keras/backend/batch_flatten", "k": [], "r": "r1.8", "t": "tf.keras.backend.batch_flatten"}, {"p": "/api_docs/python/tf/keras/backend/batch_get_value", "k": [], "r": "r1.8", "t": "tf.keras.backend.batch_get_value"}, {"p": "/api_docs/python/tf/keras/backend/batch_normalization", "k": [], "r": "r1.8", "t": "tf.keras.backend.batch_normalization"}, {"p": "/api_docs/python/tf/keras/backend/batch_set_value", "k": [], "r": "r1.8", "t": "tf.keras.backend.batch_set_value"}, {"p": "/api_docs/python/tf/keras/backend/bias_add", "k": [], "r": "r1.8", "t": "tf.keras.backend.bias_add"}, {"p": "/api_docs/python/tf/keras/backend/binary_crossentropy", "k": [], "r": "r1.8", "t": "tf.keras.backend.binary_crossentropy"}, {"p": "/api_docs/python/tf/keras/backend/cast", "k": [], "r": "r1.8", "t": "tf.keras.backend.cast"}, {"p": "/api_docs/python/tf/keras/backend/cast_to_floatx", "k": [], "r": "r1.8", "t": "tf.keras.backend.cast_to_floatx"}, {"p": "/api_docs/python/tf/keras/backend/categorical_crossentropy", "k": [], "r": "r1.8", "t": "tf.keras.backend.categorical_crossentropy"}, {"p": "/api_docs/python/tf/keras/backend/clear_session", "k": [], "r": "r1.8", "t": "tf.keras.backend.clear_session"}, {"p": "/api_docs/python/tf/keras/backend/clip", "k": [], "r": "r1.8", "t": "tf.keras.backend.clip"}, {"p": "/api_docs/python/tf/keras/backend/concatenate", "k": [], "r": "r1.8", "t": "tf.keras.backend.concatenate"}, {"p": "/api_docs/python/tf/keras/backend/constant", "k": [], "r": "r1.8", "t": "tf.keras.backend.constant"}, {"p": "/api_docs/python/tf/keras/backend/conv1d", "k": [], "r": "r1.8", "t": "tf.keras.backend.conv1d"}, {"p": "/api_docs/python/tf/keras/backend/conv2d", "k": [], "r": "r1.8", "t": "tf.keras.backend.conv2d"}, {"p": "/api_docs/python/tf/keras/backend/conv2d_transpose", "k": [], "r": "r1.8", "t": "tf.keras.backend.conv2d_transpose"}, {"p": "/api_docs/python/tf/keras/backend/conv3d", "k": [], "r": "r1.8", "t": "tf.keras.backend.conv3d"}, {"p": "/api_docs/python/tf/keras/backend/cos", "k": [], "r": "r1.8", "t": "tf.keras.backend.cos"}, {"p": "/api_docs/python/tf/keras/backend/count_params", "k": [], "r": "r1.8", "t": "tf.keras.backend.count_params"}, {"p": "/api_docs/python/tf/keras/backend/ctc_batch_cost", "k": [], "r": "r1.8", "t": "tf.keras.backend.ctc_batch_cost"}, {"p": "/api_docs/python/tf/keras/backend/ctc_decode", "k": [], "r": "r1.8", "t": "tf.keras.backend.ctc_decode"}, {"p": "/api_docs/python/tf/keras/backend/ctc_label_dense_to_sparse", "k": [], "r": "r1.8", "t": "tf.keras.backend.ctc_label_dense_to_sparse"}, {"p": "/api_docs/python/tf/keras/backend/dot", "k": [], "r": "r1.8", "t": "tf.keras.backend.dot"}, {"p": "/api_docs/python/tf/keras/backend/dropout", "k": [], "r": "r1.8", "t": "tf.keras.backend.dropout"}, {"p": "/api_docs/python/tf/keras/backend/dtype", "k": [], "r": "r1.8", "t": "tf.keras.backend.dtype"}, {"p": "/api_docs/python/tf/keras/backend/elu", "k": [], "r": "r1.8", "t": "tf.keras.backend.elu"}, {"p": "/api_docs/python/tf/keras/backend/epsilon", "k": [], "r": "r1.8", "t": "tf.keras.backend.epsilon"}, {"p": "/api_docs/python/tf/keras/backend/equal", "k": [], "r": "r1.8", "t": "tf.keras.backend.equal"}, {"p": "/api_docs/python/tf/keras/backend/eval", "k": [], "r": "r1.8", "t": "tf.keras.backend.eval"}, {"p": "/api_docs/python/tf/keras/backend/exp", "k": [], "r": "r1.8", "t": "tf.keras.backend.exp"}, {"p": "/api_docs/python/tf/keras/backend/expand_dims", "k": [], "r": "r1.8", "t": "tf.keras.backend.expand_dims"}, {"p": "/api_docs/python/tf/keras/backend/eye", "k": [], "r": "r1.8", "t": "tf.keras.backend.eye"}, {"p": "/api_docs/python/tf/keras/backend/flatten", "k": [], "r": "r1.8", "t": "tf.keras.backend.flatten"}, {"p": "/api_docs/python/tf/keras/backend/floatx", "k": [], "r": "r1.8", "t": "tf.keras.backend.floatx"}, {"p": "/api_docs/python/tf/keras/backend/foldl", "k": [], "r": "r1.8", "t": "tf.keras.backend.foldl"}, {"p": "/api_docs/python/tf/keras/backend/foldr", "k": [], "r": "r1.8", "t": "tf.keras.backend.foldr"}, {"p": "/api_docs/python/tf/keras/backend/function", "k": [], "r": "r1.8", "t": "tf.keras.backend.function"}, {"p": "/api_docs/python/tf/keras/backend/gather", "k": [], "r": "r1.8", "t": "tf.keras.backend.gather"}, {"p": "/api_docs/python/tf/keras/backend/get_session", "k": [], "r": "r1.8", "t": "tf.keras.backend.get_session"}, {"p": "/api_docs/python/tf/keras/backend/get_uid", "k": [], "r": "r1.8", "t": "tf.keras.backend.get_uid"}, {"p": "/api_docs/python/tf/keras/backend/get_value", "k": [], "r": "r1.8", "t": "tf.keras.backend.get_value"}, {"p": "/api_docs/python/tf/keras/backend/gradients", "k": [], "r": "r1.8", "t": "tf.keras.backend.gradients"}, {"p": "/api_docs/python/tf/keras/backend/greater", "k": [], "r": "r1.8", "t": "tf.keras.backend.greater"}, {"p": "/api_docs/python/tf/keras/backend/greater_equal", "k": [], "r": "r1.8", "t": "tf.keras.backend.greater_equal"}, {"p": "/api_docs/python/tf/keras/backend/hard_sigmoid", "k": [], "r": "r1.8", "t": "tf.keras.backend.hard_sigmoid"}, {"p": "/api_docs/python/tf/keras/backend/image_data_format", "k": [], "r": "r1.8", "t": "tf.keras.backend.image_data_format"}, {"p": "/api_docs/python/tf/keras/backend/in_test_phase", "k": [], "r": "r1.8", "t": "tf.keras.backend.in_test_phase"}, {"p": "/api_docs/python/tf/keras/backend/in_top_k", "k": [], "r": "r1.8", "t": "tf.keras.backend.in_top_k"}, {"p": "/api_docs/python/tf/keras/backend/in_train_phase", "k": [], "r": "r1.8", "t": "tf.keras.backend.in_train_phase"}, {"p": "/api_docs/python/tf/keras/backend/int_shape", "k": [], "r": "r1.8", "t": "tf.keras.backend.int_shape"}, {"p": "/api_docs/python/tf/keras/backend/is_sparse", "k": [], "r": "r1.8", "t": "tf.keras.backend.is_sparse"}, {"p": "/api_docs/python/tf/keras/backend/l2_normalize", "k": [], "r": "r1.8", "t": "tf.keras.backend.l2_normalize"}, {"p": "/api_docs/python/tf/keras/backend/learning_phase", "k": [], "r": "r1.8", "t": "tf.keras.backend.learning_phase"}, {"p": "/api_docs/python/tf/keras/backend/less", "k": [], "r": "r1.8", "t": "tf.keras.backend.less"}, {"p": "/api_docs/python/tf/keras/backend/less_equal", "k": [], "r": "r1.8", "t": "tf.keras.backend.less_equal"}, {"p": "/api_docs/python/tf/keras/backend/log", "k": [], "r": "r1.8", "t": "tf.keras.backend.log"}, {"p": "/api_docs/python/tf/keras/backend/manual_variable_initialization", "k": [], "r": "r1.8", "t": "tf.keras.backend.manual_variable_initialization"}, {"p": "/api_docs/python/tf/keras/backend/map_fn", "k": [], "r": "r1.8", "t": "tf.keras.backend.map_fn"}, {"p": "/api_docs/python/tf/keras/backend/max", "k": [], "r": "r1.8", "t": "tf.keras.backend.max"}, {"p": "/api_docs/python/tf/keras/backend/maximum", "k": [], "r": "r1.8", "t": "tf.keras.backend.maximum"}, {"p": "/api_docs/python/tf/keras/backend/mean", "k": [], "r": "r1.8", "t": "tf.keras.backend.mean"}, {"p": "/api_docs/python/tf/keras/backend/min", "k": [], "r": "r1.8", "t": "tf.keras.backend.min"}, {"p": "/api_docs/python/tf/keras/backend/minimum", "k": [], "r": "r1.8", "t": "tf.keras.backend.minimum"}, {"p": "/api_docs/python/tf/keras/backend/moving_average_update", "k": [], "r": "r1.8", "t": "tf.keras.backend.moving_average_update"}, {"p": "/api_docs/python/tf/keras/backend/ndim", "k": [], "r": "r1.8", "t": "tf.keras.backend.ndim"}, {"p": "/api_docs/python/tf/keras/backend/normalize_batch_in_training", "k": [], "r": "r1.8", "t": "tf.keras.backend.normalize_batch_in_training"}, {"p": "/api_docs/python/tf/keras/backend/not_equal", "k": [], "r": "r1.8", "t": "tf.keras.backend.not_equal"}, {"p": "/api_docs/python/tf/keras/backend/one_hot", "k": [], "r": "r1.8", "t": "tf.keras.backend.one_hot"}, {"p": "/api_docs/python/tf/keras/backend/ones", "k": [], "r": "r1.8", "t": "tf.keras.backend.ones"}, {"p": "/api_docs/python/tf/keras/backend/ones_like", "k": [], "r": "r1.8", "t": "tf.keras.backend.ones_like"}, {"p": "/api_docs/python/tf/keras/backend/permute_dimensions", "k": [], "r": "r1.8", "t": "tf.keras.backend.permute_dimensions"}, {"p": "/api_docs/python/tf/keras/backend/placeholder", "k": [], "r": "r1.8", "t": "tf.keras.backend.placeholder"}, {"p": "/api_docs/python/tf/keras/backend/pool2d", "k": [], "r": "r1.8", "t": "tf.keras.backend.pool2d"}, {"p": "/api_docs/python/tf/keras/backend/pool3d", "k": [], "r": "r1.8", "t": "tf.keras.backend.pool3d"}, {"p": "/api_docs/python/tf/keras/backend/pow", "k": [], "r": "r1.8", "t": "tf.keras.backend.pow"}, {"p": "/api_docs/python/tf/keras/backend/print_tensor", "k": [], "r": "r1.8", "t": "tf.keras.backend.print_tensor"}, {"p": "/api_docs/python/tf/keras/backend/prod", "k": [], "r": "r1.8", "t": "tf.keras.backend.prod"}, {"p": "/api_docs/python/tf/keras/backend/random_binomial", "k": [], "r": "r1.8", "t": "tf.keras.backend.random_binomial"}, {"p": "/api_docs/python/tf/keras/backend/random_normal", "k": [], "r": "r1.8", "t": "tf.keras.backend.random_normal"}, {"p": "/api_docs/python/tf/keras/backend/random_normal_variable", "k": [], "r": "r1.8", "t": "tf.keras.backend.random_normal_variable"}, {"p": "/api_docs/python/tf/keras/backend/random_uniform", "k": [], "r": "r1.8", "t": "tf.keras.backend.random_uniform"}, {"p": "/api_docs/python/tf/keras/backend/random_uniform_variable", "k": [], "r": "r1.8", "t": "tf.keras.backend.random_uniform_variable"}, {"p": "/api_docs/python/tf/keras/backend/relu", "k": [], "r": "r1.8", "t": "tf.keras.backend.relu"}, {"p": "/api_docs/python/tf/keras/backend/repeat", "k": [], "r": "r1.8", "t": "tf.keras.backend.repeat"}, {"p": "/api_docs/python/tf/keras/backend/repeat_elements", "k": [], "r": "r1.8", "t": "tf.keras.backend.repeat_elements"}, {"p": "/api_docs/python/tf/keras/backend/reset_uids", "k": [], "r": "r1.8", "t": "tf.keras.backend.reset_uids"}, {"p": "/api_docs/python/tf/keras/backend/reshape", "k": [], "r": "r1.8", "t": "tf.keras.backend.reshape"}, {"p": "/api_docs/python/tf/keras/backend/resize_images", "k": [], "r": "r1.8", "t": "tf.keras.backend.resize_images"}, {"p": "/api_docs/python/tf/keras/backend/resize_volumes", "k": [], "r": "r1.8", "t": "tf.keras.backend.resize_volumes"}, {"p": "/api_docs/python/tf/keras/backend/reverse", "k": [], "r": "r1.8", "t": "tf.keras.backend.reverse"}, {"p": "/api_docs/python/tf/keras/backend/rnn", "k": [], "r": "r1.8", "t": "tf.keras.backend.rnn"}, {"p": "/api_docs/python/tf/keras/backend/round", "k": [], "r": "r1.8", "t": "tf.keras.backend.round"}, {"p": "/api_docs/python/tf/keras/backend/separable_conv2d", "k": [], "r": "r1.8", "t": "tf.keras.backend.separable_conv2d"}, {"p": "/api_docs/python/tf/keras/backend/set_epsilon", "k": [], "r": "r1.8", "t": "tf.keras.backend.set_epsilon"}, {"p": "/api_docs/python/tf/keras/backend/set_floatx", "k": [], "r": "r1.8", "t": "tf.keras.backend.set_floatx"}, {"p": "/api_docs/python/tf/keras/backend/set_image_data_format", "k": [], "r": "r1.8", "t": "tf.keras.backend.set_image_data_format"}, {"p": "/api_docs/python/tf/keras/backend/set_learning_phase", "k": [], "r": "r1.8", "t": "tf.keras.backend.set_learning_phase"}, {"p": "/api_docs/python/tf/keras/backend/set_session", "k": [], "r": "r1.8", "t": "tf.keras.backend.set_session"}, {"p": "/api_docs/python/tf/keras/backend/set_value", "k": [], "r": "r1.8", "t": "tf.keras.backend.set_value"}, {"p": "/api_docs/python/tf/keras/backend/shape", "k": [], "r": "r1.8", "t": "tf.keras.backend.shape"}, {"p": "/api_docs/python/tf/keras/backend/sigmoid", "k": [], "r": "r1.8", "t": "tf.keras.backend.sigmoid"}, {"p": "/api_docs/python/tf/keras/backend/sign", "k": [], "r": "r1.8", "t": "tf.keras.backend.sign"}, {"p": "/api_docs/python/tf/keras/backend/sin", "k": [], "r": "r1.8", "t": "tf.keras.backend.sin"}, {"p": "/api_docs/python/tf/keras/backend/softmax", "k": [], "r": "r1.8", "t": "tf.keras.backend.softmax"}, {"p": "/api_docs/python/tf/keras/backend/softplus", "k": [], "r": "r1.8", "t": "tf.keras.backend.softplus"}, {"p": "/api_docs/python/tf/keras/backend/softsign", "k": [], "r": "r1.8", "t": "tf.keras.backend.softsign"}, {"p": "/api_docs/python/tf/keras/backend/sparse_categorical_crossentropy", "k": [], "r": "r1.8", "t": "tf.keras.backend.sparse_categorical_crossentropy"}, {"p": "/api_docs/python/tf/keras/backend/spatial_2d_padding", "k": [], "r": "r1.8", "t": "tf.keras.backend.spatial_2d_padding"}, {"p": "/api_docs/python/tf/keras/backend/spatial_3d_padding", "k": [], "r": "r1.8", "t": "tf.keras.backend.spatial_3d_padding"}, {"p": "/api_docs/python/tf/keras/backend/sqrt", "k": [], "r": "r1.8", "t": "tf.keras.backend.sqrt"}, {"p": "/api_docs/python/tf/keras/backend/square", "k": [], "r": "r1.8", "t": "tf.keras.backend.square"}, {"p": "/api_docs/python/tf/keras/backend/squeeze", "k": [], "r": "r1.8", "t": "tf.keras.backend.squeeze"}, {"p": "/api_docs/python/tf/keras/backend/stack", "k": [], "r": "r1.8", "t": "tf.keras.backend.stack"}, {"p": "/api_docs/python/tf/keras/backend/std", "k": [], "r": "r1.8", "t": "tf.keras.backend.std"}, {"p": "/api_docs/python/tf/keras/backend/stop_gradient", "k": [], "r": "r1.8", "t": "tf.keras.backend.stop_gradient"}, {"p": "/api_docs/python/tf/keras/backend/sum", "k": [], "r": "r1.8", "t": "tf.keras.backend.sum"}, {"p": "/api_docs/python/tf/keras/backend/switch", "k": [], "r": "r1.8", "t": "tf.keras.backend.switch"}, {"p": "/api_docs/python/tf/keras/backend/tanh", "k": [], "r": "r1.8", "t": "tf.keras.backend.tanh"}, {"p": "/api_docs/python/tf/keras/backend/temporal_padding", "k": [], "r": "r1.8", "t": "tf.keras.backend.temporal_padding"}, {"p": "/api_docs/python/tf/keras/backend/to_dense", "k": [], "r": "r1.8", "t": "tf.keras.backend.to_dense"}, {"p": "/api_docs/python/tf/keras/backend/transpose", "k": [], "r": "r1.8", "t": "tf.keras.backend.transpose"}, {"p": "/api_docs/python/tf/keras/backend/truncated_normal", "k": [], "r": "r1.8", "t": "tf.keras.backend.truncated_normal"}, {"p": "/api_docs/python/tf/keras/backend/update", "k": [], "r": "r1.8", "t": "tf.keras.backend.update"}, {"p": "/api_docs/python/tf/keras/backend/update_add", "k": [], "r": "r1.8", "t": "tf.keras.backend.update_add"}, {"p": "/api_docs/python/tf/keras/backend/update_sub", "k": [], "r": "r1.8", "t": "tf.keras.backend.update_sub"}, {"p": "/api_docs/python/tf/keras/backend/var", "k": [], "r": "r1.8", "t": "tf.keras.backend.var"}, {"p": "/api_docs/python/tf/keras/backend/variable", "k": [], "r": "r1.8", "t": "tf.keras.backend.variable"}, {"p": "/api_docs/python/tf/keras/backend/zeros", "k": [], "r": "r1.8", "t": "tf.keras.backend.zeros"}, {"p": "/api_docs/python/tf/keras/backend/zeros_like", "k": [], "r": "r1.8", "t": "tf.keras.backend.zeros_like"}, {"p": "/api_docs/python/tf/keras/callbacks", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.keras.callbacks"}, {"p": "/api_docs/python/tf/keras/callbacks/BaseLogger", "k": ["__init__", "on_batch_begin", "on_batch_end", "on_epoch_begin", "on_epoch_end", "on_train_begin", "on_train_end", "set_model", "set_params"], "r": "r1.8", "t": "tf.keras.callbacks.BaseLogger"}, {"p": "/api_docs/python/tf/keras/callbacks/CSVLogger", "k": ["__init__", "on_batch_begin", "on_batch_end", "on_epoch_begin", "on_epoch_end", "on_train_begin", "on_train_end", "set_model", "set_params"], "r": "r1.8", "t": "tf.keras.callbacks.CSVLogger"}, {"p": "/api_docs/python/tf/keras/callbacks/Callback", "k": ["__init__", "on_batch_begin", "on_batch_end", "on_epoch_begin", "on_epoch_end", "on_train_begin", "on_train_end", "set_model", "set_params"], "r": "r1.8", "t": "tf.keras.callbacks.Callback"}, {"p": "/api_docs/python/tf/keras/callbacks/EarlyStopping", "k": ["__init__", "on_batch_begin", "on_batch_end", "on_epoch_begin", "on_epoch_end", "on_train_begin", "on_train_end", "set_model", "set_params"], "r": "r1.8", "t": "tf.keras.callbacks.EarlyStopping"}, {"p": "/api_docs/python/tf/keras/callbacks/History", "k": ["__init__", "on_batch_begin", "on_batch_end", "on_epoch_begin", "on_epoch_end", "on_train_begin", "on_train_end", "set_model", "set_params"], "r": "r1.8", "t": "tf.keras.callbacks.History"}, {"p": "/api_docs/python/tf/keras/callbacks/LambdaCallback", "k": ["__init__", "on_batch_begin", "on_batch_end", "on_epoch_begin", "on_epoch_end", "on_train_begin", "on_train_end", "set_model", "set_params"], "r": "r1.8", "t": "tf.keras.callbacks.LambdaCallback"}, {"p": "/api_docs/python/tf/keras/callbacks/LearningRateScheduler", "k": ["__init__", "on_batch_begin", "on_batch_end", "on_epoch_begin", "on_epoch_end", "on_train_begin", "on_train_end", "set_model", "set_params"], "r": "r1.8", "t": "tf.keras.callbacks.LearningRateScheduler"}, {"p": "/api_docs/python/tf/keras/callbacks/ModelCheckpoint", "k": ["__init__", "on_batch_begin", "on_batch_end", "on_epoch_begin", "on_epoch_end", "on_train_begin", "on_train_end", "set_model", "set_params"], "r": "r1.8", "t": "tf.keras.callbacks.ModelCheckpoint"}, {"p": "/api_docs/python/tf/keras/callbacks/ProgbarLogger", "k": ["__init__", "on_batch_begin", "on_batch_end", "on_epoch_begin", "on_epoch_end", "on_train_begin", "on_train_end", "set_model", "set_params"], "r": "r1.8", "t": "tf.keras.callbacks.ProgbarLogger"}, {"p": "/api_docs/python/tf/keras/callbacks/ReduceLROnPlateau", "k": ["__init__", "in_cooldown", "on_batch_begin", "on_batch_end", "on_epoch_begin", "on_epoch_end", "on_train_begin", "on_train_end", "set_model", "set_params"], "r": "r1.8", "t": "tf.keras.callbacks.ReduceLROnPlateau"}, {"p": "/api_docs/python/tf/keras/callbacks/RemoteMonitor", "k": ["__init__", "on_batch_begin", "on_batch_end", "on_epoch_begin", "on_epoch_end", "on_train_begin", "on_train_end", "set_model", "set_params"], "r": "r1.8", "t": "tf.keras.callbacks.RemoteMonitor"}, {"p": "/api_docs/python/tf/keras/callbacks/TensorBoard", "k": ["__init__", "on_batch_begin", "on_batch_end", "on_epoch_begin", "on_epoch_end", "on_train_begin", "on_train_end", "set_model", "set_params"], "r": "r1.8", "t": "tf.keras.callbacks.TensorBoard"}, {"p": "/api_docs/python/tf/keras/callbacks/TerminateOnNaN", "k": ["__init__", "on_batch_begin", "on_batch_end", "on_epoch_begin", "on_epoch_end", "on_train_begin", "on_train_end", "set_model", "set_params"], "r": "r1.8", "t": "tf.keras.callbacks.TerminateOnNaN"}, {"p": "/api_docs/python/tf/keras/constraints", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.keras.constraints"}, {"p": "/api_docs/python/tf/keras/constraints/Constraint", "k": ["__call__", "get_config"], "r": "r1.8", "t": "tf.keras.constraints.Constraint"}, {"p": "/api_docs/python/tf/keras/constraints/MaxNorm", "k": ["__call__", "__init__", "get_config"], "r": "r1.8", "t": "tf.keras.constraints.MaxNorm"}, {"p": "/api_docs/python/tf/keras/constraints/MinMaxNorm", "k": ["__call__", "__init__", "get_config"], "r": "r1.8", "t": "tf.keras.constraints.MinMaxNorm"}, {"p": "/api_docs/python/tf/keras/constraints/NonNeg", "k": ["__call__", "get_config"], "r": "r1.8", "t": "tf.keras.constraints.NonNeg"}, {"p": "/api_docs/python/tf/keras/constraints/UnitNorm", "k": ["__call__", "__init__", "get_config"], "r": "r1.8", "t": "tf.keras.constraints.UnitNorm"}, {"p": "/api_docs/python/tf/keras/constraints/deserialize", "k": [], "r": "r1.8", "t": "tf.keras.constraints.deserialize"}, {"p": "/api_docs/python/tf/keras/constraints/get", "k": [], "r": "r1.8", "t": "tf.keras.constraints.get"}, {"p": "/api_docs/python/tf/keras/constraints/serialize", "k": [], "r": "r1.8", "t": "tf.keras.constraints.serialize"}, {"p": "/api_docs/python/tf/keras/datasets", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.keras.datasets"}, {"p": "/api_docs/python/tf/keras/datasets/boston_housing", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.keras.datasets.boston_housing"}, {"p": "/api_docs/python/tf/keras/datasets/boston_housing/load_data", "k": [], "r": "r1.8", "t": "tf.keras.datasets.boston_housing.load_data"}, {"p": "/api_docs/python/tf/keras/datasets/cifar10", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.keras.datasets.cifar10"}, {"p": "/api_docs/python/tf/keras/datasets/cifar10/load_data", "k": [], "r": "r1.8", "t": "tf.keras.datasets.cifar10.load_data"}, {"p": "/api_docs/python/tf/keras/datasets/cifar100", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.keras.datasets.cifar100"}, {"p": "/api_docs/python/tf/keras/datasets/cifar100/load_data", "k": [], "r": "r1.8", "t": "tf.keras.datasets.cifar100.load_data"}, {"p": "/api_docs/python/tf/keras/datasets/fashion_mnist", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.keras.datasets.fashion_mnist"}, {"p": "/api_docs/python/tf/keras/datasets/fashion_mnist/load_data", "k": [], "r": "r1.8", "t": "tf.keras.datasets.fashion_mnist.load_data"}, {"p": "/api_docs/python/tf/keras/datasets/imdb", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.keras.datasets.imdb"}, {"p": "/api_docs/python/tf/keras/datasets/imdb/get_word_index", "k": [], "r": "r1.8", "t": "tf.keras.datasets.imdb.get_word_index"}, {"p": "/api_docs/python/tf/keras/datasets/imdb/load_data", "k": [], "r": "r1.8", "t": "tf.keras.datasets.imdb.load_data"}, {"p": "/api_docs/python/tf/keras/datasets/mnist", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.keras.datasets.mnist"}, {"p": "/api_docs/python/tf/keras/datasets/mnist/load_data", "k": [], "r": "r1.8", "t": "tf.keras.datasets.mnist.load_data"}, {"p": "/api_docs/python/tf/keras/datasets/reuters", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.keras.datasets.reuters"}, {"p": "/api_docs/python/tf/keras/datasets/reuters/get_word_index", "k": [], "r": "r1.8", "t": "tf.keras.datasets.reuters.get_word_index"}, {"p": "/api_docs/python/tf/keras/datasets/reuters/load_data", "k": [], "r": "r1.8", "t": "tf.keras.datasets.reuters.load_data"}, {"p": "/api_docs/python/tf/keras/estimator", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.keras.estimator"}, {"p": "/api_docs/python/tf/keras/estimator/model_to_estimator", "k": [], "r": "r1.8", "t": "tf.keras.estimator.model_to_estimator"}, {"p": "/api_docs/python/tf/keras/initializers", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.keras.initializers"}, {"p": "/api_docs/python/tf/keras/initializers/Initializer", "k": ["__call__", "from_config", "get_config"], "r": "r1.8", "t": "tf.keras.initializers.Initializer"}, {"p": "/api_docs/python/tf/keras/initializers/deserialize", "k": [], "r": "r1.8", "t": "tf.keras.initializers.deserialize"}, {"p": "/api_docs/python/tf/keras/initializers/get", "k": [], "r": "r1.8", "t": "tf.keras.initializers.get"}, {"p": "/api_docs/python/tf/keras/initializers/glorot_normal", "k": [], "r": "r1.8", "t": "tf.keras.initializers.glorot_normal"}, {"p": "/api_docs/python/tf/keras/initializers/glorot_uniform", "k": [], "r": "r1.8", "t": "tf.keras.initializers.glorot_uniform"}, {"p": "/api_docs/python/tf/keras/initializers/he_normal", "k": [], "r": "r1.8", "t": "tf.keras.initializers.he_normal"}, {"p": "/api_docs/python/tf/keras/initializers/he_uniform", "k": [], "r": "r1.8", "t": "tf.keras.initializers.he_uniform"}, {"p": "/api_docs/python/tf/keras/initializers/lecun_normal", "k": [], "r": "r1.8", "t": "tf.keras.initializers.lecun_normal"}, {"p": "/api_docs/python/tf/keras/initializers/lecun_uniform", "k": [], "r": "r1.8", "t": "tf.keras.initializers.lecun_uniform"}, {"p": "/api_docs/python/tf/keras/initializers/serialize", "k": [], "r": "r1.8", "t": "tf.keras.initializers.serialize"}, {"p": "/api_docs/python/tf/keras/layers", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.keras.layers"}, {"p": "/api_docs/python/tf/keras/layers/Activation", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.8", "t": "tf.keras.layers.Activation"}, {"p": "/api_docs/python/tf/keras/layers/ActivityRegularization", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.8", "t": "tf.keras.layers.ActivityRegularization"}, {"p": "/api_docs/python/tf/keras/layers/Add", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.8", "t": "tf.keras.layers.Add"}, {"p": "/api_docs/python/tf/keras/layers/AlphaDropout", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.8", "t": "tf.keras.layers.AlphaDropout"}, {"p": "/api_docs/python/tf/keras/layers/Average", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.8", "t": "tf.keras.layers.Average"}, {"p": "/api_docs/python/tf/keras/layers/AveragePooling1D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.8", "t": "tf.keras.layers.AveragePooling1D"}, {"p": "/api_docs/python/tf/keras/layers/AveragePooling2D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.8", "t": "tf.keras.layers.AveragePooling2D"}, {"p": "/api_docs/python/tf/keras/layers/AveragePooling3D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.8", "t": "tf.keras.layers.AveragePooling3D"}, {"p": "/api_docs/python/tf/keras/layers/BatchNormalization", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.8", "t": "tf.keras.layers.BatchNormalization"}, {"p": "/api_docs/python/tf/keras/layers/Bidirectional", "k": ["activity_regularizer", "constraints", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "reset_states", "set_weights"], "r": "r1.8", "t": "tf.keras.layers.Bidirectional"}, {"p": "/api_docs/python/tf/keras/layers/Concatenate", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.8", "t": "tf.keras.layers.Concatenate"}, {"p": "/api_docs/python/tf/keras/layers/Conv1D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.8", "t": "tf.keras.layers.Conv1D"}, {"p": "/api_docs/python/tf/keras/layers/Conv2D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.8", "t": "tf.keras.layers.Conv2D"}, {"p": "/api_docs/python/tf/keras/layers/Conv2DTranspose", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.8", "t": "tf.keras.layers.Conv2DTranspose"}, {"p": "/api_docs/python/tf/keras/layers/Conv3D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.8", "t": "tf.keras.layers.Conv3D"}, {"p": "/api_docs/python/tf/keras/layers/Conv3DTranspose", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.8", "t": "tf.keras.layers.Conv3DTranspose"}, {"p": "/api_docs/python/tf/keras/layers/ConvLSTM2D", "k": ["activation", "activity_regularizer", "bias_constraint", "bias_initializer", "bias_regularizer", "data_format", "dilation_rate", "dropout", "dtype", "filters", "graph", "input", "input_mask", "input_shape", "kernel_constraint", "kernel_initializer", "kernel_regularizer", "kernel_size", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "padding", "recurrent_activation", "recurrent_constraint", "recurrent_dropout", "recurrent_initializer", "recurrent_regularizer", "scope_name", "states", "strides", "trainable_variables", "trainable_weights", "unit_forget_bias", "updates", "use_bias", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_initial_state", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "reset_states", "set_weights"], "r": "r1.8", "t": "tf.keras.layers.ConvLSTM2D"}, {"p": "/api_docs/python/tf/keras/layers/Cropping1D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.8", "t": "tf.keras.layers.Cropping1D"}, {"p": "/api_docs/python/tf/keras/layers/Cropping2D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.8", "t": "tf.keras.layers.Cropping2D"}, {"p": "/api_docs/python/tf/keras/layers/Cropping3D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.8", "t": "tf.keras.layers.Cropping3D"}, {"p": "/api_docs/python/tf/keras/layers/Dense", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.8", "t": "tf.keras.layers.Dense"}, {"p": "/api_docs/python/tf/keras/layers/DepthwiseConv2D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.8", "t": "tf.keras.layers.DepthwiseConv2D"}, {"p": "/api_docs/python/tf/keras/layers/Dot", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.8", "t": "tf.keras.layers.Dot"}, {"p": "/api_docs/python/tf/keras/layers/Dropout", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.8", "t": "tf.keras.layers.Dropout"}, {"p": "/api_docs/python/tf/keras/layers/ELU", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.8", "t": "tf.keras.layers.ELU"}, {"p": "/api_docs/python/tf/keras/layers/Embedding", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.8", "t": "tf.keras.layers.Embedding"}, {"p": "/api_docs/python/tf/keras/layers/Flatten", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.8", "t": "tf.keras.layers.Flatten"}, {"p": "/api_docs/python/tf/keras/layers/GRU", "k": ["activation", "activity_regularizer", "bias_constraint", "bias_initializer", "bias_regularizer", "dropout", "dtype", "graph", "implementation", "input", "input_mask", "input_shape", "kernel_constraint", "kernel_initializer", "kernel_regularizer", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "recurrent_activation", "recurrent_constraint", "recurrent_dropout", "recurrent_initializer", "recurrent_regularizer", "reset_after", "scope_name", "states", "trainable_variables", "trainable_weights", "units", "updates", "use_bias", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_initial_state", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "reset_states", "set_weights"], "r": "r1.8", "t": "tf.keras.layers.GRU"}, {"p": "/api_docs/python/tf/keras/layers/GRUCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.8", "t": "tf.keras.layers.GRUCell"}, {"p": "/api_docs/python/tf/keras/layers/GaussianDropout", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.8", "t": "tf.keras.layers.GaussianDropout"}, {"p": "/api_docs/python/tf/keras/layers/GaussianNoise", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.8", "t": "tf.keras.layers.GaussianNoise"}, {"p": "/api_docs/python/tf/keras/layers/GlobalAveragePooling1D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.8", "t": "tf.keras.layers.GlobalAveragePooling1D"}, {"p": "/api_docs/python/tf/keras/layers/GlobalAveragePooling2D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.8", "t": "tf.keras.layers.GlobalAveragePooling2D"}, {"p": "/api_docs/python/tf/keras/layers/GlobalAveragePooling3D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.8", "t": "tf.keras.layers.GlobalAveragePooling3D"}, {"p": "/api_docs/python/tf/keras/layers/GlobalMaxPool1D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.8", "t": "tf.keras.layers.GlobalMaxPool1D"}, {"p": "/api_docs/python/tf/keras/layers/GlobalMaxPool2D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.8", "t": "tf.keras.layers.GlobalMaxPool2D"}, {"p": "/api_docs/python/tf/keras/layers/GlobalMaxPool3D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.8", "t": "tf.keras.layers.GlobalMaxPool3D"}, {"p": "/api_docs/python/tf/keras/layers/InputLayer", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.8", "t": "tf.keras.layers.InputLayer"}, {"p": "/api_docs/python/tf/keras/layers/LSTM", "k": ["activation", "activity_regularizer", "bias_constraint", "bias_initializer", "bias_regularizer", "dropout", "dtype", "graph", "implementation", "input", "input_mask", "input_shape", "kernel_constraint", "kernel_initializer", "kernel_regularizer", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "recurrent_activation", "recurrent_constraint", "recurrent_dropout", "recurrent_initializer", "recurrent_regularizer", "scope_name", "states", "trainable_variables", "trainable_weights", "unit_forget_bias", "units", "updates", "use_bias", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_initial_state", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "reset_states", "set_weights"], "r": "r1.8", "t": "tf.keras.layers.LSTM"}, {"p": "/api_docs/python/tf/keras/layers/LSTMCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.8", "t": "tf.keras.layers.LSTMCell"}, {"p": "/api_docs/python/tf/keras/layers/Lambda", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.8", "t": "tf.keras.layers.Lambda"}, {"p": "/api_docs/python/tf/keras/layers/Layer", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.8", "t": "tf.keras.layers.Layer"}, {"p": "/api_docs/python/tf/keras/layers/LeakyReLU", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.8", "t": "tf.keras.layers.LeakyReLU"}, {"p": "/api_docs/python/tf/keras/layers/LocallyConnected1D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.8", "t": "tf.keras.layers.LocallyConnected1D"}, {"p": "/api_docs/python/tf/keras/layers/LocallyConnected2D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.8", "t": "tf.keras.layers.LocallyConnected2D"}, {"p": "/api_docs/python/tf/keras/layers/Masking", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.8", "t": "tf.keras.layers.Masking"}, {"p": "/api_docs/python/tf/keras/layers/MaxPool1D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.8", "t": "tf.keras.layers.MaxPool1D"}, {"p": "/api_docs/python/tf/keras/layers/MaxPool2D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.8", "t": "tf.keras.layers.MaxPool2D"}, {"p": "/api_docs/python/tf/keras/layers/MaxPool3D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.8", "t": "tf.keras.layers.MaxPool3D"}, {"p": "/api_docs/python/tf/keras/layers/Maximum", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.8", "t": "tf.keras.layers.Maximum"}, {"p": "/api_docs/python/tf/keras/layers/Multiply", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.8", "t": "tf.keras.layers.Multiply"}, {"p": "/api_docs/python/tf/keras/layers/PReLU", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.8", "t": "tf.keras.layers.PReLU"}, {"p": "/api_docs/python/tf/keras/layers/Permute", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.8", "t": "tf.keras.layers.Permute"}, {"p": "/api_docs/python/tf/keras/layers/RNN", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "states", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_initial_state", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "reset_states", "set_weights"], "r": "r1.8", "t": "tf.keras.layers.RNN"}, {"p": "/api_docs/python/tf/keras/layers/RepeatVector", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.8", "t": "tf.keras.layers.RepeatVector"}, {"p": "/api_docs/python/tf/keras/layers/Reshape", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.8", "t": "tf.keras.layers.Reshape"}, {"p": "/api_docs/python/tf/keras/layers/SeparableConv1D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.8", "t": "tf.keras.layers.SeparableConv1D"}, {"p": "/api_docs/python/tf/keras/layers/SeparableConv2D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.8", "t": "tf.keras.layers.SeparableConv2D"}, {"p": "/api_docs/python/tf/keras/layers/SimpleRNN", "k": ["activation", "activity_regularizer", "bias_constraint", "bias_initializer", "bias_regularizer", "dropout", "dtype", "graph", "input", "input_mask", "input_shape", "kernel_constraint", "kernel_initializer", "kernel_regularizer", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "recurrent_constraint", "recurrent_dropout", "recurrent_initializer", "recurrent_regularizer", "scope_name", "states", "trainable_variables", "trainable_weights", "units", "updates", "use_bias", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_initial_state", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "reset_states", "set_weights"], "r": "r1.8", "t": "tf.keras.layers.SimpleRNN"}, {"p": "/api_docs/python/tf/keras/layers/SimpleRNNCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.8", "t": "tf.keras.layers.SimpleRNNCell"}, {"p": "/api_docs/python/tf/keras/layers/Softmax", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.8", "t": "tf.keras.layers.Softmax"}, {"p": "/api_docs/python/tf/keras/layers/SpatialDropout1D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.8", "t": "tf.keras.layers.SpatialDropout1D"}, {"p": "/api_docs/python/tf/keras/layers/SpatialDropout2D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.8", "t": "tf.keras.layers.SpatialDropout2D"}, {"p": "/api_docs/python/tf/keras/layers/SpatialDropout3D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.8", "t": "tf.keras.layers.SpatialDropout3D"}, {"p": "/api_docs/python/tf/keras/layers/StackedRNNCells", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.8", "t": "tf.keras.layers.StackedRNNCells"}, {"p": "/api_docs/python/tf/keras/layers/ThresholdedReLU", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.8", "t": "tf.keras.layers.ThresholdedReLU"}, {"p": "/api_docs/python/tf/keras/layers/TimeDistributed", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.8", "t": "tf.keras.layers.TimeDistributed"}, {"p": "/api_docs/python/tf/keras/layers/UpSampling1D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.8", "t": "tf.keras.layers.UpSampling1D"}, {"p": "/api_docs/python/tf/keras/layers/UpSampling2D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.8", "t": "tf.keras.layers.UpSampling2D"}, {"p": "/api_docs/python/tf/keras/layers/UpSampling3D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.8", "t": "tf.keras.layers.UpSampling3D"}, {"p": "/api_docs/python/tf/keras/layers/Wrapper", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.8", "t": "tf.keras.layers.Wrapper"}, {"p": "/api_docs/python/tf/keras/layers/ZeroPadding1D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.8", "t": "tf.keras.layers.ZeroPadding1D"}, {"p": "/api_docs/python/tf/keras/layers/ZeroPadding2D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.8", "t": "tf.keras.layers.ZeroPadding2D"}, {"p": "/api_docs/python/tf/keras/layers/ZeroPadding3D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.8", "t": "tf.keras.layers.ZeroPadding3D"}, {"p": "/api_docs/python/tf/keras/layers/add", "k": [], "r": "r1.8", "t": "tf.keras.layers.add"}, {"p": "/api_docs/python/tf/keras/layers/average", "k": [], "r": "r1.8", "t": "tf.keras.layers.average"}, {"p": "/api_docs/python/tf/keras/layers/concatenate", "k": [], "r": "r1.8", "t": "tf.keras.layers.concatenate"}, {"p": "/api_docs/python/tf/keras/layers/dot", "k": [], "r": "r1.8", "t": "tf.keras.layers.dot"}, {"p": "/api_docs/python/tf/keras/layers/maximum", "k": [], "r": "r1.8", "t": "tf.keras.layers.maximum"}, {"p": "/api_docs/python/tf/keras/layers/multiply", "k": [], "r": "r1.8", "t": "tf.keras.layers.multiply"}, {"p": "/api_docs/python/tf/keras/losses", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.keras.losses"}, {"p": "/api_docs/python/tf/keras/losses/binary_crossentropy", "k": [], "r": "r1.8", "t": "tf.keras.losses.binary_crossentropy"}, {"p": "/api_docs/python/tf/keras/losses/categorical_crossentropy", "k": [], "r": "r1.8", "t": "tf.keras.losses.categorical_crossentropy"}, {"p": "/api_docs/python/tf/keras/losses/categorical_hinge", "k": [], "r": "r1.8", "t": "tf.keras.losses.categorical_hinge"}, {"p": "/api_docs/python/tf/keras/losses/cosine_proximity", "k": [], "r": "r1.8", "t": "tf.keras.losses.cosine_proximity"}, {"p": "/api_docs/python/tf/keras/losses/deserialize", "k": [], "r": "r1.8", "t": "tf.keras.losses.deserialize"}, {"p": "/api_docs/python/tf/keras/losses/get", "k": [], "r": "r1.8", "t": "tf.keras.losses.get"}, {"p": "/api_docs/python/tf/keras/losses/hinge", "k": [], "r": "r1.8", "t": "tf.keras.losses.hinge"}, {"p": "/api_docs/python/tf/keras/losses/kullback_leibler_divergence", "k": [], "r": "r1.8", "t": "tf.keras.losses.kullback_leibler_divergence"}, {"p": "/api_docs/python/tf/keras/losses/logcosh", "k": [], "r": "r1.8", "t": "tf.keras.losses.logcosh"}, {"p": "/api_docs/python/tf/keras/losses/mean_absolute_error", "k": [], "r": "r1.8", "t": "tf.keras.losses.mean_absolute_error"}, {"p": "/api_docs/python/tf/keras/losses/mean_absolute_percentage_error", "k": [], "r": "r1.8", "t": "tf.keras.losses.mean_absolute_percentage_error"}, {"p": "/api_docs/python/tf/keras/losses/mean_squared_error", "k": [], "r": "r1.8", "t": "tf.keras.losses.mean_squared_error"}, {"p": "/api_docs/python/tf/keras/losses/mean_squared_logarithmic_error", "k": [], "r": "r1.8", "t": "tf.keras.losses.mean_squared_logarithmic_error"}, {"p": "/api_docs/python/tf/keras/losses/poisson", "k": [], "r": "r1.8", "t": "tf.keras.losses.poisson"}, {"p": "/api_docs/python/tf/keras/losses/serialize", "k": [], "r": "r1.8", "t": "tf.keras.losses.serialize"}, {"p": "/api_docs/python/tf/keras/losses/sparse_categorical_crossentropy", "k": [], "r": "r1.8", "t": "tf.keras.losses.sparse_categorical_crossentropy"}, {"p": "/api_docs/python/tf/keras/losses/squared_hinge", "k": [], "r": "r1.8", "t": "tf.keras.losses.squared_hinge"}, {"p": "/api_docs/python/tf/keras/metrics", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.keras.metrics"}, {"p": "/api_docs/python/tf/keras/metrics/binary_accuracy", "k": [], "r": "r1.8", "t": "tf.keras.metrics.binary_accuracy"}, {"p": "/api_docs/python/tf/keras/metrics/categorical_accuracy", "k": [], "r": "r1.8", "t": "tf.keras.metrics.categorical_accuracy"}, {"p": "/api_docs/python/tf/keras/metrics/deserialize", "k": [], "r": "r1.8", "t": "tf.keras.metrics.deserialize"}, {"p": "/api_docs/python/tf/keras/metrics/get", "k": [], "r": "r1.8", "t": "tf.keras.metrics.get"}, {"p": "/api_docs/python/tf/keras/metrics/serialize", "k": [], "r": "r1.8", "t": "tf.keras.metrics.serialize"}, {"p": "/api_docs/python/tf/keras/metrics/sparse_top_k_categorical_accuracy", "k": [], "r": "r1.8", "t": "tf.keras.metrics.sparse_top_k_categorical_accuracy"}, {"p": "/api_docs/python/tf/keras/metrics/top_k_categorical_accuracy", "k": [], "r": "r1.8", "t": "tf.keras.metrics.top_k_categorical_accuracy"}, {"p": "/api_docs/python/tf/keras/models", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.keras.models"}, {"p": "/api_docs/python/tf/keras/models/load_model", "k": [], "r": "r1.8", "t": "tf.keras.models.load_model"}, {"p": "/api_docs/python/tf/keras/models/model_from_config", "k": [], "r": "r1.8", "t": "tf.keras.models.model_from_config"}, {"p": "/api_docs/python/tf/keras/models/model_from_json", "k": [], "r": "r1.8", "t": "tf.keras.models.model_from_json"}, {"p": "/api_docs/python/tf/keras/models/model_from_yaml", "k": [], "r": "r1.8", "t": "tf.keras.models.model_from_yaml"}, {"p": "/api_docs/python/tf/keras/models/save_model", "k": [], "r": "r1.8", "t": "tf.keras.models.save_model"}, {"p": "/api_docs/python/tf/keras/optimizers", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.keras.optimizers"}, {"p": "/api_docs/python/tf/keras/optimizers/Adadelta", "k": ["__init__", "from_config", "get_config", "get_gradients", "get_updates", "get_weights", "set_weights"], "r": "r1.8", "t": "tf.keras.optimizers.Adadelta"}, {"p": "/api_docs/python/tf/keras/optimizers/Adagrad", "k": ["__init__", "from_config", "get_config", "get_gradients", "get_updates", "get_weights", "set_weights"], "r": "r1.8", "t": "tf.keras.optimizers.Adagrad"}, {"p": "/api_docs/python/tf/keras/optimizers/Adam", "k": ["__init__", "from_config", "get_config", "get_gradients", "get_updates", "get_weights", "set_weights"], "r": "r1.8", "t": "tf.keras.optimizers.Adam"}, {"p": "/api_docs/python/tf/keras/optimizers/Adamax", "k": ["__init__", "from_config", "get_config", "get_gradients", "get_updates", "get_weights", "set_weights"], "r": "r1.8", "t": "tf.keras.optimizers.Adamax"}, {"p": "/api_docs/python/tf/keras/optimizers/Nadam", "k": ["__init__", "from_config", "get_config", "get_gradients", "get_updates", "get_weights", "set_weights"], "r": "r1.8", "t": "tf.keras.optimizers.Nadam"}, {"p": "/api_docs/python/tf/keras/optimizers/Optimizer", "k": ["__init__", "from_config", "get_config", "get_gradients", "get_updates", "get_weights", "set_weights"], "r": "r1.8", "t": "tf.keras.optimizers.Optimizer"}, {"p": "/api_docs/python/tf/keras/optimizers/RMSprop", "k": ["__init__", "from_config", "get_config", "get_gradients", "get_updates", "get_weights", "set_weights"], "r": "r1.8", "t": "tf.keras.optimizers.RMSprop"}, {"p": "/api_docs/python/tf/keras/optimizers/SGD", "k": ["__init__", "from_config", "get_config", "get_gradients", "get_updates", "get_weights", "set_weights"], "r": "r1.8", "t": "tf.keras.optimizers.SGD"}, {"p": "/api_docs/python/tf/keras/optimizers/deserialize", "k": [], "r": "r1.8", "t": "tf.keras.optimizers.deserialize"}, {"p": "/api_docs/python/tf/keras/optimizers/get", "k": [], "r": "r1.8", "t": "tf.keras.optimizers.get"}, {"p": "/api_docs/python/tf/keras/optimizers/serialize", "k": [], "r": "r1.8", "t": "tf.keras.optimizers.serialize"}, {"p": "/api_docs/python/tf/keras/preprocessing", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.keras.preprocessing"}, {"p": "/api_docs/python/tf/keras/preprocessing/image", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.keras.preprocessing.image"}, {"p": "/api_docs/python/tf/keras/preprocessing/image/DirectoryIterator", "k": ["__getitem__", "__init__", "__iter__", "__len__", "__next__", "next", "on_epoch_end", "reset"], "r": "r1.8", "t": "tf.keras.preprocessing.image.DirectoryIterator"}, {"p": "/api_docs/python/tf/keras/preprocessing/image/ImageDataGenerator", "k": ["__init__", "fit", "flow", "flow_from_directory", "random_transform", "standardize"], "r": "r1.8", "t": "tf.keras.preprocessing.image.ImageDataGenerator"}, {"p": "/api_docs/python/tf/keras/preprocessing/image/Iterator", "k": ["__getitem__", "__init__", "__iter__", "__len__", "__next__", "on_epoch_end", "reset"], "r": "r1.8", "t": "tf.keras.preprocessing.image.Iterator"}, {"p": "/api_docs/python/tf/keras/preprocessing/image/NumpyArrayIterator", "k": ["__getitem__", "__init__", "__iter__", "__len__", "__next__", "next", "on_epoch_end", "reset"], "r": "r1.8", "t": "tf.keras.preprocessing.image.NumpyArrayIterator"}, {"p": "/api_docs/python/tf/keras/preprocessing/image/apply_transform", "k": [], "r": "r1.8", "t": "tf.keras.preprocessing.image.apply_transform"}, {"p": "/api_docs/python/tf/keras/preprocessing/image/array_to_img", "k": [], "r": "r1.8", "t": "tf.keras.preprocessing.image.array_to_img"}, {"p": "/api_docs/python/tf/keras/preprocessing/image/flip_axis", "k": [], "r": "r1.8", "t": "tf.keras.preprocessing.image.flip_axis"}, {"p": "/api_docs/python/tf/keras/preprocessing/image/img_to_array", "k": [], "r": "r1.8", "t": "tf.keras.preprocessing.image.img_to_array"}, {"p": "/api_docs/python/tf/keras/preprocessing/image/load_img", "k": [], "r": "r1.8", "t": "tf.keras.preprocessing.image.load_img"}, {"p": "/api_docs/python/tf/keras/preprocessing/image/random_brightness", "k": [], "r": "r1.8", "t": "tf.keras.preprocessing.image.random_brightness"}, {"p": "/api_docs/python/tf/keras/preprocessing/image/random_channel_shift", "k": [], "r": "r1.8", "t": "tf.keras.preprocessing.image.random_channel_shift"}, {"p": "/api_docs/python/tf/keras/preprocessing/image/random_rotation", "k": [], "r": "r1.8", "t": "tf.keras.preprocessing.image.random_rotation"}, {"p": "/api_docs/python/tf/keras/preprocessing/image/random_shear", "k": [], "r": "r1.8", "t": "tf.keras.preprocessing.image.random_shear"}, {"p": "/api_docs/python/tf/keras/preprocessing/image/random_shift", "k": [], "r": "r1.8", "t": "tf.keras.preprocessing.image.random_shift"}, {"p": "/api_docs/python/tf/keras/preprocessing/image/random_zoom", "k": [], "r": "r1.8", "t": "tf.keras.preprocessing.image.random_zoom"}, {"p": "/api_docs/python/tf/keras/preprocessing/sequence", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.keras.preprocessing.sequence"}, {"p": "/api_docs/python/tf/keras/preprocessing/sequence/TimeseriesGenerator", "k": ["__getitem__", "__init__", "__iter__", "__len__", "on_epoch_end"], "r": "r1.8", "t": "tf.keras.preprocessing.sequence.TimeseriesGenerator"}, {"p": "/api_docs/python/tf/keras/preprocessing/sequence/make_sampling_table", "k": [], "r": "r1.8", "t": "tf.keras.preprocessing.sequence.make_sampling_table"}, {"p": "/api_docs/python/tf/keras/preprocessing/sequence/pad_sequences", "k": [], "r": "r1.8", "t": "tf.keras.preprocessing.sequence.pad_sequences"}, {"p": "/api_docs/python/tf/keras/preprocessing/sequence/skipgrams", "k": [], "r": "r1.8", "t": "tf.keras.preprocessing.sequence.skipgrams"}, {"p": "/api_docs/python/tf/keras/preprocessing/text", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.keras.preprocessing.text"}, {"p": "/api_docs/python/tf/keras/preprocessing/text/Tokenizer", "k": ["__init__", "fit_on_sequences", "fit_on_texts", "sequences_to_matrix", "texts_to_matrix", "texts_to_sequences", "texts_to_sequences_generator"], "r": "r1.8", "t": "tf.keras.preprocessing.text.Tokenizer"}, {"p": "/api_docs/python/tf/keras/preprocessing/text/hashing_trick", "k": [], "r": "r1.8", "t": "tf.keras.preprocessing.text.hashing_trick"}, {"p": "/api_docs/python/tf/keras/preprocessing/text/one_hot", "k": [], "r": "r1.8", "t": "tf.keras.preprocessing.text.one_hot"}, {"p": "/api_docs/python/tf/keras/preprocessing/text/text_to_word_sequence", "k": [], "r": "r1.8", "t": "tf.keras.preprocessing.text.text_to_word_sequence"}, {"p": "/api_docs/python/tf/keras/regularizers", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.keras.regularizers"}, {"p": "/api_docs/python/tf/keras/regularizers/L1L2", "k": ["__call__", "__init__", "from_config", "get_config"], "r": "r1.8", "t": "tf.keras.regularizers.L1L2"}, {"p": "/api_docs/python/tf/keras/regularizers/Regularizer", "k": ["__call__", "from_config"], "r": "r1.8", "t": "tf.keras.regularizers.Regularizer"}, {"p": "/api_docs/python/tf/keras/regularizers/deserialize", "k": [], "r": "r1.8", "t": "tf.keras.regularizers.deserialize"}, {"p": "/api_docs/python/tf/keras/regularizers/get", "k": [], "r": "r1.8", "t": "tf.keras.regularizers.get"}, {"p": "/api_docs/python/tf/keras/regularizers/l1", "k": [], "r": "r1.8", "t": "tf.keras.regularizers.l1"}, {"p": "/api_docs/python/tf/keras/regularizers/l1_l2", "k": [], "r": "r1.8", "t": "tf.keras.regularizers.l1_l2"}, {"p": "/api_docs/python/tf/keras/regularizers/l2", "k": [], "r": "r1.8", "t": "tf.keras.regularizers.l2"}, {"p": "/api_docs/python/tf/keras/regularizers/serialize", "k": [], "r": "r1.8", "t": "tf.keras.regularizers.serialize"}, {"p": "/api_docs/python/tf/keras/utils", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.keras.utils"}, {"p": "/api_docs/python/tf/keras/utils/CustomObjectScope", "k": ["__enter__", "__exit__", "__init__"], "r": "r1.8", "t": "tf.keras.utils.CustomObjectScope"}, {"p": "/api_docs/python/tf/keras/utils/GeneratorEnqueuer", "k": ["__init__", "get", "is_running", "start", "stop"], "r": "r1.8", "t": "tf.keras.utils.GeneratorEnqueuer"}, {"p": "/api_docs/python/tf/keras/utils/HDF5Matrix", "k": ["dtype", "ndim", "shape", "size", "__getitem__", "__init__", "__len__", "refs"], "r": "r1.8", "t": "tf.keras.utils.HDF5Matrix"}, {"p": "/api_docs/python/tf/keras/utils/Progbar", "k": ["__init__", "add", "update"], "r": "r1.8", "t": "tf.keras.utils.Progbar"}, {"p": "/api_docs/python/tf/keras/utils/Sequence", "k": ["__getitem__", "__iter__", "__len__", "on_epoch_end"], "r": "r1.8", "t": "tf.keras.utils.Sequence"}, {"p": "/api_docs/python/tf/keras/utils/SequenceEnqueuer", "k": ["get", "is_running", "start", "stop"], "r": "r1.8", "t": "tf.keras.utils.SequenceEnqueuer"}, {"p": "/api_docs/python/tf/keras/utils/convert_all_kernels_in_model", "k": [], "r": "r1.8", "t": "tf.keras.utils.convert_all_kernels_in_model"}, {"p": "/api_docs/python/tf/keras/utils/custom_object_scope", "k": [], "r": "r1.8", "t": "tf.keras.utils.custom_object_scope"}, {"p": "/api_docs/python/tf/keras/utils/deserialize_keras_object", "k": [], "r": "r1.8", "t": "tf.keras.utils.deserialize_keras_object"}, {"p": "/api_docs/python/tf/keras/utils/get_custom_objects", "k": [], "r": "r1.8", "t": "tf.keras.utils.get_custom_objects"}, {"p": "/api_docs/python/tf/keras/utils/get_file", "k": [], "r": "r1.8", "t": "tf.keras.utils.get_file"}, {"p": "/api_docs/python/tf/keras/utils/multi_gpu_model", "k": [], "r": "r1.8", "t": "tf.keras.utils.multi_gpu_model"}, {"p": "/api_docs/python/tf/keras/utils/normalize", "k": [], "r": "r1.8", "t": "tf.keras.utils.normalize"}, {"p": "/api_docs/python/tf/keras/utils/plot_model", "k": [], "r": "r1.8", "t": "tf.keras.utils.plot_model"}, {"p": "/api_docs/python/tf/keras/utils/serialize_keras_object", "k": [], "r": "r1.8", "t": "tf.keras.utils.serialize_keras_object"}, {"p": "/api_docs/python/tf/keras/utils/to_categorical", "k": [], "r": "r1.8", "t": "tf.keras.utils.to_categorical"}, {"p": "/api_docs/python/tf/keras/wrappers", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.keras.wrappers"}, {"p": "/api_docs/python/tf/keras/wrappers/scikit_learn", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.keras.wrappers.scikit_learn"}, {"p": "/api_docs/python/tf/keras/wrappers/scikit_learn/KerasClassifier", "k": ["__init__", "check_params", "filter_sk_params", "fit", "get_params", "predict", "predict_proba", "score", "set_params"], "r": "r1.8", "t": "tf.keras.wrappers.scikit_learn.KerasClassifier"}, {"p": "/api_docs/python/tf/keras/wrappers/scikit_learn/KerasRegressor", "k": ["__init__", "check_params", "filter_sk_params", "fit", "get_params", "predict", "score", "set_params"], "r": "r1.8", "t": "tf.keras.wrappers.scikit_learn.KerasRegressor"}, {"p": "/api_docs/python/tf/layers", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.layers"}, {"p": "/api_docs/python/tf/layers/AveragePooling1D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "r1.8", "t": "tf.layers.AveragePooling1D"}, {"p": "/api_docs/python/tf/layers/AveragePooling2D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "r1.8", "t": "tf.layers.AveragePooling2D"}, {"p": "/api_docs/python/tf/layers/AveragePooling3D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "r1.8", "t": "tf.layers.AveragePooling3D"}, {"p": "/api_docs/python/tf/layers/BatchNormalization", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "r1.8", "t": "tf.layers.BatchNormalization"}, {"p": "/api_docs/python/tf/layers/Conv1D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "r1.8", "t": "tf.layers.Conv1D"}, {"p": "/api_docs/python/tf/layers/Conv2D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "r1.8", "t": "tf.layers.Conv2D"}, {"p": "/api_docs/python/tf/layers/Conv2DTranspose", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "r1.8", "t": "tf.layers.Conv2DTranspose"}, {"p": "/api_docs/python/tf/layers/Conv3D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "r1.8", "t": "tf.layers.Conv3D"}, {"p": "/api_docs/python/tf/layers/Conv3DTranspose", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "r1.8", "t": "tf.layers.Conv3DTranspose"}, {"p": "/api_docs/python/tf/layers/Dense", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "r1.8", "t": "tf.layers.Dense"}, {"p": "/api_docs/python/tf/layers/Dropout", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "r1.8", "t": "tf.layers.Dropout"}, {"p": "/api_docs/python/tf/layers/Flatten", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "r1.8", "t": "tf.layers.Flatten"}, {"p": "/api_docs/python/tf/layers/InputSpec", "k": ["__init__"], "r": "r1.8", "t": "tf.layers.InputSpec"}, {"p": "/api_docs/python/tf/layers/Layer", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "r1.8", "t": "tf.layers.Layer"}, {"p": "/api_docs/python/tf/layers/MaxPooling1D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "r1.8", "t": "tf.layers.MaxPooling1D"}, {"p": "/api_docs/python/tf/layers/MaxPooling2D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "r1.8", "t": "tf.layers.MaxPooling2D"}, {"p": "/api_docs/python/tf/layers/MaxPooling3D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "r1.8", "t": "tf.layers.MaxPooling3D"}, {"p": "/api_docs/python/tf/layers/SeparableConv1D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "r1.8", "t": "tf.layers.SeparableConv1D"}, {"p": "/api_docs/python/tf/layers/SeparableConv2D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "r1.8", "t": "tf.layers.SeparableConv2D"}, {"p": "/api_docs/python/tf/layers/average_pooling1d", "k": [], "r": "r1.8", "t": "tf.layers.average_pooling1d"}, {"p": "/api_docs/python/tf/layers/average_pooling2d", "k": [], "r": "r1.8", "t": "tf.layers.average_pooling2d"}, {"p": "/api_docs/python/tf/layers/average_pooling3d", "k": [], "r": "r1.8", "t": "tf.layers.average_pooling3d"}, {"p": "/api_docs/python/tf/layers/batch_normalization", "k": [], "r": "r1.8", "t": "tf.layers.batch_normalization"}, {"p": "/api_docs/python/tf/layers/conv1d", "k": [], "r": "r1.8", "t": "tf.layers.conv1d"}, {"p": "/api_docs/python/tf/layers/conv2d", "k": [], "r": "r1.8", "t": "tf.layers.conv2d"}, {"p": "/api_docs/python/tf/layers/conv2d_transpose", "k": [], "r": "r1.8", "t": "tf.layers.conv2d_transpose"}, {"p": "/api_docs/python/tf/layers/conv3d", "k": [], "r": "r1.8", "t": "tf.layers.conv3d"}, {"p": "/api_docs/python/tf/layers/conv3d_transpose", "k": [], "r": "r1.8", "t": "tf.layers.conv3d_transpose"}, {"p": "/api_docs/python/tf/layers/dense", "k": [], "r": "r1.8", "t": "tf.layers.dense"}, {"p": "/api_docs/python/tf/layers/dropout", "k": [], "r": "r1.8", "t": "tf.layers.dropout"}, {"p": "/api_docs/python/tf/layers/flatten", "k": [], "r": "r1.8", "t": "tf.layers.flatten"}, {"p": "/api_docs/python/tf/layers/max_pooling1d", "k": [], "r": "r1.8", "t": "tf.layers.max_pooling1d"}, {"p": "/api_docs/python/tf/layers/max_pooling2d", "k": [], "r": "r1.8", "t": "tf.layers.max_pooling2d"}, {"p": "/api_docs/python/tf/layers/max_pooling3d", "k": [], "r": "r1.8", "t": "tf.layers.max_pooling3d"}, {"p": "/api_docs/python/tf/layers/separable_conv1d", "k": [], "r": "r1.8", "t": "tf.layers.separable_conv1d"}, {"p": "/api_docs/python/tf/layers/separable_conv2d", "k": [], "r": "r1.8", "t": "tf.layers.separable_conv2d"}, {"p": "/api_docs/python/tf/lbeta", "k": [], "r": "r1.8", "t": "tf.lbeta"}, {"p": "/api_docs/python/tf/less", "k": [], "r": "r1.8", "t": "tf.less"}, {"p": "/api_docs/python/tf/less_equal", "k": [], "r": "r1.8", "t": "tf.less_equal"}, {"p": "/api_docs/python/tf/lgamma", "k": [], "r": "r1.8", "t": "tf.lgamma"}, {"p": "/api_docs/python/tf/lin_space", "k": [], "r": "r1.8", "t": "tf.lin_space"}, {"p": "/api_docs/python/tf/linalg", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.linalg"}, {"p": "/api_docs/python/tf/linalg/LinearOperator", "k": ["batch_shape", "domain_dimension", "dtype", "graph_parents", "is_non_singular", "is_positive_definite", "is_self_adjoint", "is_square", "name", "range_dimension", "shape", "tensor_rank", "__init__", "add_to_tensor", "assert_non_singular", "assert_positive_definite", "assert_self_adjoint", "batch_shape_tensor", "determinant", "diag_part", "domain_dimension_tensor", "log_abs_determinant", "matmul", "matvec", "range_dimension_tensor", "shape_tensor", "solve", "solvevec", "tensor_rank_tensor", "to_dense", "trace"], "r": "r1.8", "t": "tf.linalg.LinearOperator"}, {"p": "/api_docs/python/tf/linalg/LinearOperatorComposition", "k": ["batch_shape", "domain_dimension", "dtype", "graph_parents", "is_non_singular", "is_positive_definite", "is_self_adjoint", "is_square", "name", "operators", "range_dimension", "shape", "tensor_rank", "__init__", "add_to_tensor", "assert_non_singular", "assert_positive_definite", "assert_self_adjoint", "batch_shape_tensor", "determinant", "diag_part", "domain_dimension_tensor", "log_abs_determinant", "matmul", "matvec", "range_dimension_tensor", "shape_tensor", "solve", "solvevec", "tensor_rank_tensor", "to_dense", "trace"], "r": "r1.8", "t": "tf.linalg.LinearOperatorComposition"}, {"p": "/api_docs/python/tf/linalg/LinearOperatorDiag", "k": ["batch_shape", "diag", "domain_dimension", "dtype", "graph_parents", "is_non_singular", "is_positive_definite", "is_self_adjoint", "is_square", "name", "range_dimension", "shape", "tensor_rank", "__init__", "add_to_tensor", "assert_non_singular", "assert_positive_definite", "assert_self_adjoint", "batch_shape_tensor", "determinant", "diag_part", "domain_dimension_tensor", "log_abs_determinant", "matmul", "matvec", "range_dimension_tensor", "shape_tensor", "solve", "solvevec", "tensor_rank_tensor", "to_dense", "trace"], "r": "r1.8", "t": "tf.linalg.LinearOperatorDiag"}, {"p": "/api_docs/python/tf/linalg/LinearOperatorFullMatrix", "k": ["batch_shape", "domain_dimension", "dtype", "graph_parents", "is_non_singular", "is_positive_definite", "is_self_adjoint", "is_square", "name", "range_dimension", "shape", "tensor_rank", "__init__", "add_to_tensor", "assert_non_singular", "assert_positive_definite", "assert_self_adjoint", "batch_shape_tensor", "determinant", "diag_part", "domain_dimension_tensor", "log_abs_determinant", "matmul", "matvec", "range_dimension_tensor", "shape_tensor", "solve", "solvevec", "tensor_rank_tensor", "to_dense", "trace"], "r": "r1.8", "t": "tf.linalg.LinearOperatorFullMatrix"}, {"p": "/api_docs/python/tf/linalg/LinearOperatorIdentity", "k": ["batch_shape", "domain_dimension", "dtype", "graph_parents", "is_non_singular", "is_positive_definite", "is_self_adjoint", "is_square", "name", "range_dimension", "shape", "tensor_rank", "__init__", "add_to_tensor", "assert_non_singular", "assert_positive_definite", "assert_self_adjoint", "batch_shape_tensor", "determinant", "diag_part", "domain_dimension_tensor", "log_abs_determinant", "matmul", "matvec", "range_dimension_tensor", "shape_tensor", "solve", "solvevec", "tensor_rank_tensor", "to_dense", "trace"], "r": "r1.8", "t": "tf.linalg.LinearOperatorIdentity"}, {"p": "/api_docs/python/tf/linalg/LinearOperatorLowRankUpdate", "k": ["base_operator", "batch_shape", "diag_operator", "diag_update", "domain_dimension", "dtype", "graph_parents", "is_diag_update_positive", "is_non_singular", "is_positive_definite", "is_self_adjoint", "is_square", "name", "range_dimension", "shape", "tensor_rank", "u", "v", "__init__", "add_to_tensor", "assert_non_singular", "assert_positive_definite", "assert_self_adjoint", "batch_shape_tensor", "determinant", "diag_part", "domain_dimension_tensor", "log_abs_determinant", "matmul", "matvec", "range_dimension_tensor", "shape_tensor", "solve", "solvevec", "tensor_rank_tensor", "to_dense", "trace"], "r": "r1.8", "t": "tf.linalg.LinearOperatorLowRankUpdate"}, {"p": "/api_docs/python/tf/linalg/LinearOperatorLowerTriangular", "k": ["batch_shape", "domain_dimension", "dtype", "graph_parents", "is_non_singular", "is_positive_definite", "is_self_adjoint", "is_square", "name", "range_dimension", "shape", "tensor_rank", "__init__", "add_to_tensor", "assert_non_singular", "assert_positive_definite", "assert_self_adjoint", "batch_shape_tensor", "determinant", "diag_part", "domain_dimension_tensor", "log_abs_determinant", "matmul", "matvec", "range_dimension_tensor", "shape_tensor", "solve", "solvevec", "tensor_rank_tensor", "to_dense", "trace"], "r": "r1.8", "t": "tf.linalg.LinearOperatorLowerTriangular"}, {"p": "/api_docs/python/tf/linalg/LinearOperatorScaledIdentity", "k": ["batch_shape", "domain_dimension", "dtype", "graph_parents", "is_non_singular", "is_positive_definite", "is_self_adjoint", "is_square", "multiplier", "name", "range_dimension", "shape", "tensor_rank", "__init__", "add_to_tensor", "assert_non_singular", "assert_positive_definite", "assert_self_adjoint", "batch_shape_tensor", "determinant", "diag_part", "domain_dimension_tensor", "log_abs_determinant", "matmul", "matvec", "range_dimension_tensor", "shape_tensor", "solve", "solvevec", "tensor_rank_tensor", "to_dense", "trace"], "r": "r1.8", "t": "tf.linalg.LinearOperatorScaledIdentity"}, {"p": "/api_docs/python/tf/linalg/adjoint", "k": [], "r": "r1.8", "t": "tf.linalg.adjoint"}, {"p": "/api_docs/python/tf/linalg/expm", "k": [], "r": "r1.8", "t": "tf.linalg.expm"}, {"p": "/api_docs/python/tf/linalg/logdet", "k": [], "r": "r1.8", "t": "tf.linalg.logdet"}, {"p": "/api_docs/python/tf/linalg/logm", "k": [], "r": "r1.8", "t": "tf.linalg.logm"}, {"p": "/api_docs/python/tf/linalg/slogdet", "k": [], "r": "r1.8", "t": "tf.linalg.slogdet"}, {"p": "/api_docs/python/tf/load_file_system_library", "k": [], "r": "r1.8", "t": "tf.load_file_system_library"}, {"p": "/api_docs/python/tf/load_op_library", "k": [], "r": "r1.8", "t": "tf.load_op_library"}, {"p": "/api_docs/python/tf/local_variables", "k": [], "r": "r1.8", "t": "tf.local_variables"}, {"p": "/api_docs/python/tf/local_variables_initializer", "k": [], "r": "r1.8", "t": "tf.local_variables_initializer"}, {"p": "/api_docs/python/tf/log", "k": [], "r": "r1.8", "t": "tf.log"}, {"p": "/api_docs/python/tf/log1p", "k": [], "r": "r1.8", "t": "tf.log1p"}, {"p": "/api_docs/python/tf/log_sigmoid", "k": [], "r": "r1.8", "t": "tf.log_sigmoid"}, {"p": "/api_docs/python/tf/logging", "k": ["DEBUG", "ERROR", "FATAL", "INFO", "WARN", "__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.logging"}, {"p": "/api_docs/python/tf/logging/TaskLevelStatusMessage", "k": [], "r": "r1.8", "t": "tf.logging.TaskLevelStatusMessage"}, {"p": "/api_docs/python/tf/logging/debug", "k": [], "r": "r1.8", "t": "tf.logging.debug"}, {"p": "/api_docs/python/tf/logging/error", "k": [], "r": "r1.8", "t": "tf.logging.error"}, {"p": "/api_docs/python/tf/logging/fatal", "k": [], "r": "r1.8", "t": "tf.logging.fatal"}, {"p": "/api_docs/python/tf/logging/flush", "k": [], "r": "r1.8", "t": "tf.logging.flush"}, {"p": "/api_docs/python/tf/logging/get_verbosity", "k": [], "r": "r1.8", "t": "tf.logging.get_verbosity"}, {"p": "/api_docs/python/tf/logging/info", "k": [], "r": "r1.8", "t": "tf.logging.info"}, {"p": "/api_docs/python/tf/logging/log", "k": [], "r": "r1.8", "t": "tf.logging.log"}, {"p": "/api_docs/python/tf/logging/log_every_n", "k": [], "r": "r1.8", "t": "tf.logging.log_every_n"}, {"p": "/api_docs/python/tf/logging/log_first_n", "k": [], "r": "r1.8", "t": "tf.logging.log_first_n"}, {"p": "/api_docs/python/tf/logging/log_if", "k": [], "r": "r1.8", "t": "tf.logging.log_if"}, {"p": "/api_docs/python/tf/logging/set_verbosity", "k": [], "r": "r1.8", "t": "tf.logging.set_verbosity"}, {"p": "/api_docs/python/tf/logging/vlog", "k": [], "r": "r1.8", "t": "tf.logging.vlog"}, {"p": "/api_docs/python/tf/logging/warn", "k": [], "r": "r1.8", "t": "tf.logging.warn"}, {"p": "/api_docs/python/tf/logging/warning", "k": [], "r": "r1.8", "t": "tf.logging.warning"}, {"p": "/api_docs/python/tf/logical_and", "k": [], "r": "r1.8", "t": "tf.logical_and"}, {"p": "/api_docs/python/tf/logical_not", "k": [], "r": "r1.8", "t": "tf.logical_not"}, {"p": "/api_docs/python/tf/logical_or", "k": [], "r": "r1.8", "t": "tf.logical_or"}, {"p": "/api_docs/python/tf/logical_xor", "k": [], "r": "r1.8", "t": "tf.logical_xor"}, {"p": "/api_docs/python/tf/losses", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.losses"}, {"p": "/api_docs/python/tf/losses/Reduction", "k": ["all", "validate", "MEAN", "NONE", "SUM", "SUM_BY_NONZERO_WEIGHTS", "SUM_OVER_BATCH_SIZE", "SUM_OVER_NONZERO_WEIGHTS"], "r": "r1.8", "t": "tf.losses.Reduction"}, {"p": "/api_docs/python/tf/losses/absolute_difference", "k": [], "r": "r1.8", "t": "tf.losses.absolute_difference"}, {"p": "/api_docs/python/tf/losses/add_loss", "k": [], "r": "r1.8", "t": "tf.losses.add_loss"}, {"p": "/api_docs/python/tf/losses/compute_weighted_loss", "k": [], "r": "r1.8", "t": "tf.losses.compute_weighted_loss"}, {"p": "/api_docs/python/tf/losses/cosine_distance", "k": [], "r": "r1.8", "t": "tf.losses.cosine_distance"}, {"p": "/api_docs/python/tf/losses/get_losses", "k": [], "r": "r1.8", "t": "tf.losses.get_losses"}, {"p": "/api_docs/python/tf/losses/get_regularization_loss", "k": [], "r": "r1.8", "t": "tf.losses.get_regularization_loss"}, {"p": "/api_docs/python/tf/losses/get_regularization_losses", "k": [], "r": "r1.8", "t": "tf.losses.get_regularization_losses"}, {"p": "/api_docs/python/tf/losses/get_total_loss", "k": [], "r": "r1.8", "t": "tf.losses.get_total_loss"}, {"p": "/api_docs/python/tf/losses/hinge_loss", "k": [], "r": "r1.8", "t": "tf.losses.hinge_loss"}, {"p": "/api_docs/python/tf/losses/huber_loss", "k": [], "r": "r1.8", "t": "tf.losses.huber_loss"}, {"p": "/api_docs/python/tf/losses/log_loss", "k": [], "r": "r1.8", "t": "tf.losses.log_loss"}, {"p": "/api_docs/python/tf/losses/mean_pairwise_squared_error", "k": [], "r": "r1.8", "t": "tf.losses.mean_pairwise_squared_error"}, {"p": "/api_docs/python/tf/losses/mean_squared_error", "k": [], "r": "r1.8", "t": "tf.losses.mean_squared_error"}, {"p": "/api_docs/python/tf/losses/sigmoid_cross_entropy", "k": [], "r": "r1.8", "t": "tf.losses.sigmoid_cross_entropy"}, {"p": "/api_docs/python/tf/losses/softmax_cross_entropy", "k": [], "r": "r1.8", "t": "tf.losses.softmax_cross_entropy"}, {"p": "/api_docs/python/tf/losses/sparse_softmax_cross_entropy", "k": [], "r": "r1.8", "t": "tf.losses.sparse_softmax_cross_entropy"}, {"p": "/api_docs/python/tf/make_ndarray", "k": [], "r": "r1.8", "t": "tf.make_ndarray"}, {"p": "/api_docs/python/tf/make_template", "k": [], "r": "r1.8", "t": "tf.make_template"}, {"p": "/api_docs/python/tf/make_tensor_proto", "k": [], "r": "r1.8", "t": "tf.make_tensor_proto"}, {"p": "/api_docs/python/tf/manip", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.manip"}, {"p": "/api_docs/python/tf/manip/roll", "k": [], "r": "r1.8", "t": "tf.manip.roll"}, {"p": "/api_docs/python/tf/map_fn", "k": [], "r": "r1.8", "t": "tf.map_fn"}, {"p": "/api_docs/python/tf/matching_files", "k": [], "r": "r1.8", "t": "tf.matching_files"}, {"p": "/api_docs/python/tf/math", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.math"}, {"p": "/api_docs/python/tf/math/polyval", "k": [], "r": "r1.8", "t": "tf.math.polyval"}, {"p": "/api_docs/python/tf/matmul", "k": [], "r": "r1.8", "t": "tf.matmul"}, {"p": "/api_docs/python/tf/matrix_band_part", "k": [], "r": "r1.8", "t": "tf.matrix_band_part"}, {"p": "/api_docs/python/tf/matrix_determinant", "k": [], "r": "r1.8", "t": "tf.matrix_determinant"}, {"p": "/api_docs/python/tf/matrix_diag", "k": [], "r": "r1.8", "t": "tf.matrix_diag"}, {"p": "/api_docs/python/tf/matrix_diag_part", "k": [], "r": "r1.8", "t": "tf.matrix_diag_part"}, {"p": "/api_docs/python/tf/matrix_inverse", "k": [], "r": "r1.8", "t": "tf.matrix_inverse"}, {"p": "/api_docs/python/tf/matrix_set_diag", "k": [], "r": "r1.8", "t": "tf.matrix_set_diag"}, {"p": "/api_docs/python/tf/matrix_solve", "k": [], "r": "r1.8", "t": "tf.matrix_solve"}, {"p": "/api_docs/python/tf/matrix_solve_ls", "k": [], "r": "r1.8", "t": "tf.matrix_solve_ls"}, {"p": "/api_docs/python/tf/matrix_transpose", "k": [], "r": "r1.8", "t": "tf.matrix_transpose"}, {"p": "/api_docs/python/tf/matrix_triangular_solve", "k": [], "r": "r1.8", "t": "tf.matrix_triangular_solve"}, {"p": "/api_docs/python/tf/maximum", "k": [], "r": "r1.8", "t": "tf.maximum"}, {"p": "/api_docs/python/tf/meshgrid", "k": [], "r": "r1.8", "t": "tf.meshgrid"}, {"p": "/api_docs/python/tf/metrics", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.metrics"}, {"p": "/api_docs/python/tf/metrics/accuracy", "k": [], "r": "r1.8", "t": "tf.metrics.accuracy"}, {"p": "/api_docs/python/tf/metrics/auc", "k": [], "r": "r1.8", "t": "tf.metrics.auc"}, {"p": "/api_docs/python/tf/metrics/average_precision_at_k", "k": [], "r": "r1.8", "t": "tf.metrics.average_precision_at_k"}, {"p": "/api_docs/python/tf/metrics/false_negatives", "k": [], "r": "r1.8", "t": "tf.metrics.false_negatives"}, {"p": "/api_docs/python/tf/metrics/false_negatives_at_thresholds", "k": [], "r": "r1.8", "t": "tf.metrics.false_negatives_at_thresholds"}, {"p": "/api_docs/python/tf/metrics/false_positives", "k": [], "r": "r1.8", "t": "tf.metrics.false_positives"}, {"p": "/api_docs/python/tf/metrics/false_positives_at_thresholds", "k": [], "r": "r1.8", "t": "tf.metrics.false_positives_at_thresholds"}, {"p": "/api_docs/python/tf/metrics/mean", "k": [], "r": "r1.8", "t": "tf.metrics.mean"}, {"p": "/api_docs/python/tf/metrics/mean_absolute_error", "k": [], "r": "r1.8", "t": "tf.metrics.mean_absolute_error"}, {"p": "/api_docs/python/tf/metrics/mean_cosine_distance", "k": [], "r": "r1.8", "t": "tf.metrics.mean_cosine_distance"}, {"p": "/api_docs/python/tf/metrics/mean_iou", "k": [], "r": "r1.8", "t": "tf.metrics.mean_iou"}, {"p": "/api_docs/python/tf/metrics/mean_per_class_accuracy", "k": [], "r": "r1.8", "t": "tf.metrics.mean_per_class_accuracy"}, {"p": "/api_docs/python/tf/metrics/mean_relative_error", "k": [], "r": "r1.8", "t": "tf.metrics.mean_relative_error"}, {"p": "/api_docs/python/tf/metrics/mean_squared_error", "k": [], "r": "r1.8", "t": "tf.metrics.mean_squared_error"}, {"p": "/api_docs/python/tf/metrics/mean_tensor", "k": [], "r": "r1.8", "t": "tf.metrics.mean_tensor"}, {"p": "/api_docs/python/tf/metrics/percentage_below", "k": [], "r": "r1.8", "t": "tf.metrics.percentage_below"}, {"p": "/api_docs/python/tf/metrics/precision", "k": [], "r": "r1.8", "t": "tf.metrics.precision"}, {"p": "/api_docs/python/tf/metrics/precision_at_k", "k": [], "r": "r1.8", "t": "tf.metrics.precision_at_k"}, {"p": "/api_docs/python/tf/metrics/precision_at_thresholds", "k": [], "r": "r1.8", "t": "tf.metrics.precision_at_thresholds"}, {"p": "/api_docs/python/tf/metrics/precision_at_top_k", "k": [], "r": "r1.8", "t": "tf.metrics.precision_at_top_k"}, {"p": "/api_docs/python/tf/metrics/recall", "k": [], "r": "r1.8", "t": "tf.metrics.recall"}, {"p": "/api_docs/python/tf/metrics/recall_at_k", "k": [], "r": "r1.8", "t": "tf.metrics.recall_at_k"}, {"p": "/api_docs/python/tf/metrics/recall_at_thresholds", "k": [], "r": "r1.8", "t": "tf.metrics.recall_at_thresholds"}, {"p": "/api_docs/python/tf/metrics/recall_at_top_k", "k": [], "r": "r1.8", "t": "tf.metrics.recall_at_top_k"}, {"p": "/api_docs/python/tf/metrics/root_mean_squared_error", "k": [], "r": "r1.8", "t": "tf.metrics.root_mean_squared_error"}, {"p": "/api_docs/python/tf/metrics/sensitivity_at_specificity", "k": [], "r": "r1.8", "t": "tf.metrics.sensitivity_at_specificity"}, {"p": "/api_docs/python/tf/metrics/sparse_average_precision_at_k", "k": [], "r": "r1.8", "t": "tf.metrics.sparse_average_precision_at_k"}, {"p": "/api_docs/python/tf/metrics/sparse_precision_at_k", "k": [], "r": "r1.8", "t": "tf.metrics.sparse_precision_at_k"}, {"p": "/api_docs/python/tf/metrics/specificity_at_sensitivity", "k": [], "r": "r1.8", "t": "tf.metrics.specificity_at_sensitivity"}, {"p": "/api_docs/python/tf/metrics/true_negatives", "k": [], "r": "r1.8", "t": "tf.metrics.true_negatives"}, {"p": "/api_docs/python/tf/metrics/true_negatives_at_thresholds", "k": [], "r": "r1.8", "t": "tf.metrics.true_negatives_at_thresholds"}, {"p": "/api_docs/python/tf/metrics/true_positives", "k": [], "r": "r1.8", "t": "tf.metrics.true_positives"}, {"p": "/api_docs/python/tf/metrics/true_positives_at_thresholds", "k": [], "r": "r1.8", "t": "tf.metrics.true_positives_at_thresholds"}, {"p": "/api_docs/python/tf/min_max_variable_partitioner", "k": [], "r": "r1.8", "t": "tf.min_max_variable_partitioner"}, {"p": "/api_docs/python/tf/minimum", "k": [], "r": "r1.8", "t": "tf.minimum"}, {"p": "/api_docs/python/tf/model_variables", "k": [], "r": "r1.8", "t": "tf.model_variables"}, {"p": "/api_docs/python/tf/moving_average_variables", "k": [], "r": "r1.8", "t": "tf.moving_average_variables"}, {"p": "/api_docs/python/tf/multinomial", "k": [], "r": "r1.8", "t": "tf.multinomial"}, {"p": "/api_docs/python/tf/multiply", "k": [], "r": "r1.8", "t": "tf.multiply"}, {"p": "/api_docs/python/tf/name_scope", "k": ["name", "__enter__", "__exit__", "__init__"], "r": "r1.8", "t": "tf.name_scope"}, {"p": "/api_docs/python/tf/negative", "k": [], "r": "r1.8", "t": "tf.negative"}, {"p": "/api_docs/python/tf/nn", "k": ["__cached__", "__loader__", "__spec__", "swish"], "r": "r1.8", "t": "tf.nn"}, {"p": "/api_docs/python/tf/nn/all_candidate_sampler", "k": [], "r": "r1.8", "t": "tf.nn.all_candidate_sampler"}, {"p": "/api_docs/python/tf/nn/atrous_conv2d", "k": [], "r": "r1.8", "t": "tf.nn.atrous_conv2d"}, {"p": "/api_docs/python/tf/nn/atrous_conv2d_transpose", "k": [], "r": "r1.8", "t": "tf.nn.atrous_conv2d_transpose"}, {"p": "/api_docs/python/tf/nn/avg_pool", "k": [], "r": "r1.8", "t": "tf.nn.avg_pool"}, {"p": "/api_docs/python/tf/nn/avg_pool3d", "k": [], "r": "r1.8", "t": "tf.nn.avg_pool3d"}, {"p": "/api_docs/python/tf/nn/batch_norm_with_global_normalization", "k": [], "r": "r1.8", "t": "tf.nn.batch_norm_with_global_normalization"}, {"p": "/api_docs/python/tf/nn/batch_normalization", "k": [], "r": "r1.8", "t": "tf.nn.batch_normalization"}, {"p": "/api_docs/python/tf/nn/bias_add", "k": [], "r": "r1.8", "t": "tf.nn.bias_add"}, {"p": "/api_docs/python/tf/nn/bidirectional_dynamic_rnn", "k": [], "r": "r1.8", "t": "tf.nn.bidirectional_dynamic_rnn"}, {"p": "/api_docs/python/tf/nn/compute_accidental_hits", "k": [], "r": "r1.8", "t": "tf.nn.compute_accidental_hits"}, {"p": "/api_docs/python/tf/nn/conv1d", "k": [], "r": "r1.8", "t": "tf.nn.conv1d"}, {"p": "/api_docs/python/tf/nn/conv2d", "k": [], "r": "r1.8", "t": "tf.nn.conv2d"}, {"p": "/api_docs/python/tf/nn/conv2d_backprop_filter", "k": [], "r": "r1.8", "t": "tf.nn.conv2d_backprop_filter"}, {"p": "/api_docs/python/tf/nn/conv2d_backprop_input", "k": [], "r": "r1.8", "t": "tf.nn.conv2d_backprop_input"}, {"p": "/api_docs/python/tf/nn/conv2d_transpose", "k": [], "r": "r1.8", "t": "tf.nn.conv2d_transpose"}, {"p": "/api_docs/python/tf/nn/conv3d", "k": [], "r": "r1.8", "t": "tf.nn.conv3d"}, {"p": "/api_docs/python/tf/nn/conv3d_backprop_filter_v2", "k": [], "r": "r1.8", "t": "tf.nn.conv3d_backprop_filter_v2"}, {"p": "/api_docs/python/tf/nn/conv3d_transpose", "k": [], "r": "r1.8", "t": "tf.nn.conv3d_transpose"}, {"p": "/api_docs/python/tf/nn/convolution", "k": [], "r": "r1.8", "t": "tf.nn.convolution"}, {"p": "/api_docs/python/tf/nn/crelu", "k": [], "r": "r1.8", "t": "tf.nn.crelu"}, {"p": "/api_docs/python/tf/nn/ctc_beam_search_decoder", "k": [], "r": "r1.8", "t": "tf.nn.ctc_beam_search_decoder"}, {"p": "/api_docs/python/tf/nn/ctc_greedy_decoder", "k": [], "r": "r1.8", "t": "tf.nn.ctc_greedy_decoder"}, {"p": "/api_docs/python/tf/nn/ctc_loss", "k": [], "r": "r1.8", "t": "tf.nn.ctc_loss"}, {"p": "/api_docs/python/tf/nn/depthwise_conv2d", "k": [], "r": "r1.8", "t": "tf.nn.depthwise_conv2d"}, {"p": "/api_docs/python/tf/nn/depthwise_conv2d_native", "k": [], "r": "r1.8", "t": "tf.nn.depthwise_conv2d_native"}, {"p": "/api_docs/python/tf/nn/depthwise_conv2d_native_backprop_filter", "k": [], "r": "r1.8", "t": "tf.nn.depthwise_conv2d_native_backprop_filter"}, {"p": "/api_docs/python/tf/nn/depthwise_conv2d_native_backprop_input", "k": [], "r": "r1.8", "t": "tf.nn.depthwise_conv2d_native_backprop_input"}, {"p": "/api_docs/python/tf/nn/dilation2d", "k": [], "r": "r1.8", "t": "tf.nn.dilation2d"}, {"p": "/api_docs/python/tf/nn/dropout", "k": [], "r": "r1.8", "t": "tf.nn.dropout"}, {"p": "/api_docs/python/tf/nn/dynamic_rnn", "k": [], "r": "r1.8", "t": "tf.nn.dynamic_rnn"}, {"p": "/api_docs/python/tf/nn/elu", "k": [], "r": "r1.8", "t": "tf.nn.elu"}, {"p": "/api_docs/python/tf/nn/embedding_lookup", "k": [], "r": "r1.8", "t": "tf.nn.embedding_lookup"}, {"p": "/api_docs/python/tf/nn/embedding_lookup_sparse", "k": [], "r": "r1.8", "t": "tf.nn.embedding_lookup_sparse"}, {"p": "/api_docs/python/tf/nn/erosion2d", "k": [], "r": "r1.8", "t": "tf.nn.erosion2d"}, {"p": "/api_docs/python/tf/nn/fixed_unigram_candidate_sampler", "k": [], "r": "r1.8", "t": "tf.nn.fixed_unigram_candidate_sampler"}, {"p": "/api_docs/python/tf/nn/fractional_avg_pool", "k": [], "r": "r1.8", "t": "tf.nn.fractional_avg_pool"}, {"p": "/api_docs/python/tf/nn/fractional_max_pool", "k": [], "r": "r1.8", "t": "tf.nn.fractional_max_pool"}, {"p": "/api_docs/python/tf/nn/fused_batch_norm", "k": [], "r": "r1.8", "t": "tf.nn.fused_batch_norm"}, {"p": "/api_docs/python/tf/nn/in_top_k", "k": [], "r": "r1.8", "t": "tf.nn.in_top_k"}, {"p": "/api_docs/python/tf/nn/l2_loss", "k": [], "r": "r1.8", "t": "tf.nn.l2_loss"}, {"p": "/api_docs/python/tf/nn/l2_normalize", "k": [], "r": "r1.8", "t": "tf.nn.l2_normalize"}, {"p": "/api_docs/python/tf/nn/leaky_relu", "k": [], "r": "r1.8", "t": "tf.nn.leaky_relu"}, {"p": "/api_docs/python/tf/nn/learned_unigram_candidate_sampler", "k": [], "r": "r1.8", "t": "tf.nn.learned_unigram_candidate_sampler"}, {"p": "/api_docs/python/tf/nn/local_response_normalization", "k": [], "r": "r1.8", "t": "tf.nn.local_response_normalization"}, {"p": "/api_docs/python/tf/nn/log_poisson_loss", "k": [], "r": "r1.8", "t": "tf.nn.log_poisson_loss"}, {"p": "/api_docs/python/tf/nn/log_softmax", "k": [], "r": "r1.8", "t": "tf.nn.log_softmax"}, {"p": "/api_docs/python/tf/nn/log_uniform_candidate_sampler", "k": [], "r": "r1.8", "t": "tf.nn.log_uniform_candidate_sampler"}, {"p": "/api_docs/python/tf/nn/max_pool", "k": [], "r": "r1.8", "t": "tf.nn.max_pool"}, {"p": "/api_docs/python/tf/nn/max_pool3d", "k": [], "r": "r1.8", "t": "tf.nn.max_pool3d"}, {"p": "/api_docs/python/tf/nn/max_pool_with_argmax", "k": [], "r": "r1.8", "t": "tf.nn.max_pool_with_argmax"}, {"p": "/api_docs/python/tf/nn/moments", "k": [], "r": "r1.8", "t": "tf.nn.moments"}, {"p": "/api_docs/python/tf/nn/nce_loss", "k": [], "r": "r1.8", "t": "tf.nn.nce_loss"}, {"p": "/api_docs/python/tf/nn/normalize_moments", "k": [], "r": "r1.8", "t": "tf.nn.normalize_moments"}, {"p": "/api_docs/python/tf/nn/pool", "k": [], "r": "r1.8", "t": "tf.nn.pool"}, {"p": "/api_docs/python/tf/nn/quantized_avg_pool", "k": [], "r": "r1.8", "t": "tf.nn.quantized_avg_pool"}, {"p": "/api_docs/python/tf/nn/quantized_conv2d", "k": [], "r": "r1.8", "t": "tf.nn.quantized_conv2d"}, {"p": "/api_docs/python/tf/nn/quantized_max_pool", "k": [], "r": "r1.8", "t": "tf.nn.quantized_max_pool"}, {"p": "/api_docs/python/tf/nn/quantized_relu_x", "k": [], "r": "r1.8", "t": "tf.nn.quantized_relu_x"}, {"p": "/api_docs/python/tf/nn/raw_rnn", "k": [], "r": "r1.8", "t": "tf.nn.raw_rnn"}, {"p": "/api_docs/python/tf/nn/relu", "k": [], "r": "r1.8", "t": "tf.nn.relu"}, {"p": "/api_docs/python/tf/nn/relu6", "k": [], "r": "r1.8", "t": "tf.nn.relu6"}, {"p": "/api_docs/python/tf/nn/relu_layer", "k": [], "r": "r1.8", "t": "tf.nn.relu_layer"}, {"p": "/api_docs/python/tf/nn/rnn_cell", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.nn.rnn_cell"}, {"p": "/api_docs/python/tf/nn/sampled_softmax_loss", "k": [], "r": "r1.8", "t": "tf.nn.sampled_softmax_loss"}, {"p": "/api_docs/python/tf/nn/selu", "k": [], "r": "r1.8", "t": "tf.nn.selu"}, {"p": "/api_docs/python/tf/nn/separable_conv2d", "k": [], "r": "r1.8", "t": "tf.nn.separable_conv2d"}, {"p": "/api_docs/python/tf/nn/sigmoid_cross_entropy_with_logits", "k": [], "r": "r1.8", "t": "tf.nn.sigmoid_cross_entropy_with_logits"}, {"p": "/api_docs/python/tf/nn/softmax", "k": [], "r": "r1.8", "t": "tf.nn.softmax"}, {"p": "/api_docs/python/tf/nn/softmax_cross_entropy_with_logits", "k": [], "r": "r1.8", "t": "tf.nn.softmax_cross_entropy_with_logits"}, {"p": "/api_docs/python/tf/nn/softmax_cross_entropy_with_logits_v2", "k": [], "r": "r1.8", "t": "tf.nn.softmax_cross_entropy_with_logits_v2"}, {"p": "/api_docs/python/tf/nn/softplus", "k": [], "r": "r1.8", "t": "tf.nn.softplus"}, {"p": "/api_docs/python/tf/nn/softsign", "k": [], "r": "r1.8", "t": "tf.nn.softsign"}, {"p": "/api_docs/python/tf/nn/sparse_softmax_cross_entropy_with_logits", "k": [], "r": "r1.8", "t": "tf.nn.sparse_softmax_cross_entropy_with_logits"}, {"p": "/api_docs/python/tf/nn/static_bidirectional_rnn", "k": [], "r": "r1.8", "t": "tf.nn.static_bidirectional_rnn"}, {"p": "/api_docs/python/tf/nn/static_rnn", "k": [], "r": "r1.8", "t": "tf.nn.static_rnn"}, {"p": "/api_docs/python/tf/nn/static_state_saving_rnn", "k": [], "r": "r1.8", "t": "tf.nn.static_state_saving_rnn"}, {"p": "/api_docs/python/tf/nn/sufficient_statistics", "k": [], "r": "r1.8", "t": "tf.nn.sufficient_statistics"}, {"p": "/api_docs/python/tf/nn/top_k", "k": [], "r": "r1.8", "t": "tf.nn.top_k"}, {"p": "/api_docs/python/tf/nn/uniform_candidate_sampler", "k": [], "r": "r1.8", "t": "tf.nn.uniform_candidate_sampler"}, {"p": "/api_docs/python/tf/nn/weighted_cross_entropy_with_logits", "k": [], "r": "r1.8", "t": "tf.nn.weighted_cross_entropy_with_logits"}, {"p": "/api_docs/python/tf/nn/weighted_moments", "k": [], "r": "r1.8", "t": "tf.nn.weighted_moments"}, {"p": "/api_docs/python/tf/nn/with_space_to_batch", "k": [], "r": "r1.8", "t": "tf.nn.with_space_to_batch"}, {"p": "/api_docs/python/tf/nn/xw_plus_b", "k": [], "r": "r1.8", "t": "tf.nn.xw_plus_b"}, {"p": "/api_docs/python/tf/nn/zero_fraction", "k": [], "r": "r1.8", "t": "tf.nn.zero_fraction"}, {"p": "/api_docs/python/tf/no_op", "k": [], "r": "r1.8", "t": "tf.no_op"}, {"p": "/api_docs/python/tf/no_regularizer", "k": [], "r": "r1.8", "t": "tf.no_regularizer"}, {"p": "/api_docs/python/tf/norm", "k": [], "r": "r1.8", "t": "tf.norm"}, {"p": "/api_docs/python/tf/not_equal", "k": [], "r": "r1.8", "t": "tf.not_equal"}, {"p": "/api_docs/python/tf/one_hot", "k": [], "r": "r1.8", "t": "tf.one_hot"}, {"p": "/api_docs/python/tf/ones", "k": [], "r": "r1.8", "t": "tf.ones"}, {"p": "/api_docs/python/tf/ones_initializer", "k": ["__call__", "__init__", "from_config", "get_config"], "r": "r1.8", "t": "tf.ones_initializer"}, {"p": "/api_docs/python/tf/ones_like", "k": [], "r": "r1.8", "t": "tf.ones_like"}, {"p": "/api_docs/python/tf/op_scope", "k": [], "r": "r1.8", "t": "tf.op_scope"}, {"p": "/api_docs/python/tf/orthogonal_initializer", "k": ["__call__", "__init__", "from_config", "get_config"], "r": "r1.8", "t": "tf.orthogonal_initializer"}, {"p": "/api_docs/python/tf/pad", "k": [], "r": "r1.8", "t": "tf.pad"}, {"p": "/api_docs/python/tf/parallel_stack", "k": [], "r": "r1.8", "t": "tf.parallel_stack"}, {"p": "/api_docs/python/tf/parse_example", "k": [], "r": "r1.8", "t": "tf.parse_example"}, {"p": "/api_docs/python/tf/parse_single_example", "k": [], "r": "r1.8", "t": "tf.parse_single_example"}, {"p": "/api_docs/python/tf/parse_single_sequence_example", "k": [], "r": "r1.8", "t": "tf.parse_single_sequence_example"}, {"p": "/api_docs/python/tf/parse_tensor", "k": [], "r": "r1.8", "t": "tf.parse_tensor"}, {"p": "/api_docs/python/tf/placeholder", "k": [], "r": "r1.8", "t": "tf.placeholder"}, {"p": "/api_docs/python/tf/placeholder_with_default", "k": [], "r": "r1.8", "t": "tf.placeholder_with_default"}, {"p": "/api_docs/python/tf/polygamma", "k": [], "r": "r1.8", "t": "tf.polygamma"}, {"p": "/api_docs/python/tf/pow", "k": [], "r": "r1.8", "t": "tf.pow"}, {"p": "/api_docs/python/tf/profiler", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.profiler"}, {"p": "/api_docs/python/tf/profiler/AdviceProto", "k": ["Checker", "CheckersEntry"], "r": "r1.8", "t": "tf.profiler.AdviceProto"}, {"p": "/api_docs/python/tf/profiler/AdviceProto/Checker", "k": [], "r": "r1.8", "t": "tf.profiler.AdviceProto.Checker"}, {"p": "/api_docs/python/tf/profiler/AdviceProto/CheckersEntry", "k": [], "r": "r1.8", "t": "tf.profiler.AdviceProto.CheckersEntry"}, {"p": "/api_docs/python/tf/profiler/GraphNodeProto", "k": ["InputShapesEntry"], "r": "r1.8", "t": "tf.profiler.GraphNodeProto"}, {"p": "/api_docs/python/tf/profiler/GraphNodeProto/InputShapesEntry", "k": [], "r": "r1.8", "t": "tf.profiler.GraphNodeProto.InputShapesEntry"}, {"p": "/api_docs/python/tf/profiler/MultiGraphNodeProto", "k": [], "r": "r1.8", "t": "tf.profiler.MultiGraphNodeProto"}, {"p": "/api_docs/python/tf/profiler/OpLogProto", "k": ["IdToStringEntry"], "r": "r1.8", "t": "tf.profiler.OpLogProto"}, {"p": "/api_docs/python/tf/profiler/OpLogProto/IdToStringEntry", "k": [], "r": "r1.8", "t": "tf.profiler.OpLogProto.IdToStringEntry"}, {"p": "/api_docs/python/tf/profiler/ProfileOptionBuilder", "k": ["__init__", "account_displayed_op_only", "build", "float_operation", "order_by", "select", "time_and_memory", "trainable_variables_parameter", "with_accounted_types", "with_empty_output", "with_file_output", "with_max_depth", "with_min_execution_time", "with_min_float_operations", "with_min_memory", "with_min_occurrence", "with_min_parameters", "with_node_names", "with_pprof_output", "with_stdout_output", "with_step", "with_timeline_output"], "r": "r1.8", "t": "tf.profiler.ProfileOptionBuilder"}, {"p": "/api_docs/python/tf/profiler/Profiler", "k": ["__init__", "add_step", "advise", "profile_graph", "profile_name_scope", "profile_operations", "profile_python", "serialize_to_string"], "r": "r1.8", "t": "tf.profiler.Profiler"}, {"p": "/api_docs/python/tf/profiler/advise", "k": [], "r": "r1.8", "t": "tf.profiler.advise"}, {"p": "/api_docs/python/tf/profiler/profile", "k": [], "r": "r1.8", "t": "tf.profiler.profile"}, {"p": "/api_docs/python/tf/profiler/write_op_log", "k": [], "r": "r1.8", "t": "tf.profiler.write_op_log"}, {"p": "/api_docs/python/tf/py_func", "k": [], "r": "r1.8", "t": "tf.py_func"}, {"p": "/api_docs/python/tf/python_io", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.python_io"}, {"p": "/api_docs/python/tf/python_io/TFRecordCompressionType", "k": ["GZIP", "NONE", "ZLIB"], "r": "r1.8", "t": "tf.python_io.TFRecordCompressionType"}, {"p": "/api_docs/python/tf/python_io/TFRecordOptions", "k": ["__init__", "get_compression_type_string", "compression_type_map"], "r": "r1.8", "t": "tf.python_io.TFRecordOptions"}, {"p": "/api_docs/python/tf/python_io/TFRecordWriter", "k": ["__enter__", "__exit__", "__init__", "close", "flush", "write"], "r": "r1.8", "t": "tf.python_io.TFRecordWriter"}, {"p": "/api_docs/python/tf/python_io/tf_record_iterator", "k": [], "r": "r1.8", "t": "tf.python_io.tf_record_iterator"}, {"p": "/api_docs/python/tf/pywrap_tensorflow", "k": [], "r": "r1.8", "t": "tf.pywrap_tensorflow"}, {"p": "/api_docs/python/tf/qr", "k": [], "r": "r1.8", "t": "tf.qr"}, {"p": "/api_docs/python/tf/quantize", "k": [], "r": "r1.8", "t": "tf.quantize"}, {"p": "/api_docs/python/tf/quantize_v2", "k": [], "r": "r1.8", "t": "tf.quantize_v2"}, {"p": "/api_docs/python/tf/quantized_concat", "k": [], "r": "r1.8", "t": "tf.quantized_concat"}, {"p": "/api_docs/python/tf/random_crop", "k": [], "r": "r1.8", "t": "tf.random_crop"}, {"p": "/api_docs/python/tf/random_gamma", "k": [], "r": "r1.8", "t": "tf.random_gamma"}, {"p": "/api_docs/python/tf/random_normal", "k": [], "r": "r1.8", "t": "tf.random_normal"}, {"p": "/api_docs/python/tf/random_normal_initializer", "k": ["__call__", "__init__", "from_config", "get_config"], "r": "r1.8", "t": "tf.random_normal_initializer"}, {"p": "/api_docs/python/tf/random_poisson", "k": [], "r": "r1.8", "t": "tf.random_poisson"}, {"p": "/api_docs/python/tf/random_shuffle", "k": [], "r": "r1.8", "t": "tf.random_shuffle"}, {"p": "/api_docs/python/tf/random_uniform", "k": [], "r": "r1.8", "t": "tf.random_uniform"}, {"p": "/api_docs/python/tf/random_uniform_initializer", "k": ["__call__", "__init__", "from_config", "get_config"], "r": "r1.8", "t": "tf.random_uniform_initializer"}, {"p": "/api_docs/python/tf/range", "k": [], "r": "r1.8", "t": "tf.range"}, {"p": "/api_docs/python/tf/rank", "k": [], "r": "r1.8", "t": "tf.rank"}, {"p": "/api_docs/python/tf/read_file", "k": [], "r": "r1.8", "t": "tf.read_file"}, {"p": "/api_docs/python/tf/real", "k": [], "r": "r1.8", "t": "tf.real"}, {"p": "/api_docs/python/tf/realdiv", "k": [], "r": "r1.8", "t": "tf.realdiv"}, {"p": "/api_docs/python/tf/reciprocal", "k": [], "r": "r1.8", "t": "tf.reciprocal"}, {"p": "/api_docs/python/tf/reduce_all", "k": [], "r": "r1.8", "t": "tf.reduce_all"}, {"p": "/api_docs/python/tf/reduce_any", "k": [], "r": "r1.8", "t": "tf.reduce_any"}, {"p": "/api_docs/python/tf/reduce_join", "k": [], "r": "r1.8", "t": "tf.reduce_join"}, {"p": "/api_docs/python/tf/reduce_logsumexp", "k": [], "r": "r1.8", "t": "tf.reduce_logsumexp"}, {"p": "/api_docs/python/tf/reduce_max", "k": [], "r": "r1.8", "t": "tf.reduce_max"}, {"p": "/api_docs/python/tf/reduce_mean", "k": [], "r": "r1.8", "t": "tf.reduce_mean"}, {"p": "/api_docs/python/tf/reduce_min", "k": [], "r": "r1.8", "t": "tf.reduce_min"}, {"p": "/api_docs/python/tf/reduce_prod", "k": [], "r": "r1.8", "t": "tf.reduce_prod"}, {"p": "/api_docs/python/tf/reduce_sum", "k": [], "r": "r1.8", "t": "tf.reduce_sum"}, {"p": "/api_docs/python/tf/regex_replace", "k": [], "r": "r1.8", "t": "tf.regex_replace"}, {"p": "/api_docs/python/tf/register_tensor_conversion_function", "k": [], "r": "r1.8", "t": "tf.register_tensor_conversion_function"}, {"p": "/api_docs/python/tf/report_uninitialized_variables", "k": [], "r": "r1.8", "t": "tf.report_uninitialized_variables"}, {"p": "/api_docs/python/tf/required_space_to_batch_paddings", "k": [], "r": "r1.8", "t": "tf.required_space_to_batch_paddings"}, {"p": "/api_docs/python/tf/reset_default_graph", "k": [], "r": "r1.8", "t": "tf.reset_default_graph"}, {"p": "/api_docs/python/tf/reshape", "k": [], "r": "r1.8", "t": "tf.reshape"}, {"p": "/api_docs/python/tf/resource_loader", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.resource_loader"}, {"p": "/api_docs/python/tf/resource_loader/get_data_files_path", "k": [], "r": "r1.8", "t": "tf.resource_loader.get_data_files_path"}, {"p": "/api_docs/python/tf/resource_loader/get_path_to_datafile", "k": [], "r": "r1.8", "t": "tf.resource_loader.get_path_to_datafile"}, {"p": "/api_docs/python/tf/resource_loader/get_root_dir_with_all_resources", "k": [], "r": "r1.8", "t": "tf.resource_loader.get_root_dir_with_all_resources"}, {"p": "/api_docs/python/tf/resource_loader/load_resource", "k": [], "r": "r1.8", "t": "tf.resource_loader.load_resource"}, {"p": "/api_docs/python/tf/resource_loader/readahead_file_path", "k": [], "r": "r1.8", "t": "tf.resource_loader.readahead_file_path"}, {"p": "/api_docs/python/tf/reverse", "k": [], "r": "r1.8", "t": "tf.reverse"}, {"p": "/api_docs/python/tf/reverse_sequence", "k": [], "r": "r1.8", "t": "tf.reverse_sequence"}, {"p": "/api_docs/python/tf/reverse_v2", "k": [], "r": "r1.8", "t": "tf.reverse_v2"}, {"p": "/api_docs/python/tf/rint", "k": [], "r": "r1.8", "t": "tf.rint"}, {"p": "/api_docs/python/tf/round", "k": [], "r": "r1.8", "t": "tf.round"}, {"p": "/api_docs/python/tf/rsqrt", "k": [], "r": "r1.8", "t": "tf.rsqrt"}, {"p": "/api_docs/python/tf/saturate_cast", "k": [], "r": "r1.8", "t": "tf.saturate_cast"}, {"p": "/api_docs/python/tf/saved_model", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.saved_model"}, {"p": "/api_docs/python/tf/saved_model/builder", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.saved_model.builder"}, {"p": "/api_docs/python/tf/saved_model/builder/SavedModelBuilder", "k": ["__init__", "add_meta_graph", "add_meta_graph_and_variables", "save"], "r": "r1.8", "t": "tf.saved_model.builder.SavedModelBuilder"}, {"p": "/api_docs/python/tf/saved_model/constants", "k": ["ASSETS_DIRECTORY", "ASSETS_KEY", "LEGACY_INIT_OP_KEY", "MAIN_OP_KEY", "SAVED_MODEL_FILENAME_PB", "SAVED_MODEL_FILENAME_PBTXT", "SAVED_MODEL_SCHEMA_VERSION", "VARIABLES_DIRECTORY", "VARIABLES_FILENAME", "__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.saved_model.constants"}, {"p": "/api_docs/python/tf/saved_model/loader", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.saved_model.loader"}, {"p": "/api_docs/python/tf/saved_model/loader/load", "k": [], "r": "r1.8", "t": "tf.saved_model.loader.load"}, {"p": "/api_docs/python/tf/saved_model/loader/maybe_saved_model_directory", "k": [], "r": "r1.8", "t": "tf.saved_model.loader.maybe_saved_model_directory"}, {"p": "/api_docs/python/tf/saved_model/main_op", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.saved_model.main_op"}, {"p": "/api_docs/python/tf/saved_model/main_op/main_op", "k": [], "r": "r1.8", "t": "tf.saved_model.main_op.main_op"}, {"p": "/api_docs/python/tf/saved_model/main_op/main_op_with_restore", "k": [], "r": "r1.8", "t": "tf.saved_model.main_op.main_op_with_restore"}, {"p": "/api_docs/python/tf/saved_model/signature_constants", "k": ["CLASSIFY_INPUTS", "CLASSIFY_METHOD_NAME", "CLASSIFY_OUTPUT_CLASSES", "CLASSIFY_OUTPUT_SCORES", "DEFAULT_SERVING_SIGNATURE_DEF_KEY", "PREDICT_INPUTS", "PREDICT_METHOD_NAME", "PREDICT_OUTPUTS", "REGRESS_INPUTS", "REGRESS_METHOD_NAME", "REGRESS_OUTPUTS", "__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.saved_model.signature_constants"}, {"p": "/api_docs/python/tf/saved_model/signature_def_utils", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.saved_model.signature_def_utils"}, {"p": "/api_docs/python/tf/saved_model/signature_def_utils/build_signature_def", "k": [], "r": "r1.8", "t": "tf.saved_model.signature_def_utils.build_signature_def"}, {"p": "/api_docs/python/tf/saved_model/signature_def_utils/classification_signature_def", "k": [], "r": "r1.8", "t": "tf.saved_model.signature_def_utils.classification_signature_def"}, {"p": "/api_docs/python/tf/saved_model/signature_def_utils/is_valid_signature", "k": [], "r": "r1.8", "t": "tf.saved_model.signature_def_utils.is_valid_signature"}, {"p": "/api_docs/python/tf/saved_model/signature_def_utils/predict_signature_def", "k": [], "r": "r1.8", "t": "tf.saved_model.signature_def_utils.predict_signature_def"}, {"p": "/api_docs/python/tf/saved_model/signature_def_utils/regression_signature_def", "k": [], "r": "r1.8", "t": "tf.saved_model.signature_def_utils.regression_signature_def"}, {"p": "/api_docs/python/tf/saved_model/simple_save", "k": [], "r": "r1.8", "t": "tf.saved_model.simple_save"}, {"p": "/api_docs/python/tf/saved_model/tag_constants", "k": ["GPU", "SERVING", "TPU", "TRAINING", "__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.saved_model.tag_constants"}, {"p": "/api_docs/python/tf/saved_model/utils", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.saved_model.utils"}, {"p": "/api_docs/python/tf/saved_model/utils/build_tensor_info", "k": [], "r": "r1.8", "t": "tf.saved_model.utils.build_tensor_info"}, {"p": "/api_docs/python/tf/saved_model/utils/get_tensor_from_tensor_info", "k": [], "r": "r1.8", "t": "tf.saved_model.utils.get_tensor_from_tensor_info"}, {"p": "/api_docs/python/tf/scalar_mul", "k": [], "r": "r1.8", "t": "tf.scalar_mul"}, {"p": "/api_docs/python/tf/scan", "k": [], "r": "r1.8", "t": "tf.scan"}, {"p": "/api_docs/python/tf/scatter_add", "k": [], "r": "r1.8", "t": "tf.scatter_add"}, {"p": "/api_docs/python/tf/scatter_div", "k": [], "r": "r1.8", "t": "tf.scatter_div"}, {"p": "/api_docs/python/tf/scatter_max", "k": [], "r": "r1.8", "t": "tf.scatter_max"}, {"p": "/api_docs/python/tf/scatter_min", "k": [], "r": "r1.8", "t": "tf.scatter_min"}, {"p": "/api_docs/python/tf/scatter_mul", "k": [], "r": "r1.8", "t": "tf.scatter_mul"}, {"p": "/api_docs/python/tf/scatter_nd", "k": [], "r": "r1.8", "t": "tf.scatter_nd"}, {"p": "/api_docs/python/tf/scatter_nd_add", "k": [], "r": "r1.8", "t": "tf.scatter_nd_add"}, {"p": "/api_docs/python/tf/scatter_nd_sub", "k": [], "r": "r1.8", "t": "tf.scatter_nd_sub"}, {"p": "/api_docs/python/tf/scatter_nd_update", "k": [], "r": "r1.8", "t": "tf.scatter_nd_update"}, {"p": "/api_docs/python/tf/scatter_sub", "k": [], "r": "r1.8", "t": "tf.scatter_sub"}, {"p": "/api_docs/python/tf/scatter_update", "k": [], "r": "r1.8", "t": "tf.scatter_update"}, {"p": "/api_docs/python/tf/segment_max", "k": [], "r": "r1.8", "t": "tf.segment_max"}, {"p": "/api_docs/python/tf/segment_mean", "k": [], "r": "r1.8", "t": "tf.segment_mean"}, {"p": "/api_docs/python/tf/segment_min", "k": [], "r": "r1.8", "t": "tf.segment_min"}, {"p": "/api_docs/python/tf/segment_prod", "k": [], "r": "r1.8", "t": "tf.segment_prod"}, {"p": "/api_docs/python/tf/segment_sum", "k": [], "r": "r1.8", "t": "tf.segment_sum"}, {"p": "/api_docs/python/tf/self_adjoint_eig", "k": [], "r": "r1.8", "t": "tf.self_adjoint_eig"}, {"p": "/api_docs/python/tf/self_adjoint_eigvals", "k": [], "r": "r1.8", "t": "tf.self_adjoint_eigvals"}, {"p": "/api_docs/python/tf/sequence_mask", "k": [], "r": "r1.8", "t": "tf.sequence_mask"}, {"p": "/api_docs/python/tf/serialize_many_sparse", "k": [], "r": "r1.8", "t": "tf.serialize_many_sparse"}, {"p": "/api_docs/python/tf/serialize_sparse", "k": [], "r": "r1.8", "t": "tf.serialize_sparse"}, {"p": "/api_docs/python/tf/serialize_tensor", "k": [], "r": "r1.8", "t": "tf.serialize_tensor"}, {"p": "/api_docs/python/tf/set_random_seed", "k": [], "r": "r1.8", "t": "tf.set_random_seed"}, {"p": "/api_docs/python/tf/setdiff1d", "k": [], "r": "r1.8", "t": "tf.setdiff1d"}, {"p": "/api_docs/python/tf/sets", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.sets"}, {"p": "/api_docs/python/tf/sets/set_difference", "k": [], "r": "r1.8", "t": "tf.sets.set_difference"}, {"p": "/api_docs/python/tf/sets/set_intersection", "k": [], "r": "r1.8", "t": "tf.sets.set_intersection"}, {"p": "/api_docs/python/tf/sets/set_size", "k": [], "r": "r1.8", "t": "tf.sets.set_size"}, {"p": "/api_docs/python/tf/sets/set_union", "k": [], "r": "r1.8", "t": "tf.sets.set_union"}, {"p": "/api_docs/python/tf/shape", "k": [], "r": "r1.8", "t": "tf.shape"}, {"p": "/api_docs/python/tf/shape_n", "k": [], "r": "r1.8", "t": "tf.shape_n"}, {"p": "/api_docs/python/tf/sigmoid", "k": [], "r": "r1.8", "t": "tf.sigmoid"}, {"p": "/api_docs/python/tf/sign", "k": [], "r": "r1.8", "t": "tf.sign"}, {"p": "/api_docs/python/tf/sin", "k": [], "r": "r1.8", "t": "tf.sin"}, {"p": "/api_docs/python/tf/sinh", "k": [], "r": "r1.8", "t": "tf.sinh"}, {"p": "/api_docs/python/tf/size", "k": [], "r": "r1.8", "t": "tf.size"}, {"p": "/api_docs/python/tf/slice", "k": [], "r": "r1.8", "t": "tf.slice"}, {"p": "/api_docs/python/tf/space_to_batch", "k": [], "r": "r1.8", "t": "tf.space_to_batch"}, {"p": "/api_docs/python/tf/space_to_batch_nd", "k": [], "r": "r1.8", "t": "tf.space_to_batch_nd"}, {"p": "/api_docs/python/tf/space_to_depth", "k": [], "r": "r1.8", "t": "tf.space_to_depth"}, {"p": "/api_docs/python/tf/sparse_add", "k": [], "r": "r1.8", "t": "tf.sparse_add"}, {"p": "/api_docs/python/tf/sparse_concat", "k": [], "r": "r1.8", "t": "tf.sparse_concat"}, {"p": "/api_docs/python/tf/sparse_fill_empty_rows", "k": [], "r": "r1.8", "t": "tf.sparse_fill_empty_rows"}, {"p": "/api_docs/python/tf/sparse_mask", "k": [], "r": "r1.8", "t": "tf.sparse_mask"}, {"p": "/api_docs/python/tf/sparse_matmul", "k": [], "r": "r1.8", "t": "tf.sparse_matmul"}, {"p": "/api_docs/python/tf/sparse_maximum", "k": [], "r": "r1.8", "t": "tf.sparse_maximum"}, {"p": "/api_docs/python/tf/sparse_merge", "k": [], "r": "r1.8", "t": "tf.sparse_merge"}, {"p": "/api_docs/python/tf/sparse_minimum", "k": [], "r": "r1.8", "t": "tf.sparse_minimum"}, {"p": "/api_docs/python/tf/sparse_placeholder", "k": [], "r": "r1.8", "t": "tf.sparse_placeholder"}, {"p": "/api_docs/python/tf/sparse_reduce_max", "k": [], "r": "r1.8", "t": "tf.sparse_reduce_max"}, {"p": "/api_docs/python/tf/sparse_reduce_max_sparse", "k": [], "r": "r1.8", "t": "tf.sparse_reduce_max_sparse"}, {"p": "/api_docs/python/tf/sparse_reduce_sum", "k": [], "r": "r1.8", "t": "tf.sparse_reduce_sum"}, {"p": "/api_docs/python/tf/sparse_reduce_sum_sparse", "k": [], "r": "r1.8", "t": "tf.sparse_reduce_sum_sparse"}, {"p": "/api_docs/python/tf/sparse_reorder", "k": [], "r": "r1.8", "t": "tf.sparse_reorder"}, {"p": "/api_docs/python/tf/sparse_reset_shape", "k": [], "r": "r1.8", "t": "tf.sparse_reset_shape"}, {"p": "/api_docs/python/tf/sparse_reshape", "k": [], "r": "r1.8", "t": "tf.sparse_reshape"}, {"p": "/api_docs/python/tf/sparse_retain", "k": [], "r": "r1.8", "t": "tf.sparse_retain"}, {"p": "/api_docs/python/tf/sparse_segment_mean", "k": [], "r": "r1.8", "t": "tf.sparse_segment_mean"}, {"p": "/api_docs/python/tf/sparse_segment_sqrt_n", "k": [], "r": "r1.8", "t": "tf.sparse_segment_sqrt_n"}, {"p": "/api_docs/python/tf/sparse_segment_sum", "k": [], "r": "r1.8", "t": "tf.sparse_segment_sum"}, {"p": "/api_docs/python/tf/sparse_slice", "k": [], "r": "r1.8", "t": "tf.sparse_slice"}, {"p": "/api_docs/python/tf/sparse_softmax", "k": [], "r": "r1.8", "t": "tf.sparse_softmax"}, {"p": "/api_docs/python/tf/sparse_split", "k": [], "r": "r1.8", "t": "tf.sparse_split"}, {"p": "/api_docs/python/tf/sparse_tensor_dense_matmul", "k": [], "r": "r1.8", "t": "tf.sparse_tensor_dense_matmul"}, {"p": "/api_docs/python/tf/sparse_tensor_to_dense", "k": [], "r": "r1.8", "t": "tf.sparse_tensor_to_dense"}, {"p": "/api_docs/python/tf/sparse_to_dense", "k": [], "r": "r1.8", "t": "tf.sparse_to_dense"}, {"p": "/api_docs/python/tf/sparse_to_indicator", "k": [], "r": "r1.8", "t": "tf.sparse_to_indicator"}, {"p": "/api_docs/python/tf/sparse_transpose", "k": [], "r": "r1.8", "t": "tf.sparse_transpose"}, {"p": "/api_docs/python/tf/spectral", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.spectral"}, {"p": "/api_docs/python/tf/spectral/dct", "k": [], "r": "r1.8", "t": "tf.spectral.dct"}, {"p": "/api_docs/python/tf/spectral/irfft", "k": [], "r": "r1.8", "t": "tf.spectral.irfft"}, {"p": "/api_docs/python/tf/spectral/irfft2d", "k": [], "r": "r1.8", "t": "tf.spectral.irfft2d"}, {"p": "/api_docs/python/tf/spectral/irfft3d", "k": [], "r": "r1.8", "t": "tf.spectral.irfft3d"}, {"p": "/api_docs/python/tf/spectral/rfft", "k": [], "r": "r1.8", "t": "tf.spectral.rfft"}, {"p": "/api_docs/python/tf/spectral/rfft2d", "k": [], "r": "r1.8", "t": "tf.spectral.rfft2d"}, {"p": "/api_docs/python/tf/spectral/rfft3d", "k": [], "r": "r1.8", "t": "tf.spectral.rfft3d"}, {"p": "/api_docs/python/tf/split", "k": [], "r": "r1.8", "t": "tf.split"}, {"p": "/api_docs/python/tf/sqrt", "k": [], "r": "r1.8", "t": "tf.sqrt"}, {"p": "/api_docs/python/tf/square", "k": [], "r": "r1.8", "t": "tf.square"}, {"p": "/api_docs/python/tf/squared_difference", "k": [], "r": "r1.8", "t": "tf.squared_difference"}, {"p": "/api_docs/python/tf/squeeze", "k": [], "r": "r1.8", "t": "tf.squeeze"}, {"p": "/api_docs/python/tf/stack", "k": [], "r": "r1.8", "t": "tf.stack"}, {"p": "/api_docs/python/tf/stop_gradient", "k": [], "r": "r1.8", "t": "tf.stop_gradient"}, {"p": "/api_docs/python/tf/strided_slice", "k": [], "r": "r1.8", "t": "tf.strided_slice"}, {"p": "/api_docs/python/tf/string_join", "k": [], "r": "r1.8", "t": "tf.string_join"}, {"p": "/api_docs/python/tf/string_split", "k": [], "r": "r1.8", "t": "tf.string_split"}, {"p": "/api_docs/python/tf/string_to_hash_bucket", "k": [], "r": "r1.8", "t": "tf.string_to_hash_bucket"}, {"p": "/api_docs/python/tf/string_to_hash_bucket_fast", "k": [], "r": "r1.8", "t": "tf.string_to_hash_bucket_fast"}, {"p": "/api_docs/python/tf/string_to_hash_bucket_strong", "k": [], "r": "r1.8", "t": "tf.string_to_hash_bucket_strong"}, {"p": "/api_docs/python/tf/string_to_number", "k": [], "r": "r1.8", "t": "tf.string_to_number"}, {"p": "/api_docs/python/tf/substr", "k": [], "r": "r1.8", "t": "tf.substr"}, {"p": "/api_docs/python/tf/subtract", "k": [], "r": "r1.8", "t": "tf.subtract"}, {"p": "/api_docs/python/tf/summary", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.summary"}, {"p": "/api_docs/python/tf/summary/FileWriter", "k": ["__enter__", "__exit__", "__init__", "add_event", "add_graph", "add_meta_graph", "add_run_metadata", "add_session_log", "add_summary", "close", "flush", "get_logdir", "reopen"], "r": "r1.8", "t": "tf.summary.FileWriter"}, {"p": "/api_docs/python/tf/summary/FileWriterCache", "k": ["clear", "get"], "r": "r1.8", "t": "tf.summary.FileWriterCache"}, {"p": "/api_docs/python/tf/summary/SummaryDescription", "k": [], "r": "r1.8", "t": "tf.summary.SummaryDescription"}, {"p": "/api_docs/python/tf/summary/TaggedRunMetadata", "k": [], "r": "r1.8", "t": "tf.summary.TaggedRunMetadata"}, {"p": "/api_docs/python/tf/summary/audio", "k": [], "r": "r1.8", "t": "tf.summary.audio"}, {"p": "/api_docs/python/tf/summary/get_summary_description", "k": [], "r": "r1.8", "t": "tf.summary.get_summary_description"}, {"p": "/api_docs/python/tf/summary/histogram", "k": [], "r": "r1.8", "t": "tf.summary.histogram"}, {"p": "/api_docs/python/tf/summary/image", "k": [], "r": "r1.8", "t": "tf.summary.image"}, {"p": "/api_docs/python/tf/summary/merge", "k": [], "r": "r1.8", "t": "tf.summary.merge"}, {"p": "/api_docs/python/tf/summary/merge_all", "k": [], "r": "r1.8", "t": "tf.summary.merge_all"}, {"p": "/api_docs/python/tf/summary/scalar", "k": [], "r": "r1.8", "t": "tf.summary.scalar"}, {"p": "/api_docs/python/tf/summary/tensor_summary", "k": [], "r": "r1.8", "t": "tf.summary.tensor_summary"}, {"p": "/api_docs/python/tf/summary/text", "k": [], "r": "r1.8", "t": "tf.summary.text"}, {"p": "/api_docs/python/tf/svd", "k": [], "r": "r1.8", "t": "tf.svd"}, {"p": "/api_docs/python/tf/sysconfig", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.sysconfig"}, {"p": "/api_docs/python/tf/sysconfig/get_compile_flags", "k": [], "r": "r1.8", "t": "tf.sysconfig.get_compile_flags"}, {"p": "/api_docs/python/tf/sysconfig/get_include", "k": [], "r": "r1.8", "t": "tf.sysconfig.get_include"}, {"p": "/api_docs/python/tf/sysconfig/get_lib", "k": [], "r": "r1.8", "t": "tf.sysconfig.get_lib"}, {"p": "/api_docs/python/tf/sysconfig/get_link_flags", "k": [], "r": "r1.8", "t": "tf.sysconfig.get_link_flags"}, {"p": "/api_docs/python/tf/tables_initializer", "k": [], "r": "r1.8", "t": "tf.tables_initializer"}, {"p": "/api_docs/python/tf/tan", "k": [], "r": "r1.8", "t": "tf.tan"}, {"p": "/api_docs/python/tf/tanh", "k": [], "r": "r1.8", "t": "tf.tanh"}, {"p": "/api_docs/python/tf/tensordot", "k": [], "r": "r1.8", "t": "tf.tensordot"}, {"p": "/api_docs/python/tf/test", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.test"}, {"p": "/api_docs/python/tf/test/Benchmark", "k": ["is_abstract", "report_benchmark", "run_op_benchmark"], "r": "r1.8", "t": "tf.test.Benchmark"}, {"p": "/api_docs/python/tf/test/StubOutForTesting", "k": ["CleanUp", "Set", "SmartSet", "SmartUnsetAll", "UnsetAll", "__del__", "__enter__", "__exit__", "__init__"], "r": "r1.8", "t": "tf.test.StubOutForTesting"}, {"p": "/api_docs/python/tf/test/TestCase", "k": ["failureException", "__call__", "__eq__", "__init__", "addCleanup", "addTypeEqualityFunc", "assertAllClose", "assertAllCloseAccordingToType", "assertAllEqual", "assertAlmostEqual", "assertAlmostEquals", "assertArrayNear", "assertCountEqual", "assertDeviceEqual", "assertDictContainsSubset", "assertDictEqual", "assertEqual", "assertEquals", "assertFalse", "assertGreater", "assertGreaterEqual", "assertIn", "assertIs", "assertIsInstance", "assertIsNone", "assertIsNot", "assertIsNotNone", "assertItemsEqual", "assertLess", "assertLessEqual", "assertListEqual", "assertLogs", "assertMultiLineEqual", "assertNDArrayNear", "assertNear", "assertNotAlmostEqual", "assertNotAlmostEquals", "assertNotEqual", "assertNotEquals", "assertNotIn", "assertNotIsInstance", "assertNotRegex", "assertNotRegexpMatches", "assertProtoEquals", "assertProtoEqualsVersion", "assertRaises", "assertRaisesOpError", "assertRaisesRegex", "assertRaisesRegexp", "assertRaisesWithPredicateMatch", "assertRegex", "assertRegexpMatches", "assertSequenceEqual", "assertSetEqual", "assertShapeEqual", "assertStartsWith", "assertTrue", "assertTupleEqual", "assertWarns", "assertWarnsRegex", "assert_", "checkedThread", "countTestCases", "debug", "defaultTestResult", "doCleanups", "evaluate", "fail", "failIf", "failIfAlmostEqual", "failIfEqual", "failUnless", "failUnlessAlmostEqual", "failUnlessEqual", "failUnlessRaises", "get_temp_dir", "id", "run", "setUp", "setUpClass", "shortDescription", "skipTest", "subTest", "tearDown", "tearDownClass", "test_session", "longMessage", "maxDiff"], "r": "r1.8", "t": "tf.test.TestCase"}, {"p": "/api_docs/python/tf/test/TestCase/failureException", "k": ["__init__", "__new__"], "r": "r1.8", "t": "tf.test.TestCase.failureException"}, {"p": "/api_docs/python/tf/test/assert_equal_graph_def", "k": [], "r": "r1.8", "t": "tf.test.assert_equal_graph_def"}, {"p": "/api_docs/python/tf/test/compute_gradient", "k": [], "r": "r1.8", "t": "tf.test.compute_gradient"}, {"p": "/api_docs/python/tf/test/compute_gradient_error", "k": [], "r": "r1.8", "t": "tf.test.compute_gradient_error"}, {"p": "/api_docs/python/tf/test/create_local_cluster", "k": [], "r": "r1.8", "t": "tf.test.create_local_cluster"}, {"p": "/api_docs/python/tf/test/get_temp_dir", "k": [], "r": "r1.8", "t": "tf.test.get_temp_dir"}, {"p": "/api_docs/python/tf/test/gpu_device_name", "k": [], "r": "r1.8", "t": "tf.test.gpu_device_name"}, {"p": "/api_docs/python/tf/test/is_built_with_cuda", "k": [], "r": "r1.8", "t": "tf.test.is_built_with_cuda"}, {"p": "/api_docs/python/tf/test/is_gpu_available", "k": [], "r": "r1.8", "t": "tf.test.is_gpu_available"}, {"p": "/api_docs/python/tf/test/main", "k": [], "r": "r1.8", "t": "tf.test.main"}, {"p": "/api_docs/python/tf/test/test_src_dir_path", "k": [], "r": "r1.8", "t": "tf.test.test_src_dir_path"}, {"p": "/api_docs/python/tf/tile", "k": [], "r": "r1.8", "t": "tf.tile"}, {"p": "/api_docs/python/tf/timestamp", "k": [], "r": "r1.8", "t": "tf.timestamp"}, {"p": "/api_docs/python/tf/to_bfloat16", "k": [], "r": "r1.8", "t": "tf.to_bfloat16"}, {"p": "/api_docs/python/tf/to_complex128", "k": [], "r": "r1.8", "t": "tf.to_complex128"}, {"p": "/api_docs/python/tf/to_complex64", "k": [], "r": "r1.8", "t": "tf.to_complex64"}, {"p": "/api_docs/python/tf/to_double", "k": [], "r": "r1.8", "t": "tf.to_double"}, {"p": "/api_docs/python/tf/to_float", "k": [], "r": "r1.8", "t": "tf.to_float"}, {"p": "/api_docs/python/tf/to_int32", "k": [], "r": "r1.8", "t": "tf.to_int32"}, {"p": "/api_docs/python/tf/to_int64", "k": [], "r": "r1.8", "t": "tf.to_int64"}, {"p": "/api_docs/python/tf/tools", "k": [], "r": "r1.8", "t": "tf.tools"}, {"p": "/api_docs/python/tf/trace", "k": [], "r": "r1.8", "t": "tf.trace"}, {"p": "/api_docs/python/tf/train", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.train"}, {"p": "/api_docs/python/tf/train/AdadeltaOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.8", "t": "tf.train.AdadeltaOptimizer"}, {"p": "/api_docs/python/tf/train/AdagradDAOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.8", "t": "tf.train.AdagradDAOptimizer"}, {"p": "/api_docs/python/tf/train/AdagradOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.8", "t": "tf.train.AdagradOptimizer"}, {"p": "/api_docs/python/tf/train/AdamOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.8", "t": "tf.train.AdamOptimizer"}, {"p": "/api_docs/python/tf/train/BytesList", "k": [], "r": "r1.8", "t": "tf.train.BytesList"}, {"p": "/api_docs/python/tf/train/CheckpointSaverHook", "k": ["__init__", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "r1.8", "t": "tf.train.CheckpointSaverHook"}, {"p": "/api_docs/python/tf/train/CheckpointSaverListener", "k": ["after_save", "before_save", "begin", "end"], "r": "r1.8", "t": "tf.train.CheckpointSaverListener"}, {"p": "/api_docs/python/tf/train/ChiefSessionCreator", "k": ["__init__", "create_session"], "r": "r1.8", "t": "tf.train.ChiefSessionCreator"}, {"p": "/api_docs/python/tf/train/ClusterDef", "k": [], "r": "r1.8", "t": "tf.train.ClusterDef"}, {"p": "/api_docs/python/tf/train/ClusterSpec", "k": ["jobs", "__bool__", "__eq__", "__init__", "__ne__", "__nonzero__", "as_cluster_def", "as_dict", "job_tasks", "num_tasks", "task_address", "task_indices"], "r": "r1.8", "t": "tf.train.ClusterSpec"}, {"p": "/api_docs/python/tf/train/Coordinator", "k": ["joined", "__init__", "clear_stop", "join", "raise_requested_exception", "register_thread", "request_stop", "should_stop", "stop_on_exception", "wait_for_stop"], "r": "r1.8", "t": "tf.train.Coordinator"}, {"p": "/api_docs/python/tf/train/Example", "k": [], "r": "r1.8", "t": "tf.train.Example"}, {"p": "/api_docs/python/tf/train/ExponentialMovingAverage", "k": ["__init__", "apply", "average", "average_name", "variables_to_restore"], "r": "r1.8", "t": "tf.train.ExponentialMovingAverage"}, {"p": "/api_docs/python/tf/train/Feature", "k": [], "r": "r1.8", "t": "tf.train.Feature"}, {"p": "/api_docs/python/tf/train/FeatureList", "k": [], "r": "r1.8", "t": "tf.train.FeatureList"}, {"p": "/api_docs/python/tf/train/FeatureLists", "k": ["FeatureListEntry"], "r": "r1.8", "t": "tf.train.FeatureLists"}, {"p": "/api_docs/python/tf/train/FeatureLists/FeatureListEntry", "k": [], "r": "r1.8", "t": "tf.train.FeatureLists.FeatureListEntry"}, {"p": "/api_docs/python/tf/train/Features", "k": ["FeatureEntry"], "r": "r1.8", "t": "tf.train.Features"}, {"p": "/api_docs/python/tf/train/Features/FeatureEntry", "k": [], "r": "r1.8", "t": "tf.train.Features.FeatureEntry"}, {"p": "/api_docs/python/tf/train/FeedFnHook", "k": ["__init__", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "r1.8", "t": "tf.train.FeedFnHook"}, {"p": "/api_docs/python/tf/train/FinalOpsHook", "k": ["final_ops_values", "__init__", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "r1.8", "t": "tf.train.FinalOpsHook"}, {"p": "/api_docs/python/tf/train/FloatList", "k": [], "r": "r1.8", "t": "tf.train.FloatList"}, {"p": "/api_docs/python/tf/train/FtrlOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.8", "t": "tf.train.FtrlOptimizer"}, {"p": "/api_docs/python/tf/train/GlobalStepWaiterHook", "k": ["__init__", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "r1.8", "t": "tf.train.GlobalStepWaiterHook"}, {"p": "/api_docs/python/tf/train/GradientDescentOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.8", "t": "tf.train.GradientDescentOptimizer"}, {"p": "/api_docs/python/tf/train/Int64List", "k": [], "r": "r1.8", "t": "tf.train.Int64List"}, {"p": "/api_docs/python/tf/train/JobDef", "k": ["TasksEntry"], "r": "r1.8", "t": "tf.train.JobDef"}, {"p": "/api_docs/python/tf/train/JobDef/TasksEntry", "k": [], "r": "r1.8", "t": "tf.train.JobDef.TasksEntry"}, {"p": "/api_docs/python/tf/train/LoggingTensorHook", "k": ["__init__", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "r1.8", "t": "tf.train.LoggingTensorHook"}, {"p": "/api_docs/python/tf/train/LooperThread", "k": ["daemon", "ident", "name", "__init__", "getName", "isAlive", "isDaemon", "is_alive", "join", "loop", "run", "run_loop", "setDaemon", "setName", "start", "start_loop", "stop_loop"], "r": "r1.8", "t": "tf.train.LooperThread"}, {"p": "/api_docs/python/tf/train/MomentumOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.8", "t": "tf.train.MomentumOptimizer"}, {"p": "/api_docs/python/tf/train/MonitoredSession", "k": ["StepContext", "graph", "__enter__", "__exit__", "__init__", "close", "run", "run_step_fn", "should_stop"], "r": "r1.8", "t": "tf.train.MonitoredSession"}, {"p": "/api_docs/python/tf/train/MonitoredSession/StepContext", "k": ["session", "__init__", "request_stop", "run_with_hooks"], "r": "r1.8", "t": "tf.train.MonitoredSession.StepContext"}, {"p": "/api_docs/python/tf/train/MonitoredTrainingSession", "k": [], "r": "r1.8", "t": "tf.train.MonitoredTrainingSession"}, {"p": "/api_docs/python/tf/train/NanLossDuringTrainingError", "k": ["__init__", "__new__"], "r": "r1.8", "t": "tf.train.NanLossDuringTrainingError"}, {"p": "/api_docs/python/tf/train/NanTensorHook", "k": ["__init__", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "r1.8", "t": "tf.train.NanTensorHook"}, {"p": "/api_docs/python/tf/train/NewCheckpointReader", "k": [], "r": "r1.8", "t": "tf.train.NewCheckpointReader"}, {"p": "/api_docs/python/tf/train/Optimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.8", "t": "tf.train.Optimizer"}, {"p": "/api_docs/python/tf/train/ProfilerHook", "k": ["__init__", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "r1.8", "t": "tf.train.ProfilerHook"}, {"p": "/api_docs/python/tf/train/ProximalAdagradOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.8", "t": "tf.train.ProximalAdagradOptimizer"}, {"p": "/api_docs/python/tf/train/ProximalGradientDescentOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.8", "t": "tf.train.ProximalGradientDescentOptimizer"}, {"p": "/api_docs/python/tf/train/QueueRunner", "k": ["cancel_op", "close_op", "enqueue_ops", "exceptions_raised", "name", "queue", "queue_closed_exception_types", "__init__", "create_threads", "from_proto", "to_proto"], "r": "r1.8", "t": "tf.train.QueueRunner"}, {"p": "/api_docs/python/tf/train/RMSPropOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.8", "t": "tf.train.RMSPropOptimizer"}, {"p": "/api_docs/python/tf/train/Saver", "k": ["last_checkpoints", "__init__", "as_saver_def", "build", "export_meta_graph", "from_proto", "recover_last_checkpoints", "restore", "save", "set_last_checkpoints", "set_last_checkpoints_with_time", "to_proto"], "r": "r1.8", "t": "tf.train.Saver"}, {"p": "/api_docs/python/tf/train/SaverDef", "k": ["CheckpointFormatVersion", "LEGACY", "V1", "V2"], "r": "r1.8", "t": "tf.train.SaverDef"}, {"p": "/api_docs/python/tf/train/Scaffold", "k": ["init_feed_dict", "init_fn", "init_op", "local_init_op", "ready_for_local_init_op", "ready_op", "saver", "summary_op", "__init__", "finalize", "get_or_default"], "r": "r1.8", "t": "tf.train.Scaffold"}, {"p": "/api_docs/python/tf/train/SecondOrStepTimer", "k": ["__init__", "last_triggered_step", "reset", "should_trigger_for_step", "update_last_triggered_step"], "r": "r1.8", "t": "tf.train.SecondOrStepTimer"}, {"p": "/api_docs/python/tf/train/SequenceExample", "k": [], "r": "r1.8", "t": "tf.train.SequenceExample"}, {"p": "/api_docs/python/tf/train/Server", "k": ["server_def", "target", "__init__", "create_local_server", "join", "start"], "r": "r1.8", "t": "tf.train.Server"}, {"p": "/api_docs/python/tf/train/ServerDef", "k": [], "r": "r1.8", "t": "tf.train.ServerDef"}, {"p": "/api_docs/python/tf/train/SessionCreator", "k": ["create_session"], "r": "r1.8", "t": "tf.train.SessionCreator"}, {"p": "/api_docs/python/tf/train/SessionManager", "k": ["__init__", "prepare_session", "recover_session", "wait_for_session"], "r": "r1.8", "t": "tf.train.SessionManager"}, {"p": "/api_docs/python/tf/train/SessionRunArgs", "k": ["feed_dict", "fetches", "options", "__new__"], "r": "r1.8", "t": "tf.train.SessionRunArgs"}, {"p": "/api_docs/python/tf/train/SessionRunContext", "k": ["original_args", "session", "stop_requested", "__init__", "request_stop"], "r": "r1.8", "t": "tf.train.SessionRunContext"}, {"p": "/api_docs/python/tf/train/SessionRunHook", "k": ["after_create_session", "after_run", "before_run", "begin", "end"], "r": "r1.8", "t": "tf.train.SessionRunHook"}, {"p": "/api_docs/python/tf/train/SessionRunValues", "k": ["options", "results", "run_metadata", "__new__"], "r": "r1.8", "t": "tf.train.SessionRunValues"}, {"p": "/api_docs/python/tf/train/SingularMonitoredSession", "k": ["StepContext", "graph", "__enter__", "__exit__", "__init__", "close", "raw_session", "run", "run_step_fn", "should_stop"], "r": "r1.8", "t": "tf.train.SingularMonitoredSession"}, {"p": "/api_docs/python/tf/train/StepCounterHook", "k": ["__init__", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "r1.8", "t": "tf.train.StepCounterHook"}, {"p": "/api_docs/python/tf/train/StopAtStepHook", "k": ["__init__", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "r1.8", "t": "tf.train.StopAtStepHook"}, {"p": "/api_docs/python/tf/train/SummarySaverHook", "k": ["__init__", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "r1.8", "t": "tf.train.SummarySaverHook"}, {"p": "/api_docs/python/tf/train/Supervisor", "k": ["coord", "global_step", "init_feed_dict", "init_op", "is_chief", "ready_for_local_init_op", "ready_op", "save_model_secs", "save_path", "save_summaries_secs", "saver", "session_manager", "summary_op", "summary_writer", "Loop", "PrepareSession", "RequestStop", "ShouldStop", "StartQueueRunners", "StartStandardServices", "Stop", "StopOnException", "SummaryComputed", "WaitForStop", "__init__", "loop", "managed_session", "prepare_or_wait_for_session", "request_stop", "should_stop", "start_queue_runners", "start_standard_services", "stop", "stop_on_exception", "summary_computed", "wait_for_stop", "USE_DEFAULT"], "r": "r1.8", "t": "tf.train.Supervisor"}, {"p": "/api_docs/python/tf/train/SyncReplicasOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_chief_queue_runner", "get_init_tokens_op", "get_name", "get_slot", "get_slot_names", "make_session_run_hook", "minimize", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.8", "t": "tf.train.SyncReplicasOptimizer"}, {"p": "/api_docs/python/tf/train/WorkerSessionCreator", "k": ["__init__", "create_session"], "r": "r1.8", "t": "tf.train.WorkerSessionCreator"}, {"p": "/api_docs/python/tf/train/add_queue_runner", "k": [], "r": "r1.8", "t": "tf.train.add_queue_runner"}, {"p": "/api_docs/python/tf/train/assert_global_step", "k": [], "r": "r1.8", "t": "tf.train.assert_global_step"}, {"p": "/api_docs/python/tf/train/basic_train_loop", "k": [], "r": "r1.8", "t": "tf.train.basic_train_loop"}, {"p": "/api_docs/python/tf/train/batch", "k": [], "r": "r1.8", "t": "tf.train.batch"}, {"p": "/api_docs/python/tf/train/batch_join", "k": [], "r": "r1.8", "t": "tf.train.batch_join"}, {"p": "/api_docs/python/tf/train/checkpoint_exists", "k": [], "r": "r1.8", "t": "tf.train.checkpoint_exists"}, {"p": "/api_docs/python/tf/train/cosine_decay", "k": [], "r": "r1.8", "t": "tf.train.cosine_decay"}, {"p": "/api_docs/python/tf/train/cosine_decay_restarts", "k": [], "r": "r1.8", "t": "tf.train.cosine_decay_restarts"}, {"p": "/api_docs/python/tf/train/create_global_step", "k": [], "r": "r1.8", "t": "tf.train.create_global_step"}, {"p": "/api_docs/python/tf/train/do_quantize_training_on_graphdef", "k": [], "r": "r1.8", "t": "tf.train.do_quantize_training_on_graphdef"}, {"p": "/api_docs/python/tf/train/exponential_decay", "k": [], "r": "r1.8", "t": "tf.train.exponential_decay"}, {"p": "/api_docs/python/tf/train/export_meta_graph", "k": [], "r": "r1.8", "t": "tf.train.export_meta_graph"}, {"p": "/api_docs/python/tf/train/generate_checkpoint_state_proto", "k": [], "r": "r1.8", "t": "tf.train.generate_checkpoint_state_proto"}, {"p": "/api_docs/python/tf/train/get_checkpoint_mtimes", "k": [], "r": "r1.8", "t": "tf.train.get_checkpoint_mtimes"}, {"p": "/api_docs/python/tf/train/get_checkpoint_state", "k": [], "r": "r1.8", "t": "tf.train.get_checkpoint_state"}, {"p": "/api_docs/python/tf/train/get_global_step", "k": [], "r": "r1.8", "t": "tf.train.get_global_step"}, {"p": "/api_docs/python/tf/train/get_or_create_global_step", "k": [], "r": "r1.8", "t": "tf.train.get_or_create_global_step"}, {"p": "/api_docs/python/tf/train/global_step", "k": [], "r": "r1.8", "t": "tf.train.global_step"}, {"p": "/api_docs/python/tf/train/import_meta_graph", "k": [], "r": "r1.8", "t": "tf.train.import_meta_graph"}, {"p": "/api_docs/python/tf/train/init_from_checkpoint", "k": [], "r": "r1.8", "t": "tf.train.init_from_checkpoint"}, {"p": "/api_docs/python/tf/train/input_producer", "k": [], "r": "r1.8", "t": "tf.train.input_producer"}, {"p": "/api_docs/python/tf/train/inverse_time_decay", "k": [], "r": "r1.8", "t": "tf.train.inverse_time_decay"}, {"p": "/api_docs/python/tf/train/latest_checkpoint", "k": [], "r": "r1.8", "t": "tf.train.latest_checkpoint"}, {"p": "/api_docs/python/tf/train/limit_epochs", "k": [], "r": "r1.8", "t": "tf.train.limit_epochs"}, {"p": "/api_docs/python/tf/train/linear_cosine_decay", "k": [], "r": "r1.8", "t": "tf.train.linear_cosine_decay"}, {"p": "/api_docs/python/tf/train/list_variables", "k": [], "r": "r1.8", "t": "tf.train.list_variables"}, {"p": "/api_docs/python/tf/train/load_checkpoint", "k": [], "r": "r1.8", "t": "tf.train.load_checkpoint"}, {"p": "/api_docs/python/tf/train/load_variable", "k": [], "r": "r1.8", "t": "tf.train.load_variable"}, {"p": "/api_docs/python/tf/train/match_filenames_once", "k": [], "r": "r1.8", "t": "tf.train.match_filenames_once"}, {"p": "/api_docs/python/tf/train/maybe_batch", "k": [], "r": "r1.8", "t": "tf.train.maybe_batch"}, {"p": "/api_docs/python/tf/train/maybe_batch_join", "k": [], "r": "r1.8", "t": "tf.train.maybe_batch_join"}, {"p": "/api_docs/python/tf/train/maybe_shuffle_batch", "k": [], "r": "r1.8", "t": "tf.train.maybe_shuffle_batch"}, {"p": "/api_docs/python/tf/train/maybe_shuffle_batch_join", "k": [], "r": "r1.8", "t": "tf.train.maybe_shuffle_batch_join"}, {"p": "/api_docs/python/tf/train/natural_exp_decay", "k": [], "r": "r1.8", "t": "tf.train.natural_exp_decay"}, {"p": "/api_docs/python/tf/train/noisy_linear_cosine_decay", "k": [], "r": "r1.8", "t": "tf.train.noisy_linear_cosine_decay"}, {"p": "/api_docs/python/tf/train/piecewise_constant", "k": [], "r": "r1.8", "t": "tf.train.piecewise_constant"}, {"p": "/api_docs/python/tf/train/polynomial_decay", "k": [], "r": "r1.8", "t": "tf.train.polynomial_decay"}, {"p": "/api_docs/python/tf/train/queue_runner", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tf.train.queue_runner"}, {"p": "/api_docs/python/tf/train/range_input_producer", "k": [], "r": "r1.8", "t": "tf.train.range_input_producer"}, {"p": "/api_docs/python/tf/train/replica_device_setter", "k": [], "r": "r1.8", "t": "tf.train.replica_device_setter"}, {"p": "/api_docs/python/tf/train/sdca_fprint", "k": [], "r": "r1.8", "t": "tf.train.sdca_fprint"}, {"p": "/api_docs/python/tf/train/sdca_optimizer", "k": [], "r": "r1.8", "t": "tf.train.sdca_optimizer"}, {"p": "/api_docs/python/tf/train/sdca_shrink_l1", "k": [], "r": "r1.8", "t": "tf.train.sdca_shrink_l1"}, {"p": "/api_docs/python/tf/train/shuffle_batch", "k": [], "r": "r1.8", "t": "tf.train.shuffle_batch"}, {"p": "/api_docs/python/tf/train/shuffle_batch_join", "k": [], "r": "r1.8", "t": "tf.train.shuffle_batch_join"}, {"p": "/api_docs/python/tf/train/slice_input_producer", "k": [], "r": "r1.8", "t": "tf.train.slice_input_producer"}, {"p": "/api_docs/python/tf/train/start_queue_runners", "k": [], "r": "r1.8", "t": "tf.train.start_queue_runners"}, {"p": "/api_docs/python/tf/train/string_input_producer", "k": [], "r": "r1.8", "t": "tf.train.string_input_producer"}, {"p": "/api_docs/python/tf/train/summary_iterator", "k": [], "r": "r1.8", "t": "tf.train.summary_iterator"}, {"p": "/api_docs/python/tf/train/update_checkpoint_state", "k": [], "r": "r1.8", "t": "tf.train.update_checkpoint_state"}, {"p": "/api_docs/python/tf/train/warm_start", "k": [], "r": "r1.8", "t": "tf.train.warm_start"}, {"p": "/api_docs/python/tf/train/write_graph", "k": [], "r": "r1.8", "t": "tf.train.write_graph"}, {"p": "/api_docs/python/tf/trainable_variables", "k": [], "r": "r1.8", "t": "tf.trainable_variables"}, {"p": "/api_docs/python/tf/transpose", "k": [], "r": "r1.8", "t": "tf.transpose"}, {"p": "/api_docs/python/tf/truediv", "k": [], "r": "r1.8", "t": "tf.truediv"}, {"p": "/api_docs/python/tf/truncated_normal", "k": [], "r": "r1.8", "t": "tf.truncated_normal"}, {"p": "/api_docs/python/tf/truncated_normal_initializer", "k": ["__call__", "__init__", "from_config", "get_config"], "r": "r1.8", "t": "tf.truncated_normal_initializer"}, {"p": "/api_docs/python/tf/truncatediv", "k": [], "r": "r1.8", "t": "tf.truncatediv"}, {"p": "/api_docs/python/tf/truncatemod", "k": [], "r": "r1.8", "t": "tf.truncatemod"}, {"p": "/api_docs/python/tf/tuple", "k": [], "r": "r1.8", "t": "tf.tuple"}, {"p": "/api_docs/python/tf/uniform_unit_scaling_initializer", "k": ["__call__", "__init__", "from_config", "get_config"], "r": "r1.8", "t": "tf.uniform_unit_scaling_initializer"}, {"p": "/api_docs/python/tf/unique", "k": [], "r": "r1.8", "t": "tf.unique"}, {"p": "/api_docs/python/tf/unique_with_counts", "k": [], "r": "r1.8", "t": "tf.unique_with_counts"}, {"p": "/api_docs/python/tf/unravel_index", "k": [], "r": "r1.8", "t": "tf.unravel_index"}, {"p": "/api_docs/python/tf/unsorted_segment_max", "k": [], "r": "r1.8", "t": "tf.unsorted_segment_max"}, {"p": "/api_docs/python/tf/unsorted_segment_mean", "k": [], "r": "r1.8", "t": "tf.unsorted_segment_mean"}, {"p": "/api_docs/python/tf/unsorted_segment_min", "k": [], "r": "r1.8", "t": "tf.unsorted_segment_min"}, {"p": "/api_docs/python/tf/unsorted_segment_prod", "k": [], "r": "r1.8", "t": "tf.unsorted_segment_prod"}, {"p": "/api_docs/python/tf/unsorted_segment_sqrt_n", "k": [], "r": "r1.8", "t": "tf.unsorted_segment_sqrt_n"}, {"p": "/api_docs/python/tf/unsorted_segment_sum", "k": [], "r": "r1.8", "t": "tf.unsorted_segment_sum"}, {"p": "/api_docs/python/tf/unstack", "k": [], "r": "r1.8", "t": "tf.unstack"}, {"p": "/api_docs/python/tf/user_ops", "k": [], "r": "r1.8", "t": "tf.user_ops"}, {"p": "/api_docs/python/tf/variable_axis_size_partitioner", "k": [], "r": "r1.8", "t": "tf.variable_axis_size_partitioner"}, {"p": "/api_docs/python/tf/variable_op_scope", "k": [], "r": "r1.8", "t": "tf.variable_op_scope"}, {"p": "/api_docs/python/tf/variable_scope", "k": ["__enter__", "__exit__", "__init__"], "r": "r1.8", "t": "tf.variable_scope"}, {"p": "/api_docs/python/tf/variables_initializer", "k": [], "r": "r1.8", "t": "tf.variables_initializer"}, {"p": "/api_docs/python/tf/variance_scaling_initializer", "k": ["__call__", "__init__", "from_config", "get_config"], "r": "r1.8", "t": "tf.variance_scaling_initializer"}, {"p": "/api_docs/python/tf/verify_tensor_all_finite", "k": [], "r": "r1.8", "t": "tf.verify_tensor_all_finite"}, {"p": "/api_docs/python/tf/where", "k": [], "r": "r1.8", "t": "tf.where"}, {"p": "/api_docs/python/tf/while_loop", "k": [], "r": "r1.8", "t": "tf.while_loop"}, {"p": "/api_docs/python/tf/write_file", "k": [], "r": "r1.8", "t": "tf.write_file"}, {"p": "/api_docs/python/tf/zeros", "k": [], "r": "r1.8", "t": "tf.zeros"}, {"p": "/api_docs/python/tf/zeros_initializer", "k": ["__call__", "__init__", "from_config", "get_config"], "r": "r1.8", "t": "tf.zeros_initializer"}, {"p": "/api_docs/python/tf/zeros_like", "k": [], "r": "r1.8", "t": "tf.zeros_like"}, {"p": "/api_docs/python/tf/zeta", "k": [], "r": "r1.8", "t": "tf.zeta"}, {"p": "/api_docs/python/tfdbg", "k": ["__cached__", "__loader__", "__spec__"], "r": "r1.8", "t": "tfdbg"}, {"p": "/api_docs/python/tfdbg/DebugDumpDir", "k": ["core_metadata", "dumped_tensor_data", "python_graph", "run_feed_keys_info", "run_fetches_info", "size", "t0", "__init__", "debug_watch_keys", "devices", "find", "find_some_path", "get_dump_sizes_bytes", "get_rel_timestamps", "get_tensor_file_paths", "get_tensors", "loaded_partition_graphs", "node_attributes", "node_device", "node_exists", "node_inputs", "node_op_type", "node_recipients", "node_traceback", "nodes", "partition_graphs", "reconstructed_non_debug_partition_graphs", "set_python_graph", "transitive_inputs", "watch_key_to_data"], "r": "r1.8", "t": "tfdbg.DebugDumpDir"}, {"p": "/api_docs/python/tfdbg/DebugTensorDatum", "k": ["debug_op", "device_name", "dump_size_bytes", "extended_timestamp", "file_path", "node_name", "output_slot", "tensor_name", "timestamp", "watch_key", "__init__", "get_tensor"], "r": "r1.8", "t": "tfdbg.DebugTensorDatum"}, {"p": "/api_docs/python/tfdbg/DumpingDebugHook", "k": ["__init__", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "r1.8", "t": "tfdbg.DumpingDebugHook"}, {"p": "/api_docs/python/tfdbg/DumpingDebugWrapperSession", "k": ["graph", "graph_def", "run_call_count", "sess_str", "session", "__enter__", "__exit__", "__init__", "as_default", "close", "increment_run_call_count", "invoke_node_stepper", "list_devices", "make_callable", "on_run_end", "on_run_start", "on_session_init", "partial_run", "partial_run_setup", "prepare_run_debug_urls", "reset", "run", "run_step_fn", "should_stop"], "r": "r1.8", "t": "tfdbg.DumpingDebugWrapperSession"}, {"p": "/api_docs/python/tfdbg/GradientsDebugger", "k": ["graph", "y_tensor", "__enter__", "__exit__", "__init__", "gradient_tensor", "gradient_tensors", "identify_gradient", "register_gradient_tensor", "watch_gradients_by_tensor_names", "watch_gradients_by_tensors"], "r": "r1.8", "t": "tfdbg.GradientsDebugger"}, {"p": "/api_docs/python/tfdbg/GrpcDebugHook", "k": ["__init__", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "r1.8", "t": "tfdbg.GrpcDebugHook"}, {"p": "/api_docs/python/tfdbg/GrpcDebugWrapperSession", "k": ["graph", "graph_def", "run_call_count", "sess_str", "session", "__enter__", "__exit__", "__init__", "as_default", "close", "increment_run_call_count", "invoke_node_stepper", "list_devices", "make_callable", "on_run_end", "on_run_start", "on_session_init", "partial_run", "partial_run_setup", "prepare_run_debug_urls", "reset", "run", "run_step_fn", "should_stop"], "r": "r1.8", "t": "tfdbg.GrpcDebugWrapperSession"}, {"p": "/api_docs/python/tfdbg/LocalCLIDebugHook", "k": ["__init__", "add_tensor_filter", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "r1.8", "t": "tfdbg.LocalCLIDebugHook"}, {"p": "/api_docs/python/tfdbg/LocalCLIDebugWrapperSession", "k": ["graph", "graph_def", "run_call_count", "sess_str", "session", "__enter__", "__exit__", "__init__", "add_tensor_filter", "as_default", "close", "increment_run_call_count", "invoke_node_stepper", "list_devices", "make_callable", "on_run_end", "on_run_start", "on_session_init", "partial_run", "partial_run_setup", "reset", "run", "run_step_fn", "should_stop"], "r": "r1.8", "t": "tfdbg.LocalCLIDebugWrapperSession"}, {"p": "/api_docs/python/tfdbg/TensorBoardDebugHook", "k": ["__init__", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "r1.8", "t": "tfdbg.TensorBoardDebugHook"}, {"p": "/api_docs/python/tfdbg/TensorBoardDebugWrapperSession", "k": ["graph", "graph_def", "run_call_count", "sess_str", "session", "__enter__", "__exit__", "__init__", "as_default", "close", "increment_run_call_count", "invoke_node_stepper", "list_devices", "make_callable", "on_run_end", "on_run_start", "on_session_init", "partial_run", "partial_run_setup", "prepare_run_debug_urls", "reset", "run", "run_step_fn", "should_stop"], "r": "r1.8", "t": "tfdbg.TensorBoardDebugWrapperSession"}, {"p": "/api_docs/python/tfdbg/WatchOptions", "k": ["__init__"], "r": "r1.8", "t": "tfdbg.WatchOptions"}, {"p": "/api_docs/python/tfdbg/add_debug_tensor_watch", "k": [], "r": "r1.8", "t": "tfdbg.add_debug_tensor_watch"}, {"p": "/api_docs/python/tfdbg/has_inf_or_nan", "k": [], "r": "r1.8", "t": "tfdbg.has_inf_or_nan"}, {"p": "/api_docs/python/tfdbg/load_tensor_from_event", "k": [], "r": "r1.8", "t": "tfdbg.load_tensor_from_event"}, {"p": "/api_docs/python/tfdbg/load_tensor_from_event_file", "k": [], "r": "r1.8", "t": "tfdbg.load_tensor_from_event_file"}, {"p": "/api_docs/python/tfdbg/reconstruct_non_debug_graph_def", "k": [], "r": "r1.8", "t": "tfdbg.reconstruct_non_debug_graph_def"}, {"p": "/api_docs/python/tfdbg/watch_graph", "k": [], "r": "r1.8", "t": "tfdbg.watch_graph"}, {"p": "/api_docs/python/tfdbg/watch_graph_with_blacklists", "k": [], "r": "r1.8", "t": "tfdbg.watch_graph_with_blacklists"}, {"p": "/versions/master/api_docs/python/hub/", "k": ["__version__"], "r": "master", "t": "hub"}, {"p": "/versions/master/api_docs/python/hub/LatestModuleExporter", "k": ["name", "__init__", "export"], "r": "master", "t": "hub.LatestModuleExporter"}, {"p": "/versions/master/api_docs/python/hub/Module", "k": ["variable_map", "__call__", "__init__", "export", "get_input_info_dict", "get_output_info_dict", "get_signature_names"], "r": "master", "t": "hub.Module"}, {"p": "/versions/master/api_docs/python/hub/ModuleSpec", "k": ["__init__", "get_input_info_dict", "get_output_info_dict", "get_signature_names", "get_tags"], "r": "master", "t": "hub.ModuleSpec"}, {"p": "/versions/master/api_docs/python/hub/add_signature", "k": [], "r": "master", "t": "hub.add_signature"}, {"p": "/versions/master/api_docs/python/hub/create_module_spec", "k": [], "r": "master", "t": "hub.create_module_spec"}, {"p": "/versions/master/api_docs/python/hub/get_expected_image_size", "k": [], "r": "master", "t": "hub.get_expected_image_size"}, {"p": "/versions/master/api_docs/python/hub/get_num_image_channels", "k": [], "r": "master", "t": "hub.get_num_image_channels"}, {"p": "/versions/master/api_docs/python/hub/image_embedding_column", "k": [], "r": "master", "t": "hub.image_embedding_column"}, {"p": "/versions/master/api_docs/python/hub/load_module_spec", "k": [], "r": "master", "t": "hub.load_module_spec"}, {"p": "/versions/master/api_docs/python/hub/register_module_for_export", "k": [], "r": "master", "t": "hub.register_module_for_export"}, {"p": "/versions/master/api_docs/python/hub/text_embedding_column", "k": [], "r": "master", "t": "hub.text_embedding_column"}, {"p": "/versions/master/api_docs/python/tf", "k": ["AUTO_REUSE", "COMPILER_VERSION", "CXX11_ABI_FLAG", "GIT_VERSION", "GRAPH_DEF_VERSION", "GRAPH_DEF_VERSION_MIN_CONSUMER", "GRAPH_DEF_VERSION_MIN_PRODUCER", "MONOLITHIC_BUILD", "QUANTIZED_DTYPES", "VERSION", "__compiler_version__", "__cxx11_abi_flag__", "__git_version__", "__monolithic_build__", "__version__", "bfloat16", "bool", "complex128", "complex64", "double", "float16", "float32", "float64", "half", "int16", "int32", "int64", "int8", "newaxis", "qint16", "qint32", "qint8", "quint16", "quint8", "resource", "string", "uint16", "uint32", "uint64", "uint8", "variant"], "r": "master", "t": "tf"}, {"p": "/versions/master/api_docs/python/tf/AggregationMethod", "k": ["ADD_N", "DEFAULT", "EXPERIMENTAL_ACCUMULATE_N", "EXPERIMENTAL_TREE"], "r": "master", "t": "tf.AggregationMethod"}, {"p": "/versions/master/api_docs/python/tf/Assert", "k": [], "r": "master", "t": "tf.Assert"}, {"p": "/versions/master/api_docs/python/tf/AttrValue", "k": ["ListValue"], "r": "master", "t": "tf.AttrValue"}, {"p": "/versions/master/api_docs/python/tf/AttrValue/ListValue", "k": [], "r": "master", "t": "tf.AttrValue.ListValue"}, {"p": "/versions/master/api_docs/python/tf/ConditionalAccumulator", "k": ["accumulator_ref", "dtype", "name", "__init__", "apply_grad", "num_accumulated", "set_global_step", "take_grad"], "r": "master", "t": "tf.ConditionalAccumulator"}, {"p": "/versions/master/api_docs/python/tf/ConditionalAccumulatorBase", "k": ["accumulator_ref", "dtype", "name", "__init__", "num_accumulated", "set_global_step"], "r": "master", "t": "tf.ConditionalAccumulatorBase"}, {"p": "/versions/master/api_docs/python/tf/ConfigProto", "k": ["DeviceCountEntry"], "r": "master", "t": "tf.ConfigProto"}, {"p": "/versions/master/api_docs/python/tf/ConfigProto/DeviceCountEntry", "k": [], "r": "master", "t": "tf.ConfigProto.DeviceCountEntry"}, {"p": "/versions/master/api_docs/python/tf/DType", "k": ["as_datatype_enum", "as_numpy_dtype", "base_dtype", "is_bool", "is_complex", "is_floating", "is_integer", "is_numpy_compatible", "is_quantized", "is_unsigned", "limits", "max", "min", "name", "real_dtype", "size", "__eq__", "__init__", "__int__", "__ne__", "is_compatible_with"], "r": "master", "t": "tf.DType"}, {"p": "/versions/master/api_docs/python/tf/DeviceSpec", "k": ["job", "replica", "task", "__init__", "from_string", "merge_from", "parse_from_string", "to_string"], "r": "master", "t": "tf.DeviceSpec"}, {"p": "/versions/master/api_docs/python/tf/Dimension", "k": ["value", "__add__", "__div__", "__eq__", "__floordiv__", "__ge__", "__gt__", "__index__", "__init__", "__int__", "__le__", "__long__", "__lt__", "__mod__", "__mul__", "__ne__", "__radd__", "__rfloordiv__", "__rmod__", "__rmul__", "__rsub__", "__sub__", "assert_is_compatible_with", "is_compatible_with", "merge_with"], "r": "master", "t": "tf.Dimension"}, {"p": "/versions/master/api_docs/python/tf/Event", "k": [], "r": "master", "t": "tf.Event"}, {"p": "/versions/master/api_docs/python/tf/FIFOQueue", "k": ["dtypes", "name", "names", "queue_ref", "shapes", "__init__", "close", "dequeue", "dequeue_many", "dequeue_up_to", "enqueue", "enqueue_many", "from_list", "is_closed", "size"], "r": "master", "t": "tf.FIFOQueue"}, {"p": "/versions/master/api_docs/python/tf/FixedLenFeature", "k": ["default_value", "dtype", "shape", "__new__"], "r": "master", "t": "tf.FixedLenFeature"}, {"p": "/versions/master/api_docs/python/tf/FixedLenSequenceFeature", "k": ["allow_missing", "default_value", "dtype", "shape", "__new__"], "r": "master", "t": "tf.FixedLenSequenceFeature"}, {"p": "/versions/master/api_docs/python/tf/FixedLengthRecordReader", "k": ["reader_ref", "supports_serialize", "__init__", "num_records_produced", "num_work_units_completed", "read", "read_up_to", "reset", "restore_state", "serialize_state"], "r": "master", "t": "tf.FixedLengthRecordReader"}, {"p": "/versions/master/api_docs/python/tf/GPUOptions", "k": ["Experimental"], "r": "master", "t": "tf.GPUOptions"}, {"p": "/versions/master/api_docs/python/tf/GPUOptions/Experimental", "k": ["VirtualDevices"], "r": "master", "t": "tf.GPUOptions.Experimental"}, {"p": "/versions/master/api_docs/python/tf/GPUOptions/Experimental/VirtualDevices", "k": [], "r": "master", "t": "tf.GPUOptions.Experimental.VirtualDevices"}, {"p": "/versions/master/api_docs/python/tf/GradientTape", "k": ["__enter__", "__exit__", "__init__", "gradient", "watch", "watched_variables"], "r": "master", "t": "tf.GradientTape"}, {"p": "/versions/master/api_docs/python/tf/Graph", "k": ["building_function", "collections", "finalized", "graph_def_versions", "seed", "version", "__init__", "add_to_collection", "add_to_collections", "as_default", "as_graph_def", "as_graph_element", "clear_collection", "colocate_with", "container", "control_dependencies", "create_op", "device", "finalize", "get_all_collection_keys", "get_collection", "get_collection_ref", "get_name_scope", "get_operation_by_name", "get_operations", "get_tensor_by_name", "gradient_override_map", "is_feedable", "is_fetchable", "name_scope", "prevent_feeding", "prevent_fetching", "switch_to_thread_local", "unique_name"], "r": "master", "t": "tf.Graph"}, {"p": "/versions/master/api_docs/python/tf/GraphDef", "k": [], "r": "master", "t": "tf.GraphDef"}, {"p": "/versions/master/api_docs/python/tf/GraphKeys", "k": ["ACTIVATIONS", "ASSET_FILEPATHS", "BIASES", "CONCATENATED_VARIABLES", "COND_CONTEXT", "EVAL_STEP", "GLOBAL_STEP", "GLOBAL_VARIABLES", "INIT_OP", "LOCAL_INIT_OP", "LOCAL_RESOURCES", "LOCAL_VARIABLES", "LOSSES", "METRIC_VARIABLES", "MODEL_VARIABLES", "MOVING_AVERAGE_VARIABLES", "QUEUE_RUNNERS", "READY_FOR_LOCAL_INIT_OP", "READY_OP", "REGULARIZATION_LOSSES", "RESOURCES", "SAVEABLE_OBJECTS", "SAVERS", "SUMMARIES", "SUMMARY_OP", "TABLE_INITIALIZERS", "TRAINABLE_RESOURCE_VARIABLES", "TRAINABLE_VARIABLES", "TRAIN_OP", "UPDATE_OPS", "VARIABLES", "WEIGHTS", "WHILE_CONTEXT"], "r": "master", "t": "tf.GraphKeys"}, {"p": "/versions/master/api_docs/python/tf/GraphOptions", "k": [], "r": "master", "t": "tf.GraphOptions"}, {"p": "/versions/master/api_docs/python/tf/HistogramProto", "k": [], "r": "master", "t": "tf.HistogramProto"}, {"p": "/versions/master/api_docs/python/tf/IdentityReader", "k": ["reader_ref", "supports_serialize", "__init__", "num_records_produced", "num_work_units_completed", "read", "read_up_to", "reset", "restore_state", "serialize_state"], "r": "master", "t": "tf.IdentityReader"}, {"p": "/versions/master/api_docs/python/tf/IndexedSlices", "k": ["dense_shape", "device", "dtype", "graph", "indices", "name", "op", "values", "__init__", "__neg__"], "r": "master", "t": "tf.IndexedSlices"}, {"p": "/versions/master/api_docs/python/tf/InteractiveSession", "k": ["graph", "graph_def", "sess_str", "__init__", "as_default", "close", "list_devices", "make_callable", "partial_run", "partial_run_setup", "run"], "r": "master", "t": "tf.InteractiveSession"}, {"p": "/versions/master/api_docs/python/tf/LMDBReader", "k": ["reader_ref", "supports_serialize", "__init__", "num_records_produced", "num_work_units_completed", "read", "read_up_to", "reset", "restore_state", "serialize_state"], "r": "master", "t": "tf.LMDBReader"}, {"p": "/versions/master/api_docs/python/tf/LogMessage", "k": ["DEBUGGING", "ERROR", "FATAL", "INFO", "Level", "UNKNOWN", "WARN"], "r": "master", "t": "tf.LogMessage"}, {"p": "/versions/master/api_docs/python/tf/MetaGraphDef", "k": ["CollectionDefEntry", "MetaInfoDef", "SignatureDefEntry"], "r": "master", "t": "tf.MetaGraphDef"}, {"p": "/versions/master/api_docs/python/tf/MetaGraphDef/CollectionDefEntry", "k": [], "r": "master", "t": "tf.MetaGraphDef.CollectionDefEntry"}, {"p": "/versions/master/api_docs/python/tf/MetaGraphDef/MetaInfoDef", "k": [], "r": "master", "t": "tf.MetaGraphDef.MetaInfoDef"}, {"p": "/versions/master/api_docs/python/tf/MetaGraphDef/SignatureDefEntry", "k": [], "r": "master", "t": "tf.MetaGraphDef.SignatureDefEntry"}, {"p": "/versions/master/api_docs/python/tf/NameAttrList", "k": ["AttrEntry"], "r": "master", "t": "tf.NameAttrList"}, {"p": "/versions/master/api_docs/python/tf/NameAttrList/AttrEntry", "k": [], "r": "master", "t": "tf.NameAttrList.AttrEntry"}, {"p": "/versions/master/api_docs/python/tf/NoGradient", "k": [], "r": "master", "t": "tf.NoGradient"}, {"p": "/versions/master/api_docs/python/tf/NodeDef", "k": ["AttrEntry"], "r": "master", "t": "tf.NodeDef"}, {"p": "/versions/master/api_docs/python/tf/NodeDef/AttrEntry", "k": [], "r": "master", "t": "tf.NodeDef.AttrEntry"}, {"p": "/versions/master/api_docs/python/tf/OpError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "master", "t": "tf.OpError"}, {"p": "/versions/master/api_docs/python/tf/Operation", "k": ["control_inputs", "device", "graph", "inputs", "name", "node_def", "op_def", "outputs", "traceback", "traceback_with_start_lines", "type", "__init__", "colocation_groups", "get_attr", "run", "values"], "r": "master", "t": "tf.Operation"}, {"p": "/versions/master/api_docs/python/tf/OptimizerOptions", "k": ["DEFAULT", "GlobalJitLevel", "L0", "L1", "Level", "OFF", "ON_1", "ON_2"], "r": "master", "t": "tf.OptimizerOptions"}, {"p": "/versions/master/api_docs/python/tf/PaddingFIFOQueue", "k": ["dtypes", "name", "names", "queue_ref", "shapes", "__init__", "close", "dequeue", "dequeue_many", "dequeue_up_to", "enqueue", "enqueue_many", "from_list", "is_closed", "size"], "r": "master", "t": "tf.PaddingFIFOQueue"}, {"p": "/versions/master/api_docs/python/tf/Print", "k": [], "r": "master", "t": "tf.Print"}, {"p": "/versions/master/api_docs/python/tf/PriorityQueue", "k": ["dtypes", "name", "names", "queue_ref", "shapes", "__init__", "close", "dequeue", "dequeue_many", "dequeue_up_to", "enqueue", "enqueue_many", "from_list", "is_closed", "size"], "r": "master", "t": "tf.PriorityQueue"}, {"p": "/versions/master/api_docs/python/tf/QueueBase", "k": ["dtypes", "name", "names", "queue_ref", "shapes", "__init__", "close", "dequeue", "dequeue_many", "dequeue_up_to", "enqueue", "enqueue_many", "from_list", "is_closed", "size"], "r": "master", "t": "tf.QueueBase"}, {"p": "/versions/master/api_docs/python/tf/RandomShuffleQueue", "k": ["dtypes", "name", "names", "queue_ref", "shapes", "__init__", "close", "dequeue", "dequeue_many", "dequeue_up_to", "enqueue", "enqueue_many", "from_list", "is_closed", "size"], "r": "master", "t": "tf.RandomShuffleQueue"}, {"p": "/versions/master/api_docs/python/tf/ReaderBase", "k": ["reader_ref", "supports_serialize", "__init__", "num_records_produced", "num_work_units_completed", "read", "read_up_to", "reset", "restore_state", "serialize_state"], "r": "master", "t": "tf.ReaderBase"}, {"p": "/versions/master/api_docs/python/tf/RegisterGradient", "k": ["__call__", "__init__"], "r": "master", "t": "tf.RegisterGradient"}, {"p": "/versions/master/api_docs/python/tf/RunMetadata", "k": [], "r": "master", "t": "tf.RunMetadata"}, {"p": "/versions/master/api_docs/python/tf/RunOptions", "k": ["FULL_TRACE", "HARDWARE_TRACE", "NO_TRACE", "SOFTWARE_TRACE", "TraceLevel"], "r": "master", "t": "tf.RunOptions"}, {"p": "/versions/master/api_docs/python/tf/Session", "k": ["graph", "graph_def", "sess_str", "__enter__", "__exit__", "__init__", "as_default", "close", "list_devices", "make_callable", "partial_run", "partial_run_setup", "reset", "run"], "r": "master", "t": "tf.Session"}, {"p": "/versions/master/api_docs/python/tf/SessionLog", "k": ["CHECKPOINT", "START", "STATUS_UNSPECIFIED", "STOP", "SessionStatus"], "r": "master", "t": "tf.SessionLog"}, {"p": "/versions/master/api_docs/python/tf/SparseConditionalAccumulator", "k": ["accumulator_ref", "dtype", "name", "__init__", "apply_grad", "apply_indexed_slices_grad", "num_accumulated", "set_global_step", "take_grad", "take_indexed_slices_grad"], "r": "master", "t": "tf.SparseConditionalAccumulator"}, {"p": "/versions/master/api_docs/python/tf/SparseFeature", "k": ["already_sorted", "dtype", "index_key", "size", "value_key", "__new__"], "r": "master", "t": "tf.SparseFeature"}, {"p": "/versions/master/api_docs/python/tf/SparseTensor", "k": ["dense_shape", "dtype", "graph", "indices", "op", "values", "__div__", "__init__", "__mul__", "__truediv__", "eval", "from_value", "get_shape"], "r": "master", "t": "tf.SparseTensor"}, {"p": "/versions/master/api_docs/python/tf/SparseTensorValue", "k": ["dense_shape", "indices", "values", "__new__"], "r": "master", "t": "tf.SparseTensorValue"}, {"p": "/versions/master/api_docs/python/tf/Summary", "k": ["Audio", "Image", "Value"], "r": "master", "t": "tf.Summary"}, {"p": "/versions/master/api_docs/python/tf/Summary/Audio", "k": [], "r": "master", "t": "tf.Summary.Audio"}, {"p": "/versions/master/api_docs/python/tf/Summary/Image", "k": [], "r": "master", "t": "tf.Summary.Image"}, {"p": "/versions/master/api_docs/python/tf/Summary/Value", "k": [], "r": "master", "t": "tf.Summary.Value"}, {"p": "/versions/master/api_docs/python/tf/SummaryMetadata", "k": ["PluginData"], "r": "master", "t": "tf.SummaryMetadata"}, {"p": "/versions/master/api_docs/python/tf/SummaryMetadata/PluginData", "k": [], "r": "master", "t": "tf.SummaryMetadata.PluginData"}, {"p": "/versions/master/api_docs/python/tf/TFRecordReader", "k": ["reader_ref", "supports_serialize", "__init__", "num_records_produced", "num_work_units_completed", "read", "read_up_to", "reset", "restore_state", "serialize_state"], "r": "master", "t": "tf.TFRecordReader"}, {"p": "/versions/master/api_docs/python/tf/Tensor", "k": ["device", "dtype", "graph", "name", "op", "shape", "value_index", "__abs__", "__add__", "__and__", "__bool__", "__div__", "__eq__", "__floordiv__", "__ge__", "__getitem__", "__gt__", "__init__", "__invert__", "__iter__", "__le__", "__lt__", "__matmul__", "__mod__", "__mul__", "__neg__", "__nonzero__", "__or__", "__pow__", "__radd__", "__rand__", "__rdiv__", "__rfloordiv__", "__rmatmul__", "__rmod__", "__rmul__", "__ror__", "__rpow__", "__rsub__", "__rtruediv__", "__rxor__", "__sub__", "__truediv__", "__xor__", "consumers", "eval", "get_shape", "set_shape", "OVERLOADABLE_OPERATORS", "__array_priority__"], "r": "master", "t": "tf.Tensor"}, {"p": "/versions/master/api_docs/python/tf/TensorArray", "k": ["dtype", "flow", "handle", "__init__", "close", "concat", "gather", "grad", "identity", "read", "scatter", "size", "split", "stack", "unstack", "write"], "r": "master", "t": "tf.TensorArray"}, {"p": "/versions/master/api_docs/python/tf/TensorInfo", "k": ["CooSparse"], "r": "master", "t": "tf.TensorInfo"}, {"p": "/versions/master/api_docs/python/tf/TensorInfo/CooSparse", "k": [], "r": "master", "t": "tf.TensorInfo.CooSparse"}, {"p": "/versions/master/api_docs/python/tf/TensorShape", "k": ["dims", "ndims", "__bool__", "__eq__", "__getitem__", "__init__", "__iter__", "__len__", "__ne__", "__nonzero__", "as_list", "as_proto", "assert_has_rank", "assert_is_compatible_with", "assert_is_fully_defined", "assert_same_rank", "concatenate", "is_compatible_with", "is_fully_defined", "merge_with", "most_specific_compatible_shape", "num_elements", "with_rank", "with_rank_at_least", "with_rank_at_most"], "r": "master", "t": "tf.TensorShape"}, {"p": "/versions/master/api_docs/python/tf/TextLineReader", "k": ["reader_ref", "supports_serialize", "__init__", "num_records_produced", "num_work_units_completed", "read", "read_up_to", "reset", "restore_state", "serialize_state"], "r": "master", "t": "tf.TextLineReader"}, {"p": "/versions/master/api_docs/python/tf/VarLenFeature", "k": ["dtype", "__new__"], "r": "master", "t": "tf.VarLenFeature"}, {"p": "/versions/master/api_docs/python/tf/Variable", "k": ["SaveSliceInfo", "constraint", "device", "dtype", "graph", "initial_value", "initializer", "name", "op", "shape", "__abs__", "__add__", "__and__", "__div__", "__floordiv__", "__ge__", "__getitem__", "__gt__", "__iadd__", "__idiv__", "__imul__", "__init__", "__invert__", "__ipow__", "__irealdiv__", "__isub__", "__iter__", "__itruediv__", "__le__", "__lt__", "__matmul__", "__mod__", "__mul__", "__neg__", "__or__", "__pow__", "__radd__", "__rand__", "__rdiv__", "__rfloordiv__", "__rmatmul__", "__rmod__", "__rmul__", "__ror__", "__rpow__", "__rsub__", "__rtruediv__", "__rxor__", "__sub__", "__truediv__", "__xor__", "assign", "assign_add", "assign_sub", "count_up_to", "eval", "from_proto", "get_shape", "initialized_value", "load", "read_value", "scatter_sub", "set_shape", "to_proto", "value", "__array_priority__"], "r": "master", "t": "tf.Variable"}, {"p": "/versions/master/api_docs/python/tf/Variable/SaveSliceInfo", "k": ["spec", "__init__", "to_proto"], "r": "master", "t": "tf.Variable.SaveSliceInfo"}, {"p": "/versions/master/api_docs/python/tf/VariableScope", "k": ["caching_device", "constraint", "custom_getter", "dtype", "initializer", "name", "original_name_scope", "partitioner", "regularizer", "reuse", "use_resource", "__init__", "get_collection", "get_variable", "global_variables", "local_variables", "reuse_variables", "set_caching_device", "set_custom_getter", "set_dtype", "set_initializer", "set_partitioner", "set_regularizer", "set_use_resource", "trainable_variables"], "r": "master", "t": "tf.VariableScope"}, {"p": "/versions/master/api_docs/python/tf/WholeFileReader", "k": ["reader_ref", "supports_serialize", "__init__", "num_records_produced", "num_work_units_completed", "read", "read_up_to", "reset", "restore_state", "serialize_state"], "r": "master", "t": "tf.WholeFileReader"}, {"p": "/versions/master/api_docs/python/tf/abs", "k": [], "r": "master", "t": "tf.abs"}, {"p": "/versions/master/api_docs/python/tf/accumulate_n", "k": [], "r": "master", "t": "tf.accumulate_n"}, {"p": "/versions/master/api_docs/python/tf/acos", "k": [], "r": "master", "t": "tf.acos"}, {"p": "/versions/master/api_docs/python/tf/acosh", "k": [], "r": "master", "t": "tf.acosh"}, {"p": "/versions/master/api_docs/python/tf/add", "k": [], "r": "master", "t": "tf.add"}, {"p": "/versions/master/api_docs/python/tf/add_check_numerics_ops", "k": [], "r": "master", "t": "tf.add_check_numerics_ops"}, {"p": "/versions/master/api_docs/python/tf/add_n", "k": [], "r": "master", "t": "tf.add_n"}, {"p": "/versions/master/api_docs/python/tf/add_to_collection", "k": [], "r": "master", "t": "tf.add_to_collection"}, {"p": "/versions/master/api_docs/python/tf/add_to_collections", "k": [], "r": "master", "t": "tf.add_to_collections"}, {"p": "/versions/master/api_docs/python/tf/all_variables", "k": [], "r": "master", "t": "tf.all_variables"}, {"p": "/versions/master/api_docs/python/tf/angle", "k": [], "r": "master", "t": "tf.angle"}, {"p": "/versions/master/api_docs/python/tf/app", "k": [], "r": "master", "t": "tf.app"}, {"p": "/versions/master/api_docs/python/tf/app/run", "k": [], "r": "master", "t": "tf.app.run"}, {"p": "/versions/master/api_docs/python/tf/arg_max", "k": [], "r": "master", "t": "tf.arg_max"}, {"p": "/versions/master/api_docs/python/tf/arg_min", "k": [], "r": "master", "t": "tf.arg_min"}, {"p": "/versions/master/api_docs/python/tf/argmax", "k": [], "r": "master", "t": "tf.argmax"}, {"p": "/versions/master/api_docs/python/tf/argmin", "k": [], "r": "master", "t": "tf.argmin"}, {"p": "/versions/master/api_docs/python/tf/as_dtype", "k": [], "r": "master", "t": "tf.as_dtype"}, {"p": "/versions/master/api_docs/python/tf/as_string", "k": [], "r": "master", "t": "tf.as_string"}, {"p": "/versions/master/api_docs/python/tf/asin", "k": [], "r": "master", "t": "tf.asin"}, {"p": "/versions/master/api_docs/python/tf/asinh", "k": [], "r": "master", "t": "tf.asinh"}, {"p": "/versions/master/api_docs/python/tf/assert_equal", "k": [], "r": "master", "t": "tf.assert_equal"}, {"p": "/versions/master/api_docs/python/tf/assert_greater", "k": [], "r": "master", "t": "tf.assert_greater"}, {"p": "/versions/master/api_docs/python/tf/assert_greater_equal", "k": [], "r": "master", "t": "tf.assert_greater_equal"}, {"p": "/versions/master/api_docs/python/tf/assert_integer", "k": [], "r": "master", "t": "tf.assert_integer"}, {"p": "/versions/master/api_docs/python/tf/assert_less", "k": [], "r": "master", "t": "tf.assert_less"}, {"p": "/versions/master/api_docs/python/tf/assert_less_equal", "k": [], "r": "master", "t": "tf.assert_less_equal"}, {"p": "/versions/master/api_docs/python/tf/assert_near", "k": [], "r": "master", "t": "tf.assert_near"}, {"p": "/versions/master/api_docs/python/tf/assert_negative", "k": [], "r": "master", "t": "tf.assert_negative"}, {"p": "/versions/master/api_docs/python/tf/assert_non_negative", "k": [], "r": "master", "t": "tf.assert_non_negative"}, {"p": "/versions/master/api_docs/python/tf/assert_non_positive", "k": [], "r": "master", "t": "tf.assert_non_positive"}, {"p": "/versions/master/api_docs/python/tf/assert_none_equal", "k": [], "r": "master", "t": "tf.assert_none_equal"}, {"p": "/versions/master/api_docs/python/tf/assert_positive", "k": [], "r": "master", "t": "tf.assert_positive"}, {"p": "/versions/master/api_docs/python/tf/assert_proper_iterable", "k": [], "r": "master", "t": "tf.assert_proper_iterable"}, {"p": "/versions/master/api_docs/python/tf/assert_rank", "k": [], "r": "master", "t": "tf.assert_rank"}, {"p": "/versions/master/api_docs/python/tf/assert_rank_at_least", "k": [], "r": "master", "t": "tf.assert_rank_at_least"}, {"p": "/versions/master/api_docs/python/tf/assert_rank_in", "k": [], "r": "master", "t": "tf.assert_rank_in"}, {"p": "/versions/master/api_docs/python/tf/assert_same_float_dtype", "k": [], "r": "master", "t": "tf.assert_same_float_dtype"}, {"p": "/versions/master/api_docs/python/tf/assert_scalar", "k": [], "r": "master", "t": "tf.assert_scalar"}, {"p": "/versions/master/api_docs/python/tf/assert_type", "k": [], "r": "master", "t": "tf.assert_type"}, {"p": "/versions/master/api_docs/python/tf/assert_variables_initialized", "k": [], "r": "master", "t": "tf.assert_variables_initialized"}, {"p": "/versions/master/api_docs/python/tf/assign", "k": [], "r": "master", "t": "tf.assign"}, {"p": "/versions/master/api_docs/python/tf/assign_add", "k": [], "r": "master", "t": "tf.assign_add"}, {"p": "/versions/master/api_docs/python/tf/assign_sub", "k": [], "r": "master", "t": "tf.assign_sub"}, {"p": "/versions/master/api_docs/python/tf/atan", "k": [], "r": "master", "t": "tf.atan"}, {"p": "/versions/master/api_docs/python/tf/atan2", "k": [], "r": "master", "t": "tf.atan2"}, {"p": "/versions/master/api_docs/python/tf/atanh", "k": [], "r": "master", "t": "tf.atanh"}, {"p": "/versions/master/api_docs/python/tf/batch_to_space", "k": [], "r": "master", "t": "tf.batch_to_space"}, {"p": "/versions/master/api_docs/python/tf/batch_to_space_nd", "k": [], "r": "master", "t": "tf.batch_to_space_nd"}, {"p": "/versions/master/api_docs/python/tf/betainc", "k": [], "r": "master", "t": "tf.betainc"}, {"p": "/versions/master/api_docs/python/tf/bincount", "k": [], "r": "master", "t": "tf.bincount"}, {"p": "/versions/master/api_docs/python/tf/bitcast", "k": [], "r": "master", "t": "tf.bitcast"}, {"p": "/versions/master/api_docs/python/tf/bitwise", "k": [], "r": "master", "t": "tf.bitwise"}, {"p": "/versions/master/api_docs/python/tf/bitwise/bitwise_and", "k": [], "r": "master", "t": "tf.bitwise.bitwise_and"}, {"p": "/versions/master/api_docs/python/tf/bitwise/bitwise_or", "k": [], "r": "master", "t": "tf.bitwise.bitwise_or"}, {"p": "/versions/master/api_docs/python/tf/bitwise/bitwise_xor", "k": [], "r": "master", "t": "tf.bitwise.bitwise_xor"}, {"p": "/versions/master/api_docs/python/tf/bitwise/invert", "k": [], "r": "master", "t": "tf.bitwise.invert"}, {"p": "/versions/master/api_docs/python/tf/bitwise/left_shift", "k": [], "r": "master", "t": "tf.bitwise.left_shift"}, {"p": "/versions/master/api_docs/python/tf/bitwise/right_shift", "k": [], "r": "master", "t": "tf.bitwise.right_shift"}, {"p": "/versions/master/api_docs/python/tf/boolean_mask", "k": [], "r": "master", "t": "tf.boolean_mask"}, {"p": "/versions/master/api_docs/python/tf/broadcast_dynamic_shape", "k": [], "r": "master", "t": "tf.broadcast_dynamic_shape"}, {"p": "/versions/master/api_docs/python/tf/broadcast_static_shape", "k": [], "r": "master", "t": "tf.broadcast_static_shape"}, {"p": "/versions/master/api_docs/python/tf/case", "k": [], "r": "master", "t": "tf.case"}, {"p": "/versions/master/api_docs/python/tf/cast", "k": [], "r": "master", "t": "tf.cast"}, {"p": "/versions/master/api_docs/python/tf/ceil", "k": [], "r": "master", "t": "tf.ceil"}, {"p": "/versions/master/api_docs/python/tf/check_numerics", "k": [], "r": "master", "t": "tf.check_numerics"}, {"p": "/versions/master/api_docs/python/tf/cholesky", "k": [], "r": "master", "t": "tf.cholesky"}, {"p": "/versions/master/api_docs/python/tf/cholesky_solve", "k": [], "r": "master", "t": "tf.cholesky_solve"}, {"p": "/versions/master/api_docs/python/tf/clip_by_average_norm", "k": [], "r": "master", "t": "tf.clip_by_average_norm"}, {"p": "/versions/master/api_docs/python/tf/clip_by_global_norm", "k": [], "r": "master", "t": "tf.clip_by_global_norm"}, {"p": "/versions/master/api_docs/python/tf/clip_by_norm", "k": [], "r": "master", "t": "tf.clip_by_norm"}, {"p": "/versions/master/api_docs/python/tf/clip_by_value", "k": [], "r": "master", "t": "tf.clip_by_value"}, {"p": "/versions/master/api_docs/python/tf/colocate_with", "k": [], "r": "master", "t": "tf.colocate_with"}, {"p": "/versions/master/api_docs/python/tf/compat", "k": ["bytes_or_text_types", "complex_types", "integral_types", "real_types"], "r": "master", "t": "tf.compat"}, {"p": "/versions/master/api_docs/python/tf/compat/as_bytes", "k": [], "r": "master", "t": "tf.compat.as_bytes"}, {"p": "/versions/master/api_docs/python/tf/compat/as_str_any", "k": [], "r": "master", "t": "tf.compat.as_str_any"}, {"p": "/versions/master/api_docs/python/tf/compat/as_text", "k": [], "r": "master", "t": "tf.compat.as_text"}, {"p": "/versions/master/api_docs/python/tf/compat/path_to_str", "k": [], "r": "master", "t": "tf.compat.path_to_str"}, {"p": "/versions/master/api_docs/python/tf/complex", "k": [], "r": "master", "t": "tf.complex"}, {"p": "/versions/master/api_docs/python/tf/concat", "k": [], "r": "master", "t": "tf.concat"}, {"p": "/versions/master/api_docs/python/tf/cond", "k": [], "r": "master", "t": "tf.cond"}, {"p": "/versions/master/api_docs/python/tf/confusion_matrix", "k": [], "r": "master", "t": "tf.confusion_matrix"}, {"p": "/versions/master/api_docs/python/tf/conj", "k": [], "r": "master", "t": "tf.conj"}, {"p": "/versions/master/api_docs/python/tf/constant", "k": [], "r": "master", "t": "tf.constant"}, {"p": "/versions/master/api_docs/python/tf/constant_initializer", "k": ["__call__", "__init__", "from_config", "get_config"], "r": "master", "t": "tf.constant_initializer"}, {"p": "/versions/master/api_docs/python/tf/container", "k": [], "r": "master", "t": "tf.container"}, {"p": "/versions/master/api_docs/python/tf/contrib", "k": [], "r": "master", "t": "tf.contrib"}, {"p": "/versions/master/api_docs/python/tf/contrib/batching", "k": [], "r": "master", "t": "tf.contrib.batching"}, {"p": "/versions/master/api_docs/python/tf/contrib/batching/batch_function", "k": [], "r": "master", "t": "tf.contrib.batching.batch_function"}, {"p": "/versions/master/api_docs/python/tf/contrib/bayesflow", "k": [], "r": "master", "t": "tf.contrib.bayesflow"}, {"p": "/versions/master/api_docs/python/tf/contrib/bayesflow/monte_carlo", "k": [], "r": "master", "t": "tf.contrib.bayesflow.monte_carlo"}, {"p": "/versions/master/api_docs/python/tf/contrib/bayesflow/monte_carlo/expectation", "k": [], "r": "master", "t": "tf.contrib.bayesflow.monte_carlo.expectation"}, {"p": "/versions/master/api_docs/python/tf/contrib/bayesflow/monte_carlo/expectation_importance_sampler", "k": [], "r": "master", "t": "tf.contrib.bayesflow.monte_carlo.expectation_importance_sampler"}, {"p": "/versions/master/api_docs/python/tf/contrib/bayesflow/monte_carlo/expectation_importance_sampler_logspace", "k": [], "r": "master", "t": "tf.contrib.bayesflow.monte_carlo.expectation_importance_sampler_logspace"}, {"p": "/versions/master/api_docs/python/tf/contrib/cloud", "k": [], "r": "master", "t": "tf.contrib.cloud"}, {"p": "/versions/master/api_docs/python/tf/contrib/cloud/BigQueryReader", "k": ["reader_ref", "supports_serialize", "__init__", "num_records_produced", "num_work_units_completed", "partitions", "read", "read_up_to", "reset", "restore_state", "serialize_state"], "r": "master", "t": "tf.contrib.cloud.BigQueryReader"}, {"p": "/versions/master/api_docs/python/tf/contrib/cluster_resolver", "k": [], "r": "master", "t": "tf.contrib.cluster_resolver"}, {"p": "/versions/master/api_docs/python/tf/contrib/cluster_resolver/ClusterResolver", "k": ["cluster_spec", "master"], "r": "master", "t": "tf.contrib.cluster_resolver.ClusterResolver"}, {"p": "/versions/master/api_docs/python/tf/contrib/cluster_resolver/GceClusterResolver", "k": ["__init__", "cluster_spec", "master"], "r": "master", "t": "tf.contrib.cluster_resolver.GceClusterResolver"}, {"p": "/versions/master/api_docs/python/tf/contrib/cluster_resolver/SimpleClusterResolver", "k": ["__init__", "cluster_spec", "master"], "r": "master", "t": "tf.contrib.cluster_resolver.SimpleClusterResolver"}, {"p": "/versions/master/api_docs/python/tf/contrib/cluster_resolver/TPUClusterResolver", "k": ["__deepcopy__", "__init__", "cluster_spec", "get_master", "master"], "r": "master", "t": "tf.contrib.cluster_resolver.TPUClusterResolver"}, {"p": "/versions/master/api_docs/python/tf/contrib/cluster_resolver/UnionClusterResolver", "k": ["__init__", "cluster_spec", "master"], "r": "master", "t": "tf.contrib.cluster_resolver.UnionClusterResolver"}, {"p": "/versions/master/api_docs/python/tf/contrib/coder", "k": [], "r": "master", "t": "tf.contrib.coder"}, {"p": "/versions/master/api_docs/python/tf/contrib/compiler", "k": [], "r": "master", "t": "tf.contrib.compiler"}, {"p": "/versions/master/api_docs/python/tf/contrib/copy_graph", "k": [], "r": "master", "t": "tf.contrib.copy_graph"}, {"p": "/versions/master/api_docs/python/tf/contrib/copy_graph/copy_op_to_graph", "k": [], "r": "master", "t": "tf.contrib.copy_graph.copy_op_to_graph"}, {"p": "/versions/master/api_docs/python/tf/contrib/copy_graph/copy_variable_to_graph", "k": [], "r": "master", "t": "tf.contrib.copy_graph.copy_variable_to_graph"}, {"p": "/versions/master/api_docs/python/tf/contrib/copy_graph/get_copied_op", "k": [], "r": "master", "t": "tf.contrib.copy_graph.get_copied_op"}, {"p": "/versions/master/api_docs/python/tf/contrib/crf", "k": [], "r": "master", "t": "tf.contrib.crf"}, {"p": "/versions/master/api_docs/python/tf/contrib/crf/CrfDecodeBackwardRnnCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "master", "t": "tf.contrib.crf.CrfDecodeBackwardRnnCell"}, {"p": "/versions/master/api_docs/python/tf/contrib/crf/CrfDecodeForwardRnnCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "master", "t": "tf.contrib.crf.CrfDecodeForwardRnnCell"}, {"p": "/versions/master/api_docs/python/tf/contrib/crf/CrfForwardRnnCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "master", "t": "tf.contrib.crf.CrfForwardRnnCell"}, {"p": "/versions/master/api_docs/python/tf/contrib/crf/crf_binary_score", "k": [], "r": "master", "t": "tf.contrib.crf.crf_binary_score"}, {"p": "/versions/master/api_docs/python/tf/contrib/crf/crf_decode", "k": [], "r": "master", "t": "tf.contrib.crf.crf_decode"}, {"p": "/versions/master/api_docs/python/tf/contrib/crf/crf_log_likelihood", "k": [], "r": "master", "t": "tf.contrib.crf.crf_log_likelihood"}, {"p": "/versions/master/api_docs/python/tf/contrib/crf/crf_log_norm", "k": [], "r": "master", "t": "tf.contrib.crf.crf_log_norm"}, {"p": "/versions/master/api_docs/python/tf/contrib/crf/crf_sequence_score", "k": [], "r": "master", "t": "tf.contrib.crf.crf_sequence_score"}, {"p": "/versions/master/api_docs/python/tf/contrib/crf/crf_unary_score", "k": [], "r": "master", "t": "tf.contrib.crf.crf_unary_score"}, {"p": "/versions/master/api_docs/python/tf/contrib/crf/viterbi_decode", "k": [], "r": "master", "t": "tf.contrib.crf.viterbi_decode"}, {"p": "/versions/master/api_docs/python/tf/contrib/cudnn_rnn", "k": [], "r": "master", "t": "tf.contrib.cudnn_rnn"}, {"p": "/versions/master/api_docs/python/tf/contrib/cudnn_rnn/CudnnCompatibleGRUCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "master", "t": "tf.contrib.cudnn_rnn.CudnnCompatibleGRUCell"}, {"p": "/versions/master/api_docs/python/tf/contrib/cudnn_rnn/CudnnCompatibleLSTMCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "master", "t": "tf.contrib.cudnn_rnn.CudnnCompatibleLSTMCell"}, {"p": "/versions/master/api_docs/python/tf/contrib/cudnn_rnn/CudnnGRU", "k": ["activity_regularizer", "canonical_bias_shapes", "canonical_weight_shapes", "direction", "dtype", "graph", "input", "input_mode", "input_shape", "input_size", "losses", "name", "non_trainable_variables", "non_trainable_weights", "num_dirs", "num_layers", "num_units", "output", "output_shape", "rnn_mode", "saveable", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "state_shape"], "r": "master", "t": "tf.contrib.cudnn_rnn.CudnnGRU"}, {"p": "/versions/master/api_docs/python/tf/contrib/cudnn_rnn/CudnnGRUSaveable", "k": ["device", "__init__", "restore"], "r": "master", "t": "tf.contrib.cudnn_rnn.CudnnGRUSaveable"}, {"p": "/versions/master/api_docs/python/tf/contrib/cudnn_rnn/CudnnLSTM", "k": ["activity_regularizer", "canonical_bias_shapes", "canonical_weight_shapes", "direction", "dtype", "graph", "input", "input_mode", "input_shape", "input_size", "losses", "name", "non_trainable_variables", "non_trainable_weights", "num_dirs", "num_layers", "num_units", "output", "output_shape", "rnn_mode", "saveable", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "state_shape"], "r": "master", "t": "tf.contrib.cudnn_rnn.CudnnLSTM"}, {"p": "/versions/master/api_docs/python/tf/contrib/cudnn_rnn/CudnnLSTMSaveable", "k": ["device", "__init__", "restore"], "r": "master", "t": "tf.contrib.cudnn_rnn.CudnnLSTMSaveable"}, {"p": "/versions/master/api_docs/python/tf/contrib/cudnn_rnn/CudnnRNNRelu", "k": ["activity_regularizer", "canonical_bias_shapes", "canonical_weight_shapes", "direction", "dtype", "graph", "input", "input_mode", "input_shape", "input_size", "losses", "name", "non_trainable_variables", "non_trainable_weights", "num_dirs", "num_layers", "num_units", "output", "output_shape", "rnn_mode", "saveable", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "state_shape"], "r": "master", "t": "tf.contrib.cudnn_rnn.CudnnRNNRelu"}, {"p": "/versions/master/api_docs/python/tf/contrib/cudnn_rnn/CudnnRNNReluSaveable", "k": ["device", "__init__", "restore"], "r": "master", "t": "tf.contrib.cudnn_rnn.CudnnRNNReluSaveable"}, {"p": "/versions/master/api_docs/python/tf/contrib/cudnn_rnn/CudnnRNNTanh", "k": ["activity_regularizer", "canonical_bias_shapes", "canonical_weight_shapes", "direction", "dtype", "graph", "input", "input_mode", "input_shape", "input_size", "losses", "name", "non_trainable_variables", "non_trainable_weights", "num_dirs", "num_layers", "num_units", "output", "output_shape", "rnn_mode", "saveable", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "state_shape"], "r": "master", "t": "tf.contrib.cudnn_rnn.CudnnRNNTanh"}, {"p": "/versions/master/api_docs/python/tf/contrib/cudnn_rnn/CudnnRNNTanhSaveable", "k": ["device", "__init__", "restore"], "r": "master", "t": "tf.contrib.cudnn_rnn.CudnnRNNTanhSaveable"}, {"p": "/versions/master/api_docs/python/tf/contrib/data", "k": ["AUTOTUNE"], "r": "master", "t": "tf.contrib.data"}, {"p": "/versions/master/api_docs/python/tf/contrib/data/Counter", "k": [], "r": "master", "t": "tf.contrib.data.Counter"}, {"p": "/versions/master/api_docs/python/tf/contrib/data/SqlDataset", "k": ["output_classes", "output_shapes", "output_types", "__init__", "__iter__", "apply", "batch", "cache", "concatenate", "filter", "flat_map", "from_generator", "from_sparse_tensor_slices", "from_tensor_slices", "from_tensors", "interleave", "list_files", "make_initializable_iterator", "make_one_shot_iterator", "map", "padded_batch", "prefetch", "range", "repeat", "shard", "shuffle", "skip", "take", "zip"], "r": "master", "t": "tf.contrib.data.SqlDataset"}, {"p": "/versions/master/api_docs/python/tf/contrib/data/batch_and_drop_remainder", "k": [], "r": "master", "t": "tf.contrib.data.batch_and_drop_remainder"}, {"p": "/versions/master/api_docs/python/tf/contrib/data/bucket_by_sequence_length", "k": [], "r": "master", "t": "tf.contrib.data.bucket_by_sequence_length"}, {"p": "/versions/master/api_docs/python/tf/contrib/data/dense_to_sparse_batch", "k": [], "r": "master", "t": "tf.contrib.data.dense_to_sparse_batch"}, {"p": "/versions/master/api_docs/python/tf/contrib/data/enumerate_dataset", "k": [], "r": "master", "t": "tf.contrib.data.enumerate_dataset"}, {"p": "/versions/master/api_docs/python/tf/contrib/data/get_single_element", "k": [], "r": "master", "t": "tf.contrib.data.get_single_element"}, {"p": "/versions/master/api_docs/python/tf/contrib/data/group_by_window", "k": [], "r": "master", "t": "tf.contrib.data.group_by_window"}, {"p": "/versions/master/api_docs/python/tf/contrib/data/ignore_errors", "k": [], "r": "master", "t": "tf.contrib.data.ignore_errors"}, {"p": "/versions/master/api_docs/python/tf/contrib/data/make_batched_features_dataset", "k": [], "r": "master", "t": "tf.contrib.data.make_batched_features_dataset"}, {"p": "/versions/master/api_docs/python/tf/contrib/data/make_csv_dataset", "k": [], "r": "master", "t": "tf.contrib.data.make_csv_dataset"}, {"p": "/versions/master/api_docs/python/tf/contrib/data/make_saveable_from_iterator", "k": [], "r": "master", "t": "tf.contrib.data.make_saveable_from_iterator"}, {"p": "/versions/master/api_docs/python/tf/contrib/data/map_and_batch", "k": [], "r": "master", "t": "tf.contrib.data.map_and_batch"}, {"p": "/versions/master/api_docs/python/tf/contrib/data/padded_batch_and_drop_remainder", "k": [], "r": "master", "t": "tf.contrib.data.padded_batch_and_drop_remainder"}, {"p": "/versions/master/api_docs/python/tf/contrib/data/parallel_interleave", "k": [], "r": "master", "t": "tf.contrib.data.parallel_interleave"}, {"p": "/versions/master/api_docs/python/tf/contrib/data/prefetch_to_device", "k": [], "r": "master", "t": "tf.contrib.data.prefetch_to_device"}, {"p": "/versions/master/api_docs/python/tf/contrib/data/read_batch_features", "k": [], "r": "master", "t": "tf.contrib.data.read_batch_features"}, {"p": "/versions/master/api_docs/python/tf/contrib/data/rejection_resample", "k": [], "r": "master", "t": "tf.contrib.data.rejection_resample"}, {"p": "/versions/master/api_docs/python/tf/contrib/data/scan", "k": [], "r": "master", "t": "tf.contrib.data.scan"}, {"p": "/versions/master/api_docs/python/tf/contrib/data/shuffle_and_repeat", "k": [], "r": "master", "t": "tf.contrib.data.shuffle_and_repeat"}, {"p": "/versions/master/api_docs/python/tf/contrib/data/sliding_window_batch", "k": [], "r": "master", "t": "tf.contrib.data.sliding_window_batch"}, {"p": "/versions/master/api_docs/python/tf/contrib/data/sloppy_interleave", "k": [], "r": "master", "t": "tf.contrib.data.sloppy_interleave"}, {"p": "/versions/master/api_docs/python/tf/contrib/data/unbatch", "k": [], "r": "master", "t": "tf.contrib.data.unbatch"}, {"p": "/versions/master/api_docs/python/tf/contrib/decision_trees", "k": [], "r": "master", "t": "tf.contrib.decision_trees"}, {"p": "/versions/master/api_docs/python/tf/contrib/deprecated", "k": [], "r": "master", "t": "tf.contrib.deprecated"}, {"p": "/versions/master/api_docs/python/tf/contrib/deprecated/audio_summary", "k": [], "r": "master", "t": "tf.contrib.deprecated.audio_summary"}, {"p": "/versions/master/api_docs/python/tf/contrib/deprecated/histogram_summary", "k": [], "r": "master", "t": "tf.contrib.deprecated.histogram_summary"}, {"p": "/versions/master/api_docs/python/tf/contrib/deprecated/image_summary", "k": [], "r": "master", "t": "tf.contrib.deprecated.image_summary"}, {"p": "/versions/master/api_docs/python/tf/contrib/deprecated/merge_all_summaries", "k": [], "r": "master", "t": "tf.contrib.deprecated.merge_all_summaries"}, {"p": "/versions/master/api_docs/python/tf/contrib/deprecated/merge_summary", "k": [], "r": "master", "t": "tf.contrib.deprecated.merge_summary"}, {"p": "/versions/master/api_docs/python/tf/contrib/deprecated/scalar_summary", "k": [], "r": "master", "t": "tf.contrib.deprecated.scalar_summary"}, {"p": "/versions/master/api_docs/python/tf/contrib/distribute", "k": [], "r": "master", "t": "tf.contrib.distribute"}, {"p": "/versions/master/api_docs/python/tf/contrib/distribute/AllReduceCrossTowerOps", "k": ["__init__", "batch_reduce", "broadcast", "reduce"], "r": "master", "t": "tf.contrib.distribute.AllReduceCrossTowerOps"}, {"p": "/versions/master/api_docs/python/tf/contrib/distribute/CrossTowerOps", "k": ["__init__", "batch_reduce", "broadcast", "reduce"], "r": "master", "t": "tf.contrib.distribute.CrossTowerOps"}, {"p": "/versions/master/api_docs/python/tf/contrib/distribute/DistributionStrategy", "k": ["is_single_tower", "num_towers", "parameter_devices", "worker_device_index", "worker_devices", "batch_reduce", "broadcast", "call_for_each_tower", "colocate_vars_with", "configure", "distribute_dataset", "fetch", "group", "non_slot_devices", "reduce", "scope", "tower_local_var_scope", "unwrap", "update", "update_non_slot"], "r": "master", "t": "tf.contrib.distribute.DistributionStrategy"}, {"p": "/versions/master/api_docs/python/tf/contrib/distribute/MirroredStrategy", "k": ["is_single_tower", "num_towers", "parameter_devices", "worker_device_index", "worker_devices", "__init__", "batch_reduce", "broadcast", "call_for_each_tower", "colocate_vars_with", "configure", "distribute_dataset", "fetch", "group", "map", "non_slot_devices", "reduce", "scope", "tower_local_var_scope", "unwrap", "update", "update_non_slot"], "r": "master", "t": "tf.contrib.distribute.MirroredStrategy"}, {"p": "/versions/master/api_docs/python/tf/contrib/distribute/Monitor", "k": ["__init__", "run_steps"], "r": "master", "t": "tf.contrib.distribute.Monitor"}, {"p": "/versions/master/api_docs/python/tf/contrib/distribute/OneDeviceStrategy", "k": ["is_single_tower", "num_towers", "parameter_devices", "worker_device_index", "worker_devices", "__init__", "batch_reduce", "broadcast", "call_for_each_tower", "colocate_vars_with", "configure", "distribute_dataset", "fetch", "group", "map", "non_slot_devices", "reduce", "scope", "tower_local_var_scope", "unwrap", "update", "update_non_slot"], "r": "master", "t": "tf.contrib.distribute.OneDeviceStrategy"}, {"p": "/versions/master/api_docs/python/tf/contrib/distribute/ReductionToOneDeviceCrossTowerOps", "k": ["__init__", "batch_reduce", "broadcast", "reduce"], "r": "master", "t": "tf.contrib.distribute.ReductionToOneDeviceCrossTowerOps"}, {"p": "/versions/master/api_docs/python/tf/contrib/distribute/StandardInputStep", "k": ["distribution", "__call__", "__init__", "inputs", "step"], "r": "master", "t": "tf.contrib.distribute.StandardInputStep"}, {"p": "/versions/master/api_docs/python/tf/contrib/distribute/StandardSingleLossStep", "k": ["distribution", "__call__", "__init__", "inputs", "step"], "r": "master", "t": "tf.contrib.distribute.StandardSingleLossStep"}, {"p": "/versions/master/api_docs/python/tf/contrib/distribute/Step", "k": ["distribution", "__call__", "__init__", "inputs", "step"], "r": "master", "t": "tf.contrib.distribute.Step"}, {"p": "/versions/master/api_docs/python/tf/contrib/distribute/TowerContext", "k": ["device", "distribution_strategy", "is_single_tower", "num_towers", "tower_id", "__enter__", "__exit__", "__init__", "merge_call", "tower_local_var_scope"], "r": "master", "t": "tf.contrib.distribute.TowerContext"}, {"p": "/versions/master/api_docs/python/tf/contrib/distribute/get_cross_tower_context", "k": [], "r": "master", "t": "tf.contrib.distribute.get_cross_tower_context"}, {"p": "/versions/master/api_docs/python/tf/contrib/distribute/get_distribution_strategy", "k": [], "r": "master", "t": "tf.contrib.distribute.get_distribution_strategy"}, {"p": "/versions/master/api_docs/python/tf/contrib/distribute/get_loss_reduction", "k": [], "r": "master", "t": "tf.contrib.distribute.get_loss_reduction"}, {"p": "/versions/master/api_docs/python/tf/contrib/distribute/get_tower_context", "k": [], "r": "master", "t": "tf.contrib.distribute.get_tower_context"}, {"p": "/versions/master/api_docs/python/tf/contrib/distribute/has_distribution_strategy", "k": [], "r": "master", "t": "tf.contrib.distribute.has_distribution_strategy"}, {"p": "/versions/master/api_docs/python/tf/contrib/distribute/require_tower_context", "k": [], "r": "master", "t": "tf.contrib.distribute.require_tower_context"}, {"p": "/versions/master/api_docs/python/tf/contrib/distributions", "k": ["FULLY_REPARAMETERIZED", "NOT_REPARAMETERIZED"], "r": "master", "t": "tf.contrib.distributions"}, {"p": "/versions/master/api_docs/python/tf/contrib/distributions/Autoregressive", "k": ["allow_nan_stats", "batch_shape", "distribution0", "distribution_fn", "dtype", "event_shape", "name", "num_steps", "parameters", "reparameterization_type", "sample0", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "master", "t": "tf.contrib.distributions.Autoregressive"}, {"p": "/versions/master/api_docs/python/tf/contrib/distributions/BatchReshape", "k": ["allow_nan_stats", "batch_shape", "distribution", "dtype", "event_shape", "name", "parameters", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "master", "t": "tf.contrib.distributions.BatchReshape"}, {"p": "/versions/master/api_docs/python/tf/contrib/distributions/BetaWithSoftplusConcentration", "k": ["allow_nan_stats", "batch_shape", "concentration0", "concentration1", "dtype", "event_shape", "name", "parameters", "reparameterization_type", "total_concentration", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "master", "t": "tf.contrib.distributions.BetaWithSoftplusConcentration"}, {"p": "/versions/master/api_docs/python/tf/contrib/distributions/Binomial", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "logits", "name", "parameters", "probs", "reparameterization_type", "total_count", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "master", "t": "tf.contrib.distributions.Binomial"}, {"p": "/versions/master/api_docs/python/tf/contrib/distributions/Cauchy", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "master", "t": "tf.contrib.distributions.Cauchy"}, {"p": "/versions/master/api_docs/python/tf/contrib/distributions/Chi2", "k": ["allow_nan_stats", "batch_shape", "concentration", "df", "dtype", "event_shape", "name", "parameters", "rate", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "master", "t": "tf.contrib.distributions.Chi2"}, {"p": "/versions/master/api_docs/python/tf/contrib/distributions/Chi2WithAbsDf", "k": ["allow_nan_stats", "batch_shape", "concentration", "df", "dtype", "event_shape", "name", "parameters", "rate", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "master", "t": "tf.contrib.distributions.Chi2WithAbsDf"}, {"p": "/versions/master/api_docs/python/tf/contrib/distributions/ConditionalDistribution", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "name", "parameters", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "master", "t": "tf.contrib.distributions.ConditionalDistribution"}, {"p": "/versions/master/api_docs/python/tf/contrib/distributions/ConditionalTransformedDistribution", "k": ["allow_nan_stats", "batch_shape", "bijector", "distribution", "dtype", "event_shape", "name", "parameters", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "master", "t": "tf.contrib.distributions.ConditionalTransformedDistribution"}, {"p": "/versions/master/api_docs/python/tf/contrib/distributions/Deterministic", "k": ["allow_nan_stats", "atol", "batch_shape", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "rtol", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "master", "t": "tf.contrib.distributions.Deterministic"}, {"p": "/versions/master/api_docs/python/tf/contrib/distributions/ExpRelaxedOneHotCategorical", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "event_size", "logits", "name", "parameters", "probs", "reparameterization_type", "temperature", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "master", "t": "tf.contrib.distributions.ExpRelaxedOneHotCategorical"}, {"p": "/versions/master/api_docs/python/tf/contrib/distributions/ExponentialWithSoftplusRate", "k": ["allow_nan_stats", "batch_shape", "concentration", "dtype", "event_shape", "name", "parameters", "rate", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "master", "t": "tf.contrib.distributions.ExponentialWithSoftplusRate"}, {"p": "/versions/master/api_docs/python/tf/contrib/distributions/GammaWithSoftplusConcentrationRate", "k": ["allow_nan_stats", "batch_shape", "concentration", "dtype", "event_shape", "name", "parameters", "rate", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "master", "t": "tf.contrib.distributions.GammaWithSoftplusConcentrationRate"}, {"p": "/versions/master/api_docs/python/tf/contrib/distributions/Geometric", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "logits", "name", "parameters", "probs", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "master", "t": "tf.contrib.distributions.Geometric"}, {"p": "/versions/master/api_docs/python/tf/contrib/distributions/HalfNormal", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "name", "parameters", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "master", "t": "tf.contrib.distributions.HalfNormal"}, {"p": "/versions/master/api_docs/python/tf/contrib/distributions/Independent", "k": ["allow_nan_stats", "batch_shape", "distribution", "dtype", "event_shape", "name", "parameters", "reinterpreted_batch_ndims", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "master", "t": "tf.contrib.distributions.Independent"}, {"p": "/versions/master/api_docs/python/tf/contrib/distributions/InverseGamma", "k": ["allow_nan_stats", "batch_shape", "concentration", "dtype", "event_shape", "name", "parameters", "rate", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "master", "t": "tf.contrib.distributions.InverseGamma"}, {"p": "/versions/master/api_docs/python/tf/contrib/distributions/InverseGammaWithSoftplusConcentrationRate", "k": ["allow_nan_stats", "batch_shape", "concentration", "dtype", "event_shape", "name", "parameters", "rate", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "master", "t": "tf.contrib.distributions.InverseGammaWithSoftplusConcentrationRate"}, {"p": "/versions/master/api_docs/python/tf/contrib/distributions/Kumaraswamy", "k": ["allow_nan_stats", "batch_shape", "bijector", "concentration0", "concentration1", "distribution", "dtype", "event_shape", "name", "parameters", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "master", "t": "tf.contrib.distributions.Kumaraswamy"}, {"p": "/versions/master/api_docs/python/tf/contrib/distributions/LaplaceWithSoftplusScale", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "master", "t": "tf.contrib.distributions.LaplaceWithSoftplusScale"}, {"p": "/versions/master/api_docs/python/tf/contrib/distributions/Logistic", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "master", "t": "tf.contrib.distributions.Logistic"}, {"p": "/versions/master/api_docs/python/tf/contrib/distributions/Mixture", "k": ["allow_nan_stats", "batch_shape", "cat", "components", "dtype", "event_shape", "name", "num_components", "parameters", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "entropy_lower_bound", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "master", "t": "tf.contrib.distributions.Mixture"}, {"p": "/versions/master/api_docs/python/tf/contrib/distributions/MixtureSameFamily", "k": ["allow_nan_stats", "batch_shape", "components_distribution", "dtype", "event_shape", "mixture_distribution", "name", "parameters", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "master", "t": "tf.contrib.distributions.MixtureSameFamily"}, {"p": "/versions/master/api_docs/python/tf/contrib/distributions/MultivariateNormalDiag", "k": ["allow_nan_stats", "batch_shape", "bijector", "distribution", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "master", "t": "tf.contrib.distributions.MultivariateNormalDiag"}, {"p": "/versions/master/api_docs/python/tf/contrib/distributions/MultivariateNormalDiagPlusLowRank", "k": ["allow_nan_stats", "batch_shape", "bijector", "distribution", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "master", "t": "tf.contrib.distributions.MultivariateNormalDiagPlusLowRank"}, {"p": "/versions/master/api_docs/python/tf/contrib/distributions/MultivariateNormalDiagWithSoftplusScale", "k": ["allow_nan_stats", "batch_shape", "bijector", "distribution", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "master", "t": "tf.contrib.distributions.MultivariateNormalDiagWithSoftplusScale"}, {"p": "/versions/master/api_docs/python/tf/contrib/distributions/MultivariateNormalFullCovariance", "k": ["allow_nan_stats", "batch_shape", "bijector", "distribution", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "master", "t": "tf.contrib.distributions.MultivariateNormalFullCovariance"}, {"p": "/versions/master/api_docs/python/tf/contrib/distributions/MultivariateNormalTriL", "k": ["allow_nan_stats", "batch_shape", "bijector", "distribution", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "master", "t": "tf.contrib.distributions.MultivariateNormalTriL"}, {"p": "/versions/master/api_docs/python/tf/contrib/distributions/NegativeBinomial", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "logits", "name", "parameters", "probs", "reparameterization_type", "total_count", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "master", "t": "tf.contrib.distributions.NegativeBinomial"}, {"p": "/versions/master/api_docs/python/tf/contrib/distributions/NormalWithSoftplusScale", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "master", "t": "tf.contrib.distributions.NormalWithSoftplusScale"}, {"p": "/versions/master/api_docs/python/tf/contrib/distributions/OneHotCategorical", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "event_size", "logits", "name", "parameters", "probs", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "master", "t": "tf.contrib.distributions.OneHotCategorical"}, {"p": "/versions/master/api_docs/python/tf/contrib/distributions/Poisson", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "log_rate", "name", "parameters", "rate", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "master", "t": "tf.contrib.distributions.Poisson"}, {"p": "/versions/master/api_docs/python/tf/contrib/distributions/PoissonLogNormalQuadratureCompound", "k": ["allow_nan_stats", "batch_shape", "distribution", "dtype", "event_shape", "loc", "mixture_distribution", "name", "parameters", "quadrature_size", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "master", "t": "tf.contrib.distributions.PoissonLogNormalQuadratureCompound"}, {"p": "/versions/master/api_docs/python/tf/contrib/distributions/QuantizedDistribution", "k": ["allow_nan_stats", "batch_shape", "distribution", "dtype", "event_shape", "name", "parameters", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "master", "t": "tf.contrib.distributions.QuantizedDistribution"}, {"p": "/versions/master/api_docs/python/tf/contrib/distributions/RelaxedBernoulli", "k": ["allow_nan_stats", "batch_shape", "bijector", "distribution", "dtype", "event_shape", "logits", "name", "parameters", "probs", "reparameterization_type", "temperature", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "master", "t": "tf.contrib.distributions.RelaxedBernoulli"}, {"p": "/versions/master/api_docs/python/tf/contrib/distributions/RelaxedOneHotCategorical", "k": ["allow_nan_stats", "batch_shape", "bijector", "distribution", "dtype", "event_shape", "name", "parameters", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "master", "t": "tf.contrib.distributions.RelaxedOneHotCategorical"}, {"p": "/versions/master/api_docs/python/tf/contrib/distributions/SinhArcsinh", "k": ["allow_nan_stats", "batch_shape", "bijector", "distribution", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "skewness", "tailweight", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "master", "t": "tf.contrib.distributions.SinhArcsinh"}, {"p": "/versions/master/api_docs/python/tf/contrib/distributions/StudentTWithAbsDfSoftplusScale", "k": ["allow_nan_stats", "batch_shape", "df", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "master", "t": "tf.contrib.distributions.StudentTWithAbsDfSoftplusScale"}, {"p": "/versions/master/api_docs/python/tf/contrib/distributions/TransformedDistribution", "k": ["allow_nan_stats", "batch_shape", "bijector", "distribution", "dtype", "event_shape", "name", "parameters", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "master", "t": "tf.contrib.distributions.TransformedDistribution"}, {"p": "/versions/master/api_docs/python/tf/contrib/distributions/VectorDeterministic", "k": ["allow_nan_stats", "atol", "batch_shape", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "rtol", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "master", "t": "tf.contrib.distributions.VectorDeterministic"}, {"p": "/versions/master/api_docs/python/tf/contrib/distributions/VectorDiffeomixture", "k": ["allow_nan_stats", "batch_shape", "distribution", "dtype", "endpoint_affine", "event_shape", "grid", "interpolated_affine", "mixture_distribution", "name", "parameters", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "master", "t": "tf.contrib.distributions.VectorDiffeomixture"}, {"p": "/versions/master/api_docs/python/tf/contrib/distributions/VectorExponentialDiag", "k": ["allow_nan_stats", "batch_shape", "bijector", "distribution", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "master", "t": "tf.contrib.distributions.VectorExponentialDiag"}, {"p": "/versions/master/api_docs/python/tf/contrib/distributions/VectorLaplaceDiag", "k": ["allow_nan_stats", "batch_shape", "bijector", "distribution", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "master", "t": "tf.contrib.distributions.VectorLaplaceDiag"}, {"p": "/versions/master/api_docs/python/tf/contrib/distributions/VectorSinhArcsinhDiag", "k": ["allow_nan_stats", "batch_shape", "bijector", "distribution", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "skewness", "tailweight", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "master", "t": "tf.contrib.distributions.VectorSinhArcsinhDiag"}, {"p": "/versions/master/api_docs/python/tf/contrib/distributions/WishartCholesky", "k": ["allow_nan_stats", "batch_shape", "cholesky_input_output_matrices", "df", "dimension", "dtype", "event_shape", "name", "parameters", "reparameterization_type", "scale_operator", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_normalization", "log_prob", "log_survival_function", "mean", "mean_log_det", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "scale", "stddev", "survival_function", "variance"], "r": "master", "t": "tf.contrib.distributions.WishartCholesky"}, {"p": "/versions/master/api_docs/python/tf/contrib/distributions/WishartFull", "k": ["allow_nan_stats", "batch_shape", "cholesky_input_output_matrices", "df", "dimension", "dtype", "event_shape", "name", "parameters", "reparameterization_type", "scale_operator", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_normalization", "log_prob", "log_survival_function", "mean", "mean_log_det", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "scale", "stddev", "survival_function", "variance"], "r": "master", "t": "tf.contrib.distributions.WishartFull"}, {"p": "/versions/master/api_docs/python/tf/contrib/distributions/assign_log_moving_mean_exp", "k": [], "r": "master", "t": "tf.contrib.distributions.assign_log_moving_mean_exp"}, {"p": "/versions/master/api_docs/python/tf/contrib/distributions/assign_moving_mean_variance", "k": [], "r": "master", "t": "tf.contrib.distributions.assign_moving_mean_variance"}, {"p": "/versions/master/api_docs/python/tf/contrib/distributions/auto_correlation", "k": [], "r": "master", "t": "tf.contrib.distributions.auto_correlation"}, {"p": "/versions/master/api_docs/python/tf/contrib/distributions/bijectors", "k": [], "r": "master", "t": "tf.contrib.distributions.bijectors"}, {"p": "/versions/master/api_docs/python/tf/contrib/distributions/bijectors/AbsoluteValue", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "master", "t": "tf.contrib.distributions.bijectors.AbsoluteValue"}, {"p": "/versions/master/api_docs/python/tf/contrib/distributions/bijectors/Affine", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "scale", "shift", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "master", "t": "tf.contrib.distributions.bijectors.Affine"}, {"p": "/versions/master/api_docs/python/tf/contrib/distributions/bijectors/AffineLinearOperator", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "scale", "shift", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "master", "t": "tf.contrib.distributions.bijectors.AffineLinearOperator"}, {"p": "/versions/master/api_docs/python/tf/contrib/distributions/bijectors/AffineScalar", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "scale", "shift", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "master", "t": "tf.contrib.distributions.bijectors.AffineScalar"}, {"p": "/versions/master/api_docs/python/tf/contrib/distributions/bijectors/BatchNormalization", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "master", "t": "tf.contrib.distributions.bijectors.BatchNormalization"}, {"p": "/versions/master/api_docs/python/tf/contrib/distributions/bijectors/Chain", "k": ["bijectors", "dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "master", "t": "tf.contrib.distributions.bijectors.Chain"}, {"p": "/versions/master/api_docs/python/tf/contrib/distributions/bijectors/CholeskyOuterProduct", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "master", "t": "tf.contrib.distributions.bijectors.CholeskyOuterProduct"}, {"p": "/versions/master/api_docs/python/tf/contrib/distributions/bijectors/ConditionalBijector", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "master", "t": "tf.contrib.distributions.bijectors.ConditionalBijector"}, {"p": "/versions/master/api_docs/python/tf/contrib/distributions/bijectors/Exp", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "power", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "master", "t": "tf.contrib.distributions.bijectors.Exp"}, {"p": "/versions/master/api_docs/python/tf/contrib/distributions/bijectors/Gumbel", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "loc", "name", "scale", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "master", "t": "tf.contrib.distributions.bijectors.Gumbel"}, {"p": "/versions/master/api_docs/python/tf/contrib/distributions/bijectors/Inline", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "master", "t": "tf.contrib.distributions.bijectors.Inline"}, {"p": "/versions/master/api_docs/python/tf/contrib/distributions/bijectors/Invert", "k": ["bijector", "dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "master", "t": "tf.contrib.distributions.bijectors.Invert"}, {"p": "/versions/master/api_docs/python/tf/contrib/distributions/bijectors/Kumaraswamy", "k": ["concentration0", "concentration1", "dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "master", "t": "tf.contrib.distributions.bijectors.Kumaraswamy"}, {"p": "/versions/master/api_docs/python/tf/contrib/distributions/bijectors/MaskedAutoregressiveFlow", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "master", "t": "tf.contrib.distributions.bijectors.MaskedAutoregressiveFlow"}, {"p": "/versions/master/api_docs/python/tf/contrib/distributions/bijectors/Permute", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "permutation", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "master", "t": "tf.contrib.distributions.bijectors.Permute"}, {"p": "/versions/master/api_docs/python/tf/contrib/distributions/bijectors/PowerTransform", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "power", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "master", "t": "tf.contrib.distributions.bijectors.PowerTransform"}, {"p": "/versions/master/api_docs/python/tf/contrib/distributions/bijectors/RealNVP", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "master", "t": "tf.contrib.distributions.bijectors.RealNVP"}, {"p": "/versions/master/api_docs/python/tf/contrib/distributions/bijectors/Reshape", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "master", "t": "tf.contrib.distributions.bijectors.Reshape"}, {"p": "/versions/master/api_docs/python/tf/contrib/distributions/bijectors/Sigmoid", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "master", "t": "tf.contrib.distributions.bijectors.Sigmoid"}, {"p": "/versions/master/api_docs/python/tf/contrib/distributions/bijectors/SinhArcsinh", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "skewness", "tailweight", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "master", "t": "tf.contrib.distributions.bijectors.SinhArcsinh"}, {"p": "/versions/master/api_docs/python/tf/contrib/distributions/bijectors/SoftmaxCentered", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "master", "t": "tf.contrib.distributions.bijectors.SoftmaxCentered"}, {"p": "/versions/master/api_docs/python/tf/contrib/distributions/bijectors/Softplus", "k": ["dtype", "event_ndims", "graph_parents", "hinge_softness", "is_constant_jacobian", "name", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "master", "t": "tf.contrib.distributions.bijectors.Softplus"}, {"p": "/versions/master/api_docs/python/tf/contrib/distributions/bijectors/Square", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "master", "t": "tf.contrib.distributions.bijectors.Square"}, {"p": "/versions/master/api_docs/python/tf/contrib/distributions/bijectors/masked_autoregressive_default_template", "k": [], "r": "master", "t": "tf.contrib.distributions.bijectors.masked_autoregressive_default_template"}, {"p": "/versions/master/api_docs/python/tf/contrib/distributions/bijectors/masked_dense", "k": [], "r": "master", "t": "tf.contrib.distributions.bijectors.masked_dense"}, {"p": "/versions/master/api_docs/python/tf/contrib/distributions/bijectors/real_nvp_default_template", "k": [], "r": "master", "t": "tf.contrib.distributions.bijectors.real_nvp_default_template"}, {"p": "/versions/master/api_docs/python/tf/contrib/distributions/estimator_head_distribution_regression", "k": [], "r": "master", "t": "tf.contrib.distributions.estimator_head_distribution_regression"}, {"p": "/versions/master/api_docs/python/tf/contrib/distributions/fill_triangular", "k": [], "r": "master", "t": "tf.contrib.distributions.fill_triangular"}, {"p": "/versions/master/api_docs/python/tf/contrib/distributions/matrix_diag_transform", "k": [], "r": "master", "t": "tf.contrib.distributions.matrix_diag_transform"}, {"p": "/versions/master/api_docs/python/tf/contrib/distributions/moving_mean_variance", "k": [], "r": "master", "t": "tf.contrib.distributions.moving_mean_variance"}, {"p": "/versions/master/api_docs/python/tf/contrib/distributions/normal_conjugates_known_scale_posterior", "k": [], "r": "master", "t": "tf.contrib.distributions.normal_conjugates_known_scale_posterior"}, {"p": "/versions/master/api_docs/python/tf/contrib/distributions/normal_conjugates_known_scale_predictive", "k": [], "r": "master", "t": "tf.contrib.distributions.normal_conjugates_known_scale_predictive"}, {"p": "/versions/master/api_docs/python/tf/contrib/distributions/percentile", "k": [], "r": "master", "t": "tf.contrib.distributions.percentile"}, {"p": "/versions/master/api_docs/python/tf/contrib/distributions/quadrature_scheme_lognormal_gauss_hermite", "k": [], "r": "master", "t": "tf.contrib.distributions.quadrature_scheme_lognormal_gauss_hermite"}, {"p": "/versions/master/api_docs/python/tf/contrib/distributions/quadrature_scheme_lognormal_quantiles", "k": [], "r": "master", "t": "tf.contrib.distributions.quadrature_scheme_lognormal_quantiles"}, {"p": "/versions/master/api_docs/python/tf/contrib/distributions/quadrature_scheme_softmaxnormal_gauss_hermite", "k": [], "r": "master", "t": "tf.contrib.distributions.quadrature_scheme_softmaxnormal_gauss_hermite"}, {"p": "/versions/master/api_docs/python/tf/contrib/distributions/quadrature_scheme_softmaxnormal_quantiles", "k": [], "r": "master", "t": "tf.contrib.distributions.quadrature_scheme_softmaxnormal_quantiles"}, {"p": "/versions/master/api_docs/python/tf/contrib/distributions/reduce_weighted_logsumexp", "k": [], "r": "master", "t": "tf.contrib.distributions.reduce_weighted_logsumexp"}, {"p": "/versions/master/api_docs/python/tf/contrib/distributions/softplus_inverse", "k": [], "r": "master", "t": "tf.contrib.distributions.softplus_inverse"}, {"p": "/versions/master/api_docs/python/tf/contrib/distributions/tridiag", "k": [], "r": "master", "t": "tf.contrib.distributions.tridiag"}, {"p": "/versions/master/api_docs/python/tf/contrib/eager", "k": ["ASYNC", "DEVICE_PLACEMENT_EXPLICIT", "DEVICE_PLACEMENT_SILENT", "DEVICE_PLACEMENT_WARN", "SYNC"], "r": "master", "t": "tf.contrib.eager"}, {"p": "/versions/master/api_docs/python/tf/contrib/eager/Checkpoint", "k": ["save_counter", "__init__", "__setattr__", "restore", "save"], "r": "master", "t": "tf.contrib.eager.Checkpoint"}, {"p": "/versions/master/api_docs/python/tf/contrib/eager/Checkpointable", "k": ["__setattr__"], "r": "master", "t": "tf.contrib.eager.Checkpointable"}, {"p": "/versions/master/api_docs/python/tf/contrib/eager/CheckpointableSaver", "k": ["__init__", "restore", "save"], "r": "master", "t": "tf.contrib.eager.CheckpointableSaver"}, {"p": "/versions/master/api_docs/python/tf/contrib/eager/EagerVariableStore", "k": ["__init__", "as_default", "copy", "non_trainable_variables", "trainable_variables", "variables"], "r": "master", "t": "tf.contrib.eager.EagerVariableStore"}, {"p": "/versions/master/api_docs/python/tf/contrib/eager/Iterator", "k": ["output_classes", "output_shapes", "output_types", "__init__", "__iter__", "__next__", "get_next", "next"], "r": "master", "t": "tf.contrib.eager.Iterator"}, {"p": "/versions/master/api_docs/python/tf/contrib/eager/Network", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "layers", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_layer", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "track_layer"], "r": "master", "t": "tf.contrib.eager.Network"}, {"p": "/versions/master/api_docs/python/tf/contrib/eager/Saver", "k": ["__init__", "restore", "save"], "r": "master", "t": "tf.contrib.eager.Saver"}, {"p": "/versions/master/api_docs/python/tf/contrib/eager/Sequential", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "layers", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_layer", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "track_layer"], "r": "master", "t": "tf.contrib.eager.Sequential"}, {"p": "/versions/master/api_docs/python/tf/contrib/eager/Variable", "k": ["SaveSliceInfo", "constraint", "create", "device", "dtype", "graph", "handle", "initial_value", "initializer", "name", "op", "shape", "__abs__", "__add__", "__and__", "__bool__", "__div__", "__floordiv__", "__ge__", "__getitem__", "__gt__", "__iadd__", "__idiv__", "__imul__", "__init__", "__int__", "__invert__", "__ipow__", "__irealdiv__", "__isub__", "__iter__", "__itruediv__", "__le__", "__lt__", "__matmul__", "__mod__", "__mul__", "__neg__", "__nonzero__", "__or__", "__pow__", "__radd__", "__rand__", "__rdiv__", "__rfloordiv__", "__rmatmul__", "__rmod__", "__rmul__", "__ror__", "__rpow__", "__rsub__", "__rtruediv__", "__rxor__", "__sub__", "__truediv__", "__xor__", "assign", "assign_add", "assign_sub", "count_up_to", "eval", "from_proto", "get_shape", "initialized_value", "load", "numpy", "read_value", "scatter_sub", "set_shape", "sparse_read", "to_proto", "value", "__array_priority__"], "r": "master", "t": "tf.contrib.eager.Variable"}, {"p": "/versions/master/api_docs/python/tf/contrib/eager/add_execution_callback", "k": [], "r": "master", "t": "tf.contrib.eager.add_execution_callback"}, {"p": "/versions/master/api_docs/python/tf/contrib/eager/async_clear_error", "k": [], "r": "master", "t": "tf.contrib.eager.async_clear_error"}, {"p": "/versions/master/api_docs/python/tf/contrib/eager/async_wait", "k": [], "r": "master", "t": "tf.contrib.eager.async_wait"}, {"p": "/versions/master/api_docs/python/tf/contrib/eager/clear_execution_callbacks", "k": [], "r": "master", "t": "tf.contrib.eager.clear_execution_callbacks"}, {"p": "/versions/master/api_docs/python/tf/contrib/eager/defun", "k": [], "r": "master", "t": "tf.contrib.eager.defun"}, {"p": "/versions/master/api_docs/python/tf/contrib/eager/execution_mode", "k": [], "r": "master", "t": "tf.contrib.eager.execution_mode"}, {"p": "/versions/master/api_docs/python/tf/contrib/eager/get_optimizer_variables", "k": [], "r": "master", "t": "tf.contrib.eager.get_optimizer_variables"}, {"p": "/versions/master/api_docs/python/tf/contrib/eager/gradients_function", "k": [], "r": "master", "t": "tf.contrib.eager.gradients_function"}, {"p": "/versions/master/api_docs/python/tf/contrib/eager/implicit_gradients", "k": [], "r": "master", "t": "tf.contrib.eager.implicit_gradients"}, {"p": "/versions/master/api_docs/python/tf/contrib/eager/implicit_value_and_gradients", "k": [], "r": "master", "t": "tf.contrib.eager.implicit_value_and_gradients"}, {"p": "/versions/master/api_docs/python/tf/contrib/eager/inf_callback", "k": [], "r": "master", "t": "tf.contrib.eager.inf_callback"}, {"p": "/versions/master/api_docs/python/tf/contrib/eager/inf_nan_callback", "k": [], "r": "master", "t": "tf.contrib.eager.inf_nan_callback"}, {"p": "/versions/master/api_docs/python/tf/contrib/eager/list_devices", "k": [], "r": "master", "t": "tf.contrib.eager.list_devices"}, {"p": "/versions/master/api_docs/python/tf/contrib/eager/make_template", "k": [], "r": "master", "t": "tf.contrib.eager.make_template"}, {"p": "/versions/master/api_docs/python/tf/contrib/eager/metrics", "k": [], "r": "master", "t": "tf.contrib.eager.metrics"}, {"p": "/versions/master/api_docs/python/tf/contrib/eager/metrics/Accuracy", "k": ["name", "variables", "__call__", "__init__", "add_variable", "aggregate", "build", "call", "init_variables", "result", "value"], "r": "master", "t": "tf.contrib.eager.metrics.Accuracy"}, {"p": "/versions/master/api_docs/python/tf/contrib/eager/metrics/Mean", "k": ["name", "variables", "__call__", "__init__", "add_variable", "aggregate", "build", "call", "init_variables", "result", "value"], "r": "master", "t": "tf.contrib.eager.metrics.Mean"}, {"p": "/versions/master/api_docs/python/tf/contrib/eager/metrics/Metric", "k": ["name", "variables", "__call__", "__init__", "add_variable", "aggregate", "build", "call", "init_variables", "result", "value"], "r": "master", "t": "tf.contrib.eager.metrics.Metric"}, {"p": "/versions/master/api_docs/python/tf/contrib/eager/nan_callback", "k": [], "r": "master", "t": "tf.contrib.eager.nan_callback"}, {"p": "/versions/master/api_docs/python/tf/contrib/eager/num_gpus", "k": [], "r": "master", "t": "tf.contrib.eager.num_gpus"}, {"p": "/versions/master/api_docs/python/tf/contrib/eager/py_func", "k": [], "r": "master", "t": "tf.contrib.eager.py_func"}, {"p": "/versions/master/api_docs/python/tf/contrib/eager/restore_network_checkpoint", "k": [], "r": "master", "t": "tf.contrib.eager.restore_network_checkpoint"}, {"p": "/versions/master/api_docs/python/tf/contrib/eager/restore_variables_on_create", "k": [], "r": "master", "t": "tf.contrib.eager.restore_variables_on_create"}, {"p": "/versions/master/api_docs/python/tf/contrib/eager/run", "k": [], "r": "master", "t": "tf.contrib.eager.run"}, {"p": "/versions/master/api_docs/python/tf/contrib/eager/run_test_in_graph_and_eager_modes", "k": [], "r": "master", "t": "tf.contrib.eager.run_test_in_graph_and_eager_modes"}, {"p": "/versions/master/api_docs/python/tf/contrib/eager/save_network_checkpoint", "k": [], "r": "master", "t": "tf.contrib.eager.save_network_checkpoint"}, {"p": "/versions/master/api_docs/python/tf/contrib/eager/set_execution_mode", "k": [], "r": "master", "t": "tf.contrib.eager.set_execution_mode"}, {"p": "/versions/master/api_docs/python/tf/contrib/eager/seterr", "k": [], "r": "master", "t": "tf.contrib.eager.seterr"}, {"p": "/versions/master/api_docs/python/tf/contrib/eager/value_and_gradients_function", "k": [], "r": "master", "t": "tf.contrib.eager.value_and_gradients_function"}, {"p": "/versions/master/api_docs/python/tf/contrib/estimator", "k": [], "r": "master", "t": "tf.contrib.estimator"}, {"p": "/versions/master/api_docs/python/tf/contrib/estimator/DNNEstimator", "k": ["config", "model_dir", "model_fn", "params", "__init__", "evaluate", "export_savedmodel", "get_variable_names", "get_variable_value", "latest_checkpoint", "predict", "train"], "r": "master", "t": "tf.contrib.estimator.DNNEstimator"}, {"p": "/versions/master/api_docs/python/tf/contrib/estimator/DNNLinearCombinedEstimator", "k": ["config", "model_dir", "model_fn", "params", "__init__", "evaluate", "export_savedmodel", "get_variable_names", "get_variable_value", "latest_checkpoint", "predict", "train"], "r": "master", "t": "tf.contrib.estimator.DNNLinearCombinedEstimator"}, {"p": "/versions/master/api_docs/python/tf/contrib/estimator/LinearEstimator", "k": ["config", "model_dir", "model_fn", "params", "__init__", "evaluate", "export_savedmodel", "get_variable_names", "get_variable_value", "latest_checkpoint", "predict", "train"], "r": "master", "t": "tf.contrib.estimator.LinearEstimator"}, {"p": "/versions/master/api_docs/python/tf/contrib/estimator/TowerOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "has_been_used", "minimize", "variables", "COLLECTION_FOR_GRAPH_STATES", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "master", "t": "tf.contrib.estimator.TowerOptimizer"}, {"p": "/versions/master/api_docs/python/tf/contrib/estimator/add_metrics", "k": [], "r": "master", "t": "tf.contrib.estimator.add_metrics"}, {"p": "/versions/master/api_docs/python/tf/contrib/estimator/binary_classification_head", "k": [], "r": "master", "t": "tf.contrib.estimator.binary_classification_head"}, {"p": "/versions/master/api_docs/python/tf/contrib/estimator/boosted_trees_classifier_train_in_memory", "k": [], "r": "master", "t": "tf.contrib.estimator.boosted_trees_classifier_train_in_memory"}, {"p": "/versions/master/api_docs/python/tf/contrib/estimator/boosted_trees_regressor_train_in_memory", "k": [], "r": "master", "t": "tf.contrib.estimator.boosted_trees_regressor_train_in_memory"}, {"p": "/versions/master/api_docs/python/tf/contrib/estimator/call_logit_fn", "k": [], "r": "master", "t": "tf.contrib.estimator.call_logit_fn"}, {"p": "/versions/master/api_docs/python/tf/contrib/estimator/clip_gradients_by_norm", "k": [], "r": "master", "t": "tf.contrib.estimator.clip_gradients_by_norm"}, {"p": "/versions/master/api_docs/python/tf/contrib/estimator/dnn_logit_fn_builder", "k": [], "r": "master", "t": "tf.contrib.estimator.dnn_logit_fn_builder"}, {"p": "/versions/master/api_docs/python/tf/contrib/estimator/forward_features", "k": [], "r": "master", "t": "tf.contrib.estimator.forward_features"}, {"p": "/versions/master/api_docs/python/tf/contrib/estimator/linear_logit_fn_builder", "k": [], "r": "master", "t": "tf.contrib.estimator.linear_logit_fn_builder"}, {"p": "/versions/master/api_docs/python/tf/contrib/estimator/multi_class_head", "k": [], "r": "master", "t": "tf.contrib.estimator.multi_class_head"}, {"p": "/versions/master/api_docs/python/tf/contrib/estimator/multi_head", "k": [], "r": "master", "t": "tf.contrib.estimator.multi_head"}, {"p": "/versions/master/api_docs/python/tf/contrib/estimator/multi_label_head", "k": [], "r": "master", "t": "tf.contrib.estimator.multi_label_head"}, {"p": "/versions/master/api_docs/python/tf/contrib/estimator/poisson_regression_head", "k": [], "r": "master", "t": "tf.contrib.estimator.poisson_regression_head"}, {"p": "/versions/master/api_docs/python/tf/contrib/estimator/regression_head", "k": [], "r": "master", "t": "tf.contrib.estimator.regression_head"}, {"p": "/versions/master/api_docs/python/tf/contrib/estimator/replicate_model_fn", "k": [], "r": "master", "t": "tf.contrib.estimator.replicate_model_fn"}, {"p": "/versions/master/api_docs/python/tf/contrib/factorization", "k": ["COSINE_DISTANCE", "KMEANS_PLUS_PLUS_INIT", "RANDOM_INIT", "SQUARED_EUCLIDEAN_DISTANCE"], "r": "master", "t": "tf.contrib.factorization"}, {"p": "/versions/master/api_docs/python/tf/contrib/factorization/GMM", "k": ["config", "model_dir", "model_fn", "__init__", "clusters", "covariances", "evaluate", "export", "export_savedmodel", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "predict_assignments", "score", "set_params", "weights", "ASSIGNMENTS", "LOG_LIKELIHOOD", "SCORES"], "r": "master", "t": "tf.contrib.factorization.GMM"}, {"p": "/versions/master/api_docs/python/tf/contrib/factorization/GmmAlgorithm", "k": ["__init__", "alphas", "assignments", "clusters", "covariances", "init_ops", "is_initialized", "log_likelihood_op", "scores", "training_ops", "CLUSTERS_COVS_VARIABLE", "CLUSTERS_VARIABLE", "CLUSTERS_WEIGHT"], "r": "master", "t": "tf.contrib.factorization.GmmAlgorithm"}, {"p": "/versions/master/api_docs/python/tf/contrib/factorization/KMeans", "k": ["__init__", "training_graph"], "r": "master", "t": "tf.contrib.factorization.KMeans"}, {"p": "/versions/master/api_docs/python/tf/contrib/factorization/KMeansClustering", "k": ["config", "model_dir", "model_fn", "params", "__init__", "cluster_centers", "evaluate", "export_savedmodel", "get_variable_names", "get_variable_value", "latest_checkpoint", "predict", "predict_cluster_index", "score", "train", "transform", "ALL_DISTANCES", "CLUSTER_CENTERS_VAR_NAME", "CLUSTER_INDEX", "COSINE_DISTANCE", "KMEANS_PLUS_PLUS_INIT", "RANDOM_INIT", "SCORE", "SQUARED_EUCLIDEAN_DISTANCE"], "r": "master", "t": "tf.contrib.factorization.KMeansClustering"}, {"p": "/versions/master/api_docs/python/tf/contrib/factorization/WALSMatrixFactorization", "k": ["config", "model_dir", "model_fn", "__init__", "evaluate", "export", "export_savedmodel", "fit", "get_col_factors", "get_params", "get_projections", "get_row_factors", "get_variable_names", "get_variable_value", "partial_fit", "predict", "set_params", "COMPLETED_SWEEPS", "INPUT_COLS", "INPUT_ROWS", "LOSS", "PROJECTION_RESULT", "PROJECTION_WEIGHTS", "PROJECT_ROW", "RWSE"], "r": "master", "t": "tf.contrib.factorization.WALSMatrixFactorization"}, {"p": "/versions/master/api_docs/python/tf/contrib/factorization/WALSModel", "k": ["col_factors", "col_update_prep_gramian_op", "col_weights", "initialize_col_update_op", "initialize_op", "initialize_row_update_op", "row_factors", "row_update_prep_gramian_op", "row_weights", "worker_init", "__init__", "project_col_factors", "project_row_factors", "scatter_update", "update_col_factors", "update_row_factors"], "r": "master", "t": "tf.contrib.factorization.WALSModel"}, {"p": "/versions/master/api_docs/python/tf/contrib/factorization/gmm", "k": [], "r": "master", "t": "tf.contrib.factorization.gmm"}, {"p": "/versions/master/api_docs/python/tf/contrib/feature_column", "k": [], "r": "master", "t": "tf.contrib.feature_column"}, {"p": "/versions/master/api_docs/python/tf/contrib/feature_column/sequence_categorical_column_with_hash_bucket", "k": [], "r": "master", "t": "tf.contrib.feature_column.sequence_categorical_column_with_hash_bucket"}, {"p": "/versions/master/api_docs/python/tf/contrib/feature_column/sequence_categorical_column_with_identity", "k": [], "r": "master", "t": "tf.contrib.feature_column.sequence_categorical_column_with_identity"}, {"p": "/versions/master/api_docs/python/tf/contrib/feature_column/sequence_categorical_column_with_vocabulary_file", "k": [], "r": "master", "t": "tf.contrib.feature_column.sequence_categorical_column_with_vocabulary_file"}, {"p": "/versions/master/api_docs/python/tf/contrib/feature_column/sequence_categorical_column_with_vocabulary_list", "k": [], "r": "master", "t": "tf.contrib.feature_column.sequence_categorical_column_with_vocabulary_list"}, {"p": "/versions/master/api_docs/python/tf/contrib/feature_column/sequence_input_layer", "k": [], "r": "master", "t": "tf.contrib.feature_column.sequence_input_layer"}, {"p": "/versions/master/api_docs/python/tf/contrib/feature_column/sequence_numeric_column", "k": [], "r": "master", "t": "tf.contrib.feature_column.sequence_numeric_column"}, {"p": "/versions/master/api_docs/python/tf/contrib/ffmpeg", "k": [], "r": "master", "t": "tf.contrib.ffmpeg"}, {"p": "/versions/master/api_docs/python/tf/contrib/ffmpeg/decode_audio", "k": [], "r": "master", "t": "tf.contrib.ffmpeg.decode_audio"}, {"p": "/versions/master/api_docs/python/tf/contrib/ffmpeg/decode_video", "k": [], "r": "master", "t": "tf.contrib.ffmpeg.decode_video"}, {"p": "/versions/master/api_docs/python/tf/contrib/ffmpeg/encode_audio", "k": [], "r": "master", "t": "tf.contrib.ffmpeg.encode_audio"}, {"p": "/versions/master/api_docs/python/tf/contrib/framework", "k": [], "r": "master", "t": "tf.contrib.framework"}, {"p": "/versions/master/api_docs/python/tf/contrib/framework/BoundedTensorSpec", "k": ["dtype", "is_continuous", "is_discrete", "maximum", "minimum", "name", "shape", "__eq__", "__init__", "__ne__", "__reduce__", "from_spec", "from_tensor", "is_bounded", "is_compatible_with"], "r": "master", "t": "tf.contrib.framework.BoundedTensorSpec"}, {"p": "/versions/master/api_docs/python/tf/contrib/framework/CriticalSection", "k": ["name", "__init__", "execute"], "r": "master", "t": "tf.contrib.framework.CriticalSection"}, {"p": "/versions/master/api_docs/python/tf/contrib/framework/TensorSpec", "k": ["dtype", "is_continuous", "is_discrete", "name", "shape", "__eq__", "__init__", "__ne__", "__reduce__", "from_spec", "from_tensor", "is_bounded", "is_compatible_with"], "r": "master", "t": "tf.contrib.framework.TensorSpec"}, {"p": "/versions/master/api_docs/python/tf/contrib/framework/VariableDeviceChooser", "k": ["__call__", "__init__"], "r": "master", "t": "tf.contrib.framework.VariableDeviceChooser"}, {"p": "/versions/master/api_docs/python/tf/contrib/framework/add_arg_scope", "k": [], "r": "master", "t": "tf.contrib.framework.add_arg_scope"}, {"p": "/versions/master/api_docs/python/tf/contrib/framework/add_model_variable", "k": [], "r": "master", "t": "tf.contrib.framework.add_model_variable"}, {"p": "/versions/master/api_docs/python/tf/contrib/framework/arg_scope", "k": [], "r": "master", "t": "tf.contrib.framework.arg_scope"}, {"p": "/versions/master/api_docs/python/tf/contrib/framework/arg_scoped_arguments", "k": [], "r": "master", "t": "tf.contrib.framework.arg_scoped_arguments"}, {"p": "/versions/master/api_docs/python/tf/contrib/framework/argsort", "k": [], "r": "master", "t": "tf.contrib.framework.argsort"}, {"p": "/versions/master/api_docs/python/tf/contrib/framework/assert_global_step", "k": [], "r": "master", "t": "tf.contrib.framework.assert_global_step"}, {"p": "/versions/master/api_docs/python/tf/contrib/framework/assert_or_get_global_step", "k": [], "r": "master", "t": "tf.contrib.framework.assert_or_get_global_step"}, {"p": "/versions/master/api_docs/python/tf/contrib/framework/assert_scalar_int", "k": [], "r": "master", "t": "tf.contrib.framework.assert_scalar_int"}, {"p": "/versions/master/api_docs/python/tf/contrib/framework/assign_from_checkpoint", "k": [], "r": "master", "t": "tf.contrib.framework.assign_from_checkpoint"}, {"p": "/versions/master/api_docs/python/tf/contrib/framework/assign_from_checkpoint_fn", "k": [], "r": "master", "t": "tf.contrib.framework.assign_from_checkpoint_fn"}, {"p": "/versions/master/api_docs/python/tf/contrib/framework/assign_from_values", "k": [], "r": "master", "t": "tf.contrib.framework.assign_from_values"}, {"p": "/versions/master/api_docs/python/tf/contrib/framework/assign_from_values_fn", "k": [], "r": "master", "t": "tf.contrib.framework.assign_from_values_fn"}, {"p": "/versions/master/api_docs/python/tf/contrib/framework/convolutional_delta_orthogonal", "k": ["__call__", "__init__", "from_config", "get_config"], "r": "master", "t": "tf.contrib.framework.convolutional_delta_orthogonal"}, {"p": "/versions/master/api_docs/python/tf/contrib/framework/create_global_step", "k": [], "r": "master", "t": "tf.contrib.framework.create_global_step"}, {"p": "/versions/master/api_docs/python/tf/contrib/framework/current_arg_scope", "k": [], "r": "master", "t": "tf.contrib.framework.current_arg_scope"}, {"p": "/versions/master/api_docs/python/tf/contrib/framework/deprecated", "k": [], "r": "master", "t": "tf.contrib.framework.deprecated"}, {"p": "/versions/master/api_docs/python/tf/contrib/framework/deprecated_arg_values", "k": [], "r": "master", "t": "tf.contrib.framework.deprecated_arg_values"}, {"p": "/versions/master/api_docs/python/tf/contrib/framework/deprecated_args", "k": [], "r": "master", "t": "tf.contrib.framework.deprecated_args"}, {"p": "/versions/master/api_docs/python/tf/contrib/framework/filter_variables", "k": [], "r": "master", "t": "tf.contrib.framework.filter_variables"}, {"p": "/versions/master/api_docs/python/tf/contrib/framework/fuse_op", "k": [], "r": "master", "t": "tf.contrib.framework.fuse_op"}, {"p": "/versions/master/api_docs/python/tf/contrib/framework/get_global_step", "k": [], "r": "master", "t": "tf.contrib.framework.get_global_step"}, {"p": "/versions/master/api_docs/python/tf/contrib/framework/get_graph_from_inputs", "k": [], "r": "master", "t": "tf.contrib.framework.get_graph_from_inputs"}, {"p": "/versions/master/api_docs/python/tf/contrib/framework/get_local_variables", "k": [], "r": "master", "t": "tf.contrib.framework.get_local_variables"}, {"p": "/versions/master/api_docs/python/tf/contrib/framework/get_model_variables", "k": [], "r": "master", "t": "tf.contrib.framework.get_model_variables"}, {"p": "/versions/master/api_docs/python/tf/contrib/framework/get_name_scope", "k": [], "r": "master", "t": "tf.contrib.framework.get_name_scope"}, {"p": "/versions/master/api_docs/python/tf/contrib/framework/get_or_create_global_step", "k": [], "r": "master", "t": "tf.contrib.framework.get_or_create_global_step"}, {"p": "/versions/master/api_docs/python/tf/contrib/framework/get_placeholders", "k": [], "r": "master", "t": "tf.contrib.framework.get_placeholders"}, {"p": "/versions/master/api_docs/python/tf/contrib/framework/get_trainable_variables", "k": [], "r": "master", "t": "tf.contrib.framework.get_trainable_variables"}, {"p": "/versions/master/api_docs/python/tf/contrib/framework/get_unique_variable", "k": [], "r": "master", "t": "tf.contrib.framework.get_unique_variable"}, {"p": "/versions/master/api_docs/python/tf/contrib/framework/get_variable_full_name", "k": [], "r": "master", "t": "tf.contrib.framework.get_variable_full_name"}, {"p": "/versions/master/api_docs/python/tf/contrib/framework/get_variables", "k": [], "r": "master", "t": "tf.contrib.framework.get_variables"}, {"p": "/versions/master/api_docs/python/tf/contrib/framework/get_variables_by_name", "k": [], "r": "master", "t": "tf.contrib.framework.get_variables_by_name"}, {"p": "/versions/master/api_docs/python/tf/contrib/framework/get_variables_by_suffix", "k": [], "r": "master", "t": "tf.contrib.framework.get_variables_by_suffix"}, {"p": "/versions/master/api_docs/python/tf/contrib/framework/get_variables_to_restore", "k": [], "r": "master", "t": "tf.contrib.framework.get_variables_to_restore"}, {"p": "/versions/master/api_docs/python/tf/contrib/framework/global_variable", "k": [], "r": "master", "t": "tf.contrib.framework.global_variable"}, {"p": "/versions/master/api_docs/python/tf/contrib/framework/has_arg_scope", "k": [], "r": "master", "t": "tf.contrib.framework.has_arg_scope"}, {"p": "/versions/master/api_docs/python/tf/contrib/framework/init_from_checkpoint", "k": [], "r": "master", "t": "tf.contrib.framework.init_from_checkpoint"}, {"p": "/versions/master/api_docs/python/tf/contrib/framework/is_tensor", "k": [], "r": "master", "t": "tf.contrib.framework.is_tensor"}, {"p": "/versions/master/api_docs/python/tf/contrib/framework/list_variables", "k": [], "r": "master", "t": "tf.contrib.framework.list_variables"}, {"p": "/versions/master/api_docs/python/tf/contrib/framework/load_and_remap_matrix_initializer", "k": [], "r": "master", "t": "tf.contrib.framework.load_and_remap_matrix_initializer"}, {"p": "/versions/master/api_docs/python/tf/contrib/framework/load_checkpoint", "k": [], "r": "master", "t": "tf.contrib.framework.load_checkpoint"}, {"p": "/versions/master/api_docs/python/tf/contrib/framework/load_embedding_initializer", "k": [], "r": "master", "t": "tf.contrib.framework.load_embedding_initializer"}, {"p": "/versions/master/api_docs/python/tf/contrib/framework/load_linear_multiclass_bias_initializer", "k": [], "r": "master", "t": "tf.contrib.framework.load_linear_multiclass_bias_initializer"}, {"p": "/versions/master/api_docs/python/tf/contrib/framework/load_variable", "k": [], "r": "master", "t": "tf.contrib.framework.load_variable"}, {"p": "/versions/master/api_docs/python/tf/contrib/framework/load_variable_slot_initializer", "k": [], "r": "master", "t": "tf.contrib.framework.load_variable_slot_initializer"}, {"p": "/versions/master/api_docs/python/tf/contrib/framework/local_variable", "k": [], "r": "master", "t": "tf.contrib.framework.local_variable"}, {"p": "/versions/master/api_docs/python/tf/contrib/framework/model_variable", "k": [], "r": "master", "t": "tf.contrib.framework.model_variable"}, {"p": "/versions/master/api_docs/python/tf/contrib/framework/nest", "k": [], "r": "master", "t": "tf.contrib.framework.nest"}, {"p": "/versions/master/api_docs/python/tf/contrib/framework/nest/assert_same_structure", "k": [], "r": "master", "t": "tf.contrib.framework.nest.assert_same_structure"}, {"p": "/versions/master/api_docs/python/tf/contrib/framework/nest/assert_shallow_structure", "k": [], "r": "master", "t": "tf.contrib.framework.nest.assert_shallow_structure"}, {"p": "/versions/master/api_docs/python/tf/contrib/framework/nest/flatten", "k": [], "r": "master", "t": "tf.contrib.framework.nest.flatten"}, {"p": "/versions/master/api_docs/python/tf/contrib/framework/nest/flatten_dict_items", "k": [], "r": "master", "t": "tf.contrib.framework.nest.flatten_dict_items"}, {"p": "/versions/master/api_docs/python/tf/contrib/framework/nest/flatten_up_to", "k": [], "r": "master", "t": "tf.contrib.framework.nest.flatten_up_to"}, {"p": "/versions/master/api_docs/python/tf/contrib/framework/nest/flatten_with_joined_string_paths", "k": [], "r": "master", "t": "tf.contrib.framework.nest.flatten_with_joined_string_paths"}, {"p": "/versions/master/api_docs/python/tf/contrib/framework/nest/get_traverse_shallow_structure", "k": [], "r": "master", "t": "tf.contrib.framework.nest.get_traverse_shallow_structure"}, {"p": "/versions/master/api_docs/python/tf/contrib/framework/nest/is_sequence", "k": [], "r": "master", "t": "tf.contrib.framework.nest.is_sequence"}, {"p": "/versions/master/api_docs/python/tf/contrib/framework/nest/map_structure", "k": [], "r": "master", "t": "tf.contrib.framework.nest.map_structure"}, {"p": "/versions/master/api_docs/python/tf/contrib/framework/nest/map_structure_up_to", "k": [], "r": "master", "t": "tf.contrib.framework.nest.map_structure_up_to"}, {"p": "/versions/master/api_docs/python/tf/contrib/framework/nest/pack_sequence_as", "k": [], "r": "master", "t": "tf.contrib.framework.nest.pack_sequence_as"}, {"p": "/versions/master/api_docs/python/tf/contrib/framework/nest/yield_flat_paths", "k": [], "r": "master", "t": "tf.contrib.framework.nest.yield_flat_paths"}, {"p": "/versions/master/api_docs/python/tf/contrib/framework/prepend_name_scope", "k": [], "r": "master", "t": "tf.contrib.framework.prepend_name_scope"}, {"p": "/versions/master/api_docs/python/tf/contrib/framework/py_func", "k": [], "r": "master", "t": "tf.contrib.framework.py_func"}, {"p": "/versions/master/api_docs/python/tf/contrib/framework/reduce_sum_n", "k": [], "r": "master", "t": "tf.contrib.framework.reduce_sum_n"}, {"p": "/versions/master/api_docs/python/tf/contrib/framework/remove_squeezable_dimensions", "k": [], "r": "master", "t": "tf.contrib.framework.remove_squeezable_dimensions"}, {"p": "/versions/master/api_docs/python/tf/contrib/framework/smart_case", "k": [], "r": "master", "t": "tf.contrib.framework.smart_case"}, {"p": "/versions/master/api_docs/python/tf/contrib/framework/smart_cond", "k": [], "r": "master", "t": "tf.contrib.framework.smart_cond"}, {"p": "/versions/master/api_docs/python/tf/contrib/framework/smart_constant_value", "k": [], "r": "master", "t": "tf.contrib.framework.smart_constant_value"}, {"p": "/versions/master/api_docs/python/tf/contrib/framework/sort", "k": [], "r": "master", "t": "tf.contrib.framework.sort"}, {"p": "/versions/master/api_docs/python/tf/contrib/framework/strip_name_scope", "k": [], "r": "master", "t": "tf.contrib.framework.strip_name_scope"}, {"p": "/versions/master/api_docs/python/tf/contrib/framework/variable", "k": [], "r": "master", "t": "tf.contrib.framework.variable"}, {"p": "/versions/master/api_docs/python/tf/contrib/framework/with_same_shape", "k": [], "r": "master", "t": "tf.contrib.framework.with_same_shape"}, {"p": "/versions/master/api_docs/python/tf/contrib/framework/with_shape", "k": [], "r": "master", "t": "tf.contrib.framework.with_shape"}, {"p": "/versions/master/api_docs/python/tf/contrib/framework/zero_initializer", "k": [], "r": "master", "t": "tf.contrib.framework.zero_initializer"}, {"p": "/versions/master/api_docs/python/tf/contrib/gan", "k": [], "r": "master", "t": "tf.contrib.gan"}, {"p": "/versions/master/api_docs/python/tf/contrib/gan/ACGANModel", "k": ["discriminator_fn", "discriminator_gen_classification_logits", "discriminator_gen_outputs", "discriminator_real_classification_logits", "discriminator_real_outputs", "discriminator_scope", "discriminator_variables", "generated_data", "generator_fn", "generator_inputs", "generator_scope", "generator_variables", "one_hot_labels", "real_data", "__new__"], "r": "master", "t": "tf.contrib.gan.ACGANModel"}, {"p": "/versions/master/api_docs/python/tf/contrib/gan/CycleGANLoss", "k": ["loss_x2y", "loss_y2x", "__new__"], "r": "master", "t": "tf.contrib.gan.CycleGANLoss"}, {"p": "/versions/master/api_docs/python/tf/contrib/gan/CycleGANModel", "k": ["model_x2y", "model_y2x", "reconstructed_x", "reconstructed_y", "__new__"], "r": "master", "t": "tf.contrib.gan.CycleGANModel"}, {"p": "/versions/master/api_docs/python/tf/contrib/gan/GANLoss", "k": ["discriminator_loss", "generator_loss", "__new__"], "r": "master", "t": "tf.contrib.gan.GANLoss"}, {"p": "/versions/master/api_docs/python/tf/contrib/gan/GANModel", "k": ["discriminator_fn", "discriminator_gen_outputs", "discriminator_real_outputs", "discriminator_scope", "discriminator_variables", "generated_data", "generator_fn", "generator_inputs", "generator_scope", "generator_variables", "real_data", "__new__"], "r": "master", "t": "tf.contrib.gan.GANModel"}, {"p": "/versions/master/api_docs/python/tf/contrib/gan/GANTrainOps", "k": ["discriminator_train_op", "generator_train_op", "global_step_inc_op", "__new__"], "r": "master", "t": "tf.contrib.gan.GANTrainOps"}, {"p": "/versions/master/api_docs/python/tf/contrib/gan/GANTrainSteps", "k": ["discriminator_train_steps", "generator_train_steps", "__new__"], "r": "master", "t": "tf.contrib.gan.GANTrainSteps"}, {"p": "/versions/master/api_docs/python/tf/contrib/gan/InfoGANModel", "k": ["discriminator_and_aux_fn", "discriminator_fn", "discriminator_gen_outputs", "discriminator_real_outputs", "discriminator_scope", "discriminator_variables", "generated_data", "generator_fn", "generator_inputs", "generator_scope", "generator_variables", "predicted_distributions", "real_data", "structured_generator_inputs", "__new__"], "r": "master", "t": "tf.contrib.gan.InfoGANModel"}, {"p": "/versions/master/api_docs/python/tf/contrib/gan/RunTrainOpsHook", "k": ["__init__", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "master", "t": "tf.contrib.gan.RunTrainOpsHook"}, {"p": "/versions/master/api_docs/python/tf/contrib/gan/acgan_model", "k": [], "r": "master", "t": "tf.contrib.gan.acgan_model"}, {"p": "/versions/master/api_docs/python/tf/contrib/gan/cyclegan_loss", "k": [], "r": "master", "t": "tf.contrib.gan.cyclegan_loss"}, {"p": "/versions/master/api_docs/python/tf/contrib/gan/cyclegan_model", "k": [], "r": "master", "t": "tf.contrib.gan.cyclegan_model"}, {"p": "/versions/master/api_docs/python/tf/contrib/gan/estimator", "k": [], "r": "master", "t": "tf.contrib.gan.estimator"}, {"p": "/versions/master/api_docs/python/tf/contrib/gan/estimator/GANEstimator", "k": ["config", "model_dir", "model_fn", "params", "__init__", "evaluate", "export_savedmodel", "get_variable_names", "get_variable_value", "latest_checkpoint", "predict", "train"], "r": "master", "t": "tf.contrib.gan.estimator.GANEstimator"}, {"p": "/versions/master/api_docs/python/tf/contrib/gan/estimator/GANHead", "k": ["logits_dimension", "name", "__init__", "create_estimator_spec", "create_loss"], "r": "master", "t": "tf.contrib.gan.estimator.GANHead"}, {"p": "/versions/master/api_docs/python/tf/contrib/gan/estimator/SummaryType", "k": ["IMAGES", "IMAGE_COMPARISON", "NONE", "VARIABLES", "__members__"], "r": "master", "t": "tf.contrib.gan.estimator.SummaryType"}, {"p": "/versions/master/api_docs/python/tf/contrib/gan/estimator/gan_estimator", "k": ["__all__"], "r": "master", "t": "tf.contrib.gan.estimator.gan_estimator"}, {"p": "/versions/master/api_docs/python/tf/contrib/gan/estimator/gan_head", "k": [], "r": "master", "t": "tf.contrib.gan.estimator.gan_head"}, {"p": "/versions/master/api_docs/python/tf/contrib/gan/estimator/head", "k": ["__all__"], "r": "master", "t": "tf.contrib.gan.estimator.head"}, {"p": "/versions/master/api_docs/python/tf/contrib/gan/eval", "k": ["INCEPTION_DEFAULT_IMAGE_SIZE", "frechet_inception_distance", "inception_score"], "r": "master", "t": "tf.contrib.gan.eval"}, {"p": "/versions/master/api_docs/python/tf/contrib/gan/eval/add_gan_model_image_summaries", "k": [], "r": "master", "t": "tf.contrib.gan.eval.add_gan_model_image_summaries"}, {"p": "/versions/master/api_docs/python/tf/contrib/gan/eval/add_gan_model_summaries", "k": [], "r": "master", "t": "tf.contrib.gan.eval.add_gan_model_summaries"}, {"p": "/versions/master/api_docs/python/tf/contrib/gan/eval/add_image_comparison_summaries", "k": [], "r": "master", "t": "tf.contrib.gan.eval.add_image_comparison_summaries"}, {"p": "/versions/master/api_docs/python/tf/contrib/gan/eval/add_regularization_loss_summaries", "k": [], "r": "master", "t": "tf.contrib.gan.eval.add_regularization_loss_summaries"}, {"p": "/versions/master/api_docs/python/tf/contrib/gan/eval/classifier_metrics", "k": ["INCEPTION_DEFAULT_IMAGE_SIZE", "__all__", "frechet_inception_distance", "inception_score"], "r": "master", "t": "tf.contrib.gan.eval.classifier_metrics"}, {"p": "/versions/master/api_docs/python/tf/contrib/gan/eval/classifier_score", "k": [], "r": "master", "t": "tf.contrib.gan.eval.classifier_score"}, {"p": "/versions/master/api_docs/python/tf/contrib/gan/eval/classifier_score_from_logits", "k": [], "r": "master", "t": "tf.contrib.gan.eval.classifier_score_from_logits"}, {"p": "/versions/master/api_docs/python/tf/contrib/gan/eval/diagonal_only_frechet_classifier_distance_from_activations", "k": [], "r": "master", "t": "tf.contrib.gan.eval.diagonal_only_frechet_classifier_distance_from_activations"}, {"p": "/versions/master/api_docs/python/tf/contrib/gan/eval/eval_utils", "k": ["__all__"], "r": "master", "t": "tf.contrib.gan.eval.eval_utils"}, {"p": "/versions/master/api_docs/python/tf/contrib/gan/eval/frechet_classifier_distance", "k": [], "r": "master", "t": "tf.contrib.gan.eval.frechet_classifier_distance"}, {"p": "/versions/master/api_docs/python/tf/contrib/gan/eval/frechet_classifier_distance_from_activations", "k": [], "r": "master", "t": "tf.contrib.gan.eval.frechet_classifier_distance_from_activations"}, {"p": "/versions/master/api_docs/python/tf/contrib/gan/eval/get_graph_def_from_disk", "k": [], "r": "master", "t": "tf.contrib.gan.eval.get_graph_def_from_disk"}, {"p": "/versions/master/api_docs/python/tf/contrib/gan/eval/get_graph_def_from_resource", "k": [], "r": "master", "t": "tf.contrib.gan.eval.get_graph_def_from_resource"}, {"p": "/versions/master/api_docs/python/tf/contrib/gan/eval/get_graph_def_from_url_tarball", "k": [], "r": "master", "t": "tf.contrib.gan.eval.get_graph_def_from_url_tarball"}, {"p": "/versions/master/api_docs/python/tf/contrib/gan/eval/image_grid", "k": [], "r": "master", "t": "tf.contrib.gan.eval.image_grid"}, {"p": "/versions/master/api_docs/python/tf/contrib/gan/eval/image_reshaper", "k": [], "r": "master", "t": "tf.contrib.gan.eval.image_reshaper"}, {"p": "/versions/master/api_docs/python/tf/contrib/gan/eval/mean_only_frechet_classifier_distance_from_activations", "k": [], "r": "master", "t": "tf.contrib.gan.eval.mean_only_frechet_classifier_distance_from_activations"}, {"p": "/versions/master/api_docs/python/tf/contrib/gan/eval/preprocess_image", "k": [], "r": "master", "t": "tf.contrib.gan.eval.preprocess_image"}, {"p": "/versions/master/api_docs/python/tf/contrib/gan/eval/run_image_classifier", "k": [], "r": "master", "t": "tf.contrib.gan.eval.run_image_classifier"}, {"p": "/versions/master/api_docs/python/tf/contrib/gan/eval/run_inception", "k": [], "r": "master", "t": "tf.contrib.gan.eval.run_inception"}, {"p": "/versions/master/api_docs/python/tf/contrib/gan/eval/sliced_wasserstein_distance", "k": [], "r": "master", "t": "tf.contrib.gan.eval.sliced_wasserstein_distance"}, {"p": "/versions/master/api_docs/python/tf/contrib/gan/eval/summaries", "k": ["__all__"], "r": "master", "t": "tf.contrib.gan.eval.summaries"}, {"p": "/versions/master/api_docs/python/tf/contrib/gan/features", "k": [], "r": "master", "t": "tf.contrib.gan.features"}, {"p": "/versions/master/api_docs/python/tf/contrib/gan/features/VBN", "k": ["__call__", "__init__", "reference_batch_normalization"], "r": "master", "t": "tf.contrib.gan.features.VBN"}, {"p": "/versions/master/api_docs/python/tf/contrib/gan/features/clip_discriminator_weights", "k": [], "r": "master", "t": "tf.contrib.gan.features.clip_discriminator_weights"}, {"p": "/versions/master/api_docs/python/tf/contrib/gan/features/clip_variables", "k": [], "r": "master", "t": "tf.contrib.gan.features.clip_variables"}, {"p": "/versions/master/api_docs/python/tf/contrib/gan/features/condition_tensor", "k": [], "r": "master", "t": "tf.contrib.gan.features.condition_tensor"}, {"p": "/versions/master/api_docs/python/tf/contrib/gan/features/condition_tensor_from_onehot", "k": [], "r": "master", "t": "tf.contrib.gan.features.condition_tensor_from_onehot"}, {"p": "/versions/master/api_docs/python/tf/contrib/gan/features/tensor_pool", "k": [], "r": "master", "t": "tf.contrib.gan.features.tensor_pool"}, {"p": "/versions/master/api_docs/python/tf/contrib/gan/gan_loss", "k": [], "r": "master", "t": "tf.contrib.gan.gan_loss"}, {"p": "/versions/master/api_docs/python/tf/contrib/gan/gan_model", "k": [], "r": "master", "t": "tf.contrib.gan.gan_model"}, {"p": "/versions/master/api_docs/python/tf/contrib/gan/gan_train", "k": [], "r": "master", "t": "tf.contrib.gan.gan_train"}, {"p": "/versions/master/api_docs/python/tf/contrib/gan/gan_train_ops", "k": [], "r": "master", "t": "tf.contrib.gan.gan_train_ops"}, {"p": "/versions/master/api_docs/python/tf/contrib/gan/get_joint_train_hooks", "k": [], "r": "master", "t": "tf.contrib.gan.get_joint_train_hooks"}, {"p": "/versions/master/api_docs/python/tf/contrib/gan/get_sequential_train_hooks", "k": [], "r": "master", "t": "tf.contrib.gan.get_sequential_train_hooks"}, {"p": "/versions/master/api_docs/python/tf/contrib/gan/get_sequential_train_steps", "k": [], "r": "master", "t": "tf.contrib.gan.get_sequential_train_steps"}, {"p": "/versions/master/api_docs/python/tf/contrib/gan/infogan_model", "k": [], "r": "master", "t": "tf.contrib.gan.infogan_model"}, {"p": "/versions/master/api_docs/python/tf/contrib/gan/losses", "k": [], "r": "master", "t": "tf.contrib.gan.losses"}, {"p": "/versions/master/api_docs/python/tf/contrib/gan/losses/acgan_discriminator_loss", "k": [], "r": "master", "t": "tf.contrib.gan.losses.acgan_discriminator_loss"}, {"p": "/versions/master/api_docs/python/tf/contrib/gan/losses/acgan_generator_loss", "k": [], "r": "master", "t": "tf.contrib.gan.losses.acgan_generator_loss"}, {"p": "/versions/master/api_docs/python/tf/contrib/gan/losses/combine_adversarial_loss", "k": [], "r": "master", "t": "tf.contrib.gan.losses.combine_adversarial_loss"}, {"p": "/versions/master/api_docs/python/tf/contrib/gan/losses/cycle_consistency_loss", "k": [], "r": "master", "t": "tf.contrib.gan.losses.cycle_consistency_loss"}, {"p": "/versions/master/api_docs/python/tf/contrib/gan/losses/least_squares_discriminator_loss", "k": [], "r": "master", "t": "tf.contrib.gan.losses.least_squares_discriminator_loss"}, {"p": "/versions/master/api_docs/python/tf/contrib/gan/losses/least_squares_generator_loss", "k": [], "r": "master", "t": "tf.contrib.gan.losses.least_squares_generator_loss"}, {"p": "/versions/master/api_docs/python/tf/contrib/gan/losses/minimax_discriminator_loss", "k": [], "r": "master", "t": "tf.contrib.gan.losses.minimax_discriminator_loss"}, {"p": "/versions/master/api_docs/python/tf/contrib/gan/losses/minimax_generator_loss", "k": [], "r": "master", "t": "tf.contrib.gan.losses.minimax_generator_loss"}, {"p": "/versions/master/api_docs/python/tf/contrib/gan/losses/modified_discriminator_loss", "k": [], "r": "master", "t": "tf.contrib.gan.losses.modified_discriminator_loss"}, {"p": "/versions/master/api_docs/python/tf/contrib/gan/losses/modified_generator_loss", "k": [], "r": "master", "t": "tf.contrib.gan.losses.modified_generator_loss"}, {"p": "/versions/master/api_docs/python/tf/contrib/gan/losses/mutual_information_penalty", "k": [], "r": "master", "t": "tf.contrib.gan.losses.mutual_information_penalty"}, {"p": "/versions/master/api_docs/python/tf/contrib/gan/losses/wargs", "k": [], "r": "master", "t": "tf.contrib.gan.losses.wargs"}, {"p": "/versions/master/api_docs/python/tf/contrib/gan/losses/wargs/acgan_discriminator_loss", "k": [], "r": "master", "t": "tf.contrib.gan.losses.wargs.acgan_discriminator_loss"}, {"p": "/versions/master/api_docs/python/tf/contrib/gan/losses/wargs/acgan_generator_loss", "k": [], "r": "master", "t": "tf.contrib.gan.losses.wargs.acgan_generator_loss"}, {"p": "/versions/master/api_docs/python/tf/contrib/gan/losses/wargs/combine_adversarial_loss", "k": [], "r": "master", "t": "tf.contrib.gan.losses.wargs.combine_adversarial_loss"}, {"p": "/versions/master/api_docs/python/tf/contrib/gan/losses/wargs/cycle_consistency_loss", "k": [], "r": "master", "t": "tf.contrib.gan.losses.wargs.cycle_consistency_loss"}, {"p": "/versions/master/api_docs/python/tf/contrib/gan/losses/wargs/least_squares_discriminator_loss", "k": [], "r": "master", "t": "tf.contrib.gan.losses.wargs.least_squares_discriminator_loss"}, {"p": "/versions/master/api_docs/python/tf/contrib/gan/losses/wargs/least_squares_generator_loss", "k": [], "r": "master", "t": "tf.contrib.gan.losses.wargs.least_squares_generator_loss"}, {"p": "/versions/master/api_docs/python/tf/contrib/gan/losses/wargs/minimax_discriminator_loss", "k": [], "r": "master", "t": "tf.contrib.gan.losses.wargs.minimax_discriminator_loss"}, {"p": "/versions/master/api_docs/python/tf/contrib/gan/losses/wargs/minimax_generator_loss", "k": [], "r": "master", "t": "tf.contrib.gan.losses.wargs.minimax_generator_loss"}, {"p": "/versions/master/api_docs/python/tf/contrib/gan/losses/wargs/modified_discriminator_loss", "k": [], "r": "master", "t": "tf.contrib.gan.losses.wargs.modified_discriminator_loss"}, {"p": "/versions/master/api_docs/python/tf/contrib/gan/losses/wargs/modified_generator_loss", "k": [], "r": "master", "t": "tf.contrib.gan.losses.wargs.modified_generator_loss"}, {"p": "/versions/master/api_docs/python/tf/contrib/gan/losses/wargs/mutual_information_penalty", "k": [], "r": "master", "t": "tf.contrib.gan.losses.wargs.mutual_information_penalty"}, {"p": "/versions/master/api_docs/python/tf/contrib/gan/losses/wargs/wasserstein_discriminator_loss", "k": [], "r": "master", "t": "tf.contrib.gan.losses.wargs.wasserstein_discriminator_loss"}, {"p": "/versions/master/api_docs/python/tf/contrib/gan/losses/wargs/wasserstein_generator_loss", "k": [], "r": "master", "t": "tf.contrib.gan.losses.wargs.wasserstein_generator_loss"}, {"p": "/versions/master/api_docs/python/tf/contrib/gan/losses/wargs/wasserstein_gradient_penalty", "k": [], "r": "master", "t": "tf.contrib.gan.losses.wargs.wasserstein_gradient_penalty"}, {"p": "/versions/master/api_docs/python/tf/contrib/gan/losses/wasserstein_discriminator_loss", "k": [], "r": "master", "t": "tf.contrib.gan.losses.wasserstein_discriminator_loss"}, {"p": "/versions/master/api_docs/python/tf/contrib/gan/losses/wasserstein_generator_loss", "k": [], "r": "master", "t": "tf.contrib.gan.losses.wasserstein_generator_loss"}, {"p": "/versions/master/api_docs/python/tf/contrib/gan/losses/wasserstein_gradient_penalty", "k": [], "r": "master", "t": "tf.contrib.gan.losses.wasserstein_gradient_penalty"}, {"p": "/versions/master/api_docs/python/tf/contrib/graph_editor", "k": [], "r": "master", "t": "tf.contrib.graph_editor"}, {"p": "/versions/master/api_docs/python/tf/contrib/graph_editor/ControlOutputs", "k": ["graph", "__init__", "get", "get_all", "update"], "r": "master", "t": "tf.contrib.graph_editor.ControlOutputs"}, {"p": "/versions/master/api_docs/python/tf/contrib/graph_editor/SubGraphView", "k": ["connected_inputs", "connected_outputs", "graph", "inputs", "ops", "outputs", "passthroughs", "__bool__", "__copy__", "__enter__", "__exit__", "__init__", "__nonzero__", "consumers", "copy", "find_op_by_name", "input_index", "is_passthrough", "op", "output_index", "remap", "remap_default", "remap_inputs", "remap_outputs", "remap_outputs_make_unique", "remap_outputs_to_consumers", "remove_unused_ops"], "r": "master", "t": "tf.contrib.graph_editor.SubGraphView"}, {"p": "/versions/master/api_docs/python/tf/contrib/graph_editor/Transformer", "k": ["__call__", "__init__"], "r": "master", "t": "tf.contrib.graph_editor.Transformer"}, {"p": "/versions/master/api_docs/python/tf/contrib/graph_editor/TransformerInfo", "k": ["__init__", "original", "transformed"], "r": "master", "t": "tf.contrib.graph_editor.TransformerInfo"}, {"p": "/versions/master/api_docs/python/tf/contrib/graph_editor/add_control_inputs", "k": [], "r": "master", "t": "tf.contrib.graph_editor.add_control_inputs"}, {"p": "/versions/master/api_docs/python/tf/contrib/graph_editor/assign_renamed_collections_handler", "k": [], "r": "master", "t": "tf.contrib.graph_editor.assign_renamed_collections_handler"}, {"p": "/versions/master/api_docs/python/tf/contrib/graph_editor/bypass", "k": [], "r": "master", "t": "tf.contrib.graph_editor.bypass"}, {"p": "/versions/master/api_docs/python/tf/contrib/graph_editor/can_be_regex", "k": [], "r": "master", "t": "tf.contrib.graph_editor.can_be_regex"}, {"p": "/versions/master/api_docs/python/tf/contrib/graph_editor/check_cios", "k": [], "r": "master", "t": "tf.contrib.graph_editor.check_cios"}, {"p": "/versions/master/api_docs/python/tf/contrib/graph_editor/compute_boundary_ts", "k": [], "r": "master", "t": "tf.contrib.graph_editor.compute_boundary_ts"}, {"p": "/versions/master/api_docs/python/tf/contrib/graph_editor/connect", "k": [], "r": "master", "t": "tf.contrib.graph_editor.connect"}, {"p": "/versions/master/api_docs/python/tf/contrib/graph_editor/copy", "k": [], "r": "master", "t": "tf.contrib.graph_editor.copy"}, {"p": "/versions/master/api_docs/python/tf/contrib/graph_editor/copy_op_handler", "k": [], "r": "master", "t": "tf.contrib.graph_editor.copy_op_handler"}, {"p": "/versions/master/api_docs/python/tf/contrib/graph_editor/copy_with_input_replacements", "k": [], "r": "master", "t": "tf.contrib.graph_editor.copy_with_input_replacements"}, {"p": "/versions/master/api_docs/python/tf/contrib/graph_editor/detach", "k": [], "r": "master", "t": "tf.contrib.graph_editor.detach"}, {"p": "/versions/master/api_docs/python/tf/contrib/graph_editor/detach_control_inputs", "k": [], "r": "master", "t": "tf.contrib.graph_editor.detach_control_inputs"}, {"p": "/versions/master/api_docs/python/tf/contrib/graph_editor/detach_control_outputs", "k": [], "r": "master", "t": "tf.contrib.graph_editor.detach_control_outputs"}, {"p": "/versions/master/api_docs/python/tf/contrib/graph_editor/detach_inputs", "k": [], "r": "master", "t": "tf.contrib.graph_editor.detach_inputs"}, {"p": "/versions/master/api_docs/python/tf/contrib/graph_editor/detach_outputs", "k": [], "r": "master", "t": "tf.contrib.graph_editor.detach_outputs"}, {"p": "/versions/master/api_docs/python/tf/contrib/graph_editor/edit", "k": [], "r": "master", "t": "tf.contrib.graph_editor.edit"}, {"p": "/versions/master/api_docs/python/tf/contrib/graph_editor/filter_ops", "k": [], "r": "master", "t": "tf.contrib.graph_editor.filter_ops"}, {"p": "/versions/master/api_docs/python/tf/contrib/graph_editor/filter_ops_from_regex", "k": [], "r": "master", "t": "tf.contrib.graph_editor.filter_ops_from_regex"}, {"p": "/versions/master/api_docs/python/tf/contrib/graph_editor/filter_ts", "k": [], "r": "master", "t": "tf.contrib.graph_editor.filter_ts"}, {"p": "/versions/master/api_docs/python/tf/contrib/graph_editor/filter_ts_from_regex", "k": [], "r": "master", "t": "tf.contrib.graph_editor.filter_ts_from_regex"}, {"p": "/versions/master/api_docs/python/tf/contrib/graph_editor/get_backward_walk_ops", "k": [], "r": "master", "t": "tf.contrib.graph_editor.get_backward_walk_ops"}, {"p": "/versions/master/api_docs/python/tf/contrib/graph_editor/get_consuming_ops", "k": [], "r": "master", "t": "tf.contrib.graph_editor.get_consuming_ops"}, {"p": "/versions/master/api_docs/python/tf/contrib/graph_editor/get_forward_walk_ops", "k": [], "r": "master", "t": "tf.contrib.graph_editor.get_forward_walk_ops"}, {"p": "/versions/master/api_docs/python/tf/contrib/graph_editor/get_generating_ops", "k": [], "r": "master", "t": "tf.contrib.graph_editor.get_generating_ops"}, {"p": "/versions/master/api_docs/python/tf/contrib/graph_editor/get_name_scope_ops", "k": [], "r": "master", "t": "tf.contrib.graph_editor.get_name_scope_ops"}, {"p": "/versions/master/api_docs/python/tf/contrib/graph_editor/get_ops_ios", "k": [], "r": "master", "t": "tf.contrib.graph_editor.get_ops_ios"}, {"p": "/versions/master/api_docs/python/tf/contrib/graph_editor/get_tensors", "k": [], "r": "master", "t": "tf.contrib.graph_editor.get_tensors"}, {"p": "/versions/master/api_docs/python/tf/contrib/graph_editor/get_walks_intersection_ops", "k": [], "r": "master", "t": "tf.contrib.graph_editor.get_walks_intersection_ops"}, {"p": "/versions/master/api_docs/python/tf/contrib/graph_editor/get_walks_union_ops", "k": [], "r": "master", "t": "tf.contrib.graph_editor.get_walks_union_ops"}, {"p": "/versions/master/api_docs/python/tf/contrib/graph_editor/get_within_boundary_ops", "k": [], "r": "master", "t": "tf.contrib.graph_editor.get_within_boundary_ops"}, {"p": "/versions/master/api_docs/python/tf/contrib/graph_editor/graph_replace", "k": [], "r": "master", "t": "tf.contrib.graph_editor.graph_replace"}, {"p": "/versions/master/api_docs/python/tf/contrib/graph_editor/keep_t_if_possible_handler", "k": [], "r": "master", "t": "tf.contrib.graph_editor.keep_t_if_possible_handler"}, {"p": "/versions/master/api_docs/python/tf/contrib/graph_editor/make_list_of_op", "k": [], "r": "master", "t": "tf.contrib.graph_editor.make_list_of_op"}, {"p": "/versions/master/api_docs/python/tf/contrib/graph_editor/make_list_of_t", "k": [], "r": "master", "t": "tf.contrib.graph_editor.make_list_of_t"}, {"p": "/versions/master/api_docs/python/tf/contrib/graph_editor/make_placeholder_from_dtype_and_shape", "k": [], "r": "master", "t": "tf.contrib.graph_editor.make_placeholder_from_dtype_and_shape"}, {"p": "/versions/master/api_docs/python/tf/contrib/graph_editor/make_placeholder_from_tensor", "k": [], "r": "master", "t": "tf.contrib.graph_editor.make_placeholder_from_tensor"}, {"p": "/versions/master/api_docs/python/tf/contrib/graph_editor/make_regex", "k": [], "r": "master", "t": "tf.contrib.graph_editor.make_regex"}, {"p": "/versions/master/api_docs/python/tf/contrib/graph_editor/make_view", "k": [], "r": "master", "t": "tf.contrib.graph_editor.make_view"}, {"p": "/versions/master/api_docs/python/tf/contrib/graph_editor/make_view_from_scope", "k": [], "r": "master", "t": "tf.contrib.graph_editor.make_view_from_scope"}, {"p": "/versions/master/api_docs/python/tf/contrib/graph_editor/placeholder_name", "k": [], "r": "master", "t": "tf.contrib.graph_editor.placeholder_name"}, {"p": "/versions/master/api_docs/python/tf/contrib/graph_editor/remove_control_inputs", "k": [], "r": "master", "t": "tf.contrib.graph_editor.remove_control_inputs"}, {"p": "/versions/master/api_docs/python/tf/contrib/graph_editor/replace_t_with_placeholder_handler", "k": [], "r": "master", "t": "tf.contrib.graph_editor.replace_t_with_placeholder_handler"}, {"p": "/versions/master/api_docs/python/tf/contrib/graph_editor/reroute", "k": [], "r": "master", "t": "tf.contrib.graph_editor.reroute"}, {"p": "/versions/master/api_docs/python/tf/contrib/graph_editor/reroute_inputs", "k": [], "r": "master", "t": "tf.contrib.graph_editor.reroute_inputs"}, {"p": "/versions/master/api_docs/python/tf/contrib/graph_editor/reroute_ios", "k": [], "r": "master", "t": "tf.contrib.graph_editor.reroute_ios"}, {"p": "/versions/master/api_docs/python/tf/contrib/graph_editor/reroute_outputs", "k": [], "r": "master", "t": "tf.contrib.graph_editor.reroute_outputs"}, {"p": "/versions/master/api_docs/python/tf/contrib/graph_editor/reroute_ts", "k": [], "r": "master", "t": "tf.contrib.graph_editor.reroute_ts"}, {"p": "/versions/master/api_docs/python/tf/contrib/graph_editor/select", "k": [], "r": "master", "t": "tf.contrib.graph_editor.select"}, {"p": "/versions/master/api_docs/python/tf/contrib/graph_editor/select_ops", "k": [], "r": "master", "t": "tf.contrib.graph_editor.select_ops"}, {"p": "/versions/master/api_docs/python/tf/contrib/graph_editor/select_ops_and_ts", "k": [], "r": "master", "t": "tf.contrib.graph_editor.select_ops_and_ts"}, {"p": "/versions/master/api_docs/python/tf/contrib/graph_editor/select_ts", "k": [], "r": "master", "t": "tf.contrib.graph_editor.select_ts"}, {"p": "/versions/master/api_docs/python/tf/contrib/graph_editor/subgraph", "k": [], "r": "master", "t": "tf.contrib.graph_editor.subgraph"}, {"p": "/versions/master/api_docs/python/tf/contrib/graph_editor/swap_inputs", "k": [], "r": "master", "t": "tf.contrib.graph_editor.swap_inputs"}, {"p": "/versions/master/api_docs/python/tf/contrib/graph_editor/swap_ios", "k": [], "r": "master", "t": "tf.contrib.graph_editor.swap_ios"}, {"p": "/versions/master/api_docs/python/tf/contrib/graph_editor/swap_outputs", "k": [], "r": "master", "t": "tf.contrib.graph_editor.swap_outputs"}, {"p": "/versions/master/api_docs/python/tf/contrib/graph_editor/swap_ts", "k": [], "r": "master", "t": "tf.contrib.graph_editor.swap_ts"}, {"p": "/versions/master/api_docs/python/tf/contrib/graph_editor/transform", "k": [], "r": "master", "t": "tf.contrib.graph_editor.transform"}, {"p": "/versions/master/api_docs/python/tf/contrib/graph_editor/transform_op_if_inside_handler", "k": [], "r": "master", "t": "tf.contrib.graph_editor.transform_op_if_inside_handler"}, {"p": "/versions/master/api_docs/python/tf/contrib/graph_editor/util", "k": [], "r": "master", "t": "tf.contrib.graph_editor.util"}, {"p": "/versions/master/api_docs/python/tf/contrib/grid_rnn", "k": [], "r": "master", "t": "tf.contrib.grid_rnn"}, {"p": "/versions/master/api_docs/python/tf/contrib/image", "k": [], "r": "master", "t": "tf.contrib.image"}, {"p": "/versions/master/api_docs/python/tf/contrib/image/angles_to_projective_transforms", "k": [], "r": "master", "t": "tf.contrib.image.angles_to_projective_transforms"}, {"p": "/versions/master/api_docs/python/tf/contrib/image/compose_transforms", "k": [], "r": "master", "t": "tf.contrib.image.compose_transforms"}, {"p": "/versions/master/api_docs/python/tf/contrib/image/connected_components", "k": [], "r": "master", "t": "tf.contrib.image.connected_components"}, {"p": "/versions/master/api_docs/python/tf/contrib/image/dense_image_warp", "k": [], "r": "master", "t": "tf.contrib.image.dense_image_warp"}, {"p": "/versions/master/api_docs/python/tf/contrib/image/interpolate_spline", "k": [], "r": "master", "t": "tf.contrib.image.interpolate_spline"}, {"p": "/versions/master/api_docs/python/tf/contrib/image/rotate", "k": [], "r": "master", "t": "tf.contrib.image.rotate"}, {"p": "/versions/master/api_docs/python/tf/contrib/image/single_image_random_dot_stereograms", "k": [], "r": "master", "t": "tf.contrib.image.single_image_random_dot_stereograms"}, {"p": "/versions/master/api_docs/python/tf/contrib/image/sparse_image_warp", "k": [], "r": "master", "t": "tf.contrib.image.sparse_image_warp"}, {"p": "/versions/master/api_docs/python/tf/contrib/image/transform", "k": [], "r": "master", "t": "tf.contrib.image.transform"}, {"p": "/versions/master/api_docs/python/tf/contrib/image/translate", "k": [], "r": "master", "t": "tf.contrib.image.translate"}, {"p": "/versions/master/api_docs/python/tf/contrib/image/translations_to_projective_transforms", "k": [], "r": "master", "t": "tf.contrib.image.translations_to_projective_transforms"}, {"p": "/versions/master/api_docs/python/tf/contrib/input_pipeline", "k": [], "r": "master", "t": "tf.contrib.input_pipeline"}, {"p": "/versions/master/api_docs/python/tf/contrib/input_pipeline/obtain_next", "k": [], "r": "master", "t": "tf.contrib.input_pipeline.obtain_next"}, {"p": "/versions/master/api_docs/python/tf/contrib/integrate", "k": [], "r": "master", "t": "tf.contrib.integrate"}, {"p": "/versions/master/api_docs/python/tf/contrib/integrate/odeint", "k": [], "r": "master", "t": "tf.contrib.integrate.odeint"}, {"p": "/versions/master/api_docs/python/tf/contrib/keras", "k": [], "r": "master", "t": "tf.contrib.keras"}, {"p": "/versions/master/api_docs/python/tf/contrib/kernel_methods", "k": [], "r": "master", "t": "tf.contrib.kernel_methods"}, {"p": "/versions/master/api_docs/python/tf/contrib/kernel_methods/KernelLinearClassifier", "k": ["config", "model_dir", "model_fn", "__init__", "evaluate", "export", "export_savedmodel", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "predict_classes", "predict_proba", "set_params"], "r": "master", "t": "tf.contrib.kernel_methods.KernelLinearClassifier"}, {"p": "/versions/master/api_docs/python/tf/contrib/kernel_methods/RandomFourierFeatureMapper", "k": ["input_dim", "name", "output_dim", "__init__", "map"], "r": "master", "t": "tf.contrib.kernel_methods.RandomFourierFeatureMapper"}, {"p": "/versions/master/api_docs/python/tf/contrib/kernel_methods/sparse_multiclass_hinge_loss", "k": [], "r": "master", "t": "tf.contrib.kernel_methods.sparse_multiclass_hinge_loss"}, {"p": "/versions/master/api_docs/python/tf/contrib/kfac", "k": [], "r": "master", "t": "tf.contrib.kfac"}, {"p": "/versions/master/api_docs/python/tf/contrib/kfac/curvature_matrix_vector_products", "k": [], "r": "master", "t": "tf.contrib.kfac.curvature_matrix_vector_products"}, {"p": "/versions/master/api_docs/python/tf/contrib/kfac/curvature_matrix_vector_products/CurvatureMatrixVectorProductComputer", "k": ["fisher_factor_inner_shapes", "generalized_gauss_newton_factor_inner_shapes", "__init__", "multiply_fisher", "multiply_fisher_factor", "multiply_fisher_factor_transpose", "multiply_generalized_gauss_newton", "multiply_generalized_gauss_newton_factor", "multiply_generalized_gauss_newton_factor_transpose", "multiply_hessian"], "r": "master", "t": "tf.contrib.kfac.curvature_matrix_vector_products.CurvatureMatrixVectorProductComputer"}, {"p": "/versions/master/api_docs/python/tf/contrib/kfac/estimator", "k": [], "r": "master", "t": "tf.contrib.kfac.estimator"}, {"p": "/versions/master/api_docs/python/tf/contrib/kfac/estimator/FisherEstimator", "k": ["blocks", "damping", "factors", "name", "variables", "__init__", "create_ops_and_vars_thunks", "made_vars", "make_ops_and_vars", "make_vars_and_create_op_thunks", "multiply", "multiply_inverse", "multiply_matpower"], "r": "master", "t": "tf.contrib.kfac.estimator.FisherEstimator"}, {"p": "/versions/master/api_docs/python/tf/contrib/kfac/fisher_blocks", "k": [], "r": "master", "t": "tf.contrib.kfac.fisher_blocks"}, {"p": "/versions/master/api_docs/python/tf/contrib/kfac/fisher_blocks/ConvDiagonalFB", "k": ["num_registered_towers", "__init__", "instantiate_factors", "multiply", "multiply_inverse", "multiply_matpower", "register_additional_tower", "register_inverse", "register_matpower", "tensors_to_compute_grads"], "r": "master", "t": "tf.contrib.kfac.fisher_blocks.ConvDiagonalFB"}, {"p": "/versions/master/api_docs/python/tf/contrib/kfac/fisher_blocks/ConvKFCBasicFB", "k": ["num_registered_towers", "__init__", "full_fisher_block", "instantiate_factors", "multiply", "multiply_inverse", "multiply_matpower", "register_additional_tower", "register_inverse", "register_matpower", "tensors_to_compute_grads"], "r": "master", "t": "tf.contrib.kfac.fisher_blocks.ConvKFCBasicFB"}, {"p": "/versions/master/api_docs/python/tf/contrib/kfac/fisher_blocks/EmbeddingKFACFB", "k": ["num_registered_towers", "__init__", "full_fisher_block", "instantiate_factors", "multiply", "multiply_inverse", "multiply_matpower", "register_additional_tower", "register_inverse", "register_matpower", "tensors_to_compute_grads"], "r": "master", "t": "tf.contrib.kfac.fisher_blocks.EmbeddingKFACFB"}, {"p": "/versions/master/api_docs/python/tf/contrib/kfac/fisher_blocks/FisherBlock", "k": ["num_registered_towers", "__init__", "instantiate_factors", "multiply", "multiply_inverse", "multiply_matpower", "register_inverse", "register_matpower", "tensors_to_compute_grads"], "r": "master", "t": "tf.contrib.kfac.fisher_blocks.FisherBlock"}, {"p": "/versions/master/api_docs/python/tf/contrib/kfac/fisher_blocks/FullFB", "k": ["num_registered_towers", "__init__", "full_fisher_block", "instantiate_factors", "multiply", "multiply_inverse", "multiply_matpower", "register_additional_tower", "register_inverse", "register_matpower", "tensors_to_compute_grads"], "r": "master", "t": "tf.contrib.kfac.fisher_blocks.FullFB"}, {"p": "/versions/master/api_docs/python/tf/contrib/kfac/fisher_blocks/FullyConnectedDiagonalFB", "k": ["num_registered_towers", "__init__", "instantiate_factors", "multiply", "multiply_inverse", "multiply_matpower", "register_additional_tower", "register_inverse", "register_matpower", "tensors_to_compute_grads"], "r": "master", "t": "tf.contrib.kfac.fisher_blocks.FullyConnectedDiagonalFB"}, {"p": "/versions/master/api_docs/python/tf/contrib/kfac/fisher_blocks/FullyConnectedKFACBasicFB", "k": ["num_registered_towers", "__init__", "full_fisher_block", "instantiate_factors", "multiply", "multiply_inverse", "multiply_matpower", "register_additional_tower", "register_inverse", "register_matpower", "tensors_to_compute_grads"], "r": "master", "t": "tf.contrib.kfac.fisher_blocks.FullyConnectedKFACBasicFB"}, {"p": "/versions/master/api_docs/python/tf/contrib/kfac/fisher_blocks/KroneckerProductFB", "k": ["num_registered_towers", "__init__", "full_fisher_block", "instantiate_factors", "multiply", "multiply_inverse", "multiply_matpower", "register_inverse", "register_matpower", "tensors_to_compute_grads"], "r": "master", "t": "tf.contrib.kfac.fisher_blocks.KroneckerProductFB"}, {"p": "/versions/master/api_docs/python/tf/contrib/kfac/fisher_blocks/NaiveDiagonalFB", "k": ["num_registered_towers", "__init__", "full_fisher_block", "instantiate_factors", "multiply", "multiply_inverse", "multiply_matpower", "register_additional_tower", "register_inverse", "register_matpower", "tensors_to_compute_grads"], "r": "master", "t": "tf.contrib.kfac.fisher_blocks.NaiveDiagonalFB"}, {"p": "/versions/master/api_docs/python/tf/contrib/kfac/fisher_blocks/compute_pi_adjusted_damping", "k": [], "r": "master", "t": "tf.contrib.kfac.fisher_blocks.compute_pi_adjusted_damping"}, {"p": "/versions/master/api_docs/python/tf/contrib/kfac/fisher_blocks/compute_pi_tracenorm", "k": [], "r": "master", "t": "tf.contrib.kfac.fisher_blocks.compute_pi_tracenorm"}, {"p": "/versions/master/api_docs/python/tf/contrib/kfac/fisher_blocks/normalize_damping", "k": [], "r": "master", "t": "tf.contrib.kfac.fisher_blocks.normalize_damping"}, {"p": "/versions/master/api_docs/python/tf/contrib/kfac/fisher_blocks/num_conv_locations", "k": [], "r": "master", "t": "tf.contrib.kfac.fisher_blocks.num_conv_locations"}, {"p": "/versions/master/api_docs/python/tf/contrib/kfac/fisher_blocks/set_global_constants", "k": [], "r": "master", "t": "tf.contrib.kfac.fisher_blocks.set_global_constants"}, {"p": "/versions/master/api_docs/python/tf/contrib/kfac/fisher_factors", "k": [], "r": "master", "t": "tf.contrib.kfac.fisher_factors"}, {"p": "/versions/master/api_docs/python/tf/contrib/kfac/fisher_factors/ConvDiagonalFactor", "k": ["name", "__init__", "get_cov", "get_cov_var", "instantiate_cov_variables", "instantiate_inv_variables", "left_multiply_matpower", "make_covariance_update_op", "make_inverse_update_ops", "register_matpower", "right_multiply_matpower"], "r": "master", "t": "tf.contrib.kfac.fisher_factors.ConvDiagonalFactor"}, {"p": "/versions/master/api_docs/python/tf/contrib/kfac/fisher_factors/ConvInputKroneckerFactor", "k": ["name", "__init__", "get_cov", "get_cov_var", "get_eigendecomp", "get_inverse", "get_matpower", "instantiate_cov_variables", "instantiate_inv_variables", "left_multiply_matpower", "make_covariance_update_op", "make_inverse_update_ops", "register_inverse", "register_matpower", "right_multiply_matpower"], "r": "master", "t": "tf.contrib.kfac.fisher_factors.ConvInputKroneckerFactor"}, {"p": "/versions/master/api_docs/python/tf/contrib/kfac/fisher_factors/ConvOutputKroneckerFactor", "k": ["name", "__init__", "get_cov", "get_cov_var", "get_eigendecomp", "get_inverse", "get_matpower", "instantiate_cov_variables", "instantiate_inv_variables", "left_multiply_matpower", "make_covariance_update_op", "make_inverse_update_ops", "register_inverse", "register_matpower", "right_multiply_matpower"], "r": "master", "t": "tf.contrib.kfac.fisher_factors.ConvOutputKroneckerFactor"}, {"p": "/versions/master/api_docs/python/tf/contrib/kfac/fisher_factors/DiagonalFactor", "k": ["name", "__init__", "get_cov", "get_cov_var", "instantiate_cov_variables", "instantiate_inv_variables", "left_multiply_matpower", "make_covariance_update_op", "make_inverse_update_ops", "register_matpower", "right_multiply_matpower"], "r": "master", "t": "tf.contrib.kfac.fisher_factors.DiagonalFactor"}, {"p": "/versions/master/api_docs/python/tf/contrib/kfac/fisher_factors/EmbeddingInputKroneckerFactor", "k": ["name", "__init__", "get_cov", "get_cov_var", "instantiate_cov_variables", "instantiate_inv_variables", "left_multiply_matpower", "make_covariance_update_op", "make_inverse_update_ops", "register_matpower", "right_multiply_matpower"], "r": "master", "t": "tf.contrib.kfac.fisher_factors.EmbeddingInputKroneckerFactor"}, {"p": "/versions/master/api_docs/python/tf/contrib/kfac/fisher_factors/FisherFactor", "k": ["name", "__init__", "get_cov", "get_cov_var", "instantiate_cov_variables", "instantiate_inv_variables", "left_multiply_matpower", "make_covariance_update_op", "make_inverse_update_ops", "right_multiply_matpower"], "r": "master", "t": "tf.contrib.kfac.fisher_factors.FisherFactor"}, {"p": "/versions/master/api_docs/python/tf/contrib/kfac/fisher_factors/FullFactor", "k": ["name", "__init__", "get_cov", "get_cov_var", "get_eigendecomp", "get_inverse", "get_matpower", "instantiate_cov_variables", "instantiate_inv_variables", "left_multiply_matpower", "make_covariance_update_op", "make_inverse_update_ops", "register_inverse", "register_matpower", "right_multiply_matpower"], "r": "master", "t": "tf.contrib.kfac.fisher_factors.FullFactor"}, {"p": "/versions/master/api_docs/python/tf/contrib/kfac/fisher_factors/FullyConnectedDiagonalFactor", "k": ["name", "__init__", "get_cov", "get_cov_var", "instantiate_cov_variables", "instantiate_inv_variables", "left_multiply_matpower", "make_covariance_update_op", "make_inverse_update_ops", "register_matpower", "right_multiply_matpower"], "r": "master", "t": "tf.contrib.kfac.fisher_factors.FullyConnectedDiagonalFactor"}, {"p": "/versions/master/api_docs/python/tf/contrib/kfac/fisher_factors/FullyConnectedKroneckerFactor", "k": ["name", "__init__", "get_cov", "get_cov_var", "get_eigendecomp", "get_inverse", "get_matpower", "instantiate_cov_variables", "instantiate_inv_variables", "left_multiply_matpower", "make_covariance_update_op", "make_inverse_update_ops", "register_inverse", "register_matpower", "right_multiply_matpower"], "r": "master", "t": "tf.contrib.kfac.fisher_factors.FullyConnectedKroneckerFactor"}, {"p": "/versions/master/api_docs/python/tf/contrib/kfac/fisher_factors/InverseProvidingFactor", "k": ["name", "__init__", "get_cov", "get_cov_var", "get_eigendecomp", "get_inverse", "get_matpower", "instantiate_cov_variables", "instantiate_inv_variables", "left_multiply_matpower", "make_covariance_update_op", "make_inverse_update_ops", "register_inverse", "register_matpower", "right_multiply_matpower"], "r": "master", "t": "tf.contrib.kfac.fisher_factors.InverseProvidingFactor"}, {"p": "/versions/master/api_docs/python/tf/contrib/kfac/fisher_factors/NaiveDiagonalFactor", "k": ["name", "__init__", "get_cov", "get_cov_var", "instantiate_cov_variables", "instantiate_inv_variables", "left_multiply_matpower", "make_covariance_update_op", "make_inverse_update_ops", "register_matpower", "right_multiply_matpower"], "r": "master", "t": "tf.contrib.kfac.fisher_factors.NaiveDiagonalFactor"}, {"p": "/versions/master/api_docs/python/tf/contrib/kfac/fisher_factors/append_homog", "k": [], "r": "master", "t": "tf.contrib.kfac.fisher_factors.append_homog"}, {"p": "/versions/master/api_docs/python/tf/contrib/kfac/fisher_factors/compute_cov", "k": [], "r": "master", "t": "tf.contrib.kfac.fisher_factors.compute_cov"}, {"p": "/versions/master/api_docs/python/tf/contrib/kfac/fisher_factors/covariance_initializer", "k": [], "r": "master", "t": "tf.contrib.kfac.fisher_factors.covariance_initializer"}, {"p": "/versions/master/api_docs/python/tf/contrib/kfac/fisher_factors/diagonal_covariance_initializer", "k": [], "r": "master", "t": "tf.contrib.kfac.fisher_factors.diagonal_covariance_initializer"}, {"p": "/versions/master/api_docs/python/tf/contrib/kfac/fisher_factors/inverse_initializer", "k": [], "r": "master", "t": "tf.contrib.kfac.fisher_factors.inverse_initializer"}, {"p": "/versions/master/api_docs/python/tf/contrib/kfac/fisher_factors/scalar_or_tensor_to_string", "k": [], "r": "master", "t": "tf.contrib.kfac.fisher_factors.scalar_or_tensor_to_string"}, {"p": "/versions/master/api_docs/python/tf/contrib/kfac/fisher_factors/scope_string_from_name", "k": [], "r": "master", "t": "tf.contrib.kfac.fisher_factors.scope_string_from_name"}, {"p": "/versions/master/api_docs/python/tf/contrib/kfac/fisher_factors/scope_string_from_params", "k": [], "r": "master", "t": "tf.contrib.kfac.fisher_factors.scope_string_from_params"}, {"p": "/versions/master/api_docs/python/tf/contrib/kfac/fisher_factors/set_global_constants", "k": [], "r": "master", "t": "tf.contrib.kfac.fisher_factors.set_global_constants"}, {"p": "/versions/master/api_docs/python/tf/contrib/kfac/layer_collection", "k": ["APPROX_DIAGONAL_NAME", "APPROX_FULL_NAME", "APPROX_KRONECKER_INDEP_NAME", "APPROX_KRONECKER_NAME", "APPROX_KRONECKER_SERIES_1_NAME", "APPROX_KRONECKER_SERIES_2_NAME", "VARIABLE_SCOPE"], "r": "master", "t": "tf.contrib.kfac.layer_collection"}, {"p": "/versions/master/api_docs/python/tf/contrib/kfac/layer_collection/LayerCollection", "k": ["default_conv2d_approximation", "default_conv2d_multi_approximation", "default_embedding_approximation", "default_embedding_multi_approximation", "default_fully_connected_approximation", "default_fully_connected_multi_approximation", "default_generic_approximation", "graph", "linked_parameters", "losses", "registered_variables", "subgraph", "towers_by_loss", "__init__", "as_default", "check_registration", "create_subgraph", "define_linked_parameters", "eval_losses", "eval_losses_on_samples", "get_blocks", "get_factors", "make_or_get_factor", "register_block", "register_categorical_predictive_distribution", "register_conv2d", "register_conv2d_multi", "register_convolution", "register_depthwise_conv2d", "register_embedding", "register_embedding_multi", "register_fully_connected", "register_fully_connected_multi", "register_generic", "register_loss_function", "register_multi_bernoulli_predictive_distribution", "register_normal_predictive_distribution", "register_separable_conv2d", "set_default_conv2d_approximation", "set_default_embedding_approximation", "set_default_fully_connected_approximation", "set_default_fully_connected_multi_approximation", "set_default_generic_approximation", "total_loss", "total_sampled_loss"], "r": "master", "t": "tf.contrib.kfac.layer_collection.LayerCollection"}, {"p": "/versions/master/api_docs/python/tf/contrib/kfac/layer_collection/LayerParametersDict", "k": ["__contains__", "__delitem__", "__eq__", "__getitem__", "__init__", "__iter__", "__ne__", "__reduce__", "__repr__", "__reversed__", "__setitem__", "clear", "copy", "fromkeys", "items", "iteritems", "iterkeys", "itervalues", "keys", "pop", "popitem", "setdefault", "update", "values", "viewitems", "viewkeys", "viewvalues", "__hash__"], "r": "master", "t": "tf.contrib.kfac.layer_collection.LayerParametersDict"}, {"p": "/versions/master/api_docs/python/tf/contrib/kfac/layer_collection/get_default_layer_collection", "k": [], "r": "master", "t": "tf.contrib.kfac.layer_collection.get_default_layer_collection"}, {"p": "/versions/master/api_docs/python/tf/contrib/kfac/layer_collection/set_default_layer_collection", "k": [], "r": "master", "t": "tf.contrib.kfac.layer_collection.set_default_layer_collection"}, {"p": "/versions/master/api_docs/python/tf/contrib/kfac/loss_functions", "k": [], "r": "master", "t": "tf.contrib.kfac.loss_functions"}, {"p": "/versions/master/api_docs/python/tf/contrib/kfac/loss_functions/CategoricalLogitsNegativeLogProbLoss", "k": ["dist", "fisher_factor_inner_shape", "fisher_factor_inner_static_shape", "hessian_factor_inner_shape", "hessian_factor_inner_static_shape", "inputs", "params", "targets", "__init__", "evaluate", "evaluate_on_sample", "multiply_fisher", "multiply_fisher_factor", "multiply_fisher_factor_replicated_one_hot", "multiply_fisher_factor_transpose", "multiply_hessian", "multiply_hessian_factor", "multiply_hessian_factor_replicated_one_hot", "multiply_hessian_factor_transpose", "sample"], "r": "master", "t": "tf.contrib.kfac.loss_functions.CategoricalLogitsNegativeLogProbLoss"}, {"p": "/versions/master/api_docs/python/tf/contrib/kfac/loss_functions/DistributionNegativeLogProbLoss", "k": ["dist", "fisher_factor_inner_shape", "fisher_factor_inner_static_shape", "hessian_factor_inner_shape", "hessian_factor_inner_static_shape", "inputs", "params", "targets", "__init__", "evaluate", "evaluate_on_sample", "multiply_fisher", "multiply_fisher_factor", "multiply_fisher_factor_replicated_one_hot", "multiply_fisher_factor_transpose", "multiply_hessian", "multiply_hessian_factor", "multiply_hessian_factor_replicated_one_hot", "multiply_hessian_factor_transpose", "sample"], "r": "master", "t": "tf.contrib.kfac.loss_functions.DistributionNegativeLogProbLoss"}, {"p": "/versions/master/api_docs/python/tf/contrib/kfac/loss_functions/LossFunction", "k": ["hessian_factor_inner_shape", "hessian_factor_inner_static_shape", "inputs", "targets", "evaluate", "multiply_hessian", "multiply_hessian_factor", "multiply_hessian_factor_replicated_one_hot", "multiply_hessian_factor_transpose"], "r": "master", "t": "tf.contrib.kfac.loss_functions.LossFunction"}, {"p": "/versions/master/api_docs/python/tf/contrib/kfac/loss_functions/MultiBernoulliNegativeLogProbLoss", "k": ["dist", "fisher_factor_inner_shape", "fisher_factor_inner_static_shape", "hessian_factor_inner_shape", "hessian_factor_inner_static_shape", "inputs", "params", "targets", "__init__", "evaluate", "evaluate_on_sample", "multiply_fisher", "multiply_fisher_factor", "multiply_fisher_factor_replicated_one_hot", "multiply_fisher_factor_transpose", "multiply_hessian", "multiply_hessian_factor", "multiply_hessian_factor_replicated_one_hot", "multiply_hessian_factor_transpose", "sample"], "r": "master", "t": "tf.contrib.kfac.loss_functions.MultiBernoulliNegativeLogProbLoss"}, {"p": "/versions/master/api_docs/python/tf/contrib/kfac/loss_functions/NaturalParamsNegativeLogProbLoss", "k": ["fisher_factor_inner_shape", "fisher_factor_inner_static_shape", "hessian_factor_inner_shape", "hessian_factor_inner_static_shape", "inputs", "params", "targets", "__init__", "evaluate", "evaluate_on_sample", "multiply_fisher", "multiply_fisher_factor", "multiply_fisher_factor_replicated_one_hot", "multiply_fisher_factor_transpose", "multiply_hessian", "multiply_hessian_factor", "multiply_hessian_factor_replicated_one_hot", "multiply_hessian_factor_transpose", "sample"], "r": "master", "t": "tf.contrib.kfac.loss_functions.NaturalParamsNegativeLogProbLoss"}, {"p": "/versions/master/api_docs/python/tf/contrib/kfac/loss_functions/NegativeLogProbLoss", "k": ["fisher_factor_inner_shape", "fisher_factor_inner_static_shape", "hessian_factor_inner_shape", "hessian_factor_inner_static_shape", "inputs", "params", "targets", "__init__", "evaluate", "evaluate_on_sample", "multiply_fisher", "multiply_fisher_factor", "multiply_fisher_factor_replicated_one_hot", "multiply_fisher_factor_transpose", "multiply_hessian", "multiply_hessian_factor", "multiply_hessian_factor_replicated_one_hot", "multiply_hessian_factor_transpose", "sample"], "r": "master", "t": "tf.contrib.kfac.loss_functions.NegativeLogProbLoss"}, {"p": "/versions/master/api_docs/python/tf/contrib/kfac/loss_functions/NormalMeanNegativeLogProbLoss", "k": ["dist", "fisher_factor_inner_shape", "fisher_factor_inner_static_shape", "hessian_factor_inner_shape", "hessian_factor_inner_static_shape", "inputs", "params", "targets", "__init__", "evaluate", "evaluate_on_sample", "multiply_fisher", "multiply_fisher_factor", "multiply_fisher_factor_replicated_one_hot", "multiply_fisher_factor_transpose", "multiply_hessian", "multiply_hessian_factor", "multiply_hessian_factor_replicated_one_hot", "multiply_hessian_factor_transpose", "sample"], "r": "master", "t": "tf.contrib.kfac.loss_functions.NormalMeanNegativeLogProbLoss"}, {"p": "/versions/master/api_docs/python/tf/contrib/kfac/loss_functions/NormalMeanVarianceNegativeLogProbLoss", "k": ["dist", "fisher_factor_inner_shape", "fisher_factor_inner_static_shape", "hessian_factor_inner_shape", "hessian_factor_inner_static_shape", "inputs", "params", "targets", "__init__", "evaluate", "evaluate_on_sample", "multiply_fisher", "multiply_fisher_factor", "multiply_fisher_factor_replicated_one_hot", "multiply_fisher_factor_transpose", "multiply_hessian", "multiply_hessian_factor", "multiply_hessian_factor_replicated_one_hot", "multiply_hessian_factor_transpose", "sample"], "r": "master", "t": "tf.contrib.kfac.loss_functions.NormalMeanVarianceNegativeLogProbLoss"}, {"p": "/versions/master/api_docs/python/tf/contrib/kfac/loss_functions/OnehotCategoricalLogitsNegativeLogProbLoss", "k": ["dist", "fisher_factor_inner_shape", "fisher_factor_inner_static_shape", "hessian_factor_inner_shape", "hessian_factor_inner_static_shape", "inputs", "params", "targets", "__init__", "evaluate", "evaluate_on_sample", "multiply_fisher", "multiply_fisher_factor", "multiply_fisher_factor_replicated_one_hot", "multiply_fisher_factor_transpose", "multiply_hessian", "multiply_hessian_factor", "multiply_hessian_factor_replicated_one_hot", "multiply_hessian_factor_transpose", "sample"], "r": "master", "t": "tf.contrib.kfac.loss_functions.OnehotCategoricalLogitsNegativeLogProbLoss"}, {"p": "/versions/master/api_docs/python/tf/contrib/kfac/loss_functions/insert_slice_in_zeros", "k": [], "r": "master", "t": "tf.contrib.kfac.loss_functions.insert_slice_in_zeros"}, {"p": "/versions/master/api_docs/python/tf/contrib/kfac/op_queue", "k": [], "r": "master", "t": "tf.contrib.kfac.op_queue"}, {"p": "/versions/master/api_docs/python/tf/contrib/kfac/op_queue/OpQueue", "k": ["ops", "__init__", "next_op"], "r": "master", "t": "tf.contrib.kfac.op_queue.OpQueue"}, {"p": "/versions/master/api_docs/python/tf/contrib/kfac/optimizer", "k": [], "r": "master", "t": "tf.contrib.kfac.optimizer"}, {"p": "/versions/master/api_docs/python/tf/contrib/kfac/optimizer/KfacOptimizer", "k": ["cov_update_op", "cov_update_ops", "cov_update_thunks", "damping", "damping_adaptation_interval", "inv_update_op", "inv_update_ops", "inv_update_thunks", "variables", "__init__", "apply_gradients", "compute_gradients", "create_ops_and_vars_thunks", "get_name", "get_slot", "get_slot_names", "make_ops_and_vars", "make_vars_and_create_op_thunks", "minimize", "set_damping_adaptation_params", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "master", "t": "tf.contrib.kfac.optimizer.KfacOptimizer"}, {"p": "/versions/master/api_docs/python/tf/contrib/kfac/utils", "k": [], "r": "master", "t": "tf.contrib.kfac.utils"}, {"p": "/versions/master/api_docs/python/tf/contrib/kfac/utils/SequenceDict", "k": ["__getitem__", "__init__", "__setitem__", "items"], "r": "master", "t": "tf.contrib.kfac.utils.SequenceDict"}, {"p": "/versions/master/api_docs/python/tf/contrib/kfac/utils/SubGraph", "k": ["__init__", "filter_list", "is_member", "variable_uses"], "r": "master", "t": "tf.contrib.kfac.utils.SubGraph"}, {"p": "/versions/master/api_docs/python/tf/contrib/kfac/utils/batch_execute", "k": [], "r": "master", "t": "tf.contrib.kfac.utils.batch_execute"}, {"p": "/versions/master/api_docs/python/tf/contrib/kfac/utils/column_to_tensors", "k": [], "r": "master", "t": "tf.contrib.kfac.utils.column_to_tensors"}, {"p": "/versions/master/api_docs/python/tf/contrib/kfac/utils/ensure_sequence", "k": [], "r": "master", "t": "tf.contrib.kfac.utils.ensure_sequence"}, {"p": "/versions/master/api_docs/python/tf/contrib/kfac/utils/extract_convolution_patches", "k": [], "r": "master", "t": "tf.contrib.kfac.utils.extract_convolution_patches"}, {"p": "/versions/master/api_docs/python/tf/contrib/kfac/utils/extract_pointwise_conv2d_patches", "k": [], "r": "master", "t": "tf.contrib.kfac.utils.extract_pointwise_conv2d_patches"}, {"p": "/versions/master/api_docs/python/tf/contrib/kfac/utils/fwd_gradients", "k": [], "r": "master", "t": "tf.contrib.kfac.utils.fwd_gradients"}, {"p": "/versions/master/api_docs/python/tf/contrib/kfac/utils/generate_random_signs", "k": [], "r": "master", "t": "tf.contrib.kfac.utils.generate_random_signs"}, {"p": "/versions/master/api_docs/python/tf/contrib/kfac/utils/is_data_format_channel_last", "k": [], "r": "master", "t": "tf.contrib.kfac.utils.is_data_format_channel_last"}, {"p": "/versions/master/api_docs/python/tf/contrib/kfac/utils/kronecker_product", "k": [], "r": "master", "t": "tf.contrib.kfac.utils.kronecker_product"}, {"p": "/versions/master/api_docs/python/tf/contrib/kfac/utils/layer_params_to_mat2d", "k": [], "r": "master", "t": "tf.contrib.kfac.utils.layer_params_to_mat2d"}, {"p": "/versions/master/api_docs/python/tf/contrib/kfac/utils/mat2d_to_layer_params", "k": [], "r": "master", "t": "tf.contrib.kfac.utils.mat2d_to_layer_params"}, {"p": "/versions/master/api_docs/python/tf/contrib/kfac/utils/matmul_diag_sparse", "k": [], "r": "master", "t": "tf.contrib.kfac.utils.matmul_diag_sparse"}, {"p": "/versions/master/api_docs/python/tf/contrib/kfac/utils/matmul_sparse_dense", "k": [], "r": "master", "t": "tf.contrib.kfac.utils.matmul_sparse_dense"}, {"p": "/versions/master/api_docs/python/tf/contrib/kfac/utils/posdef_inv", "k": [], "r": "master", "t": "tf.contrib.kfac.utils.posdef_inv"}, {"p": "/versions/master/api_docs/python/tf/contrib/kfac/utils/posdef_inv_cholesky", "k": [], "r": "master", "t": "tf.contrib.kfac.utils.posdef_inv_cholesky"}, {"p": "/versions/master/api_docs/python/tf/contrib/kfac/utils/posdef_inv_matrix_inverse", "k": [], "r": "master", "t": "tf.contrib.kfac.utils.posdef_inv_matrix_inverse"}, {"p": "/versions/master/api_docs/python/tf/contrib/kfac/utils/set_global_constants", "k": [], "r": "master", "t": "tf.contrib.kfac.utils.set_global_constants"}, {"p": "/versions/master/api_docs/python/tf/contrib/kfac/utils/tensors_to_column", "k": [], "r": "master", "t": "tf.contrib.kfac.utils.tensors_to_column"}, {"p": "/versions/master/api_docs/python/tf/contrib/labeled_tensor", "k": [], "r": "master", "t": "tf.contrib.labeled_tensor"}, {"p": "/versions/master/api_docs/python/tf/contrib/layers", "k": ["OPTIMIZER_CLS_NAMES", "OPTIMIZER_SUMMARIES", "SPARSE_FEATURE_CROSS_DEFAULT_HASH_KEY", "elu", "legacy_linear", "legacy_relu", "linear", "relu", "relu6", "scale_gradient"], "r": "master", "t": "tf.contrib.layers"}, {"p": "/versions/master/api_docs/python/tf/contrib/layers/GDN", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "master", "t": "tf.contrib.layers.GDN"}, {"p": "/versions/master/api_docs/python/tf/contrib/layers/RevBlock", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "backward", "build", "call", "compute_output_shape", "count_params", "forward", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "master", "t": "tf.contrib.layers.RevBlock"}, {"p": "/versions/master/api_docs/python/tf/contrib/layers/apply_regularization", "k": [], "r": "master", "t": "tf.contrib.layers.apply_regularization"}, {"p": "/versions/master/api_docs/python/tf/contrib/layers/avg_pool2d", "k": [], "r": "master", "t": "tf.contrib.layers.avg_pool2d"}, {"p": "/versions/master/api_docs/python/tf/contrib/layers/avg_pool3d", "k": [], "r": "master", "t": "tf.contrib.layers.avg_pool3d"}, {"p": "/versions/master/api_docs/python/tf/contrib/layers/batch_norm", "k": [], "r": "master", "t": "tf.contrib.layers.batch_norm"}, {"p": "/versions/master/api_docs/python/tf/contrib/layers/bias_add", "k": [], "r": "master", "t": "tf.contrib.layers.bias_add"}, {"p": "/versions/master/api_docs/python/tf/contrib/layers/bow_encoder", "k": [], "r": "master", "t": "tf.contrib.layers.bow_encoder"}, {"p": "/versions/master/api_docs/python/tf/contrib/layers/bucketized_column", "k": [], "r": "master", "t": "tf.contrib.layers.bucketized_column"}, {"p": "/versions/master/api_docs/python/tf/contrib/layers/check_feature_columns", "k": [], "r": "master", "t": "tf.contrib.layers.check_feature_columns"}, {"p": "/versions/master/api_docs/python/tf/contrib/layers/conv2d", "k": [], "r": "master", "t": "tf.contrib.layers.conv2d"}, {"p": "/versions/master/api_docs/python/tf/contrib/layers/conv2d_in_plane", "k": [], "r": "master", "t": "tf.contrib.layers.conv2d_in_plane"}, {"p": "/versions/master/api_docs/python/tf/contrib/layers/conv2d_transpose", "k": [], "r": "master", "t": "tf.contrib.layers.conv2d_transpose"}, {"p": "/versions/master/api_docs/python/tf/contrib/layers/conv3d_transpose", "k": [], "r": "master", "t": "tf.contrib.layers.conv3d_transpose"}, {"p": "/versions/master/api_docs/python/tf/contrib/layers/create_feature_spec_for_parsing", "k": [], "r": "master", "t": "tf.contrib.layers.create_feature_spec_for_parsing"}, {"p": "/versions/master/api_docs/python/tf/contrib/layers/crossed_column", "k": [], "r": "master", "t": "tf.contrib.layers.crossed_column"}, {"p": "/versions/master/api_docs/python/tf/contrib/layers/dense_to_sparse", "k": [], "r": "master", "t": "tf.contrib.layers.dense_to_sparse"}, {"p": "/versions/master/api_docs/python/tf/contrib/layers/dropout", "k": [], "r": "master", "t": "tf.contrib.layers.dropout"}, {"p": "/versions/master/api_docs/python/tf/contrib/layers/embed_sequence", "k": [], "r": "master", "t": "tf.contrib.layers.embed_sequence"}, {"p": "/versions/master/api_docs/python/tf/contrib/layers/embedding_column", "k": [], "r": "master", "t": "tf.contrib.layers.embedding_column"}, {"p": "/versions/master/api_docs/python/tf/contrib/layers/embedding_lookup_unique", "k": [], "r": "master", "t": "tf.contrib.layers.embedding_lookup_unique"}, {"p": "/versions/master/api_docs/python/tf/contrib/layers/feature_column", "k": [], "r": "master", "t": "tf.contrib.layers.feature_column"}, {"p": "/versions/master/api_docs/python/tf/contrib/layers/flatten", "k": [], "r": "master", "t": "tf.contrib.layers.flatten"}, {"p": "/versions/master/api_docs/python/tf/contrib/layers/fully_connected", "k": [], "r": "master", "t": "tf.contrib.layers.fully_connected"}, {"p": "/versions/master/api_docs/python/tf/contrib/layers/gdn", "k": [], "r": "master", "t": "tf.contrib.layers.gdn"}, {"p": "/versions/master/api_docs/python/tf/contrib/layers/images_to_sequence", "k": [], "r": "master", "t": "tf.contrib.layers.images_to_sequence"}, {"p": "/versions/master/api_docs/python/tf/contrib/layers/infer_real_valued_columns", "k": [], "r": "master", "t": "tf.contrib.layers.infer_real_valued_columns"}, {"p": "/versions/master/api_docs/python/tf/contrib/layers/input_from_feature_columns", "k": [], "r": "master", "t": "tf.contrib.layers.input_from_feature_columns"}, {"p": "/versions/master/api_docs/python/tf/contrib/layers/instance_norm", "k": [], "r": "master", "t": "tf.contrib.layers.instance_norm"}, {"p": "/versions/master/api_docs/python/tf/contrib/layers/joint_weighted_sum_from_feature_columns", "k": [], "r": "master", "t": "tf.contrib.layers.joint_weighted_sum_from_feature_columns"}, {"p": "/versions/master/api_docs/python/tf/contrib/layers/l1_l2_regularizer", "k": [], "r": "master", "t": "tf.contrib.layers.l1_l2_regularizer"}, {"p": "/versions/master/api_docs/python/tf/contrib/layers/l1_regularizer", "k": [], "r": "master", "t": "tf.contrib.layers.l1_regularizer"}, {"p": "/versions/master/api_docs/python/tf/contrib/layers/l2_regularizer", "k": [], "r": "master", "t": "tf.contrib.layers.l2_regularizer"}, {"p": "/versions/master/api_docs/python/tf/contrib/layers/layer_norm", "k": [], "r": "master", "t": "tf.contrib.layers.layer_norm"}, {"p": "/versions/master/api_docs/python/tf/contrib/layers/legacy_fully_connected", "k": [], "r": "master", "t": "tf.contrib.layers.legacy_fully_connected"}, {"p": "/versions/master/api_docs/python/tf/contrib/layers/make_place_holder_tensors_for_base_features", "k": [], "r": "master", "t": "tf.contrib.layers.make_place_holder_tensors_for_base_features"}, {"p": "/versions/master/api_docs/python/tf/contrib/layers/max_pool2d", "k": [], "r": "master", "t": "tf.contrib.layers.max_pool2d"}, {"p": "/versions/master/api_docs/python/tf/contrib/layers/max_pool3d", "k": [], "r": "master", "t": "tf.contrib.layers.max_pool3d"}, {"p": "/versions/master/api_docs/python/tf/contrib/layers/maxout", "k": [], "r": "master", "t": "tf.contrib.layers.maxout"}, {"p": "/versions/master/api_docs/python/tf/contrib/layers/multi_class_target", "k": [], "r": "master", "t": "tf.contrib.layers.multi_class_target"}, {"p": "/versions/master/api_docs/python/tf/contrib/layers/one_hot_column", "k": [], "r": "master", "t": "tf.contrib.layers.one_hot_column"}, {"p": "/versions/master/api_docs/python/tf/contrib/layers/one_hot_encoding", "k": [], "r": "master", "t": "tf.contrib.layers.one_hot_encoding"}, {"p": "/versions/master/api_docs/python/tf/contrib/layers/optimize_loss", "k": [], "r": "master", "t": "tf.contrib.layers.optimize_loss"}, {"p": "/versions/master/api_docs/python/tf/contrib/layers/parse_feature_columns_from_examples", "k": [], "r": "master", "t": "tf.contrib.layers.parse_feature_columns_from_examples"}, {"p": "/versions/master/api_docs/python/tf/contrib/layers/parse_feature_columns_from_sequence_examples", "k": [], "r": "master", "t": "tf.contrib.layers.parse_feature_columns_from_sequence_examples"}, {"p": "/versions/master/api_docs/python/tf/contrib/layers/real_valued_column", "k": [], "r": "master", "t": "tf.contrib.layers.real_valued_column"}, {"p": "/versions/master/api_docs/python/tf/contrib/layers/recompute_grad", "k": [], "r": "master", "t": "tf.contrib.layers.recompute_grad"}, {"p": "/versions/master/api_docs/python/tf/contrib/layers/regression_target", "k": [], "r": "master", "t": "tf.contrib.layers.regression_target"}, {"p": "/versions/master/api_docs/python/tf/contrib/layers/repeat", "k": [], "r": "master", "t": "tf.contrib.layers.repeat"}, {"p": "/versions/master/api_docs/python/tf/contrib/layers/rev_block", "k": [], "r": "master", "t": "tf.contrib.layers.rev_block"}, {"p": "/versions/master/api_docs/python/tf/contrib/layers/safe_embedding_lookup_sparse", "k": [], "r": "master", "t": "tf.contrib.layers.safe_embedding_lookup_sparse"}, {"p": "/versions/master/api_docs/python/tf/contrib/layers/scattered_embedding_column", "k": [], "r": "master", "t": "tf.contrib.layers.scattered_embedding_column"}, {"p": "/versions/master/api_docs/python/tf/contrib/layers/separable_conv2d", "k": [], "r": "master", "t": "tf.contrib.layers.separable_conv2d"}, {"p": "/versions/master/api_docs/python/tf/contrib/layers/sequence_input_from_feature_columns", "k": [], "r": "master", "t": "tf.contrib.layers.sequence_input_from_feature_columns"}, {"p": "/versions/master/api_docs/python/tf/contrib/layers/sequence_to_images", "k": [], "r": "master", "t": "tf.contrib.layers.sequence_to_images"}, {"p": "/versions/master/api_docs/python/tf/contrib/layers/shared_embedding_columns", "k": [], "r": "master", "t": "tf.contrib.layers.shared_embedding_columns"}, {"p": "/versions/master/api_docs/python/tf/contrib/layers/softmax", "k": [], "r": "master", "t": "tf.contrib.layers.softmax"}, {"p": "/versions/master/api_docs/python/tf/contrib/layers/sparse_column_with_hash_bucket", "k": [], "r": "master", "t": "tf.contrib.layers.sparse_column_with_hash_bucket"}, {"p": "/versions/master/api_docs/python/tf/contrib/layers/sparse_column_with_integerized_feature", "k": [], "r": "master", "t": "tf.contrib.layers.sparse_column_with_integerized_feature"}, {"p": "/versions/master/api_docs/python/tf/contrib/layers/sparse_column_with_keys", "k": [], "r": "master", "t": "tf.contrib.layers.sparse_column_with_keys"}, {"p": "/versions/master/api_docs/python/tf/contrib/layers/sparse_column_with_vocabulary_file", "k": [], "r": "master", "t": "tf.contrib.layers.sparse_column_with_vocabulary_file"}, {"p": "/versions/master/api_docs/python/tf/contrib/layers/spatial_softmax", "k": [], "r": "master", "t": "tf.contrib.layers.spatial_softmax"}, {"p": "/versions/master/api_docs/python/tf/contrib/layers/stack", "k": [], "r": "master", "t": "tf.contrib.layers.stack"}, {"p": "/versions/master/api_docs/python/tf/contrib/layers/sum_regularizer", "k": [], "r": "master", "t": "tf.contrib.layers.sum_regularizer"}, {"p": "/versions/master/api_docs/python/tf/contrib/layers/summaries", "k": [], "r": "master", "t": "tf.contrib.layers.summaries"}, {"p": "/versions/master/api_docs/python/tf/contrib/layers/summarize_activation", "k": [], "r": "master", "t": "tf.contrib.layers.summarize_activation"}, {"p": "/versions/master/api_docs/python/tf/contrib/layers/summarize_activations", "k": [], "r": "master", "t": "tf.contrib.layers.summarize_activations"}, {"p": "/versions/master/api_docs/python/tf/contrib/layers/summarize_collection", "k": [], "r": "master", "t": "tf.contrib.layers.summarize_collection"}, {"p": "/versions/master/api_docs/python/tf/contrib/layers/summarize_tensor", "k": [], "r": "master", "t": "tf.contrib.layers.summarize_tensor"}, {"p": "/versions/master/api_docs/python/tf/contrib/layers/summarize_tensors", "k": [], "r": "master", "t": "tf.contrib.layers.summarize_tensors"}, {"p": "/versions/master/api_docs/python/tf/contrib/layers/transform_features", "k": [], "r": "master", "t": "tf.contrib.layers.transform_features"}, {"p": "/versions/master/api_docs/python/tf/contrib/layers/unit_norm", "k": [], "r": "master", "t": "tf.contrib.layers.unit_norm"}, {"p": "/versions/master/api_docs/python/tf/contrib/layers/variance_scaling_initializer", "k": [], "r": "master", "t": "tf.contrib.layers.variance_scaling_initializer"}, {"p": "/versions/master/api_docs/python/tf/contrib/layers/weighted_sparse_column", "k": [], "r": "master", "t": "tf.contrib.layers.weighted_sparse_column"}, {"p": "/versions/master/api_docs/python/tf/contrib/layers/weighted_sum_from_feature_columns", "k": [], "r": "master", "t": "tf.contrib.layers.weighted_sum_from_feature_columns"}, {"p": "/versions/master/api_docs/python/tf/contrib/layers/xavier_initializer", "k": [], "r": "master", "t": "tf.contrib.layers.xavier_initializer"}, {"p": "/versions/master/api_docs/python/tf/contrib/learn", "k": [], "r": "master", "t": "tf.contrib.learn"}, {"p": "/versions/master/api_docs/python/tf/contrib/learn/BaseEstimator", "k": ["config", "model_dir", "model_fn", "__init__", "evaluate", "export", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "set_params"], "r": "master", "t": "tf.contrib.learn.BaseEstimator"}, {"p": "/versions/master/api_docs/python/tf/contrib/learn/DNNClassifier", "k": ["config", "model_dir", "model_fn", "__init__", "evaluate", "export", "export_savedmodel", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "predict_classes", "predict_proba", "set_params"], "r": "master", "t": "tf.contrib.learn.DNNClassifier"}, {"p": "/versions/master/api_docs/python/tf/contrib/learn/DNNEstimator", "k": ["config", "model_dir", "model_fn", "__init__", "evaluate", "export", "export_savedmodel", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "set_params"], "r": "master", "t": "tf.contrib.learn.DNNEstimator"}, {"p": "/versions/master/api_docs/python/tf/contrib/learn/DNNLinearCombinedClassifier", "k": ["config", "model_dir", "model_fn", "__init__", "evaluate", "export", "export_savedmodel", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "predict_classes", "predict_proba", "set_params"], "r": "master", "t": "tf.contrib.learn.DNNLinearCombinedClassifier"}, {"p": "/versions/master/api_docs/python/tf/contrib/learn/DNNLinearCombinedEstimator", "k": ["config", "model_dir", "model_fn", "__init__", "evaluate", "export", "export_savedmodel", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "set_params"], "r": "master", "t": "tf.contrib.learn.DNNLinearCombinedEstimator"}, {"p": "/versions/master/api_docs/python/tf/contrib/learn/DNNLinearCombinedRegressor", "k": ["config", "model_dir", "model_fn", "__init__", "evaluate", "export", "export_savedmodel", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "predict_scores", "set_params"], "r": "master", "t": "tf.contrib.learn.DNNLinearCombinedRegressor"}, {"p": "/versions/master/api_docs/python/tf/contrib/learn/DNNRegressor", "k": ["config", "model_dir", "model_fn", "__init__", "evaluate", "export", "export_savedmodel", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "predict_scores", "set_params"], "r": "master", "t": "tf.contrib.learn.DNNRegressor"}, {"p": "/versions/master/api_docs/python/tf/contrib/learn/DynamicRnnEstimator", "k": ["config", "model_dir", "model_fn", "__init__", "evaluate", "export", "export_savedmodel", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "set_params"], "r": "master", "t": "tf.contrib.learn.DynamicRnnEstimator"}, {"p": "/versions/master/api_docs/python/tf/contrib/learn/Estimator", "k": ["config", "model_dir", "model_fn", "__init__", "evaluate", "export", "export_savedmodel", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "set_params"], "r": "master", "t": "tf.contrib.learn.Estimator"}, {"p": "/versions/master/api_docs/python/tf/contrib/learn/Evaluable", "k": ["model_dir", "evaluate"], "r": "master", "t": "tf.contrib.learn.Evaluable"}, {"p": "/versions/master/api_docs/python/tf/contrib/learn/Experiment", "k": ["estimator", "eval_metrics", "eval_steps", "train_steps", "__init__", "continuous_eval", "continuous_eval_on_train_data", "continuous_train_and_eval", "evaluate", "extend_train_hooks", "local_run", "reset_export_strategies", "run_std_server", "test", "train", "train_and_evaluate"], "r": "master", "t": "tf.contrib.learn.Experiment"}, {"p": "/versions/master/api_docs/python/tf/contrib/learn/ExportStrategy", "k": ["export_fn", "name", "strip_default_attrs", "__new__", "export"], "r": "master", "t": "tf.contrib.learn.ExportStrategy"}, {"p": "/versions/master/api_docs/python/tf/contrib/learn/Head", "k": ["logits_dimension", "create_model_fn_ops"], "r": "master", "t": "tf.contrib.learn.Head"}, {"p": "/versions/master/api_docs/python/tf/contrib/learn/InputFnOps", "k": ["default_inputs", "features", "labels", "__new__"], "r": "master", "t": "tf.contrib.learn.InputFnOps"}, {"p": "/versions/master/api_docs/python/tf/contrib/learn/KMeansClustering", "k": ["config", "model_dir", "model_fn", "__init__", "clusters", "evaluate", "export", "export_savedmodel", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "predict_cluster_idx", "score", "set_params", "transform", "ALL_SCORES", "CLUSTERS", "CLUSTER_IDX", "COSINE_DISTANCE", "KMEANS_PLUS_PLUS_INIT", "LOSS_OP_NAME", "RANDOM_INIT", "SCORES", "SQUARED_EUCLIDEAN_DISTANCE"], "r": "master", "t": "tf.contrib.learn.KMeansClustering"}, {"p": "/versions/master/api_docs/python/tf/contrib/learn/LinearClassifier", "k": ["config", "model_dir", "model_fn", "__init__", "evaluate", "export", "export_savedmodel", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "predict_classes", "predict_proba", "set_params"], "r": "master", "t": "tf.contrib.learn.LinearClassifier"}, {"p": "/versions/master/api_docs/python/tf/contrib/learn/LinearEstimator", "k": ["config", "model_dir", "model_fn", "__init__", "evaluate", "export", "export_savedmodel", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "set_params"], "r": "master", "t": "tf.contrib.learn.LinearEstimator"}, {"p": "/versions/master/api_docs/python/tf/contrib/learn/LinearRegressor", "k": ["config", "model_dir", "model_fn", "__init__", "evaluate", "export", "export_savedmodel", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "predict_scores", "set_params"], "r": "master", "t": "tf.contrib.learn.LinearRegressor"}, {"p": "/versions/master/api_docs/python/tf/contrib/learn/LogisticRegressor", "k": [], "r": "master", "t": "tf.contrib.learn.LogisticRegressor"}, {"p": "/versions/master/api_docs/python/tf/contrib/learn/MetricSpec", "k": ["label_key", "metric_fn", "prediction_key", "weight_key", "__init__", "create_metric_ops"], "r": "master", "t": "tf.contrib.learn.MetricSpec"}, {"p": "/versions/master/api_docs/python/tf/contrib/learn/ModeKeys", "k": ["validate", "EVAL", "INFER", "TRAIN"], "r": "master", "t": "tf.contrib.learn.ModeKeys"}, {"p": "/versions/master/api_docs/python/tf/contrib/learn/ModelFnOps", "k": ["eval_metric_ops", "loss", "mode", "output_alternatives", "predictions", "scaffold", "train_op", "training_chief_hooks", "training_hooks", "__new__", "estimator_spec"], "r": "master", "t": "tf.contrib.learn.ModelFnOps"}, {"p": "/versions/master/api_docs/python/tf/contrib/learn/NanLossDuringTrainingError", "k": [], "r": "master", "t": "tf.contrib.learn.NanLossDuringTrainingError"}, {"p": "/versions/master/api_docs/python/tf/contrib/learn/NotFittedError", "k": [], "r": "master", "t": "tf.contrib.learn.NotFittedError"}, {"p": "/versions/master/api_docs/python/tf/contrib/learn/PredictionKey", "k": ["CLASSES", "GENERIC", "LOGISTIC", "LOGITS", "PROBABILITIES", "SCORES", "TOP_K"], "r": "master", "t": "tf.contrib.learn.PredictionKey"}, {"p": "/versions/master/api_docs/python/tf/contrib/learn/ProblemType", "k": ["CLASSIFICATION", "LINEAR_REGRESSION", "LOGISTIC_REGRESSION", "UNSPECIFIED"], "r": "master", "t": "tf.contrib.learn.ProblemType"}, {"p": "/versions/master/api_docs/python/tf/contrib/learn/RunConfig", "k": ["cluster_spec", "distribute", "environment", "evaluation_master", "global_id_in_cluster", "is_chief", "keep_checkpoint_every_n_hours", "keep_checkpoint_max", "log_step_count_steps", "master", "model_dir", "num_ps_replicas", "num_worker_replicas", "save_checkpoints_secs", "save_checkpoints_steps", "save_summary_steps", "service", "session_config", "task_id", "task_type", "tf_config", "tf_random_seed", "__init__", "get_task_id", "replace", "uid"], "r": "master", "t": "tf.contrib.learn.RunConfig"}, {"p": "/versions/master/api_docs/python/tf/contrib/learn/SKCompat", "k": ["__init__", "fit", "get_params", "predict", "score", "set_params"], "r": "master", "t": "tf.contrib.learn.SKCompat"}, {"p": "/versions/master/api_docs/python/tf/contrib/learn/SVM", "k": ["config", "model_dir", "model_fn", "__init__", "evaluate", "export", "export_savedmodel", "export_with_defaults", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "predict_classes", "predict_proba", "set_params"], "r": "master", "t": "tf.contrib.learn.SVM"}, {"p": "/versions/master/api_docs/python/tf/contrib/learn/TaskType", "k": ["MASTER", "PS", "WORKER"], "r": "master", "t": "tf.contrib.learn.TaskType"}, {"p": "/versions/master/api_docs/python/tf/contrib/learn/Trainable", "k": ["fit"], "r": "master", "t": "tf.contrib.learn.Trainable"}, {"p": "/versions/master/api_docs/python/tf/contrib/learn/binary_svm_head", "k": [], "r": "master", "t": "tf.contrib.learn.binary_svm_head"}, {"p": "/versions/master/api_docs/python/tf/contrib/learn/build_parsing_serving_input_fn", "k": [], "r": "master", "t": "tf.contrib.learn.build_parsing_serving_input_fn"}, {"p": "/versions/master/api_docs/python/tf/contrib/learn/datasets", "k": [], "r": "master", "t": "tf.contrib.learn.datasets"}, {"p": "/versions/master/api_docs/python/tf/contrib/learn/evaluate", "k": [], "r": "master", "t": "tf.contrib.learn.evaluate"}, {"p": "/versions/master/api_docs/python/tf/contrib/learn/extract_dask_data", "k": [], "r": "master", "t": "tf.contrib.learn.extract_dask_data"}, {"p": "/versions/master/api_docs/python/tf/contrib/learn/extract_dask_labels", "k": [], "r": "master", "t": "tf.contrib.learn.extract_dask_labels"}, {"p": "/versions/master/api_docs/python/tf/contrib/learn/extract_pandas_data", "k": [], "r": "master", "t": "tf.contrib.learn.extract_pandas_data"}, {"p": "/versions/master/api_docs/python/tf/contrib/learn/extract_pandas_labels", "k": [], "r": "master", "t": "tf.contrib.learn.extract_pandas_labels"}, {"p": "/versions/master/api_docs/python/tf/contrib/learn/extract_pandas_matrix", "k": [], "r": "master", "t": "tf.contrib.learn.extract_pandas_matrix"}, {"p": "/versions/master/api_docs/python/tf/contrib/learn/graph_actions", "k": [], "r": "master", "t": "tf.contrib.learn.graph_actions"}, {"p": "/versions/master/api_docs/python/tf/contrib/learn/head", "k": [], "r": "master", "t": "tf.contrib.learn.head"}, {"p": "/versions/master/api_docs/python/tf/contrib/learn/infer", "k": [], "r": "master", "t": "tf.contrib.learn.infer"}, {"p": "/versions/master/api_docs/python/tf/contrib/learn/infer_real_valued_columns_from_input", "k": [], "r": "master", "t": "tf.contrib.learn.infer_real_valued_columns_from_input"}, {"p": "/versions/master/api_docs/python/tf/contrib/learn/infer_real_valued_columns_from_input_fn", "k": [], "r": "master", "t": "tf.contrib.learn.infer_real_valued_columns_from_input_fn"}, {"p": "/versions/master/api_docs/python/tf/contrib/learn/io", "k": [], "r": "master", "t": "tf.contrib.learn.io"}, {"p": "/versions/master/api_docs/python/tf/contrib/learn/learn_runner", "k": [], "r": "master", "t": "tf.contrib.learn.learn_runner"}, {"p": "/versions/master/api_docs/python/tf/contrib/learn/learn_runner/run", "k": [], "r": "master", "t": "tf.contrib.learn.learn_runner.run"}, {"p": "/versions/master/api_docs/python/tf/contrib/learn/learn_runner/tune", "k": [], "r": "master", "t": "tf.contrib.learn.learn_runner.tune"}, {"p": "/versions/master/api_docs/python/tf/contrib/learn/make_export_strategy", "k": [], "r": "master", "t": "tf.contrib.learn.make_export_strategy"}, {"p": "/versions/master/api_docs/python/tf/contrib/learn/models", "k": [], "r": "master", "t": "tf.contrib.learn.models"}, {"p": "/versions/master/api_docs/python/tf/contrib/learn/monitors", "k": [], "r": "master", "t": "tf.contrib.learn.monitors"}, {"p": "/versions/master/api_docs/python/tf/contrib/learn/multi_class_head", "k": [], "r": "master", "t": "tf.contrib.learn.multi_class_head"}, {"p": "/versions/master/api_docs/python/tf/contrib/learn/multi_head", "k": [], "r": "master", "t": "tf.contrib.learn.multi_head"}, {"p": "/versions/master/api_docs/python/tf/contrib/learn/multi_label_head", "k": [], "r": "master", "t": "tf.contrib.learn.multi_label_head"}, {"p": "/versions/master/api_docs/python/tf/contrib/learn/no_op_train_fn", "k": [], "r": "master", "t": "tf.contrib.learn.no_op_train_fn"}, {"p": "/versions/master/api_docs/python/tf/contrib/learn/ops", "k": [], "r": "master", "t": "tf.contrib.learn.ops"}, {"p": "/versions/master/api_docs/python/tf/contrib/learn/poisson_regression_head", "k": [], "r": "master", "t": "tf.contrib.learn.poisson_regression_head"}, {"p": "/versions/master/api_docs/python/tf/contrib/learn/preprocessing", "k": [], "r": "master", "t": "tf.contrib.learn.preprocessing"}, {"p": "/versions/master/api_docs/python/tf/contrib/learn/read_batch_examples", "k": [], "r": "master", "t": "tf.contrib.learn.read_batch_examples"}, {"p": "/versions/master/api_docs/python/tf/contrib/learn/read_batch_features", "k": [], "r": "master", "t": "tf.contrib.learn.read_batch_features"}, {"p": "/versions/master/api_docs/python/tf/contrib/learn/read_batch_record_features", "k": [], "r": "master", "t": "tf.contrib.learn.read_batch_record_features"}, {"p": "/versions/master/api_docs/python/tf/contrib/learn/read_keyed_batch_examples", "k": [], "r": "master", "t": "tf.contrib.learn.read_keyed_batch_examples"}, {"p": "/versions/master/api_docs/python/tf/contrib/learn/read_keyed_batch_examples_shared_queue", "k": [], "r": "master", "t": "tf.contrib.learn.read_keyed_batch_examples_shared_queue"}, {"p": "/versions/master/api_docs/python/tf/contrib/learn/read_keyed_batch_features", "k": [], "r": "master", "t": "tf.contrib.learn.read_keyed_batch_features"}, {"p": "/versions/master/api_docs/python/tf/contrib/learn/read_keyed_batch_features_shared_queue", "k": [], "r": "master", "t": "tf.contrib.learn.read_keyed_batch_features_shared_queue"}, {"p": "/versions/master/api_docs/python/tf/contrib/learn/regression_head", "k": [], "r": "master", "t": "tf.contrib.learn.regression_head"}, {"p": "/versions/master/api_docs/python/tf/contrib/learn/run_feeds", "k": [], "r": "master", "t": "tf.contrib.learn.run_feeds"}, {"p": "/versions/master/api_docs/python/tf/contrib/learn/run_n", "k": [], "r": "master", "t": "tf.contrib.learn.run_n"}, {"p": "/versions/master/api_docs/python/tf/contrib/learn/train", "k": [], "r": "master", "t": "tf.contrib.learn.train"}, {"p": "/versions/master/api_docs/python/tf/contrib/learn/utils", "k": [], "r": "master", "t": "tf.contrib.learn.utils"}, {"p": "/versions/master/api_docs/python/tf/contrib/legacy_seq2seq", "k": [], "r": "master", "t": "tf.contrib.legacy_seq2seq"}, {"p": "/versions/master/api_docs/python/tf/contrib/legacy_seq2seq/attention_decoder", "k": [], "r": "master", "t": "tf.contrib.legacy_seq2seq.attention_decoder"}, {"p": "/versions/master/api_docs/python/tf/contrib/legacy_seq2seq/basic_rnn_seq2seq", "k": [], "r": "master", "t": "tf.contrib.legacy_seq2seq.basic_rnn_seq2seq"}, {"p": "/versions/master/api_docs/python/tf/contrib/legacy_seq2seq/embedding_attention_decoder", "k": [], "r": "master", "t": "tf.contrib.legacy_seq2seq.embedding_attention_decoder"}, {"p": "/versions/master/api_docs/python/tf/contrib/legacy_seq2seq/embedding_attention_seq2seq", "k": [], "r": "master", "t": "tf.contrib.legacy_seq2seq.embedding_attention_seq2seq"}, {"p": "/versions/master/api_docs/python/tf/contrib/legacy_seq2seq/embedding_rnn_decoder", "k": [], "r": "master", "t": "tf.contrib.legacy_seq2seq.embedding_rnn_decoder"}, {"p": "/versions/master/api_docs/python/tf/contrib/legacy_seq2seq/embedding_rnn_seq2seq", "k": [], "r": "master", "t": "tf.contrib.legacy_seq2seq.embedding_rnn_seq2seq"}, {"p": "/versions/master/api_docs/python/tf/contrib/legacy_seq2seq/embedding_tied_rnn_seq2seq", "k": [], "r": "master", "t": "tf.contrib.legacy_seq2seq.embedding_tied_rnn_seq2seq"}, {"p": "/versions/master/api_docs/python/tf/contrib/legacy_seq2seq/model_with_buckets", "k": [], "r": "master", "t": "tf.contrib.legacy_seq2seq.model_with_buckets"}, {"p": "/versions/master/api_docs/python/tf/contrib/legacy_seq2seq/one2many_rnn_seq2seq", "k": [], "r": "master", "t": "tf.contrib.legacy_seq2seq.one2many_rnn_seq2seq"}, {"p": "/versions/master/api_docs/python/tf/contrib/legacy_seq2seq/rnn_decoder", "k": [], "r": "master", "t": "tf.contrib.legacy_seq2seq.rnn_decoder"}, {"p": "/versions/master/api_docs/python/tf/contrib/legacy_seq2seq/sequence_loss", "k": [], "r": "master", "t": "tf.contrib.legacy_seq2seq.sequence_loss"}, {"p": "/versions/master/api_docs/python/tf/contrib/legacy_seq2seq/sequence_loss_by_example", "k": [], "r": "master", "t": "tf.contrib.legacy_seq2seq.sequence_loss_by_example"}, {"p": "/versions/master/api_docs/python/tf/contrib/legacy_seq2seq/tied_rnn_seq2seq", "k": [], "r": "master", "t": "tf.contrib.legacy_seq2seq.tied_rnn_seq2seq"}, {"p": "/versions/master/api_docs/python/tf/contrib/linalg", "k": [], "r": "master", "t": "tf.contrib.linalg"}, {"p": "/versions/master/api_docs/python/tf/contrib/linalg/LinearOperatorBlockDiag", "k": ["batch_shape", "domain_dimension", "dtype", "graph_parents", "is_non_singular", "is_positive_definite", "is_self_adjoint", "is_square", "name", "operators", "range_dimension", "shape", "tensor_rank", "__init__", "add_to_tensor", "assert_non_singular", "assert_positive_definite", "assert_self_adjoint", "batch_shape_tensor", "determinant", "diag_part", "domain_dimension_tensor", "log_abs_determinant", "matmul", "matvec", "range_dimension_tensor", "shape_tensor", "solve", "solvevec", "tensor_rank_tensor", "to_dense", "trace"], "r": "master", "t": "tf.contrib.linalg.LinearOperatorBlockDiag"}, {"p": "/versions/master/api_docs/python/tf/contrib/linear_optimizer", "k": [], "r": "master", "t": "tf.contrib.linear_optimizer"}, {"p": "/versions/master/api_docs/python/tf/contrib/linear_optimizer/SDCAOptimizer", "k": ["example_id_column", "num_loss_partitions", "num_table_shards", "symmetric_l1_regularization", "symmetric_l2_regularization", "__init__", "get_name", "get_train_step"], "r": "master", "t": "tf.contrib.linear_optimizer.SDCAOptimizer"}, {"p": "/versions/master/api_docs/python/tf/contrib/linear_optimizer/SdcaModel", "k": ["__init__", "approximate_duality_gap", "minimize", "predictions", "regularized_loss", "unregularized_loss", "update_weights"], "r": "master", "t": "tf.contrib.linear_optimizer.SdcaModel"}, {"p": "/versions/master/api_docs/python/tf/contrib/linear_optimizer/SparseFeatureColumn", "k": ["example_indices", "feature_indices", "feature_values", "__init__"], "r": "master", "t": "tf.contrib.linear_optimizer.SparseFeatureColumn"}, {"p": "/versions/master/api_docs/python/tf/contrib/lite", "k": ["EXPERIMENTAL_USE_TOCO_API_DIRECTLY", "FLOAT", "GRAPHVIZ_DOT", "INT32", "INT64", "QUANTIZED_UINT8", "STRING", "TENSORFLOW_GRAPHDEF", "TFLITE"], "r": "master", "t": "tf.contrib.lite"}, {"p": "/versions/master/api_docs/python/tf/contrib/lite/OpHint", "k": ["__init__", "add_inputs", "add_outputs", "FUNCTION_INPUT_INDEX_ATTR", "FUNCTION_NAME_ATTR", "FUNCTION_OUTPUT_INDEX_ATTR", "FUNCTION_UUID_ATTR"], "r": "master", "t": "tf.contrib.lite.OpHint"}, {"p": "/versions/master/api_docs/python/tf/contrib/lite/convert_op_hints_to_stubs", "k": [], "r": "master", "t": "tf.contrib.lite.convert_op_hints_to_stubs"}, {"p": "/versions/master/api_docs/python/tf/contrib/lite/toco_convert", "k": [], "r": "master", "t": "tf.contrib.lite.toco_convert"}, {"p": "/versions/master/api_docs/python/tf/contrib/lite/toco_convert_protos", "k": [], "r": "master", "t": "tf.contrib.lite.toco_convert_protos"}, {"p": "/versions/master/api_docs/python/tf/contrib/lookup", "k": ["FastHashSpec"], "r": "master", "t": "tf.contrib.lookup"}, {"p": "/versions/master/api_docs/python/tf/contrib/lookup/HashTable", "k": ["default_value", "init", "key_dtype", "name", "table_ref", "value_dtype", "__init__", "lookup", "size"], "r": "master", "t": "tf.contrib.lookup.HashTable"}, {"p": "/versions/master/api_docs/python/tf/contrib/lookup/HasherSpec", "k": ["hasher", "key", "__new__"], "r": "master", "t": "tf.contrib.lookup.HasherSpec"}, {"p": "/versions/master/api_docs/python/tf/contrib/lookup/IdTableWithHashBuckets", "k": ["init", "key_dtype", "name", "table_ref", "value_dtype", "__init__", "lookup", "size"], "r": "master", "t": "tf.contrib.lookup.IdTableWithHashBuckets"}, {"p": "/versions/master/api_docs/python/tf/contrib/lookup/InitializableLookupTableBase", "k": ["default_value", "init", "key_dtype", "name", "table_ref", "value_dtype", "__init__", "lookup", "size"], "r": "master", "t": "tf.contrib.lookup.InitializableLookupTableBase"}, {"p": "/versions/master/api_docs/python/tf/contrib/lookup/KeyValueTensorInitializer", "k": ["key_dtype", "value_dtype", "__init__", "initialize"], "r": "master", "t": "tf.contrib.lookup.KeyValueTensorInitializer"}, {"p": "/versions/master/api_docs/python/tf/contrib/lookup/LookupInterface", "k": ["init", "key_dtype", "name", "value_dtype", "__init__", "lookup", "size"], "r": "master", "t": "tf.contrib.lookup.LookupInterface"}, {"p": "/versions/master/api_docs/python/tf/contrib/lookup/MutableDenseHashTable", "k": ["init", "key_dtype", "name", "value_dtype", "__init__", "export", "insert", "lookup", "size"], "r": "master", "t": "tf.contrib.lookup.MutableDenseHashTable"}, {"p": "/versions/master/api_docs/python/tf/contrib/lookup/MutableHashTable", "k": ["init", "key_dtype", "name", "value_dtype", "__init__", "export", "insert", "lookup", "size"], "r": "master", "t": "tf.contrib.lookup.MutableHashTable"}, {"p": "/versions/master/api_docs/python/tf/contrib/lookup/StrongHashSpec", "k": ["hasher", "key", "__new__"], "r": "master", "t": "tf.contrib.lookup.StrongHashSpec"}, {"p": "/versions/master/api_docs/python/tf/contrib/lookup/TableInitializerBase", "k": ["key_dtype", "value_dtype", "__init__", "initialize"], "r": "master", "t": "tf.contrib.lookup.TableInitializerBase"}, {"p": "/versions/master/api_docs/python/tf/contrib/lookup/TextFileIdTableInitializer", "k": ["key_dtype", "value_dtype", "__init__", "initialize"], "r": "master", "t": "tf.contrib.lookup.TextFileIdTableInitializer"}, {"p": "/versions/master/api_docs/python/tf/contrib/lookup/TextFileIndex", "k": ["LINE_NUMBER", "WHOLE_LINE"], "r": "master", "t": "tf.contrib.lookup.TextFileIndex"}, {"p": "/versions/master/api_docs/python/tf/contrib/lookup/TextFileInitializer", "k": ["key_dtype", "value_dtype", "__init__", "initialize"], "r": "master", "t": "tf.contrib.lookup.TextFileInitializer"}, {"p": "/versions/master/api_docs/python/tf/contrib/lookup/TextFileStringTableInitializer", "k": ["key_dtype", "value_dtype", "__init__", "initialize"], "r": "master", "t": "tf.contrib.lookup.TextFileStringTableInitializer"}, {"p": "/versions/master/api_docs/python/tf/contrib/lookup/index_table_from_file", "k": [], "r": "master", "t": "tf.contrib.lookup.index_table_from_file"}, {"p": "/versions/master/api_docs/python/tf/contrib/lookup/index_table_from_tensor", "k": [], "r": "master", "t": "tf.contrib.lookup.index_table_from_tensor"}, {"p": "/versions/master/api_docs/python/tf/contrib/lookup/index_to_string", "k": [], "r": "master", "t": "tf.contrib.lookup.index_to_string"}, {"p": "/versions/master/api_docs/python/tf/contrib/lookup/index_to_string_table_from_file", "k": [], "r": "master", "t": "tf.contrib.lookup.index_to_string_table_from_file"}, {"p": "/versions/master/api_docs/python/tf/contrib/lookup/index_to_string_table_from_tensor", "k": [], "r": "master", "t": "tf.contrib.lookup.index_to_string_table_from_tensor"}, {"p": "/versions/master/api_docs/python/tf/contrib/lookup/string_to_index", "k": [], "r": "master", "t": "tf.contrib.lookup.string_to_index"}, {"p": "/versions/master/api_docs/python/tf/contrib/lookup/string_to_index_table_from_file", "k": [], "r": "master", "t": "tf.contrib.lookup.string_to_index_table_from_file"}, {"p": "/versions/master/api_docs/python/tf/contrib/lookup/string_to_index_table_from_tensor", "k": [], "r": "master", "t": "tf.contrib.lookup.string_to_index_table_from_tensor"}, {"p": "/versions/master/api_docs/python/tf/contrib/losses", "k": [], "r": "master", "t": "tf.contrib.losses"}, {"p": "/versions/master/api_docs/python/tf/contrib/losses/absolute_difference", "k": [], "r": "master", "t": "tf.contrib.losses.absolute_difference"}, {"p": "/versions/master/api_docs/python/tf/contrib/losses/add_loss", "k": [], "r": "master", "t": "tf.contrib.losses.add_loss"}, {"p": "/versions/master/api_docs/python/tf/contrib/losses/compute_weighted_loss", "k": [], "r": "master", "t": "tf.contrib.losses.compute_weighted_loss"}, {"p": "/versions/master/api_docs/python/tf/contrib/losses/cosine_distance", "k": [], "r": "master", "t": "tf.contrib.losses.cosine_distance"}, {"p": "/versions/master/api_docs/python/tf/contrib/losses/get_losses", "k": [], "r": "master", "t": "tf.contrib.losses.get_losses"}, {"p": "/versions/master/api_docs/python/tf/contrib/losses/get_regularization_losses", "k": [], "r": "master", "t": "tf.contrib.losses.get_regularization_losses"}, {"p": "/versions/master/api_docs/python/tf/contrib/losses/get_total_loss", "k": [], "r": "master", "t": "tf.contrib.losses.get_total_loss"}, {"p": "/versions/master/api_docs/python/tf/contrib/losses/hinge_loss", "k": [], "r": "master", "t": "tf.contrib.losses.hinge_loss"}, {"p": "/versions/master/api_docs/python/tf/contrib/losses/log_loss", "k": [], "r": "master", "t": "tf.contrib.losses.log_loss"}, {"p": "/versions/master/api_docs/python/tf/contrib/losses/mean_pairwise_squared_error", "k": [], "r": "master", "t": "tf.contrib.losses.mean_pairwise_squared_error"}, {"p": "/versions/master/api_docs/python/tf/contrib/losses/mean_squared_error", "k": [], "r": "master", "t": "tf.contrib.losses.mean_squared_error"}, {"p": "/versions/master/api_docs/python/tf/contrib/losses/metric_learning", "k": [], "r": "master", "t": "tf.contrib.losses.metric_learning"}, {"p": "/versions/master/api_docs/python/tf/contrib/losses/metric_learning/cluster_loss", "k": [], "r": "master", "t": "tf.contrib.losses.metric_learning.cluster_loss"}, {"p": "/versions/master/api_docs/python/tf/contrib/losses/metric_learning/contrastive_loss", "k": [], "r": "master", "t": "tf.contrib.losses.metric_learning.contrastive_loss"}, {"p": "/versions/master/api_docs/python/tf/contrib/losses/metric_learning/lifted_struct_loss", "k": [], "r": "master", "t": "tf.contrib.losses.metric_learning.lifted_struct_loss"}, {"p": "/versions/master/api_docs/python/tf/contrib/losses/metric_learning/npairs_loss", "k": [], "r": "master", "t": "tf.contrib.losses.metric_learning.npairs_loss"}, {"p": "/versions/master/api_docs/python/tf/contrib/losses/metric_learning/npairs_loss_multilabel", "k": [], "r": "master", "t": "tf.contrib.losses.metric_learning.npairs_loss_multilabel"}, {"p": "/versions/master/api_docs/python/tf/contrib/losses/metric_learning/triplet_semihard_loss", "k": [], "r": "master", "t": "tf.contrib.losses.metric_learning.triplet_semihard_loss"}, {"p": "/versions/master/api_docs/python/tf/contrib/losses/sigmoid_cross_entropy", "k": [], "r": "master", "t": "tf.contrib.losses.sigmoid_cross_entropy"}, {"p": "/versions/master/api_docs/python/tf/contrib/losses/softmax_cross_entropy", "k": [], "r": "master", "t": "tf.contrib.losses.softmax_cross_entropy"}, {"p": "/versions/master/api_docs/python/tf/contrib/losses/sparse_softmax_cross_entropy", "k": [], "r": "master", "t": "tf.contrib.losses.sparse_softmax_cross_entropy"}, {"p": "/versions/master/api_docs/python/tf/contrib/memory_stats", "k": [], "r": "master", "t": "tf.contrib.memory_stats"}, {"p": "/versions/master/api_docs/python/tf/contrib/memory_stats/BytesInUse", "k": [], "r": "master", "t": "tf.contrib.memory_stats.BytesInUse"}, {"p": "/versions/master/api_docs/python/tf/contrib/memory_stats/BytesLimit", "k": [], "r": "master", "t": "tf.contrib.memory_stats.BytesLimit"}, {"p": "/versions/master/api_docs/python/tf/contrib/memory_stats/MaxBytesInUse", "k": [], "r": "master", "t": "tf.contrib.memory_stats.MaxBytesInUse"}, {"p": "/versions/master/api_docs/python/tf/contrib/meta_graph_transform", "k": [], "r": "master", "t": "tf.contrib.meta_graph_transform"}, {"p": "/versions/master/api_docs/python/tf/contrib/meta_graph_transform/meta_graph_transform", "k": ["absolute_import", "division", "print_function"], "r": "master", "t": "tf.contrib.meta_graph_transform.meta_graph_transform"}, {"p": "/versions/master/api_docs/python/tf/contrib/meta_graph_transform/meta_graph_transform/meta_graph_transform", "k": [], "r": "master", "t": "tf.contrib.meta_graph_transform.meta_graph_transform.meta_graph_transform"}, {"p": "/versions/master/api_docs/python/tf/contrib/metrics", "k": [], "r": "master", "t": "tf.contrib.metrics"}, {"p": "/versions/master/api_docs/python/tf/contrib/metrics/accuracy", "k": [], "r": "master", "t": "tf.contrib.metrics.accuracy"}, {"p": "/versions/master/api_docs/python/tf/contrib/metrics/aggregate_metric_map", "k": [], "r": "master", "t": "tf.contrib.metrics.aggregate_metric_map"}, {"p": "/versions/master/api_docs/python/tf/contrib/metrics/aggregate_metrics", "k": [], "r": "master", "t": "tf.contrib.metrics.aggregate_metrics"}, {"p": "/versions/master/api_docs/python/tf/contrib/metrics/auc_using_histogram", "k": [], "r": "master", "t": "tf.contrib.metrics.auc_using_histogram"}, {"p": "/versions/master/api_docs/python/tf/contrib/metrics/auc_with_confidence_intervals", "k": [], "r": "master", "t": "tf.contrib.metrics.auc_with_confidence_intervals"}, {"p": "/versions/master/api_docs/python/tf/contrib/metrics/cohen_kappa", "k": [], "r": "master", "t": "tf.contrib.metrics.cohen_kappa"}, {"p": "/versions/master/api_docs/python/tf/contrib/metrics/confusion_matrix", "k": [], "r": "master", "t": "tf.contrib.metrics.confusion_matrix"}, {"p": "/versions/master/api_docs/python/tf/contrib/metrics/count", "k": [], "r": "master", "t": "tf.contrib.metrics.count"}, {"p": "/versions/master/api_docs/python/tf/contrib/metrics/precision_recall_at_equal_thresholds", "k": [], "r": "master", "t": "tf.contrib.metrics.precision_recall_at_equal_thresholds"}, {"p": "/versions/master/api_docs/python/tf/contrib/metrics/recall_at_precision", "k": [], "r": "master", "t": "tf.contrib.metrics.recall_at_precision"}, {"p": "/versions/master/api_docs/python/tf/contrib/metrics/sparse_recall_at_top_k", "k": [], "r": "master", "t": "tf.contrib.metrics.sparse_recall_at_top_k"}, {"p": "/versions/master/api_docs/python/tf/contrib/metrics/streaming_accuracy", "k": [], "r": "master", "t": "tf.contrib.metrics.streaming_accuracy"}, {"p": "/versions/master/api_docs/python/tf/contrib/metrics/streaming_auc", "k": [], "r": "master", "t": "tf.contrib.metrics.streaming_auc"}, {"p": "/versions/master/api_docs/python/tf/contrib/metrics/streaming_concat", "k": [], "r": "master", "t": "tf.contrib.metrics.streaming_concat"}, {"p": "/versions/master/api_docs/python/tf/contrib/metrics/streaming_covariance", "k": [], "r": "master", "t": "tf.contrib.metrics.streaming_covariance"}, {"p": "/versions/master/api_docs/python/tf/contrib/metrics/streaming_curve_points", "k": [], "r": "master", "t": "tf.contrib.metrics.streaming_curve_points"}, {"p": "/versions/master/api_docs/python/tf/contrib/metrics/streaming_dynamic_auc", "k": [], "r": "master", "t": "tf.contrib.metrics.streaming_dynamic_auc"}, {"p": "/versions/master/api_docs/python/tf/contrib/metrics/streaming_false_negative_rate", "k": [], "r": "master", "t": "tf.contrib.metrics.streaming_false_negative_rate"}, {"p": "/versions/master/api_docs/python/tf/contrib/metrics/streaming_false_negative_rate_at_thresholds", "k": [], "r": "master", "t": "tf.contrib.metrics.streaming_false_negative_rate_at_thresholds"}, {"p": "/versions/master/api_docs/python/tf/contrib/metrics/streaming_false_negatives", "k": [], "r": "master", "t": "tf.contrib.metrics.streaming_false_negatives"}, {"p": "/versions/master/api_docs/python/tf/contrib/metrics/streaming_false_negatives_at_thresholds", "k": [], "r": "master", "t": "tf.contrib.metrics.streaming_false_negatives_at_thresholds"}, {"p": "/versions/master/api_docs/python/tf/contrib/metrics/streaming_false_positive_rate", "k": [], "r": "master", "t": "tf.contrib.metrics.streaming_false_positive_rate"}, {"p": "/versions/master/api_docs/python/tf/contrib/metrics/streaming_false_positive_rate_at_thresholds", "k": [], "r": "master", "t": "tf.contrib.metrics.streaming_false_positive_rate_at_thresholds"}, {"p": "/versions/master/api_docs/python/tf/contrib/metrics/streaming_false_positives", "k": [], "r": "master", "t": "tf.contrib.metrics.streaming_false_positives"}, {"p": "/versions/master/api_docs/python/tf/contrib/metrics/streaming_false_positives_at_thresholds", "k": [], "r": "master", "t": "tf.contrib.metrics.streaming_false_positives_at_thresholds"}, {"p": "/versions/master/api_docs/python/tf/contrib/metrics/streaming_mean", "k": [], "r": "master", "t": "tf.contrib.metrics.streaming_mean"}, {"p": "/versions/master/api_docs/python/tf/contrib/metrics/streaming_mean_absolute_error", "k": [], "r": "master", "t": "tf.contrib.metrics.streaming_mean_absolute_error"}, {"p": "/versions/master/api_docs/python/tf/contrib/metrics/streaming_mean_cosine_distance", "k": [], "r": "master", "t": "tf.contrib.metrics.streaming_mean_cosine_distance"}, {"p": "/versions/master/api_docs/python/tf/contrib/metrics/streaming_mean_iou", "k": [], "r": "master", "t": "tf.contrib.metrics.streaming_mean_iou"}, {"p": "/versions/master/api_docs/python/tf/contrib/metrics/streaming_mean_relative_error", "k": [], "r": "master", "t": "tf.contrib.metrics.streaming_mean_relative_error"}, {"p": "/versions/master/api_docs/python/tf/contrib/metrics/streaming_mean_squared_error", "k": [], "r": "master", "t": "tf.contrib.metrics.streaming_mean_squared_error"}, {"p": "/versions/master/api_docs/python/tf/contrib/metrics/streaming_mean_tensor", "k": [], "r": "master", "t": "tf.contrib.metrics.streaming_mean_tensor"}, {"p": "/versions/master/api_docs/python/tf/contrib/metrics/streaming_pearson_correlation", "k": [], "r": "master", "t": "tf.contrib.metrics.streaming_pearson_correlation"}, {"p": "/versions/master/api_docs/python/tf/contrib/metrics/streaming_percentage_less", "k": [], "r": "master", "t": "tf.contrib.metrics.streaming_percentage_less"}, {"p": "/versions/master/api_docs/python/tf/contrib/metrics/streaming_precision", "k": [], "r": "master", "t": "tf.contrib.metrics.streaming_precision"}, {"p": "/versions/master/api_docs/python/tf/contrib/metrics/streaming_precision_at_thresholds", "k": [], "r": "master", "t": "tf.contrib.metrics.streaming_precision_at_thresholds"}, {"p": "/versions/master/api_docs/python/tf/contrib/metrics/streaming_recall", "k": [], "r": "master", "t": "tf.contrib.metrics.streaming_recall"}, {"p": "/versions/master/api_docs/python/tf/contrib/metrics/streaming_recall_at_k", "k": [], "r": "master", "t": "tf.contrib.metrics.streaming_recall_at_k"}, {"p": "/versions/master/api_docs/python/tf/contrib/metrics/streaming_recall_at_thresholds", "k": [], "r": "master", "t": "tf.contrib.metrics.streaming_recall_at_thresholds"}, {"p": "/versions/master/api_docs/python/tf/contrib/metrics/streaming_root_mean_squared_error", "k": [], "r": "master", "t": "tf.contrib.metrics.streaming_root_mean_squared_error"}, {"p": "/versions/master/api_docs/python/tf/contrib/metrics/streaming_sensitivity_at_specificity", "k": [], "r": "master", "t": "tf.contrib.metrics.streaming_sensitivity_at_specificity"}, {"p": "/versions/master/api_docs/python/tf/contrib/metrics/streaming_sparse_average_precision_at_k", "k": [], "r": "master", "t": "tf.contrib.metrics.streaming_sparse_average_precision_at_k"}, {"p": "/versions/master/api_docs/python/tf/contrib/metrics/streaming_sparse_average_precision_at_top_k", "k": [], "r": "master", "t": "tf.contrib.metrics.streaming_sparse_average_precision_at_top_k"}, {"p": "/versions/master/api_docs/python/tf/contrib/metrics/streaming_sparse_precision_at_k", "k": [], "r": "master", "t": "tf.contrib.metrics.streaming_sparse_precision_at_k"}, {"p": "/versions/master/api_docs/python/tf/contrib/metrics/streaming_sparse_precision_at_top_k", "k": [], "r": "master", "t": "tf.contrib.metrics.streaming_sparse_precision_at_top_k"}, {"p": "/versions/master/api_docs/python/tf/contrib/metrics/streaming_sparse_recall_at_k", "k": [], "r": "master", "t": "tf.contrib.metrics.streaming_sparse_recall_at_k"}, {"p": "/versions/master/api_docs/python/tf/contrib/metrics/streaming_specificity_at_sensitivity", "k": [], "r": "master", "t": "tf.contrib.metrics.streaming_specificity_at_sensitivity"}, {"p": "/versions/master/api_docs/python/tf/contrib/metrics/streaming_true_negatives", "k": [], "r": "master", "t": "tf.contrib.metrics.streaming_true_negatives"}, {"p": "/versions/master/api_docs/python/tf/contrib/metrics/streaming_true_negatives_at_thresholds", "k": [], "r": "master", "t": "tf.contrib.metrics.streaming_true_negatives_at_thresholds"}, {"p": "/versions/master/api_docs/python/tf/contrib/metrics/streaming_true_positives", "k": [], "r": "master", "t": "tf.contrib.metrics.streaming_true_positives"}, {"p": "/versions/master/api_docs/python/tf/contrib/metrics/streaming_true_positives_at_thresholds", "k": [], "r": "master", "t": "tf.contrib.metrics.streaming_true_positives_at_thresholds"}, {"p": "/versions/master/api_docs/python/tf/contrib/model_pruning", "k": [], "r": "master", "t": "tf.contrib.model_pruning"}, {"p": "/versions/master/api_docs/python/tf/contrib/model_pruning/MaskedBasicLSTMCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "master", "t": "tf.contrib.model_pruning.MaskedBasicLSTMCell"}, {"p": "/versions/master/api_docs/python/tf/contrib/model_pruning/MaskedLSTMCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "master", "t": "tf.contrib.model_pruning.MaskedLSTMCell"}, {"p": "/versions/master/api_docs/python/tf/contrib/model_pruning/Pruning", "k": ["__init__", "add_pruning_summaries", "conditional_mask_update_op", "mask_update_op", "print_hparams"], "r": "master", "t": "tf.contrib.model_pruning.Pruning"}, {"p": "/versions/master/api_docs/python/tf/contrib/model_pruning/apply_mask", "k": [], "r": "master", "t": "tf.contrib.model_pruning.apply_mask"}, {"p": "/versions/master/api_docs/python/tf/contrib/model_pruning/get_masked_weights", "k": [], "r": "master", "t": "tf.contrib.model_pruning.get_masked_weights"}, {"p": "/versions/master/api_docs/python/tf/contrib/model_pruning/get_masks", "k": [], "r": "master", "t": "tf.contrib.model_pruning.get_masks"}, {"p": "/versions/master/api_docs/python/tf/contrib/model_pruning/get_pruning_hparams", "k": [], "r": "master", "t": "tf.contrib.model_pruning.get_pruning_hparams"}, {"p": "/versions/master/api_docs/python/tf/contrib/model_pruning/get_thresholds", "k": [], "r": "master", "t": "tf.contrib.model_pruning.get_thresholds"}, {"p": "/versions/master/api_docs/python/tf/contrib/model_pruning/get_weight_sparsity", "k": [], "r": "master", "t": "tf.contrib.model_pruning.get_weight_sparsity"}, {"p": "/versions/master/api_docs/python/tf/contrib/model_pruning/get_weights", "k": [], "r": "master", "t": "tf.contrib.model_pruning.get_weights"}, {"p": "/versions/master/api_docs/python/tf/contrib/model_pruning/masked_conv2d", "k": [], "r": "master", "t": "tf.contrib.model_pruning.masked_conv2d"}, {"p": "/versions/master/api_docs/python/tf/contrib/model_pruning/masked_fully_connected", "k": [], "r": "master", "t": "tf.contrib.model_pruning.masked_fully_connected"}, {"p": "/versions/master/api_docs/python/tf/contrib/model_pruning/train", "k": [], "r": "master", "t": "tf.contrib.model_pruning.train"}, {"p": "/versions/master/api_docs/python/tf/contrib/nccl", "k": [], "r": "master", "t": "tf.contrib.nccl"}, {"p": "/versions/master/api_docs/python/tf/contrib/nccl/all_max", "k": [], "r": "master", "t": "tf.contrib.nccl.all_max"}, {"p": "/versions/master/api_docs/python/tf/contrib/nccl/all_min", "k": [], "r": "master", "t": "tf.contrib.nccl.all_min"}, {"p": "/versions/master/api_docs/python/tf/contrib/nccl/all_prod", "k": [], "r": "master", "t": "tf.contrib.nccl.all_prod"}, {"p": "/versions/master/api_docs/python/tf/contrib/nccl/all_sum", "k": [], "r": "master", "t": "tf.contrib.nccl.all_sum"}, {"p": "/versions/master/api_docs/python/tf/contrib/nccl/broadcast", "k": [], "r": "master", "t": "tf.contrib.nccl.broadcast"}, {"p": "/versions/master/api_docs/python/tf/contrib/nccl/reduce_sum", "k": [], "r": "master", "t": "tf.contrib.nccl.reduce_sum"}, {"p": "/versions/master/api_docs/python/tf/contrib/nn", "k": [], "r": "master", "t": "tf.contrib.nn"}, {"p": "/versions/master/api_docs/python/tf/contrib/nn/alpha_dropout", "k": [], "r": "master", "t": "tf.contrib.nn.alpha_dropout"}, {"p": "/versions/master/api_docs/python/tf/contrib/nn/conv1d_transpose", "k": [], "r": "master", "t": "tf.contrib.nn.conv1d_transpose"}, {"p": "/versions/master/api_docs/python/tf/contrib/nn/deprecated_flipped_sigmoid_cross_entropy_with_logits", "k": [], "r": "master", "t": "tf.contrib.nn.deprecated_flipped_sigmoid_cross_entropy_with_logits"}, {"p": "/versions/master/api_docs/python/tf/contrib/nn/deprecated_flipped_softmax_cross_entropy_with_logits", "k": [], "r": "master", "t": "tf.contrib.nn.deprecated_flipped_softmax_cross_entropy_with_logits"}, {"p": "/versions/master/api_docs/python/tf/contrib/nn/deprecated_flipped_sparse_softmax_cross_entropy_with_logits", "k": [], "r": "master", "t": "tf.contrib.nn.deprecated_flipped_sparse_softmax_cross_entropy_with_logits"}, {"p": "/versions/master/api_docs/python/tf/contrib/nn/nth_element", "k": [], "r": "master", "t": "tf.contrib.nn.nth_element"}, {"p": "/versions/master/api_docs/python/tf/contrib/nn/rank_sampled_softmax_loss", "k": [], "r": "master", "t": "tf.contrib.nn.rank_sampled_softmax_loss"}, {"p": "/versions/master/api_docs/python/tf/contrib/nn/sampled_sparse_softmax_loss", "k": [], "r": "master", "t": "tf.contrib.nn.sampled_sparse_softmax_loss"}, {"p": "/versions/master/api_docs/python/tf/contrib/nn/scaled_softplus", "k": [], "r": "master", "t": "tf.contrib.nn.scaled_softplus"}, {"p": "/versions/master/api_docs/python/tf/contrib/opt", "k": [], "r": "master", "t": "tf.contrib.opt"}, {"p": "/versions/master/api_docs/python/tf/contrib/opt/AddSignOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "master", "t": "tf.contrib.opt.AddSignOptimizer"}, {"p": "/versions/master/api_docs/python/tf/contrib/opt/DropStaleGradientOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "master", "t": "tf.contrib.opt.DropStaleGradientOptimizer"}, {"p": "/versions/master/api_docs/python/tf/contrib/opt/ElasticAverageCustomGetter", "k": ["__call__", "__init__"], "r": "master", "t": "tf.contrib.opt.ElasticAverageCustomGetter"}, {"p": "/versions/master/api_docs/python/tf/contrib/opt/ElasticAverageOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_init_op", "get_name", "get_slot", "get_slot_names", "make_session_run_hook", "minimize", "variables", "BETA", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "master", "t": "tf.contrib.opt.ElasticAverageOptimizer"}, {"p": "/versions/master/api_docs/python/tf/contrib/opt/ExternalOptimizerInterface", "k": ["__init__", "minimize"], "r": "master", "t": "tf.contrib.opt.ExternalOptimizerInterface"}, {"p": "/versions/master/api_docs/python/tf/contrib/opt/LazyAdamOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "master", "t": "tf.contrib.opt.LazyAdamOptimizer"}, {"p": "/versions/master/api_docs/python/tf/contrib/opt/ModelAverageCustomGetter", "k": ["__call__", "__init__"], "r": "master", "t": "tf.contrib.opt.ModelAverageCustomGetter"}, {"p": "/versions/master/api_docs/python/tf/contrib/opt/ModelAverageOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_init_op", "get_name", "get_slot", "get_slot_names", "make_session_run_hook", "minimize", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "master", "t": "tf.contrib.opt.ModelAverageOptimizer"}, {"p": "/versions/master/api_docs/python/tf/contrib/opt/MovingAverageOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "swapping_saver", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "master", "t": "tf.contrib.opt.MovingAverageOptimizer"}, {"p": "/versions/master/api_docs/python/tf/contrib/opt/MultitaskOptimizerWrapper", "k": ["__getattr__", "__init__"], "r": "master", "t": "tf.contrib.opt.MultitaskOptimizerWrapper"}, {"p": "/versions/master/api_docs/python/tf/contrib/opt/NadamOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "master", "t": "tf.contrib.opt.NadamOptimizer"}, {"p": "/versions/master/api_docs/python/tf/contrib/opt/PowerSignOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "master", "t": "tf.contrib.opt.PowerSignOptimizer"}, {"p": "/versions/master/api_docs/python/tf/contrib/opt/ScipyOptimizerInterface", "k": ["__init__", "minimize"], "r": "master", "t": "tf.contrib.opt.ScipyOptimizerInterface"}, {"p": "/versions/master/api_docs/python/tf/contrib/opt/VariableClippingOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "master", "t": "tf.contrib.opt.VariableClippingOptimizer"}, {"p": "/versions/master/api_docs/python/tf/contrib/opt/clip_gradients_by_global_norm", "k": [], "r": "master", "t": "tf.contrib.opt.clip_gradients_by_global_norm"}, {"p": "/versions/master/api_docs/python/tf/contrib/optimizer_v2", "k": [], "r": "master", "t": "tf.contrib.optimizer_v2"}, {"p": "/versions/master/api_docs/python/tf/contrib/optimizer_v2/AdadeltaOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "distributed_apply", "get_name", "get_slot", "get_slot_names", "minimize", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "master", "t": "tf.contrib.optimizer_v2.AdadeltaOptimizer"}, {"p": "/versions/master/api_docs/python/tf/contrib/optimizer_v2/AdagradOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "distributed_apply", "get_name", "get_slot", "get_slot_names", "minimize", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "master", "t": "tf.contrib.optimizer_v2.AdagradOptimizer"}, {"p": "/versions/master/api_docs/python/tf/contrib/optimizer_v2/AdamOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "distributed_apply", "get_name", "get_slot", "get_slot_names", "minimize", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "master", "t": "tf.contrib.optimizer_v2.AdamOptimizer"}, {"p": "/versions/master/api_docs/python/tf/contrib/optimizer_v2/GradientDescentOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "distributed_apply", "get_name", "get_slot", "get_slot_names", "minimize", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "master", "t": "tf.contrib.optimizer_v2.GradientDescentOptimizer"}, {"p": "/versions/master/api_docs/python/tf/contrib/optimizer_v2/MomentumOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "distributed_apply", "get_name", "get_slot", "get_slot_names", "minimize", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "master", "t": "tf.contrib.optimizer_v2.MomentumOptimizer"}, {"p": "/versions/master/api_docs/python/tf/contrib/optimizer_v2/OptimizerV2", "k": ["__init__", "apply_gradients", "compute_gradients", "distributed_apply", "get_name", "get_slot", "get_slot_names", "minimize", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "master", "t": "tf.contrib.optimizer_v2.OptimizerV2"}, {"p": "/versions/master/api_docs/python/tf/contrib/optimizer_v2/RMSPropOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "distributed_apply", "get_name", "get_slot", "get_slot_names", "minimize", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "master", "t": "tf.contrib.optimizer_v2.RMSPropOptimizer"}, {"p": "/versions/master/api_docs/python/tf/contrib/periodic_resample", "k": [], "r": "master", "t": "tf.contrib.periodic_resample"}, {"p": "/versions/master/api_docs/python/tf/contrib/periodic_resample/periodic_resample", "k": [], "r": "master", "t": "tf.contrib.periodic_resample.periodic_resample"}, {"p": "/versions/master/api_docs/python/tf/contrib/predictor", "k": [], "r": "master", "t": "tf.contrib.predictor"}, {"p": "/versions/master/api_docs/python/tf/contrib/predictor/from_contrib_estimator", "k": [], "r": "master", "t": "tf.contrib.predictor.from_contrib_estimator"}, {"p": "/versions/master/api_docs/python/tf/contrib/predictor/from_estimator", "k": [], "r": "master", "t": "tf.contrib.predictor.from_estimator"}, {"p": "/versions/master/api_docs/python/tf/contrib/predictor/from_saved_model", "k": [], "r": "master", "t": "tf.contrib.predictor.from_saved_model"}, {"p": "/versions/master/api_docs/python/tf/contrib/quantization", "k": [], "r": "master", "t": "tf.contrib.quantization"}, {"p": "/versions/master/api_docs/python/tf/contrib/quantize", "k": [], "r": "master", "t": "tf.contrib.quantize"}, {"p": "/versions/master/api_docs/python/tf/contrib/quantize/create_eval_graph", "k": [], "r": "master", "t": "tf.contrib.quantize.create_eval_graph"}, {"p": "/versions/master/api_docs/python/tf/contrib/quantize/create_training_graph", "k": [], "r": "master", "t": "tf.contrib.quantize.create_training_graph"}, {"p": "/versions/master/api_docs/python/tf/contrib/quantize/experimental_create_eval_graph", "k": [], "r": "master", "t": "tf.contrib.quantize.experimental_create_eval_graph"}, {"p": "/versions/master/api_docs/python/tf/contrib/quantize/experimental_create_training_graph", "k": [], "r": "master", "t": "tf.contrib.quantize.experimental_create_training_graph"}, {"p": "/versions/master/api_docs/python/tf/contrib/receptive_field", "k": [], "r": "master", "t": "tf.contrib.receptive_field"}, {"p": "/versions/master/api_docs/python/tf/contrib/receptive_field/compute_receptive_field_from_graph_def", "k": [], "r": "master", "t": "tf.contrib.receptive_field.compute_receptive_field_from_graph_def"}, {"p": "/versions/master/api_docs/python/tf/contrib/receptive_field/get_compute_order", "k": [], "r": "master", "t": "tf.contrib.receptive_field.get_compute_order"}, {"p": "/versions/master/api_docs/python/tf/contrib/reduce_slice_ops", "k": ["absolute_import", "division", "print_function"], "r": "master", "t": "tf.contrib.reduce_slice_ops"}, {"p": "/versions/master/api_docs/python/tf/contrib/reduce_slice_ops/python", "k": [], "r": "master", "t": "tf.contrib.reduce_slice_ops.python"}, {"p": "/versions/master/api_docs/python/tf/contrib/reduce_slice_ops/python/ops", "k": [], "r": "master", "t": "tf.contrib.reduce_slice_ops.python.ops"}, {"p": "/versions/master/api_docs/python/tf/contrib/remote_fused_graph", "k": [], "r": "master", "t": "tf.contrib.remote_fused_graph"}, {"p": "/versions/master/api_docs/python/tf/contrib/remote_fused_graph/remote_fused_graph_execute", "k": [], "r": "master", "t": "tf.contrib.remote_fused_graph.remote_fused_graph_execute"}, {"p": "/versions/master/api_docs/python/tf/contrib/resampler", "k": [], "r": "master", "t": "tf.contrib.resampler"}, {"p": "/versions/master/api_docs/python/tf/contrib/resampler/resampler", "k": [], "r": "master", "t": "tf.contrib.resampler.resampler"}, {"p": "/versions/master/api_docs/python/tf/contrib/rnn", "k": [], "r": "master", "t": "tf.contrib.rnn"}, {"p": "/versions/master/api_docs/python/tf/contrib/rnn/AttentionCellWrapper", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "master", "t": "tf.contrib.rnn.AttentionCellWrapper"}, {"p": "/versions/master/api_docs/python/tf/contrib/rnn/BasicLSTMCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "master", "t": "tf.contrib.rnn.BasicLSTMCell"}, {"p": "/versions/master/api_docs/python/tf/contrib/rnn/BasicRNNCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "master", "t": "tf.contrib.rnn.BasicRNNCell"}, {"p": "/versions/master/api_docs/python/tf/contrib/rnn/BidirectionalGridLSTMCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "state_tuple_type", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "master", "t": "tf.contrib.rnn.BidirectionalGridLSTMCell"}, {"p": "/versions/master/api_docs/python/tf/contrib/rnn/CompiledWrapper", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "master", "t": "tf.contrib.rnn.CompiledWrapper"}, {"p": "/versions/master/api_docs/python/tf/contrib/rnn/Conv1DLSTMCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "master", "t": "tf.contrib.rnn.Conv1DLSTMCell"}, {"p": "/versions/master/api_docs/python/tf/contrib/rnn/Conv2DLSTMCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "master", "t": "tf.contrib.rnn.Conv2DLSTMCell"}, {"p": "/versions/master/api_docs/python/tf/contrib/rnn/Conv3DLSTMCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "master", "t": "tf.contrib.rnn.Conv3DLSTMCell"}, {"p": "/versions/master/api_docs/python/tf/contrib/rnn/ConvLSTMCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "master", "t": "tf.contrib.rnn.ConvLSTMCell"}, {"p": "/versions/master/api_docs/python/tf/contrib/rnn/CoupledInputForgetGateLSTMCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "master", "t": "tf.contrib.rnn.CoupledInputForgetGateLSTMCell"}, {"p": "/versions/master/api_docs/python/tf/contrib/rnn/DeviceWrapper", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "master", "t": "tf.contrib.rnn.DeviceWrapper"}, {"p": "/versions/master/api_docs/python/tf/contrib/rnn/DropoutWrapper", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "wrapped_cell", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "master", "t": "tf.contrib.rnn.DropoutWrapper"}, {"p": "/versions/master/api_docs/python/tf/contrib/rnn/EmbeddingWrapper", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "master", "t": "tf.contrib.rnn.EmbeddingWrapper"}, {"p": "/versions/master/api_docs/python/tf/contrib/rnn/FusedRNNCell", "k": ["__call__"], "r": "master", "t": "tf.contrib.rnn.FusedRNNCell"}, {"p": "/versions/master/api_docs/python/tf/contrib/rnn/FusedRNNCellAdaptor", "k": ["__call__", "__init__"], "r": "master", "t": "tf.contrib.rnn.FusedRNNCellAdaptor"}, {"p": "/versions/master/api_docs/python/tf/contrib/rnn/GLSTMCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "master", "t": "tf.contrib.rnn.GLSTMCell"}, {"p": "/versions/master/api_docs/python/tf/contrib/rnn/GRUBlockCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "master", "t": "tf.contrib.rnn.GRUBlockCell"}, {"p": "/versions/master/api_docs/python/tf/contrib/rnn/GRUBlockCellV2", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "master", "t": "tf.contrib.rnn.GRUBlockCellV2"}, {"p": "/versions/master/api_docs/python/tf/contrib/rnn/GRUCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "master", "t": "tf.contrib.rnn.GRUCell"}, {"p": "/versions/master/api_docs/python/tf/contrib/rnn/GridLSTMCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "state_tuple_type", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "master", "t": "tf.contrib.rnn.GridLSTMCell"}, {"p": "/versions/master/api_docs/python/tf/contrib/rnn/HighwayWrapper", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "master", "t": "tf.contrib.rnn.HighwayWrapper"}, {"p": "/versions/master/api_docs/python/tf/contrib/rnn/InputProjectionWrapper", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "master", "t": "tf.contrib.rnn.InputProjectionWrapper"}, {"p": "/versions/master/api_docs/python/tf/contrib/rnn/IntersectionRNNCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "master", "t": "tf.contrib.rnn.IntersectionRNNCell"}, {"p": "/versions/master/api_docs/python/tf/contrib/rnn/LSTMBlockCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "master", "t": "tf.contrib.rnn.LSTMBlockCell"}, {"p": "/versions/master/api_docs/python/tf/contrib/rnn/LSTMBlockFusedCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "num_units", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "master", "t": "tf.contrib.rnn.LSTMBlockFusedCell"}, {"p": "/versions/master/api_docs/python/tf/contrib/rnn/LSTMBlockWrapper", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "num_units", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "master", "t": "tf.contrib.rnn.LSTMBlockWrapper"}, {"p": "/versions/master/api_docs/python/tf/contrib/rnn/LSTMCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "master", "t": "tf.contrib.rnn.LSTMCell"}, {"p": "/versions/master/api_docs/python/tf/contrib/rnn/LSTMStateTuple", "k": ["c", "dtype", "h", "__new__"], "r": "master", "t": "tf.contrib.rnn.LSTMStateTuple"}, {"p": "/versions/master/api_docs/python/tf/contrib/rnn/LayerNormBasicLSTMCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "master", "t": "tf.contrib.rnn.LayerNormBasicLSTMCell"}, {"p": "/versions/master/api_docs/python/tf/contrib/rnn/LayerRNNCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "master", "t": "tf.contrib.rnn.LayerRNNCell"}, {"p": "/versions/master/api_docs/python/tf/contrib/rnn/MultiRNNCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "master", "t": "tf.contrib.rnn.MultiRNNCell"}, {"p": "/versions/master/api_docs/python/tf/contrib/rnn/NASCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "master", "t": "tf.contrib.rnn.NASCell"}, {"p": "/versions/master/api_docs/python/tf/contrib/rnn/OutputProjectionWrapper", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "master", "t": "tf.contrib.rnn.OutputProjectionWrapper"}, {"p": "/versions/master/api_docs/python/tf/contrib/rnn/PhasedLSTMCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "master", "t": "tf.contrib.rnn.PhasedLSTMCell"}, {"p": "/versions/master/api_docs/python/tf/contrib/rnn/RNNCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "master", "t": "tf.contrib.rnn.RNNCell"}, {"p": "/versions/master/api_docs/python/tf/contrib/rnn/ResidualWrapper", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "master", "t": "tf.contrib.rnn.ResidualWrapper"}, {"p": "/versions/master/api_docs/python/tf/contrib/rnn/TimeFreqLSTMCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "master", "t": "tf.contrib.rnn.TimeFreqLSTMCell"}, {"p": "/versions/master/api_docs/python/tf/contrib/rnn/TimeReversedFusedRNN", "k": ["__call__", "__init__"], "r": "master", "t": "tf.contrib.rnn.TimeReversedFusedRNN"}, {"p": "/versions/master/api_docs/python/tf/contrib/rnn/UGRNNCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "master", "t": "tf.contrib.rnn.UGRNNCell"}, {"p": "/versions/master/api_docs/python/tf/contrib/rnn/best_effort_input_batch_size", "k": [], "r": "master", "t": "tf.contrib.rnn.best_effort_input_batch_size"}, {"p": "/versions/master/api_docs/python/tf/contrib/rnn/stack_bidirectional_dynamic_rnn", "k": [], "r": "master", "t": "tf.contrib.rnn.stack_bidirectional_dynamic_rnn"}, {"p": "/versions/master/api_docs/python/tf/contrib/rnn/stack_bidirectional_rnn", "k": [], "r": "master", "t": "tf.contrib.rnn.stack_bidirectional_rnn"}, {"p": "/versions/master/api_docs/python/tf/contrib/rnn/transpose_batch_time", "k": [], "r": "master", "t": "tf.contrib.rnn.transpose_batch_time"}, {"p": "/versions/master/api_docs/python/tf/contrib/saved_model", "k": [], "r": "master", "t": "tf.contrib.saved_model"}, {"p": "/versions/master/api_docs/python/tf/contrib/saved_model/get_signature_def_by_key", "k": [], "r": "master", "t": "tf.contrib.saved_model.get_signature_def_by_key"}, {"p": "/versions/master/api_docs/python/tf/contrib/seq2seq", "k": [], "r": "master", "t": "tf.contrib.seq2seq"}, {"p": "/versions/master/api_docs/python/tf/contrib/seq2seq/AttentionMechanism", "k": ["alignments_size", "state_size"], "r": "master", "t": "tf.contrib.seq2seq.AttentionMechanism"}, {"p": "/versions/master/api_docs/python/tf/contrib/seq2seq/AttentionWrapper", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "master", "t": "tf.contrib.seq2seq.AttentionWrapper"}, {"p": "/versions/master/api_docs/python/tf/contrib/seq2seq/AttentionWrapperState", "k": ["alignment_history", "alignments", "attention", "attention_state", "cell_state", "time", "__new__", "clone"], "r": "master", "t": "tf.contrib.seq2seq.AttentionWrapperState"}, {"p": "/versions/master/api_docs/python/tf/contrib/seq2seq/BahdanauAttention", "k": ["alignments_size", "batch_size", "keys", "memory_layer", "query_layer", "state_size", "values", "__call__", "__init__", "initial_alignments", "initial_state"], "r": "master", "t": "tf.contrib.seq2seq.BahdanauAttention"}, {"p": "/versions/master/api_docs/python/tf/contrib/seq2seq/BahdanauMonotonicAttention", "k": ["alignments_size", "batch_size", "keys", "memory_layer", "query_layer", "state_size", "values", "__call__", "__init__", "initial_alignments", "initial_state"], "r": "master", "t": "tf.contrib.seq2seq.BahdanauMonotonicAttention"}, {"p": "/versions/master/api_docs/python/tf/contrib/seq2seq/BasicDecoder", "k": ["batch_size", "output_dtype", "output_size", "tracks_own_finished", "__init__", "finalize", "initialize", "step"], "r": "master", "t": "tf.contrib.seq2seq.BasicDecoder"}, {"p": "/versions/master/api_docs/python/tf/contrib/seq2seq/BasicDecoderOutput", "k": ["rnn_output", "sample_id", "__new__"], "r": "master", "t": "tf.contrib.seq2seq.BasicDecoderOutput"}, {"p": "/versions/master/api_docs/python/tf/contrib/seq2seq/BeamSearchDecoder", "k": ["batch_size", "output_dtype", "output_size", "tracks_own_finished", "__init__", "finalize", "initialize", "step"], "r": "master", "t": "tf.contrib.seq2seq.BeamSearchDecoder"}, {"p": "/versions/master/api_docs/python/tf/contrib/seq2seq/BeamSearchDecoderOutput", "k": ["parent_ids", "predicted_ids", "scores", "__new__"], "r": "master", "t": "tf.contrib.seq2seq.BeamSearchDecoderOutput"}, {"p": "/versions/master/api_docs/python/tf/contrib/seq2seq/BeamSearchDecoderState", "k": ["cell_state", "finished", "lengths", "log_probs", "__new__"], "r": "master", "t": "tf.contrib.seq2seq.BeamSearchDecoderState"}, {"p": "/versions/master/api_docs/python/tf/contrib/seq2seq/CustomHelper", "k": ["batch_size", "sample_ids_dtype", "sample_ids_shape", "__init__", "initialize", "next_inputs", "sample"], "r": "master", "t": "tf.contrib.seq2seq.CustomHelper"}, {"p": "/versions/master/api_docs/python/tf/contrib/seq2seq/Decoder", "k": ["batch_size", "output_dtype", "output_size", "tracks_own_finished", "finalize", "initialize", "step"], "r": "master", "t": "tf.contrib.seq2seq.Decoder"}, {"p": "/versions/master/api_docs/python/tf/contrib/seq2seq/FinalBeamSearchDecoderOutput", "k": ["beam_search_decoder_output", "predicted_ids", "__new__"], "r": "master", "t": "tf.contrib.seq2seq.FinalBeamSearchDecoderOutput"}, {"p": "/versions/master/api_docs/python/tf/contrib/seq2seq/GreedyEmbeddingHelper", "k": ["batch_size", "sample_ids_dtype", "sample_ids_shape", "__init__", "initialize", "next_inputs", "sample"], "r": "master", "t": "tf.contrib.seq2seq.GreedyEmbeddingHelper"}, {"p": "/versions/master/api_docs/python/tf/contrib/seq2seq/Helper", "k": ["batch_size", "sample_ids_dtype", "sample_ids_shape", "initialize", "next_inputs", "sample"], "r": "master", "t": "tf.contrib.seq2seq.Helper"}, {"p": "/versions/master/api_docs/python/tf/contrib/seq2seq/InferenceHelper", "k": ["batch_size", "sample_ids_dtype", "sample_ids_shape", "__init__", "initialize", "next_inputs", "sample"], "r": "master", "t": "tf.contrib.seq2seq.InferenceHelper"}, {"p": "/versions/master/api_docs/python/tf/contrib/seq2seq/LuongAttention", "k": ["alignments_size", "batch_size", "keys", "memory_layer", "query_layer", "state_size", "values", "__call__", "__init__", "initial_alignments", "initial_state"], "r": "master", "t": "tf.contrib.seq2seq.LuongAttention"}, {"p": "/versions/master/api_docs/python/tf/contrib/seq2seq/LuongMonotonicAttention", "k": ["alignments_size", "batch_size", "keys", "memory_layer", "query_layer", "state_size", "values", "__call__", "__init__", "initial_alignments", "initial_state"], "r": "master", "t": "tf.contrib.seq2seq.LuongMonotonicAttention"}, {"p": "/versions/master/api_docs/python/tf/contrib/seq2seq/SampleEmbeddingHelper", "k": ["batch_size", "sample_ids_dtype", "sample_ids_shape", "__init__", "initialize", "next_inputs", "sample"], "r": "master", "t": "tf.contrib.seq2seq.SampleEmbeddingHelper"}, {"p": "/versions/master/api_docs/python/tf/contrib/seq2seq/ScheduledEmbeddingTrainingHelper", "k": ["batch_size", "inputs", "sample_ids_dtype", "sample_ids_shape", "sequence_length", "__init__", "initialize", "next_inputs", "sample"], "r": "master", "t": "tf.contrib.seq2seq.ScheduledEmbeddingTrainingHelper"}, {"p": "/versions/master/api_docs/python/tf/contrib/seq2seq/ScheduledOutputTrainingHelper", "k": ["batch_size", "inputs", "sample_ids_dtype", "sample_ids_shape", "sequence_length", "__init__", "initialize", "next_inputs", "sample"], "r": "master", "t": "tf.contrib.seq2seq.ScheduledOutputTrainingHelper"}, {"p": "/versions/master/api_docs/python/tf/contrib/seq2seq/TrainingHelper", "k": ["batch_size", "inputs", "sample_ids_dtype", "sample_ids_shape", "sequence_length", "__init__", "initialize", "next_inputs", "sample"], "r": "master", "t": "tf.contrib.seq2seq.TrainingHelper"}, {"p": "/versions/master/api_docs/python/tf/contrib/seq2seq/dynamic_decode", "k": [], "r": "master", "t": "tf.contrib.seq2seq.dynamic_decode"}, {"p": "/versions/master/api_docs/python/tf/contrib/seq2seq/gather_tree", "k": [], "r": "master", "t": "tf.contrib.seq2seq.gather_tree"}, {"p": "/versions/master/api_docs/python/tf/contrib/seq2seq/hardmax", "k": [], "r": "master", "t": "tf.contrib.seq2seq.hardmax"}, {"p": "/versions/master/api_docs/python/tf/contrib/seq2seq/monotonic_attention", "k": [], "r": "master", "t": "tf.contrib.seq2seq.monotonic_attention"}, {"p": "/versions/master/api_docs/python/tf/contrib/seq2seq/safe_cumprod", "k": [], "r": "master", "t": "tf.contrib.seq2seq.safe_cumprod"}, {"p": "/versions/master/api_docs/python/tf/contrib/seq2seq/sequence_loss", "k": [], "r": "master", "t": "tf.contrib.seq2seq.sequence_loss"}, {"p": "/versions/master/api_docs/python/tf/contrib/seq2seq/tile_batch", "k": [], "r": "master", "t": "tf.contrib.seq2seq.tile_batch"}, {"p": "/versions/master/api_docs/python/tf/contrib/session_bundle", "k": [], "r": "master", "t": "tf.contrib.session_bundle"}, {"p": "/versions/master/api_docs/python/tf/contrib/signal", "k": [], "r": "master", "t": "tf.contrib.signal"}, {"p": "/versions/master/api_docs/python/tf/contrib/signal/frame", "k": [], "r": "master", "t": "tf.contrib.signal.frame"}, {"p": "/versions/master/api_docs/python/tf/contrib/signal/hamming_window", "k": [], "r": "master", "t": "tf.contrib.signal.hamming_window"}, {"p": "/versions/master/api_docs/python/tf/contrib/signal/hann_window", "k": [], "r": "master", "t": "tf.contrib.signal.hann_window"}, {"p": "/versions/master/api_docs/python/tf/contrib/signal/inverse_stft", "k": [], "r": "master", "t": "tf.contrib.signal.inverse_stft"}, {"p": "/versions/master/api_docs/python/tf/contrib/signal/inverse_stft_window_fn", "k": [], "r": "master", "t": "tf.contrib.signal.inverse_stft_window_fn"}, {"p": "/versions/master/api_docs/python/tf/contrib/signal/linear_to_mel_weight_matrix", "k": [], "r": "master", "t": "tf.contrib.signal.linear_to_mel_weight_matrix"}, {"p": "/versions/master/api_docs/python/tf/contrib/signal/mfccs_from_log_mel_spectrograms", "k": [], "r": "master", "t": "tf.contrib.signal.mfccs_from_log_mel_spectrograms"}, {"p": "/versions/master/api_docs/python/tf/contrib/signal/overlap_and_add", "k": [], "r": "master", "t": "tf.contrib.signal.overlap_and_add"}, {"p": "/versions/master/api_docs/python/tf/contrib/signal/stft", "k": [], "r": "master", "t": "tf.contrib.signal.stft"}, {"p": "/versions/master/api_docs/python/tf/contrib/slim", "k": [], "r": "master", "t": "tf.contrib.slim"}, {"p": "/versions/master/api_docs/python/tf/contrib/solvers", "k": [], "r": "master", "t": "tf.contrib.solvers"}, {"p": "/versions/master/api_docs/python/tf/contrib/sparsemax", "k": [], "r": "master", "t": "tf.contrib.sparsemax"}, {"p": "/versions/master/api_docs/python/tf/contrib/sparsemax/sparsemax", "k": [], "r": "master", "t": "tf.contrib.sparsemax.sparsemax"}, {"p": "/versions/master/api_docs/python/tf/contrib/sparsemax/sparsemax_loss", "k": [], "r": "master", "t": "tf.contrib.sparsemax.sparsemax_loss"}, {"p": "/versions/master/api_docs/python/tf/contrib/specs", "k": [], "r": "master", "t": "tf.contrib.specs"}, {"p": "/versions/master/api_docs/python/tf/contrib/staging", "k": ["absolute_import", "division", "print_function"], "r": "master", "t": "tf.contrib.staging"}, {"p": "/versions/master/api_docs/python/tf/contrib/staging/StagingArea", "k": ["capacity", "dtypes", "memory_limit", "name", "names", "shapes", "__init__", "clear", "get", "peek", "put", "size"], "r": "master", "t": "tf.contrib.staging.StagingArea"}, {"p": "/versions/master/api_docs/python/tf/contrib/stat_summarizer", "k": [], "r": "master", "t": "tf.contrib.stat_summarizer"}, {"p": "/versions/master/api_docs/python/tf/contrib/stat_summarizer/DeleteStatSummarizer", "k": [], "r": "master", "t": "tf.contrib.stat_summarizer.DeleteStatSummarizer"}, {"p": "/versions/master/api_docs/python/tf/contrib/stat_summarizer/NewStatSummarizer", "k": [], "r": "master", "t": "tf.contrib.stat_summarizer.NewStatSummarizer"}, {"p": "/versions/master/api_docs/python/tf/contrib/stat_summarizer/StatSummarizer", "k": ["GetOutputString", "PrintStepStats", "ProcessStepStats", "ProcessStepStatsStr", "__getattr__", "__init__", "__setattr__", "__swig_getmethods__", "__swig_setmethods__"], "r": "master", "t": "tf.contrib.stat_summarizer.StatSummarizer"}, {"p": "/versions/master/api_docs/python/tf/contrib/stateless", "k": [], "r": "master", "t": "tf.contrib.stateless"}, {"p": "/versions/master/api_docs/python/tf/contrib/stateless/stateless_random_normal", "k": [], "r": "master", "t": "tf.contrib.stateless.stateless_random_normal"}, {"p": "/versions/master/api_docs/python/tf/contrib/stateless/stateless_random_uniform", "k": [], "r": "master", "t": "tf.contrib.stateless.stateless_random_uniform"}, {"p": "/versions/master/api_docs/python/tf/contrib/stateless/stateless_truncated_normal", "k": [], "r": "master", "t": "tf.contrib.stateless.stateless_truncated_normal"}, {"p": "/versions/master/api_docs/python/tf/contrib/summary", "k": ["absolute_import", "division", "print_function"], "r": "master", "t": "tf.contrib.summary"}, {"p": "/versions/master/api_docs/python/tf/contrib/summary/SummaryWriter", "k": ["__init__", "as_default", "set_as_default"], "r": "master", "t": "tf.contrib.summary.SummaryWriter"}, {"p": "/versions/master/api_docs/python/tf/contrib/summary/all_summary_ops", "k": [], "r": "master", "t": "tf.contrib.summary.all_summary_ops"}, {"p": "/versions/master/api_docs/python/tf/contrib/summary/always_record_summaries", "k": [], "r": "master", "t": "tf.contrib.summary.always_record_summaries"}, {"p": "/versions/master/api_docs/python/tf/contrib/summary/audio", "k": [], "r": "master", "t": "tf.contrib.summary.audio"}, {"p": "/versions/master/api_docs/python/tf/contrib/summary/create_db_writer", "k": [], "r": "master", "t": "tf.contrib.summary.create_db_writer"}, {"p": "/versions/master/api_docs/python/tf/contrib/summary/create_file_writer", "k": [], "r": "master", "t": "tf.contrib.summary.create_file_writer"}, {"p": "/versions/master/api_docs/python/tf/contrib/summary/create_summary_file_writer", "k": [], "r": "master", "t": "tf.contrib.summary.create_summary_file_writer"}, {"p": "/versions/master/api_docs/python/tf/contrib/summary/eval_dir", "k": [], "r": "master", "t": "tf.contrib.summary.eval_dir"}, {"p": "/versions/master/api_docs/python/tf/contrib/summary/flush", "k": [], "r": "master", "t": "tf.contrib.summary.flush"}, {"p": "/versions/master/api_docs/python/tf/contrib/summary/generic", "k": [], "r": "master", "t": "tf.contrib.summary.generic"}, {"p": "/versions/master/api_docs/python/tf/contrib/summary/graph", "k": [], "r": "master", "t": "tf.contrib.summary.graph"}, {"p": "/versions/master/api_docs/python/tf/contrib/summary/histogram", "k": [], "r": "master", "t": "tf.contrib.summary.histogram"}, {"p": "/versions/master/api_docs/python/tf/contrib/summary/image", "k": [], "r": "master", "t": "tf.contrib.summary.image"}, {"p": "/versions/master/api_docs/python/tf/contrib/summary/import_event", "k": [], "r": "master", "t": "tf.contrib.summary.import_event"}, {"p": "/versions/master/api_docs/python/tf/contrib/summary/initialize", "k": [], "r": "master", "t": "tf.contrib.summary.initialize"}, {"p": "/versions/master/api_docs/python/tf/contrib/summary/never_record_summaries", "k": [], "r": "master", "t": "tf.contrib.summary.never_record_summaries"}, {"p": "/versions/master/api_docs/python/tf/contrib/summary/record_summaries_every_n_global_steps", "k": [], "r": "master", "t": "tf.contrib.summary.record_summaries_every_n_global_steps"}, {"p": "/versions/master/api_docs/python/tf/contrib/summary/scalar", "k": [], "r": "master", "t": "tf.contrib.summary.scalar"}, {"p": "/versions/master/api_docs/python/tf/contrib/summary/should_record_summaries", "k": [], "r": "master", "t": "tf.contrib.summary.should_record_summaries"}, {"p": "/versions/master/api_docs/python/tf/contrib/summary/summary_writer_initializer_op", "k": [], "r": "master", "t": "tf.contrib.summary.summary_writer_initializer_op"}, {"p": "/versions/master/api_docs/python/tf/contrib/tensor_forest", "k": [], "r": "master", "t": "tf.contrib.tensor_forest"}, {"p": "/versions/master/api_docs/python/tf/contrib/tensorboard", "k": [], "r": "master", "t": "tf.contrib.tensorboard"}, {"p": "/versions/master/api_docs/python/tf/contrib/testing", "k": [], "r": "master", "t": "tf.contrib.testing"}, {"p": "/versions/master/api_docs/python/tf/contrib/tfprof", "k": [], "r": "master", "t": "tf.contrib.tfprof"}, {"p": "/versions/master/api_docs/python/tf/contrib/timeseries", "k": [], "r": "master", "t": "tf.contrib.timeseries"}, {"p": "/versions/master/api_docs/python/tf/contrib/timeseries/ARModel", "k": ["exogenous_feature_columns", "__init__", "define_loss", "generate", "get_batch_loss", "get_start_state", "initialize_graph", "loss_op", "predict", "prediction_ops", "random_model_parameters", "NORMAL_LIKELIHOOD_LOSS", "SQUARED_LOSS"], "r": "master", "t": "tf.contrib.timeseries.ARModel"}, {"p": "/versions/master/api_docs/python/tf/contrib/timeseries/ARRegressor", "k": ["config", "model_dir", "model_fn", "params", "__init__", "build_raw_serving_input_receiver_fn", "evaluate", "export_savedmodel", "get_variable_names", "get_variable_value", "latest_checkpoint", "predict", "train"], "r": "master", "t": "tf.contrib.timeseries.ARRegressor"}, {"p": "/versions/master/api_docs/python/tf/contrib/timeseries/CSVReader", "k": ["__init__", "check_dataset_size", "read", "read_full"], "r": "master", "t": "tf.contrib.timeseries.CSVReader"}, {"p": "/versions/master/api_docs/python/tf/contrib/timeseries/FilteringResults", "k": ["STATE_PREFIX", "STATE_TUPLE", "TIMES"], "r": "master", "t": "tf.contrib.timeseries.FilteringResults"}, {"p": "/versions/master/api_docs/python/tf/contrib/timeseries/NumpyReader", "k": ["__init__", "check_dataset_size", "read", "read_full"], "r": "master", "t": "tf.contrib.timeseries.NumpyReader"}, {"p": "/versions/master/api_docs/python/tf/contrib/timeseries/RandomWindowInputFn", "k": ["__call__", "__init__", "create_batch"], "r": "master", "t": "tf.contrib.timeseries.RandomWindowInputFn"}, {"p": "/versions/master/api_docs/python/tf/contrib/timeseries/StructuralEnsembleRegressor", "k": ["config", "model_dir", "model_fn", "params", "__init__", "build_raw_serving_input_receiver_fn", "evaluate", "export_savedmodel", "get_variable_names", "get_variable_value", "latest_checkpoint", "predict", "train"], "r": "master", "t": "tf.contrib.timeseries.StructuralEnsembleRegressor"}, {"p": "/versions/master/api_docs/python/tf/contrib/timeseries/TrainEvalFeatures", "k": ["TIMES", "VALUES"], "r": "master", "t": "tf.contrib.timeseries.TrainEvalFeatures"}, {"p": "/versions/master/api_docs/python/tf/contrib/timeseries/WholeDatasetInputFn", "k": ["__call__", "__init__", "create_batch"], "r": "master", "t": "tf.contrib.timeseries.WholeDatasetInputFn"}, {"p": "/versions/master/api_docs/python/tf/contrib/timeseries/predict_continuation_input_fn", "k": [], "r": "master", "t": "tf.contrib.timeseries.predict_continuation_input_fn"}, {"p": "/versions/master/api_docs/python/tf/contrib/timeseries/saved_model_utils", "k": [], "r": "master", "t": "tf.contrib.timeseries.saved_model_utils"}, {"p": "/versions/master/api_docs/python/tf/contrib/timeseries/saved_model_utils/cold_start_filter", "k": [], "r": "master", "t": "tf.contrib.timeseries.saved_model_utils.cold_start_filter"}, {"p": "/versions/master/api_docs/python/tf/contrib/timeseries/saved_model_utils/filter_continuation", "k": [], "r": "master", "t": "tf.contrib.timeseries.saved_model_utils.filter_continuation"}, {"p": "/versions/master/api_docs/python/tf/contrib/timeseries/saved_model_utils/predict_continuation", "k": [], "r": "master", "t": "tf.contrib.timeseries.saved_model_utils.predict_continuation"}, {"p": "/versions/master/api_docs/python/tf/contrib/tpu", "k": [], "r": "master", "t": "tf.contrib.tpu"}, {"p": "/versions/master/api_docs/python/tf/contrib/tpu/CrossShardOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "master", "t": "tf.contrib.tpu.CrossShardOptimizer"}, {"p": "/versions/master/api_docs/python/tf/contrib/tpu/DeviceAssignment", "k": ["computation_shape", "core_assignment", "num_cores_per_replica", "num_replicas", "topology", "__init__", "host_device", "lookup_replicas", "tpu_device", "tpu_ordinal"], "r": "master", "t": "tf.contrib.tpu.DeviceAssignment"}, {"p": "/versions/master/api_docs/python/tf/contrib/tpu/InfeedQueue", "k": ["number_of_shards", "number_of_tuple_elements", "shard_dimensions", "sharding_policies", "tuple_shapes", "tuple_types", "__init__", "freeze", "generate_dequeue_op", "generate_enqueue_ops", "set_configuration_from_input_tensors", "set_configuration_from_sharded_input_tensors", "set_number_of_shards", "set_shard_dimensions", "set_tuple_shapes", "set_tuple_types", "split_inputs_and_generate_enqueue_ops"], "r": "master", "t": "tf.contrib.tpu.InfeedQueue"}, {"p": "/versions/master/api_docs/python/tf/contrib/tpu/RunConfig", "k": ["cluster", "cluster_spec", "distribute", "evaluation_master", "global_id_in_cluster", "is_chief", "keep_checkpoint_every_n_hours", "keep_checkpoint_max", "log_step_count_steps", "master", "model_dir", "num_ps_replicas", "num_worker_replicas", "save_checkpoints_secs", "save_checkpoints_steps", "save_summary_steps", "service", "session_config", "task_id", "task_type", "tf_random_seed", "tpu_config", "__init__", "replace"], "r": "master", "t": "tf.contrib.tpu.RunConfig"}, {"p": "/versions/master/api_docs/python/tf/contrib/tpu/TPUConfig", "k": ["computation_shape", "initial_infeed_sleep_secs", "iterations_per_loop", "num_shards", "per_host_input_for_training", "tpu_job_name", "__new__"], "r": "master", "t": "tf.contrib.tpu.TPUConfig"}, {"p": "/versions/master/api_docs/python/tf/contrib/tpu/TPUEstimator", "k": ["config", "model_dir", "model_fn", "params", "__init__", "evaluate", "export_savedmodel", "get_variable_names", "get_variable_value", "latest_checkpoint", "predict", "train"], "r": "master", "t": "tf.contrib.tpu.TPUEstimator"}, {"p": "/versions/master/api_docs/python/tf/contrib/tpu/TPUEstimatorSpec", "k": ["eval_metrics", "export_outputs", "host_call", "loss", "mode", "predictions", "scaffold_fn", "train_op", "__new__", "as_estimator_spec"], "r": "master", "t": "tf.contrib.tpu.TPUEstimatorSpec"}, {"p": "/versions/master/api_docs/python/tf/contrib/tpu/Topology", "k": ["device_coordinates", "mesh_shape", "__init__", "serialized"], "r": "master", "t": "tf.contrib.tpu.Topology"}, {"p": "/versions/master/api_docs/python/tf/contrib/tpu/batch_parallel", "k": [], "r": "master", "t": "tf.contrib.tpu.batch_parallel"}, {"p": "/versions/master/api_docs/python/tf/contrib/tpu/core", "k": [], "r": "master", "t": "tf.contrib.tpu.core"}, {"p": "/versions/master/api_docs/python/tf/contrib/tpu/cross_replica_sum", "k": [], "r": "master", "t": "tf.contrib.tpu.cross_replica_sum"}, {"p": "/versions/master/api_docs/python/tf/contrib/tpu/device_assignment", "k": [], "r": "master", "t": "tf.contrib.tpu.device_assignment"}, {"p": "/versions/master/api_docs/python/tf/contrib/tpu/infeed_dequeue", "k": [], "r": "master", "t": "tf.contrib.tpu.infeed_dequeue"}, {"p": "/versions/master/api_docs/python/tf/contrib/tpu/infeed_dequeue_tuple", "k": [], "r": "master", "t": "tf.contrib.tpu.infeed_dequeue_tuple"}, {"p": "/versions/master/api_docs/python/tf/contrib/tpu/initialize_system", "k": [], "r": "master", "t": "tf.contrib.tpu.initialize_system"}, {"p": "/versions/master/api_docs/python/tf/contrib/tpu/outfeed_enqueue", "k": [], "r": "master", "t": "tf.contrib.tpu.outfeed_enqueue"}, {"p": "/versions/master/api_docs/python/tf/contrib/tpu/outfeed_enqueue_tuple", "k": [], "r": "master", "t": "tf.contrib.tpu.outfeed_enqueue_tuple"}, {"p": "/versions/master/api_docs/python/tf/contrib/tpu/profiler", "k": [], "r": "master", "t": "tf.contrib.tpu.profiler"}, {"p": "/versions/master/api_docs/python/tf/contrib/tpu/profiler/Device", "k": ["ResourcesEntry"], "r": "master", "t": "tf.contrib.tpu.profiler.Device"}, {"p": "/versions/master/api_docs/python/tf/contrib/tpu/profiler/Device/ResourcesEntry", "k": [], "r": "master", "t": "tf.contrib.tpu.profiler.Device.ResourcesEntry"}, {"p": "/versions/master/api_docs/python/tf/contrib/tpu/profiler/Resource", "k": [], "r": "master", "t": "tf.contrib.tpu.profiler.Resource"}, {"p": "/versions/master/api_docs/python/tf/contrib/tpu/profiler/Trace", "k": ["DevicesEntry"], "r": "master", "t": "tf.contrib.tpu.profiler.Trace"}, {"p": "/versions/master/api_docs/python/tf/contrib/tpu/profiler/Trace/DevicesEntry", "k": [], "r": "master", "t": "tf.contrib.tpu.profiler.Trace.DevicesEntry"}, {"p": "/versions/master/api_docs/python/tf/contrib/tpu/profiler/TraceEvent", "k": [], "r": "master", "t": "tf.contrib.tpu.profiler.TraceEvent"}, {"p": "/versions/master/api_docs/python/tf/contrib/tpu/repeat", "k": [], "r": "master", "t": "tf.contrib.tpu.repeat"}, {"p": "/versions/master/api_docs/python/tf/contrib/tpu/replicate", "k": [], "r": "master", "t": "tf.contrib.tpu.replicate"}, {"p": "/versions/master/api_docs/python/tf/contrib/tpu/rewrite", "k": [], "r": "master", "t": "tf.contrib.tpu.rewrite"}, {"p": "/versions/master/api_docs/python/tf/contrib/tpu/shard", "k": [], "r": "master", "t": "tf.contrib.tpu.shard"}, {"p": "/versions/master/api_docs/python/tf/contrib/tpu/shutdown_system", "k": [], "r": "master", "t": "tf.contrib.tpu.shutdown_system"}, {"p": "/versions/master/api_docs/python/tf/contrib/tpu/while_loop", "k": [], "r": "master", "t": "tf.contrib.tpu.while_loop"}, {"p": "/versions/master/api_docs/python/tf/contrib/training", "k": [], "r": "master", "t": "tf.contrib.training"}, {"p": "/versions/master/api_docs/python/tf/contrib/training/FeedingQueueRunner", "k": ["cancel_op", "close_op", "enqueue_ops", "exceptions_raised", "name", "queue", "queue_closed_exception_types", "__init__", "create_threads", "from_proto", "to_proto"], "r": "master", "t": "tf.contrib.training.FeedingQueueRunner"}, {"p": "/versions/master/api_docs/python/tf/contrib/training/GreedyLoadBalancingStrategy", "k": ["__call__", "__init__"], "r": "master", "t": "tf.contrib.training.GreedyLoadBalancingStrategy"}, {"p": "/versions/master/api_docs/python/tf/contrib/training/HParams", "k": ["__contains__", "__init__", "add_hparam", "from_proto", "get", "get_model_structure", "override_from_dict", "parse", "parse_json", "set_from_map", "set_hparam", "set_model_structure", "to_json", "to_proto", "values"], "r": "master", "t": "tf.contrib.training.HParams"}, {"p": "/versions/master/api_docs/python/tf/contrib/training/NextQueuedSequenceBatch", "k": ["batch_size", "context", "insertion_index", "key", "length", "next_key", "sequence", "sequence_count", "sequences", "total_length", "__init__", "save_state", "state"], "r": "master", "t": "tf.contrib.training.NextQueuedSequenceBatch"}, {"p": "/versions/master/api_docs/python/tf/contrib/training/RandomStrategy", "k": ["__call__", "__init__"], "r": "master", "t": "tf.contrib.training.RandomStrategy"}, {"p": "/versions/master/api_docs/python/tf/contrib/training/SequenceQueueingStateSaver", "k": ["barrier", "batch_size", "name", "next_batch", "num_unroll", "prefetch_op", "__init__", "close"], "r": "master", "t": "tf.contrib.training.SequenceQueueingStateSaver"}, {"p": "/versions/master/api_docs/python/tf/contrib/training/StopAfterNEvalsHook", "k": ["__init__", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "master", "t": "tf.contrib.training.StopAfterNEvalsHook"}, {"p": "/versions/master/api_docs/python/tf/contrib/training/SummaryAtEndHook", "k": ["__init__", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "master", "t": "tf.contrib.training.SummaryAtEndHook"}, {"p": "/versions/master/api_docs/python/tf/contrib/training/add_gradients_summaries", "k": [], "r": "master", "t": "tf.contrib.training.add_gradients_summaries"}, {"p": "/versions/master/api_docs/python/tf/contrib/training/batch_sequences_with_states", "k": [], "r": "master", "t": "tf.contrib.training.batch_sequences_with_states"}, {"p": "/versions/master/api_docs/python/tf/contrib/training/bucket", "k": [], "r": "master", "t": "tf.contrib.training.bucket"}, {"p": "/versions/master/api_docs/python/tf/contrib/training/bucket_by_sequence_length", "k": [], "r": "master", "t": "tf.contrib.training.bucket_by_sequence_length"}, {"p": "/versions/master/api_docs/python/tf/contrib/training/byte_size_load_fn", "k": [], "r": "master", "t": "tf.contrib.training.byte_size_load_fn"}, {"p": "/versions/master/api_docs/python/tf/contrib/training/checkpoints_iterator", "k": [], "r": "master", "t": "tf.contrib.training.checkpoints_iterator"}, {"p": "/versions/master/api_docs/python/tf/contrib/training/clip_gradient_norms", "k": [], "r": "master", "t": "tf.contrib.training.clip_gradient_norms"}, {"p": "/versions/master/api_docs/python/tf/contrib/training/clip_gradient_norms_fn", "k": [], "r": "master", "t": "tf.contrib.training.clip_gradient_norms_fn"}, {"p": "/versions/master/api_docs/python/tf/contrib/training/create_train_op", "k": [], "r": "master", "t": "tf.contrib.training.create_train_op"}, {"p": "/versions/master/api_docs/python/tf/contrib/training/evaluate_once", "k": [], "r": "master", "t": "tf.contrib.training.evaluate_once"}, {"p": "/versions/master/api_docs/python/tf/contrib/training/evaluate_repeatedly", "k": [], "r": "master", "t": "tf.contrib.training.evaluate_repeatedly"}, {"p": "/versions/master/api_docs/python/tf/contrib/training/get_or_create_eval_step", "k": [], "r": "master", "t": "tf.contrib.training.get_or_create_eval_step"}, {"p": "/versions/master/api_docs/python/tf/contrib/training/multiply_gradients", "k": [], "r": "master", "t": "tf.contrib.training.multiply_gradients"}, {"p": "/versions/master/api_docs/python/tf/contrib/training/parse_values", "k": [], "r": "master", "t": "tf.contrib.training.parse_values"}, {"p": "/versions/master/api_docs/python/tf/contrib/training/rejection_sample", "k": [], "r": "master", "t": "tf.contrib.training.rejection_sample"}, {"p": "/versions/master/api_docs/python/tf/contrib/training/resample_at_rate", "k": [], "r": "master", "t": "tf.contrib.training.resample_at_rate"}, {"p": "/versions/master/api_docs/python/tf/contrib/training/stratified_sample", "k": [], "r": "master", "t": "tf.contrib.training.stratified_sample"}, {"p": "/versions/master/api_docs/python/tf/contrib/training/train", "k": [], "r": "master", "t": "tf.contrib.training.train"}, {"p": "/versions/master/api_docs/python/tf/contrib/training/wait_for_new_checkpoint", "k": [], "r": "master", "t": "tf.contrib.training.wait_for_new_checkpoint"}, {"p": "/versions/master/api_docs/python/tf/contrib/training/weighted_resample", "k": [], "r": "master", "t": "tf.contrib.training.weighted_resample"}, {"p": "/versions/master/api_docs/python/tf/contrib/util", "k": [], "r": "master", "t": "tf.contrib.util"}, {"p": "/versions/master/api_docs/python/tf/contrib/util/constant_value", "k": [], "r": "master", "t": "tf.contrib.util.constant_value"}, {"p": "/versions/master/api_docs/python/tf/contrib/util/loader", "k": [], "r": "master", "t": "tf.contrib.util.loader"}, {"p": "/versions/master/api_docs/python/tf/contrib/util/ops_used_by_graph_def", "k": [], "r": "master", "t": "tf.contrib.util.ops_used_by_graph_def"}, {"p": "/versions/master/api_docs/python/tf/contrib/util/stripped_op_list_for_graph", "k": [], "r": "master", "t": "tf.contrib.util.stripped_op_list_for_graph"}, {"p": "/versions/master/api_docs/python/tf/control_dependencies", "k": [], "r": "master", "t": "tf.control_dependencies"}, {"p": "/versions/master/api_docs/python/tf/convert_to_tensor", "k": [], "r": "master", "t": "tf.convert_to_tensor"}, {"p": "/versions/master/api_docs/python/tf/convert_to_tensor_or_indexed_slices", "k": [], "r": "master", "t": "tf.convert_to_tensor_or_indexed_slices"}, {"p": "/versions/master/api_docs/python/tf/convert_to_tensor_or_sparse_tensor", "k": [], "r": "master", "t": "tf.convert_to_tensor_or_sparse_tensor"}, {"p": "/versions/master/api_docs/python/tf/cos", "k": [], "r": "master", "t": "tf.cos"}, {"p": "/versions/master/api_docs/python/tf/cosh", "k": [], "r": "master", "t": "tf.cosh"}, {"p": "/versions/master/api_docs/python/tf/count_nonzero", "k": [], "r": "master", "t": "tf.count_nonzero"}, {"p": "/versions/master/api_docs/python/tf/count_up_to", "k": [], "r": "master", "t": "tf.count_up_to"}, {"p": "/versions/master/api_docs/python/tf/create_partitioned_variables", "k": [], "r": "master", "t": "tf.create_partitioned_variables"}, {"p": "/versions/master/api_docs/python/tf/cross", "k": [], "r": "master", "t": "tf.cross"}, {"p": "/versions/master/api_docs/python/tf/cumprod", "k": [], "r": "master", "t": "tf.cumprod"}, {"p": "/versions/master/api_docs/python/tf/cumsum", "k": [], "r": "master", "t": "tf.cumsum"}, {"p": "/versions/master/api_docs/python/tf/custom_gradient", "k": [], "r": "master", "t": "tf.custom_gradient"}, {"p": "/versions/master/api_docs/python/tf/data", "k": [], "r": "master", "t": "tf.data"}, {"p": "/versions/master/api_docs/python/tf/data/Dataset", "k": ["output_classes", "output_shapes", "output_types", "__init__", "__iter__", "apply", "batch", "cache", "concatenate", "filter", "flat_map", "from_generator", "from_sparse_tensor_slices", "from_tensor_slices", "from_tensors", "interleave", "list_files", "make_initializable_iterator", "make_one_shot_iterator", "map", "padded_batch", "prefetch", "range", "repeat", "shard", "shuffle", "skip", "take", "zip"], "r": "master", "t": "tf.data.Dataset"}, {"p": "/versions/master/api_docs/python/tf/data/FixedLengthRecordDataset", "k": ["output_classes", "output_shapes", "output_types", "__init__", "__iter__", "apply", "batch", "cache", "concatenate", "filter", "flat_map", "from_generator", "from_sparse_tensor_slices", "from_tensor_slices", "from_tensors", "interleave", "list_files", "make_initializable_iterator", "make_one_shot_iterator", "map", "padded_batch", "prefetch", "range", "repeat", "shard", "shuffle", "skip", "take", "zip"], "r": "master", "t": "tf.data.FixedLengthRecordDataset"}, {"p": "/versions/master/api_docs/python/tf/data/Iterator", "k": ["initializer", "output_classes", "output_shapes", "output_types", "__init__", "from_string_handle", "from_structure", "get_next", "make_initializer", "string_handle"], "r": "master", "t": "tf.data.Iterator"}, {"p": "/versions/master/api_docs/python/tf/data/TFRecordDataset", "k": ["output_classes", "output_shapes", "output_types", "__init__", "__iter__", "apply", "batch", "cache", "concatenate", "filter", "flat_map", "from_generator", "from_sparse_tensor_slices", "from_tensor_slices", "from_tensors", "interleave", "list_files", "make_initializable_iterator", "make_one_shot_iterator", "map", "padded_batch", "prefetch", "range", "repeat", "shard", "shuffle", "skip", "take", "zip"], "r": "master", "t": "tf.data.TFRecordDataset"}, {"p": "/versions/master/api_docs/python/tf/data/TextLineDataset", "k": ["output_classes", "output_shapes", "output_types", "__init__", "__iter__", "apply", "batch", "cache", "concatenate", "filter", "flat_map", "from_generator", "from_sparse_tensor_slices", "from_tensor_slices", "from_tensors", "interleave", "list_files", "make_initializable_iterator", "make_one_shot_iterator", "map", "padded_batch", "prefetch", "range", "repeat", "shard", "shuffle", "skip", "take", "zip"], "r": "master", "t": "tf.data.TextLineDataset"}, {"p": "/versions/master/api_docs/python/tf/decode_base64", "k": [], "r": "master", "t": "tf.decode_base64"}, {"p": "/versions/master/api_docs/python/tf/decode_csv", "k": [], "r": "master", "t": "tf.decode_csv"}, {"p": "/versions/master/api_docs/python/tf/decode_json_example", "k": [], "r": "master", "t": "tf.decode_json_example"}, {"p": "/versions/master/api_docs/python/tf/decode_raw", "k": [], "r": "master", "t": "tf.decode_raw"}, {"p": "/versions/master/api_docs/python/tf/delete_session_tensor", "k": [], "r": "master", "t": "tf.delete_session_tensor"}, {"p": "/versions/master/api_docs/python/tf/depth_to_space", "k": [], "r": "master", "t": "tf.depth_to_space"}, {"p": "/versions/master/api_docs/python/tf/dequantize", "k": [], "r": "master", "t": "tf.dequantize"}, {"p": "/versions/master/api_docs/python/tf/deserialize_many_sparse", "k": [], "r": "master", "t": "tf.deserialize_many_sparse"}, {"p": "/versions/master/api_docs/python/tf/device", "k": [], "r": "master", "t": "tf.device"}, {"p": "/versions/master/api_docs/python/tf/diag", "k": [], "r": "master", "t": "tf.diag"}, {"p": "/versions/master/api_docs/python/tf/diag_part", "k": [], "r": "master", "t": "tf.diag_part"}, {"p": "/versions/master/api_docs/python/tf/digamma", "k": [], "r": "master", "t": "tf.digamma"}, {"p": "/versions/master/api_docs/python/tf/distributions", "k": ["FULLY_REPARAMETERIZED", "NOT_REPARAMETERIZED"], "r": "master", "t": "tf.distributions"}, {"p": "/versions/master/api_docs/python/tf/distributions/Bernoulli", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "logits", "name", "parameters", "probs", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "master", "t": "tf.distributions.Bernoulli"}, {"p": "/versions/master/api_docs/python/tf/distributions/Beta", "k": ["allow_nan_stats", "batch_shape", "concentration0", "concentration1", "dtype", "event_shape", "name", "parameters", "reparameterization_type", "total_concentration", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "master", "t": "tf.distributions.Beta"}, {"p": "/versions/master/api_docs/python/tf/distributions/Categorical", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "event_size", "logits", "name", "parameters", "probs", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "master", "t": "tf.distributions.Categorical"}, {"p": "/versions/master/api_docs/python/tf/distributions/Dirichlet", "k": ["allow_nan_stats", "batch_shape", "concentration", "dtype", "event_shape", "name", "parameters", "reparameterization_type", "total_concentration", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "master", "t": "tf.distributions.Dirichlet"}, {"p": "/versions/master/api_docs/python/tf/distributions/DirichletMultinomial", "k": ["allow_nan_stats", "batch_shape", "concentration", "dtype", "event_shape", "name", "parameters", "reparameterization_type", "total_concentration", "total_count", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "master", "t": "tf.distributions.DirichletMultinomial"}, {"p": "/versions/master/api_docs/python/tf/distributions/Distribution", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "name", "parameters", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "master", "t": "tf.distributions.Distribution"}, {"p": "/versions/master/api_docs/python/tf/distributions/Exponential", "k": ["allow_nan_stats", "batch_shape", "concentration", "dtype", "event_shape", "name", "parameters", "rate", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "master", "t": "tf.distributions.Exponential"}, {"p": "/versions/master/api_docs/python/tf/distributions/Gamma", "k": ["allow_nan_stats", "batch_shape", "concentration", "dtype", "event_shape", "name", "parameters", "rate", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "master", "t": "tf.distributions.Gamma"}, {"p": "/versions/master/api_docs/python/tf/distributions/Laplace", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "master", "t": "tf.distributions.Laplace"}, {"p": "/versions/master/api_docs/python/tf/distributions/Multinomial", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "logits", "name", "parameters", "probs", "reparameterization_type", "total_count", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "master", "t": "tf.distributions.Multinomial"}, {"p": "/versions/master/api_docs/python/tf/distributions/Normal", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "master", "t": "tf.distributions.Normal"}, {"p": "/versions/master/api_docs/python/tf/distributions/RegisterKL", "k": ["__call__", "__init__"], "r": "master", "t": "tf.distributions.RegisterKL"}, {"p": "/versions/master/api_docs/python/tf/distributions/ReparameterizationType", "k": ["__eq__", "__init__"], "r": "master", "t": "tf.distributions.ReparameterizationType"}, {"p": "/versions/master/api_docs/python/tf/distributions/StudentT", "k": ["allow_nan_stats", "batch_shape", "df", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "master", "t": "tf.distributions.StudentT"}, {"p": "/versions/master/api_docs/python/tf/distributions/Uniform", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "high", "low", "name", "parameters", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "range", "sample", "stddev", "survival_function", "variance"], "r": "master", "t": "tf.distributions.Uniform"}, {"p": "/versions/master/api_docs/python/tf/distributions/bijectors", "k": [], "r": "master", "t": "tf.distributions.bijectors"}, {"p": "/versions/master/api_docs/python/tf/distributions/bijectors/Bijector", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "master", "t": "tf.distributions.bijectors.Bijector"}, {"p": "/versions/master/api_docs/python/tf/distributions/bijectors/Identity", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "master", "t": "tf.distributions.bijectors.Identity"}, {"p": "/versions/master/api_docs/python/tf/distributions/kl_divergence", "k": [], "r": "master", "t": "tf.distributions.kl_divergence"}, {"p": "/versions/master/api_docs/python/tf/div", "k": [], "r": "master", "t": "tf.div"}, {"p": "/versions/master/api_docs/python/tf/divide", "k": [], "r": "master", "t": "tf.divide"}, {"p": "/versions/master/api_docs/python/tf/dynamic_partition", "k": [], "r": "master", "t": "tf.dynamic_partition"}, {"p": "/versions/master/api_docs/python/tf/dynamic_stitch", "k": [], "r": "master", "t": "tf.dynamic_stitch"}, {"p": "/versions/master/api_docs/python/tf/edit_distance", "k": [], "r": "master", "t": "tf.edit_distance"}, {"p": "/versions/master/api_docs/python/tf/einsum", "k": [], "r": "master", "t": "tf.einsum"}, {"p": "/versions/master/api_docs/python/tf/enable_eager_execution", "k": [], "r": "master", "t": "tf.enable_eager_execution"}, {"p": "/versions/master/api_docs/python/tf/encode_base64", "k": [], "r": "master", "t": "tf.encode_base64"}, {"p": "/versions/master/api_docs/python/tf/equal", "k": [], "r": "master", "t": "tf.equal"}, {"p": "/versions/master/api_docs/python/tf/erf", "k": [], "r": "master", "t": "tf.erf"}, {"p": "/versions/master/api_docs/python/tf/erfc", "k": [], "r": "master", "t": "tf.erfc"}, {"p": "/versions/master/api_docs/python/tf/errors", "k": ["ABORTED", "ALREADY_EXISTS", "CANCELLED", "DATA_LOSS", "DEADLINE_EXCEEDED", "FAILED_PRECONDITION", "INTERNAL", "INVALID_ARGUMENT", "NOT_FOUND", "OK", "OUT_OF_RANGE", "PERMISSION_DENIED", "RESOURCE_EXHAUSTED", "UNAUTHENTICATED", "UNAVAILABLE", "UNIMPLEMENTED", "UNKNOWN"], "r": "master", "t": "tf.errors"}, {"p": "/versions/master/api_docs/python/tf/errors/AbortedError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "master", "t": "tf.errors.AbortedError"}, {"p": "/versions/master/api_docs/python/tf/errors/AlreadyExistsError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "master", "t": "tf.errors.AlreadyExistsError"}, {"p": "/versions/master/api_docs/python/tf/errors/CancelledError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "master", "t": "tf.errors.CancelledError"}, {"p": "/versions/master/api_docs/python/tf/errors/DataLossError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "master", "t": "tf.errors.DataLossError"}, {"p": "/versions/master/api_docs/python/tf/errors/DeadlineExceededError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "master", "t": "tf.errors.DeadlineExceededError"}, {"p": "/versions/master/api_docs/python/tf/errors/FailedPreconditionError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "master", "t": "tf.errors.FailedPreconditionError"}, {"p": "/versions/master/api_docs/python/tf/errors/InternalError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "master", "t": "tf.errors.InternalError"}, {"p": "/versions/master/api_docs/python/tf/errors/InvalidArgumentError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "master", "t": "tf.errors.InvalidArgumentError"}, {"p": "/versions/master/api_docs/python/tf/errors/NotFoundError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "master", "t": "tf.errors.NotFoundError"}, {"p": "/versions/master/api_docs/python/tf/errors/OutOfRangeError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "master", "t": "tf.errors.OutOfRangeError"}, {"p": "/versions/master/api_docs/python/tf/errors/PermissionDeniedError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "master", "t": "tf.errors.PermissionDeniedError"}, {"p": "/versions/master/api_docs/python/tf/errors/ResourceExhaustedError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "master", "t": "tf.errors.ResourceExhaustedError"}, {"p": "/versions/master/api_docs/python/tf/errors/UnauthenticatedError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "master", "t": "tf.errors.UnauthenticatedError"}, {"p": "/versions/master/api_docs/python/tf/errors/UnavailableError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "master", "t": "tf.errors.UnavailableError"}, {"p": "/versions/master/api_docs/python/tf/errors/UnimplementedError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "master", "t": "tf.errors.UnimplementedError"}, {"p": "/versions/master/api_docs/python/tf/errors/UnknownError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "master", "t": "tf.errors.UnknownError"}, {"p": "/versions/master/api_docs/python/tf/errors/error_code_from_exception_type", "k": [], "r": "master", "t": "tf.errors.error_code_from_exception_type"}, {"p": "/versions/master/api_docs/python/tf/errors/exception_type_from_error_code", "k": [], "r": "master", "t": "tf.errors.exception_type_from_error_code"}, {"p": "/versions/master/api_docs/python/tf/errors/raise_exception_on_not_ok_status", "k": ["__enter__", "__exit__"], "r": "master", "t": "tf.errors.raise_exception_on_not_ok_status"}, {"p": "/versions/master/api_docs/python/tf/estimator", "k": [], "r": "master", "t": "tf.estimator"}, {"p": "/versions/master/api_docs/python/tf/estimator/BaselineClassifier", "k": ["config", "model_dir", "model_fn", "params", "__init__", "evaluate", "export_savedmodel", "get_variable_names", "get_variable_value", "latest_checkpoint", "predict", "train"], "r": "master", "t": "tf.estimator.BaselineClassifier"}, {"p": "/versions/master/api_docs/python/tf/estimator/BaselineRegressor", "k": ["config", "model_dir", "model_fn", "params", "__init__", "evaluate", "export_savedmodel", "get_variable_names", "get_variable_value", "latest_checkpoint", "predict", "train"], "r": "master", "t": "tf.estimator.BaselineRegressor"}, {"p": "/versions/master/api_docs/python/tf/estimator/BoostedTreesClassifier", "k": ["config", "model_dir", "model_fn", "params", "__init__", "evaluate", "export_savedmodel", "get_variable_names", "get_variable_value", "latest_checkpoint", "predict", "train"], "r": "master", "t": "tf.estimator.BoostedTreesClassifier"}, {"p": "/versions/master/api_docs/python/tf/estimator/BoostedTreesRegressor", "k": ["config", "model_dir", "model_fn", "params", "__init__", "evaluate", "export_savedmodel", "get_variable_names", "get_variable_value", "latest_checkpoint", "predict", "train"], "r": "master", "t": "tf.estimator.BoostedTreesRegressor"}, {"p": "/versions/master/api_docs/python/tf/estimator/DNNClassifier", "k": ["config", "model_dir", "model_fn", "params", "__init__", "evaluate", "export_savedmodel", "get_variable_names", "get_variable_value", "latest_checkpoint", "predict", "train"], "r": "master", "t": "tf.estimator.DNNClassifier"}, {"p": "/versions/master/api_docs/python/tf/estimator/DNNLinearCombinedClassifier", "k": ["config", "model_dir", "model_fn", "params", "__init__", "evaluate", "export_savedmodel", "get_variable_names", "get_variable_value", "latest_checkpoint", "predict", "train"], "r": "master", "t": "tf.estimator.DNNLinearCombinedClassifier"}, {"p": "/versions/master/api_docs/python/tf/estimator/DNNLinearCombinedRegressor", "k": ["config", "model_dir", "model_fn", "params", "__init__", "evaluate", "export_savedmodel", "get_variable_names", "get_variable_value", "latest_checkpoint", "predict", "train"], "r": "master", "t": "tf.estimator.DNNLinearCombinedRegressor"}, {"p": "/versions/master/api_docs/python/tf/estimator/DNNRegressor", "k": ["config", "model_dir", "model_fn", "params", "__init__", "evaluate", "export_savedmodel", "get_variable_names", "get_variable_value", "latest_checkpoint", "predict", "train"], "r": "master", "t": "tf.estimator.DNNRegressor"}, {"p": "/versions/master/api_docs/python/tf/estimator/Estimator", "k": ["config", "model_dir", "model_fn", "params", "__init__", "evaluate", "export_savedmodel", "get_variable_names", "get_variable_value", "latest_checkpoint", "predict", "train"], "r": "master", "t": "tf.estimator.Estimator"}, {"p": "/versions/master/api_docs/python/tf/estimator/EstimatorSpec", "k": ["eval_metric_ops", "evaluation_hooks", "export_outputs", "loss", "mode", "prediction_hooks", "predictions", "scaffold", "train_op", "training_chief_hooks", "training_hooks", "__new__"], "r": "master", "t": "tf.estimator.EstimatorSpec"}, {"p": "/versions/master/api_docs/python/tf/estimator/EvalSpec", "k": ["exporters", "hooks", "input_fn", "name", "start_delay_secs", "steps", "throttle_secs", "__new__"], "r": "master", "t": "tf.estimator.EvalSpec"}, {"p": "/versions/master/api_docs/python/tf/estimator/Exporter", "k": ["name", "export"], "r": "master", "t": "tf.estimator.Exporter"}, {"p": "/versions/master/api_docs/python/tf/estimator/FinalExporter", "k": ["name", "__init__", "export"], "r": "master", "t": "tf.estimator.FinalExporter"}, {"p": "/versions/master/api_docs/python/tf/estimator/LatestExporter", "k": ["name", "__init__", "export"], "r": "master", "t": "tf.estimator.LatestExporter"}, {"p": "/versions/master/api_docs/python/tf/estimator/LinearClassifier", "k": ["config", "model_dir", "model_fn", "params", "__init__", "evaluate", "export_savedmodel", "get_variable_names", "get_variable_value", "latest_checkpoint", "predict", "train"], "r": "master", "t": "tf.estimator.LinearClassifier"}, {"p": "/versions/master/api_docs/python/tf/estimator/LinearRegressor", "k": ["config", "model_dir", "model_fn", "params", "__init__", "evaluate", "export_savedmodel", "get_variable_names", "get_variable_value", "latest_checkpoint", "predict", "train"], "r": "master", "t": "tf.estimator.LinearRegressor"}, {"p": "/versions/master/api_docs/python/tf/estimator/ModeKeys", "k": ["EVAL", "PREDICT", "TRAIN"], "r": "master", "t": "tf.estimator.ModeKeys"}, {"p": "/versions/master/api_docs/python/tf/estimator/RunConfig", "k": ["cluster_spec", "distribute", "evaluation_master", "global_id_in_cluster", "is_chief", "keep_checkpoint_every_n_hours", "keep_checkpoint_max", "log_step_count_steps", "master", "model_dir", "num_ps_replicas", "num_worker_replicas", "save_checkpoints_secs", "save_checkpoints_steps", "save_summary_steps", "service", "session_config", "task_id", "task_type", "tf_random_seed", "__init__", "replace"], "r": "master", "t": "tf.estimator.RunConfig"}, {"p": "/versions/master/api_docs/python/tf/estimator/TrainSpec", "k": ["hooks", "input_fn", "max_steps", "__new__"], "r": "master", "t": "tf.estimator.TrainSpec"}, {"p": "/versions/master/api_docs/python/tf/estimator/VocabInfo", "k": ["backup_initializer", "new_vocab", "new_vocab_size", "num_oov_buckets", "old_vocab", "old_vocab_size", "__new__"], "r": "master", "t": "tf.estimator.VocabInfo"}, {"p": "/versions/master/api_docs/python/tf/estimator/WarmStartSettings", "k": ["ckpt_to_initialize_from", "var_name_to_prev_var_name", "var_name_to_vocab_info", "vars_to_warm_start", "__new__"], "r": "master", "t": "tf.estimator.WarmStartSettings"}, {"p": "/versions/master/api_docs/python/tf/estimator/classifier_parse_example_spec", "k": [], "r": "master", "t": "tf.estimator.classifier_parse_example_spec"}, {"p": "/versions/master/api_docs/python/tf/estimator/export", "k": [], "r": "master", "t": "tf.estimator.export"}, {"p": "/versions/master/api_docs/python/tf/estimator/export/ClassificationOutput", "k": ["classes", "scores", "__init__", "as_signature_def"], "r": "master", "t": "tf.estimator.export.ClassificationOutput"}, {"p": "/versions/master/api_docs/python/tf/estimator/export/ExportOutput", "k": ["as_signature_def"], "r": "master", "t": "tf.estimator.export.ExportOutput"}, {"p": "/versions/master/api_docs/python/tf/estimator/export/PredictOutput", "k": ["outputs", "__init__", "as_signature_def"], "r": "master", "t": "tf.estimator.export.PredictOutput"}, {"p": "/versions/master/api_docs/python/tf/estimator/export/RegressionOutput", "k": ["value", "__init__", "as_signature_def"], "r": "master", "t": "tf.estimator.export.RegressionOutput"}, {"p": "/versions/master/api_docs/python/tf/estimator/export/ServingInputReceiver", "k": ["features", "receiver_tensors", "receiver_tensors_alternatives", "__new__"], "r": "master", "t": "tf.estimator.export.ServingInputReceiver"}, {"p": "/versions/master/api_docs/python/tf/estimator/export/TensorServingInputReceiver", "k": ["features", "receiver_tensors", "receiver_tensors_alternatives", "__new__"], "r": "master", "t": "tf.estimator.export.TensorServingInputReceiver"}, {"p": "/versions/master/api_docs/python/tf/estimator/export/build_parsing_serving_input_receiver_fn", "k": [], "r": "master", "t": "tf.estimator.export.build_parsing_serving_input_receiver_fn"}, {"p": "/versions/master/api_docs/python/tf/estimator/export/build_raw_serving_input_receiver_fn", "k": [], "r": "master", "t": "tf.estimator.export.build_raw_serving_input_receiver_fn"}, {"p": "/versions/master/api_docs/python/tf/estimator/inputs", "k": [], "r": "master", "t": "tf.estimator.inputs"}, {"p": "/versions/master/api_docs/python/tf/estimator/inputs/numpy_input_fn", "k": [], "r": "master", "t": "tf.estimator.inputs.numpy_input_fn"}, {"p": "/versions/master/api_docs/python/tf/estimator/inputs/pandas_input_fn", "k": [], "r": "master", "t": "tf.estimator.inputs.pandas_input_fn"}, {"p": "/versions/master/api_docs/python/tf/estimator/regressor_parse_example_spec", "k": [], "r": "master", "t": "tf.estimator.regressor_parse_example_spec"}, {"p": "/versions/master/api_docs/python/tf/estimator/train_and_evaluate", "k": [], "r": "master", "t": "tf.estimator.train_and_evaluate"}, {"p": "/versions/master/api_docs/python/tf/executing_eagerly", "k": [], "r": "master", "t": "tf.executing_eagerly"}, {"p": "/versions/master/api_docs/python/tf/exp", "k": [], "r": "master", "t": "tf.exp"}, {"p": "/versions/master/api_docs/python/tf/expand_dims", "k": [], "r": "master", "t": "tf.expand_dims"}, {"p": "/versions/master/api_docs/python/tf/expm1", "k": [], "r": "master", "t": "tf.expm1"}, {"p": "/versions/master/api_docs/python/tf/extract_image_patches", "k": [], "r": "master", "t": "tf.extract_image_patches"}, {"p": "/versions/master/api_docs/python/tf/eye", "k": [], "r": "master", "t": "tf.eye"}, {"p": "/versions/master/api_docs/python/tf/fake_quant_with_min_max_args", "k": [], "r": "master", "t": "tf.fake_quant_with_min_max_args"}, {"p": "/versions/master/api_docs/python/tf/fake_quant_with_min_max_args_gradient", "k": [], "r": "master", "t": "tf.fake_quant_with_min_max_args_gradient"}, {"p": "/versions/master/api_docs/python/tf/fake_quant_with_min_max_vars", "k": [], "r": "master", "t": "tf.fake_quant_with_min_max_vars"}, {"p": "/versions/master/api_docs/python/tf/fake_quant_with_min_max_vars_gradient", "k": [], "r": "master", "t": "tf.fake_quant_with_min_max_vars_gradient"}, {"p": "/versions/master/api_docs/python/tf/fake_quant_with_min_max_vars_per_channel", "k": [], "r": "master", "t": "tf.fake_quant_with_min_max_vars_per_channel"}, {"p": "/versions/master/api_docs/python/tf/fake_quant_with_min_max_vars_per_channel_gradient", "k": [], "r": "master", "t": "tf.fake_quant_with_min_max_vars_per_channel_gradient"}, {"p": "/versions/master/api_docs/python/tf/feature_column", "k": [], "r": "master", "t": "tf.feature_column"}, {"p": "/versions/master/api_docs/python/tf/feature_column/bucketized_column", "k": [], "r": "master", "t": "tf.feature_column.bucketized_column"}, {"p": "/versions/master/api_docs/python/tf/feature_column/categorical_column_with_hash_bucket", "k": [], "r": "master", "t": "tf.feature_column.categorical_column_with_hash_bucket"}, {"p": "/versions/master/api_docs/python/tf/feature_column/categorical_column_with_identity", "k": [], "r": "master", "t": "tf.feature_column.categorical_column_with_identity"}, {"p": "/versions/master/api_docs/python/tf/feature_column/categorical_column_with_vocabulary_file", "k": [], "r": "master", "t": "tf.feature_column.categorical_column_with_vocabulary_file"}, {"p": "/versions/master/api_docs/python/tf/feature_column/categorical_column_with_vocabulary_list", "k": [], "r": "master", "t": "tf.feature_column.categorical_column_with_vocabulary_list"}, {"p": "/versions/master/api_docs/python/tf/feature_column/crossed_column", "k": [], "r": "master", "t": "tf.feature_column.crossed_column"}, {"p": "/versions/master/api_docs/python/tf/feature_column/embedding_column", "k": [], "r": "master", "t": "tf.feature_column.embedding_column"}, {"p": "/versions/master/api_docs/python/tf/feature_column/indicator_column", "k": [], "r": "master", "t": "tf.feature_column.indicator_column"}, {"p": "/versions/master/api_docs/python/tf/feature_column/input_layer", "k": [], "r": "master", "t": "tf.feature_column.input_layer"}, {"p": "/versions/master/api_docs/python/tf/feature_column/linear_model", "k": [], "r": "master", "t": "tf.feature_column.linear_model"}, {"p": "/versions/master/api_docs/python/tf/feature_column/make_parse_example_spec", "k": [], "r": "master", "t": "tf.feature_column.make_parse_example_spec"}, {"p": "/versions/master/api_docs/python/tf/feature_column/numeric_column", "k": [], "r": "master", "t": "tf.feature_column.numeric_column"}, {"p": "/versions/master/api_docs/python/tf/feature_column/shared_embedding_columns", "k": [], "r": "master", "t": "tf.feature_column.shared_embedding_columns"}, {"p": "/versions/master/api_docs/python/tf/feature_column/weighted_categorical_column", "k": [], "r": "master", "t": "tf.feature_column.weighted_categorical_column"}, {"p": "/versions/master/api_docs/python/tf/fft", "k": [], "r": "master", "t": "tf.fft"}, {"p": "/versions/master/api_docs/python/tf/fft2d", "k": [], "r": "master", "t": "tf.fft2d"}, {"p": "/versions/master/api_docs/python/tf/fft3d", "k": [], "r": "master", "t": "tf.fft3d"}, {"p": "/versions/master/api_docs/python/tf/fill", "k": [], "r": "master", "t": "tf.fill"}, {"p": "/versions/master/api_docs/python/tf/fixed_size_partitioner", "k": [], "r": "master", "t": "tf.fixed_size_partitioner"}, {"p": "/versions/master/api_docs/python/tf/flags", "k": [], "r": "master", "t": "tf.flags"}, {"p": "/versions/master/api_docs/python/tf/floor", "k": [], "r": "master", "t": "tf.floor"}, {"p": "/versions/master/api_docs/python/tf/floor_div", "k": [], "r": "master", "t": "tf.floor_div"}, {"p": "/versions/master/api_docs/python/tf/floordiv", "k": [], "r": "master", "t": "tf.floordiv"}, {"p": "/versions/master/api_docs/python/tf/floormod", "k": [], "r": "master", "t": "tf.floormod"}, {"p": "/versions/master/api_docs/python/tf/foldl", "k": [], "r": "master", "t": "tf.foldl"}, {"p": "/versions/master/api_docs/python/tf/foldr", "k": [], "r": "master", "t": "tf.foldr"}, {"p": "/versions/master/api_docs/python/tf/gather", "k": [], "r": "master", "t": "tf.gather"}, {"p": "/versions/master/api_docs/python/tf/gather_nd", "k": [], "r": "master", "t": "tf.gather_nd"}, {"p": "/versions/master/api_docs/python/tf/get_collection", "k": [], "r": "master", "t": "tf.get_collection"}, {"p": "/versions/master/api_docs/python/tf/get_collection_ref", "k": [], "r": "master", "t": "tf.get_collection_ref"}, {"p": "/versions/master/api_docs/python/tf/get_default_graph", "k": [], "r": "master", "t": "tf.get_default_graph"}, {"p": "/versions/master/api_docs/python/tf/get_default_session", "k": [], "r": "master", "t": "tf.get_default_session"}, {"p": "/versions/master/api_docs/python/tf/get_local_variable", "k": [], "r": "master", "t": "tf.get_local_variable"}, {"p": "/versions/master/api_docs/python/tf/get_seed", "k": [], "r": "master", "t": "tf.get_seed"}, {"p": "/versions/master/api_docs/python/tf/get_session_handle", "k": [], "r": "master", "t": "tf.get_session_handle"}, {"p": "/versions/master/api_docs/python/tf/get_session_tensor", "k": [], "r": "master", "t": "tf.get_session_tensor"}, {"p": "/versions/master/api_docs/python/tf/get_variable", "k": [], "r": "master", "t": "tf.get_variable"}, {"p": "/versions/master/api_docs/python/tf/get_variable_scope", "k": [], "r": "master", "t": "tf.get_variable_scope"}, {"p": "/versions/master/api_docs/python/tf/gfile", "k": [], "r": "master", "t": "tf.gfile"}, {"p": "/versions/master/api_docs/python/tf/gfile/Copy", "k": [], "r": "master", "t": "tf.gfile.Copy"}, {"p": "/versions/master/api_docs/python/tf/gfile/DeleteRecursively", "k": [], "r": "master", "t": "tf.gfile.DeleteRecursively"}, {"p": "/versions/master/api_docs/python/tf/gfile/Exists", "k": [], "r": "master", "t": "tf.gfile.Exists"}, {"p": "/versions/master/api_docs/python/tf/gfile/FastGFile", "k": ["mode", "name", "__enter__", "__exit__", "__init__", "__iter__", "__next__", "close", "flush", "next", "read", "readline", "readlines", "seek", "size", "tell", "write"], "r": "master", "t": "tf.gfile.FastGFile"}, {"p": "/versions/master/api_docs/python/tf/gfile/GFile", "k": ["mode", "name", "__enter__", "__exit__", "__init__", "__iter__", "__next__", "close", "flush", "next", "read", "readline", "readlines", "seek", "size", "tell", "write"], "r": "master", "t": "tf.gfile.GFile"}, {"p": "/versions/master/api_docs/python/tf/gfile/Glob", "k": [], "r": "master", "t": "tf.gfile.Glob"}, {"p": "/versions/master/api_docs/python/tf/gfile/IsDirectory", "k": [], "r": "master", "t": "tf.gfile.IsDirectory"}, {"p": "/versions/master/api_docs/python/tf/gfile/ListDirectory", "k": [], "r": "master", "t": "tf.gfile.ListDirectory"}, {"p": "/versions/master/api_docs/python/tf/gfile/MakeDirs", "k": [], "r": "master", "t": "tf.gfile.MakeDirs"}, {"p": "/versions/master/api_docs/python/tf/gfile/MkDir", "k": [], "r": "master", "t": "tf.gfile.MkDir"}, {"p": "/versions/master/api_docs/python/tf/gfile/Remove", "k": [], "r": "master", "t": "tf.gfile.Remove"}, {"p": "/versions/master/api_docs/python/tf/gfile/Rename", "k": [], "r": "master", "t": "tf.gfile.Rename"}, {"p": "/versions/master/api_docs/python/tf/gfile/Stat", "k": [], "r": "master", "t": "tf.gfile.Stat"}, {"p": "/versions/master/api_docs/python/tf/gfile/Walk", "k": [], "r": "master", "t": "tf.gfile.Walk"}, {"p": "/versions/master/api_docs/python/tf/global_norm", "k": [], "r": "master", "t": "tf.global_norm"}, {"p": "/versions/master/api_docs/python/tf/global_variables", "k": [], "r": "master", "t": "tf.global_variables"}, {"p": "/versions/master/api_docs/python/tf/global_variables_initializer", "k": [], "r": "master", "t": "tf.global_variables_initializer"}, {"p": "/versions/master/api_docs/python/tf/glorot_normal_initializer", "k": [], "r": "master", "t": "tf.glorot_normal_initializer"}, {"p": "/versions/master/api_docs/python/tf/glorot_uniform_initializer", "k": [], "r": "master", "t": "tf.glorot_uniform_initializer"}, {"p": "/versions/master/api_docs/python/tf/gradients", "k": [], "r": "master", "t": "tf.gradients"}, {"p": "/versions/master/api_docs/python/tf/graph_util", "k": [], "r": "master", "t": "tf.graph_util"}, {"p": "/versions/master/api_docs/python/tf/graph_util/convert_variables_to_constants", "k": [], "r": "master", "t": "tf.graph_util.convert_variables_to_constants"}, {"p": "/versions/master/api_docs/python/tf/graph_util/extract_sub_graph", "k": [], "r": "master", "t": "tf.graph_util.extract_sub_graph"}, {"p": "/versions/master/api_docs/python/tf/graph_util/must_run_on_cpu", "k": [], "r": "master", "t": "tf.graph_util.must_run_on_cpu"}, {"p": "/versions/master/api_docs/python/tf/graph_util/remove_training_nodes", "k": [], "r": "master", "t": "tf.graph_util.remove_training_nodes"}, {"p": "/versions/master/api_docs/python/tf/graph_util/tensor_shape_from_node_def_name", "k": [], "r": "master", "t": "tf.graph_util.tensor_shape_from_node_def_name"}, {"p": "/versions/master/api_docs/python/tf/greater", "k": [], "r": "master", "t": "tf.greater"}, {"p": "/versions/master/api_docs/python/tf/greater_equal", "k": [], "r": "master", "t": "tf.greater_equal"}, {"p": "/versions/master/api_docs/python/tf/group", "k": [], "r": "master", "t": "tf.group"}, {"p": "/versions/master/api_docs/python/tf/guarantee_const", "k": [], "r": "master", "t": "tf.guarantee_const"}, {"p": "/versions/master/api_docs/python/tf/hessians", "k": [], "r": "master", "t": "tf.hessians"}, {"p": "/versions/master/api_docs/python/tf/histogram_fixed_width", "k": [], "r": "master", "t": "tf.histogram_fixed_width"}, {"p": "/versions/master/api_docs/python/tf/histogram_fixed_width_bins", "k": [], "r": "master", "t": "tf.histogram_fixed_width_bins"}, {"p": "/versions/master/api_docs/python/tf/identity", "k": [], "r": "master", "t": "tf.identity"}, {"p": "/versions/master/api_docs/python/tf/identity_n", "k": [], "r": "master", "t": "tf.identity_n"}, {"p": "/versions/master/api_docs/python/tf/ifft", "k": [], "r": "master", "t": "tf.ifft"}, {"p": "/versions/master/api_docs/python/tf/ifft2d", "k": [], "r": "master", "t": "tf.ifft2d"}, {"p": "/versions/master/api_docs/python/tf/ifft3d", "k": [], "r": "master", "t": "tf.ifft3d"}, {"p": "/versions/master/api_docs/python/tf/igamma", "k": [], "r": "master", "t": "tf.igamma"}, {"p": "/versions/master/api_docs/python/tf/igammac", "k": [], "r": "master", "t": "tf.igammac"}, {"p": "/versions/master/api_docs/python/tf/imag", "k": [], "r": "master", "t": "tf.imag"}, {"p": "/versions/master/api_docs/python/tf/image", "k": [], "r": "master", "t": "tf.image"}, {"p": "/versions/master/api_docs/python/tf/image/ResizeMethod", "k": ["AREA", "BICUBIC", "BILINEAR", "NEAREST_NEIGHBOR"], "r": "master", "t": "tf.image.ResizeMethod"}, {"p": "/versions/master/api_docs/python/tf/image/adjust_brightness", "k": [], "r": "master", "t": "tf.image.adjust_brightness"}, {"p": "/versions/master/api_docs/python/tf/image/adjust_contrast", "k": [], "r": "master", "t": "tf.image.adjust_contrast"}, {"p": "/versions/master/api_docs/python/tf/image/adjust_gamma", "k": [], "r": "master", "t": "tf.image.adjust_gamma"}, {"p": "/versions/master/api_docs/python/tf/image/adjust_hue", "k": [], "r": "master", "t": "tf.image.adjust_hue"}, {"p": "/versions/master/api_docs/python/tf/image/adjust_saturation", "k": [], "r": "master", "t": "tf.image.adjust_saturation"}, {"p": "/versions/master/api_docs/python/tf/image/central_crop", "k": [], "r": "master", "t": "tf.image.central_crop"}, {"p": "/versions/master/api_docs/python/tf/image/convert_image_dtype", "k": [], "r": "master", "t": "tf.image.convert_image_dtype"}, {"p": "/versions/master/api_docs/python/tf/image/crop_and_resize", "k": [], "r": "master", "t": "tf.image.crop_and_resize"}, {"p": "/versions/master/api_docs/python/tf/image/crop_to_bounding_box", "k": [], "r": "master", "t": "tf.image.crop_to_bounding_box"}, {"p": "/versions/master/api_docs/python/tf/image/decode_and_crop_jpeg", "k": [], "r": "master", "t": "tf.image.decode_and_crop_jpeg"}, {"p": "/versions/master/api_docs/python/tf/image/decode_bmp", "k": [], "r": "master", "t": "tf.image.decode_bmp"}, {"p": "/versions/master/api_docs/python/tf/image/decode_gif", "k": [], "r": "master", "t": "tf.image.decode_gif"}, {"p": "/versions/master/api_docs/python/tf/image/decode_image", "k": [], "r": "master", "t": "tf.image.decode_image"}, {"p": "/versions/master/api_docs/python/tf/image/decode_jpeg", "k": [], "r": "master", "t": "tf.image.decode_jpeg"}, {"p": "/versions/master/api_docs/python/tf/image/decode_png", "k": [], "r": "master", "t": "tf.image.decode_png"}, {"p": "/versions/master/api_docs/python/tf/image/draw_bounding_boxes", "k": [], "r": "master", "t": "tf.image.draw_bounding_boxes"}, {"p": "/versions/master/api_docs/python/tf/image/encode_jpeg", "k": [], "r": "master", "t": "tf.image.encode_jpeg"}, {"p": "/versions/master/api_docs/python/tf/image/encode_png", "k": [], "r": "master", "t": "tf.image.encode_png"}, {"p": "/versions/master/api_docs/python/tf/image/extract_glimpse", "k": [], "r": "master", "t": "tf.image.extract_glimpse"}, {"p": "/versions/master/api_docs/python/tf/image/extract_jpeg_shape", "k": [], "r": "master", "t": "tf.image.extract_jpeg_shape"}, {"p": "/versions/master/api_docs/python/tf/image/flip_left_right", "k": [], "r": "master", "t": "tf.image.flip_left_right"}, {"p": "/versions/master/api_docs/python/tf/image/flip_up_down", "k": [], "r": "master", "t": "tf.image.flip_up_down"}, {"p": "/versions/master/api_docs/python/tf/image/grayscale_to_rgb", "k": [], "r": "master", "t": "tf.image.grayscale_to_rgb"}, {"p": "/versions/master/api_docs/python/tf/image/hsv_to_rgb", "k": [], "r": "master", "t": "tf.image.hsv_to_rgb"}, {"p": "/versions/master/api_docs/python/tf/image/image_gradients", "k": [], "r": "master", "t": "tf.image.image_gradients"}, {"p": "/versions/master/api_docs/python/tf/image/is_jpeg", "k": [], "r": "master", "t": "tf.image.is_jpeg"}, {"p": "/versions/master/api_docs/python/tf/image/non_max_suppression", "k": [], "r": "master", "t": "tf.image.non_max_suppression"}, {"p": "/versions/master/api_docs/python/tf/image/pad_to_bounding_box", "k": [], "r": "master", "t": "tf.image.pad_to_bounding_box"}, {"p": "/versions/master/api_docs/python/tf/image/per_image_standardization", "k": [], "r": "master", "t": "tf.image.per_image_standardization"}, {"p": "/versions/master/api_docs/python/tf/image/psnr", "k": [], "r": "master", "t": "tf.image.psnr"}, {"p": "/versions/master/api_docs/python/tf/image/random_brightness", "k": [], "r": "master", "t": "tf.image.random_brightness"}, {"p": "/versions/master/api_docs/python/tf/image/random_contrast", "k": [], "r": "master", "t": "tf.image.random_contrast"}, {"p": "/versions/master/api_docs/python/tf/image/random_flip_left_right", "k": [], "r": "master", "t": "tf.image.random_flip_left_right"}, {"p": "/versions/master/api_docs/python/tf/image/random_flip_up_down", "k": [], "r": "master", "t": "tf.image.random_flip_up_down"}, {"p": "/versions/master/api_docs/python/tf/image/random_hue", "k": [], "r": "master", "t": "tf.image.random_hue"}, {"p": "/versions/master/api_docs/python/tf/image/random_saturation", "k": [], "r": "master", "t": "tf.image.random_saturation"}, {"p": "/versions/master/api_docs/python/tf/image/resize_area", "k": [], "r": "master", "t": "tf.image.resize_area"}, {"p": "/versions/master/api_docs/python/tf/image/resize_bicubic", "k": [], "r": "master", "t": "tf.image.resize_bicubic"}, {"p": "/versions/master/api_docs/python/tf/image/resize_bilinear", "k": [], "r": "master", "t": "tf.image.resize_bilinear"}, {"p": "/versions/master/api_docs/python/tf/image/resize_image_with_crop_or_pad", "k": [], "r": "master", "t": "tf.image.resize_image_with_crop_or_pad"}, {"p": "/versions/master/api_docs/python/tf/image/resize_images", "k": [], "r": "master", "t": "tf.image.resize_images"}, {"p": "/versions/master/api_docs/python/tf/image/resize_nearest_neighbor", "k": [], "r": "master", "t": "tf.image.resize_nearest_neighbor"}, {"p": "/versions/master/api_docs/python/tf/image/rgb_to_grayscale", "k": [], "r": "master", "t": "tf.image.rgb_to_grayscale"}, {"p": "/versions/master/api_docs/python/tf/image/rgb_to_hsv", "k": [], "r": "master", "t": "tf.image.rgb_to_hsv"}, {"p": "/versions/master/api_docs/python/tf/image/rgb_to_yiq", "k": [], "r": "master", "t": "tf.image.rgb_to_yiq"}, {"p": "/versions/master/api_docs/python/tf/image/rgb_to_yuv", "k": [], "r": "master", "t": "tf.image.rgb_to_yuv"}, {"p": "/versions/master/api_docs/python/tf/image/rot90", "k": [], "r": "master", "t": "tf.image.rot90"}, {"p": "/versions/master/api_docs/python/tf/image/sample_distorted_bounding_box", "k": [], "r": "master", "t": "tf.image.sample_distorted_bounding_box"}, {"p": "/versions/master/api_docs/python/tf/image/sobel_edges", "k": [], "r": "master", "t": "tf.image.sobel_edges"}, {"p": "/versions/master/api_docs/python/tf/image/ssim", "k": [], "r": "master", "t": "tf.image.ssim"}, {"p": "/versions/master/api_docs/python/tf/image/ssim_multiscale", "k": [], "r": "master", "t": "tf.image.ssim_multiscale"}, {"p": "/versions/master/api_docs/python/tf/image/total_variation", "k": [], "r": "master", "t": "tf.image.total_variation"}, {"p": "/versions/master/api_docs/python/tf/image/transpose_image", "k": [], "r": "master", "t": "tf.image.transpose_image"}, {"p": "/versions/master/api_docs/python/tf/image/yiq_to_rgb", "k": [], "r": "master", "t": "tf.image.yiq_to_rgb"}, {"p": "/versions/master/api_docs/python/tf/image/yuv_to_rgb", "k": [], "r": "master", "t": "tf.image.yuv_to_rgb"}, {"p": "/versions/master/api_docs/python/tf/import_graph_def", "k": [], "r": "master", "t": "tf.import_graph_def"}, {"p": "/versions/master/api_docs/python/tf/initialize_all_tables", "k": [], "r": "master", "t": "tf.initialize_all_tables"}, {"p": "/versions/master/api_docs/python/tf/initialize_all_variables", "k": [], "r": "master", "t": "tf.initialize_all_variables"}, {"p": "/versions/master/api_docs/python/tf/initialize_local_variables", "k": [], "r": "master", "t": "tf.initialize_local_variables"}, {"p": "/versions/master/api_docs/python/tf/initialize_variables", "k": [], "r": "master", "t": "tf.initialize_variables"}, {"p": "/versions/master/api_docs/python/tf/initializers", "k": [], "r": "master", "t": "tf.initializers"}, {"p": "/versions/master/api_docs/python/tf/initializers/identity", "k": ["__call__", "__init__", "from_config", "get_config"], "r": "master", "t": "tf.initializers.identity"}, {"p": "/versions/master/api_docs/python/tf/invert_permutation", "k": [], "r": "master", "t": "tf.invert_permutation"}, {"p": "/versions/master/api_docs/python/tf/is_finite", "k": [], "r": "master", "t": "tf.is_finite"}, {"p": "/versions/master/api_docs/python/tf/is_inf", "k": [], "r": "master", "t": "tf.is_inf"}, {"p": "/versions/master/api_docs/python/tf/is_nan", "k": [], "r": "master", "t": "tf.is_nan"}, {"p": "/versions/master/api_docs/python/tf/is_non_decreasing", "k": [], "r": "master", "t": "tf.is_non_decreasing"}, {"p": "/versions/master/api_docs/python/tf/is_numeric_tensor", "k": [], "r": "master", "t": "tf.is_numeric_tensor"}, {"p": "/versions/master/api_docs/python/tf/is_strictly_increasing", "k": [], "r": "master", "t": "tf.is_strictly_increasing"}, {"p": "/versions/master/api_docs/python/tf/is_variable_initialized", "k": [], "r": "master", "t": "tf.is_variable_initialized"}, {"p": "/versions/master/api_docs/python/tf/keras", "k": ["__version__"], "r": "master", "t": "tf.keras"}, {"p": "/versions/master/api_docs/python/tf/keras/Input", "k": [], "r": "master", "t": "tf.keras.Input"}, {"p": "/versions/master/api_docs/python/tf/keras/Model", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "input_spec", "layers", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "state_updates", "stateful", "trainable_variables", "trainable_weights", "updates", "uses_learning_phase", "variables", "weights", "__call__", "__deepcopy__", "__init__", "__setattr__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compile", "compute_mask", "compute_output_shape", "count_params", "evaluate", "evaluate_generator", "fit", "fit_generator", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_layer", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "load_weights", "predict", "predict_generator", "predict_on_batch", "reset_states", "save", "save_weights", "set_weights", "summary", "test_on_batch", "to_json", "to_yaml", "train_on_batch"], "r": "master", "t": "tf.keras.Model"}, {"p": "/versions/master/api_docs/python/tf/keras/Sequential", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "input_spec", "layers", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "state_updates", "stateful", "trainable_variables", "trainable_weights", "updates", "uses_learning_phase", "variables", "weights", "__call__", "__deepcopy__", "__init__", "__setattr__", "add", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compile", "compute_mask", "compute_output_shape", "count_params", "evaluate", "evaluate_generator", "fit", "fit_generator", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_layer", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "load_weights", "pop", "predict", "predict_classes", "predict_generator", "predict_on_batch", "predict_proba", "reset_states", "save", "save_weights", "set_weights", "summary", "test_on_batch", "to_json", "to_yaml", "train_on_batch"], "r": "master", "t": "tf.keras.Sequential"}, {"p": "/versions/master/api_docs/python/tf/keras/activations", "k": [], "r": "master", "t": "tf.keras.activations"}, {"p": "/versions/master/api_docs/python/tf/keras/activations/deserialize", "k": [], "r": "master", "t": "tf.keras.activations.deserialize"}, {"p": "/versions/master/api_docs/python/tf/keras/activations/elu", "k": [], "r": "master", "t": "tf.keras.activations.elu"}, {"p": "/versions/master/api_docs/python/tf/keras/activations/get", "k": [], "r": "master", "t": "tf.keras.activations.get"}, {"p": "/versions/master/api_docs/python/tf/keras/activations/hard_sigmoid", "k": [], "r": "master", "t": "tf.keras.activations.hard_sigmoid"}, {"p": "/versions/master/api_docs/python/tf/keras/activations/linear", "k": [], "r": "master", "t": "tf.keras.activations.linear"}, {"p": "/versions/master/api_docs/python/tf/keras/activations/relu", "k": [], "r": "master", "t": "tf.keras.activations.relu"}, {"p": "/versions/master/api_docs/python/tf/keras/activations/selu", "k": [], "r": "master", "t": "tf.keras.activations.selu"}, {"p": "/versions/master/api_docs/python/tf/keras/activations/serialize", "k": [], "r": "master", "t": "tf.keras.activations.serialize"}, {"p": "/versions/master/api_docs/python/tf/keras/activations/sigmoid", "k": [], "r": "master", "t": "tf.keras.activations.sigmoid"}, {"p": "/versions/master/api_docs/python/tf/keras/activations/softmax", "k": [], "r": "master", "t": "tf.keras.activations.softmax"}, {"p": "/versions/master/api_docs/python/tf/keras/activations/softplus", "k": [], "r": "master", "t": "tf.keras.activations.softplus"}, {"p": "/versions/master/api_docs/python/tf/keras/activations/softsign", "k": [], "r": "master", "t": "tf.keras.activations.softsign"}, {"p": "/versions/master/api_docs/python/tf/keras/activations/tanh", "k": [], "r": "master", "t": "tf.keras.activations.tanh"}, {"p": "/versions/master/api_docs/python/tf/keras/applications", "k": [], "r": "master", "t": "tf.keras.applications"}, {"p": "/versions/master/api_docs/python/tf/keras/applications/DenseNet121", "k": [], "r": "master", "t": "tf.keras.applications.DenseNet121"}, {"p": "/versions/master/api_docs/python/tf/keras/applications/DenseNet169", "k": [], "r": "master", "t": "tf.keras.applications.DenseNet169"}, {"p": "/versions/master/api_docs/python/tf/keras/applications/DenseNet201", "k": [], "r": "master", "t": "tf.keras.applications.DenseNet201"}, {"p": "/versions/master/api_docs/python/tf/keras/applications/InceptionResNetV2", "k": [], "r": "master", "t": "tf.keras.applications.InceptionResNetV2"}, {"p": "/versions/master/api_docs/python/tf/keras/applications/InceptionV3", "k": [], "r": "master", "t": "tf.keras.applications.InceptionV3"}, {"p": "/versions/master/api_docs/python/tf/keras/applications/MobileNet", "k": [], "r": "master", "t": "tf.keras.applications.MobileNet"}, {"p": "/versions/master/api_docs/python/tf/keras/applications/NASNetLarge", "k": [], "r": "master", "t": "tf.keras.applications.NASNetLarge"}, {"p": "/versions/master/api_docs/python/tf/keras/applications/NASNetMobile", "k": [], "r": "master", "t": "tf.keras.applications.NASNetMobile"}, {"p": "/versions/master/api_docs/python/tf/keras/applications/ResNet50", "k": [], "r": "master", "t": "tf.keras.applications.ResNet50"}, {"p": "/versions/master/api_docs/python/tf/keras/applications/VGG16", "k": [], "r": "master", "t": "tf.keras.applications.VGG16"}, {"p": "/versions/master/api_docs/python/tf/keras/applications/VGG19", "k": [], "r": "master", "t": "tf.keras.applications.VGG19"}, {"p": "/versions/master/api_docs/python/tf/keras/applications/Xception", "k": [], "r": "master", "t": "tf.keras.applications.Xception"}, {"p": "/versions/master/api_docs/python/tf/keras/applications/densenet", "k": [], "r": "master", "t": "tf.keras.applications.densenet"}, {"p": "/versions/master/api_docs/python/tf/keras/applications/densenet/decode_predictions", "k": [], "r": "master", "t": "tf.keras.applications.densenet.decode_predictions"}, {"p": "/versions/master/api_docs/python/tf/keras/applications/densenet/preprocess_input", "k": [], "r": "master", "t": "tf.keras.applications.densenet.preprocess_input"}, {"p": "/versions/master/api_docs/python/tf/keras/applications/inception_resnet_v2", "k": [], "r": "master", "t": "tf.keras.applications.inception_resnet_v2"}, {"p": "/versions/master/api_docs/python/tf/keras/applications/inception_resnet_v2/preprocess_input", "k": [], "r": "master", "t": "tf.keras.applications.inception_resnet_v2.preprocess_input"}, {"p": "/versions/master/api_docs/python/tf/keras/applications/inception_v3", "k": [], "r": "master", "t": "tf.keras.applications.inception_v3"}, {"p": "/versions/master/api_docs/python/tf/keras/applications/inception_v3/preprocess_input", "k": [], "r": "master", "t": "tf.keras.applications.inception_v3.preprocess_input"}, {"p": "/versions/master/api_docs/python/tf/keras/applications/mobilenet", "k": [], "r": "master", "t": "tf.keras.applications.mobilenet"}, {"p": "/versions/master/api_docs/python/tf/keras/applications/mobilenet/preprocess_input", "k": [], "r": "master", "t": "tf.keras.applications.mobilenet.preprocess_input"}, {"p": "/versions/master/api_docs/python/tf/keras/applications/nasnet", "k": [], "r": "master", "t": "tf.keras.applications.nasnet"}, {"p": "/versions/master/api_docs/python/tf/keras/applications/resnet50", "k": [], "r": "master", "t": "tf.keras.applications.resnet50"}, {"p": "/versions/master/api_docs/python/tf/keras/applications/resnet50/preprocess_input", "k": [], "r": "master", "t": "tf.keras.applications.resnet50.preprocess_input"}, {"p": "/versions/master/api_docs/python/tf/keras/applications/vgg16", "k": [], "r": "master", "t": "tf.keras.applications.vgg16"}, {"p": "/versions/master/api_docs/python/tf/keras/applications/vgg19", "k": [], "r": "master", "t": "tf.keras.applications.vgg19"}, {"p": "/versions/master/api_docs/python/tf/keras/applications/xception", "k": [], "r": "master", "t": "tf.keras.applications.xception"}, {"p": "/versions/master/api_docs/python/tf/keras/applications/xception/preprocess_input", "k": [], "r": "master", "t": "tf.keras.applications.xception.preprocess_input"}, {"p": "/versions/master/api_docs/python/tf/keras/backend", "k": [], "r": "master", "t": "tf.keras.backend"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/abs", "k": [], "r": "master", "t": "tf.keras.backend.abs"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/all", "k": [], "r": "master", "t": "tf.keras.backend.all"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/any", "k": [], "r": "master", "t": "tf.keras.backend.any"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/arange", "k": [], "r": "master", "t": "tf.keras.backend.arange"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/argmax", "k": [], "r": "master", "t": "tf.keras.backend.argmax"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/argmin", "k": [], "r": "master", "t": "tf.keras.backend.argmin"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/backend", "k": [], "r": "master", "t": "tf.keras.backend.backend"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/batch_dot", "k": [], "r": "master", "t": "tf.keras.backend.batch_dot"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/batch_flatten", "k": [], "r": "master", "t": "tf.keras.backend.batch_flatten"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/batch_get_value", "k": [], "r": "master", "t": "tf.keras.backend.batch_get_value"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/batch_normalization", "k": [], "r": "master", "t": "tf.keras.backend.batch_normalization"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/batch_set_value", "k": [], "r": "master", "t": "tf.keras.backend.batch_set_value"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/bias_add", "k": [], "r": "master", "t": "tf.keras.backend.bias_add"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/binary_crossentropy", "k": [], "r": "master", "t": "tf.keras.backend.binary_crossentropy"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/cast", "k": [], "r": "master", "t": "tf.keras.backend.cast"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/cast_to_floatx", "k": [], "r": "master", "t": "tf.keras.backend.cast_to_floatx"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/categorical_crossentropy", "k": [], "r": "master", "t": "tf.keras.backend.categorical_crossentropy"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/clear_session", "k": [], "r": "master", "t": "tf.keras.backend.clear_session"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/clip", "k": [], "r": "master", "t": "tf.keras.backend.clip"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/concatenate", "k": [], "r": "master", "t": "tf.keras.backend.concatenate"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/constant", "k": [], "r": "master", "t": "tf.keras.backend.constant"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/conv1d", "k": [], "r": "master", "t": "tf.keras.backend.conv1d"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/conv2d", "k": [], "r": "master", "t": "tf.keras.backend.conv2d"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/conv2d_transpose", "k": [], "r": "master", "t": "tf.keras.backend.conv2d_transpose"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/conv3d", "k": [], "r": "master", "t": "tf.keras.backend.conv3d"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/cos", "k": [], "r": "master", "t": "tf.keras.backend.cos"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/count_params", "k": [], "r": "master", "t": "tf.keras.backend.count_params"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/ctc_batch_cost", "k": [], "r": "master", "t": "tf.keras.backend.ctc_batch_cost"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/ctc_decode", "k": [], "r": "master", "t": "tf.keras.backend.ctc_decode"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/ctc_label_dense_to_sparse", "k": [], "r": "master", "t": "tf.keras.backend.ctc_label_dense_to_sparse"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/dot", "k": [], "r": "master", "t": "tf.keras.backend.dot"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/dropout", "k": [], "r": "master", "t": "tf.keras.backend.dropout"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/dtype", "k": [], "r": "master", "t": "tf.keras.backend.dtype"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/elu", "k": [], "r": "master", "t": "tf.keras.backend.elu"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/epsilon", "k": [], "r": "master", "t": "tf.keras.backend.epsilon"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/equal", "k": [], "r": "master", "t": "tf.keras.backend.equal"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/eval", "k": [], "r": "master", "t": "tf.keras.backend.eval"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/exp", "k": [], "r": "master", "t": "tf.keras.backend.exp"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/expand_dims", "k": [], "r": "master", "t": "tf.keras.backend.expand_dims"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/eye", "k": [], "r": "master", "t": "tf.keras.backend.eye"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/flatten", "k": [], "r": "master", "t": "tf.keras.backend.flatten"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/floatx", "k": [], "r": "master", "t": "tf.keras.backend.floatx"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/foldl", "k": [], "r": "master", "t": "tf.keras.backend.foldl"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/foldr", "k": [], "r": "master", "t": "tf.keras.backend.foldr"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/function", "k": [], "r": "master", "t": "tf.keras.backend.function"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/gather", "k": [], "r": "master", "t": "tf.keras.backend.gather"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/get_session", "k": [], "r": "master", "t": "tf.keras.backend.get_session"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/get_uid", "k": [], "r": "master", "t": "tf.keras.backend.get_uid"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/get_value", "k": [], "r": "master", "t": "tf.keras.backend.get_value"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/gradients", "k": [], "r": "master", "t": "tf.keras.backend.gradients"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/greater", "k": [], "r": "master", "t": "tf.keras.backend.greater"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/greater_equal", "k": [], "r": "master", "t": "tf.keras.backend.greater_equal"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/hard_sigmoid", "k": [], "r": "master", "t": "tf.keras.backend.hard_sigmoid"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/image_data_format", "k": [], "r": "master", "t": "tf.keras.backend.image_data_format"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/in_test_phase", "k": [], "r": "master", "t": "tf.keras.backend.in_test_phase"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/in_top_k", "k": [], "r": "master", "t": "tf.keras.backend.in_top_k"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/in_train_phase", "k": [], "r": "master", "t": "tf.keras.backend.in_train_phase"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/int_shape", "k": [], "r": "master", "t": "tf.keras.backend.int_shape"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/is_sparse", "k": [], "r": "master", "t": "tf.keras.backend.is_sparse"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/l2_normalize", "k": [], "r": "master", "t": "tf.keras.backend.l2_normalize"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/learning_phase", "k": [], "r": "master", "t": "tf.keras.backend.learning_phase"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/less", "k": [], "r": "master", "t": "tf.keras.backend.less"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/less_equal", "k": [], "r": "master", "t": "tf.keras.backend.less_equal"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/log", "k": [], "r": "master", "t": "tf.keras.backend.log"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/manual_variable_initialization", "k": [], "r": "master", "t": "tf.keras.backend.manual_variable_initialization"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/map_fn", "k": [], "r": "master", "t": "tf.keras.backend.map_fn"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/max", "k": [], "r": "master", "t": "tf.keras.backend.max"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/maximum", "k": [], "r": "master", "t": "tf.keras.backend.maximum"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/mean", "k": [], "r": "master", "t": "tf.keras.backend.mean"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/min", "k": [], "r": "master", "t": "tf.keras.backend.min"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/minimum", "k": [], "r": "master", "t": "tf.keras.backend.minimum"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/moving_average_update", "k": [], "r": "master", "t": "tf.keras.backend.moving_average_update"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/ndim", "k": [], "r": "master", "t": "tf.keras.backend.ndim"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/normalize_batch_in_training", "k": [], "r": "master", "t": "tf.keras.backend.normalize_batch_in_training"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/not_equal", "k": [], "r": "master", "t": "tf.keras.backend.not_equal"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/one_hot", "k": [], "r": "master", "t": "tf.keras.backend.one_hot"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/ones", "k": [], "r": "master", "t": "tf.keras.backend.ones"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/ones_like", "k": [], "r": "master", "t": "tf.keras.backend.ones_like"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/permute_dimensions", "k": [], "r": "master", "t": "tf.keras.backend.permute_dimensions"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/placeholder", "k": [], "r": "master", "t": "tf.keras.backend.placeholder"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/pool2d", "k": [], "r": "master", "t": "tf.keras.backend.pool2d"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/pool3d", "k": [], "r": "master", "t": "tf.keras.backend.pool3d"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/pow", "k": [], "r": "master", "t": "tf.keras.backend.pow"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/print_tensor", "k": [], "r": "master", "t": "tf.keras.backend.print_tensor"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/prod", "k": [], "r": "master", "t": "tf.keras.backend.prod"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/random_binomial", "k": [], "r": "master", "t": "tf.keras.backend.random_binomial"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/random_normal", "k": [], "r": "master", "t": "tf.keras.backend.random_normal"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/random_normal_variable", "k": [], "r": "master", "t": "tf.keras.backend.random_normal_variable"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/random_uniform", "k": [], "r": "master", "t": "tf.keras.backend.random_uniform"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/random_uniform_variable", "k": [], "r": "master", "t": "tf.keras.backend.random_uniform_variable"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/relu", "k": [], "r": "master", "t": "tf.keras.backend.relu"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/repeat", "k": [], "r": "master", "t": "tf.keras.backend.repeat"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/repeat_elements", "k": [], "r": "master", "t": "tf.keras.backend.repeat_elements"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/reset_uids", "k": [], "r": "master", "t": "tf.keras.backend.reset_uids"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/reshape", "k": [], "r": "master", "t": "tf.keras.backend.reshape"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/resize_images", "k": [], "r": "master", "t": "tf.keras.backend.resize_images"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/resize_volumes", "k": [], "r": "master", "t": "tf.keras.backend.resize_volumes"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/reverse", "k": [], "r": "master", "t": "tf.keras.backend.reverse"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/rnn", "k": [], "r": "master", "t": "tf.keras.backend.rnn"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/round", "k": [], "r": "master", "t": "tf.keras.backend.round"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/separable_conv2d", "k": [], "r": "master", "t": "tf.keras.backend.separable_conv2d"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/set_epsilon", "k": [], "r": "master", "t": "tf.keras.backend.set_epsilon"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/set_floatx", "k": [], "r": "master", "t": "tf.keras.backend.set_floatx"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/set_image_data_format", "k": [], "r": "master", "t": "tf.keras.backend.set_image_data_format"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/set_learning_phase", "k": [], "r": "master", "t": "tf.keras.backend.set_learning_phase"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/set_session", "k": [], "r": "master", "t": "tf.keras.backend.set_session"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/set_value", "k": [], "r": "master", "t": "tf.keras.backend.set_value"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/shape", "k": [], "r": "master", "t": "tf.keras.backend.shape"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/sigmoid", "k": [], "r": "master", "t": "tf.keras.backend.sigmoid"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/sign", "k": [], "r": "master", "t": "tf.keras.backend.sign"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/sin", "k": [], "r": "master", "t": "tf.keras.backend.sin"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/softmax", "k": [], "r": "master", "t": "tf.keras.backend.softmax"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/softplus", "k": [], "r": "master", "t": "tf.keras.backend.softplus"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/softsign", "k": [], "r": "master", "t": "tf.keras.backend.softsign"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/sparse_categorical_crossentropy", "k": [], "r": "master", "t": "tf.keras.backend.sparse_categorical_crossentropy"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/spatial_2d_padding", "k": [], "r": "master", "t": "tf.keras.backend.spatial_2d_padding"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/spatial_3d_padding", "k": [], "r": "master", "t": "tf.keras.backend.spatial_3d_padding"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/sqrt", "k": [], "r": "master", "t": "tf.keras.backend.sqrt"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/square", "k": [], "r": "master", "t": "tf.keras.backend.square"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/squeeze", "k": [], "r": "master", "t": "tf.keras.backend.squeeze"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/stack", "k": [], "r": "master", "t": "tf.keras.backend.stack"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/std", "k": [], "r": "master", "t": "tf.keras.backend.std"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/stop_gradient", "k": [], "r": "master", "t": "tf.keras.backend.stop_gradient"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/sum", "k": [], "r": "master", "t": "tf.keras.backend.sum"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/switch", "k": [], "r": "master", "t": "tf.keras.backend.switch"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/tanh", "k": [], "r": "master", "t": "tf.keras.backend.tanh"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/temporal_padding", "k": [], "r": "master", "t": "tf.keras.backend.temporal_padding"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/to_dense", "k": [], "r": "master", "t": "tf.keras.backend.to_dense"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/transpose", "k": [], "r": "master", "t": "tf.keras.backend.transpose"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/truncated_normal", "k": [], "r": "master", "t": "tf.keras.backend.truncated_normal"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/update", "k": [], "r": "master", "t": "tf.keras.backend.update"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/update_add", "k": [], "r": "master", "t": "tf.keras.backend.update_add"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/update_sub", "k": [], "r": "master", "t": "tf.keras.backend.update_sub"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/var", "k": [], "r": "master", "t": "tf.keras.backend.var"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/variable", "k": [], "r": "master", "t": "tf.keras.backend.variable"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/zeros", "k": [], "r": "master", "t": "tf.keras.backend.zeros"}, {"p": "/versions/master/api_docs/python/tf/keras/backend/zeros_like", "k": [], "r": "master", "t": "tf.keras.backend.zeros_like"}, {"p": "/versions/master/api_docs/python/tf/keras/callbacks", "k": [], "r": "master", "t": "tf.keras.callbacks"}, {"p": "/versions/master/api_docs/python/tf/keras/callbacks/BaseLogger", "k": ["__init__", "on_batch_begin", "on_batch_end", "on_epoch_begin", "on_epoch_end", "on_train_begin", "on_train_end", "set_model", "set_params"], "r": "master", "t": "tf.keras.callbacks.BaseLogger"}, {"p": "/versions/master/api_docs/python/tf/keras/callbacks/CSVLogger", "k": ["__init__", "on_batch_begin", "on_batch_end", "on_epoch_begin", "on_epoch_end", "on_train_begin", "on_train_end", "set_model", "set_params"], "r": "master", "t": "tf.keras.callbacks.CSVLogger"}, {"p": "/versions/master/api_docs/python/tf/keras/callbacks/Callback", "k": ["__init__", "on_batch_begin", "on_batch_end", "on_epoch_begin", "on_epoch_end", "on_train_begin", "on_train_end", "set_model", "set_params"], "r": "master", "t": "tf.keras.callbacks.Callback"}, {"p": "/versions/master/api_docs/python/tf/keras/callbacks/EarlyStopping", "k": ["__init__", "on_batch_begin", "on_batch_end", "on_epoch_begin", "on_epoch_end", "on_train_begin", "on_train_end", "set_model", "set_params"], "r": "master", "t": "tf.keras.callbacks.EarlyStopping"}, {"p": "/versions/master/api_docs/python/tf/keras/callbacks/History", "k": ["__init__", "on_batch_begin", "on_batch_end", "on_epoch_begin", "on_epoch_end", "on_train_begin", "on_train_end", "set_model", "set_params"], "r": "master", "t": "tf.keras.callbacks.History"}, {"p": "/versions/master/api_docs/python/tf/keras/callbacks/LambdaCallback", "k": ["__init__", "on_batch_begin", "on_batch_end", "on_epoch_begin", "on_epoch_end", "on_train_begin", "on_train_end", "set_model", "set_params"], "r": "master", "t": "tf.keras.callbacks.LambdaCallback"}, {"p": "/versions/master/api_docs/python/tf/keras/callbacks/LearningRateScheduler", "k": ["__init__", "on_batch_begin", "on_batch_end", "on_epoch_begin", "on_epoch_end", "on_train_begin", "on_train_end", "set_model", "set_params"], "r": "master", "t": "tf.keras.callbacks.LearningRateScheduler"}, {"p": "/versions/master/api_docs/python/tf/keras/callbacks/ModelCheckpoint", "k": ["__init__", "on_batch_begin", "on_batch_end", "on_epoch_begin", "on_epoch_end", "on_train_begin", "on_train_end", "set_model", "set_params"], "r": "master", "t": "tf.keras.callbacks.ModelCheckpoint"}, {"p": "/versions/master/api_docs/python/tf/keras/callbacks/ProgbarLogger", "k": ["__init__", "on_batch_begin", "on_batch_end", "on_epoch_begin", "on_epoch_end", "on_train_begin", "on_train_end", "set_model", "set_params"], "r": "master", "t": "tf.keras.callbacks.ProgbarLogger"}, {"p": "/versions/master/api_docs/python/tf/keras/callbacks/ReduceLROnPlateau", "k": ["__init__", "in_cooldown", "on_batch_begin", "on_batch_end", "on_epoch_begin", "on_epoch_end", "on_train_begin", "on_train_end", "set_model", "set_params"], "r": "master", "t": "tf.keras.callbacks.ReduceLROnPlateau"}, {"p": "/versions/master/api_docs/python/tf/keras/callbacks/RemoteMonitor", "k": ["__init__", "on_batch_begin", "on_batch_end", "on_epoch_begin", "on_epoch_end", "on_train_begin", "on_train_end", "set_model", "set_params"], "r": "master", "t": "tf.keras.callbacks.RemoteMonitor"}, {"p": "/versions/master/api_docs/python/tf/keras/callbacks/TensorBoard", "k": ["__init__", "on_batch_begin", "on_batch_end", "on_epoch_begin", "on_epoch_end", "on_train_begin", "on_train_end", "set_model", "set_params"], "r": "master", "t": "tf.keras.callbacks.TensorBoard"}, {"p": "/versions/master/api_docs/python/tf/keras/callbacks/TerminateOnNaN", "k": ["__init__", "on_batch_begin", "on_batch_end", "on_epoch_begin", "on_epoch_end", "on_train_begin", "on_train_end", "set_model", "set_params"], "r": "master", "t": "tf.keras.callbacks.TerminateOnNaN"}, {"p": "/versions/master/api_docs/python/tf/keras/constraints", "k": [], "r": "master", "t": "tf.keras.constraints"}, {"p": "/versions/master/api_docs/python/tf/keras/constraints/Constraint", "k": ["__call__", "get_config"], "r": "master", "t": "tf.keras.constraints.Constraint"}, {"p": "/versions/master/api_docs/python/tf/keras/constraints/MaxNorm", "k": ["__call__", "__init__", "get_config"], "r": "master", "t": "tf.keras.constraints.MaxNorm"}, {"p": "/versions/master/api_docs/python/tf/keras/constraints/MinMaxNorm", "k": ["__call__", "__init__", "get_config"], "r": "master", "t": "tf.keras.constraints.MinMaxNorm"}, {"p": "/versions/master/api_docs/python/tf/keras/constraints/NonNeg", "k": ["__call__", "get_config"], "r": "master", "t": "tf.keras.constraints.NonNeg"}, {"p": "/versions/master/api_docs/python/tf/keras/constraints/UnitNorm", "k": ["__call__", "__init__", "get_config"], "r": "master", "t": "tf.keras.constraints.UnitNorm"}, {"p": "/versions/master/api_docs/python/tf/keras/constraints/deserialize", "k": [], "r": "master", "t": "tf.keras.constraints.deserialize"}, {"p": "/versions/master/api_docs/python/tf/keras/constraints/get", "k": [], "r": "master", "t": "tf.keras.constraints.get"}, {"p": "/versions/master/api_docs/python/tf/keras/constraints/serialize", "k": [], "r": "master", "t": "tf.keras.constraints.serialize"}, {"p": "/versions/master/api_docs/python/tf/keras/datasets", "k": [], "r": "master", "t": "tf.keras.datasets"}, {"p": "/versions/master/api_docs/python/tf/keras/datasets/boston_housing", "k": [], "r": "master", "t": "tf.keras.datasets.boston_housing"}, {"p": "/versions/master/api_docs/python/tf/keras/datasets/boston_housing/load_data", "k": [], "r": "master", "t": "tf.keras.datasets.boston_housing.load_data"}, {"p": "/versions/master/api_docs/python/tf/keras/datasets/cifar10", "k": [], "r": "master", "t": "tf.keras.datasets.cifar10"}, {"p": "/versions/master/api_docs/python/tf/keras/datasets/cifar10/load_data", "k": [], "r": "master", "t": "tf.keras.datasets.cifar10.load_data"}, {"p": "/versions/master/api_docs/python/tf/keras/datasets/cifar100", "k": [], "r": "master", "t": "tf.keras.datasets.cifar100"}, {"p": "/versions/master/api_docs/python/tf/keras/datasets/cifar100/load_data", "k": [], "r": "master", "t": "tf.keras.datasets.cifar100.load_data"}, {"p": "/versions/master/api_docs/python/tf/keras/datasets/fashion_mnist", "k": [], "r": "master", "t": "tf.keras.datasets.fashion_mnist"}, {"p": "/versions/master/api_docs/python/tf/keras/datasets/fashion_mnist/load_data", "k": [], "r": "master", "t": "tf.keras.datasets.fashion_mnist.load_data"}, {"p": "/versions/master/api_docs/python/tf/keras/datasets/imdb", "k": [], "r": "master", "t": "tf.keras.datasets.imdb"}, {"p": "/versions/master/api_docs/python/tf/keras/datasets/imdb/get_word_index", "k": [], "r": "master", "t": "tf.keras.datasets.imdb.get_word_index"}, {"p": "/versions/master/api_docs/python/tf/keras/datasets/imdb/load_data", "k": [], "r": "master", "t": "tf.keras.datasets.imdb.load_data"}, {"p": "/versions/master/api_docs/python/tf/keras/datasets/mnist", "k": [], "r": "master", "t": "tf.keras.datasets.mnist"}, {"p": "/versions/master/api_docs/python/tf/keras/datasets/mnist/load_data", "k": [], "r": "master", "t": "tf.keras.datasets.mnist.load_data"}, {"p": "/versions/master/api_docs/python/tf/keras/datasets/reuters", "k": [], "r": "master", "t": "tf.keras.datasets.reuters"}, {"p": "/versions/master/api_docs/python/tf/keras/datasets/reuters/get_word_index", "k": [], "r": "master", "t": "tf.keras.datasets.reuters.get_word_index"}, {"p": "/versions/master/api_docs/python/tf/keras/datasets/reuters/load_data", "k": [], "r": "master", "t": "tf.keras.datasets.reuters.load_data"}, {"p": "/versions/master/api_docs/python/tf/keras/estimator", "k": [], "r": "master", "t": "tf.keras.estimator"}, {"p": "/versions/master/api_docs/python/tf/keras/estimator/model_to_estimator", "k": [], "r": "master", "t": "tf.keras.estimator.model_to_estimator"}, {"p": "/versions/master/api_docs/python/tf/keras/initializers", "k": [], "r": "master", "t": "tf.keras.initializers"}, {"p": "/versions/master/api_docs/python/tf/keras/initializers/Initializer", "k": ["__call__", "from_config", "get_config"], "r": "master", "t": "tf.keras.initializers.Initializer"}, {"p": "/versions/master/api_docs/python/tf/keras/initializers/deserialize", "k": [], "r": "master", "t": "tf.keras.initializers.deserialize"}, {"p": "/versions/master/api_docs/python/tf/keras/initializers/get", "k": [], "r": "master", "t": "tf.keras.initializers.get"}, {"p": "/versions/master/api_docs/python/tf/keras/initializers/glorot_normal", "k": [], "r": "master", "t": "tf.keras.initializers.glorot_normal"}, {"p": "/versions/master/api_docs/python/tf/keras/initializers/glorot_uniform", "k": [], "r": "master", "t": "tf.keras.initializers.glorot_uniform"}, {"p": "/versions/master/api_docs/python/tf/keras/initializers/he_normal", "k": [], "r": "master", "t": "tf.keras.initializers.he_normal"}, {"p": "/versions/master/api_docs/python/tf/keras/initializers/he_uniform", "k": [], "r": "master", "t": "tf.keras.initializers.he_uniform"}, {"p": "/versions/master/api_docs/python/tf/keras/initializers/lecun_normal", "k": [], "r": "master", "t": "tf.keras.initializers.lecun_normal"}, {"p": "/versions/master/api_docs/python/tf/keras/initializers/lecun_uniform", "k": [], "r": "master", "t": "tf.keras.initializers.lecun_uniform"}, {"p": "/versions/master/api_docs/python/tf/keras/initializers/serialize", "k": [], "r": "master", "t": "tf.keras.initializers.serialize"}, {"p": "/versions/master/api_docs/python/tf/keras/layers", "k": [], "r": "master", "t": "tf.keras.layers"}, {"p": "/versions/master/api_docs/python/tf/keras/layers/Activation", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "master", "t": "tf.keras.layers.Activation"}, {"p": "/versions/master/api_docs/python/tf/keras/layers/ActivityRegularization", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "master", "t": "tf.keras.layers.ActivityRegularization"}, {"p": "/versions/master/api_docs/python/tf/keras/layers/Add", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "master", "t": "tf.keras.layers.Add"}, {"p": "/versions/master/api_docs/python/tf/keras/layers/AlphaDropout", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "master", "t": "tf.keras.layers.AlphaDropout"}, {"p": "/versions/master/api_docs/python/tf/keras/layers/Average", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "master", "t": "tf.keras.layers.Average"}, {"p": "/versions/master/api_docs/python/tf/keras/layers/AveragePooling1D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "master", "t": "tf.keras.layers.AveragePooling1D"}, {"p": "/versions/master/api_docs/python/tf/keras/layers/AveragePooling2D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "master", "t": "tf.keras.layers.AveragePooling2D"}, {"p": "/versions/master/api_docs/python/tf/keras/layers/AveragePooling3D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "master", "t": "tf.keras.layers.AveragePooling3D"}, {"p": "/versions/master/api_docs/python/tf/keras/layers/BatchNormalization", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "master", "t": "tf.keras.layers.BatchNormalization"}, {"p": "/versions/master/api_docs/python/tf/keras/layers/Bidirectional", "k": ["activity_regularizer", "constraints", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "reset_states", "set_weights"], "r": "master", "t": "tf.keras.layers.Bidirectional"}, {"p": "/versions/master/api_docs/python/tf/keras/layers/Concatenate", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "master", "t": "tf.keras.layers.Concatenate"}, {"p": "/versions/master/api_docs/python/tf/keras/layers/Conv1D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "master", "t": "tf.keras.layers.Conv1D"}, {"p": "/versions/master/api_docs/python/tf/keras/layers/Conv2D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "master", "t": "tf.keras.layers.Conv2D"}, {"p": "/versions/master/api_docs/python/tf/keras/layers/Conv2DTranspose", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "master", "t": "tf.keras.layers.Conv2DTranspose"}, {"p": "/versions/master/api_docs/python/tf/keras/layers/Conv3D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "master", "t": "tf.keras.layers.Conv3D"}, {"p": "/versions/master/api_docs/python/tf/keras/layers/Conv3DTranspose", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "master", "t": "tf.keras.layers.Conv3DTranspose"}, {"p": "/versions/master/api_docs/python/tf/keras/layers/ConvLSTM2D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_constants", "get_initial_state", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "input_conv", "preprocess_input", "recurrent_conv", "reset_states", "set_weights", "step"], "r": "master", "t": "tf.keras.layers.ConvLSTM2D"}, {"p": "/versions/master/api_docs/python/tf/keras/layers/Cropping1D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "master", "t": "tf.keras.layers.Cropping1D"}, {"p": "/versions/master/api_docs/python/tf/keras/layers/Cropping2D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "master", "t": "tf.keras.layers.Cropping2D"}, {"p": "/versions/master/api_docs/python/tf/keras/layers/Cropping3D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "master", "t": "tf.keras.layers.Cropping3D"}, {"p": "/versions/master/api_docs/python/tf/keras/layers/Dense", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "master", "t": "tf.keras.layers.Dense"}, {"p": "/versions/master/api_docs/python/tf/keras/layers/Dot", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "master", "t": "tf.keras.layers.Dot"}, {"p": "/versions/master/api_docs/python/tf/keras/layers/Dropout", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "master", "t": "tf.keras.layers.Dropout"}, {"p": "/versions/master/api_docs/python/tf/keras/layers/ELU", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "master", "t": "tf.keras.layers.ELU"}, {"p": "/versions/master/api_docs/python/tf/keras/layers/Embedding", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "master", "t": "tf.keras.layers.Embedding"}, {"p": "/versions/master/api_docs/python/tf/keras/layers/Flatten", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "master", "t": "tf.keras.layers.Flatten"}, {"p": "/versions/master/api_docs/python/tf/keras/layers/GRU", "k": ["activation", "activity_regularizer", "bias_constraint", "bias_initializer", "bias_regularizer", "dropout", "dtype", "graph", "implementation", "input", "input_mask", "input_shape", "kernel_constraint", "kernel_initializer", "kernel_regularizer", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "recurrent_activation", "recurrent_constraint", "recurrent_dropout", "recurrent_initializer", "recurrent_regularizer", "scope_name", "states", "trainable_variables", "trainable_weights", "units", "updates", "use_bias", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_initial_state", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "reset_states", "set_weights"], "r": "master", "t": "tf.keras.layers.GRU"}, {"p": "/versions/master/api_docs/python/tf/keras/layers/GRUCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "master", "t": "tf.keras.layers.GRUCell"}, {"p": "/versions/master/api_docs/python/tf/keras/layers/GaussianDropout", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "master", "t": "tf.keras.layers.GaussianDropout"}, {"p": "/versions/master/api_docs/python/tf/keras/layers/GaussianNoise", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "master", "t": "tf.keras.layers.GaussianNoise"}, {"p": "/versions/master/api_docs/python/tf/keras/layers/GlobalAveragePooling1D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "master", "t": "tf.keras.layers.GlobalAveragePooling1D"}, {"p": "/versions/master/api_docs/python/tf/keras/layers/GlobalAveragePooling2D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "master", "t": "tf.keras.layers.GlobalAveragePooling2D"}, {"p": "/versions/master/api_docs/python/tf/keras/layers/GlobalAveragePooling3D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "master", "t": "tf.keras.layers.GlobalAveragePooling3D"}, {"p": "/versions/master/api_docs/python/tf/keras/layers/GlobalMaxPool1D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "master", "t": "tf.keras.layers.GlobalMaxPool1D"}, {"p": "/versions/master/api_docs/python/tf/keras/layers/GlobalMaxPool2D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "master", "t": "tf.keras.layers.GlobalMaxPool2D"}, {"p": "/versions/master/api_docs/python/tf/keras/layers/GlobalMaxPool3D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "master", "t": "tf.keras.layers.GlobalMaxPool3D"}, {"p": "/versions/master/api_docs/python/tf/keras/layers/InputLayer", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "master", "t": "tf.keras.layers.InputLayer"}, {"p": "/versions/master/api_docs/python/tf/keras/layers/LSTM", "k": ["activation", "activity_regularizer", "bias_constraint", "bias_initializer", "bias_regularizer", "dropout", "dtype", "graph", "implementation", "input", "input_mask", "input_shape", "kernel_constraint", "kernel_initializer", "kernel_regularizer", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "recurrent_activation", "recurrent_constraint", "recurrent_dropout", "recurrent_initializer", "recurrent_regularizer", "scope_name", "states", "trainable_variables", "trainable_weights", "unit_forget_bias", "units", "updates", "use_bias", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_initial_state", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "reset_states", "set_weights"], "r": "master", "t": "tf.keras.layers.LSTM"}, {"p": "/versions/master/api_docs/python/tf/keras/layers/LSTMCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "master", "t": "tf.keras.layers.LSTMCell"}, {"p": "/versions/master/api_docs/python/tf/keras/layers/Lambda", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "master", "t": "tf.keras.layers.Lambda"}, {"p": "/versions/master/api_docs/python/tf/keras/layers/Layer", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "master", "t": "tf.keras.layers.Layer"}, {"p": "/versions/master/api_docs/python/tf/keras/layers/LeakyReLU", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "master", "t": "tf.keras.layers.LeakyReLU"}, {"p": "/versions/master/api_docs/python/tf/keras/layers/LocallyConnected1D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "master", "t": "tf.keras.layers.LocallyConnected1D"}, {"p": "/versions/master/api_docs/python/tf/keras/layers/LocallyConnected2D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "master", "t": "tf.keras.layers.LocallyConnected2D"}, {"p": "/versions/master/api_docs/python/tf/keras/layers/Masking", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "master", "t": "tf.keras.layers.Masking"}, {"p": "/versions/master/api_docs/python/tf/keras/layers/MaxPool1D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "master", "t": "tf.keras.layers.MaxPool1D"}, {"p": "/versions/master/api_docs/python/tf/keras/layers/MaxPool2D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "master", "t": "tf.keras.layers.MaxPool2D"}, {"p": "/versions/master/api_docs/python/tf/keras/layers/MaxPool3D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "master", "t": "tf.keras.layers.MaxPool3D"}, {"p": "/versions/master/api_docs/python/tf/keras/layers/Maximum", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "master", "t": "tf.keras.layers.Maximum"}, {"p": "/versions/master/api_docs/python/tf/keras/layers/Multiply", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "master", "t": "tf.keras.layers.Multiply"}, {"p": "/versions/master/api_docs/python/tf/keras/layers/PReLU", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "master", "t": "tf.keras.layers.PReLU"}, {"p": "/versions/master/api_docs/python/tf/keras/layers/Permute", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "master", "t": "tf.keras.layers.Permute"}, {"p": "/versions/master/api_docs/python/tf/keras/layers/RNN", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "states", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_initial_state", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "reset_states", "set_weights"], "r": "master", "t": "tf.keras.layers.RNN"}, {"p": "/versions/master/api_docs/python/tf/keras/layers/RepeatVector", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "master", "t": "tf.keras.layers.RepeatVector"}, {"p": "/versions/master/api_docs/python/tf/keras/layers/Reshape", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "master", "t": "tf.keras.layers.Reshape"}, {"p": "/versions/master/api_docs/python/tf/keras/layers/SeparableConv1D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "master", "t": "tf.keras.layers.SeparableConv1D"}, {"p": "/versions/master/api_docs/python/tf/keras/layers/SeparableConv2D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "master", "t": "tf.keras.layers.SeparableConv2D"}, {"p": "/versions/master/api_docs/python/tf/keras/layers/SimpleRNN", "k": ["activation", "activity_regularizer", "bias_constraint", "bias_initializer", "bias_regularizer", "dropout", "dtype", "graph", "input", "input_mask", "input_shape", "kernel_constraint", "kernel_initializer", "kernel_regularizer", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "recurrent_constraint", "recurrent_dropout", "recurrent_initializer", "recurrent_regularizer", "scope_name", "states", "trainable_variables", "trainable_weights", "units", "updates", "use_bias", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_initial_state", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "reset_states", "set_weights"], "r": "master", "t": "tf.keras.layers.SimpleRNN"}, {"p": "/versions/master/api_docs/python/tf/keras/layers/SimpleRNNCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "master", "t": "tf.keras.layers.SimpleRNNCell"}, {"p": "/versions/master/api_docs/python/tf/keras/layers/Softmax", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "master", "t": "tf.keras.layers.Softmax"}, {"p": "/versions/master/api_docs/python/tf/keras/layers/SpatialDropout1D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "master", "t": "tf.keras.layers.SpatialDropout1D"}, {"p": "/versions/master/api_docs/python/tf/keras/layers/SpatialDropout2D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "master", "t": "tf.keras.layers.SpatialDropout2D"}, {"p": "/versions/master/api_docs/python/tf/keras/layers/SpatialDropout3D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "master", "t": "tf.keras.layers.SpatialDropout3D"}, {"p": "/versions/master/api_docs/python/tf/keras/layers/StackedRNNCells", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "master", "t": "tf.keras.layers.StackedRNNCells"}, {"p": "/versions/master/api_docs/python/tf/keras/layers/ThresholdedReLU", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "master", "t": "tf.keras.layers.ThresholdedReLU"}, {"p": "/versions/master/api_docs/python/tf/keras/layers/TimeDistributed", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "master", "t": "tf.keras.layers.TimeDistributed"}, {"p": "/versions/master/api_docs/python/tf/keras/layers/UpSampling1D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "master", "t": "tf.keras.layers.UpSampling1D"}, {"p": "/versions/master/api_docs/python/tf/keras/layers/UpSampling2D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "master", "t": "tf.keras.layers.UpSampling2D"}, {"p": "/versions/master/api_docs/python/tf/keras/layers/UpSampling3D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "master", "t": "tf.keras.layers.UpSampling3D"}, {"p": "/versions/master/api_docs/python/tf/keras/layers/Wrapper", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "master", "t": "tf.keras.layers.Wrapper"}, {"p": "/versions/master/api_docs/python/tf/keras/layers/ZeroPadding1D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "master", "t": "tf.keras.layers.ZeroPadding1D"}, {"p": "/versions/master/api_docs/python/tf/keras/layers/ZeroPadding2D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "master", "t": "tf.keras.layers.ZeroPadding2D"}, {"p": "/versions/master/api_docs/python/tf/keras/layers/ZeroPadding3D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "master", "t": "tf.keras.layers.ZeroPadding3D"}, {"p": "/versions/master/api_docs/python/tf/keras/layers/add", "k": [], "r": "master", "t": "tf.keras.layers.add"}, {"p": "/versions/master/api_docs/python/tf/keras/layers/average", "k": [], "r": "master", "t": "tf.keras.layers.average"}, {"p": "/versions/master/api_docs/python/tf/keras/layers/concatenate", "k": [], "r": "master", "t": "tf.keras.layers.concatenate"}, {"p": "/versions/master/api_docs/python/tf/keras/layers/dot", "k": [], "r": "master", "t": "tf.keras.layers.dot"}, {"p": "/versions/master/api_docs/python/tf/keras/layers/maximum", "k": [], "r": "master", "t": "tf.keras.layers.maximum"}, {"p": "/versions/master/api_docs/python/tf/keras/layers/multiply", "k": [], "r": "master", "t": "tf.keras.layers.multiply"}, {"p": "/versions/master/api_docs/python/tf/keras/losses", "k": [], "r": "master", "t": "tf.keras.losses"}, {"p": "/versions/master/api_docs/python/tf/keras/losses/binary_crossentropy", "k": [], "r": "master", "t": "tf.keras.losses.binary_crossentropy"}, {"p": "/versions/master/api_docs/python/tf/keras/losses/categorical_crossentropy", "k": [], "r": "master", "t": "tf.keras.losses.categorical_crossentropy"}, {"p": "/versions/master/api_docs/python/tf/keras/losses/categorical_hinge", "k": [], "r": "master", "t": "tf.keras.losses.categorical_hinge"}, {"p": "/versions/master/api_docs/python/tf/keras/losses/cosine_proximity", "k": [], "r": "master", "t": "tf.keras.losses.cosine_proximity"}, {"p": "/versions/master/api_docs/python/tf/keras/losses/deserialize", "k": [], "r": "master", "t": "tf.keras.losses.deserialize"}, {"p": "/versions/master/api_docs/python/tf/keras/losses/get", "k": [], "r": "master", "t": "tf.keras.losses.get"}, {"p": "/versions/master/api_docs/python/tf/keras/losses/hinge", "k": [], "r": "master", "t": "tf.keras.losses.hinge"}, {"p": "/versions/master/api_docs/python/tf/keras/losses/kullback_leibler_divergence", "k": [], "r": "master", "t": "tf.keras.losses.kullback_leibler_divergence"}, {"p": "/versions/master/api_docs/python/tf/keras/losses/logcosh", "k": [], "r": "master", "t": "tf.keras.losses.logcosh"}, {"p": "/versions/master/api_docs/python/tf/keras/losses/mean_absolute_error", "k": [], "r": "master", "t": "tf.keras.losses.mean_absolute_error"}, {"p": "/versions/master/api_docs/python/tf/keras/losses/mean_absolute_percentage_error", "k": [], "r": "master", "t": "tf.keras.losses.mean_absolute_percentage_error"}, {"p": "/versions/master/api_docs/python/tf/keras/losses/mean_squared_error", "k": [], "r": "master", "t": "tf.keras.losses.mean_squared_error"}, {"p": "/versions/master/api_docs/python/tf/keras/losses/mean_squared_logarithmic_error", "k": [], "r": "master", "t": "tf.keras.losses.mean_squared_logarithmic_error"}, {"p": "/versions/master/api_docs/python/tf/keras/losses/poisson", "k": [], "r": "master", "t": "tf.keras.losses.poisson"}, {"p": "/versions/master/api_docs/python/tf/keras/losses/serialize", "k": [], "r": "master", "t": "tf.keras.losses.serialize"}, {"p": "/versions/master/api_docs/python/tf/keras/losses/sparse_categorical_crossentropy", "k": [], "r": "master", "t": "tf.keras.losses.sparse_categorical_crossentropy"}, {"p": "/versions/master/api_docs/python/tf/keras/losses/squared_hinge", "k": [], "r": "master", "t": "tf.keras.losses.squared_hinge"}, {"p": "/versions/master/api_docs/python/tf/keras/metrics", "k": [], "r": "master", "t": "tf.keras.metrics"}, {"p": "/versions/master/api_docs/python/tf/keras/metrics/binary_accuracy", "k": [], "r": "master", "t": "tf.keras.metrics.binary_accuracy"}, {"p": "/versions/master/api_docs/python/tf/keras/metrics/categorical_accuracy", "k": [], "r": "master", "t": "tf.keras.metrics.categorical_accuracy"}, {"p": "/versions/master/api_docs/python/tf/keras/metrics/deserialize", "k": [], "r": "master", "t": "tf.keras.metrics.deserialize"}, {"p": "/versions/master/api_docs/python/tf/keras/metrics/get", "k": [], "r": "master", "t": "tf.keras.metrics.get"}, {"p": "/versions/master/api_docs/python/tf/keras/metrics/serialize", "k": [], "r": "master", "t": "tf.keras.metrics.serialize"}, {"p": "/versions/master/api_docs/python/tf/keras/metrics/sparse_top_k_categorical_accuracy", "k": [], "r": "master", "t": "tf.keras.metrics.sparse_top_k_categorical_accuracy"}, {"p": "/versions/master/api_docs/python/tf/keras/metrics/top_k_categorical_accuracy", "k": [], "r": "master", "t": "tf.keras.metrics.top_k_categorical_accuracy"}, {"p": "/versions/master/api_docs/python/tf/keras/models", "k": [], "r": "master", "t": "tf.keras.models"}, {"p": "/versions/master/api_docs/python/tf/keras/models/load_model", "k": [], "r": "master", "t": "tf.keras.models.load_model"}, {"p": "/versions/master/api_docs/python/tf/keras/models/model_from_config", "k": [], "r": "master", "t": "tf.keras.models.model_from_config"}, {"p": "/versions/master/api_docs/python/tf/keras/models/model_from_json", "k": [], "r": "master", "t": "tf.keras.models.model_from_json"}, {"p": "/versions/master/api_docs/python/tf/keras/models/model_from_yaml", "k": [], "r": "master", "t": "tf.keras.models.model_from_yaml"}, {"p": "/versions/master/api_docs/python/tf/keras/models/save_model", "k": [], "r": "master", "t": "tf.keras.models.save_model"}, {"p": "/versions/master/api_docs/python/tf/keras/optimizers", "k": [], "r": "master", "t": "tf.keras.optimizers"}, {"p": "/versions/master/api_docs/python/tf/keras/optimizers/Adadelta", "k": ["__init__", "from_config", "get_config", "get_gradients", "get_updates", "get_weights", "set_weights"], "r": "master", "t": "tf.keras.optimizers.Adadelta"}, {"p": "/versions/master/api_docs/python/tf/keras/optimizers/Adagrad", "k": ["__init__", "from_config", "get_config", "get_gradients", "get_updates", "get_weights", "set_weights"], "r": "master", "t": "tf.keras.optimizers.Adagrad"}, {"p": "/versions/master/api_docs/python/tf/keras/optimizers/Adam", "k": ["__init__", "from_config", "get_config", "get_gradients", "get_updates", "get_weights", "set_weights"], "r": "master", "t": "tf.keras.optimizers.Adam"}, {"p": "/versions/master/api_docs/python/tf/keras/optimizers/Adamax", "k": ["__init__", "from_config", "get_config", "get_gradients", "get_updates", "get_weights", "set_weights"], "r": "master", "t": "tf.keras.optimizers.Adamax"}, {"p": "/versions/master/api_docs/python/tf/keras/optimizers/Nadam", "k": ["__init__", "from_config", "get_config", "get_gradients", "get_updates", "get_weights", "set_weights"], "r": "master", "t": "tf.keras.optimizers.Nadam"}, {"p": "/versions/master/api_docs/python/tf/keras/optimizers/Optimizer", "k": ["__init__", "from_config", "get_config", "get_gradients", "get_updates", "get_weights", "set_weights"], "r": "master", "t": "tf.keras.optimizers.Optimizer"}, {"p": "/versions/master/api_docs/python/tf/keras/optimizers/RMSprop", "k": ["__init__", "from_config", "get_config", "get_gradients", "get_updates", "get_weights", "set_weights"], "r": "master", "t": "tf.keras.optimizers.RMSprop"}, {"p": "/versions/master/api_docs/python/tf/keras/optimizers/SGD", "k": ["__init__", "from_config", "get_config", "get_gradients", "get_updates", "get_weights", "set_weights"], "r": "master", "t": "tf.keras.optimizers.SGD"}, {"p": "/versions/master/api_docs/python/tf/keras/optimizers/deserialize", "k": [], "r": "master", "t": "tf.keras.optimizers.deserialize"}, {"p": "/versions/master/api_docs/python/tf/keras/optimizers/get", "k": [], "r": "master", "t": "tf.keras.optimizers.get"}, {"p": "/versions/master/api_docs/python/tf/keras/optimizers/serialize", "k": [], "r": "master", "t": "tf.keras.optimizers.serialize"}, {"p": "/versions/master/api_docs/python/tf/keras/preprocessing", "k": [], "r": "master", "t": "tf.keras.preprocessing"}, {"p": "/versions/master/api_docs/python/tf/keras/preprocessing/image", "k": [], "r": "master", "t": "tf.keras.preprocessing.image"}, {"p": "/versions/master/api_docs/python/tf/keras/preprocessing/image/DirectoryIterator", "k": ["__getitem__", "__init__", "__iter__", "__len__", "__next__", "next", "on_epoch_end", "reset"], "r": "master", "t": "tf.keras.preprocessing.image.DirectoryIterator"}, {"p": "/versions/master/api_docs/python/tf/keras/preprocessing/image/ImageDataGenerator", "k": ["__init__", "fit", "flow", "flow_from_directory", "random_transform", "standardize"], "r": "master", "t": "tf.keras.preprocessing.image.ImageDataGenerator"}, {"p": "/versions/master/api_docs/python/tf/keras/preprocessing/image/Iterator", "k": ["__getitem__", "__init__", "__iter__", "__len__", "__next__", "on_epoch_end", "reset"], "r": "master", "t": "tf.keras.preprocessing.image.Iterator"}, {"p": "/versions/master/api_docs/python/tf/keras/preprocessing/image/NumpyArrayIterator", "k": ["__getitem__", "__init__", "__iter__", "__len__", "__next__", "next", "on_epoch_end", "reset"], "r": "master", "t": "tf.keras.preprocessing.image.NumpyArrayIterator"}, {"p": "/versions/master/api_docs/python/tf/keras/preprocessing/image/apply_transform", "k": [], "r": "master", "t": "tf.keras.preprocessing.image.apply_transform"}, {"p": "/versions/master/api_docs/python/tf/keras/preprocessing/image/array_to_img", "k": [], "r": "master", "t": "tf.keras.preprocessing.image.array_to_img"}, {"p": "/versions/master/api_docs/python/tf/keras/preprocessing/image/flip_axis", "k": [], "r": "master", "t": "tf.keras.preprocessing.image.flip_axis"}, {"p": "/versions/master/api_docs/python/tf/keras/preprocessing/image/img_to_array", "k": [], "r": "master", "t": "tf.keras.preprocessing.image.img_to_array"}, {"p": "/versions/master/api_docs/python/tf/keras/preprocessing/image/load_img", "k": [], "r": "master", "t": "tf.keras.preprocessing.image.load_img"}, {"p": "/versions/master/api_docs/python/tf/keras/preprocessing/image/random_brightness", "k": [], "r": "master", "t": "tf.keras.preprocessing.image.random_brightness"}, {"p": "/versions/master/api_docs/python/tf/keras/preprocessing/image/random_channel_shift", "k": [], "r": "master", "t": "tf.keras.preprocessing.image.random_channel_shift"}, {"p": "/versions/master/api_docs/python/tf/keras/preprocessing/image/random_rotation", "k": [], "r": "master", "t": "tf.keras.preprocessing.image.random_rotation"}, {"p": "/versions/master/api_docs/python/tf/keras/preprocessing/image/random_shear", "k": [], "r": "master", "t": "tf.keras.preprocessing.image.random_shear"}, {"p": "/versions/master/api_docs/python/tf/keras/preprocessing/image/random_shift", "k": [], "r": "master", "t": "tf.keras.preprocessing.image.random_shift"}, {"p": "/versions/master/api_docs/python/tf/keras/preprocessing/image/random_zoom", "k": [], "r": "master", "t": "tf.keras.preprocessing.image.random_zoom"}, {"p": "/versions/master/api_docs/python/tf/keras/preprocessing/sequence", "k": [], "r": "master", "t": "tf.keras.preprocessing.sequence"}, {"p": "/versions/master/api_docs/python/tf/keras/preprocessing/sequence/TimeseriesGenerator", "k": ["__getitem__", "__init__", "__iter__", "__len__", "on_epoch_end"], "r": "master", "t": "tf.keras.preprocessing.sequence.TimeseriesGenerator"}, {"p": "/versions/master/api_docs/python/tf/keras/preprocessing/sequence/make_sampling_table", "k": [], "r": "master", "t": "tf.keras.preprocessing.sequence.make_sampling_table"}, {"p": "/versions/master/api_docs/python/tf/keras/preprocessing/sequence/pad_sequences", "k": [], "r": "master", "t": "tf.keras.preprocessing.sequence.pad_sequences"}, {"p": "/versions/master/api_docs/python/tf/keras/preprocessing/sequence/skipgrams", "k": [], "r": "master", "t": "tf.keras.preprocessing.sequence.skipgrams"}, {"p": "/versions/master/api_docs/python/tf/keras/preprocessing/text", "k": [], "r": "master", "t": "tf.keras.preprocessing.text"}, {"p": "/versions/master/api_docs/python/tf/keras/preprocessing/text/Tokenizer", "k": ["__init__", "fit_on_sequences", "fit_on_texts", "sequences_to_matrix", "texts_to_matrix", "texts_to_sequences", "texts_to_sequences_generator"], "r": "master", "t": "tf.keras.preprocessing.text.Tokenizer"}, {"p": "/versions/master/api_docs/python/tf/keras/preprocessing/text/hashing_trick", "k": [], "r": "master", "t": "tf.keras.preprocessing.text.hashing_trick"}, {"p": "/versions/master/api_docs/python/tf/keras/preprocessing/text/one_hot", "k": [], "r": "master", "t": "tf.keras.preprocessing.text.one_hot"}, {"p": "/versions/master/api_docs/python/tf/keras/preprocessing/text/text_to_word_sequence", "k": [], "r": "master", "t": "tf.keras.preprocessing.text.text_to_word_sequence"}, {"p": "/versions/master/api_docs/python/tf/keras/regularizers", "k": [], "r": "master", "t": "tf.keras.regularizers"}, {"p": "/versions/master/api_docs/python/tf/keras/regularizers/L1L2", "k": ["__call__", "__init__", "from_config", "get_config"], "r": "master", "t": "tf.keras.regularizers.L1L2"}, {"p": "/versions/master/api_docs/python/tf/keras/regularizers/Regularizer", "k": ["__call__", "from_config"], "r": "master", "t": "tf.keras.regularizers.Regularizer"}, {"p": "/versions/master/api_docs/python/tf/keras/regularizers/deserialize", "k": [], "r": "master", "t": "tf.keras.regularizers.deserialize"}, {"p": "/versions/master/api_docs/python/tf/keras/regularizers/get", "k": [], "r": "master", "t": "tf.keras.regularizers.get"}, {"p": "/versions/master/api_docs/python/tf/keras/regularizers/l1", "k": [], "r": "master", "t": "tf.keras.regularizers.l1"}, {"p": "/versions/master/api_docs/python/tf/keras/regularizers/l1_l2", "k": [], "r": "master", "t": "tf.keras.regularizers.l1_l2"}, {"p": "/versions/master/api_docs/python/tf/keras/regularizers/l2", "k": [], "r": "master", "t": "tf.keras.regularizers.l2"}, {"p": "/versions/master/api_docs/python/tf/keras/regularizers/serialize", "k": [], "r": "master", "t": "tf.keras.regularizers.serialize"}, {"p": "/versions/master/api_docs/python/tf/keras/utils", "k": [], "r": "master", "t": "tf.keras.utils"}, {"p": "/versions/master/api_docs/python/tf/keras/utils/CustomObjectScope", "k": ["__enter__", "__exit__", "__init__"], "r": "master", "t": "tf.keras.utils.CustomObjectScope"}, {"p": "/versions/master/api_docs/python/tf/keras/utils/GeneratorEnqueuer", "k": ["__init__", "get", "is_running", "start", "stop"], "r": "master", "t": "tf.keras.utils.GeneratorEnqueuer"}, {"p": "/versions/master/api_docs/python/tf/keras/utils/HDF5Matrix", "k": ["dtype", "ndim", "shape", "size", "__getitem__", "__init__", "__len__", "refs"], "r": "master", "t": "tf.keras.utils.HDF5Matrix"}, {"p": "/versions/master/api_docs/python/tf/keras/utils/Progbar", "k": ["__init__", "add", "update"], "r": "master", "t": "tf.keras.utils.Progbar"}, {"p": "/versions/master/api_docs/python/tf/keras/utils/Sequence", "k": ["__getitem__", "__iter__", "__len__", "on_epoch_end"], "r": "master", "t": "tf.keras.utils.Sequence"}, {"p": "/versions/master/api_docs/python/tf/keras/utils/SequenceEnqueuer", "k": ["get", "is_running", "start", "stop"], "r": "master", "t": "tf.keras.utils.SequenceEnqueuer"}, {"p": "/versions/master/api_docs/python/tf/keras/utils/convert_all_kernels_in_model", "k": [], "r": "master", "t": "tf.keras.utils.convert_all_kernels_in_model"}, {"p": "/versions/master/api_docs/python/tf/keras/utils/custom_object_scope", "k": [], "r": "master", "t": "tf.keras.utils.custom_object_scope"}, {"p": "/versions/master/api_docs/python/tf/keras/utils/deserialize_keras_object", "k": [], "r": "master", "t": "tf.keras.utils.deserialize_keras_object"}, {"p": "/versions/master/api_docs/python/tf/keras/utils/get_custom_objects", "k": [], "r": "master", "t": "tf.keras.utils.get_custom_objects"}, {"p": "/versions/master/api_docs/python/tf/keras/utils/get_file", "k": [], "r": "master", "t": "tf.keras.utils.get_file"}, {"p": "/versions/master/api_docs/python/tf/keras/utils/multi_gpu_model", "k": [], "r": "master", "t": "tf.keras.utils.multi_gpu_model"}, {"p": "/versions/master/api_docs/python/tf/keras/utils/normalize", "k": [], "r": "master", "t": "tf.keras.utils.normalize"}, {"p": "/versions/master/api_docs/python/tf/keras/utils/plot_model", "k": [], "r": "master", "t": "tf.keras.utils.plot_model"}, {"p": "/versions/master/api_docs/python/tf/keras/utils/serialize_keras_object", "k": [], "r": "master", "t": "tf.keras.utils.serialize_keras_object"}, {"p": "/versions/master/api_docs/python/tf/keras/utils/to_categorical", "k": [], "r": "master", "t": "tf.keras.utils.to_categorical"}, {"p": "/versions/master/api_docs/python/tf/keras/wrappers", "k": [], "r": "master", "t": "tf.keras.wrappers"}, {"p": "/versions/master/api_docs/python/tf/keras/wrappers/scikit_learn", "k": [], "r": "master", "t": "tf.keras.wrappers.scikit_learn"}, {"p": "/versions/master/api_docs/python/tf/keras/wrappers/scikit_learn/KerasClassifier", "k": ["__init__", "check_params", "filter_sk_params", "fit", "get_params", "predict", "predict_proba", "score", "set_params"], "r": "master", "t": "tf.keras.wrappers.scikit_learn.KerasClassifier"}, {"p": "/versions/master/api_docs/python/tf/keras/wrappers/scikit_learn/KerasRegressor", "k": ["__init__", "check_params", "filter_sk_params", "fit", "get_params", "predict", "score", "set_params"], "r": "master", "t": "tf.keras.wrappers.scikit_learn.KerasRegressor"}, {"p": "/versions/master/api_docs/python/tf/layers", "k": [], "r": "master", "t": "tf.layers"}, {"p": "/versions/master/api_docs/python/tf/layers/AveragePooling1D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "master", "t": "tf.layers.AveragePooling1D"}, {"p": "/versions/master/api_docs/python/tf/layers/AveragePooling2D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "master", "t": "tf.layers.AveragePooling2D"}, {"p": "/versions/master/api_docs/python/tf/layers/AveragePooling3D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "master", "t": "tf.layers.AveragePooling3D"}, {"p": "/versions/master/api_docs/python/tf/layers/BatchNormalization", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "master", "t": "tf.layers.BatchNormalization"}, {"p": "/versions/master/api_docs/python/tf/layers/Conv1D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "master", "t": "tf.layers.Conv1D"}, {"p": "/versions/master/api_docs/python/tf/layers/Conv2D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "master", "t": "tf.layers.Conv2D"}, {"p": "/versions/master/api_docs/python/tf/layers/Conv2DTranspose", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "master", "t": "tf.layers.Conv2DTranspose"}, {"p": "/versions/master/api_docs/python/tf/layers/Conv3D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "master", "t": "tf.layers.Conv3D"}, {"p": "/versions/master/api_docs/python/tf/layers/Conv3DTranspose", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "master", "t": "tf.layers.Conv3DTranspose"}, {"p": "/versions/master/api_docs/python/tf/layers/Dense", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "master", "t": "tf.layers.Dense"}, {"p": "/versions/master/api_docs/python/tf/layers/Dropout", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "master", "t": "tf.layers.Dropout"}, {"p": "/versions/master/api_docs/python/tf/layers/Flatten", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "master", "t": "tf.layers.Flatten"}, {"p": "/versions/master/api_docs/python/tf/layers/InputSpec", "k": ["__init__"], "r": "master", "t": "tf.layers.InputSpec"}, {"p": "/versions/master/api_docs/python/tf/layers/Layer", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "master", "t": "tf.layers.Layer"}, {"p": "/versions/master/api_docs/python/tf/layers/MaxPooling1D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "master", "t": "tf.layers.MaxPooling1D"}, {"p": "/versions/master/api_docs/python/tf/layers/MaxPooling2D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "master", "t": "tf.layers.MaxPooling2D"}, {"p": "/versions/master/api_docs/python/tf/layers/MaxPooling3D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "master", "t": "tf.layers.MaxPooling3D"}, {"p": "/versions/master/api_docs/python/tf/layers/SeparableConv1D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "master", "t": "tf.layers.SeparableConv1D"}, {"p": "/versions/master/api_docs/python/tf/layers/SeparableConv2D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "master", "t": "tf.layers.SeparableConv2D"}, {"p": "/versions/master/api_docs/python/tf/layers/average_pooling1d", "k": [], "r": "master", "t": "tf.layers.average_pooling1d"}, {"p": "/versions/master/api_docs/python/tf/layers/average_pooling2d", "k": [], "r": "master", "t": "tf.layers.average_pooling2d"}, {"p": "/versions/master/api_docs/python/tf/layers/average_pooling3d", "k": [], "r": "master", "t": "tf.layers.average_pooling3d"}, {"p": "/versions/master/api_docs/python/tf/layers/batch_normalization", "k": [], "r": "master", "t": "tf.layers.batch_normalization"}, {"p": "/versions/master/api_docs/python/tf/layers/conv1d", "k": [], "r": "master", "t": "tf.layers.conv1d"}, {"p": "/versions/master/api_docs/python/tf/layers/conv2d", "k": [], "r": "master", "t": "tf.layers.conv2d"}, {"p": "/versions/master/api_docs/python/tf/layers/conv2d_transpose", "k": [], "r": "master", "t": "tf.layers.conv2d_transpose"}, {"p": "/versions/master/api_docs/python/tf/layers/conv3d", "k": [], "r": "master", "t": "tf.layers.conv3d"}, {"p": "/versions/master/api_docs/python/tf/layers/conv3d_transpose", "k": [], "r": "master", "t": "tf.layers.conv3d_transpose"}, {"p": "/versions/master/api_docs/python/tf/layers/dense", "k": [], "r": "master", "t": "tf.layers.dense"}, {"p": "/versions/master/api_docs/python/tf/layers/dropout", "k": [], "r": "master", "t": "tf.layers.dropout"}, {"p": "/versions/master/api_docs/python/tf/layers/flatten", "k": [], "r": "master", "t": "tf.layers.flatten"}, {"p": "/versions/master/api_docs/python/tf/layers/max_pooling1d", "k": [], "r": "master", "t": "tf.layers.max_pooling1d"}, {"p": "/versions/master/api_docs/python/tf/layers/max_pooling2d", "k": [], "r": "master", "t": "tf.layers.max_pooling2d"}, {"p": "/versions/master/api_docs/python/tf/layers/max_pooling3d", "k": [], "r": "master", "t": "tf.layers.max_pooling3d"}, {"p": "/versions/master/api_docs/python/tf/layers/separable_conv1d", "k": [], "r": "master", "t": "tf.layers.separable_conv1d"}, {"p": "/versions/master/api_docs/python/tf/layers/separable_conv2d", "k": [], "r": "master", "t": "tf.layers.separable_conv2d"}, {"p": "/versions/master/api_docs/python/tf/lbeta", "k": [], "r": "master", "t": "tf.lbeta"}, {"p": "/versions/master/api_docs/python/tf/less", "k": [], "r": "master", "t": "tf.less"}, {"p": "/versions/master/api_docs/python/tf/less_equal", "k": [], "r": "master", "t": "tf.less_equal"}, {"p": "/versions/master/api_docs/python/tf/lgamma", "k": [], "r": "master", "t": "tf.lgamma"}, {"p": "/versions/master/api_docs/python/tf/lin_space", "k": [], "r": "master", "t": "tf.lin_space"}, {"p": "/versions/master/api_docs/python/tf/linalg", "k": [], "r": "master", "t": "tf.linalg"}, {"p": "/versions/master/api_docs/python/tf/linalg/LinearOperator", "k": ["batch_shape", "domain_dimension", "dtype", "graph_parents", "is_non_singular", "is_positive_definite", "is_self_adjoint", "is_square", "name", "range_dimension", "shape", "tensor_rank", "__init__", "add_to_tensor", "assert_non_singular", "assert_positive_definite", "assert_self_adjoint", "batch_shape_tensor", "determinant", "diag_part", "domain_dimension_tensor", "log_abs_determinant", "matmul", "matvec", "range_dimension_tensor", "shape_tensor", "solve", "solvevec", "tensor_rank_tensor", "to_dense", "trace"], "r": "master", "t": "tf.linalg.LinearOperator"}, {"p": "/versions/master/api_docs/python/tf/linalg/LinearOperatorComposition", "k": ["batch_shape", "domain_dimension", "dtype", "graph_parents", "is_non_singular", "is_positive_definite", "is_self_adjoint", "is_square", "name", "operators", "range_dimension", "shape", "tensor_rank", "__init__", "add_to_tensor", "assert_non_singular", "assert_positive_definite", "assert_self_adjoint", "batch_shape_tensor", "determinant", "diag_part", "domain_dimension_tensor", "log_abs_determinant", "matmul", "matvec", "range_dimension_tensor", "shape_tensor", "solve", "solvevec", "tensor_rank_tensor", "to_dense", "trace"], "r": "master", "t": "tf.linalg.LinearOperatorComposition"}, {"p": "/versions/master/api_docs/python/tf/linalg/LinearOperatorDiag", "k": ["batch_shape", "diag", "domain_dimension", "dtype", "graph_parents", "is_non_singular", "is_positive_definite", "is_self_adjoint", "is_square", "name", "range_dimension", "shape", "tensor_rank", "__init__", "add_to_tensor", "assert_non_singular", "assert_positive_definite", "assert_self_adjoint", "batch_shape_tensor", "determinant", "diag_part", "domain_dimension_tensor", "log_abs_determinant", "matmul", "matvec", "range_dimension_tensor", "shape_tensor", "solve", "solvevec", "tensor_rank_tensor", "to_dense", "trace"], "r": "master", "t": "tf.linalg.LinearOperatorDiag"}, {"p": "/versions/master/api_docs/python/tf/linalg/LinearOperatorFullMatrix", "k": ["batch_shape", "domain_dimension", "dtype", "graph_parents", "is_non_singular", "is_positive_definite", "is_self_adjoint", "is_square", "name", "range_dimension", "shape", "tensor_rank", "__init__", "add_to_tensor", "assert_non_singular", "assert_positive_definite", "assert_self_adjoint", "batch_shape_tensor", "determinant", "diag_part", "domain_dimension_tensor", "log_abs_determinant", "matmul", "matvec", "range_dimension_tensor", "shape_tensor", "solve", "solvevec", "tensor_rank_tensor", "to_dense", "trace"], "r": "master", "t": "tf.linalg.LinearOperatorFullMatrix"}, {"p": "/versions/master/api_docs/python/tf/linalg/LinearOperatorIdentity", "k": ["batch_shape", "domain_dimension", "dtype", "graph_parents", "is_non_singular", "is_positive_definite", "is_self_adjoint", "is_square", "name", "range_dimension", "shape", "tensor_rank", "__init__", "add_to_tensor", "assert_non_singular", "assert_positive_definite", "assert_self_adjoint", "batch_shape_tensor", "determinant", "diag_part", "domain_dimension_tensor", "log_abs_determinant", "matmul", "matvec", "range_dimension_tensor", "shape_tensor", "solve", "solvevec", "tensor_rank_tensor", "to_dense", "trace"], "r": "master", "t": "tf.linalg.LinearOperatorIdentity"}, {"p": "/versions/master/api_docs/python/tf/linalg/LinearOperatorLowRankUpdate", "k": ["base_operator", "batch_shape", "diag_operator", "diag_update", "domain_dimension", "dtype", "graph_parents", "is_diag_update_positive", "is_non_singular", "is_positive_definite", "is_self_adjoint", "is_square", "name", "range_dimension", "shape", "tensor_rank", "u", "v", "__init__", "add_to_tensor", "assert_non_singular", "assert_positive_definite", "assert_self_adjoint", "batch_shape_tensor", "determinant", "diag_part", "domain_dimension_tensor", "log_abs_determinant", "matmul", "matvec", "range_dimension_tensor", "shape_tensor", "solve", "solvevec", "tensor_rank_tensor", "to_dense", "trace"], "r": "master", "t": "tf.linalg.LinearOperatorLowRankUpdate"}, {"p": "/versions/master/api_docs/python/tf/linalg/LinearOperatorLowerTriangular", "k": ["batch_shape", "domain_dimension", "dtype", "graph_parents", "is_non_singular", "is_positive_definite", "is_self_adjoint", "is_square", "name", "range_dimension", "shape", "tensor_rank", "__init__", "add_to_tensor", "assert_non_singular", "assert_positive_definite", "assert_self_adjoint", "batch_shape_tensor", "determinant", "diag_part", "domain_dimension_tensor", "log_abs_determinant", "matmul", "matvec", "range_dimension_tensor", "shape_tensor", "solve", "solvevec", "tensor_rank_tensor", "to_dense", "trace"], "r": "master", "t": "tf.linalg.LinearOperatorLowerTriangular"}, {"p": "/versions/master/api_docs/python/tf/linalg/LinearOperatorScaledIdentity", "k": ["batch_shape", "domain_dimension", "dtype", "graph_parents", "is_non_singular", "is_positive_definite", "is_self_adjoint", "is_square", "multiplier", "name", "range_dimension", "shape", "tensor_rank", "__init__", "add_to_tensor", "assert_non_singular", "assert_positive_definite", "assert_self_adjoint", "batch_shape_tensor", "determinant", "diag_part", "domain_dimension_tensor", "log_abs_determinant", "matmul", "matvec", "range_dimension_tensor", "shape_tensor", "solve", "solvevec", "tensor_rank_tensor", "to_dense", "trace"], "r": "master", "t": "tf.linalg.LinearOperatorScaledIdentity"}, {"p": "/versions/master/api_docs/python/tf/linalg/adjoint", "k": [], "r": "master", "t": "tf.linalg.adjoint"}, {"p": "/versions/master/api_docs/python/tf/linalg/expm", "k": [], "r": "master", "t": "tf.linalg.expm"}, {"p": "/versions/master/api_docs/python/tf/linalg/logdet", "k": [], "r": "master", "t": "tf.linalg.logdet"}, {"p": "/versions/master/api_docs/python/tf/linalg/logm", "k": [], "r": "master", "t": "tf.linalg.logm"}, {"p": "/versions/master/api_docs/python/tf/linalg/slogdet", "k": [], "r": "master", "t": "tf.linalg.slogdet"}, {"p": "/versions/master/api_docs/python/tf/load_file_system_library", "k": [], "r": "master", "t": "tf.load_file_system_library"}, {"p": "/versions/master/api_docs/python/tf/load_op_library", "k": [], "r": "master", "t": "tf.load_op_library"}, {"p": "/versions/master/api_docs/python/tf/local_variables", "k": [], "r": "master", "t": "tf.local_variables"}, {"p": "/versions/master/api_docs/python/tf/local_variables_initializer", "k": [], "r": "master", "t": "tf.local_variables_initializer"}, {"p": "/versions/master/api_docs/python/tf/log", "k": [], "r": "master", "t": "tf.log"}, {"p": "/versions/master/api_docs/python/tf/log1p", "k": [], "r": "master", "t": "tf.log1p"}, {"p": "/versions/master/api_docs/python/tf/log_sigmoid", "k": [], "r": "master", "t": "tf.log_sigmoid"}, {"p": "/versions/master/api_docs/python/tf/logging", "k": ["DEBUG", "ERROR", "FATAL", "INFO", "WARN"], "r": "master", "t": "tf.logging"}, {"p": "/versions/master/api_docs/python/tf/logging/TaskLevelStatusMessage", "k": [], "r": "master", "t": "tf.logging.TaskLevelStatusMessage"}, {"p": "/versions/master/api_docs/python/tf/logging/debug", "k": [], "r": "master", "t": "tf.logging.debug"}, {"p": "/versions/master/api_docs/python/tf/logging/error", "k": [], "r": "master", "t": "tf.logging.error"}, {"p": "/versions/master/api_docs/python/tf/logging/fatal", "k": [], "r": "master", "t": "tf.logging.fatal"}, {"p": "/versions/master/api_docs/python/tf/logging/flush", "k": [], "r": "master", "t": "tf.logging.flush"}, {"p": "/versions/master/api_docs/python/tf/logging/get_verbosity", "k": [], "r": "master", "t": "tf.logging.get_verbosity"}, {"p": "/versions/master/api_docs/python/tf/logging/info", "k": [], "r": "master", "t": "tf.logging.info"}, {"p": "/versions/master/api_docs/python/tf/logging/log", "k": [], "r": "master", "t": "tf.logging.log"}, {"p": "/versions/master/api_docs/python/tf/logging/log_every_n", "k": [], "r": "master", "t": "tf.logging.log_every_n"}, {"p": "/versions/master/api_docs/python/tf/logging/log_first_n", "k": [], "r": "master", "t": "tf.logging.log_first_n"}, {"p": "/versions/master/api_docs/python/tf/logging/log_if", "k": [], "r": "master", "t": "tf.logging.log_if"}, {"p": "/versions/master/api_docs/python/tf/logging/set_verbosity", "k": [], "r": "master", "t": "tf.logging.set_verbosity"}, {"p": "/versions/master/api_docs/python/tf/logging/vlog", "k": [], "r": "master", "t": "tf.logging.vlog"}, {"p": "/versions/master/api_docs/python/tf/logging/warn", "k": [], "r": "master", "t": "tf.logging.warn"}, {"p": "/versions/master/api_docs/python/tf/logging/warning", "k": [], "r": "master", "t": "tf.logging.warning"}, {"p": "/versions/master/api_docs/python/tf/logical_and", "k": [], "r": "master", "t": "tf.logical_and"}, {"p": "/versions/master/api_docs/python/tf/logical_not", "k": [], "r": "master", "t": "tf.logical_not"}, {"p": "/versions/master/api_docs/python/tf/logical_or", "k": [], "r": "master", "t": "tf.logical_or"}, {"p": "/versions/master/api_docs/python/tf/logical_xor", "k": [], "r": "master", "t": "tf.logical_xor"}, {"p": "/versions/master/api_docs/python/tf/losses", "k": [], "r": "master", "t": "tf.losses"}, {"p": "/versions/master/api_docs/python/tf/losses/Reduction", "k": ["all", "validate", "MEAN", "NONE", "SUM", "SUM_BY_NONZERO_WEIGHTS", "SUM_OVER_BATCH_SIZE", "SUM_OVER_NONZERO_WEIGHTS"], "r": "master", "t": "tf.losses.Reduction"}, {"p": "/versions/master/api_docs/python/tf/losses/absolute_difference", "k": [], "r": "master", "t": "tf.losses.absolute_difference"}, {"p": "/versions/master/api_docs/python/tf/losses/add_loss", "k": [], "r": "master", "t": "tf.losses.add_loss"}, {"p": "/versions/master/api_docs/python/tf/losses/compute_weighted_loss", "k": [], "r": "master", "t": "tf.losses.compute_weighted_loss"}, {"p": "/versions/master/api_docs/python/tf/losses/cosine_distance", "k": [], "r": "master", "t": "tf.losses.cosine_distance"}, {"p": "/versions/master/api_docs/python/tf/losses/get_losses", "k": [], "r": "master", "t": "tf.losses.get_losses"}, {"p": "/versions/master/api_docs/python/tf/losses/get_regularization_loss", "k": [], "r": "master", "t": "tf.losses.get_regularization_loss"}, {"p": "/versions/master/api_docs/python/tf/losses/get_regularization_losses", "k": [], "r": "master", "t": "tf.losses.get_regularization_losses"}, {"p": "/versions/master/api_docs/python/tf/losses/get_total_loss", "k": [], "r": "master", "t": "tf.losses.get_total_loss"}, {"p": "/versions/master/api_docs/python/tf/losses/hinge_loss", "k": [], "r": "master", "t": "tf.losses.hinge_loss"}, {"p": "/versions/master/api_docs/python/tf/losses/huber_loss", "k": [], "r": "master", "t": "tf.losses.huber_loss"}, {"p": "/versions/master/api_docs/python/tf/losses/log_loss", "k": [], "r": "master", "t": "tf.losses.log_loss"}, {"p": "/versions/master/api_docs/python/tf/losses/mean_pairwise_squared_error", "k": [], "r": "master", "t": "tf.losses.mean_pairwise_squared_error"}, {"p": "/versions/master/api_docs/python/tf/losses/mean_squared_error", "k": [], "r": "master", "t": "tf.losses.mean_squared_error"}, {"p": "/versions/master/api_docs/python/tf/losses/sigmoid_cross_entropy", "k": [], "r": "master", "t": "tf.losses.sigmoid_cross_entropy"}, {"p": "/versions/master/api_docs/python/tf/losses/softmax_cross_entropy", "k": [], "r": "master", "t": "tf.losses.softmax_cross_entropy"}, {"p": "/versions/master/api_docs/python/tf/losses/sparse_softmax_cross_entropy", "k": [], "r": "master", "t": "tf.losses.sparse_softmax_cross_entropy"}, {"p": "/versions/master/api_docs/python/tf/make_ndarray", "k": [], "r": "master", "t": "tf.make_ndarray"}, {"p": "/versions/master/api_docs/python/tf/make_template", "k": [], "r": "master", "t": "tf.make_template"}, {"p": "/versions/master/api_docs/python/tf/make_tensor_proto", "k": [], "r": "master", "t": "tf.make_tensor_proto"}, {"p": "/versions/master/api_docs/python/tf/manip", "k": [], "r": "master", "t": "tf.manip"}, {"p": "/versions/master/api_docs/python/tf/manip/roll", "k": [], "r": "master", "t": "tf.manip.roll"}, {"p": "/versions/master/api_docs/python/tf/map_fn", "k": [], "r": "master", "t": "tf.map_fn"}, {"p": "/versions/master/api_docs/python/tf/matching_files", "k": [], "r": "master", "t": "tf.matching_files"}, {"p": "/versions/master/api_docs/python/tf/matmul", "k": [], "r": "master", "t": "tf.matmul"}, {"p": "/versions/master/api_docs/python/tf/matrix_band_part", "k": [], "r": "master", "t": "tf.matrix_band_part"}, {"p": "/versions/master/api_docs/python/tf/matrix_determinant", "k": [], "r": "master", "t": "tf.matrix_determinant"}, {"p": "/versions/master/api_docs/python/tf/matrix_diag", "k": [], "r": "master", "t": "tf.matrix_diag"}, {"p": "/versions/master/api_docs/python/tf/matrix_diag_part", "k": [], "r": "master", "t": "tf.matrix_diag_part"}, {"p": "/versions/master/api_docs/python/tf/matrix_inverse", "k": [], "r": "master", "t": "tf.matrix_inverse"}, {"p": "/versions/master/api_docs/python/tf/matrix_set_diag", "k": [], "r": "master", "t": "tf.matrix_set_diag"}, {"p": "/versions/master/api_docs/python/tf/matrix_solve", "k": [], "r": "master", "t": "tf.matrix_solve"}, {"p": "/versions/master/api_docs/python/tf/matrix_solve_ls", "k": [], "r": "master", "t": "tf.matrix_solve_ls"}, {"p": "/versions/master/api_docs/python/tf/matrix_transpose", "k": [], "r": "master", "t": "tf.matrix_transpose"}, {"p": "/versions/master/api_docs/python/tf/matrix_triangular_solve", "k": [], "r": "master", "t": "tf.matrix_triangular_solve"}, {"p": "/versions/master/api_docs/python/tf/maximum", "k": [], "r": "master", "t": "tf.maximum"}, {"p": "/versions/master/api_docs/python/tf/meshgrid", "k": [], "r": "master", "t": "tf.meshgrid"}, {"p": "/versions/master/api_docs/python/tf/metrics", "k": [], "r": "master", "t": "tf.metrics"}, {"p": "/versions/master/api_docs/python/tf/metrics/accuracy", "k": [], "r": "master", "t": "tf.metrics.accuracy"}, {"p": "/versions/master/api_docs/python/tf/metrics/auc", "k": [], "r": "master", "t": "tf.metrics.auc"}, {"p": "/versions/master/api_docs/python/tf/metrics/average_precision_at_k", "k": [], "r": "master", "t": "tf.metrics.average_precision_at_k"}, {"p": "/versions/master/api_docs/python/tf/metrics/false_negatives", "k": [], "r": "master", "t": "tf.metrics.false_negatives"}, {"p": "/versions/master/api_docs/python/tf/metrics/false_negatives_at_thresholds", "k": [], "r": "master", "t": "tf.metrics.false_negatives_at_thresholds"}, {"p": "/versions/master/api_docs/python/tf/metrics/false_positives", "k": [], "r": "master", "t": "tf.metrics.false_positives"}, {"p": "/versions/master/api_docs/python/tf/metrics/false_positives_at_thresholds", "k": [], "r": "master", "t": "tf.metrics.false_positives_at_thresholds"}, {"p": "/versions/master/api_docs/python/tf/metrics/mean", "k": [], "r": "master", "t": "tf.metrics.mean"}, {"p": "/versions/master/api_docs/python/tf/metrics/mean_absolute_error", "k": [], "r": "master", "t": "tf.metrics.mean_absolute_error"}, {"p": "/versions/master/api_docs/python/tf/metrics/mean_cosine_distance", "k": [], "r": "master", "t": "tf.metrics.mean_cosine_distance"}, {"p": "/versions/master/api_docs/python/tf/metrics/mean_iou", "k": [], "r": "master", "t": "tf.metrics.mean_iou"}, {"p": "/versions/master/api_docs/python/tf/metrics/mean_per_class_accuracy", "k": [], "r": "master", "t": "tf.metrics.mean_per_class_accuracy"}, {"p": "/versions/master/api_docs/python/tf/metrics/mean_relative_error", "k": [], "r": "master", "t": "tf.metrics.mean_relative_error"}, {"p": "/versions/master/api_docs/python/tf/metrics/mean_squared_error", "k": [], "r": "master", "t": "tf.metrics.mean_squared_error"}, {"p": "/versions/master/api_docs/python/tf/metrics/mean_tensor", "k": [], "r": "master", "t": "tf.metrics.mean_tensor"}, {"p": "/versions/master/api_docs/python/tf/metrics/percentage_below", "k": [], "r": "master", "t": "tf.metrics.percentage_below"}, {"p": "/versions/master/api_docs/python/tf/metrics/precision", "k": [], "r": "master", "t": "tf.metrics.precision"}, {"p": "/versions/master/api_docs/python/tf/metrics/precision_at_k", "k": [], "r": "master", "t": "tf.metrics.precision_at_k"}, {"p": "/versions/master/api_docs/python/tf/metrics/precision_at_thresholds", "k": [], "r": "master", "t": "tf.metrics.precision_at_thresholds"}, {"p": "/versions/master/api_docs/python/tf/metrics/precision_at_top_k", "k": [], "r": "master", "t": "tf.metrics.precision_at_top_k"}, {"p": "/versions/master/api_docs/python/tf/metrics/recall", "k": [], "r": "master", "t": "tf.metrics.recall"}, {"p": "/versions/master/api_docs/python/tf/metrics/recall_at_k", "k": [], "r": "master", "t": "tf.metrics.recall_at_k"}, {"p": "/versions/master/api_docs/python/tf/metrics/recall_at_thresholds", "k": [], "r": "master", "t": "tf.metrics.recall_at_thresholds"}, {"p": "/versions/master/api_docs/python/tf/metrics/recall_at_top_k", "k": [], "r": "master", "t": "tf.metrics.recall_at_top_k"}, {"p": "/versions/master/api_docs/python/tf/metrics/root_mean_squared_error", "k": [], "r": "master", "t": "tf.metrics.root_mean_squared_error"}, {"p": "/versions/master/api_docs/python/tf/metrics/sensitivity_at_specificity", "k": [], "r": "master", "t": "tf.metrics.sensitivity_at_specificity"}, {"p": "/versions/master/api_docs/python/tf/metrics/sparse_average_precision_at_k", "k": [], "r": "master", "t": "tf.metrics.sparse_average_precision_at_k"}, {"p": "/versions/master/api_docs/python/tf/metrics/sparse_precision_at_k", "k": [], "r": "master", "t": "tf.metrics.sparse_precision_at_k"}, {"p": "/versions/master/api_docs/python/tf/metrics/specificity_at_sensitivity", "k": [], "r": "master", "t": "tf.metrics.specificity_at_sensitivity"}, {"p": "/versions/master/api_docs/python/tf/metrics/true_negatives", "k": [], "r": "master", "t": "tf.metrics.true_negatives"}, {"p": "/versions/master/api_docs/python/tf/metrics/true_negatives_at_thresholds", "k": [], "r": "master", "t": "tf.metrics.true_negatives_at_thresholds"}, {"p": "/versions/master/api_docs/python/tf/metrics/true_positives", "k": [], "r": "master", "t": "tf.metrics.true_positives"}, {"p": "/versions/master/api_docs/python/tf/metrics/true_positives_at_thresholds", "k": [], "r": "master", "t": "tf.metrics.true_positives_at_thresholds"}, {"p": "/versions/master/api_docs/python/tf/min_max_variable_partitioner", "k": [], "r": "master", "t": "tf.min_max_variable_partitioner"}, {"p": "/versions/master/api_docs/python/tf/minimum", "k": [], "r": "master", "t": "tf.minimum"}, {"p": "/versions/master/api_docs/python/tf/model_variables", "k": [], "r": "master", "t": "tf.model_variables"}, {"p": "/versions/master/api_docs/python/tf/moving_average_variables", "k": [], "r": "master", "t": "tf.moving_average_variables"}, {"p": "/versions/master/api_docs/python/tf/multinomial", "k": [], "r": "master", "t": "tf.multinomial"}, {"p": "/versions/master/api_docs/python/tf/multiply", "k": [], "r": "master", "t": "tf.multiply"}, {"p": "/versions/master/api_docs/python/tf/name_scope", "k": ["name", "__enter__", "__exit__", "__init__"], "r": "master", "t": "tf.name_scope"}, {"p": "/versions/master/api_docs/python/tf/negative", "k": [], "r": "master", "t": "tf.negative"}, {"p": "/versions/master/api_docs/python/tf/nn", "k": ["swish"], "r": "master", "t": "tf.nn"}, {"p": "/versions/master/api_docs/python/tf/nn/all_candidate_sampler", "k": [], "r": "master", "t": "tf.nn.all_candidate_sampler"}, {"p": "/versions/master/api_docs/python/tf/nn/atrous_conv2d", "k": [], "r": "master", "t": "tf.nn.atrous_conv2d"}, {"p": "/versions/master/api_docs/python/tf/nn/atrous_conv2d_transpose", "k": [], "r": "master", "t": "tf.nn.atrous_conv2d_transpose"}, {"p": "/versions/master/api_docs/python/tf/nn/avg_pool", "k": [], "r": "master", "t": "tf.nn.avg_pool"}, {"p": "/versions/master/api_docs/python/tf/nn/avg_pool3d", "k": [], "r": "master", "t": "tf.nn.avg_pool3d"}, {"p": "/versions/master/api_docs/python/tf/nn/batch_norm_with_global_normalization", "k": [], "r": "master", "t": "tf.nn.batch_norm_with_global_normalization"}, {"p": "/versions/master/api_docs/python/tf/nn/batch_normalization", "k": [], "r": "master", "t": "tf.nn.batch_normalization"}, {"p": "/versions/master/api_docs/python/tf/nn/bias_add", "k": [], "r": "master", "t": "tf.nn.bias_add"}, {"p": "/versions/master/api_docs/python/tf/nn/bidirectional_dynamic_rnn", "k": [], "r": "master", "t": "tf.nn.bidirectional_dynamic_rnn"}, {"p": "/versions/master/api_docs/python/tf/nn/compute_accidental_hits", "k": [], "r": "master", "t": "tf.nn.compute_accidental_hits"}, {"p": "/versions/master/api_docs/python/tf/nn/conv1d", "k": [], "r": "master", "t": "tf.nn.conv1d"}, {"p": "/versions/master/api_docs/python/tf/nn/conv2d", "k": [], "r": "master", "t": "tf.nn.conv2d"}, {"p": "/versions/master/api_docs/python/tf/nn/conv2d_backprop_filter", "k": [], "r": "master", "t": "tf.nn.conv2d_backprop_filter"}, {"p": "/versions/master/api_docs/python/tf/nn/conv2d_backprop_input", "k": [], "r": "master", "t": "tf.nn.conv2d_backprop_input"}, {"p": "/versions/master/api_docs/python/tf/nn/conv2d_transpose", "k": [], "r": "master", "t": "tf.nn.conv2d_transpose"}, {"p": "/versions/master/api_docs/python/tf/nn/conv3d", "k": [], "r": "master", "t": "tf.nn.conv3d"}, {"p": "/versions/master/api_docs/python/tf/nn/conv3d_backprop_filter_v2", "k": [], "r": "master", "t": "tf.nn.conv3d_backprop_filter_v2"}, {"p": "/versions/master/api_docs/python/tf/nn/conv3d_transpose", "k": [], "r": "master", "t": "tf.nn.conv3d_transpose"}, {"p": "/versions/master/api_docs/python/tf/nn/convolution", "k": [], "r": "master", "t": "tf.nn.convolution"}, {"p": "/versions/master/api_docs/python/tf/nn/crelu", "k": [], "r": "master", "t": "tf.nn.crelu"}, {"p": "/versions/master/api_docs/python/tf/nn/ctc_beam_search_decoder", "k": [], "r": "master", "t": "tf.nn.ctc_beam_search_decoder"}, {"p": "/versions/master/api_docs/python/tf/nn/ctc_greedy_decoder", "k": [], "r": "master", "t": "tf.nn.ctc_greedy_decoder"}, {"p": "/versions/master/api_docs/python/tf/nn/ctc_loss", "k": [], "r": "master", "t": "tf.nn.ctc_loss"}, {"p": "/versions/master/api_docs/python/tf/nn/depthwise_conv2d", "k": [], "r": "master", "t": "tf.nn.depthwise_conv2d"}, {"p": "/versions/master/api_docs/python/tf/nn/depthwise_conv2d_native", "k": [], "r": "master", "t": "tf.nn.depthwise_conv2d_native"}, {"p": "/versions/master/api_docs/python/tf/nn/depthwise_conv2d_native_backprop_filter", "k": [], "r": "master", "t": "tf.nn.depthwise_conv2d_native_backprop_filter"}, {"p": "/versions/master/api_docs/python/tf/nn/depthwise_conv2d_native_backprop_input", "k": [], "r": "master", "t": "tf.nn.depthwise_conv2d_native_backprop_input"}, {"p": "/versions/master/api_docs/python/tf/nn/dilation2d", "k": [], "r": "master", "t": "tf.nn.dilation2d"}, {"p": "/versions/master/api_docs/python/tf/nn/dropout", "k": [], "r": "master", "t": "tf.nn.dropout"}, {"p": "/versions/master/api_docs/python/tf/nn/dynamic_rnn", "k": [], "r": "master", "t": "tf.nn.dynamic_rnn"}, {"p": "/versions/master/api_docs/python/tf/nn/elu", "k": [], "r": "master", "t": "tf.nn.elu"}, {"p": "/versions/master/api_docs/python/tf/nn/embedding_lookup", "k": [], "r": "master", "t": "tf.nn.embedding_lookup"}, {"p": "/versions/master/api_docs/python/tf/nn/embedding_lookup_sparse", "k": [], "r": "master", "t": "tf.nn.embedding_lookup_sparse"}, {"p": "/versions/master/api_docs/python/tf/nn/erosion2d", "k": [], "r": "master", "t": "tf.nn.erosion2d"}, {"p": "/versions/master/api_docs/python/tf/nn/fixed_unigram_candidate_sampler", "k": [], "r": "master", "t": "tf.nn.fixed_unigram_candidate_sampler"}, {"p": "/versions/master/api_docs/python/tf/nn/fractional_avg_pool", "k": [], "r": "master", "t": "tf.nn.fractional_avg_pool"}, {"p": "/versions/master/api_docs/python/tf/nn/fractional_max_pool", "k": [], "r": "master", "t": "tf.nn.fractional_max_pool"}, {"p": "/versions/master/api_docs/python/tf/nn/fused_batch_norm", "k": [], "r": "master", "t": "tf.nn.fused_batch_norm"}, {"p": "/versions/master/api_docs/python/tf/nn/in_top_k", "k": [], "r": "master", "t": "tf.nn.in_top_k"}, {"p": "/versions/master/api_docs/python/tf/nn/l2_loss", "k": [], "r": "master", "t": "tf.nn.l2_loss"}, {"p": "/versions/master/api_docs/python/tf/nn/l2_normalize", "k": [], "r": "master", "t": "tf.nn.l2_normalize"}, {"p": "/versions/master/api_docs/python/tf/nn/leaky_relu", "k": [], "r": "master", "t": "tf.nn.leaky_relu"}, {"p": "/versions/master/api_docs/python/tf/nn/learned_unigram_candidate_sampler", "k": [], "r": "master", "t": "tf.nn.learned_unigram_candidate_sampler"}, {"p": "/versions/master/api_docs/python/tf/nn/local_response_normalization", "k": [], "r": "master", "t": "tf.nn.local_response_normalization"}, {"p": "/versions/master/api_docs/python/tf/nn/log_poisson_loss", "k": [], "r": "master", "t": "tf.nn.log_poisson_loss"}, {"p": "/versions/master/api_docs/python/tf/nn/log_softmax", "k": [], "r": "master", "t": "tf.nn.log_softmax"}, {"p": "/versions/master/api_docs/python/tf/nn/log_uniform_candidate_sampler", "k": [], "r": "master", "t": "tf.nn.log_uniform_candidate_sampler"}, {"p": "/versions/master/api_docs/python/tf/nn/max_pool", "k": [], "r": "master", "t": "tf.nn.max_pool"}, {"p": "/versions/master/api_docs/python/tf/nn/max_pool3d", "k": [], "r": "master", "t": "tf.nn.max_pool3d"}, {"p": "/versions/master/api_docs/python/tf/nn/max_pool_with_argmax", "k": [], "r": "master", "t": "tf.nn.max_pool_with_argmax"}, {"p": "/versions/master/api_docs/python/tf/nn/moments", "k": [], "r": "master", "t": "tf.nn.moments"}, {"p": "/versions/master/api_docs/python/tf/nn/nce_loss", "k": [], "r": "master", "t": "tf.nn.nce_loss"}, {"p": "/versions/master/api_docs/python/tf/nn/normalize_moments", "k": [], "r": "master", "t": "tf.nn.normalize_moments"}, {"p": "/versions/master/api_docs/python/tf/nn/pool", "k": [], "r": "master", "t": "tf.nn.pool"}, {"p": "/versions/master/api_docs/python/tf/nn/quantized_avg_pool", "k": [], "r": "master", "t": "tf.nn.quantized_avg_pool"}, {"p": "/versions/master/api_docs/python/tf/nn/quantized_conv2d", "k": [], "r": "master", "t": "tf.nn.quantized_conv2d"}, {"p": "/versions/master/api_docs/python/tf/nn/quantized_max_pool", "k": [], "r": "master", "t": "tf.nn.quantized_max_pool"}, {"p": "/versions/master/api_docs/python/tf/nn/quantized_relu_x", "k": [], "r": "master", "t": "tf.nn.quantized_relu_x"}, {"p": "/versions/master/api_docs/python/tf/nn/raw_rnn", "k": [], "r": "master", "t": "tf.nn.raw_rnn"}, {"p": "/versions/master/api_docs/python/tf/nn/relu", "k": [], "r": "master", "t": "tf.nn.relu"}, {"p": "/versions/master/api_docs/python/tf/nn/relu6", "k": [], "r": "master", "t": "tf.nn.relu6"}, {"p": "/versions/master/api_docs/python/tf/nn/relu_layer", "k": [], "r": "master", "t": "tf.nn.relu_layer"}, {"p": "/versions/master/api_docs/python/tf/nn/rnn_cell", "k": [], "r": "master", "t": "tf.nn.rnn_cell"}, {"p": "/versions/master/api_docs/python/tf/nn/sampled_softmax_loss", "k": [], "r": "master", "t": "tf.nn.sampled_softmax_loss"}, {"p": "/versions/master/api_docs/python/tf/nn/selu", "k": [], "r": "master", "t": "tf.nn.selu"}, {"p": "/versions/master/api_docs/python/tf/nn/separable_conv2d", "k": [], "r": "master", "t": "tf.nn.separable_conv2d"}, {"p": "/versions/master/api_docs/python/tf/nn/sigmoid_cross_entropy_with_logits", "k": [], "r": "master", "t": "tf.nn.sigmoid_cross_entropy_with_logits"}, {"p": "/versions/master/api_docs/python/tf/nn/softmax", "k": [], "r": "master", "t": "tf.nn.softmax"}, {"p": "/versions/master/api_docs/python/tf/nn/softmax_cross_entropy_with_logits", "k": [], "r": "master", "t": "tf.nn.softmax_cross_entropy_with_logits"}, {"p": "/versions/master/api_docs/python/tf/nn/softmax_cross_entropy_with_logits_v2", "k": [], "r": "master", "t": "tf.nn.softmax_cross_entropy_with_logits_v2"}, {"p": "/versions/master/api_docs/python/tf/nn/softplus", "k": [], "r": "master", "t": "tf.nn.softplus"}, {"p": "/versions/master/api_docs/python/tf/nn/softsign", "k": [], "r": "master", "t": "tf.nn.softsign"}, {"p": "/versions/master/api_docs/python/tf/nn/sparse_softmax_cross_entropy_with_logits", "k": [], "r": "master", "t": "tf.nn.sparse_softmax_cross_entropy_with_logits"}, {"p": "/versions/master/api_docs/python/tf/nn/static_bidirectional_rnn", "k": [], "r": "master", "t": "tf.nn.static_bidirectional_rnn"}, {"p": "/versions/master/api_docs/python/tf/nn/static_rnn", "k": [], "r": "master", "t": "tf.nn.static_rnn"}, {"p": "/versions/master/api_docs/python/tf/nn/static_state_saving_rnn", "k": [], "r": "master", "t": "tf.nn.static_state_saving_rnn"}, {"p": "/versions/master/api_docs/python/tf/nn/sufficient_statistics", "k": [], "r": "master", "t": "tf.nn.sufficient_statistics"}, {"p": "/versions/master/api_docs/python/tf/nn/top_k", "k": [], "r": "master", "t": "tf.nn.top_k"}, {"p": "/versions/master/api_docs/python/tf/nn/uniform_candidate_sampler", "k": [], "r": "master", "t": "tf.nn.uniform_candidate_sampler"}, {"p": "/versions/master/api_docs/python/tf/nn/weighted_cross_entropy_with_logits", "k": [], "r": "master", "t": "tf.nn.weighted_cross_entropy_with_logits"}, {"p": "/versions/master/api_docs/python/tf/nn/weighted_moments", "k": [], "r": "master", "t": "tf.nn.weighted_moments"}, {"p": "/versions/master/api_docs/python/tf/nn/with_space_to_batch", "k": [], "r": "master", "t": "tf.nn.with_space_to_batch"}, {"p": "/versions/master/api_docs/python/tf/nn/xw_plus_b", "k": [], "r": "master", "t": "tf.nn.xw_plus_b"}, {"p": "/versions/master/api_docs/python/tf/nn/zero_fraction", "k": [], "r": "master", "t": "tf.nn.zero_fraction"}, {"p": "/versions/master/api_docs/python/tf/no_op", "k": [], "r": "master", "t": "tf.no_op"}, {"p": "/versions/master/api_docs/python/tf/no_regularizer", "k": [], "r": "master", "t": "tf.no_regularizer"}, {"p": "/versions/master/api_docs/python/tf/norm", "k": [], "r": "master", "t": "tf.norm"}, {"p": "/versions/master/api_docs/python/tf/not_equal", "k": [], "r": "master", "t": "tf.not_equal"}, {"p": "/versions/master/api_docs/python/tf/one_hot", "k": [], "r": "master", "t": "tf.one_hot"}, {"p": "/versions/master/api_docs/python/tf/ones", "k": [], "r": "master", "t": "tf.ones"}, {"p": "/versions/master/api_docs/python/tf/ones_initializer", "k": ["__call__", "__init__", "from_config", "get_config"], "r": "master", "t": "tf.ones_initializer"}, {"p": "/versions/master/api_docs/python/tf/ones_like", "k": [], "r": "master", "t": "tf.ones_like"}, {"p": "/versions/master/api_docs/python/tf/op_scope", "k": [], "r": "master", "t": "tf.op_scope"}, {"p": "/versions/master/api_docs/python/tf/orthogonal_initializer", "k": ["__call__", "__init__", "from_config", "get_config"], "r": "master", "t": "tf.orthogonal_initializer"}, {"p": "/versions/master/api_docs/python/tf/pad", "k": [], "r": "master", "t": "tf.pad"}, {"p": "/versions/master/api_docs/python/tf/parallel_stack", "k": [], "r": "master", "t": "tf.parallel_stack"}, {"p": "/versions/master/api_docs/python/tf/parse_example", "k": [], "r": "master", "t": "tf.parse_example"}, {"p": "/versions/master/api_docs/python/tf/parse_single_example", "k": [], "r": "master", "t": "tf.parse_single_example"}, {"p": "/versions/master/api_docs/python/tf/parse_single_sequence_example", "k": [], "r": "master", "t": "tf.parse_single_sequence_example"}, {"p": "/versions/master/api_docs/python/tf/parse_tensor", "k": [], "r": "master", "t": "tf.parse_tensor"}, {"p": "/versions/master/api_docs/python/tf/placeholder", "k": [], "r": "master", "t": "tf.placeholder"}, {"p": "/versions/master/api_docs/python/tf/placeholder_with_default", "k": [], "r": "master", "t": "tf.placeholder_with_default"}, {"p": "/versions/master/api_docs/python/tf/polygamma", "k": [], "r": "master", "t": "tf.polygamma"}, {"p": "/versions/master/api_docs/python/tf/pow", "k": [], "r": "master", "t": "tf.pow"}, {"p": "/versions/master/api_docs/python/tf/profiler", "k": [], "r": "master", "t": "tf.profiler"}, {"p": "/versions/master/api_docs/python/tf/profiler/AdviceProto", "k": ["Checker", "CheckersEntry"], "r": "master", "t": "tf.profiler.AdviceProto"}, {"p": "/versions/master/api_docs/python/tf/profiler/AdviceProto/Checker", "k": [], "r": "master", "t": "tf.profiler.AdviceProto.Checker"}, {"p": "/versions/master/api_docs/python/tf/profiler/AdviceProto/CheckersEntry", "k": [], "r": "master", "t": "tf.profiler.AdviceProto.CheckersEntry"}, {"p": "/versions/master/api_docs/python/tf/profiler/GraphNodeProto", "k": ["InputShapesEntry"], "r": "master", "t": "tf.profiler.GraphNodeProto"}, {"p": "/versions/master/api_docs/python/tf/profiler/GraphNodeProto/InputShapesEntry", "k": [], "r": "master", "t": "tf.profiler.GraphNodeProto.InputShapesEntry"}, {"p": "/versions/master/api_docs/python/tf/profiler/MultiGraphNodeProto", "k": [], "r": "master", "t": "tf.profiler.MultiGraphNodeProto"}, {"p": "/versions/master/api_docs/python/tf/profiler/OpLogProto", "k": ["IdToStringEntry"], "r": "master", "t": "tf.profiler.OpLogProto"}, {"p": "/versions/master/api_docs/python/tf/profiler/OpLogProto/IdToStringEntry", "k": [], "r": "master", "t": "tf.profiler.OpLogProto.IdToStringEntry"}, {"p": "/versions/master/api_docs/python/tf/profiler/ProfileOptionBuilder", "k": ["__init__", "account_displayed_op_only", "build", "float_operation", "order_by", "select", "time_and_memory", "trainable_variables_parameter", "with_accounted_types", "with_empty_output", "with_file_output", "with_max_depth", "with_min_execution_time", "with_min_float_operations", "with_min_memory", "with_min_occurrence", "with_min_parameters", "with_node_names", "with_pprof_output", "with_stdout_output", "with_step", "with_timeline_output"], "r": "master", "t": "tf.profiler.ProfileOptionBuilder"}, {"p": "/versions/master/api_docs/python/tf/profiler/Profiler", "k": ["__init__", "add_step", "advise", "profile_graph", "profile_name_scope", "profile_operations", "profile_python", "serialize_to_string"], "r": "master", "t": "tf.profiler.Profiler"}, {"p": "/versions/master/api_docs/python/tf/profiler/advise", "k": [], "r": "master", "t": "tf.profiler.advise"}, {"p": "/versions/master/api_docs/python/tf/profiler/profile", "k": [], "r": "master", "t": "tf.profiler.profile"}, {"p": "/versions/master/api_docs/python/tf/profiler/write_op_log", "k": [], "r": "master", "t": "tf.profiler.write_op_log"}, {"p": "/versions/master/api_docs/python/tf/py_func", "k": [], "r": "master", "t": "tf.py_func"}, {"p": "/versions/master/api_docs/python/tf/python_io", "k": [], "r": "master", "t": "tf.python_io"}, {"p": "/versions/master/api_docs/python/tf/python_io/TFRecordCompressionType", "k": ["GZIP", "NONE", "ZLIB"], "r": "master", "t": "tf.python_io.TFRecordCompressionType"}, {"p": "/versions/master/api_docs/python/tf/python_io/TFRecordOptions", "k": ["__init__", "get_compression_type_string", "compression_type_map"], "r": "master", "t": "tf.python_io.TFRecordOptions"}, {"p": "/versions/master/api_docs/python/tf/python_io/TFRecordWriter", "k": ["__enter__", "__exit__", "__init__", "close", "flush", "write"], "r": "master", "t": "tf.python_io.TFRecordWriter"}, {"p": "/versions/master/api_docs/python/tf/python_io/tf_record_iterator", "k": [], "r": "master", "t": "tf.python_io.tf_record_iterator"}, {"p": "/versions/master/api_docs/python/tf/pywrap_tensorflow", "k": [], "r": "master", "t": "tf.pywrap_tensorflow"}, {"p": "/versions/master/api_docs/python/tf/qr", "k": [], "r": "master", "t": "tf.qr"}, {"p": "/versions/master/api_docs/python/tf/quantize", "k": [], "r": "master", "t": "tf.quantize"}, {"p": "/versions/master/api_docs/python/tf/quantize_v2", "k": [], "r": "master", "t": "tf.quantize_v2"}, {"p": "/versions/master/api_docs/python/tf/quantized_concat", "k": [], "r": "master", "t": "tf.quantized_concat"}, {"p": "/versions/master/api_docs/python/tf/random_crop", "k": [], "r": "master", "t": "tf.random_crop"}, {"p": "/versions/master/api_docs/python/tf/random_gamma", "k": [], "r": "master", "t": "tf.random_gamma"}, {"p": "/versions/master/api_docs/python/tf/random_normal", "k": [], "r": "master", "t": "tf.random_normal"}, {"p": "/versions/master/api_docs/python/tf/random_normal_initializer", "k": ["__call__", "__init__", "from_config", "get_config"], "r": "master", "t": "tf.random_normal_initializer"}, {"p": "/versions/master/api_docs/python/tf/random_poisson", "k": [], "r": "master", "t": "tf.random_poisson"}, {"p": "/versions/master/api_docs/python/tf/random_shuffle", "k": [], "r": "master", "t": "tf.random_shuffle"}, {"p": "/versions/master/api_docs/python/tf/random_uniform", "k": [], "r": "master", "t": "tf.random_uniform"}, {"p": "/versions/master/api_docs/python/tf/random_uniform_initializer", "k": ["__call__", "__init__", "from_config", "get_config"], "r": "master", "t": "tf.random_uniform_initializer"}, {"p": "/versions/master/api_docs/python/tf/range", "k": [], "r": "master", "t": "tf.range"}, {"p": "/versions/master/api_docs/python/tf/rank", "k": [], "r": "master", "t": "tf.rank"}, {"p": "/versions/master/api_docs/python/tf/read_file", "k": [], "r": "master", "t": "tf.read_file"}, {"p": "/versions/master/api_docs/python/tf/real", "k": [], "r": "master", "t": "tf.real"}, {"p": "/versions/master/api_docs/python/tf/realdiv", "k": [], "r": "master", "t": "tf.realdiv"}, {"p": "/versions/master/api_docs/python/tf/reciprocal", "k": [], "r": "master", "t": "tf.reciprocal"}, {"p": "/versions/master/api_docs/python/tf/reduce_all", "k": [], "r": "master", "t": "tf.reduce_all"}, {"p": "/versions/master/api_docs/python/tf/reduce_any", "k": [], "r": "master", "t": "tf.reduce_any"}, {"p": "/versions/master/api_docs/python/tf/reduce_join", "k": [], "r": "master", "t": "tf.reduce_join"}, {"p": "/versions/master/api_docs/python/tf/reduce_logsumexp", "k": [], "r": "master", "t": "tf.reduce_logsumexp"}, {"p": "/versions/master/api_docs/python/tf/reduce_max", "k": [], "r": "master", "t": "tf.reduce_max"}, {"p": "/versions/master/api_docs/python/tf/reduce_mean", "k": [], "r": "master", "t": "tf.reduce_mean"}, {"p": "/versions/master/api_docs/python/tf/reduce_min", "k": [], "r": "master", "t": "tf.reduce_min"}, {"p": "/versions/master/api_docs/python/tf/reduce_prod", "k": [], "r": "master", "t": "tf.reduce_prod"}, {"p": "/versions/master/api_docs/python/tf/reduce_sum", "k": [], "r": "master", "t": "tf.reduce_sum"}, {"p": "/versions/master/api_docs/python/tf/regex_replace", "k": [], "r": "master", "t": "tf.regex_replace"}, {"p": "/versions/master/api_docs/python/tf/register_tensor_conversion_function", "k": [], "r": "master", "t": "tf.register_tensor_conversion_function"}, {"p": "/versions/master/api_docs/python/tf/report_uninitialized_variables", "k": [], "r": "master", "t": "tf.report_uninitialized_variables"}, {"p": "/versions/master/api_docs/python/tf/required_space_to_batch_paddings", "k": [], "r": "master", "t": "tf.required_space_to_batch_paddings"}, {"p": "/versions/master/api_docs/python/tf/reset_default_graph", "k": [], "r": "master", "t": "tf.reset_default_graph"}, {"p": "/versions/master/api_docs/python/tf/reshape", "k": [], "r": "master", "t": "tf.reshape"}, {"p": "/versions/master/api_docs/python/tf/resource_loader", "k": [], "r": "master", "t": "tf.resource_loader"}, {"p": "/versions/master/api_docs/python/tf/resource_loader/get_data_files_path", "k": [], "r": "master", "t": "tf.resource_loader.get_data_files_path"}, {"p": "/versions/master/api_docs/python/tf/resource_loader/get_path_to_datafile", "k": [], "r": "master", "t": "tf.resource_loader.get_path_to_datafile"}, {"p": "/versions/master/api_docs/python/tf/resource_loader/get_root_dir_with_all_resources", "k": [], "r": "master", "t": "tf.resource_loader.get_root_dir_with_all_resources"}, {"p": "/versions/master/api_docs/python/tf/resource_loader/load_resource", "k": [], "r": "master", "t": "tf.resource_loader.load_resource"}, {"p": "/versions/master/api_docs/python/tf/resource_loader/readahead_file_path", "k": [], "r": "master", "t": "tf.resource_loader.readahead_file_path"}, {"p": "/versions/master/api_docs/python/tf/reverse", "k": [], "r": "master", "t": "tf.reverse"}, {"p": "/versions/master/api_docs/python/tf/reverse_sequence", "k": [], "r": "master", "t": "tf.reverse_sequence"}, {"p": "/versions/master/api_docs/python/tf/reverse_v2", "k": [], "r": "master", "t": "tf.reverse_v2"}, {"p": "/versions/master/api_docs/python/tf/rint", "k": [], "r": "master", "t": "tf.rint"}, {"p": "/versions/master/api_docs/python/tf/round", "k": [], "r": "master", "t": "tf.round"}, {"p": "/versions/master/api_docs/python/tf/rsqrt", "k": [], "r": "master", "t": "tf.rsqrt"}, {"p": "/versions/master/api_docs/python/tf/saturate_cast", "k": [], "r": "master", "t": "tf.saturate_cast"}, {"p": "/versions/master/api_docs/python/tf/saved_model", "k": [], "r": "master", "t": "tf.saved_model"}, {"p": "/versions/master/api_docs/python/tf/saved_model/builder", "k": [], "r": "master", "t": "tf.saved_model.builder"}, {"p": "/versions/master/api_docs/python/tf/saved_model/builder/SavedModelBuilder", "k": ["__init__", "add_meta_graph", "add_meta_graph_and_variables", "save"], "r": "master", "t": "tf.saved_model.builder.SavedModelBuilder"}, {"p": "/versions/master/api_docs/python/tf/saved_model/constants", "k": ["ASSETS_DIRECTORY", "ASSETS_KEY", "LEGACY_INIT_OP_KEY", "MAIN_OP_KEY", "SAVED_MODEL_FILENAME_PB", "SAVED_MODEL_FILENAME_PBTXT", "SAVED_MODEL_SCHEMA_VERSION", "VARIABLES_DIRECTORY", "VARIABLES_FILENAME"], "r": "master", "t": "tf.saved_model.constants"}, {"p": "/versions/master/api_docs/python/tf/saved_model/loader", "k": [], "r": "master", "t": "tf.saved_model.loader"}, {"p": "/versions/master/api_docs/python/tf/saved_model/loader/load", "k": [], "r": "master", "t": "tf.saved_model.loader.load"}, {"p": "/versions/master/api_docs/python/tf/saved_model/loader/maybe_saved_model_directory", "k": [], "r": "master", "t": "tf.saved_model.loader.maybe_saved_model_directory"}, {"p": "/versions/master/api_docs/python/tf/saved_model/main_op", "k": [], "r": "master", "t": "tf.saved_model.main_op"}, {"p": "/versions/master/api_docs/python/tf/saved_model/main_op/main_op", "k": [], "r": "master", "t": "tf.saved_model.main_op.main_op"}, {"p": "/versions/master/api_docs/python/tf/saved_model/main_op/main_op_with_restore", "k": [], "r": "master", "t": "tf.saved_model.main_op.main_op_with_restore"}, {"p": "/versions/master/api_docs/python/tf/saved_model/signature_constants", "k": ["CLASSIFY_INPUTS", "CLASSIFY_METHOD_NAME", "CLASSIFY_OUTPUT_CLASSES", "CLASSIFY_OUTPUT_SCORES", "DEFAULT_SERVING_SIGNATURE_DEF_KEY", "PREDICT_INPUTS", "PREDICT_METHOD_NAME", "PREDICT_OUTPUTS", "REGRESS_INPUTS", "REGRESS_METHOD_NAME", "REGRESS_OUTPUTS"], "r": "master", "t": "tf.saved_model.signature_constants"}, {"p": "/versions/master/api_docs/python/tf/saved_model/signature_def_utils", "k": [], "r": "master", "t": "tf.saved_model.signature_def_utils"}, {"p": "/versions/master/api_docs/python/tf/saved_model/signature_def_utils/build_signature_def", "k": [], "r": "master", "t": "tf.saved_model.signature_def_utils.build_signature_def"}, {"p": "/versions/master/api_docs/python/tf/saved_model/signature_def_utils/classification_signature_def", "k": [], "r": "master", "t": "tf.saved_model.signature_def_utils.classification_signature_def"}, {"p": "/versions/master/api_docs/python/tf/saved_model/signature_def_utils/is_valid_signature", "k": [], "r": "master", "t": "tf.saved_model.signature_def_utils.is_valid_signature"}, {"p": "/versions/master/api_docs/python/tf/saved_model/signature_def_utils/predict_signature_def", "k": [], "r": "master", "t": "tf.saved_model.signature_def_utils.predict_signature_def"}, {"p": "/versions/master/api_docs/python/tf/saved_model/signature_def_utils/regression_signature_def", "k": [], "r": "master", "t": "tf.saved_model.signature_def_utils.regression_signature_def"}, {"p": "/versions/master/api_docs/python/tf/saved_model/simple_save", "k": [], "r": "master", "t": "tf.saved_model.simple_save"}, {"p": "/versions/master/api_docs/python/tf/saved_model/tag_constants", "k": ["GPU", "SERVING", "TPU", "TRAINING"], "r": "master", "t": "tf.saved_model.tag_constants"}, {"p": "/versions/master/api_docs/python/tf/saved_model/utils", "k": [], "r": "master", "t": "tf.saved_model.utils"}, {"p": "/versions/master/api_docs/python/tf/saved_model/utils/build_tensor_info", "k": [], "r": "master", "t": "tf.saved_model.utils.build_tensor_info"}, {"p": "/versions/master/api_docs/python/tf/saved_model/utils/get_tensor_from_tensor_info", "k": [], "r": "master", "t": "tf.saved_model.utils.get_tensor_from_tensor_info"}, {"p": "/versions/master/api_docs/python/tf/scalar_mul", "k": [], "r": "master", "t": "tf.scalar_mul"}, {"p": "/versions/master/api_docs/python/tf/scan", "k": [], "r": "master", "t": "tf.scan"}, {"p": "/versions/master/api_docs/python/tf/scatter_add", "k": [], "r": "master", "t": "tf.scatter_add"}, {"p": "/versions/master/api_docs/python/tf/scatter_div", "k": [], "r": "master", "t": "tf.scatter_div"}, {"p": "/versions/master/api_docs/python/tf/scatter_max", "k": [], "r": "master", "t": "tf.scatter_max"}, {"p": "/versions/master/api_docs/python/tf/scatter_min", "k": [], "r": "master", "t": "tf.scatter_min"}, {"p": "/versions/master/api_docs/python/tf/scatter_mul", "k": [], "r": "master", "t": "tf.scatter_mul"}, {"p": "/versions/master/api_docs/python/tf/scatter_nd", "k": [], "r": "master", "t": "tf.scatter_nd"}, {"p": "/versions/master/api_docs/python/tf/scatter_nd_add", "k": [], "r": "master", "t": "tf.scatter_nd_add"}, {"p": "/versions/master/api_docs/python/tf/scatter_nd_sub", "k": [], "r": "master", "t": "tf.scatter_nd_sub"}, {"p": "/versions/master/api_docs/python/tf/scatter_nd_update", "k": [], "r": "master", "t": "tf.scatter_nd_update"}, {"p": "/versions/master/api_docs/python/tf/scatter_sub", "k": [], "r": "master", "t": "tf.scatter_sub"}, {"p": "/versions/master/api_docs/python/tf/scatter_update", "k": [], "r": "master", "t": "tf.scatter_update"}, {"p": "/versions/master/api_docs/python/tf/segment_max", "k": [], "r": "master", "t": "tf.segment_max"}, {"p": "/versions/master/api_docs/python/tf/segment_mean", "k": [], "r": "master", "t": "tf.segment_mean"}, {"p": "/versions/master/api_docs/python/tf/segment_min", "k": [], "r": "master", "t": "tf.segment_min"}, {"p": "/versions/master/api_docs/python/tf/segment_prod", "k": [], "r": "master", "t": "tf.segment_prod"}, {"p": "/versions/master/api_docs/python/tf/segment_sum", "k": [], "r": "master", "t": "tf.segment_sum"}, {"p": "/versions/master/api_docs/python/tf/self_adjoint_eig", "k": [], "r": "master", "t": "tf.self_adjoint_eig"}, {"p": "/versions/master/api_docs/python/tf/self_adjoint_eigvals", "k": [], "r": "master", "t": "tf.self_adjoint_eigvals"}, {"p": "/versions/master/api_docs/python/tf/sequence_mask", "k": [], "r": "master", "t": "tf.sequence_mask"}, {"p": "/versions/master/api_docs/python/tf/serialize_many_sparse", "k": [], "r": "master", "t": "tf.serialize_many_sparse"}, {"p": "/versions/master/api_docs/python/tf/serialize_sparse", "k": [], "r": "master", "t": "tf.serialize_sparse"}, {"p": "/versions/master/api_docs/python/tf/serialize_tensor", "k": [], "r": "master", "t": "tf.serialize_tensor"}, {"p": "/versions/master/api_docs/python/tf/set_random_seed", "k": [], "r": "master", "t": "tf.set_random_seed"}, {"p": "/versions/master/api_docs/python/tf/setdiff1d", "k": [], "r": "master", "t": "tf.setdiff1d"}, {"p": "/versions/master/api_docs/python/tf/sets", "k": [], "r": "master", "t": "tf.sets"}, {"p": "/versions/master/api_docs/python/tf/sets/set_difference", "k": [], "r": "master", "t": "tf.sets.set_difference"}, {"p": "/versions/master/api_docs/python/tf/sets/set_intersection", "k": [], "r": "master", "t": "tf.sets.set_intersection"}, {"p": "/versions/master/api_docs/python/tf/sets/set_size", "k": [], "r": "master", "t": "tf.sets.set_size"}, {"p": "/versions/master/api_docs/python/tf/sets/set_union", "k": [], "r": "master", "t": "tf.sets.set_union"}, {"p": "/versions/master/api_docs/python/tf/shape", "k": [], "r": "master", "t": "tf.shape"}, {"p": "/versions/master/api_docs/python/tf/shape_n", "k": [], "r": "master", "t": "tf.shape_n"}, {"p": "/versions/master/api_docs/python/tf/sigmoid", "k": [], "r": "master", "t": "tf.sigmoid"}, {"p": "/versions/master/api_docs/python/tf/sign", "k": [], "r": "master", "t": "tf.sign"}, {"p": "/versions/master/api_docs/python/tf/sin", "k": [], "r": "master", "t": "tf.sin"}, {"p": "/versions/master/api_docs/python/tf/sinh", "k": [], "r": "master", "t": "tf.sinh"}, {"p": "/versions/master/api_docs/python/tf/size", "k": [], "r": "master", "t": "tf.size"}, {"p": "/versions/master/api_docs/python/tf/slice", "k": [], "r": "master", "t": "tf.slice"}, {"p": "/versions/master/api_docs/python/tf/space_to_batch", "k": [], "r": "master", "t": "tf.space_to_batch"}, {"p": "/versions/master/api_docs/python/tf/space_to_batch_nd", "k": [], "r": "master", "t": "tf.space_to_batch_nd"}, {"p": "/versions/master/api_docs/python/tf/space_to_depth", "k": [], "r": "master", "t": "tf.space_to_depth"}, {"p": "/versions/master/api_docs/python/tf/sparse_add", "k": [], "r": "master", "t": "tf.sparse_add"}, {"p": "/versions/master/api_docs/python/tf/sparse_concat", "k": [], "r": "master", "t": "tf.sparse_concat"}, {"p": "/versions/master/api_docs/python/tf/sparse_fill_empty_rows", "k": [], "r": "master", "t": "tf.sparse_fill_empty_rows"}, {"p": "/versions/master/api_docs/python/tf/sparse_mask", "k": [], "r": "master", "t": "tf.sparse_mask"}, {"p": "/versions/master/api_docs/python/tf/sparse_matmul", "k": [], "r": "master", "t": "tf.sparse_matmul"}, {"p": "/versions/master/api_docs/python/tf/sparse_maximum", "k": [], "r": "master", "t": "tf.sparse_maximum"}, {"p": "/versions/master/api_docs/python/tf/sparse_merge", "k": [], "r": "master", "t": "tf.sparse_merge"}, {"p": "/versions/master/api_docs/python/tf/sparse_minimum", "k": [], "r": "master", "t": "tf.sparse_minimum"}, {"p": "/versions/master/api_docs/python/tf/sparse_placeholder", "k": [], "r": "master", "t": "tf.sparse_placeholder"}, {"p": "/versions/master/api_docs/python/tf/sparse_reduce_max", "k": [], "r": "master", "t": "tf.sparse_reduce_max"}, {"p": "/versions/master/api_docs/python/tf/sparse_reduce_max_sparse", "k": [], "r": "master", "t": "tf.sparse_reduce_max_sparse"}, {"p": "/versions/master/api_docs/python/tf/sparse_reduce_sum", "k": [], "r": "master", "t": "tf.sparse_reduce_sum"}, {"p": "/versions/master/api_docs/python/tf/sparse_reduce_sum_sparse", "k": [], "r": "master", "t": "tf.sparse_reduce_sum_sparse"}, {"p": "/versions/master/api_docs/python/tf/sparse_reorder", "k": [], "r": "master", "t": "tf.sparse_reorder"}, {"p": "/versions/master/api_docs/python/tf/sparse_reset_shape", "k": [], "r": "master", "t": "tf.sparse_reset_shape"}, {"p": "/versions/master/api_docs/python/tf/sparse_reshape", "k": [], "r": "master", "t": "tf.sparse_reshape"}, {"p": "/versions/master/api_docs/python/tf/sparse_retain", "k": [], "r": "master", "t": "tf.sparse_retain"}, {"p": "/versions/master/api_docs/python/tf/sparse_segment_mean", "k": [], "r": "master", "t": "tf.sparse_segment_mean"}, {"p": "/versions/master/api_docs/python/tf/sparse_segment_sqrt_n", "k": [], "r": "master", "t": "tf.sparse_segment_sqrt_n"}, {"p": "/versions/master/api_docs/python/tf/sparse_segment_sum", "k": [], "r": "master", "t": "tf.sparse_segment_sum"}, {"p": "/versions/master/api_docs/python/tf/sparse_slice", "k": [], "r": "master", "t": "tf.sparse_slice"}, {"p": "/versions/master/api_docs/python/tf/sparse_softmax", "k": [], "r": "master", "t": "tf.sparse_softmax"}, {"p": "/versions/master/api_docs/python/tf/sparse_split", "k": [], "r": "master", "t": "tf.sparse_split"}, {"p": "/versions/master/api_docs/python/tf/sparse_tensor_dense_matmul", "k": [], "r": "master", "t": "tf.sparse_tensor_dense_matmul"}, {"p": "/versions/master/api_docs/python/tf/sparse_tensor_to_dense", "k": [], "r": "master", "t": "tf.sparse_tensor_to_dense"}, {"p": "/versions/master/api_docs/python/tf/sparse_to_dense", "k": [], "r": "master", "t": "tf.sparse_to_dense"}, {"p": "/versions/master/api_docs/python/tf/sparse_to_indicator", "k": [], "r": "master", "t": "tf.sparse_to_indicator"}, {"p": "/versions/master/api_docs/python/tf/sparse_transpose", "k": [], "r": "master", "t": "tf.sparse_transpose"}, {"p": "/versions/master/api_docs/python/tf/spectral", "k": [], "r": "master", "t": "tf.spectral"}, {"p": "/versions/master/api_docs/python/tf/spectral/dct", "k": [], "r": "master", "t": "tf.spectral.dct"}, {"p": "/versions/master/api_docs/python/tf/spectral/irfft", "k": [], "r": "master", "t": "tf.spectral.irfft"}, {"p": "/versions/master/api_docs/python/tf/spectral/irfft2d", "k": [], "r": "master", "t": "tf.spectral.irfft2d"}, {"p": "/versions/master/api_docs/python/tf/spectral/irfft3d", "k": [], "r": "master", "t": "tf.spectral.irfft3d"}, {"p": "/versions/master/api_docs/python/tf/spectral/rfft", "k": [], "r": "master", "t": "tf.spectral.rfft"}, {"p": "/versions/master/api_docs/python/tf/spectral/rfft2d", "k": [], "r": "master", "t": "tf.spectral.rfft2d"}, {"p": "/versions/master/api_docs/python/tf/spectral/rfft3d", "k": [], "r": "master", "t": "tf.spectral.rfft3d"}, {"p": "/versions/master/api_docs/python/tf/split", "k": [], "r": "master", "t": "tf.split"}, {"p": "/versions/master/api_docs/python/tf/sqrt", "k": [], "r": "master", "t": "tf.sqrt"}, {"p": "/versions/master/api_docs/python/tf/square", "k": [], "r": "master", "t": "tf.square"}, {"p": "/versions/master/api_docs/python/tf/squared_difference", "k": [], "r": "master", "t": "tf.squared_difference"}, {"p": "/versions/master/api_docs/python/tf/squeeze", "k": [], "r": "master", "t": "tf.squeeze"}, {"p": "/versions/master/api_docs/python/tf/stack", "k": [], "r": "master", "t": "tf.stack"}, {"p": "/versions/master/api_docs/python/tf/stop_gradient", "k": [], "r": "master", "t": "tf.stop_gradient"}, {"p": "/versions/master/api_docs/python/tf/strided_slice", "k": [], "r": "master", "t": "tf.strided_slice"}, {"p": "/versions/master/api_docs/python/tf/string_join", "k": [], "r": "master", "t": "tf.string_join"}, {"p": "/versions/master/api_docs/python/tf/string_split", "k": [], "r": "master", "t": "tf.string_split"}, {"p": "/versions/master/api_docs/python/tf/string_to_hash_bucket", "k": [], "r": "master", "t": "tf.string_to_hash_bucket"}, {"p": "/versions/master/api_docs/python/tf/string_to_hash_bucket_fast", "k": [], "r": "master", "t": "tf.string_to_hash_bucket_fast"}, {"p": "/versions/master/api_docs/python/tf/string_to_hash_bucket_strong", "k": [], "r": "master", "t": "tf.string_to_hash_bucket_strong"}, {"p": "/versions/master/api_docs/python/tf/string_to_number", "k": [], "r": "master", "t": "tf.string_to_number"}, {"p": "/versions/master/api_docs/python/tf/substr", "k": [], "r": "master", "t": "tf.substr"}, {"p": "/versions/master/api_docs/python/tf/subtract", "k": [], "r": "master", "t": "tf.subtract"}, {"p": "/versions/master/api_docs/python/tf/summary", "k": [], "r": "master", "t": "tf.summary"}, {"p": "/versions/master/api_docs/python/tf/summary/FileWriter", "k": ["__enter__", "__exit__", "__init__", "add_event", "add_graph", "add_meta_graph", "add_run_metadata", "add_session_log", "add_summary", "close", "flush", "get_logdir", "reopen"], "r": "master", "t": "tf.summary.FileWriter"}, {"p": "/versions/master/api_docs/python/tf/summary/FileWriterCache", "k": ["clear", "get"], "r": "master", "t": "tf.summary.FileWriterCache"}, {"p": "/versions/master/api_docs/python/tf/summary/SummaryDescription", "k": [], "r": "master", "t": "tf.summary.SummaryDescription"}, {"p": "/versions/master/api_docs/python/tf/summary/TaggedRunMetadata", "k": [], "r": "master", "t": "tf.summary.TaggedRunMetadata"}, {"p": "/versions/master/api_docs/python/tf/summary/audio", "k": [], "r": "master", "t": "tf.summary.audio"}, {"p": "/versions/master/api_docs/python/tf/summary/get_summary_description", "k": [], "r": "master", "t": "tf.summary.get_summary_description"}, {"p": "/versions/master/api_docs/python/tf/summary/histogram", "k": [], "r": "master", "t": "tf.summary.histogram"}, {"p": "/versions/master/api_docs/python/tf/summary/image", "k": [], "r": "master", "t": "tf.summary.image"}, {"p": "/versions/master/api_docs/python/tf/summary/merge", "k": [], "r": "master", "t": "tf.summary.merge"}, {"p": "/versions/master/api_docs/python/tf/summary/merge_all", "k": [], "r": "master", "t": "tf.summary.merge_all"}, {"p": "/versions/master/api_docs/python/tf/summary/scalar", "k": [], "r": "master", "t": "tf.summary.scalar"}, {"p": "/versions/master/api_docs/python/tf/summary/tensor_summary", "k": [], "r": "master", "t": "tf.summary.tensor_summary"}, {"p": "/versions/master/api_docs/python/tf/summary/text", "k": [], "r": "master", "t": "tf.summary.text"}, {"p": "/versions/master/api_docs/python/tf/svd", "k": [], "r": "master", "t": "tf.svd"}, {"p": "/versions/master/api_docs/python/tf/sysconfig", "k": [], "r": "master", "t": "tf.sysconfig"}, {"p": "/versions/master/api_docs/python/tf/sysconfig/get_compile_flags", "k": [], "r": "master", "t": "tf.sysconfig.get_compile_flags"}, {"p": "/versions/master/api_docs/python/tf/sysconfig/get_include", "k": [], "r": "master", "t": "tf.sysconfig.get_include"}, {"p": "/versions/master/api_docs/python/tf/sysconfig/get_lib", "k": [], "r": "master", "t": "tf.sysconfig.get_lib"}, {"p": "/versions/master/api_docs/python/tf/sysconfig/get_link_flags", "k": [], "r": "master", "t": "tf.sysconfig.get_link_flags"}, {"p": "/versions/master/api_docs/python/tf/tables_initializer", "k": [], "r": "master", "t": "tf.tables_initializer"}, {"p": "/versions/master/api_docs/python/tf/tan", "k": [], "r": "master", "t": "tf.tan"}, {"p": "/versions/master/api_docs/python/tf/tanh", "k": [], "r": "master", "t": "tf.tanh"}, {"p": "/versions/master/api_docs/python/tf/tensordot", "k": [], "r": "master", "t": "tf.tensordot"}, {"p": "/versions/master/api_docs/python/tf/test", "k": [], "r": "master", "t": "tf.test"}, {"p": "/versions/master/api_docs/python/tf/test/Benchmark", "k": ["is_abstract", "report_benchmark", "run_op_benchmark"], "r": "master", "t": "tf.test.Benchmark"}, {"p": "/versions/master/api_docs/python/tf/test/StubOutForTesting", "k": ["CleanUp", "Set", "SmartSet", "SmartUnsetAll", "UnsetAll", "__del__", "__enter__", "__exit__", "__init__"], "r": "master", "t": "tf.test.StubOutForTesting"}, {"p": "/versions/master/api_docs/python/tf/test/TestCase", "k": ["failureException", "__call__", "__eq__", "__init__", "__ne__", "addCleanup", "addTypeEqualityFunc", "assertAllClose", "assertAllCloseAccordingToType", "assertAllEqual", "assertAlmostEqual", "assertAlmostEquals", "assertArrayNear", "assertDeviceEqual", "assertDictContainsSubset", "assertDictEqual", "assertEqual", "assertEquals", "assertFalse", "assertGreater", "assertGreaterEqual", "assertIn", "assertIs", "assertIsInstance", "assertIsNone", "assertIsNot", "assertIsNotNone", "assertItemsEqual", "assertLess", "assertLessEqual", "assertListEqual", "assertMultiLineEqual", "assertNDArrayNear", "assertNear", "assertNotAlmostEqual", "assertNotAlmostEquals", "assertNotEqual", "assertNotEquals", "assertNotIn", "assertNotIsInstance", "assertNotRegexpMatches", "assertProtoEquals", "assertProtoEqualsVersion", "assertRaises", "assertRaisesOpError", "assertRaisesRegexp", "assertRaisesWithPredicateMatch", "assertRegexpMatches", "assertSequenceEqual", "assertSetEqual", "assertShapeEqual", "assertStartsWith", "assertTrue", "assertTupleEqual", "assert_", "checkedThread", "countTestCases", "debug", "defaultTestResult", "doCleanups", "evaluate", "fail", "failIf", "failIfAlmostEqual", "failIfEqual", "failUnless", "failUnlessAlmostEqual", "failUnlessEqual", "failUnlessRaises", "get_temp_dir", "id", "run", "setUp", "setUpClass", "shortDescription", "skipTest", "tearDown", "tearDownClass", "test_session", "longMessage", "maxDiff"], "r": "master", "t": "tf.test.TestCase"}, {"p": "/versions/master/api_docs/python/tf/test/TestCase/failureException", "k": [], "r": "master", "t": "tf.test.TestCase.failureException"}, {"p": "/versions/master/api_docs/python/tf/test/assert_equal_graph_def", "k": [], "r": "master", "t": "tf.test.assert_equal_graph_def"}, {"p": "/versions/master/api_docs/python/tf/test/compute_gradient", "k": [], "r": "master", "t": "tf.test.compute_gradient"}, {"p": "/versions/master/api_docs/python/tf/test/compute_gradient_error", "k": [], "r": "master", "t": "tf.test.compute_gradient_error"}, {"p": "/versions/master/api_docs/python/tf/test/create_local_cluster", "k": [], "r": "master", "t": "tf.test.create_local_cluster"}, {"p": "/versions/master/api_docs/python/tf/test/get_temp_dir", "k": [], "r": "master", "t": "tf.test.get_temp_dir"}, {"p": "/versions/master/api_docs/python/tf/test/gpu_device_name", "k": [], "r": "master", "t": "tf.test.gpu_device_name"}, {"p": "/versions/master/api_docs/python/tf/test/is_built_with_cuda", "k": [], "r": "master", "t": "tf.test.is_built_with_cuda"}, {"p": "/versions/master/api_docs/python/tf/test/is_gpu_available", "k": [], "r": "master", "t": "tf.test.is_gpu_available"}, {"p": "/versions/master/api_docs/python/tf/test/main", "k": [], "r": "master", "t": "tf.test.main"}, {"p": "/versions/master/api_docs/python/tf/test/test_src_dir_path", "k": [], "r": "master", "t": "tf.test.test_src_dir_path"}, {"p": "/versions/master/api_docs/python/tf/tile", "k": [], "r": "master", "t": "tf.tile"}, {"p": "/versions/master/api_docs/python/tf/timestamp", "k": [], "r": "master", "t": "tf.timestamp"}, {"p": "/versions/master/api_docs/python/tf/to_bfloat16", "k": [], "r": "master", "t": "tf.to_bfloat16"}, {"p": "/versions/master/api_docs/python/tf/to_complex128", "k": [], "r": "master", "t": "tf.to_complex128"}, {"p": "/versions/master/api_docs/python/tf/to_complex64", "k": [], "r": "master", "t": "tf.to_complex64"}, {"p": "/versions/master/api_docs/python/tf/to_double", "k": [], "r": "master", "t": "tf.to_double"}, {"p": "/versions/master/api_docs/python/tf/to_float", "k": [], "r": "master", "t": "tf.to_float"}, {"p": "/versions/master/api_docs/python/tf/to_int32", "k": [], "r": "master", "t": "tf.to_int32"}, {"p": "/versions/master/api_docs/python/tf/to_int64", "k": [], "r": "master", "t": "tf.to_int64"}, {"p": "/versions/master/api_docs/python/tf/tools", "k": [], "r": "master", "t": "tf.tools"}, {"p": "/versions/master/api_docs/python/tf/trace", "k": [], "r": "master", "t": "tf.trace"}, {"p": "/versions/master/api_docs/python/tf/train", "k": [], "r": "master", "t": "tf.train"}, {"p": "/versions/master/api_docs/python/tf/train/AdadeltaOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "master", "t": "tf.train.AdadeltaOptimizer"}, {"p": "/versions/master/api_docs/python/tf/train/AdagradDAOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "master", "t": "tf.train.AdagradDAOptimizer"}, {"p": "/versions/master/api_docs/python/tf/train/AdagradOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "master", "t": "tf.train.AdagradOptimizer"}, {"p": "/versions/master/api_docs/python/tf/train/AdamOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "master", "t": "tf.train.AdamOptimizer"}, {"p": "/versions/master/api_docs/python/tf/train/BytesList", "k": [], "r": "master", "t": "tf.train.BytesList"}, {"p": "/versions/master/api_docs/python/tf/train/CheckpointSaverHook", "k": ["__init__", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "master", "t": "tf.train.CheckpointSaverHook"}, {"p": "/versions/master/api_docs/python/tf/train/CheckpointSaverListener", "k": ["after_save", "before_save", "begin", "end"], "r": "master", "t": "tf.train.CheckpointSaverListener"}, {"p": "/versions/master/api_docs/python/tf/train/ChiefSessionCreator", "k": ["__init__", "create_session"], "r": "master", "t": "tf.train.ChiefSessionCreator"}, {"p": "/versions/master/api_docs/python/tf/train/ClusterDef", "k": [], "r": "master", "t": "tf.train.ClusterDef"}, {"p": "/versions/master/api_docs/python/tf/train/ClusterSpec", "k": ["jobs", "__bool__", "__eq__", "__init__", "__ne__", "__nonzero__", "as_cluster_def", "as_dict", "job_tasks", "num_tasks", "task_address", "task_indices"], "r": "master", "t": "tf.train.ClusterSpec"}, {"p": "/versions/master/api_docs/python/tf/train/Coordinator", "k": ["joined", "__init__", "clear_stop", "join", "raise_requested_exception", "register_thread", "request_stop", "should_stop", "stop_on_exception", "wait_for_stop"], "r": "master", "t": "tf.train.Coordinator"}, {"p": "/versions/master/api_docs/python/tf/train/Example", "k": [], "r": "master", "t": "tf.train.Example"}, {"p": "/versions/master/api_docs/python/tf/train/ExponentialMovingAverage", "k": ["__init__", "apply", "average", "average_name", "variables_to_restore"], "r": "master", "t": "tf.train.ExponentialMovingAverage"}, {"p": "/versions/master/api_docs/python/tf/train/Feature", "k": [], "r": "master", "t": "tf.train.Feature"}, {"p": "/versions/master/api_docs/python/tf/train/FeatureList", "k": [], "r": "master", "t": "tf.train.FeatureList"}, {"p": "/versions/master/api_docs/python/tf/train/FeatureLists", "k": ["FeatureListEntry"], "r": "master", "t": "tf.train.FeatureLists"}, {"p": "/versions/master/api_docs/python/tf/train/FeatureLists/FeatureListEntry", "k": [], "r": "master", "t": "tf.train.FeatureLists.FeatureListEntry"}, {"p": "/versions/master/api_docs/python/tf/train/Features", "k": ["FeatureEntry"], "r": "master", "t": "tf.train.Features"}, {"p": "/versions/master/api_docs/python/tf/train/Features/FeatureEntry", "k": [], "r": "master", "t": "tf.train.Features.FeatureEntry"}, {"p": "/versions/master/api_docs/python/tf/train/FeedFnHook", "k": ["__init__", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "master", "t": "tf.train.FeedFnHook"}, {"p": "/versions/master/api_docs/python/tf/train/FinalOpsHook", "k": ["final_ops_values", "__init__", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "master", "t": "tf.train.FinalOpsHook"}, {"p": "/versions/master/api_docs/python/tf/train/FloatList", "k": [], "r": "master", "t": "tf.train.FloatList"}, {"p": "/versions/master/api_docs/python/tf/train/FtrlOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "master", "t": "tf.train.FtrlOptimizer"}, {"p": "/versions/master/api_docs/python/tf/train/GlobalStepWaiterHook", "k": ["__init__", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "master", "t": "tf.train.GlobalStepWaiterHook"}, {"p": "/versions/master/api_docs/python/tf/train/GradientDescentOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "master", "t": "tf.train.GradientDescentOptimizer"}, {"p": "/versions/master/api_docs/python/tf/train/Int64List", "k": [], "r": "master", "t": "tf.train.Int64List"}, {"p": "/versions/master/api_docs/python/tf/train/JobDef", "k": ["TasksEntry"], "r": "master", "t": "tf.train.JobDef"}, {"p": "/versions/master/api_docs/python/tf/train/JobDef/TasksEntry", "k": [], "r": "master", "t": "tf.train.JobDef.TasksEntry"}, {"p": "/versions/master/api_docs/python/tf/train/LoggingTensorHook", "k": ["__init__", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "master", "t": "tf.train.LoggingTensorHook"}, {"p": "/versions/master/api_docs/python/tf/train/LooperThread", "k": ["daemon", "ident", "name", "__init__", "getName", "isAlive", "isDaemon", "is_alive", "join", "loop", "run", "run_loop", "setDaemon", "setName", "start", "start_loop", "stop_loop"], "r": "master", "t": "tf.train.LooperThread"}, {"p": "/versions/master/api_docs/python/tf/train/MomentumOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "master", "t": "tf.train.MomentumOptimizer"}, {"p": "/versions/master/api_docs/python/tf/train/MonitoredSession", "k": ["StepContext", "graph", "__enter__", "__exit__", "__init__", "close", "run", "run_step_fn", "should_stop"], "r": "master", "t": "tf.train.MonitoredSession"}, {"p": "/versions/master/api_docs/python/tf/train/MonitoredSession/StepContext", "k": ["session", "__init__", "request_stop", "run_with_hooks"], "r": "master", "t": "tf.train.MonitoredSession.StepContext"}, {"p": "/versions/master/api_docs/python/tf/train/MonitoredTrainingSession", "k": [], "r": "master", "t": "tf.train.MonitoredTrainingSession"}, {"p": "/versions/master/api_docs/python/tf/train/NanLossDuringTrainingError", "k": [], "r": "master", "t": "tf.train.NanLossDuringTrainingError"}, {"p": "/versions/master/api_docs/python/tf/train/NanTensorHook", "k": ["__init__", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "master", "t": "tf.train.NanTensorHook"}, {"p": "/versions/master/api_docs/python/tf/train/NewCheckpointReader", "k": [], "r": "master", "t": "tf.train.NewCheckpointReader"}, {"p": "/versions/master/api_docs/python/tf/train/Optimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "master", "t": "tf.train.Optimizer"}, {"p": "/versions/master/api_docs/python/tf/train/ProfilerHook", "k": ["__init__", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "master", "t": "tf.train.ProfilerHook"}, {"p": "/versions/master/api_docs/python/tf/train/ProximalAdagradOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "master", "t": "tf.train.ProximalAdagradOptimizer"}, {"p": "/versions/master/api_docs/python/tf/train/ProximalGradientDescentOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "master", "t": "tf.train.ProximalGradientDescentOptimizer"}, {"p": "/versions/master/api_docs/python/tf/train/QueueRunner", "k": ["cancel_op", "close_op", "enqueue_ops", "exceptions_raised", "name", "queue", "queue_closed_exception_types", "__init__", "create_threads", "from_proto", "to_proto"], "r": "master", "t": "tf.train.QueueRunner"}, {"p": "/versions/master/api_docs/python/tf/train/RMSPropOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "master", "t": "tf.train.RMSPropOptimizer"}, {"p": "/versions/master/api_docs/python/tf/train/Saver", "k": ["last_checkpoints", "__init__", "as_saver_def", "build", "export_meta_graph", "from_proto", "recover_last_checkpoints", "restore", "save", "set_last_checkpoints", "set_last_checkpoints_with_time", "to_proto"], "r": "master", "t": "tf.train.Saver"}, {"p": "/versions/master/api_docs/python/tf/train/SaverDef", "k": ["CheckpointFormatVersion", "LEGACY", "V1", "V2"], "r": "master", "t": "tf.train.SaverDef"}, {"p": "/versions/master/api_docs/python/tf/train/Scaffold", "k": ["init_feed_dict", "init_fn", "init_op", "local_init_op", "ready_for_local_init_op", "ready_op", "saver", "summary_op", "__init__", "finalize", "get_or_default"], "r": "master", "t": "tf.train.Scaffold"}, {"p": "/versions/master/api_docs/python/tf/train/SecondOrStepTimer", "k": ["__init__", "last_triggered_step", "reset", "should_trigger_for_step", "update_last_triggered_step"], "r": "master", "t": "tf.train.SecondOrStepTimer"}, {"p": "/versions/master/api_docs/python/tf/train/SequenceExample", "k": [], "r": "master", "t": "tf.train.SequenceExample"}, {"p": "/versions/master/api_docs/python/tf/train/Server", "k": ["server_def", "target", "__init__", "create_local_server", "join", "start"], "r": "master", "t": "tf.train.Server"}, {"p": "/versions/master/api_docs/python/tf/train/ServerDef", "k": [], "r": "master", "t": "tf.train.ServerDef"}, {"p": "/versions/master/api_docs/python/tf/train/SessionCreator", "k": ["create_session"], "r": "master", "t": "tf.train.SessionCreator"}, {"p": "/versions/master/api_docs/python/tf/train/SessionManager", "k": ["__init__", "prepare_session", "recover_session", "wait_for_session"], "r": "master", "t": "tf.train.SessionManager"}, {"p": "/versions/master/api_docs/python/tf/train/SessionRunArgs", "k": ["feed_dict", "fetches", "options", "__new__"], "r": "master", "t": "tf.train.SessionRunArgs"}, {"p": "/versions/master/api_docs/python/tf/train/SessionRunContext", "k": ["original_args", "session", "stop_requested", "__init__", "request_stop"], "r": "master", "t": "tf.train.SessionRunContext"}, {"p": "/versions/master/api_docs/python/tf/train/SessionRunHook", "k": ["after_create_session", "after_run", "before_run", "begin", "end"], "r": "master", "t": "tf.train.SessionRunHook"}, {"p": "/versions/master/api_docs/python/tf/train/SessionRunValues", "k": ["options", "results", "run_metadata", "__new__"], "r": "master", "t": "tf.train.SessionRunValues"}, {"p": "/versions/master/api_docs/python/tf/train/SingularMonitoredSession", "k": ["StepContext", "graph", "__enter__", "__exit__", "__init__", "close", "raw_session", "run", "run_step_fn", "should_stop"], "r": "master", "t": "tf.train.SingularMonitoredSession"}, {"p": "/versions/master/api_docs/python/tf/train/StepCounterHook", "k": ["__init__", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "master", "t": "tf.train.StepCounterHook"}, {"p": "/versions/master/api_docs/python/tf/train/StopAtStepHook", "k": ["__init__", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "master", "t": "tf.train.StopAtStepHook"}, {"p": "/versions/master/api_docs/python/tf/train/SummarySaverHook", "k": ["__init__", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "master", "t": "tf.train.SummarySaverHook"}, {"p": "/versions/master/api_docs/python/tf/train/Supervisor", "k": ["coord", "global_step", "init_feed_dict", "init_op", "is_chief", "ready_for_local_init_op", "ready_op", "save_model_secs", "save_path", "save_summaries_secs", "saver", "session_manager", "summary_op", "summary_writer", "Loop", "PrepareSession", "RequestStop", "ShouldStop", "StartQueueRunners", "StartStandardServices", "Stop", "StopOnException", "SummaryComputed", "WaitForStop", "__init__", "loop", "managed_session", "prepare_or_wait_for_session", "request_stop", "should_stop", "start_queue_runners", "start_standard_services", "stop", "stop_on_exception", "summary_computed", "wait_for_stop", "USE_DEFAULT"], "r": "master", "t": "tf.train.Supervisor"}, {"p": "/versions/master/api_docs/python/tf/train/SyncReplicasOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_chief_queue_runner", "get_init_tokens_op", "get_name", "get_slot", "get_slot_names", "make_session_run_hook", "minimize", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "master", "t": "tf.train.SyncReplicasOptimizer"}, {"p": "/versions/master/api_docs/python/tf/train/WorkerSessionCreator", "k": ["__init__", "create_session"], "r": "master", "t": "tf.train.WorkerSessionCreator"}, {"p": "/versions/master/api_docs/python/tf/train/add_queue_runner", "k": [], "r": "master", "t": "tf.train.add_queue_runner"}, {"p": "/versions/master/api_docs/python/tf/train/assert_global_step", "k": [], "r": "master", "t": "tf.train.assert_global_step"}, {"p": "/versions/master/api_docs/python/tf/train/basic_train_loop", "k": [], "r": "master", "t": "tf.train.basic_train_loop"}, {"p": "/versions/master/api_docs/python/tf/train/batch", "k": [], "r": "master", "t": "tf.train.batch"}, {"p": "/versions/master/api_docs/python/tf/train/batch_join", "k": [], "r": "master", "t": "tf.train.batch_join"}, {"p": "/versions/master/api_docs/python/tf/train/checkpoint_exists", "k": [], "r": "master", "t": "tf.train.checkpoint_exists"}, {"p": "/versions/master/api_docs/python/tf/train/cosine_decay", "k": [], "r": "master", "t": "tf.train.cosine_decay"}, {"p": "/versions/master/api_docs/python/tf/train/cosine_decay_restarts", "k": [], "r": "master", "t": "tf.train.cosine_decay_restarts"}, {"p": "/versions/master/api_docs/python/tf/train/create_global_step", "k": [], "r": "master", "t": "tf.train.create_global_step"}, {"p": "/versions/master/api_docs/python/tf/train/do_quantize_training_on_graphdef", "k": [], "r": "master", "t": "tf.train.do_quantize_training_on_graphdef"}, {"p": "/versions/master/api_docs/python/tf/train/exponential_decay", "k": [], "r": "master", "t": "tf.train.exponential_decay"}, {"p": "/versions/master/api_docs/python/tf/train/export_meta_graph", "k": [], "r": "master", "t": "tf.train.export_meta_graph"}, {"p": "/versions/master/api_docs/python/tf/train/generate_checkpoint_state_proto", "k": [], "r": "master", "t": "tf.train.generate_checkpoint_state_proto"}, {"p": "/versions/master/api_docs/python/tf/train/get_checkpoint_mtimes", "k": [], "r": "master", "t": "tf.train.get_checkpoint_mtimes"}, {"p": "/versions/master/api_docs/python/tf/train/get_checkpoint_state", "k": [], "r": "master", "t": "tf.train.get_checkpoint_state"}, {"p": "/versions/master/api_docs/python/tf/train/get_global_step", "k": [], "r": "master", "t": "tf.train.get_global_step"}, {"p": "/versions/master/api_docs/python/tf/train/get_or_create_global_step", "k": [], "r": "master", "t": "tf.train.get_or_create_global_step"}, {"p": "/versions/master/api_docs/python/tf/train/global_step", "k": [], "r": "master", "t": "tf.train.global_step"}, {"p": "/versions/master/api_docs/python/tf/train/import_meta_graph", "k": [], "r": "master", "t": "tf.train.import_meta_graph"}, {"p": "/versions/master/api_docs/python/tf/train/init_from_checkpoint", "k": [], "r": "master", "t": "tf.train.init_from_checkpoint"}, {"p": "/versions/master/api_docs/python/tf/train/input_producer", "k": [], "r": "master", "t": "tf.train.input_producer"}, {"p": "/versions/master/api_docs/python/tf/train/inverse_time_decay", "k": [], "r": "master", "t": "tf.train.inverse_time_decay"}, {"p": "/versions/master/api_docs/python/tf/train/latest_checkpoint", "k": [], "r": "master", "t": "tf.train.latest_checkpoint"}, {"p": "/versions/master/api_docs/python/tf/train/limit_epochs", "k": [], "r": "master", "t": "tf.train.limit_epochs"}, {"p": "/versions/master/api_docs/python/tf/train/linear_cosine_decay", "k": [], "r": "master", "t": "tf.train.linear_cosine_decay"}, {"p": "/versions/master/api_docs/python/tf/train/list_variables", "k": [], "r": "master", "t": "tf.train.list_variables"}, {"p": "/versions/master/api_docs/python/tf/train/load_checkpoint", "k": [], "r": "master", "t": "tf.train.load_checkpoint"}, {"p": "/versions/master/api_docs/python/tf/train/load_variable", "k": [], "r": "master", "t": "tf.train.load_variable"}, {"p": "/versions/master/api_docs/python/tf/train/match_filenames_once", "k": [], "r": "master", "t": "tf.train.match_filenames_once"}, {"p": "/versions/master/api_docs/python/tf/train/maybe_batch", "k": [], "r": "master", "t": "tf.train.maybe_batch"}, {"p": "/versions/master/api_docs/python/tf/train/maybe_batch_join", "k": [], "r": "master", "t": "tf.train.maybe_batch_join"}, {"p": "/versions/master/api_docs/python/tf/train/maybe_shuffle_batch", "k": [], "r": "master", "t": "tf.train.maybe_shuffle_batch"}, {"p": "/versions/master/api_docs/python/tf/train/maybe_shuffle_batch_join", "k": [], "r": "master", "t": "tf.train.maybe_shuffle_batch_join"}, {"p": "/versions/master/api_docs/python/tf/train/natural_exp_decay", "k": [], "r": "master", "t": "tf.train.natural_exp_decay"}, {"p": "/versions/master/api_docs/python/tf/train/noisy_linear_cosine_decay", "k": [], "r": "master", "t": "tf.train.noisy_linear_cosine_decay"}, {"p": "/versions/master/api_docs/python/tf/train/piecewise_constant", "k": [], "r": "master", "t": "tf.train.piecewise_constant"}, {"p": "/versions/master/api_docs/python/tf/train/polynomial_decay", "k": [], "r": "master", "t": "tf.train.polynomial_decay"}, {"p": "/versions/master/api_docs/python/tf/train/queue_runner", "k": [], "r": "master", "t": "tf.train.queue_runner"}, {"p": "/versions/master/api_docs/python/tf/train/range_input_producer", "k": [], "r": "master", "t": "tf.train.range_input_producer"}, {"p": "/versions/master/api_docs/python/tf/train/replica_device_setter", "k": [], "r": "master", "t": "tf.train.replica_device_setter"}, {"p": "/versions/master/api_docs/python/tf/train/sdca_fprint", "k": [], "r": "master", "t": "tf.train.sdca_fprint"}, {"p": "/versions/master/api_docs/python/tf/train/sdca_optimizer", "k": [], "r": "master", "t": "tf.train.sdca_optimizer"}, {"p": "/versions/master/api_docs/python/tf/train/sdca_shrink_l1", "k": [], "r": "master", "t": "tf.train.sdca_shrink_l1"}, {"p": "/versions/master/api_docs/python/tf/train/shuffle_batch", "k": [], "r": "master", "t": "tf.train.shuffle_batch"}, {"p": "/versions/master/api_docs/python/tf/train/shuffle_batch_join", "k": [], "r": "master", "t": "tf.train.shuffle_batch_join"}, {"p": "/versions/master/api_docs/python/tf/train/slice_input_producer", "k": [], "r": "master", "t": "tf.train.slice_input_producer"}, {"p": "/versions/master/api_docs/python/tf/train/start_queue_runners", "k": [], "r": "master", "t": "tf.train.start_queue_runners"}, {"p": "/versions/master/api_docs/python/tf/train/string_input_producer", "k": [], "r": "master", "t": "tf.train.string_input_producer"}, {"p": "/versions/master/api_docs/python/tf/train/summary_iterator", "k": [], "r": "master", "t": "tf.train.summary_iterator"}, {"p": "/versions/master/api_docs/python/tf/train/update_checkpoint_state", "k": [], "r": "master", "t": "tf.train.update_checkpoint_state"}, {"p": "/versions/master/api_docs/python/tf/train/warm_start", "k": [], "r": "master", "t": "tf.train.warm_start"}, {"p": "/versions/master/api_docs/python/tf/train/write_graph", "k": [], "r": "master", "t": "tf.train.write_graph"}, {"p": "/versions/master/api_docs/python/tf/trainable_variables", "k": [], "r": "master", "t": "tf.trainable_variables"}, {"p": "/versions/master/api_docs/python/tf/transpose", "k": [], "r": "master", "t": "tf.transpose"}, {"p": "/versions/master/api_docs/python/tf/truediv", "k": [], "r": "master", "t": "tf.truediv"}, {"p": "/versions/master/api_docs/python/tf/truncated_normal", "k": [], "r": "master", "t": "tf.truncated_normal"}, {"p": "/versions/master/api_docs/python/tf/truncated_normal_initializer", "k": ["__call__", "__init__", "from_config", "get_config"], "r": "master", "t": "tf.truncated_normal_initializer"}, {"p": "/versions/master/api_docs/python/tf/truncatediv", "k": [], "r": "master", "t": "tf.truncatediv"}, {"p": "/versions/master/api_docs/python/tf/truncatemod", "k": [], "r": "master", "t": "tf.truncatemod"}, {"p": "/versions/master/api_docs/python/tf/tuple", "k": [], "r": "master", "t": "tf.tuple"}, {"p": "/versions/master/api_docs/python/tf/uniform_unit_scaling_initializer", "k": ["__call__", "__init__", "from_config", "get_config"], "r": "master", "t": "tf.uniform_unit_scaling_initializer"}, {"p": "/versions/master/api_docs/python/tf/unique", "k": [], "r": "master", "t": "tf.unique"}, {"p": "/versions/master/api_docs/python/tf/unique_with_counts", "k": [], "r": "master", "t": "tf.unique_with_counts"}, {"p": "/versions/master/api_docs/python/tf/unravel_index", "k": [], "r": "master", "t": "tf.unravel_index"}, {"p": "/versions/master/api_docs/python/tf/unsorted_segment_max", "k": [], "r": "master", "t": "tf.unsorted_segment_max"}, {"p": "/versions/master/api_docs/python/tf/unsorted_segment_mean", "k": [], "r": "master", "t": "tf.unsorted_segment_mean"}, {"p": "/versions/master/api_docs/python/tf/unsorted_segment_min", "k": [], "r": "master", "t": "tf.unsorted_segment_min"}, {"p": "/versions/master/api_docs/python/tf/unsorted_segment_prod", "k": [], "r": "master", "t": "tf.unsorted_segment_prod"}, {"p": "/versions/master/api_docs/python/tf/unsorted_segment_sqrt_n", "k": [], "r": "master", "t": "tf.unsorted_segment_sqrt_n"}, {"p": "/versions/master/api_docs/python/tf/unsorted_segment_sum", "k": [], "r": "master", "t": "tf.unsorted_segment_sum"}, {"p": "/versions/master/api_docs/python/tf/unstack", "k": [], "r": "master", "t": "tf.unstack"}, {"p": "/versions/master/api_docs/python/tf/user_ops", "k": [], "r": "master", "t": "tf.user_ops"}, {"p": "/versions/master/api_docs/python/tf/variable_axis_size_partitioner", "k": [], "r": "master", "t": "tf.variable_axis_size_partitioner"}, {"p": "/versions/master/api_docs/python/tf/variable_op_scope", "k": [], "r": "master", "t": "tf.variable_op_scope"}, {"p": "/versions/master/api_docs/python/tf/variable_scope", "k": ["__enter__", "__exit__", "__init__"], "r": "master", "t": "tf.variable_scope"}, {"p": "/versions/master/api_docs/python/tf/variables_initializer", "k": [], "r": "master", "t": "tf.variables_initializer"}, {"p": "/versions/master/api_docs/python/tf/variance_scaling_initializer", "k": ["__call__", "__init__", "from_config", "get_config"], "r": "master", "t": "tf.variance_scaling_initializer"}, {"p": "/versions/master/api_docs/python/tf/verify_tensor_all_finite", "k": [], "r": "master", "t": "tf.verify_tensor_all_finite"}, {"p": "/versions/master/api_docs/python/tf/where", "k": [], "r": "master", "t": "tf.where"}, {"p": "/versions/master/api_docs/python/tf/while_loop", "k": [], "r": "master", "t": "tf.while_loop"}, {"p": "/versions/master/api_docs/python/tf/write_file", "k": [], "r": "master", "t": "tf.write_file"}, {"p": "/versions/master/api_docs/python/tf/zeros", "k": [], "r": "master", "t": "tf.zeros"}, {"p": "/versions/master/api_docs/python/tf/zeros_initializer", "k": ["__call__", "__init__", "from_config", "get_config"], "r": "master", "t": "tf.zeros_initializer"}, {"p": "/versions/master/api_docs/python/tf/zeros_like", "k": [], "r": "master", "t": "tf.zeros_like"}, {"p": "/versions/master/api_docs/python/tf/zeta", "k": [], "r": "master", "t": "tf.zeta"}, {"p": "/versions/master/api_docs/python/tfdbg", "k": [], "r": "master", "t": "tfdbg"}, {"p": "/versions/master/api_docs/python/tfdbg/DebugDumpDir", "k": ["core_metadata", "dumped_tensor_data", "python_graph", "run_feed_keys_info", "run_fetches_info", "size", "t0", "__init__", "debug_watch_keys", "devices", "find", "find_some_path", "get_dump_sizes_bytes", "get_rel_timestamps", "get_tensor_file_paths", "get_tensors", "loaded_partition_graphs", "node_attributes", "node_device", "node_exists", "node_inputs", "node_op_type", "node_recipients", "node_traceback", "nodes", "partition_graphs", "reconstructed_non_debug_partition_graphs", "set_python_graph", "transitive_inputs", "watch_key_to_data"], "r": "master", "t": "tfdbg.DebugDumpDir"}, {"p": "/versions/master/api_docs/python/tfdbg/DebugTensorDatum", "k": ["debug_op", "device_name", "dump_size_bytes", "extended_timestamp", "file_path", "node_name", "output_slot", "tensor_name", "timestamp", "watch_key", "__init__", "get_tensor"], "r": "master", "t": "tfdbg.DebugTensorDatum"}, {"p": "/versions/master/api_docs/python/tfdbg/DumpingDebugHook", "k": ["__init__", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "master", "t": "tfdbg.DumpingDebugHook"}, {"p": "/versions/master/api_docs/python/tfdbg/DumpingDebugWrapperSession", "k": ["graph", "graph_def", "run_call_count", "sess_str", "session", "__enter__", "__exit__", "__init__", "as_default", "close", "increment_run_call_count", "invoke_node_stepper", "list_devices", "make_callable", "on_run_end", "on_run_start", "on_session_init", "partial_run", "partial_run_setup", "prepare_run_debug_urls", "reset", "run", "run_step_fn", "should_stop"], "r": "master", "t": "tfdbg.DumpingDebugWrapperSession"}, {"p": "/versions/master/api_docs/python/tfdbg/GradientsDebugger", "k": ["graph", "y_tensor", "__enter__", "__exit__", "__init__", "gradient_tensor", "gradient_tensors", "identify_gradient", "register_gradient_tensor", "watch_gradients_by_tensor_names", "watch_gradients_by_tensors"], "r": "master", "t": "tfdbg.GradientsDebugger"}, {"p": "/versions/master/api_docs/python/tfdbg/GrpcDebugHook", "k": ["__init__", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "master", "t": "tfdbg.GrpcDebugHook"}, {"p": "/versions/master/api_docs/python/tfdbg/GrpcDebugWrapperSession", "k": ["graph", "graph_def", "run_call_count", "sess_str", "session", "__enter__", "__exit__", "__init__", "as_default", "close", "increment_run_call_count", "invoke_node_stepper", "list_devices", "make_callable", "on_run_end", "on_run_start", "on_session_init", "partial_run", "partial_run_setup", "prepare_run_debug_urls", "reset", "run", "run_step_fn", "should_stop"], "r": "master", "t": "tfdbg.GrpcDebugWrapperSession"}, {"p": "/versions/master/api_docs/python/tfdbg/LocalCLIDebugHook", "k": ["__init__", "add_tensor_filter", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "master", "t": "tfdbg.LocalCLIDebugHook"}, {"p": "/versions/master/api_docs/python/tfdbg/LocalCLIDebugWrapperSession", "k": ["graph", "graph_def", "run_call_count", "sess_str", "session", "__enter__", "__exit__", "__init__", "add_tensor_filter", "as_default", "close", "increment_run_call_count", "invoke_node_stepper", "list_devices", "make_callable", "on_run_end", "on_run_start", "on_session_init", "partial_run", "partial_run_setup", "reset", "run", "run_step_fn", "should_stop"], "r": "master", "t": "tfdbg.LocalCLIDebugWrapperSession"}, {"p": "/versions/master/api_docs/python/tfdbg/TensorBoardDebugHook", "k": ["__init__", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "master", "t": "tfdbg.TensorBoardDebugHook"}, {"p": "/versions/master/api_docs/python/tfdbg/TensorBoardDebugWrapperSession", "k": ["graph", "graph_def", "run_call_count", "sess_str", "session", "__enter__", "__exit__", "__init__", "as_default", "close", "increment_run_call_count", "invoke_node_stepper", "list_devices", "make_callable", "on_run_end", "on_run_start", "on_session_init", "partial_run", "partial_run_setup", "prepare_run_debug_urls", "reset", "run", "run_step_fn", "should_stop"], "r": "master", "t": "tfdbg.TensorBoardDebugWrapperSession"}, {"p": "/versions/master/api_docs/python/tfdbg/WatchOptions", "k": ["__init__"], "r": "master", "t": "tfdbg.WatchOptions"}, {"p": "/versions/master/api_docs/python/tfdbg/add_debug_tensor_watch", "k": [], "r": "master", "t": "tfdbg.add_debug_tensor_watch"}, {"p": "/versions/master/api_docs/python/tfdbg/has_inf_or_nan", "k": [], "r": "master", "t": "tfdbg.has_inf_or_nan"}, {"p": "/versions/master/api_docs/python/tfdbg/load_tensor_from_event", "k": [], "r": "master", "t": "tfdbg.load_tensor_from_event"}, {"p": "/versions/master/api_docs/python/tfdbg/load_tensor_from_event_file", "k": [], "r": "master", "t": "tfdbg.load_tensor_from_event_file"}, {"p": "/versions/master/api_docs/python/tfdbg/reconstruct_non_debug_graph_def", "k": [], "r": "master", "t": "tfdbg.reconstruct_non_debug_graph_def"}, {"p": "/versions/master/api_docs/python/tfdbg/watch_graph", "k": [], "r": "master", "t": "tfdbg.watch_graph"}, {"p": "/versions/master/api_docs/python/tfdbg/watch_graph_with_blacklists", "k": [], "r": "master", "t": "tfdbg.watch_graph_with_blacklists"}, {"p": "/versions/r1.2/api_docs/python/tf", "k": ["COMPILER_VERSION", "GIT_VERSION", "GRAPH_DEF_VERSION", "GRAPH_DEF_VERSION_MIN_CONSUMER", "GRAPH_DEF_VERSION_MIN_PRODUCER", "QUANTIZED_DTYPES", "VERSION", "__compiler_version__", "__git_version__", "__version__", "bfloat16", "bool", "complex128", "complex64", "double", "float16", "float32", "float64", "half", "int16", "int32", "int64", "int8", "newaxis", "qint16", "qint32", "qint8", "quint16", "quint8", "resource", "string", "uint16", "uint8"], "r": "r1.2", "t": "tf"}, {"p": "/versions/r1.2/api_docs/python/tf/AggregationMethod", "k": ["ADD_N", "DEFAULT", "EXPERIMENTAL_ACCUMULATE_N", "EXPERIMENTAL_TREE"], "r": "r1.2", "t": "tf.AggregationMethod"}, {"p": "/versions/r1.2/api_docs/python/tf/Assert", "k": [], "r": "r1.2", "t": "tf.Assert"}, {"p": "/versions/r1.2/api_docs/python/tf/AttrValue", "k": ["ListValue"], "r": "r1.2", "t": "tf.AttrValue"}, {"p": "/versions/r1.2/api_docs/python/tf/AttrValue/ListValue", "k": [], "r": "r1.2", "t": "tf.AttrValue.ListValue"}, {"p": "/versions/r1.2/api_docs/python/tf/ConditionalAccumulator", "k": ["accumulator_ref", "dtype", "name", "__init__", "apply_grad", "num_accumulated", "set_global_step", "take_grad"], "r": "r1.2", "t": "tf.ConditionalAccumulator"}, {"p": "/versions/r1.2/api_docs/python/tf/ConditionalAccumulatorBase", "k": ["accumulator_ref", "dtype", "name", "__init__", "num_accumulated", "set_global_step"], "r": "r1.2", "t": "tf.ConditionalAccumulatorBase"}, {"p": "/versions/r1.2/api_docs/python/tf/ConfigProto", "k": ["DeviceCountEntry"], "r": "r1.2", "t": "tf.ConfigProto"}, {"p": "/versions/r1.2/api_docs/python/tf/ConfigProto/DeviceCountEntry", "k": [], "r": "r1.2", "t": "tf.ConfigProto.DeviceCountEntry"}, {"p": "/versions/r1.2/api_docs/python/tf/DType", "k": ["as_datatype_enum", "as_numpy_dtype", "base_dtype", "is_bool", "is_complex", "is_floating", "is_integer", "is_numpy_compatible", "is_quantized", "is_unsigned", "limits", "max", "min", "name", "real_dtype", "size", "__eq__", "__init__", "__int__", "__ne__", "is_compatible_with"], "r": "r1.2", "t": "tf.DType"}, {"p": "/versions/r1.2/api_docs/python/tf/DeviceSpec", "k": ["job", "replica", "task", "__init__", "from_string", "merge_from", "parse_from_string", "to_string"], "r": "r1.2", "t": "tf.DeviceSpec"}, {"p": "/versions/r1.2/api_docs/python/tf/Dimension", "k": ["value", "__add__", "__div__", "__eq__", "__floordiv__", "__ge__", "__gt__", "__index__", "__init__", "__int__", "__le__", "__lt__", "__mod__", "__mul__", "__ne__", "__sub__", "assert_is_compatible_with", "is_compatible_with", "merge_with"], "r": "r1.2", "t": "tf.Dimension"}, {"p": "/versions/r1.2/api_docs/python/tf/Event", "k": [], "r": "r1.2", "t": "tf.Event"}, {"p": "/versions/r1.2/api_docs/python/tf/FIFOQueue", "k": ["dtypes", "name", "names", "queue_ref", "shapes", "__init__", "close", "dequeue", "dequeue_many", "dequeue_up_to", "enqueue", "enqueue_many", "from_list", "size"], "r": "r1.2", "t": "tf.FIFOQueue"}, {"p": "/versions/r1.2/api_docs/python/tf/FixedLenFeature", "k": ["default_value", "dtype", "shape", "__new__"], "r": "r1.2", "t": "tf.FixedLenFeature"}, {"p": "/versions/r1.2/api_docs/python/tf/FixedLenSequenceFeature", "k": ["allow_missing", "default_value", "dtype", "shape", "__new__"], "r": "r1.2", "t": "tf.FixedLenSequenceFeature"}, {"p": "/versions/r1.2/api_docs/python/tf/FixedLengthRecordReader", "k": ["reader_ref", "supports_serialize", "__init__", "num_records_produced", "num_work_units_completed", "read", "read_up_to", "reset", "restore_state", "serialize_state"], "r": "r1.2", "t": "tf.FixedLengthRecordReader"}, {"p": "/versions/r1.2/api_docs/python/tf/GPUOptions", "k": [], "r": "r1.2", "t": "tf.GPUOptions"}, {"p": "/versions/r1.2/api_docs/python/tf/Graph", "k": ["building_function", "finalized", "graph_def_versions", "seed", "version", "__init__", "add_to_collection", "add_to_collections", "as_default", "as_graph_def", "as_graph_element", "clear_collection", "colocate_with", "container", "control_dependencies", "create_op", "device", "finalize", "get_all_collection_keys", "get_collection", "get_collection_ref", "get_name_scope", "get_operation_by_name", "get_operations", "get_tensor_by_name", "gradient_override_map", "is_feedable", "is_fetchable", "name_scope", "prevent_feeding", "prevent_fetching", "unique_name"], "r": "r1.2", "t": "tf.Graph"}, {"p": "/versions/r1.2/api_docs/python/tf/GraphDef", "k": [], "r": "r1.2", "t": "tf.GraphDef"}, {"p": "/versions/r1.2/api_docs/python/tf/GraphKeys", "k": ["ACTIVATIONS", "ASSET_FILEPATHS", "BIASES", "CONCATENATED_VARIABLES", "COND_CONTEXT", "EVAL_STEP", "GLOBAL_STEP", "GLOBAL_VARIABLES", "INIT_OP", "LOCAL_INIT_OP", "LOCAL_RESOURCES", "LOCAL_VARIABLES", "LOSSES", "MODEL_VARIABLES", "MOVING_AVERAGE_VARIABLES", "QUEUE_RUNNERS", "READY_FOR_LOCAL_INIT_OP", "READY_OP", "REGULARIZATION_LOSSES", "RESOURCES", "SAVEABLE_OBJECTS", "SAVERS", "SUMMARIES", "SUMMARY_OP", "TABLE_INITIALIZERS", "TRAINABLE_RESOURCE_VARIABLES", "TRAINABLE_VARIABLES", "TRAIN_OP", "UPDATE_OPS", "VARIABLES", "WEIGHTS", "WHILE_CONTEXT"], "r": "r1.2", "t": "tf.GraphKeys"}, {"p": "/versions/r1.2/api_docs/python/tf/GraphOptions", "k": [], "r": "r1.2", "t": "tf.GraphOptions"}, {"p": "/versions/r1.2/api_docs/python/tf/HistogramProto", "k": [], "r": "r1.2", "t": "tf.HistogramProto"}, {"p": "/versions/r1.2/api_docs/python/tf/IdentityReader", "k": ["reader_ref", "supports_serialize", "__init__", "num_records_produced", "num_work_units_completed", "read", "read_up_to", "reset", "restore_state", "serialize_state"], "r": "r1.2", "t": "tf.IdentityReader"}, {"p": "/versions/r1.2/api_docs/python/tf/IndexedSlices", "k": ["dense_shape", "device", "dtype", "graph", "indices", "name", "op", "values", "__init__", "__neg__"], "r": "r1.2", "t": "tf.IndexedSlices"}, {"p": "/versions/r1.2/api_docs/python/tf/InteractiveSession", "k": ["graph", "graph_def", "sess_str", "__init__", "as_default", "close", "make_callable", "partial_run", "partial_run_setup", "run"], "r": "r1.2", "t": "tf.InteractiveSession"}, {"p": "/versions/r1.2/api_docs/python/tf/LogMessage", "k": ["DEBUGGING", "ERROR", "FATAL", "INFO", "Level", "UNKNOWN", "WARN"], "r": "r1.2", "t": "tf.LogMessage"}, {"p": "/versions/r1.2/api_docs/python/tf/MetaGraphDef", "k": ["CollectionDefEntry", "MetaInfoDef", "SignatureDefEntry"], "r": "r1.2", "t": "tf.MetaGraphDef"}, {"p": "/versions/r1.2/api_docs/python/tf/MetaGraphDef/CollectionDefEntry", "k": [], "r": "r1.2", "t": "tf.MetaGraphDef.CollectionDefEntry"}, {"p": "/versions/r1.2/api_docs/python/tf/MetaGraphDef/MetaInfoDef", "k": [], "r": "r1.2", "t": "tf.MetaGraphDef.MetaInfoDef"}, {"p": "/versions/r1.2/api_docs/python/tf/MetaGraphDef/SignatureDefEntry", "k": [], "r": "r1.2", "t": "tf.MetaGraphDef.SignatureDefEntry"}, {"p": "/versions/r1.2/api_docs/python/tf/NameAttrList", "k": ["AttrEntry"], "r": "r1.2", "t": "tf.NameAttrList"}, {"p": "/versions/r1.2/api_docs/python/tf/NameAttrList/AttrEntry", "k": [], "r": "r1.2", "t": "tf.NameAttrList.AttrEntry"}, {"p": "/versions/r1.2/api_docs/python/tf/NoGradient", "k": [], "r": "r1.2", "t": "tf.NoGradient"}, {"p": "/versions/r1.2/api_docs/python/tf/NodeDef", "k": ["AttrEntry"], "r": "r1.2", "t": "tf.NodeDef"}, {"p": "/versions/r1.2/api_docs/python/tf/NodeDef/AttrEntry", "k": [], "r": "r1.2", "t": "tf.NodeDef.AttrEntry"}, {"p": "/versions/r1.2/api_docs/python/tf/OpError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "r1.2", "t": "tf.OpError"}, {"p": "/versions/r1.2/api_docs/python/tf/Operation", "k": ["control_inputs", "device", "graph", "inputs", "name", "node_def", "op_def", "outputs", "traceback", "traceback_with_start_lines", "type", "__init__", "colocation_groups", "get_attr", "run", "values"], "r": "r1.2", "t": "tf.Operation"}, {"p": "/versions/r1.2/api_docs/python/tf/OptimizerOptions", "k": ["DEFAULT", "GlobalJitLevel", "L0", "L1", "Level", "OFF", "ON_1", "ON_2"], "r": "r1.2", "t": "tf.OptimizerOptions"}, {"p": "/versions/r1.2/api_docs/python/tf/PaddingFIFOQueue", "k": ["dtypes", "name", "names", "queue_ref", "shapes", "__init__", "close", "dequeue", "dequeue_many", "dequeue_up_to", "enqueue", "enqueue_many", "from_list", "size"], "r": "r1.2", "t": "tf.PaddingFIFOQueue"}, {"p": "/versions/r1.2/api_docs/python/tf/Print", "k": [], "r": "r1.2", "t": "tf.Print"}, {"p": "/versions/r1.2/api_docs/python/tf/PriorityQueue", "k": ["dtypes", "name", "names", "queue_ref", "shapes", "__init__", "close", "dequeue", "dequeue_many", "dequeue_up_to", "enqueue", "enqueue_many", "from_list", "size"], "r": "r1.2", "t": "tf.PriorityQueue"}, {"p": "/versions/r1.2/api_docs/python/tf/QueueBase", "k": ["dtypes", "name", "names", "queue_ref", "shapes", "__init__", "close", "dequeue", "dequeue_many", "dequeue_up_to", "enqueue", "enqueue_many", "from_list", "size"], "r": "r1.2", "t": "tf.QueueBase"}, {"p": "/versions/r1.2/api_docs/python/tf/RandomShuffleQueue", "k": ["dtypes", "name", "names", "queue_ref", "shapes", "__init__", "close", "dequeue", "dequeue_many", "dequeue_up_to", "enqueue", "enqueue_many", "from_list", "size"], "r": "r1.2", "t": "tf.RandomShuffleQueue"}, {"p": "/versions/r1.2/api_docs/python/tf/ReaderBase", "k": ["reader_ref", "supports_serialize", "__init__", "num_records_produced", "num_work_units_completed", "read", "read_up_to", "reset", "restore_state", "serialize_state"], "r": "r1.2", "t": "tf.ReaderBase"}, {"p": "/versions/r1.2/api_docs/python/tf/RegisterGradient", "k": ["__call__", "__init__"], "r": "r1.2", "t": "tf.RegisterGradient"}, {"p": "/versions/r1.2/api_docs/python/tf/RunMetadata", "k": [], "r": "r1.2", "t": "tf.RunMetadata"}, {"p": "/versions/r1.2/api_docs/python/tf/RunOptions", "k": ["FULL_TRACE", "HARDWARE_TRACE", "NO_TRACE", "SOFTWARE_TRACE", "TraceLevel"], "r": "r1.2", "t": "tf.RunOptions"}, {"p": "/versions/r1.2/api_docs/python/tf/Session", "k": ["graph", "graph_def", "sess_str", "__enter__", "__exit__", "__init__", "as_default", "close", "make_callable", "partial_run", "partial_run_setup", "reset", "run"], "r": "r1.2", "t": "tf.Session"}, {"p": "/versions/r1.2/api_docs/python/tf/SessionLog", "k": ["CHECKPOINT", "START", "STATUS_UNSPECIFIED", "STOP", "SessionStatus"], "r": "r1.2", "t": "tf.SessionLog"}, {"p": "/versions/r1.2/api_docs/python/tf/SparseConditionalAccumulator", "k": ["accumulator_ref", "dtype", "name", "__init__", "apply_grad", "apply_indexed_slices_grad", "num_accumulated", "set_global_step", "take_grad", "take_indexed_slices_grad"], "r": "r1.2", "t": "tf.SparseConditionalAccumulator"}, {"p": "/versions/r1.2/api_docs/python/tf/SparseFeature", "k": ["already_sorted", "dtype", "index_key", "size", "value_key", "__new__"], "r": "r1.2", "t": "tf.SparseFeature"}, {"p": "/versions/r1.2/api_docs/python/tf/SparseTensor", "k": ["dense_shape", "dtype", "graph", "indices", "op", "values", "__div__", "__init__", "__mul__", "__truediv__", "eval", "from_value", "get_shape"], "r": "r1.2", "t": "tf.SparseTensor"}, {"p": "/versions/r1.2/api_docs/python/tf/SparseTensorValue", "k": ["dense_shape", "indices", "values", "__new__"], "r": "r1.2", "t": "tf.SparseTensorValue"}, {"p": "/versions/r1.2/api_docs/python/tf/Summary", "k": ["Audio", "Image", "Value"], "r": "r1.2", "t": "tf.Summary"}, {"p": "/versions/r1.2/api_docs/python/tf/Summary/Audio", "k": [], "r": "r1.2", "t": "tf.Summary.Audio"}, {"p": "/versions/r1.2/api_docs/python/tf/Summary/Image", "k": [], "r": "r1.2", "t": "tf.Summary.Image"}, {"p": "/versions/r1.2/api_docs/python/tf/Summary/Value", "k": [], "r": "r1.2", "t": "tf.Summary.Value"}, {"p": "/versions/r1.2/api_docs/python/tf/TFRecordReader", "k": ["reader_ref", "supports_serialize", "__init__", "num_records_produced", "num_work_units_completed", "read", "read_up_to", "reset", "restore_state", "serialize_state"], "r": "r1.2", "t": "tf.TFRecordReader"}, {"p": "/versions/r1.2/api_docs/python/tf/Tensor", "k": ["device", "dtype", "graph", "name", "op", "shape", "value_index", "__abs__", "__add__", "__and__", "__bool__", "__div__", "__eq__", "__floordiv__", "__ge__", "__getitem__", "__gt__", "__init__", "__invert__", "__iter__", "__le__", "__lt__", "__matmul__", "__mod__", "__mul__", "__neg__", "__nonzero__", "__or__", "__pow__", "__radd__", "__rand__", "__rdiv__", "__rfloordiv__", "__rmatmul__", "__rmod__", "__rmul__", "__ror__", "__rpow__", "__rsub__", "__rtruediv__", "__rxor__", "__sub__", "__truediv__", "__xor__", "consumers", "eval", "get_shape", "set_shape", "OVERLOADABLE_OPERATORS", "__array_priority__"], "r": "r1.2", "t": "tf.Tensor"}, {"p": "/versions/r1.2/api_docs/python/tf/TensorArray", "k": ["dtype", "flow", "handle", "__init__", "close", "concat", "gather", "grad", "identity", "read", "scatter", "size", "split", "stack", "unstack", "write"], "r": "r1.2", "t": "tf.TensorArray"}, {"p": "/versions/r1.2/api_docs/python/tf/TensorInfo", "k": [], "r": "r1.2", "t": "tf.TensorInfo"}, {"p": "/versions/r1.2/api_docs/python/tf/TensorShape", "k": ["dims", "ndims", "__bool__", "__eq__", "__getitem__", "__init__", "__iter__", "__len__", "__ne__", "__nonzero__", "as_list", "as_proto", "assert_has_rank", "assert_is_compatible_with", "assert_is_fully_defined", "assert_same_rank", "concatenate", "is_compatible_with", "is_fully_defined", "merge_with", "num_elements", "with_rank", "with_rank_at_least", "with_rank_at_most"], "r": "r1.2", "t": "tf.TensorShape"}, {"p": "/versions/r1.2/api_docs/python/tf/TextLineReader", "k": ["reader_ref", "supports_serialize", "__init__", "num_records_produced", "num_work_units_completed", "read", "read_up_to", "reset", "restore_state", "serialize_state"], "r": "r1.2", "t": "tf.TextLineReader"}, {"p": "/versions/r1.2/api_docs/python/tf/VarLenFeature", "k": ["dtype", "__new__"], "r": "r1.2", "t": "tf.VarLenFeature"}, {"p": "/versions/r1.2/api_docs/python/tf/Variable", "k": ["SaveSliceInfo", "device", "dtype", "graph", "initial_value", "initializer", "name", "op", "shape", "__abs__", "__add__", "__and__", "__div__", "__floordiv__", "__ge__", "__getitem__", "__gt__", "__init__", "__invert__", "__iter__", "__le__", "__lt__", "__matmul__", "__mod__", "__mul__", "__neg__", "__or__", "__pow__", "__radd__", "__rand__", "__rdiv__", "__rfloordiv__", "__rmatmul__", "__rmod__", "__rmul__", "__ror__", "__rpow__", "__rsub__", "__rtruediv__", "__rxor__", "__sub__", "__truediv__", "__xor__", "assign", "assign_add", "assign_sub", "count_up_to", "eval", "from_proto", "get_shape", "initialized_value", "load", "read_value", "scatter_sub", "set_shape", "to_proto", "value", "__array_priority__"], "r": "r1.2", "t": "tf.Variable"}, {"p": "/versions/r1.2/api_docs/python/tf/Variable/SaveSliceInfo", "k": ["spec", "__init__", "to_proto"], "r": "r1.2", "t": "tf.Variable.SaveSliceInfo"}, {"p": "/versions/r1.2/api_docs/python/tf/VariableScope", "k": ["caching_device", "custom_getter", "dtype", "initializer", "name", "original_name_scope", "partitioner", "regularizer", "reuse", "use_resource", "__init__", "get_collection", "get_variable", "global_variables", "reuse_variables", "set_caching_device", "set_custom_getter", "set_dtype", "set_initializer", "set_partitioner", "set_regularizer", "set_use_resource", "trainable_variables"], "r": "r1.2", "t": "tf.VariableScope"}, {"p": "/versions/r1.2/api_docs/python/tf/WholeFileReader", "k": ["reader_ref", "supports_serialize", "__init__", "num_records_produced", "num_work_units_completed", "read", "read_up_to", "reset", "restore_state", "serialize_state"], "r": "r1.2", "t": "tf.WholeFileReader"}, {"p": "/versions/r1.2/api_docs/python/tf/abs", "k": [], "r": "r1.2", "t": "tf.abs"}, {"p": "/versions/r1.2/api_docs/python/tf/accumulate_n", "k": [], "r": "r1.2", "t": "tf.accumulate_n"}, {"p": "/versions/r1.2/api_docs/python/tf/acos", "k": [], "r": "r1.2", "t": "tf.acos"}, {"p": "/versions/r1.2/api_docs/python/tf/add", "k": [], "r": "r1.2", "t": "tf.add"}, {"p": "/versions/r1.2/api_docs/python/tf/add_check_numerics_ops", "k": [], "r": "r1.2", "t": "tf.add_check_numerics_ops"}, {"p": "/versions/r1.2/api_docs/python/tf/add_n", "k": [], "r": "r1.2", "t": "tf.add_n"}, {"p": "/versions/r1.2/api_docs/python/tf/add_to_collection", "k": [], "r": "r1.2", "t": "tf.add_to_collection"}, {"p": "/versions/r1.2/api_docs/python/tf/all_variables", "k": [], "r": "r1.2", "t": "tf.all_variables"}, {"p": "/versions/r1.2/api_docs/python/tf/app", "k": [], "r": "r1.2", "t": "tf.app"}, {"p": "/versions/r1.2/api_docs/python/tf/app/run", "k": [], "r": "r1.2", "t": "tf.app.run"}, {"p": "/versions/r1.2/api_docs/python/tf/arg_max", "k": [], "r": "r1.2", "t": "tf.arg_max"}, {"p": "/versions/r1.2/api_docs/python/tf/arg_min", "k": [], "r": "r1.2", "t": "tf.arg_min"}, {"p": "/versions/r1.2/api_docs/python/tf/argmax", "k": [], "r": "r1.2", "t": "tf.argmax"}, {"p": "/versions/r1.2/api_docs/python/tf/argmin", "k": [], "r": "r1.2", "t": "tf.argmin"}, {"p": "/versions/r1.2/api_docs/python/tf/as_dtype", "k": [], "r": "r1.2", "t": "tf.as_dtype"}, {"p": "/versions/r1.2/api_docs/python/tf/as_string", "k": [], "r": "r1.2", "t": "tf.as_string"}, {"p": "/versions/r1.2/api_docs/python/tf/asin", "k": [], "r": "r1.2", "t": "tf.asin"}, {"p": "/versions/r1.2/api_docs/python/tf/assert_equal", "k": [], "r": "r1.2", "t": "tf.assert_equal"}, {"p": "/versions/r1.2/api_docs/python/tf/assert_greater", "k": [], "r": "r1.2", "t": "tf.assert_greater"}, {"p": "/versions/r1.2/api_docs/python/tf/assert_greater_equal", "k": [], "r": "r1.2", "t": "tf.assert_greater_equal"}, {"p": "/versions/r1.2/api_docs/python/tf/assert_integer", "k": [], "r": "r1.2", "t": "tf.assert_integer"}, {"p": "/versions/r1.2/api_docs/python/tf/assert_less", "k": [], "r": "r1.2", "t": "tf.assert_less"}, {"p": "/versions/r1.2/api_docs/python/tf/assert_less_equal", "k": [], "r": "r1.2", "t": "tf.assert_less_equal"}, {"p": "/versions/r1.2/api_docs/python/tf/assert_negative", "k": [], "r": "r1.2", "t": "tf.assert_negative"}, {"p": "/versions/r1.2/api_docs/python/tf/assert_non_negative", "k": [], "r": "r1.2", "t": "tf.assert_non_negative"}, {"p": "/versions/r1.2/api_docs/python/tf/assert_non_positive", "k": [], "r": "r1.2", "t": "tf.assert_non_positive"}, {"p": "/versions/r1.2/api_docs/python/tf/assert_none_equal", "k": [], "r": "r1.2", "t": "tf.assert_none_equal"}, {"p": "/versions/r1.2/api_docs/python/tf/assert_positive", "k": [], "r": "r1.2", "t": "tf.assert_positive"}, {"p": "/versions/r1.2/api_docs/python/tf/assert_proper_iterable", "k": [], "r": "r1.2", "t": "tf.assert_proper_iterable"}, {"p": "/versions/r1.2/api_docs/python/tf/assert_rank", "k": [], "r": "r1.2", "t": "tf.assert_rank"}, {"p": "/versions/r1.2/api_docs/python/tf/assert_rank_at_least", "k": [], "r": "r1.2", "t": "tf.assert_rank_at_least"}, {"p": "/versions/r1.2/api_docs/python/tf/assert_same_float_dtype", "k": [], "r": "r1.2", "t": "tf.assert_same_float_dtype"}, {"p": "/versions/r1.2/api_docs/python/tf/assert_scalar", "k": [], "r": "r1.2", "t": "tf.assert_scalar"}, {"p": "/versions/r1.2/api_docs/python/tf/assert_type", "k": [], "r": "r1.2", "t": "tf.assert_type"}, {"p": "/versions/r1.2/api_docs/python/tf/assert_variables_initialized", "k": [], "r": "r1.2", "t": "tf.assert_variables_initialized"}, {"p": "/versions/r1.2/api_docs/python/tf/assign", "k": [], "r": "r1.2", "t": "tf.assign"}, {"p": "/versions/r1.2/api_docs/python/tf/assign_add", "k": [], "r": "r1.2", "t": "tf.assign_add"}, {"p": "/versions/r1.2/api_docs/python/tf/assign_sub", "k": [], "r": "r1.2", "t": "tf.assign_sub"}, {"p": "/versions/r1.2/api_docs/python/tf/atan", "k": [], "r": "r1.2", "t": "tf.atan"}, {"p": "/versions/r1.2/api_docs/python/tf/atan2", "k": [], "r": "r1.2", "t": "tf.atan2"}, {"p": "/versions/r1.2/api_docs/python/tf/batch_to_space", "k": [], "r": "r1.2", "t": "tf.batch_to_space"}, {"p": "/versions/r1.2/api_docs/python/tf/batch_to_space_nd", "k": [], "r": "r1.2", "t": "tf.batch_to_space_nd"}, {"p": "/versions/r1.2/api_docs/python/tf/betainc", "k": [], "r": "r1.2", "t": "tf.betainc"}, {"p": "/versions/r1.2/api_docs/python/tf/bincount", "k": [], "r": "r1.2", "t": "tf.bincount"}, {"p": "/versions/r1.2/api_docs/python/tf/bitcast", "k": [], "r": "r1.2", "t": "tf.bitcast"}, {"p": "/versions/r1.2/api_docs/python/tf/boolean_mask", "k": [], "r": "r1.2", "t": "tf.boolean_mask"}, {"p": "/versions/r1.2/api_docs/python/tf/broadcast_dynamic_shape", "k": [], "r": "r1.2", "t": "tf.broadcast_dynamic_shape"}, {"p": "/versions/r1.2/api_docs/python/tf/broadcast_static_shape", "k": [], "r": "r1.2", "t": "tf.broadcast_static_shape"}, {"p": "/versions/r1.2/api_docs/python/tf/case", "k": [], "r": "r1.2", "t": "tf.case"}, {"p": "/versions/r1.2/api_docs/python/tf/cast", "k": [], "r": "r1.2", "t": "tf.cast"}, {"p": "/versions/r1.2/api_docs/python/tf/ceil", "k": [], "r": "r1.2", "t": "tf.ceil"}, {"p": "/versions/r1.2/api_docs/python/tf/check_numerics", "k": [], "r": "r1.2", "t": "tf.check_numerics"}, {"p": "/versions/r1.2/api_docs/python/tf/cholesky", "k": [], "r": "r1.2", "t": "tf.cholesky"}, {"p": "/versions/r1.2/api_docs/python/tf/cholesky_solve", "k": [], "r": "r1.2", "t": "tf.cholesky_solve"}, {"p": "/versions/r1.2/api_docs/python/tf/clip_by_average_norm", "k": [], "r": "r1.2", "t": "tf.clip_by_average_norm"}, {"p": "/versions/r1.2/api_docs/python/tf/clip_by_global_norm", "k": [], "r": "r1.2", "t": "tf.clip_by_global_norm"}, {"p": "/versions/r1.2/api_docs/python/tf/clip_by_norm", "k": [], "r": "r1.2", "t": "tf.clip_by_norm"}, {"p": "/versions/r1.2/api_docs/python/tf/clip_by_value", "k": [], "r": "r1.2", "t": "tf.clip_by_value"}, {"p": "/versions/r1.2/api_docs/python/tf/compat", "k": ["bytes_or_text_types", "complex_types", "integral_types", "real_types"], "r": "r1.2", "t": "tf.compat"}, {"p": "/versions/r1.2/api_docs/python/tf/compat/as_bytes", "k": [], "r": "r1.2", "t": "tf.compat.as_bytes"}, {"p": "/versions/r1.2/api_docs/python/tf/compat/as_str_any", "k": [], "r": "r1.2", "t": "tf.compat.as_str_any"}, {"p": "/versions/r1.2/api_docs/python/tf/compat/as_text", "k": [], "r": "r1.2", "t": "tf.compat.as_text"}, {"p": "/versions/r1.2/api_docs/python/tf/complex", "k": [], "r": "r1.2", "t": "tf.complex"}, {"p": "/versions/r1.2/api_docs/python/tf/concat", "k": [], "r": "r1.2", "t": "tf.concat"}, {"p": "/versions/r1.2/api_docs/python/tf/cond", "k": [], "r": "r1.2", "t": "tf.cond"}, {"p": "/versions/r1.2/api_docs/python/tf/confusion_matrix", "k": [], "r": "r1.2", "t": "tf.confusion_matrix"}, {"p": "/versions/r1.2/api_docs/python/tf/conj", "k": [], "r": "r1.2", "t": "tf.conj"}, {"p": "/versions/r1.2/api_docs/python/tf/constant", "k": [], "r": "r1.2", "t": "tf.constant"}, {"p": "/versions/r1.2/api_docs/python/tf/constant_initializer", "k": ["__call__", "__init__", "from_config", "get_config"], "r": "r1.2", "t": "tf.constant_initializer"}, {"p": "/versions/r1.2/api_docs/python/tf/container", "k": [], "r": "r1.2", "t": "tf.container"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib", "k": [], "r": "r1.2", "t": "tf.contrib"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/bayesflow", "k": [], "r": "r1.2", "t": "tf.contrib.bayesflow"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/bayesflow/entropy", "k": [], "r": "r1.2", "t": "tf.contrib.bayesflow.entropy"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/bayesflow/entropy/elbo_ratio", "k": [], "r": "r1.2", "t": "tf.contrib.bayesflow.entropy.elbo_ratio"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/bayesflow/entropy/entropy_shannon", "k": [], "r": "r1.2", "t": "tf.contrib.bayesflow.entropy.entropy_shannon"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/bayesflow/entropy/renyi_alpha", "k": [], "r": "r1.2", "t": "tf.contrib.bayesflow.entropy.renyi_alpha"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/bayesflow/entropy/renyi_ratio", "k": [], "r": "r1.2", "t": "tf.contrib.bayesflow.entropy.renyi_ratio"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/bayesflow/monte_carlo", "k": [], "r": "r1.2", "t": "tf.contrib.bayesflow.monte_carlo"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/bayesflow/monte_carlo/expectation", "k": [], "r": "r1.2", "t": "tf.contrib.bayesflow.monte_carlo.expectation"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/bayesflow/monte_carlo/expectation_importance_sampler", "k": [], "r": "r1.2", "t": "tf.contrib.bayesflow.monte_carlo.expectation_importance_sampler"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/bayesflow/monte_carlo/expectation_importance_sampler_logspace", "k": [], "r": "r1.2", "t": "tf.contrib.bayesflow.monte_carlo.expectation_importance_sampler_logspace"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/bayesflow/stochastic_gradient_estimators", "k": [], "r": "r1.2", "t": "tf.contrib.bayesflow.stochastic_gradient_estimators"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/bayesflow/stochastic_graph", "k": [], "r": "r1.2", "t": "tf.contrib.bayesflow.stochastic_graph"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/bayesflow/stochastic_graph/surrogate_loss", "k": [], "r": "r1.2", "t": "tf.contrib.bayesflow.stochastic_graph.surrogate_loss"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/bayesflow/stochastic_tensor", "k": [], "r": "r1.2", "t": "tf.contrib.bayesflow.stochastic_tensor"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/bayesflow/stochastic_tensor/BaseStochasticTensor", "k": ["dtype", "graph", "name", "__init__", "loss", "value"], "r": "r1.2", "t": "tf.contrib.bayesflow.stochastic_tensor.BaseStochasticTensor"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/bayesflow/stochastic_tensor/MeanValue", "k": ["stop_gradient", "__init__", "declare_inputs", "popped_above", "pushed_above"], "r": "r1.2", "t": "tf.contrib.bayesflow.stochastic_tensor.MeanValue"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/bayesflow/stochastic_tensor/ObservedStochasticTensor", "k": ["distribution", "dtype", "graph", "name", "value_type", "__init__", "entropy", "loss", "mean", "value"], "r": "r1.2", "t": "tf.contrib.bayesflow.stochastic_tensor.ObservedStochasticTensor"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/bayesflow/stochastic_tensor/SampleValue", "k": ["shape", "stop_gradient", "__init__", "declare_inputs", "popped_above", "pushed_above"], "r": "r1.2", "t": "tf.contrib.bayesflow.stochastic_tensor.SampleValue"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/bayesflow/stochastic_tensor/StochasticTensor", "k": ["distribution", "dtype", "graph", "name", "value_type", "__init__", "entropy", "loss", "mean", "value"], "r": "r1.2", "t": "tf.contrib.bayesflow.stochastic_tensor.StochasticTensor"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/bayesflow/stochastic_tensor/get_current_value_type", "k": [], "r": "r1.2", "t": "tf.contrib.bayesflow.stochastic_tensor.get_current_value_type"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/bayesflow/stochastic_tensor/value_type", "k": [], "r": "r1.2", "t": "tf.contrib.bayesflow.stochastic_tensor.value_type"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/bayesflow/stochastic_variables", "k": [], "r": "r1.2", "t": "tf.contrib.bayesflow.stochastic_variables"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/bayesflow/variational_inference", "k": [], "r": "r1.2", "t": "tf.contrib.bayesflow.variational_inference"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/bayesflow/variational_inference/ELBOForms", "k": ["check_form", "analytic_entropy", "analytic_kl", "default", "sample"], "r": "r1.2", "t": "tf.contrib.bayesflow.variational_inference.ELBOForms"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/bayesflow/variational_inference/elbo", "k": [], "r": "r1.2", "t": "tf.contrib.bayesflow.variational_inference.elbo"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/bayesflow/variational_inference/elbo_with_log_joint", "k": [], "r": "r1.2", "t": "tf.contrib.bayesflow.variational_inference.elbo_with_log_joint"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/bayesflow/variational_inference/register_prior", "k": [], "r": "r1.2", "t": "tf.contrib.bayesflow.variational_inference.register_prior"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/cloud", "k": [], "r": "r1.2", "t": "tf.contrib.cloud"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/cloud/BigQueryReader", "k": ["reader_ref", "supports_serialize", "__init__", "num_records_produced", "num_work_units_completed", "partitions", "read", "read_up_to", "reset", "restore_state", "serialize_state"], "r": "r1.2", "t": "tf.contrib.cloud.BigQueryReader"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/compiler", "k": [], "r": "r1.2", "t": "tf.contrib.compiler"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/copy_graph", "k": [], "r": "r1.2", "t": "tf.contrib.copy_graph"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/copy_graph/copy_op_to_graph", "k": [], "r": "r1.2", "t": "tf.contrib.copy_graph.copy_op_to_graph"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/copy_graph/copy_variable_to_graph", "k": [], "r": "r1.2", "t": "tf.contrib.copy_graph.copy_variable_to_graph"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/copy_graph/get_copied_op", "k": [], "r": "r1.2", "t": "tf.contrib.copy_graph.get_copied_op"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/crf", "k": [], "r": "r1.2", "t": "tf.contrib.crf"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/crf/CrfForwardRnnCell", "k": ["graph", "losses", "non_trainable_variables", "non_trainable_weights", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "get_losses_for", "get_updates_for", "zero_state"], "r": "r1.2", "t": "tf.contrib.crf.CrfForwardRnnCell"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/crf/crf_binary_score", "k": [], "r": "r1.2", "t": "tf.contrib.crf.crf_binary_score"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/crf/crf_log_likelihood", "k": [], "r": "r1.2", "t": "tf.contrib.crf.crf_log_likelihood"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/crf/crf_log_norm", "k": [], "r": "r1.2", "t": "tf.contrib.crf.crf_log_norm"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/crf/crf_sequence_score", "k": [], "r": "r1.2", "t": "tf.contrib.crf.crf_sequence_score"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/crf/crf_unary_score", "k": [], "r": "r1.2", "t": "tf.contrib.crf.crf_unary_score"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/crf/viterbi_decode", "k": [], "r": "r1.2", "t": "tf.contrib.crf.viterbi_decode"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/cudnn_rnn", "k": [], "r": "r1.2", "t": "tf.contrib.cudnn_rnn"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/cudnn_rnn/CudnnGRU", "k": ["__call__", "__init__", "canonical_to_params", "params_size", "params_to_canonical"], "r": "r1.2", "t": "tf.contrib.cudnn_rnn.CudnnGRU"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/cudnn_rnn/CudnnLSTM", "k": ["__call__", "__init__", "canonical_to_params", "params_size", "params_to_canonical"], "r": "r1.2", "t": "tf.contrib.cudnn_rnn.CudnnLSTM"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/cudnn_rnn/CudnnRNNRelu", "k": ["__call__", "__init__", "canonical_to_params", "params_size", "params_to_canonical"], "r": "r1.2", "t": "tf.contrib.cudnn_rnn.CudnnRNNRelu"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/cudnn_rnn/CudnnRNNTanh", "k": ["__call__", "__init__", "canonical_to_params", "params_size", "params_to_canonical"], "r": "r1.2", "t": "tf.contrib.cudnn_rnn.CudnnRNNTanh"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/cudnn_rnn/RNNParamsSaveable", "k": ["__init__", "restore"], "r": "r1.2", "t": "tf.contrib.cudnn_rnn.RNNParamsSaveable"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/data", "k": [], "r": "r1.2", "t": "tf.contrib.data"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/data/Dataset", "k": ["output_shapes", "output_types", "__init__", "batch", "dense_to_sparse_batch", "enumerate", "filter", "flat_map", "from_sparse_tensor_slices", "from_tensor_slices", "from_tensors", "group_by_window", "make_dataset_resource", "make_initializable_iterator", "make_one_shot_iterator", "map", "padded_batch", "range", "read_batch_features", "repeat", "shuffle", "skip", "take", "unbatch", "zip"], "r": "r1.2", "t": "tf.contrib.data.Dataset"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/data/FixedLengthRecordDataset", "k": ["output_shapes", "output_types", "__init__", "batch", "dense_to_sparse_batch", "enumerate", "filter", "flat_map", "from_sparse_tensor_slices", "from_tensor_slices", "from_tensors", "group_by_window", "make_dataset_resource", "make_initializable_iterator", "make_one_shot_iterator", "map", "padded_batch", "range", "read_batch_features", "repeat", "shuffle", "skip", "take", "unbatch", "zip"], "r": "r1.2", "t": "tf.contrib.data.FixedLengthRecordDataset"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/data/Iterator", "k": ["initializer", "output_shapes", "output_types", "__init__", "dispose_op", "from_dataset", "from_structure", "get_next", "make_initializer"], "r": "r1.2", "t": "tf.contrib.data.Iterator"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/data/TFRecordDataset", "k": ["output_shapes", "output_types", "__init__", "batch", "dense_to_sparse_batch", "enumerate", "filter", "flat_map", "from_sparse_tensor_slices", "from_tensor_slices", "from_tensors", "group_by_window", "make_dataset_resource", "make_initializable_iterator", "make_one_shot_iterator", "map", "padded_batch", "range", "read_batch_features", "repeat", "shuffle", "skip", "take", "unbatch", "zip"], "r": "r1.2", "t": "tf.contrib.data.TFRecordDataset"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/data/TextLineDataset", "k": ["output_shapes", "output_types", "__init__", "batch", "dense_to_sparse_batch", "enumerate", "filter", "flat_map", "from_sparse_tensor_slices", "from_tensor_slices", "from_tensors", "group_by_window", "make_dataset_resource", "make_initializable_iterator", "make_one_shot_iterator", "map", "padded_batch", "range", "read_batch_features", "repeat", "shuffle", "skip", "take", "unbatch", "zip"], "r": "r1.2", "t": "tf.contrib.data.TextLineDataset"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/data/read_batch_features", "k": [], "r": "r1.2", "t": "tf.contrib.data.read_batch_features"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/data/rejection_resample", "k": [], "r": "r1.2", "t": "tf.contrib.data.rejection_resample"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/deprecated", "k": [], "r": "r1.2", "t": "tf.contrib.deprecated"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/deprecated/audio_summary", "k": [], "r": "r1.2", "t": "tf.contrib.deprecated.audio_summary"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/deprecated/histogram_summary", "k": [], "r": "r1.2", "t": "tf.contrib.deprecated.histogram_summary"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/deprecated/image_summary", "k": [], "r": "r1.2", "t": "tf.contrib.deprecated.image_summary"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/deprecated/merge_all_summaries", "k": [], "r": "r1.2", "t": "tf.contrib.deprecated.merge_all_summaries"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/deprecated/merge_summary", "k": [], "r": "r1.2", "t": "tf.contrib.deprecated.merge_summary"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/deprecated/scalar_summary", "k": [], "r": "r1.2", "t": "tf.contrib.deprecated.scalar_summary"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/distributions", "k": ["FULLY_REPARAMETERIZED", "NOT_REPARAMETERIZED"], "r": "r1.2", "t": "tf.contrib.distributions"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/distributions/Bernoulli", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "logits", "name", "parameters", "probs", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.2", "t": "tf.contrib.distributions.Bernoulli"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/distributions/BernoulliWithSigmoidProbs", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "logits", "name", "parameters", "probs", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.2", "t": "tf.contrib.distributions.BernoulliWithSigmoidProbs"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/distributions/Beta", "k": ["allow_nan_stats", "batch_shape", "concentration0", "concentration1", "dtype", "event_shape", "name", "parameters", "reparameterization_type", "total_concentration", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.2", "t": "tf.contrib.distributions.Beta"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/distributions/BetaWithSoftplusConcentration", "k": ["allow_nan_stats", "batch_shape", "concentration0", "concentration1", "dtype", "event_shape", "name", "parameters", "reparameterization_type", "total_concentration", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.2", "t": "tf.contrib.distributions.BetaWithSoftplusConcentration"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/distributions/Binomial", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "logits", "name", "parameters", "probs", "reparameterization_type", "total_count", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.2", "t": "tf.contrib.distributions.Binomial"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/distributions/Categorical", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "event_size", "logits", "name", "parameters", "probs", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.2", "t": "tf.contrib.distributions.Categorical"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/distributions/Chi2", "k": ["allow_nan_stats", "batch_shape", "concentration", "df", "dtype", "event_shape", "name", "parameters", "rate", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.2", "t": "tf.contrib.distributions.Chi2"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/distributions/Chi2WithAbsDf", "k": ["allow_nan_stats", "batch_shape", "concentration", "df", "dtype", "event_shape", "name", "parameters", "rate", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.2", "t": "tf.contrib.distributions.Chi2WithAbsDf"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/distributions/ConditionalDistribution", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "name", "parameters", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.2", "t": "tf.contrib.distributions.ConditionalDistribution"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/distributions/ConditionalTransformedDistribution", "k": ["allow_nan_stats", "batch_shape", "bijector", "distribution", "dtype", "event_shape", "name", "parameters", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.2", "t": "tf.contrib.distributions.ConditionalTransformedDistribution"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/distributions/Deterministic", "k": ["allow_nan_stats", "atol", "batch_shape", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "rtol", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.2", "t": "tf.contrib.distributions.Deterministic"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/distributions/Dirichlet", "k": ["allow_nan_stats", "batch_shape", "concentration", "dtype", "event_shape", "name", "parameters", "reparameterization_type", "total_concentration", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.2", "t": "tf.contrib.distributions.Dirichlet"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/distributions/DirichletMultinomial", "k": ["allow_nan_stats", "batch_shape", "concentration", "dtype", "event_shape", "name", "parameters", "reparameterization_type", "total_concentration", "total_count", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.2", "t": "tf.contrib.distributions.DirichletMultinomial"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/distributions/Distribution", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "name", "parameters", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.2", "t": "tf.contrib.distributions.Distribution"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/distributions/ExpRelaxedOneHotCategorical", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "event_size", "logits", "name", "parameters", "probs", "reparameterization_type", "temperature", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.2", "t": "tf.contrib.distributions.ExpRelaxedOneHotCategorical"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/distributions/Exponential", "k": ["allow_nan_stats", "batch_shape", "concentration", "dtype", "event_shape", "name", "parameters", "rate", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.2", "t": "tf.contrib.distributions.Exponential"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/distributions/ExponentialWithSoftplusRate", "k": ["allow_nan_stats", "batch_shape", "concentration", "dtype", "event_shape", "name", "parameters", "rate", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.2", "t": "tf.contrib.distributions.ExponentialWithSoftplusRate"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/distributions/Gamma", "k": ["allow_nan_stats", "batch_shape", "concentration", "dtype", "event_shape", "name", "parameters", "rate", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.2", "t": "tf.contrib.distributions.Gamma"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/distributions/GammaWithSoftplusConcentrationRate", "k": ["allow_nan_stats", "batch_shape", "concentration", "dtype", "event_shape", "name", "parameters", "rate", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.2", "t": "tf.contrib.distributions.GammaWithSoftplusConcentrationRate"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/distributions/Geometric", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "logits", "name", "parameters", "probs", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.2", "t": "tf.contrib.distributions.Geometric"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/distributions/InverseGamma", "k": ["allow_nan_stats", "batch_shape", "concentration", "dtype", "event_shape", "name", "parameters", "rate", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.2", "t": "tf.contrib.distributions.InverseGamma"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/distributions/InverseGammaWithSoftplusConcentrationRate", "k": ["allow_nan_stats", "batch_shape", "concentration", "dtype", "event_shape", "name", "parameters", "rate", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.2", "t": "tf.contrib.distributions.InverseGammaWithSoftplusConcentrationRate"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/distributions/Laplace", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.2", "t": "tf.contrib.distributions.Laplace"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/distributions/LaplaceWithSoftplusScale", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.2", "t": "tf.contrib.distributions.LaplaceWithSoftplusScale"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/distributions/Logistic", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.2", "t": "tf.contrib.distributions.Logistic"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/distributions/Mixture", "k": ["allow_nan_stats", "batch_shape", "cat", "components", "dtype", "event_shape", "name", "num_components", "parameters", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "entropy_lower_bound", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.2", "t": "tf.contrib.distributions.Mixture"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/distributions/Multinomial", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "logits", "name", "parameters", "probs", "reparameterization_type", "total_count", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.2", "t": "tf.contrib.distributions.Multinomial"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/distributions/MultivariateNormalDiag", "k": ["allow_nan_stats", "batch_shape", "bijector", "distribution", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.2", "t": "tf.contrib.distributions.MultivariateNormalDiag"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/distributions/MultivariateNormalDiagPlusLowRank", "k": ["allow_nan_stats", "batch_shape", "bijector", "distribution", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.2", "t": "tf.contrib.distributions.MultivariateNormalDiagPlusLowRank"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/distributions/MultivariateNormalDiagWithSoftplusScale", "k": ["allow_nan_stats", "batch_shape", "bijector", "distribution", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.2", "t": "tf.contrib.distributions.MultivariateNormalDiagWithSoftplusScale"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/distributions/MultivariateNormalFullCovariance", "k": ["allow_nan_stats", "batch_shape", "bijector", "distribution", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.2", "t": "tf.contrib.distributions.MultivariateNormalFullCovariance"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/distributions/MultivariateNormalTriL", "k": ["allow_nan_stats", "batch_shape", "bijector", "distribution", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.2", "t": "tf.contrib.distributions.MultivariateNormalTriL"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/distributions/NegativeBinomial", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "logits", "name", "parameters", "probs", "reparameterization_type", "total_count", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.2", "t": "tf.contrib.distributions.NegativeBinomial"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/distributions/Normal", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.2", "t": "tf.contrib.distributions.Normal"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/distributions/NormalWithSoftplusScale", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.2", "t": "tf.contrib.distributions.NormalWithSoftplusScale"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/distributions/OneHotCategorical", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "event_size", "logits", "name", "parameters", "probs", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.2", "t": "tf.contrib.distributions.OneHotCategorical"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/distributions/Poisson", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "name", "parameters", "rate", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.2", "t": "tf.contrib.distributions.Poisson"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/distributions/QuantizedDistribution", "k": ["allow_nan_stats", "batch_shape", "distribution", "dtype", "event_shape", "name", "parameters", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.2", "t": "tf.contrib.distributions.QuantizedDistribution"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/distributions/RegisterKL", "k": ["__call__", "__init__"], "r": "r1.2", "t": "tf.contrib.distributions.RegisterKL"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/distributions/RelaxedBernoulli", "k": ["allow_nan_stats", "batch_shape", "bijector", "distribution", "dtype", "event_shape", "logits", "name", "parameters", "probs", "reparameterization_type", "temperature", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.2", "t": "tf.contrib.distributions.RelaxedBernoulli"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/distributions/RelaxedOneHotCategorical", "k": ["allow_nan_stats", "batch_shape", "bijector", "distribution", "dtype", "event_shape", "name", "parameters", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.2", "t": "tf.contrib.distributions.RelaxedOneHotCategorical"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/distributions/ReparameterizationType", "k": ["__eq__", "__init__"], "r": "r1.2", "t": "tf.contrib.distributions.ReparameterizationType"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/distributions/StudentT", "k": ["allow_nan_stats", "batch_shape", "df", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.2", "t": "tf.contrib.distributions.StudentT"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/distributions/StudentTWithAbsDfSoftplusScale", "k": ["allow_nan_stats", "batch_shape", "df", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.2", "t": "tf.contrib.distributions.StudentTWithAbsDfSoftplusScale"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/distributions/TransformedDistribution", "k": ["allow_nan_stats", "batch_shape", "bijector", "distribution", "dtype", "event_shape", "name", "parameters", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.2", "t": "tf.contrib.distributions.TransformedDistribution"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/distributions/Uniform", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "high", "low", "name", "parameters", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "range", "sample", "stddev", "survival_function", "variance"], "r": "r1.2", "t": "tf.contrib.distributions.Uniform"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/distributions/VectorDeterministic", "k": ["allow_nan_stats", "atol", "batch_shape", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "rtol", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.2", "t": "tf.contrib.distributions.VectorDeterministic"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/distributions/VectorLaplaceDiag", "k": ["allow_nan_stats", "batch_shape", "bijector", "distribution", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.2", "t": "tf.contrib.distributions.VectorLaplaceDiag"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/distributions/WishartCholesky", "k": ["allow_nan_stats", "batch_shape", "cholesky_input_output_matrices", "df", "dimension", "dtype", "event_shape", "name", "parameters", "reparameterization_type", "scale_operator_pd", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_normalization", "log_prob", "log_survival_function", "mean", "mean_log_det", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "scale", "stddev", "survival_function", "variance"], "r": "r1.2", "t": "tf.contrib.distributions.WishartCholesky"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/distributions/WishartFull", "k": ["allow_nan_stats", "batch_shape", "cholesky_input_output_matrices", "df", "dimension", "dtype", "event_shape", "name", "parameters", "reparameterization_type", "scale_operator_pd", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_normalization", "log_prob", "log_survival_function", "mean", "mean_log_det", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "scale", "stddev", "survival_function", "variance"], "r": "r1.2", "t": "tf.contrib.distributions.WishartFull"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/distributions/bijectors", "k": [], "r": "r1.2", "t": "tf.contrib.distributions.bijectors"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/distributions/bijectors/Affine", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "scale", "shift", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.2", "t": "tf.contrib.distributions.bijectors.Affine"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/distributions/bijectors/AffineLinearOperator", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "scale", "shift", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.2", "t": "tf.contrib.distributions.bijectors.AffineLinearOperator"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/distributions/bijectors/Bijector", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.2", "t": "tf.contrib.distributions.bijectors.Bijector"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/distributions/bijectors/Chain", "k": ["bijectors", "dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.2", "t": "tf.contrib.distributions.bijectors.Chain"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/distributions/bijectors/CholeskyOuterProduct", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.2", "t": "tf.contrib.distributions.bijectors.CholeskyOuterProduct"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/distributions/bijectors/ConditionalBijector", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.2", "t": "tf.contrib.distributions.bijectors.ConditionalBijector"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/distributions/bijectors/Exp", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "power", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.2", "t": "tf.contrib.distributions.bijectors.Exp"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/distributions/bijectors/Identity", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.2", "t": "tf.contrib.distributions.bijectors.Identity"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/distributions/bijectors/Inline", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.2", "t": "tf.contrib.distributions.bijectors.Inline"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/distributions/bijectors/Invert", "k": ["bijector", "dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.2", "t": "tf.contrib.distributions.bijectors.Invert"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/distributions/bijectors/PowerTransform", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "power", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.2", "t": "tf.contrib.distributions.bijectors.PowerTransform"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/distributions/bijectors/Sigmoid", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.2", "t": "tf.contrib.distributions.bijectors.Sigmoid"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/distributions/bijectors/SigmoidCentered", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.2", "t": "tf.contrib.distributions.bijectors.SigmoidCentered"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/distributions/bijectors/SoftmaxCentered", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.2", "t": "tf.contrib.distributions.bijectors.SoftmaxCentered"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/distributions/bijectors/Softplus", "k": ["dtype", "event_ndims", "graph_parents", "hinge_softness", "is_constant_jacobian", "name", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.2", "t": "tf.contrib.distributions.bijectors.Softplus"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/distributions/kl_divergence", "k": [], "r": "r1.2", "t": "tf.contrib.distributions.kl_divergence"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/distributions/matrix_diag_transform", "k": [], "r": "r1.2", "t": "tf.contrib.distributions.matrix_diag_transform"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/distributions/normal_conjugates_known_scale_posterior", "k": [], "r": "r1.2", "t": "tf.contrib.distributions.normal_conjugates_known_scale_posterior"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/distributions/normal_conjugates_known_scale_predictive", "k": [], "r": "r1.2", "t": "tf.contrib.distributions.normal_conjugates_known_scale_predictive"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/distributions/percentile", "k": [], "r": "r1.2", "t": "tf.contrib.distributions.percentile"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/distributions/softplus_inverse", "k": [], "r": "r1.2", "t": "tf.contrib.distributions.softplus_inverse"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/factorization", "k": [], "r": "r1.2", "t": "tf.contrib.factorization"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/ffmpeg", "k": [], "r": "r1.2", "t": "tf.contrib.ffmpeg"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/ffmpeg/decode_audio", "k": [], "r": "r1.2", "t": "tf.contrib.ffmpeg.decode_audio"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/ffmpeg/encode_audio", "k": [], "r": "r1.2", "t": "tf.contrib.ffmpeg.encode_audio"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/framework", "k": [], "r": "r1.2", "t": "tf.contrib.framework"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/framework/VariableDeviceChooser", "k": ["__call__", "__init__"], "r": "r1.2", "t": "tf.contrib.framework.VariableDeviceChooser"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/framework/add_arg_scope", "k": [], "r": "r1.2", "t": "tf.contrib.framework.add_arg_scope"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/framework/add_model_variable", "k": [], "r": "r1.2", "t": "tf.contrib.framework.add_model_variable"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/framework/arg_scope", "k": [], "r": "r1.2", "t": "tf.contrib.framework.arg_scope"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/framework/arg_scoped_arguments", "k": [], "r": "r1.2", "t": "tf.contrib.framework.arg_scoped_arguments"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/framework/assert_global_step", "k": [], "r": "r1.2", "t": "tf.contrib.framework.assert_global_step"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/framework/assert_or_get_global_step", "k": [], "r": "r1.2", "t": "tf.contrib.framework.assert_or_get_global_step"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/framework/assert_scalar_int", "k": [], "r": "r1.2", "t": "tf.contrib.framework.assert_scalar_int"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/framework/assign_from_checkpoint", "k": [], "r": "r1.2", "t": "tf.contrib.framework.assign_from_checkpoint"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/framework/assign_from_checkpoint_fn", "k": [], "r": "r1.2", "t": "tf.contrib.framework.assign_from_checkpoint_fn"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/framework/assign_from_values", "k": [], "r": "r1.2", "t": "tf.contrib.framework.assign_from_values"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/framework/assign_from_values_fn", "k": [], "r": "r1.2", "t": "tf.contrib.framework.assign_from_values_fn"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/framework/create_global_step", "k": [], "r": "r1.2", "t": "tf.contrib.framework.create_global_step"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/framework/deprecated", "k": [], "r": "r1.2", "t": "tf.contrib.framework.deprecated"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/framework/deprecated_arg_values", "k": [], "r": "r1.2", "t": "tf.contrib.framework.deprecated_arg_values"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/framework/deprecated_args", "k": [], "r": "r1.2", "t": "tf.contrib.framework.deprecated_args"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/framework/filter_variables", "k": [], "r": "r1.2", "t": "tf.contrib.framework.filter_variables"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/framework/get_global_step", "k": [], "r": "r1.2", "t": "tf.contrib.framework.get_global_step"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/framework/get_graph_from_inputs", "k": [], "r": "r1.2", "t": "tf.contrib.framework.get_graph_from_inputs"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/framework/get_local_variables", "k": [], "r": "r1.2", "t": "tf.contrib.framework.get_local_variables"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/framework/get_model_variables", "k": [], "r": "r1.2", "t": "tf.contrib.framework.get_model_variables"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/framework/get_name_scope", "k": [], "r": "r1.2", "t": "tf.contrib.framework.get_name_scope"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/framework/get_or_create_global_step", "k": [], "r": "r1.2", "t": "tf.contrib.framework.get_or_create_global_step"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/framework/get_trainable_variables", "k": [], "r": "r1.2", "t": "tf.contrib.framework.get_trainable_variables"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/framework/get_unique_variable", "k": [], "r": "r1.2", "t": "tf.contrib.framework.get_unique_variable"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/framework/get_variable_full_name", "k": [], "r": "r1.2", "t": "tf.contrib.framework.get_variable_full_name"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/framework/get_variables", "k": [], "r": "r1.2", "t": "tf.contrib.framework.get_variables"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/framework/get_variables_by_name", "k": [], "r": "r1.2", "t": "tf.contrib.framework.get_variables_by_name"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/framework/get_variables_by_suffix", "k": [], "r": "r1.2", "t": "tf.contrib.framework.get_variables_by_suffix"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/framework/get_variables_to_restore", "k": [], "r": "r1.2", "t": "tf.contrib.framework.get_variables_to_restore"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/framework/has_arg_scope", "k": [], "r": "r1.2", "t": "tf.contrib.framework.has_arg_scope"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/framework/init_from_checkpoint", "k": [], "r": "r1.2", "t": "tf.contrib.framework.init_from_checkpoint"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/framework/is_tensor", "k": [], "r": "r1.2", "t": "tf.contrib.framework.is_tensor"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/framework/list_variables", "k": [], "r": "r1.2", "t": "tf.contrib.framework.list_variables"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/framework/load_checkpoint", "k": [], "r": "r1.2", "t": "tf.contrib.framework.load_checkpoint"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/framework/load_variable", "k": [], "r": "r1.2", "t": "tf.contrib.framework.load_variable"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/framework/local_variable", "k": [], "r": "r1.2", "t": "tf.contrib.framework.local_variable"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/framework/model_variable", "k": [], "r": "r1.2", "t": "tf.contrib.framework.model_variable"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/framework/prepend_name_scope", "k": [], "r": "r1.2", "t": "tf.contrib.framework.prepend_name_scope"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/framework/reduce_sum_n", "k": [], "r": "r1.2", "t": "tf.contrib.framework.reduce_sum_n"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/framework/remove_squeezable_dimensions", "k": [], "r": "r1.2", "t": "tf.contrib.framework.remove_squeezable_dimensions"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/framework/strip_name_scope", "k": [], "r": "r1.2", "t": "tf.contrib.framework.strip_name_scope"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/framework/variable", "k": [], "r": "r1.2", "t": "tf.contrib.framework.variable"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/framework/with_same_shape", "k": [], "r": "r1.2", "t": "tf.contrib.framework.with_same_shape"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/framework/with_shape", "k": [], "r": "r1.2", "t": "tf.contrib.framework.with_shape"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/framework/zero_initializer", "k": [], "r": "r1.2", "t": "tf.contrib.framework.zero_initializer"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/graph_editor", "k": [], "r": "r1.2", "t": "tf.contrib.graph_editor"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/graph_editor/ControlOutputs", "k": ["graph", "__init__", "get", "get_all", "update"], "r": "r1.2", "t": "tf.contrib.graph_editor.ControlOutputs"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/graph_editor/SubGraphView", "k": ["connected_inputs", "connected_outputs", "graph", "inputs", "ops", "outputs", "passthroughs", "__bool__", "__copy__", "__enter__", "__exit__", "__init__", "__nonzero__", "consumers", "copy", "find_op_by_name", "input_index", "is_passthrough", "op", "output_index", "remap", "remap_default", "remap_inputs", "remap_outputs", "remap_outputs_make_unique", "remap_outputs_to_consumers", "remove_unused_ops"], "r": "r1.2", "t": "tf.contrib.graph_editor.SubGraphView"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/graph_editor/Transformer", "k": ["__call__", "__init__"], "r": "r1.2", "t": "tf.contrib.graph_editor.Transformer"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/graph_editor/TransformerInfo", "k": ["__init__", "original", "transformed"], "r": "r1.2", "t": "tf.contrib.graph_editor.TransformerInfo"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/graph_editor/add_control_inputs", "k": [], "r": "r1.2", "t": "tf.contrib.graph_editor.add_control_inputs"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/graph_editor/assign_renamed_collections_handler", "k": [], "r": "r1.2", "t": "tf.contrib.graph_editor.assign_renamed_collections_handler"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/graph_editor/bypass", "k": [], "r": "r1.2", "t": "tf.contrib.graph_editor.bypass"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/graph_editor/can_be_regex", "k": [], "r": "r1.2", "t": "tf.contrib.graph_editor.can_be_regex"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/graph_editor/check_cios", "k": [], "r": "r1.2", "t": "tf.contrib.graph_editor.check_cios"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/graph_editor/compute_boundary_ts", "k": [], "r": "r1.2", "t": "tf.contrib.graph_editor.compute_boundary_ts"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/graph_editor/connect", "k": [], "r": "r1.2", "t": "tf.contrib.graph_editor.connect"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/graph_editor/copy", "k": [], "r": "r1.2", "t": "tf.contrib.graph_editor.copy"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/graph_editor/copy_op_handler", "k": [], "r": "r1.2", "t": "tf.contrib.graph_editor.copy_op_handler"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/graph_editor/copy_with_input_replacements", "k": [], "r": "r1.2", "t": "tf.contrib.graph_editor.copy_with_input_replacements"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/graph_editor/detach", "k": [], "r": "r1.2", "t": "tf.contrib.graph_editor.detach"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/graph_editor/detach_control_inputs", "k": [], "r": "r1.2", "t": "tf.contrib.graph_editor.detach_control_inputs"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/graph_editor/detach_control_outputs", "k": [], "r": "r1.2", "t": "tf.contrib.graph_editor.detach_control_outputs"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/graph_editor/detach_inputs", "k": [], "r": "r1.2", "t": "tf.contrib.graph_editor.detach_inputs"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/graph_editor/detach_outputs", "k": [], "r": "r1.2", "t": "tf.contrib.graph_editor.detach_outputs"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/graph_editor/edit", "k": [], "r": "r1.2", "t": "tf.contrib.graph_editor.edit"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/graph_editor/filter_ops", "k": [], "r": "r1.2", "t": "tf.contrib.graph_editor.filter_ops"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/graph_editor/filter_ops_from_regex", "k": [], "r": "r1.2", "t": "tf.contrib.graph_editor.filter_ops_from_regex"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/graph_editor/filter_ts", "k": [], "r": "r1.2", "t": "tf.contrib.graph_editor.filter_ts"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/graph_editor/filter_ts_from_regex", "k": [], "r": "r1.2", "t": "tf.contrib.graph_editor.filter_ts_from_regex"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/graph_editor/get_backward_walk_ops", "k": [], "r": "r1.2", "t": "tf.contrib.graph_editor.get_backward_walk_ops"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/graph_editor/get_consuming_ops", "k": [], "r": "r1.2", "t": "tf.contrib.graph_editor.get_consuming_ops"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/graph_editor/get_forward_walk_ops", "k": [], "r": "r1.2", "t": "tf.contrib.graph_editor.get_forward_walk_ops"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/graph_editor/get_generating_ops", "k": [], "r": "r1.2", "t": "tf.contrib.graph_editor.get_generating_ops"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/graph_editor/get_name_scope_ops", "k": [], "r": "r1.2", "t": "tf.contrib.graph_editor.get_name_scope_ops"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/graph_editor/get_ops_ios", "k": [], "r": "r1.2", "t": "tf.contrib.graph_editor.get_ops_ios"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/graph_editor/get_tensors", "k": [], "r": "r1.2", "t": "tf.contrib.graph_editor.get_tensors"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/graph_editor/get_walks_intersection_ops", "k": [], "r": "r1.2", "t": "tf.contrib.graph_editor.get_walks_intersection_ops"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/graph_editor/get_walks_union_ops", "k": [], "r": "r1.2", "t": "tf.contrib.graph_editor.get_walks_union_ops"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/graph_editor/get_within_boundary_ops", "k": [], "r": "r1.2", "t": "tf.contrib.graph_editor.get_within_boundary_ops"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/graph_editor/graph_replace", "k": [], "r": "r1.2", "t": "tf.contrib.graph_editor.graph_replace"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/graph_editor/keep_t_if_possible_handler", "k": [], "r": "r1.2", "t": "tf.contrib.graph_editor.keep_t_if_possible_handler"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/graph_editor/make_list_of_op", "k": [], "r": "r1.2", "t": "tf.contrib.graph_editor.make_list_of_op"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/graph_editor/make_list_of_t", "k": [], "r": "r1.2", "t": "tf.contrib.graph_editor.make_list_of_t"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/graph_editor/make_placeholder_from_dtype_and_shape", "k": [], "r": "r1.2", "t": "tf.contrib.graph_editor.make_placeholder_from_dtype_and_shape"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/graph_editor/make_placeholder_from_tensor", "k": [], "r": "r1.2", "t": "tf.contrib.graph_editor.make_placeholder_from_tensor"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/graph_editor/make_regex", "k": [], "r": "r1.2", "t": "tf.contrib.graph_editor.make_regex"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/graph_editor/make_view", "k": [], "r": "r1.2", "t": "tf.contrib.graph_editor.make_view"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/graph_editor/make_view_from_scope", "k": [], "r": "r1.2", "t": "tf.contrib.graph_editor.make_view_from_scope"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/graph_editor/placeholder_name", "k": [], "r": "r1.2", "t": "tf.contrib.graph_editor.placeholder_name"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/graph_editor/remove_control_inputs", "k": [], "r": "r1.2", "t": "tf.contrib.graph_editor.remove_control_inputs"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/graph_editor/replace_t_with_placeholder_handler", "k": [], "r": "r1.2", "t": "tf.contrib.graph_editor.replace_t_with_placeholder_handler"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/graph_editor/reroute", "k": [], "r": "r1.2", "t": "tf.contrib.graph_editor.reroute"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/graph_editor/reroute_inputs", "k": [], "r": "r1.2", "t": "tf.contrib.graph_editor.reroute_inputs"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/graph_editor/reroute_ios", "k": [], "r": "r1.2", "t": "tf.contrib.graph_editor.reroute_ios"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/graph_editor/reroute_outputs", "k": [], "r": "r1.2", "t": "tf.contrib.graph_editor.reroute_outputs"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/graph_editor/reroute_ts", "k": [], "r": "r1.2", "t": "tf.contrib.graph_editor.reroute_ts"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/graph_editor/select", "k": [], "r": "r1.2", "t": "tf.contrib.graph_editor.select"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/graph_editor/select_ops", "k": [], "r": "r1.2", "t": "tf.contrib.graph_editor.select_ops"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/graph_editor/select_ops_and_ts", "k": [], "r": "r1.2", "t": "tf.contrib.graph_editor.select_ops_and_ts"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/graph_editor/select_ts", "k": [], "r": "r1.2", "t": "tf.contrib.graph_editor.select_ts"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/graph_editor/subgraph", "k": [], "r": "r1.2", "t": "tf.contrib.graph_editor.subgraph"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/graph_editor/swap_inputs", "k": [], "r": "r1.2", "t": "tf.contrib.graph_editor.swap_inputs"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/graph_editor/swap_ios", "k": [], "r": "r1.2", "t": "tf.contrib.graph_editor.swap_ios"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/graph_editor/swap_outputs", "k": [], "r": "r1.2", "t": "tf.contrib.graph_editor.swap_outputs"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/graph_editor/swap_ts", "k": [], "r": "r1.2", "t": "tf.contrib.graph_editor.swap_ts"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/graph_editor/transform", "k": [], "r": "r1.2", "t": "tf.contrib.graph_editor.transform"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/graph_editor/transform_op_if_inside_handler", "k": [], "r": "r1.2", "t": "tf.contrib.graph_editor.transform_op_if_inside_handler"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/graph_editor/util", "k": [], "r": "r1.2", "t": "tf.contrib.graph_editor.util"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/grid_rnn", "k": [], "r": "r1.2", "t": "tf.contrib.grid_rnn"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/image", "k": [], "r": "r1.2", "t": "tf.contrib.image"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/image/angles_to_projective_transforms", "k": [], "r": "r1.2", "t": "tf.contrib.image.angles_to_projective_transforms"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/image/compose_transforms", "k": [], "r": "r1.2", "t": "tf.contrib.image.compose_transforms"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/image/rotate", "k": [], "r": "r1.2", "t": "tf.contrib.image.rotate"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/image/single_image_random_dot_stereograms", "k": [], "r": "r1.2", "t": "tf.contrib.image.single_image_random_dot_stereograms"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/image/transform", "k": [], "r": "r1.2", "t": "tf.contrib.image.transform"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/input_pipeline", "k": [], "r": "r1.2", "t": "tf.contrib.input_pipeline"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/input_pipeline/obtain_next", "k": [], "r": "r1.2", "t": "tf.contrib.input_pipeline.obtain_next"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/integrate", "k": [], "r": "r1.2", "t": "tf.contrib.integrate"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/integrate/odeint", "k": [], "r": "r1.2", "t": "tf.contrib.integrate.odeint"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras", "k": [], "r": "r1.2", "t": "tf.contrib.keras"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/activations", "k": [], "r": "r1.2", "t": "tf.contrib.keras.activations"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/activations/deserialize", "k": [], "r": "r1.2", "t": "tf.contrib.keras.activations.deserialize"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/activations/elu", "k": [], "r": "r1.2", "t": "tf.contrib.keras.activations.elu"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/activations/get", "k": [], "r": "r1.2", "t": "tf.contrib.keras.activations.get"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/activations/hard_sigmoid", "k": [], "r": "r1.2", "t": "tf.contrib.keras.activations.hard_sigmoid"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/activations/linear", "k": [], "r": "r1.2", "t": "tf.contrib.keras.activations.linear"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/activations/relu", "k": [], "r": "r1.2", "t": "tf.contrib.keras.activations.relu"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/activations/serialize", "k": [], "r": "r1.2", "t": "tf.contrib.keras.activations.serialize"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/activations/sigmoid", "k": [], "r": "r1.2", "t": "tf.contrib.keras.activations.sigmoid"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/activations/softmax", "k": [], "r": "r1.2", "t": "tf.contrib.keras.activations.softmax"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/activations/softplus", "k": [], "r": "r1.2", "t": "tf.contrib.keras.activations.softplus"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/activations/softsign", "k": [], "r": "r1.2", "t": "tf.contrib.keras.activations.softsign"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/activations/tanh", "k": [], "r": "r1.2", "t": "tf.contrib.keras.activations.tanh"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/api", "k": [], "r": "r1.2", "t": "tf.contrib.keras.api"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/applications", "k": [], "r": "r1.2", "t": "tf.contrib.keras.applications"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/applications/InceptionV3", "k": [], "r": "r1.2", "t": "tf.contrib.keras.applications.InceptionV3"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/applications/ResNet50", "k": [], "r": "r1.2", "t": "tf.contrib.keras.applications.ResNet50"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/applications/VGG16", "k": [], "r": "r1.2", "t": "tf.contrib.keras.applications.VGG16"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/applications/VGG19", "k": [], "r": "r1.2", "t": "tf.contrib.keras.applications.VGG19"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/applications/Xception", "k": [], "r": "r1.2", "t": "tf.contrib.keras.applications.Xception"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/applications/inception_v3", "k": [], "r": "r1.2", "t": "tf.contrib.keras.applications.inception_v3"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/applications/inception_v3/decode_predictions", "k": [], "r": "r1.2", "t": "tf.contrib.keras.applications.inception_v3.decode_predictions"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/applications/inception_v3/preprocess_input", "k": [], "r": "r1.2", "t": "tf.contrib.keras.applications.inception_v3.preprocess_input"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/applications/resnet50", "k": [], "r": "r1.2", "t": "tf.contrib.keras.applications.resnet50"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/applications/resnet50/preprocess_input", "k": [], "r": "r1.2", "t": "tf.contrib.keras.applications.resnet50.preprocess_input"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/applications/vgg16", "k": [], "r": "r1.2", "t": "tf.contrib.keras.applications.vgg16"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/applications/vgg19", "k": [], "r": "r1.2", "t": "tf.contrib.keras.applications.vgg19"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/applications/xception", "k": [], "r": "r1.2", "t": "tf.contrib.keras.applications.xception"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/applications/xception/preprocess_input", "k": [], "r": "r1.2", "t": "tf.contrib.keras.applications.xception.preprocess_input"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/abs", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.abs"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/all", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.all"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/any", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.any"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/arange", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.arange"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/argmax", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.argmax"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/argmin", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.argmin"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/backend", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.backend"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/batch_dot", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.batch_dot"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/batch_flatten", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.batch_flatten"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/batch_get_value", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.batch_get_value"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/batch_normalization", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.batch_normalization"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/batch_set_value", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.batch_set_value"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/bias_add", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.bias_add"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/binary_crossentropy", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.binary_crossentropy"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/cast", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.cast"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/cast_to_floatx", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.cast_to_floatx"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/categorical_crossentropy", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.categorical_crossentropy"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/clear_session", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.clear_session"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/clip", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.clip"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/concatenate", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.concatenate"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/constant", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.constant"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/conv1d", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.conv1d"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/conv2d", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.conv2d"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/conv2d_transpose", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.conv2d_transpose"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/conv3d", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.conv3d"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/cos", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.cos"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/count_params", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.count_params"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/ctc_batch_cost", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.ctc_batch_cost"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/ctc_decode", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.ctc_decode"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/ctc_label_dense_to_sparse", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.ctc_label_dense_to_sparse"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/dot", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.dot"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/dropout", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.dropout"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/dtype", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.dtype"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/elu", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.elu"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/epsilon", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.epsilon"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/equal", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.equal"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/eval", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.eval"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/exp", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.exp"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/expand_dims", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.expand_dims"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/eye", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.eye"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/flatten", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.flatten"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/floatx", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.floatx"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/foldl", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.foldl"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/foldr", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.foldr"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/function", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.function"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/gather", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.gather"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/get_session", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.get_session"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/get_uid", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.get_uid"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/get_value", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.get_value"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/gradients", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.gradients"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/greater", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.greater"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/greater_equal", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.greater_equal"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/hard_sigmoid", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.hard_sigmoid"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/image_data_format", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.image_data_format"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/in_test_phase", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.in_test_phase"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/in_top_k", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.in_top_k"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/in_train_phase", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.in_train_phase"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/int_shape", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.int_shape"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/is_sparse", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.is_sparse"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/l2_normalize", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.l2_normalize"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/learning_phase", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.learning_phase"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/less", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.less"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/less_equal", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.less_equal"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/log", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.log"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/manual_variable_initialization", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.manual_variable_initialization"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/map_fn", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.map_fn"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/max", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.max"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/maximum", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.maximum"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/mean", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.mean"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/min", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.min"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/minimum", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.minimum"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/moving_average_update", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.moving_average_update"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/ndim", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.ndim"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/normalize_batch_in_training", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.normalize_batch_in_training"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/not_equal", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.not_equal"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/one_hot", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.one_hot"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/ones", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.ones"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/ones_like", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.ones_like"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/permute_dimensions", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.permute_dimensions"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/placeholder", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.placeholder"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/pool2d", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.pool2d"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/pool3d", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.pool3d"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/pow", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.pow"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/print_tensor", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.print_tensor"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/prod", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.prod"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/random_binomial", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.random_binomial"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/random_normal", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.random_normal"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/random_normal_variable", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.random_normal_variable"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/random_uniform", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.random_uniform"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/random_uniform_variable", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.random_uniform_variable"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/relu", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.relu"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/repeat", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.repeat"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/repeat_elements", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.repeat_elements"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/reset_uids", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.reset_uids"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/reshape", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.reshape"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/resize_images", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.resize_images"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/resize_volumes", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.resize_volumes"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/reverse", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.reverse"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/rnn", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.rnn"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/round", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.round"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/separable_conv2d", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.separable_conv2d"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/set_epsilon", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.set_epsilon"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/set_floatx", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.set_floatx"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/set_image_data_format", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.set_image_data_format"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/set_learning_phase", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.set_learning_phase"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/set_session", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.set_session"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/set_value", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.set_value"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/shape", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.shape"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/sigmoid", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.sigmoid"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/sign", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.sign"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/sin", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.sin"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/softmax", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.softmax"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/softplus", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.softplus"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/softsign", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.softsign"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/sparse_categorical_crossentropy", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.sparse_categorical_crossentropy"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/spatial_2d_padding", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.spatial_2d_padding"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/spatial_3d_padding", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.spatial_3d_padding"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/sqrt", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.sqrt"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/square", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.square"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/squeeze", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.squeeze"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/stack", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.stack"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/std", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.std"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/stop_gradient", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.stop_gradient"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/sum", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.sum"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/switch", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.switch"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/tanh", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.tanh"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/temporal_padding", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.temporal_padding"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/to_dense", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.to_dense"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/transpose", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.transpose"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/truncated_normal", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.truncated_normal"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/update", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.update"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/update_add", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.update_add"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/update_sub", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.update_sub"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/var", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.var"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/variable", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.variable"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/zeros", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.zeros"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/backend/zeros_like", "k": [], "r": "r1.2", "t": "tf.contrib.keras.backend.zeros_like"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/callbacks", "k": [], "r": "r1.2", "t": "tf.contrib.keras.callbacks"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/callbacks/BaseLogger", "k": ["__init__", "on_batch_begin", "on_batch_end", "on_epoch_begin", "on_epoch_end", "on_train_begin", "on_train_end", "set_model", "set_params"], "r": "r1.2", "t": "tf.contrib.keras.callbacks.BaseLogger"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/callbacks/CSVLogger", "k": ["__init__", "on_batch_begin", "on_batch_end", "on_epoch_begin", "on_epoch_end", "on_train_begin", "on_train_end", "set_model", "set_params"], "r": "r1.2", "t": "tf.contrib.keras.callbacks.CSVLogger"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/callbacks/Callback", "k": ["__init__", "on_batch_begin", "on_batch_end", "on_epoch_begin", "on_epoch_end", "on_train_begin", "on_train_end", "set_model", "set_params"], "r": "r1.2", "t": "tf.contrib.keras.callbacks.Callback"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/callbacks/EarlyStopping", "k": ["__init__", "on_batch_begin", "on_batch_end", "on_epoch_begin", "on_epoch_end", "on_train_begin", "on_train_end", "set_model", "set_params"], "r": "r1.2", "t": "tf.contrib.keras.callbacks.EarlyStopping"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/callbacks/History", "k": ["__init__", "on_batch_begin", "on_batch_end", "on_epoch_begin", "on_epoch_end", "on_train_begin", "on_train_end", "set_model", "set_params"], "r": "r1.2", "t": "tf.contrib.keras.callbacks.History"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/callbacks/LambdaCallback", "k": ["__init__", "on_batch_begin", "on_batch_end", "on_epoch_begin", "on_epoch_end", "on_train_begin", "on_train_end", "set_model", "set_params"], "r": "r1.2", "t": "tf.contrib.keras.callbacks.LambdaCallback"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/callbacks/LearningRateScheduler", "k": ["__init__", "on_batch_begin", "on_batch_end", "on_epoch_begin", "on_epoch_end", "on_train_begin", "on_train_end", "set_model", "set_params"], "r": "r1.2", "t": "tf.contrib.keras.callbacks.LearningRateScheduler"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/callbacks/ModelCheckpoint", "k": ["__init__", "on_batch_begin", "on_batch_end", "on_epoch_begin", "on_epoch_end", "on_train_begin", "on_train_end", "set_model", "set_params"], "r": "r1.2", "t": "tf.contrib.keras.callbacks.ModelCheckpoint"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/callbacks/ProgbarLogger", "k": ["__init__", "on_batch_begin", "on_batch_end", "on_epoch_begin", "on_epoch_end", "on_train_begin", "on_train_end", "set_model", "set_params"], "r": "r1.2", "t": "tf.contrib.keras.callbacks.ProgbarLogger"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/callbacks/ReduceLROnPlateau", "k": ["__init__", "in_cooldown", "on_batch_begin", "on_batch_end", "on_epoch_begin", "on_epoch_end", "on_train_begin", "on_train_end", "set_model", "set_params"], "r": "r1.2", "t": "tf.contrib.keras.callbacks.ReduceLROnPlateau"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/callbacks/RemoteMonitor", "k": ["__init__", "on_batch_begin", "on_batch_end", "on_epoch_begin", "on_epoch_end", "on_train_begin", "on_train_end", "set_model", "set_params"], "r": "r1.2", "t": "tf.contrib.keras.callbacks.RemoteMonitor"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/callbacks/TensorBoard", "k": ["__init__", "on_batch_begin", "on_batch_end", "on_epoch_begin", "on_epoch_end", "on_train_begin", "on_train_end", "set_model", "set_params"], "r": "r1.2", "t": "tf.contrib.keras.callbacks.TensorBoard"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/constraints", "k": [], "r": "r1.2", "t": "tf.contrib.keras.constraints"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/constraints/Constraint", "k": ["__call__", "get_config"], "r": "r1.2", "t": "tf.contrib.keras.constraints.Constraint"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/constraints/MaxNorm", "k": ["__call__", "__init__", "get_config"], "r": "r1.2", "t": "tf.contrib.keras.constraints.MaxNorm"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/constraints/MinMaxNorm", "k": ["__call__", "__init__", "get_config"], "r": "r1.2", "t": "tf.contrib.keras.constraints.MinMaxNorm"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/constraints/NonNeg", "k": ["__call__", "get_config"], "r": "r1.2", "t": "tf.contrib.keras.constraints.NonNeg"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/constraints/UnitNorm", "k": ["__call__", "__init__", "get_config"], "r": "r1.2", "t": "tf.contrib.keras.constraints.UnitNorm"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/constraints/deserialize", "k": [], "r": "r1.2", "t": "tf.contrib.keras.constraints.deserialize"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/constraints/get", "k": [], "r": "r1.2", "t": "tf.contrib.keras.constraints.get"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/constraints/serialize", "k": [], "r": "r1.2", "t": "tf.contrib.keras.constraints.serialize"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/datasets", "k": [], "r": "r1.2", "t": "tf.contrib.keras.datasets"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/datasets/boston_housing", "k": [], "r": "r1.2", "t": "tf.contrib.keras.datasets.boston_housing"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/datasets/boston_housing/load_data", "k": [], "r": "r1.2", "t": "tf.contrib.keras.datasets.boston_housing.load_data"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/datasets/cifar10", "k": [], "r": "r1.2", "t": "tf.contrib.keras.datasets.cifar10"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/datasets/cifar10/load_data", "k": [], "r": "r1.2", "t": "tf.contrib.keras.datasets.cifar10.load_data"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/datasets/cifar100", "k": [], "r": "r1.2", "t": "tf.contrib.keras.datasets.cifar100"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/datasets/cifar100/load_data", "k": [], "r": "r1.2", "t": "tf.contrib.keras.datasets.cifar100.load_data"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/datasets/imdb", "k": [], "r": "r1.2", "t": "tf.contrib.keras.datasets.imdb"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/datasets/imdb/get_word_index", "k": [], "r": "r1.2", "t": "tf.contrib.keras.datasets.imdb.get_word_index"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/datasets/imdb/load_data", "k": [], "r": "r1.2", "t": "tf.contrib.keras.datasets.imdb.load_data"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/datasets/mnist", "k": [], "r": "r1.2", "t": "tf.contrib.keras.datasets.mnist"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/datasets/mnist/load_data", "k": [], "r": "r1.2", "t": "tf.contrib.keras.datasets.mnist.load_data"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/datasets/reuters", "k": [], "r": "r1.2", "t": "tf.contrib.keras.datasets.reuters"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/datasets/reuters/get_word_index", "k": [], "r": "r1.2", "t": "tf.contrib.keras.datasets.reuters.get_word_index"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/datasets/reuters/load_data", "k": [], "r": "r1.2", "t": "tf.contrib.keras.datasets.reuters.load_data"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/initializers", "k": [], "r": "r1.2", "t": "tf.contrib.keras.initializers"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/initializers/Identity", "k": ["__call__", "__init__", "from_config", "get_config"], "r": "r1.2", "t": "tf.contrib.keras.initializers.Identity"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/initializers/Initializer", "k": ["__call__", "from_config", "get_config"], "r": "r1.2", "t": "tf.contrib.keras.initializers.Initializer"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/initializers/VarianceScaling", "k": ["__call__", "__init__", "from_config", "get_config"], "r": "r1.2", "t": "tf.contrib.keras.initializers.VarianceScaling"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/initializers/deserialize", "k": [], "r": "r1.2", "t": "tf.contrib.keras.initializers.deserialize"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/initializers/get", "k": [], "r": "r1.2", "t": "tf.contrib.keras.initializers.get"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/initializers/glorot_normal", "k": [], "r": "r1.2", "t": "tf.contrib.keras.initializers.glorot_normal"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/initializers/glorot_uniform", "k": [], "r": "r1.2", "t": "tf.contrib.keras.initializers.glorot_uniform"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/initializers/he_normal", "k": [], "r": "r1.2", "t": "tf.contrib.keras.initializers.he_normal"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/initializers/he_uniform", "k": [], "r": "r1.2", "t": "tf.contrib.keras.initializers.he_uniform"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/initializers/lecun_uniform", "k": [], "r": "r1.2", "t": "tf.contrib.keras.initializers.lecun_uniform"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/initializers/serialize", "k": [], "r": "r1.2", "t": "tf.contrib.keras.initializers.serialize"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/layers", "k": [], "r": "r1.2", "t": "tf.contrib.keras.layers"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/layers/Activation", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.2", "t": "tf.contrib.keras.layers.Activation"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/layers/ActivityRegularization", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.2", "t": "tf.contrib.keras.layers.ActivityRegularization"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/layers/Add", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.2", "t": "tf.contrib.keras.layers.Add"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/layers/Average", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.2", "t": "tf.contrib.keras.layers.Average"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/layers/AveragePooling1D", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.2", "t": "tf.contrib.keras.layers.AveragePooling1D"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/layers/AveragePooling2D", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.2", "t": "tf.contrib.keras.layers.AveragePooling2D"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/layers/AveragePooling3D", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.2", "t": "tf.contrib.keras.layers.AveragePooling3D"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/layers/BatchNormalization", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.2", "t": "tf.contrib.keras.layers.BatchNormalization"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/layers/Concatenate", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.2", "t": "tf.contrib.keras.layers.Concatenate"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/layers/Conv1D", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.2", "t": "tf.contrib.keras.layers.Conv1D"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/layers/Conv2D", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.2", "t": "tf.contrib.keras.layers.Conv2D"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/layers/Conv2DTranspose", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.2", "t": "tf.contrib.keras.layers.Conv2DTranspose"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/layers/Conv3D", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.2", "t": "tf.contrib.keras.layers.Conv3D"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/layers/ConvLSTM2D", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_constants", "get_initial_states", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "input_conv", "preprocess_input", "reccurent_conv", "reset_states", "set_weights", "step"], "r": "r1.2", "t": "tf.contrib.keras.layers.ConvLSTM2D"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/layers/Cropping1D", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.2", "t": "tf.contrib.keras.layers.Cropping1D"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/layers/Cropping2D", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.2", "t": "tf.contrib.keras.layers.Cropping2D"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/layers/Cropping3D", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.2", "t": "tf.contrib.keras.layers.Cropping3D"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/layers/Dense", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.2", "t": "tf.contrib.keras.layers.Dense"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/layers/Dot", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.2", "t": "tf.contrib.keras.layers.Dot"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/layers/Dropout", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.2", "t": "tf.contrib.keras.layers.Dropout"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/layers/ELU", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.2", "t": "tf.contrib.keras.layers.ELU"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/layers/Embedding", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.2", "t": "tf.contrib.keras.layers.Embedding"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/layers/Flatten", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.2", "t": "tf.contrib.keras.layers.Flatten"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/layers/GRU", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_constants", "get_initial_states", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "preprocess_input", "reset_states", "set_weights", "step"], "r": "r1.2", "t": "tf.contrib.keras.layers.GRU"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/layers/GaussianDropout", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.2", "t": "tf.contrib.keras.layers.GaussianDropout"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/layers/GaussianNoise", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.2", "t": "tf.contrib.keras.layers.GaussianNoise"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/layers/GlobalAveragePooling1D", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.2", "t": "tf.contrib.keras.layers.GlobalAveragePooling1D"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/layers/GlobalAveragePooling2D", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.2", "t": "tf.contrib.keras.layers.GlobalAveragePooling2D"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/layers/GlobalAveragePooling3D", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.2", "t": "tf.contrib.keras.layers.GlobalAveragePooling3D"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/layers/GlobalMaxPool1D", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.2", "t": "tf.contrib.keras.layers.GlobalMaxPool1D"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/layers/GlobalMaxPool2D", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.2", "t": "tf.contrib.keras.layers.GlobalMaxPool2D"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/layers/GlobalMaxPool3D", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.2", "t": "tf.contrib.keras.layers.GlobalMaxPool3D"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/layers/Input", "k": [], "r": "r1.2", "t": "tf.contrib.keras.layers.Input"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/layers/InputLayer", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.2", "t": "tf.contrib.keras.layers.InputLayer"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/layers/InputSpec", "k": ["__init__"], "r": "r1.2", "t": "tf.contrib.keras.layers.InputSpec"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/layers/LSTM", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_constants", "get_initial_states", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "preprocess_input", "reset_states", "set_weights", "step"], "r": "r1.2", "t": "tf.contrib.keras.layers.LSTM"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/layers/Lambda", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.2", "t": "tf.contrib.keras.layers.Lambda"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/layers/Layer", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.2", "t": "tf.contrib.keras.layers.Layer"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/layers/LeakyReLU", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.2", "t": "tf.contrib.keras.layers.LeakyReLU"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/layers/LocallyConnected1D", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.2", "t": "tf.contrib.keras.layers.LocallyConnected1D"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/layers/LocallyConnected2D", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.2", "t": "tf.contrib.keras.layers.LocallyConnected2D"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/layers/Masking", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.2", "t": "tf.contrib.keras.layers.Masking"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/layers/MaxPool1D", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.2", "t": "tf.contrib.keras.layers.MaxPool1D"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/layers/MaxPool2D", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.2", "t": "tf.contrib.keras.layers.MaxPool2D"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/layers/MaxPool3D", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.2", "t": "tf.contrib.keras.layers.MaxPool3D"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/layers/Maximum", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.2", "t": "tf.contrib.keras.layers.Maximum"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/layers/Multiply", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.2", "t": "tf.contrib.keras.layers.Multiply"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/layers/PReLU", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.2", "t": "tf.contrib.keras.layers.PReLU"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/layers/Permute", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.2", "t": "tf.contrib.keras.layers.Permute"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/layers/RepeatVector", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.2", "t": "tf.contrib.keras.layers.RepeatVector"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/layers/Reshape", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.2", "t": "tf.contrib.keras.layers.Reshape"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/layers/SeparableConv2D", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.2", "t": "tf.contrib.keras.layers.SeparableConv2D"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/layers/SimpleRNN", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_constants", "get_initial_states", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "preprocess_input", "reset_states", "set_weights", "step"], "r": "r1.2", "t": "tf.contrib.keras.layers.SimpleRNN"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/layers/SpatialDropout1D", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.2", "t": "tf.contrib.keras.layers.SpatialDropout1D"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/layers/SpatialDropout2D", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.2", "t": "tf.contrib.keras.layers.SpatialDropout2D"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/layers/SpatialDropout3D", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.2", "t": "tf.contrib.keras.layers.SpatialDropout3D"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/layers/ThresholdedReLU", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.2", "t": "tf.contrib.keras.layers.ThresholdedReLU"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/layers/UpSampling1D", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.2", "t": "tf.contrib.keras.layers.UpSampling1D"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/layers/UpSampling2D", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.2", "t": "tf.contrib.keras.layers.UpSampling2D"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/layers/UpSampling3D", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.2", "t": "tf.contrib.keras.layers.UpSampling3D"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/layers/ZeroPadding1D", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.2", "t": "tf.contrib.keras.layers.ZeroPadding1D"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/layers/ZeroPadding2D", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.2", "t": "tf.contrib.keras.layers.ZeroPadding2D"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/layers/ZeroPadding3D", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.2", "t": "tf.contrib.keras.layers.ZeroPadding3D"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/layers/add", "k": [], "r": "r1.2", "t": "tf.contrib.keras.layers.add"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/layers/average", "k": [], "r": "r1.2", "t": "tf.contrib.keras.layers.average"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/layers/concatenate", "k": [], "r": "r1.2", "t": "tf.contrib.keras.layers.concatenate"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/layers/dot", "k": [], "r": "r1.2", "t": "tf.contrib.keras.layers.dot"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/layers/maximum", "k": [], "r": "r1.2", "t": "tf.contrib.keras.layers.maximum"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/layers/multiply", "k": [], "r": "r1.2", "t": "tf.contrib.keras.layers.multiply"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/losses", "k": [], "r": "r1.2", "t": "tf.contrib.keras.losses"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/losses/binary_crossentropy", "k": [], "r": "r1.2", "t": "tf.contrib.keras.losses.binary_crossentropy"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/losses/categorical_crossentropy", "k": [], "r": "r1.2", "t": "tf.contrib.keras.losses.categorical_crossentropy"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/losses/cosine_proximity", "k": [], "r": "r1.2", "t": "tf.contrib.keras.losses.cosine_proximity"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/losses/deserialize", "k": [], "r": "r1.2", "t": "tf.contrib.keras.losses.deserialize"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/losses/get", "k": [], "r": "r1.2", "t": "tf.contrib.keras.losses.get"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/losses/hinge", "k": [], "r": "r1.2", "t": "tf.contrib.keras.losses.hinge"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/losses/kullback_leibler_divergence", "k": [], "r": "r1.2", "t": "tf.contrib.keras.losses.kullback_leibler_divergence"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/losses/mean_absolute_error", "k": [], "r": "r1.2", "t": "tf.contrib.keras.losses.mean_absolute_error"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/losses/mean_absolute_percentage_error", "k": [], "r": "r1.2", "t": "tf.contrib.keras.losses.mean_absolute_percentage_error"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/losses/mean_squared_error", "k": [], "r": "r1.2", "t": "tf.contrib.keras.losses.mean_squared_error"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/losses/mean_squared_logarithmic_error", "k": [], "r": "r1.2", "t": "tf.contrib.keras.losses.mean_squared_logarithmic_error"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/losses/poisson", "k": [], "r": "r1.2", "t": "tf.contrib.keras.losses.poisson"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/losses/serialize", "k": [], "r": "r1.2", "t": "tf.contrib.keras.losses.serialize"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/losses/sparse_categorical_crossentropy", "k": [], "r": "r1.2", "t": "tf.contrib.keras.losses.sparse_categorical_crossentropy"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/losses/squared_hinge", "k": [], "r": "r1.2", "t": "tf.contrib.keras.losses.squared_hinge"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/metrics", "k": [], "r": "r1.2", "t": "tf.contrib.keras.metrics"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/metrics/binary_accuracy", "k": [], "r": "r1.2", "t": "tf.contrib.keras.metrics.binary_accuracy"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/metrics/categorical_accuracy", "k": [], "r": "r1.2", "t": "tf.contrib.keras.metrics.categorical_accuracy"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/metrics/deserialize", "k": [], "r": "r1.2", "t": "tf.contrib.keras.metrics.deserialize"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/metrics/get", "k": [], "r": "r1.2", "t": "tf.contrib.keras.metrics.get"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/metrics/serialize", "k": [], "r": "r1.2", "t": "tf.contrib.keras.metrics.serialize"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/metrics/top_k_categorical_accuracy", "k": [], "r": "r1.2", "t": "tf.contrib.keras.metrics.top_k_categorical_accuracy"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/models", "k": [], "r": "r1.2", "t": "tf.contrib.keras.models"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/models/Model", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "input_spec", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "state_updates", "stateful", "trainable_variables", "trainable_weights", "updates", "uses_learning_phase", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compile", "compute_mask", "count_params", "evaluate", "evaluate_generator", "fit", "fit_generator", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_layer", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "load_weights", "predict", "predict_generator", "predict_on_batch", "reset_states", "run_internal_graph", "save", "save_weights", "set_weights", "summary", "test_on_batch", "to_json", "to_yaml", "train_on_batch"], "r": "r1.2", "t": "tf.contrib.keras.models.Model"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/models/Sequential", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "input_spec", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "regularizers", "scope_name", "state_updates", "stateful", "trainable", "trainable_variables", "trainable_weights", "updates", "uses_learning_phase", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compile", "compute_mask", "count_params", "evaluate", "evaluate_generator", "fit", "fit_generator", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_layer", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "load_weights", "pop", "predict", "predict_classes", "predict_generator", "predict_on_batch", "predict_proba", "reset_states", "run_internal_graph", "save", "save_weights", "set_weights", "summary", "test_on_batch", "to_json", "to_yaml", "train_on_batch"], "r": "r1.2", "t": "tf.contrib.keras.models.Sequential"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/models/load_model", "k": [], "r": "r1.2", "t": "tf.contrib.keras.models.load_model"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/models/model_from_config", "k": [], "r": "r1.2", "t": "tf.contrib.keras.models.model_from_config"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/models/model_from_json", "k": [], "r": "r1.2", "t": "tf.contrib.keras.models.model_from_json"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/models/model_from_yaml", "k": [], "r": "r1.2", "t": "tf.contrib.keras.models.model_from_yaml"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/models/save_model", "k": [], "r": "r1.2", "t": "tf.contrib.keras.models.save_model"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/optimizers", "k": [], "r": "r1.2", "t": "tf.contrib.keras.optimizers"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/optimizers/Adadelta", "k": ["__init__", "from_config", "get_config", "get_gradients", "get_updates", "get_weights", "set_weights"], "r": "r1.2", "t": "tf.contrib.keras.optimizers.Adadelta"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/optimizers/Adagrad", "k": ["__init__", "from_config", "get_config", "get_gradients", "get_updates", "get_weights", "set_weights"], "r": "r1.2", "t": "tf.contrib.keras.optimizers.Adagrad"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/optimizers/Adam", "k": ["__init__", "from_config", "get_config", "get_gradients", "get_updates", "get_weights", "set_weights"], "r": "r1.2", "t": "tf.contrib.keras.optimizers.Adam"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/optimizers/Adamax", "k": ["__init__", "from_config", "get_config", "get_gradients", "get_updates", "get_weights", "set_weights"], "r": "r1.2", "t": "tf.contrib.keras.optimizers.Adamax"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/optimizers/Nadam", "k": ["__init__", "from_config", "get_config", "get_gradients", "get_updates", "get_weights", "set_weights"], "r": "r1.2", "t": "tf.contrib.keras.optimizers.Nadam"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/optimizers/Optimizer", "k": ["__init__", "from_config", "get_config", "get_gradients", "get_updates", "get_weights", "set_weights"], "r": "r1.2", "t": "tf.contrib.keras.optimizers.Optimizer"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/optimizers/RMSprop", "k": ["__init__", "from_config", "get_config", "get_gradients", "get_updates", "get_weights", "set_weights"], "r": "r1.2", "t": "tf.contrib.keras.optimizers.RMSprop"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/optimizers/SGD", "k": ["__init__", "from_config", "get_config", "get_gradients", "get_updates", "get_weights", "set_weights"], "r": "r1.2", "t": "tf.contrib.keras.optimizers.SGD"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/optimizers/deserialize", "k": [], "r": "r1.2", "t": "tf.contrib.keras.optimizers.deserialize"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/optimizers/get", "k": [], "r": "r1.2", "t": "tf.contrib.keras.optimizers.get"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/optimizers/serialize", "k": [], "r": "r1.2", "t": "tf.contrib.keras.optimizers.serialize"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/preprocessing", "k": [], "r": "r1.2", "t": "tf.contrib.keras.preprocessing"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/preprocessing/image", "k": [], "r": "r1.2", "t": "tf.contrib.keras.preprocessing.image"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/preprocessing/image/DirectoryIterator", "k": ["__init__", "__iter__", "__next__", "next", "reset"], "r": "r1.2", "t": "tf.contrib.keras.preprocessing.image.DirectoryIterator"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/preprocessing/image/ImageDataGenerator", "k": ["__init__", "fit", "flow", "flow_from_directory", "random_transform", "standardize"], "r": "r1.2", "t": "tf.contrib.keras.preprocessing.image.ImageDataGenerator"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/preprocessing/image/Iterator", "k": ["__init__", "__iter__", "__next__", "reset"], "r": "r1.2", "t": "tf.contrib.keras.preprocessing.image.Iterator"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/preprocessing/image/NumpyArrayIterator", "k": ["__init__", "__iter__", "__next__", "next", "reset"], "r": "r1.2", "t": "tf.contrib.keras.preprocessing.image.NumpyArrayIterator"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/preprocessing/image/apply_transform", "k": [], "r": "r1.2", "t": "tf.contrib.keras.preprocessing.image.apply_transform"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/preprocessing/image/array_to_img", "k": [], "r": "r1.2", "t": "tf.contrib.keras.preprocessing.image.array_to_img"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/preprocessing/image/flip_axis", "k": [], "r": "r1.2", "t": "tf.contrib.keras.preprocessing.image.flip_axis"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/preprocessing/image/img_to_array", "k": [], "r": "r1.2", "t": "tf.contrib.keras.preprocessing.image.img_to_array"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/preprocessing/image/load_img", "k": [], "r": "r1.2", "t": "tf.contrib.keras.preprocessing.image.load_img"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/preprocessing/image/random_channel_shift", "k": [], "r": "r1.2", "t": "tf.contrib.keras.preprocessing.image.random_channel_shift"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/preprocessing/image/random_rotation", "k": [], "r": "r1.2", "t": "tf.contrib.keras.preprocessing.image.random_rotation"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/preprocessing/image/random_shear", "k": [], "r": "r1.2", "t": "tf.contrib.keras.preprocessing.image.random_shear"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/preprocessing/image/random_shift", "k": [], "r": "r1.2", "t": "tf.contrib.keras.preprocessing.image.random_shift"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/preprocessing/image/random_zoom", "k": [], "r": "r1.2", "t": "tf.contrib.keras.preprocessing.image.random_zoom"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/preprocessing/sequence", "k": [], "r": "r1.2", "t": "tf.contrib.keras.preprocessing.sequence"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/preprocessing/sequence/make_sampling_table", "k": [], "r": "r1.2", "t": "tf.contrib.keras.preprocessing.sequence.make_sampling_table"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/preprocessing/sequence/pad_sequences", "k": [], "r": "r1.2", "t": "tf.contrib.keras.preprocessing.sequence.pad_sequences"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/preprocessing/sequence/skipgrams", "k": [], "r": "r1.2", "t": "tf.contrib.keras.preprocessing.sequence.skipgrams"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/preprocessing/text", "k": [], "r": "r1.2", "t": "tf.contrib.keras.preprocessing.text"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/preprocessing/text/Tokenizer", "k": ["__init__", "fit_on_sequences", "fit_on_texts", "sequences_to_matrix", "texts_to_matrix", "texts_to_sequences", "texts_to_sequences_generator"], "r": "r1.2", "t": "tf.contrib.keras.preprocessing.text.Tokenizer"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/preprocessing/text/one_hot", "k": [], "r": "r1.2", "t": "tf.contrib.keras.preprocessing.text.one_hot"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/preprocessing/text/text_to_word_sequence", "k": [], "r": "r1.2", "t": "tf.contrib.keras.preprocessing.text.text_to_word_sequence"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/regularizers", "k": [], "r": "r1.2", "t": "tf.contrib.keras.regularizers"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/regularizers/L1L2", "k": ["__call__", "__init__", "from_config", "get_config"], "r": "r1.2", "t": "tf.contrib.keras.regularizers.L1L2"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/regularizers/Regularizer", "k": ["__call__", "from_config"], "r": "r1.2", "t": "tf.contrib.keras.regularizers.Regularizer"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/regularizers/deserialize", "k": [], "r": "r1.2", "t": "tf.contrib.keras.regularizers.deserialize"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/regularizers/get", "k": [], "r": "r1.2", "t": "tf.contrib.keras.regularizers.get"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/regularizers/l1", "k": [], "r": "r1.2", "t": "tf.contrib.keras.regularizers.l1"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/regularizers/l1_l2", "k": [], "r": "r1.2", "t": "tf.contrib.keras.regularizers.l1_l2"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/regularizers/l2", "k": [], "r": "r1.2", "t": "tf.contrib.keras.regularizers.l2"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/regularizers/serialize", "k": [], "r": "r1.2", "t": "tf.contrib.keras.regularizers.serialize"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/utils", "k": [], "r": "r1.2", "t": "tf.contrib.keras.utils"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/utils/CustomObjectScope", "k": ["__enter__", "__exit__", "__init__"], "r": "r1.2", "t": "tf.contrib.keras.utils.CustomObjectScope"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/utils/HDF5Matrix", "k": ["shape", "__getitem__", "__init__", "__len__", "refs"], "r": "r1.2", "t": "tf.contrib.keras.utils.HDF5Matrix"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/utils/Progbar", "k": ["__init__", "add", "update"], "r": "r1.2", "t": "tf.contrib.keras.utils.Progbar"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/utils/convert_all_kernels_in_model", "k": [], "r": "r1.2", "t": "tf.contrib.keras.utils.convert_all_kernels_in_model"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/utils/custom_object_scope", "k": [], "r": "r1.2", "t": "tf.contrib.keras.utils.custom_object_scope"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/utils/deserialize_keras_object", "k": [], "r": "r1.2", "t": "tf.contrib.keras.utils.deserialize_keras_object"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/utils/get_custom_objects", "k": [], "r": "r1.2", "t": "tf.contrib.keras.utils.get_custom_objects"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/utils/get_file", "k": [], "r": "r1.2", "t": "tf.contrib.keras.utils.get_file"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/utils/normalize", "k": [], "r": "r1.2", "t": "tf.contrib.keras.utils.normalize"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/utils/plot_model", "k": [], "r": "r1.2", "t": "tf.contrib.keras.utils.plot_model"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/utils/serialize_keras_object", "k": [], "r": "r1.2", "t": "tf.contrib.keras.utils.serialize_keras_object"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/utils/to_categorical", "k": [], "r": "r1.2", "t": "tf.contrib.keras.utils.to_categorical"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/wrappers", "k": [], "r": "r1.2", "t": "tf.contrib.keras.wrappers"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/wrappers/scikit_learn", "k": [], "r": "r1.2", "t": "tf.contrib.keras.wrappers.scikit_learn"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/wrappers/scikit_learn/KerasClassifier", "k": ["__init__", "check_params", "filter_sk_params", "fit", "get_params", "predict", "predict_proba", "score", "set_params"], "r": "r1.2", "t": "tf.contrib.keras.wrappers.scikit_learn.KerasClassifier"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/keras/wrappers/scikit_learn/KerasRegressor", "k": ["__init__", "check_params", "filter_sk_params", "fit", "get_params", "predict", "score", "set_params"], "r": "r1.2", "t": "tf.contrib.keras.wrappers.scikit_learn.KerasRegressor"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/kernel_methods", "k": [], "r": "r1.2", "t": "tf.contrib.kernel_methods"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/kernel_methods/KernelLinearClassifier", "k": ["config", "model_dir", "__init__", "evaluate", "export", "export_savedmodel", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "predict_classes", "predict_proba", "set_params"], "r": "r1.2", "t": "tf.contrib.kernel_methods.KernelLinearClassifier"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/kernel_methods/RandomFourierFeatureMapper", "k": ["input_dim", "name", "output_dim", "__init__", "map"], "r": "r1.2", "t": "tf.contrib.kernel_methods.RandomFourierFeatureMapper"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/labeled_tensor", "k": [], "r": "r1.2", "t": "tf.contrib.labeled_tensor"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/layers", "k": ["OPTIMIZER_CLS_NAMES", "SPARSE_FEATURE_CROSS_DEFAULT_HASH_KEY", "elu", "legacy_linear", "legacy_relu", "linear", "relu", "relu6", "scale_gradient"], "r": "r1.2", "t": "tf.contrib.layers"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/layers/apply_regularization", "k": [], "r": "r1.2", "t": "tf.contrib.layers.apply_regularization"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/layers/avg_pool2d", "k": [], "r": "r1.2", "t": "tf.contrib.layers.avg_pool2d"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/layers/batch_norm", "k": [], "r": "r1.2", "t": "tf.contrib.layers.batch_norm"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/layers/bias_add", "k": [], "r": "r1.2", "t": "tf.contrib.layers.bias_add"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/layers/bow_encoder", "k": [], "r": "r1.2", "t": "tf.contrib.layers.bow_encoder"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/layers/bucketized_column", "k": [], "r": "r1.2", "t": "tf.contrib.layers.bucketized_column"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/layers/check_feature_columns", "k": [], "r": "r1.2", "t": "tf.contrib.layers.check_feature_columns"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/layers/conv2d", "k": [], "r": "r1.2", "t": "tf.contrib.layers.conv2d"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/layers/conv2d_in_plane", "k": [], "r": "r1.2", "t": "tf.contrib.layers.conv2d_in_plane"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/layers/conv2d_transpose", "k": [], "r": "r1.2", "t": "tf.contrib.layers.conv2d_transpose"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/layers/create_feature_spec_for_parsing", "k": [], "r": "r1.2", "t": "tf.contrib.layers.create_feature_spec_for_parsing"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/layers/crossed_column", "k": [], "r": "r1.2", "t": "tf.contrib.layers.crossed_column"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/layers/dropout", "k": [], "r": "r1.2", "t": "tf.contrib.layers.dropout"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/layers/embed_sequence", "k": [], "r": "r1.2", "t": "tf.contrib.layers.embed_sequence"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/layers/embedding_column", "k": [], "r": "r1.2", "t": "tf.contrib.layers.embedding_column"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/layers/embedding_lookup_unique", "k": [], "r": "r1.2", "t": "tf.contrib.layers.embedding_lookup_unique"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/layers/feature_column", "k": [], "r": "r1.2", "t": "tf.contrib.layers.feature_column"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/layers/flatten", "k": [], "r": "r1.2", "t": "tf.contrib.layers.flatten"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/layers/fully_connected", "k": [], "r": "r1.2", "t": "tf.contrib.layers.fully_connected"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/layers/infer_real_valued_columns", "k": [], "r": "r1.2", "t": "tf.contrib.layers.infer_real_valued_columns"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/layers/input_from_feature_columns", "k": [], "r": "r1.2", "t": "tf.contrib.layers.input_from_feature_columns"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/layers/joint_weighted_sum_from_feature_columns", "k": [], "r": "r1.2", "t": "tf.contrib.layers.joint_weighted_sum_from_feature_columns"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/layers/l1_regularizer", "k": [], "r": "r1.2", "t": "tf.contrib.layers.l1_regularizer"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/layers/l2_regularizer", "k": [], "r": "r1.2", "t": "tf.contrib.layers.l2_regularizer"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/layers/layer_norm", "k": [], "r": "r1.2", "t": "tf.contrib.layers.layer_norm"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/layers/legacy_fully_connected", "k": [], "r": "r1.2", "t": "tf.contrib.layers.legacy_fully_connected"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/layers/make_place_holder_tensors_for_base_features", "k": [], "r": "r1.2", "t": "tf.contrib.layers.make_place_holder_tensors_for_base_features"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/layers/max_pool2d", "k": [], "r": "r1.2", "t": "tf.contrib.layers.max_pool2d"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/layers/multi_class_target", "k": [], "r": "r1.2", "t": "tf.contrib.layers.multi_class_target"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/layers/one_hot_column", "k": [], "r": "r1.2", "t": "tf.contrib.layers.one_hot_column"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/layers/one_hot_encoding", "k": [], "r": "r1.2", "t": "tf.contrib.layers.one_hot_encoding"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/layers/optimize_loss", "k": [], "r": "r1.2", "t": "tf.contrib.layers.optimize_loss"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/layers/parse_feature_columns_from_examples", "k": [], "r": "r1.2", "t": "tf.contrib.layers.parse_feature_columns_from_examples"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/layers/parse_feature_columns_from_sequence_examples", "k": [], "r": "r1.2", "t": "tf.contrib.layers.parse_feature_columns_from_sequence_examples"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/layers/real_valued_column", "k": [], "r": "r1.2", "t": "tf.contrib.layers.real_valued_column"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/layers/regression_target", "k": [], "r": "r1.2", "t": "tf.contrib.layers.regression_target"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/layers/repeat", "k": [], "r": "r1.2", "t": "tf.contrib.layers.repeat"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/layers/safe_embedding_lookup_sparse", "k": [], "r": "r1.2", "t": "tf.contrib.layers.safe_embedding_lookup_sparse"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/layers/scattered_embedding_column", "k": [], "r": "r1.2", "t": "tf.contrib.layers.scattered_embedding_column"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/layers/separable_conv2d", "k": [], "r": "r1.2", "t": "tf.contrib.layers.separable_conv2d"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/layers/sequence_input_from_feature_columns", "k": [], "r": "r1.2", "t": "tf.contrib.layers.sequence_input_from_feature_columns"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/layers/shared_embedding_columns", "k": [], "r": "r1.2", "t": "tf.contrib.layers.shared_embedding_columns"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/layers/softmax", "k": [], "r": "r1.2", "t": "tf.contrib.layers.softmax"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/layers/sparse_column_with_hash_bucket", "k": [], "r": "r1.2", "t": "tf.contrib.layers.sparse_column_with_hash_bucket"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/layers/sparse_column_with_integerized_feature", "k": [], "r": "r1.2", "t": "tf.contrib.layers.sparse_column_with_integerized_feature"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/layers/sparse_column_with_keys", "k": [], "r": "r1.2", "t": "tf.contrib.layers.sparse_column_with_keys"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/layers/stack", "k": [], "r": "r1.2", "t": "tf.contrib.layers.stack"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/layers/sum_regularizer", "k": [], "r": "r1.2", "t": "tf.contrib.layers.sum_regularizer"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/layers/summaries", "k": [], "r": "r1.2", "t": "tf.contrib.layers.summaries"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/layers/summarize_activation", "k": [], "r": "r1.2", "t": "tf.contrib.layers.summarize_activation"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/layers/summarize_activations", "k": [], "r": "r1.2", "t": "tf.contrib.layers.summarize_activations"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/layers/summarize_collection", "k": [], "r": "r1.2", "t": "tf.contrib.layers.summarize_collection"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/layers/summarize_tensor", "k": [], "r": "r1.2", "t": "tf.contrib.layers.summarize_tensor"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/layers/summarize_tensors", "k": [], "r": "r1.2", "t": "tf.contrib.layers.summarize_tensors"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/layers/transform_features", "k": [], "r": "r1.2", "t": "tf.contrib.layers.transform_features"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/layers/unit_norm", "k": [], "r": "r1.2", "t": "tf.contrib.layers.unit_norm"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/layers/variance_scaling_initializer", "k": [], "r": "r1.2", "t": "tf.contrib.layers.variance_scaling_initializer"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/layers/weighted_sparse_column", "k": [], "r": "r1.2", "t": "tf.contrib.layers.weighted_sparse_column"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/layers/weighted_sum_from_feature_columns", "k": [], "r": "r1.2", "t": "tf.contrib.layers.weighted_sum_from_feature_columns"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/layers/xavier_initializer", "k": [], "r": "r1.2", "t": "tf.contrib.layers.xavier_initializer"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/learn", "k": [], "r": "r1.2", "t": "tf.contrib.learn"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/learn/BaseEstimator", "k": ["config", "model_dir", "__init__", "evaluate", "export", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "set_params"], "r": "r1.2", "t": "tf.contrib.learn.BaseEstimator"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/learn/DNNClassifier", "k": ["config", "model_dir", "__init__", "evaluate", "export", "export_savedmodel", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "predict_classes", "predict_proba", "set_params"], "r": "r1.2", "t": "tf.contrib.learn.DNNClassifier"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/learn/DNNEstimator", "k": ["config", "model_dir", "__init__", "evaluate", "export", "export_savedmodel", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "set_params"], "r": "r1.2", "t": "tf.contrib.learn.DNNEstimator"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/learn/DNNLinearCombinedClassifier", "k": ["config", "model_dir", "__init__", "evaluate", "export", "export_savedmodel", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "predict_classes", "predict_proba", "set_params"], "r": "r1.2", "t": "tf.contrib.learn.DNNLinearCombinedClassifier"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/learn/DNNLinearCombinedEstimator", "k": ["config", "model_dir", "__init__", "evaluate", "export", "export_savedmodel", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "set_params"], "r": "r1.2", "t": "tf.contrib.learn.DNNLinearCombinedEstimator"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/learn/DNNLinearCombinedRegressor", "k": ["config", "model_dir", "__init__", "evaluate", "export", "export_savedmodel", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "predict_scores", "set_params"], "r": "r1.2", "t": "tf.contrib.learn.DNNLinearCombinedRegressor"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/learn/DNNRegressor", "k": ["config", "model_dir", "__init__", "evaluate", "export", "export_savedmodel", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "predict_scores", "set_params"], "r": "r1.2", "t": "tf.contrib.learn.DNNRegressor"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/learn/DynamicRnnEstimator", "k": ["config", "model_dir", "__init__", "evaluate", "export", "export_savedmodel", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "set_params"], "r": "r1.2", "t": "tf.contrib.learn.DynamicRnnEstimator"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/learn/Estimator", "k": ["config", "model_dir", "__init__", "evaluate", "export", "export_savedmodel", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "set_params"], "r": "r1.2", "t": "tf.contrib.learn.Estimator"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/learn/Evaluable", "k": ["model_dir", "evaluate"], "r": "r1.2", "t": "tf.contrib.learn.Evaluable"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/learn/Experiment", "k": ["estimator", "eval_metrics", "eval_steps", "train_steps", "__init__", "continuous_eval", "continuous_eval_on_train_data", "continuous_train_and_eval", "evaluate", "extend_train_hooks", "local_run", "reset_export_strategies", "run_std_server", "test", "train", "train_and_evaluate"], "r": "r1.2", "t": "tf.contrib.learn.Experiment"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/learn/ExportStrategy", "k": ["export_fn", "name", "__new__", "export"], "r": "r1.2", "t": "tf.contrib.learn.ExportStrategy"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/learn/Head", "k": ["logits_dimension", "create_model_fn_ops"], "r": "r1.2", "t": "tf.contrib.learn.Head"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/learn/InputFnOps", "k": ["default_inputs", "features", "labels", "__new__"], "r": "r1.2", "t": "tf.contrib.learn.InputFnOps"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/learn/KMeansClustering", "k": ["config", "model_dir", "__init__", "clusters", "evaluate", "export", "export_savedmodel", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "predict_cluster_idx", "score", "set_params", "transform", "ALL_SCORES", "CLUSTERS", "CLUSTER_IDX", "COSINE_DISTANCE", "KMEANS_PLUS_PLUS_INIT", "LOSS_OP_NAME", "RANDOM_INIT", "SCORES", "SQUARED_EUCLIDEAN_DISTANCE"], "r": "r1.2", "t": "tf.contrib.learn.KMeansClustering"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/learn/LinearClassifier", "k": ["config", "model_dir", "__init__", "evaluate", "export", "export_savedmodel", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "predict_classes", "predict_proba", "set_params"], "r": "r1.2", "t": "tf.contrib.learn.LinearClassifier"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/learn/LinearEstimator", "k": ["config", "model_dir", "__init__", "evaluate", "export", "export_savedmodel", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "set_params"], "r": "r1.2", "t": "tf.contrib.learn.LinearEstimator"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/learn/LinearRegressor", "k": ["config", "model_dir", "__init__", "evaluate", "export", "export_savedmodel", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "predict_scores", "set_params"], "r": "r1.2", "t": "tf.contrib.learn.LinearRegressor"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/learn/LogisticRegressor", "k": [], "r": "r1.2", "t": "tf.contrib.learn.LogisticRegressor"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/learn/MetricSpec", "k": ["label_key", "metric_fn", "prediction_key", "weight_key", "__init__", "create_metric_ops"], "r": "r1.2", "t": "tf.contrib.learn.MetricSpec"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/learn/ModeKeys", "k": ["validate", "EVAL", "INFER", "TRAIN"], "r": "r1.2", "t": "tf.contrib.learn.ModeKeys"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/learn/ModelFnOps", "k": ["eval_metric_ops", "loss", "mode", "output_alternatives", "predictions", "scaffold", "train_op", "training_chief_hooks", "training_hooks", "__new__", "estimator_spec"], "r": "r1.2", "t": "tf.contrib.learn.ModelFnOps"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/learn/NanLossDuringTrainingError", "k": [], "r": "r1.2", "t": "tf.contrib.learn.NanLossDuringTrainingError"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/learn/NotFittedError", "k": [], "r": "r1.2", "t": "tf.contrib.learn.NotFittedError"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/learn/PredictionKey", "k": ["CLASSES", "GENERIC", "LOGISTIC", "LOGITS", "PROBABILITIES", "SCORES", "TOP_K"], "r": "r1.2", "t": "tf.contrib.learn.PredictionKey"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/learn/ProblemType", "k": ["CLASSIFICATION", "LINEAR_REGRESSION", "LOGISTIC_REGRESSION", "UNSPECIFIED"], "r": "r1.2", "t": "tf.contrib.learn.ProblemType"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/learn/RunConfig", "k": ["cluster_spec", "environment", "evaluation_master", "is_chief", "keep_checkpoint_every_n_hours", "keep_checkpoint_max", "master", "model_dir", "num_ps_replicas", "num_worker_replicas", "save_checkpoints_secs", "save_checkpoints_steps", "save_summary_steps", "session_config", "task_id", "task_type", "tf_config", "tf_random_seed", "__init__", "get_task_id", "replace", "uid"], "r": "r1.2", "t": "tf.contrib.learn.RunConfig"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/learn/SKCompat", "k": ["__init__", "fit", "get_params", "predict", "score", "set_params"], "r": "r1.2", "t": "tf.contrib.learn.SKCompat"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/learn/SVM", "k": ["config", "model_dir", "__init__", "evaluate", "export", "export_savedmodel", "export_with_defaults", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "predict_classes", "predict_proba", "set_params"], "r": "r1.2", "t": "tf.contrib.learn.SVM"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/learn/TaskType", "k": ["MASTER", "PS", "WORKER"], "r": "r1.2", "t": "tf.contrib.learn.TaskType"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/learn/Trainable", "k": ["fit"], "r": "r1.2", "t": "tf.contrib.learn.Trainable"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/learn/binary_svm_head", "k": [], "r": "r1.2", "t": "tf.contrib.learn.binary_svm_head"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/learn/build_parsing_serving_input_fn", "k": [], "r": "r1.2", "t": "tf.contrib.learn.build_parsing_serving_input_fn"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/learn/datasets", "k": [], "r": "r1.2", "t": "tf.contrib.learn.datasets"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/learn/evaluate", "k": [], "r": "r1.2", "t": "tf.contrib.learn.evaluate"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/learn/extract_dask_data", "k": [], "r": "r1.2", "t": "tf.contrib.learn.extract_dask_data"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/learn/extract_dask_labels", "k": [], "r": "r1.2", "t": "tf.contrib.learn.extract_dask_labels"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/learn/extract_pandas_data", "k": [], "r": "r1.2", "t": "tf.contrib.learn.extract_pandas_data"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/learn/extract_pandas_labels", "k": [], "r": "r1.2", "t": "tf.contrib.learn.extract_pandas_labels"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/learn/extract_pandas_matrix", "k": [], "r": "r1.2", "t": "tf.contrib.learn.extract_pandas_matrix"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/learn/graph_actions", "k": [], "r": "r1.2", "t": "tf.contrib.learn.graph_actions"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/learn/head", "k": [], "r": "r1.2", "t": "tf.contrib.learn.head"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/learn/infer", "k": [], "r": "r1.2", "t": "tf.contrib.learn.infer"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/learn/infer_real_valued_columns_from_input", "k": [], "r": "r1.2", "t": "tf.contrib.learn.infer_real_valued_columns_from_input"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/learn/infer_real_valued_columns_from_input_fn", "k": [], "r": "r1.2", "t": "tf.contrib.learn.infer_real_valued_columns_from_input_fn"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/learn/io", "k": [], "r": "r1.2", "t": "tf.contrib.learn.io"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/learn/learn_runner", "k": [], "r": "r1.2", "t": "tf.contrib.learn.learn_runner"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/learn/learn_runner/run", "k": [], "r": "r1.2", "t": "tf.contrib.learn.learn_runner.run"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/learn/learn_runner/tune", "k": [], "r": "r1.2", "t": "tf.contrib.learn.learn_runner.tune"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/learn/make_export_strategy", "k": [], "r": "r1.2", "t": "tf.contrib.learn.make_export_strategy"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/learn/models", "k": [], "r": "r1.2", "t": "tf.contrib.learn.models"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/learn/monitors", "k": [], "r": "r1.2", "t": "tf.contrib.learn.monitors"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/learn/multi_class_head", "k": [], "r": "r1.2", "t": "tf.contrib.learn.multi_class_head"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/learn/multi_head", "k": [], "r": "r1.2", "t": "tf.contrib.learn.multi_head"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/learn/multi_label_head", "k": [], "r": "r1.2", "t": "tf.contrib.learn.multi_label_head"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/learn/no_op_train_fn", "k": [], "r": "r1.2", "t": "tf.contrib.learn.no_op_train_fn"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/learn/ops", "k": [], "r": "r1.2", "t": "tf.contrib.learn.ops"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/learn/poisson_regression_head", "k": [], "r": "r1.2", "t": "tf.contrib.learn.poisson_regression_head"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/learn/preprocessing", "k": [], "r": "r1.2", "t": "tf.contrib.learn.preprocessing"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/learn/read_batch_examples", "k": [], "r": "r1.2", "t": "tf.contrib.learn.read_batch_examples"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/learn/read_batch_features", "k": [], "r": "r1.2", "t": "tf.contrib.learn.read_batch_features"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/learn/read_batch_record_features", "k": [], "r": "r1.2", "t": "tf.contrib.learn.read_batch_record_features"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/learn/regression_head", "k": [], "r": "r1.2", "t": "tf.contrib.learn.regression_head"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/learn/run_feeds", "k": [], "r": "r1.2", "t": "tf.contrib.learn.run_feeds"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/learn/run_n", "k": [], "r": "r1.2", "t": "tf.contrib.learn.run_n"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/learn/train", "k": [], "r": "r1.2", "t": "tf.contrib.learn.train"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/learn/utils", "k": [], "r": "r1.2", "t": "tf.contrib.learn.utils"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/legacy_seq2seq", "k": [], "r": "r1.2", "t": "tf.contrib.legacy_seq2seq"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/legacy_seq2seq/attention_decoder", "k": [], "r": "r1.2", "t": "tf.contrib.legacy_seq2seq.attention_decoder"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/legacy_seq2seq/basic_rnn_seq2seq", "k": [], "r": "r1.2", "t": "tf.contrib.legacy_seq2seq.basic_rnn_seq2seq"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/legacy_seq2seq/embedding_attention_decoder", "k": [], "r": "r1.2", "t": "tf.contrib.legacy_seq2seq.embedding_attention_decoder"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/legacy_seq2seq/embedding_attention_seq2seq", "k": [], "r": "r1.2", "t": "tf.contrib.legacy_seq2seq.embedding_attention_seq2seq"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/legacy_seq2seq/embedding_rnn_decoder", "k": [], "r": "r1.2", "t": "tf.contrib.legacy_seq2seq.embedding_rnn_decoder"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/legacy_seq2seq/embedding_rnn_seq2seq", "k": [], "r": "r1.2", "t": "tf.contrib.legacy_seq2seq.embedding_rnn_seq2seq"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/legacy_seq2seq/embedding_tied_rnn_seq2seq", "k": [], "r": "r1.2", "t": "tf.contrib.legacy_seq2seq.embedding_tied_rnn_seq2seq"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/legacy_seq2seq/model_with_buckets", "k": [], "r": "r1.2", "t": "tf.contrib.legacy_seq2seq.model_with_buckets"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/legacy_seq2seq/one2many_rnn_seq2seq", "k": [], "r": "r1.2", "t": "tf.contrib.legacy_seq2seq.one2many_rnn_seq2seq"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/legacy_seq2seq/rnn_decoder", "k": [], "r": "r1.2", "t": "tf.contrib.legacy_seq2seq.rnn_decoder"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/legacy_seq2seq/sequence_loss", "k": [], "r": "r1.2", "t": "tf.contrib.legacy_seq2seq.sequence_loss"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/legacy_seq2seq/sequence_loss_by_example", "k": [], "r": "r1.2", "t": "tf.contrib.legacy_seq2seq.sequence_loss_by_example"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/legacy_seq2seq/tied_rnn_seq2seq", "k": [], "r": "r1.2", "t": "tf.contrib.legacy_seq2seq.tied_rnn_seq2seq"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/linalg", "k": [], "r": "r1.2", "t": "tf.contrib.linalg"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/linalg/LinearOperator", "k": ["batch_shape", "domain_dimension", "dtype", "graph_parents", "is_non_singular", "is_positive_definite", "is_self_adjoint", "is_square", "name", "range_dimension", "shape", "tensor_rank", "__init__", "add_to_tensor", "assert_non_singular", "assert_positive_definite", "assert_self_adjoint", "batch_shape_tensor", "determinant", "diag_part", "domain_dimension_tensor", "log_abs_determinant", "matmul", "matvec", "range_dimension_tensor", "shape_tensor", "solve", "solvevec", "tensor_rank_tensor", "to_dense"], "r": "r1.2", "t": "tf.contrib.linalg.LinearOperator"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/linalg/LinearOperatorComposition", "k": ["batch_shape", "domain_dimension", "dtype", "graph_parents", "is_non_singular", "is_positive_definite", "is_self_adjoint", "is_square", "name", "operators", "range_dimension", "shape", "tensor_rank", "__init__", "add_to_tensor", "assert_non_singular", "assert_positive_definite", "assert_self_adjoint", "batch_shape_tensor", "determinant", "diag_part", "domain_dimension_tensor", "log_abs_determinant", "matmul", "matvec", "range_dimension_tensor", "shape_tensor", "solve", "solvevec", "tensor_rank_tensor", "to_dense"], "r": "r1.2", "t": "tf.contrib.linalg.LinearOperatorComposition"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/linalg/LinearOperatorDiag", "k": ["batch_shape", "diag", "domain_dimension", "dtype", "graph_parents", "is_non_singular", "is_positive_definite", "is_self_adjoint", "is_square", "name", "range_dimension", "shape", "tensor_rank", "__init__", "add_to_tensor", "assert_non_singular", "assert_positive_definite", "assert_self_adjoint", "batch_shape_tensor", "determinant", "diag_part", "domain_dimension_tensor", "log_abs_determinant", "matmul", "matvec", "range_dimension_tensor", "shape_tensor", "solve", "solvevec", "tensor_rank_tensor", "to_dense"], "r": "r1.2", "t": "tf.contrib.linalg.LinearOperatorDiag"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/linalg/LinearOperatorFullMatrix", "k": ["batch_shape", "domain_dimension", "dtype", "graph_parents", "is_non_singular", "is_positive_definite", "is_self_adjoint", "is_square", "name", "range_dimension", "shape", "tensor_rank", "__init__", "add_to_tensor", "assert_non_singular", "assert_positive_definite", "assert_self_adjoint", "batch_shape_tensor", "determinant", "diag_part", "domain_dimension_tensor", "log_abs_determinant", "matmul", "matvec", "range_dimension_tensor", "shape_tensor", "solve", "solvevec", "tensor_rank_tensor", "to_dense"], "r": "r1.2", "t": "tf.contrib.linalg.LinearOperatorFullMatrix"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/linalg/LinearOperatorIdentity", "k": ["batch_shape", "domain_dimension", "dtype", "graph_parents", "is_non_singular", "is_positive_definite", "is_self_adjoint", "is_square", "name", "range_dimension", "shape", "tensor_rank", "__init__", "add_to_tensor", "assert_non_singular", "assert_positive_definite", "assert_self_adjoint", "batch_shape_tensor", "determinant", "diag_part", "domain_dimension_tensor", "log_abs_determinant", "matmul", "matvec", "range_dimension_tensor", "shape_tensor", "solve", "solvevec", "tensor_rank_tensor", "to_dense"], "r": "r1.2", "t": "tf.contrib.linalg.LinearOperatorIdentity"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/linalg/LinearOperatorScaledIdentity", "k": ["batch_shape", "domain_dimension", "dtype", "graph_parents", "is_non_singular", "is_positive_definite", "is_self_adjoint", "is_square", "multiplier", "name", "range_dimension", "shape", "tensor_rank", "__init__", "add_to_tensor", "assert_non_singular", "assert_positive_definite", "assert_self_adjoint", "batch_shape_tensor", "determinant", "diag_part", "domain_dimension_tensor", "log_abs_determinant", "matmul", "matvec", "range_dimension_tensor", "shape_tensor", "solve", "solvevec", "tensor_rank_tensor", "to_dense"], "r": "r1.2", "t": "tf.contrib.linalg.LinearOperatorScaledIdentity"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/linalg/LinearOperatorTriL", "k": ["batch_shape", "domain_dimension", "dtype", "graph_parents", "is_non_singular", "is_positive_definite", "is_self_adjoint", "is_square", "name", "range_dimension", "shape", "tensor_rank", "__init__", "add_to_tensor", "assert_non_singular", "assert_positive_definite", "assert_self_adjoint", "batch_shape_tensor", "determinant", "diag_part", "domain_dimension_tensor", "log_abs_determinant", "matmul", "matvec", "range_dimension_tensor", "shape_tensor", "solve", "solvevec", "tensor_rank_tensor", "to_dense"], "r": "r1.2", "t": "tf.contrib.linalg.LinearOperatorTriL"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/linalg/LinearOperatorUDVHUpdate", "k": ["base_operator", "batch_shape", "diag_operator", "diag_update", "domain_dimension", "dtype", "graph_parents", "is_diag_update_positive", "is_non_singular", "is_positive_definite", "is_self_adjoint", "is_square", "name", "range_dimension", "shape", "tensor_rank", "u", "v", "__init__", "add_to_tensor", "assert_non_singular", "assert_positive_definite", "assert_self_adjoint", "batch_shape_tensor", "determinant", "diag_part", "domain_dimension_tensor", "log_abs_determinant", "matmul", "matvec", "range_dimension_tensor", "shape_tensor", "solve", "solvevec", "tensor_rank_tensor", "to_dense"], "r": "r1.2", "t": "tf.contrib.linalg.LinearOperatorUDVHUpdate"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/linear_optimizer", "k": [], "r": "r1.2", "t": "tf.contrib.linear_optimizer"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/linear_optimizer/SDCAOptimizer", "k": ["example_id_column", "num_loss_partitions", "num_table_shards", "symmetric_l1_regularization", "symmetric_l2_regularization", "__init__", "get_name", "get_train_step"], "r": "r1.2", "t": "tf.contrib.linear_optimizer.SDCAOptimizer"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/linear_optimizer/SdcaModel", "k": ["__init__", "approximate_duality_gap", "minimize", "predictions", "regularized_loss", "unregularized_loss", "update_weights"], "r": "r1.2", "t": "tf.contrib.linear_optimizer.SdcaModel"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/linear_optimizer/SparseFeatureColumn", "k": ["example_indices", "feature_indices", "feature_values", "__init__"], "r": "r1.2", "t": "tf.contrib.linear_optimizer.SparseFeatureColumn"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/lookup", "k": ["FastHashSpec"], "r": "r1.2", "t": "tf.contrib.lookup"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/lookup/HashTable", "k": ["default_value", "init", "key_dtype", "name", "table_ref", "value_dtype", "__init__", "check_table_dtypes", "lookup", "size"], "r": "r1.2", "t": "tf.contrib.lookup.HashTable"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/lookup/HasherSpec", "k": ["hasher", "key", "__new__"], "r": "r1.2", "t": "tf.contrib.lookup.HasherSpec"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/lookup/IdTableWithHashBuckets", "k": ["init", "key_dtype", "name", "value_dtype", "__init__", "check_table_dtypes", "lookup", "size"], "r": "r1.2", "t": "tf.contrib.lookup.IdTableWithHashBuckets"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/lookup/InitializableLookupTableBase", "k": ["default_value", "init", "key_dtype", "name", "table_ref", "value_dtype", "__init__", "check_table_dtypes", "lookup", "size"], "r": "r1.2", "t": "tf.contrib.lookup.InitializableLookupTableBase"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/lookup/KeyValueTensorInitializer", "k": ["key_dtype", "value_dtype", "__init__", "initialize"], "r": "r1.2", "t": "tf.contrib.lookup.KeyValueTensorInitializer"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/lookup/LookupInterface", "k": ["init", "key_dtype", "name", "value_dtype", "__init__", "check_table_dtypes", "lookup", "size"], "r": "r1.2", "t": "tf.contrib.lookup.LookupInterface"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/lookup/MutableDenseHashTable", "k": ["init", "key_dtype", "name", "value_dtype", "__init__", "check_table_dtypes", "export", "insert", "lookup", "size"], "r": "r1.2", "t": "tf.contrib.lookup.MutableDenseHashTable"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/lookup/MutableHashTable", "k": ["init", "key_dtype", "name", "value_dtype", "__init__", "check_table_dtypes", "export", "insert", "lookup", "size"], "r": "r1.2", "t": "tf.contrib.lookup.MutableHashTable"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/lookup/StrongHashSpec", "k": ["hasher", "key", "__new__"], "r": "r1.2", "t": "tf.contrib.lookup.StrongHashSpec"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/lookup/TableInitializerBase", "k": ["key_dtype", "value_dtype", "__init__", "initialize"], "r": "r1.2", "t": "tf.contrib.lookup.TableInitializerBase"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/lookup/TextFileIdTableInitializer", "k": ["key_dtype", "value_dtype", "__init__", "initialize"], "r": "r1.2", "t": "tf.contrib.lookup.TextFileIdTableInitializer"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/lookup/TextFileIndex", "k": ["LINE_NUMBER", "WHOLE_LINE"], "r": "r1.2", "t": "tf.contrib.lookup.TextFileIndex"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/lookup/TextFileInitializer", "k": ["key_dtype", "value_dtype", "__init__", "initialize"], "r": "r1.2", "t": "tf.contrib.lookup.TextFileInitializer"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/lookup/TextFileStringTableInitializer", "k": ["key_dtype", "value_dtype", "__init__", "initialize"], "r": "r1.2", "t": "tf.contrib.lookup.TextFileStringTableInitializer"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/lookup/index_table_from_file", "k": [], "r": "r1.2", "t": "tf.contrib.lookup.index_table_from_file"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/lookup/index_table_from_tensor", "k": [], "r": "r1.2", "t": "tf.contrib.lookup.index_table_from_tensor"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/lookup/index_to_string", "k": [], "r": "r1.2", "t": "tf.contrib.lookup.index_to_string"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/lookup/index_to_string_table_from_file", "k": [], "r": "r1.2", "t": "tf.contrib.lookup.index_to_string_table_from_file"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/lookup/index_to_string_table_from_tensor", "k": [], "r": "r1.2", "t": "tf.contrib.lookup.index_to_string_table_from_tensor"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/lookup/string_to_index", "k": [], "r": "r1.2", "t": "tf.contrib.lookup.string_to_index"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/lookup/string_to_index_table_from_file", "k": [], "r": "r1.2", "t": "tf.contrib.lookup.string_to_index_table_from_file"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/lookup/string_to_index_table_from_tensor", "k": [], "r": "r1.2", "t": "tf.contrib.lookup.string_to_index_table_from_tensor"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/losses", "k": [], "r": "r1.2", "t": "tf.contrib.losses"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/losses/absolute_difference", "k": [], "r": "r1.2", "t": "tf.contrib.losses.absolute_difference"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/losses/add_loss", "k": [], "r": "r1.2", "t": "tf.contrib.losses.add_loss"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/losses/compute_weighted_loss", "k": [], "r": "r1.2", "t": "tf.contrib.losses.compute_weighted_loss"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/losses/cosine_distance", "k": [], "r": "r1.2", "t": "tf.contrib.losses.cosine_distance"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/losses/get_losses", "k": [], "r": "r1.2", "t": "tf.contrib.losses.get_losses"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/losses/get_regularization_losses", "k": [], "r": "r1.2", "t": "tf.contrib.losses.get_regularization_losses"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/losses/get_total_loss", "k": [], "r": "r1.2", "t": "tf.contrib.losses.get_total_loss"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/losses/hinge_loss", "k": [], "r": "r1.2", "t": "tf.contrib.losses.hinge_loss"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/losses/log_loss", "k": [], "r": "r1.2", "t": "tf.contrib.losses.log_loss"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/losses/mean_pairwise_squared_error", "k": [], "r": "r1.2", "t": "tf.contrib.losses.mean_pairwise_squared_error"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/losses/mean_squared_error", "k": [], "r": "r1.2", "t": "tf.contrib.losses.mean_squared_error"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/losses/sigmoid_cross_entropy", "k": [], "r": "r1.2", "t": "tf.contrib.losses.sigmoid_cross_entropy"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/losses/softmax_cross_entropy", "k": [], "r": "r1.2", "t": "tf.contrib.losses.softmax_cross_entropy"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/losses/sparse_softmax_cross_entropy", "k": [], "r": "r1.2", "t": "tf.contrib.losses.sparse_softmax_cross_entropy"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/memory_stats", "k": [], "r": "r1.2", "t": "tf.contrib.memory_stats"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/memory_stats/BytesLimit", "k": [], "r": "r1.2", "t": "tf.contrib.memory_stats.BytesLimit"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/memory_stats/MaxBytesInUse", "k": [], "r": "r1.2", "t": "tf.contrib.memory_stats.MaxBytesInUse"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/metrics", "k": [], "r": "r1.2", "t": "tf.contrib.metrics"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/metrics/accuracy", "k": [], "r": "r1.2", "t": "tf.contrib.metrics.accuracy"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/metrics/aggregate_metric_map", "k": [], "r": "r1.2", "t": "tf.contrib.metrics.aggregate_metric_map"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/metrics/aggregate_metrics", "k": [], "r": "r1.2", "t": "tf.contrib.metrics.aggregate_metrics"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/metrics/auc_using_histogram", "k": [], "r": "r1.2", "t": "tf.contrib.metrics.auc_using_histogram"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/metrics/confusion_matrix", "k": [], "r": "r1.2", "t": "tf.contrib.metrics.confusion_matrix"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/metrics/streaming_accuracy", "k": [], "r": "r1.2", "t": "tf.contrib.metrics.streaming_accuracy"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/metrics/streaming_auc", "k": [], "r": "r1.2", "t": "tf.contrib.metrics.streaming_auc"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/metrics/streaming_concat", "k": [], "r": "r1.2", "t": "tf.contrib.metrics.streaming_concat"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/metrics/streaming_covariance", "k": [], "r": "r1.2", "t": "tf.contrib.metrics.streaming_covariance"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/metrics/streaming_false_negatives", "k": [], "r": "r1.2", "t": "tf.contrib.metrics.streaming_false_negatives"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/metrics/streaming_false_negatives_at_thresholds", "k": [], "r": "r1.2", "t": "tf.contrib.metrics.streaming_false_negatives_at_thresholds"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/metrics/streaming_false_positives", "k": [], "r": "r1.2", "t": "tf.contrib.metrics.streaming_false_positives"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/metrics/streaming_false_positives_at_thresholds", "k": [], "r": "r1.2", "t": "tf.contrib.metrics.streaming_false_positives_at_thresholds"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/metrics/streaming_mean", "k": [], "r": "r1.2", "t": "tf.contrib.metrics.streaming_mean"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/metrics/streaming_mean_absolute_error", "k": [], "r": "r1.2", "t": "tf.contrib.metrics.streaming_mean_absolute_error"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/metrics/streaming_mean_cosine_distance", "k": [], "r": "r1.2", "t": "tf.contrib.metrics.streaming_mean_cosine_distance"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/metrics/streaming_mean_iou", "k": [], "r": "r1.2", "t": "tf.contrib.metrics.streaming_mean_iou"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/metrics/streaming_mean_relative_error", "k": [], "r": "r1.2", "t": "tf.contrib.metrics.streaming_mean_relative_error"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/metrics/streaming_mean_squared_error", "k": [], "r": "r1.2", "t": "tf.contrib.metrics.streaming_mean_squared_error"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/metrics/streaming_mean_tensor", "k": [], "r": "r1.2", "t": "tf.contrib.metrics.streaming_mean_tensor"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/metrics/streaming_pearson_correlation", "k": [], "r": "r1.2", "t": "tf.contrib.metrics.streaming_pearson_correlation"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/metrics/streaming_percentage_less", "k": [], "r": "r1.2", "t": "tf.contrib.metrics.streaming_percentage_less"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/metrics/streaming_precision", "k": [], "r": "r1.2", "t": "tf.contrib.metrics.streaming_precision"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/metrics/streaming_precision_at_thresholds", "k": [], "r": "r1.2", "t": "tf.contrib.metrics.streaming_precision_at_thresholds"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/metrics/streaming_recall", "k": [], "r": "r1.2", "t": "tf.contrib.metrics.streaming_recall"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/metrics/streaming_recall_at_k", "k": [], "r": "r1.2", "t": "tf.contrib.metrics.streaming_recall_at_k"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/metrics/streaming_recall_at_thresholds", "k": [], "r": "r1.2", "t": "tf.contrib.metrics.streaming_recall_at_thresholds"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/metrics/streaming_root_mean_squared_error", "k": [], "r": "r1.2", "t": "tf.contrib.metrics.streaming_root_mean_squared_error"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/metrics/streaming_sensitivity_at_specificity", "k": [], "r": "r1.2", "t": "tf.contrib.metrics.streaming_sensitivity_at_specificity"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/metrics/streaming_sparse_average_precision_at_k", "k": [], "r": "r1.2", "t": "tf.contrib.metrics.streaming_sparse_average_precision_at_k"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/metrics/streaming_sparse_average_precision_at_top_k", "k": [], "r": "r1.2", "t": "tf.contrib.metrics.streaming_sparse_average_precision_at_top_k"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/metrics/streaming_sparse_precision_at_k", "k": [], "r": "r1.2", "t": "tf.contrib.metrics.streaming_sparse_precision_at_k"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/metrics/streaming_sparse_precision_at_top_k", "k": [], "r": "r1.2", "t": "tf.contrib.metrics.streaming_sparse_precision_at_top_k"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/metrics/streaming_sparse_recall_at_k", "k": [], "r": "r1.2", "t": "tf.contrib.metrics.streaming_sparse_recall_at_k"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/metrics/streaming_specificity_at_sensitivity", "k": [], "r": "r1.2", "t": "tf.contrib.metrics.streaming_specificity_at_sensitivity"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/metrics/streaming_true_negatives", "k": [], "r": "r1.2", "t": "tf.contrib.metrics.streaming_true_negatives"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/metrics/streaming_true_negatives_at_thresholds", "k": [], "r": "r1.2", "t": "tf.contrib.metrics.streaming_true_negatives_at_thresholds"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/metrics/streaming_true_positives", "k": [], "r": "r1.2", "t": "tf.contrib.metrics.streaming_true_positives"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/metrics/streaming_true_positives_at_thresholds", "k": [], "r": "r1.2", "t": "tf.contrib.metrics.streaming_true_positives_at_thresholds"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/nccl", "k": [], "r": "r1.2", "t": "tf.contrib.nccl"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/nccl/all_max", "k": [], "r": "r1.2", "t": "tf.contrib.nccl.all_max"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/nccl/all_min", "k": [], "r": "r1.2", "t": "tf.contrib.nccl.all_min"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/nccl/all_prod", "k": [], "r": "r1.2", "t": "tf.contrib.nccl.all_prod"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/nccl/all_sum", "k": [], "r": "r1.2", "t": "tf.contrib.nccl.all_sum"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/nccl/broadcast", "k": [], "r": "r1.2", "t": "tf.contrib.nccl.broadcast"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/ndlstm", "k": [], "r": "r1.2", "t": "tf.contrib.ndlstm"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/nn", "k": [], "r": "r1.2", "t": "tf.contrib.nn"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/nn/deprecated_flipped_sigmoid_cross_entropy_with_logits", "k": [], "r": "r1.2", "t": "tf.contrib.nn.deprecated_flipped_sigmoid_cross_entropy_with_logits"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/nn/deprecated_flipped_softmax_cross_entropy_with_logits", "k": [], "r": "r1.2", "t": "tf.contrib.nn.deprecated_flipped_softmax_cross_entropy_with_logits"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/nn/deprecated_flipped_sparse_softmax_cross_entropy_with_logits", "k": [], "r": "r1.2", "t": "tf.contrib.nn.deprecated_flipped_sparse_softmax_cross_entropy_with_logits"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/opt", "k": [], "r": "r1.2", "t": "tf.contrib.opt"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/opt/DropStaleGradientOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.2", "t": "tf.contrib.opt.DropStaleGradientOptimizer"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/opt/ExternalOptimizerInterface", "k": ["__init__", "minimize"], "r": "r1.2", "t": "tf.contrib.opt.ExternalOptimizerInterface"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/opt/LazyAdamOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.2", "t": "tf.contrib.opt.LazyAdamOptimizer"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/opt/MovingAverageOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "swapping_saver", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.2", "t": "tf.contrib.opt.MovingAverageOptimizer"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/opt/NadamOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.2", "t": "tf.contrib.opt.NadamOptimizer"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/opt/ScipyOptimizerInterface", "k": ["__init__", "minimize"], "r": "r1.2", "t": "tf.contrib.opt.ScipyOptimizerInterface"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/opt/VariableClippingOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.2", "t": "tf.contrib.opt.VariableClippingOptimizer"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/quantization", "k": [], "r": "r1.2", "t": "tf.contrib.quantization"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/rnn", "k": [], "r": "r1.2", "t": "tf.contrib.rnn"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/rnn/AttentionCellWrapper", "k": ["graph", "losses", "non_trainable_variables", "non_trainable_weights", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "get_losses_for", "get_updates_for", "zero_state"], "r": "r1.2", "t": "tf.contrib.rnn.AttentionCellWrapper"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/rnn/BasicLSTMCell", "k": ["graph", "losses", "non_trainable_variables", "non_trainable_weights", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "get_losses_for", "get_updates_for", "zero_state"], "r": "r1.2", "t": "tf.contrib.rnn.BasicLSTMCell"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/rnn/BasicRNNCell", "k": ["graph", "losses", "non_trainable_variables", "non_trainable_weights", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "get_losses_for", "get_updates_for", "zero_state"], "r": "r1.2", "t": "tf.contrib.rnn.BasicRNNCell"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/rnn/BidirectionalGridLSTMCell", "k": ["graph", "losses", "non_trainable_variables", "non_trainable_weights", "output_size", "scope_name", "state_size", "state_tuple_type", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "get_losses_for", "get_updates_for", "zero_state"], "r": "r1.2", "t": "tf.contrib.rnn.BidirectionalGridLSTMCell"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/rnn/CompiledWrapper", "k": ["graph", "losses", "non_trainable_variables", "non_trainable_weights", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "get_losses_for", "get_updates_for", "zero_state"], "r": "r1.2", "t": "tf.contrib.rnn.CompiledWrapper"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/rnn/CoupledInputForgetGateLSTMCell", "k": ["graph", "losses", "non_trainable_variables", "non_trainable_weights", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "get_losses_for", "get_updates_for", "zero_state"], "r": "r1.2", "t": "tf.contrib.rnn.CoupledInputForgetGateLSTMCell"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/rnn/DeviceWrapper", "k": ["graph", "losses", "non_trainable_variables", "non_trainable_weights", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "get_losses_for", "get_updates_for", "zero_state"], "r": "r1.2", "t": "tf.contrib.rnn.DeviceWrapper"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/rnn/DropoutWrapper", "k": ["graph", "losses", "non_trainable_variables", "non_trainable_weights", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "get_losses_for", "get_updates_for", "zero_state"], "r": "r1.2", "t": "tf.contrib.rnn.DropoutWrapper"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/rnn/EmbeddingWrapper", "k": ["graph", "losses", "non_trainable_variables", "non_trainable_weights", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "get_losses_for", "get_updates_for", "zero_state"], "r": "r1.2", "t": "tf.contrib.rnn.EmbeddingWrapper"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/rnn/FusedRNNCell", "k": ["__call__"], "r": "r1.2", "t": "tf.contrib.rnn.FusedRNNCell"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/rnn/FusedRNNCellAdaptor", "k": ["__call__", "__init__"], "r": "r1.2", "t": "tf.contrib.rnn.FusedRNNCellAdaptor"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/rnn/GLSTMCell", "k": ["graph", "losses", "non_trainable_variables", "non_trainable_weights", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "get_losses_for", "get_updates_for", "zero_state"], "r": "r1.2", "t": "tf.contrib.rnn.GLSTMCell"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/rnn/GRUBlockCell", "k": ["graph", "losses", "non_trainable_variables", "non_trainable_weights", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "get_losses_for", "get_updates_for", "zero_state"], "r": "r1.2", "t": "tf.contrib.rnn.GRUBlockCell"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/rnn/GRUCell", "k": ["graph", "losses", "non_trainable_variables", "non_trainable_weights", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "get_losses_for", "get_updates_for", "zero_state"], "r": "r1.2", "t": "tf.contrib.rnn.GRUCell"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/rnn/GridLSTMCell", "k": ["graph", "losses", "non_trainable_variables", "non_trainable_weights", "output_size", "scope_name", "state_size", "state_tuple_type", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "get_losses_for", "get_updates_for", "zero_state"], "r": "r1.2", "t": "tf.contrib.rnn.GridLSTMCell"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/rnn/HighwayWrapper", "k": ["graph", "losses", "non_trainable_variables", "non_trainable_weights", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "get_losses_for", "get_updates_for", "zero_state"], "r": "r1.2", "t": "tf.contrib.rnn.HighwayWrapper"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/rnn/InputProjectionWrapper", "k": ["graph", "losses", "non_trainable_variables", "non_trainable_weights", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "get_losses_for", "get_updates_for", "zero_state"], "r": "r1.2", "t": "tf.contrib.rnn.InputProjectionWrapper"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/rnn/IntersectionRNNCell", "k": ["graph", "losses", "non_trainable_variables", "non_trainable_weights", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "get_losses_for", "get_updates_for", "zero_state"], "r": "r1.2", "t": "tf.contrib.rnn.IntersectionRNNCell"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/rnn/LSTMBlockCell", "k": ["graph", "losses", "non_trainable_variables", "non_trainable_weights", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "get_losses_for", "get_updates_for", "zero_state"], "r": "r1.2", "t": "tf.contrib.rnn.LSTMBlockCell"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/rnn/LSTMBlockFusedCell", "k": ["num_units", "__call__", "__init__"], "r": "r1.2", "t": "tf.contrib.rnn.LSTMBlockFusedCell"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/rnn/LSTMBlockWrapper", "k": ["num_units", "__call__"], "r": "r1.2", "t": "tf.contrib.rnn.LSTMBlockWrapper"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/rnn/LSTMCell", "k": ["graph", "losses", "non_trainable_variables", "non_trainable_weights", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "get_losses_for", "get_updates_for", "zero_state"], "r": "r1.2", "t": "tf.contrib.rnn.LSTMCell"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/rnn/LSTMStateTuple", "k": ["c", "dtype", "h", "__new__"], "r": "r1.2", "t": "tf.contrib.rnn.LSTMStateTuple"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/rnn/LayerNormBasicLSTMCell", "k": ["graph", "losses", "non_trainable_variables", "non_trainable_weights", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "get_losses_for", "get_updates_for", "zero_state"], "r": "r1.2", "t": "tf.contrib.rnn.LayerNormBasicLSTMCell"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/rnn/MultiRNNCell", "k": ["graph", "losses", "non_trainable_variables", "non_trainable_weights", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "get_losses_for", "get_updates_for", "zero_state"], "r": "r1.2", "t": "tf.contrib.rnn.MultiRNNCell"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/rnn/NASCell", "k": ["graph", "losses", "non_trainable_variables", "non_trainable_weights", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "get_losses_for", "get_updates_for", "zero_state"], "r": "r1.2", "t": "tf.contrib.rnn.NASCell"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/rnn/OutputProjectionWrapper", "k": ["graph", "losses", "non_trainable_variables", "non_trainable_weights", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "get_losses_for", "get_updates_for", "zero_state"], "r": "r1.2", "t": "tf.contrib.rnn.OutputProjectionWrapper"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/rnn/PhasedLSTMCell", "k": ["graph", "losses", "non_trainable_variables", "non_trainable_weights", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "get_losses_for", "get_updates_for", "zero_state"], "r": "r1.2", "t": "tf.contrib.rnn.PhasedLSTMCell"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/rnn/RNNCell", "k": ["graph", "losses", "non_trainable_variables", "non_trainable_weights", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "get_losses_for", "get_updates_for", "zero_state"], "r": "r1.2", "t": "tf.contrib.rnn.RNNCell"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/rnn/ResidualWrapper", "k": ["graph", "losses", "non_trainable_variables", "non_trainable_weights", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "get_losses_for", "get_updates_for", "zero_state"], "r": "r1.2", "t": "tf.contrib.rnn.ResidualWrapper"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/rnn/TimeFreqLSTMCell", "k": ["graph", "losses", "non_trainable_variables", "non_trainable_weights", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "get_losses_for", "get_updates_for", "zero_state"], "r": "r1.2", "t": "tf.contrib.rnn.TimeFreqLSTMCell"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/rnn/TimeReversedFusedRNN", "k": ["__call__", "__init__"], "r": "r1.2", "t": "tf.contrib.rnn.TimeReversedFusedRNN"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/rnn/UGRNNCell", "k": ["graph", "losses", "non_trainable_variables", "non_trainable_weights", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "get_losses_for", "get_updates_for", "zero_state"], "r": "r1.2", "t": "tf.contrib.rnn.UGRNNCell"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/rnn/stack_bidirectional_dynamic_rnn", "k": [], "r": "r1.2", "t": "tf.contrib.rnn.stack_bidirectional_dynamic_rnn"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/rnn/stack_bidirectional_rnn", "k": [], "r": "r1.2", "t": "tf.contrib.rnn.stack_bidirectional_rnn"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/saved_model", "k": [], "r": "r1.2", "t": "tf.contrib.saved_model"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/saved_model/get_signature_def_by_key", "k": [], "r": "r1.2", "t": "tf.contrib.saved_model.get_signature_def_by_key"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/seq2seq", "k": [], "r": "r1.2", "t": "tf.contrib.seq2seq"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/seq2seq/AttentionMechanism", "k": [], "r": "r1.2", "t": "tf.contrib.seq2seq.AttentionMechanism"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/seq2seq/AttentionWrapper", "k": ["graph", "losses", "non_trainable_variables", "non_trainable_weights", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "get_losses_for", "get_updates_for", "zero_state"], "r": "r1.2", "t": "tf.contrib.seq2seq.AttentionWrapper"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/seq2seq/AttentionWrapperState", "k": ["alignment_history", "alignments", "attention", "cell_state", "time", "__new__", "clone"], "r": "r1.2", "t": "tf.contrib.seq2seq.AttentionWrapperState"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/seq2seq/BahdanauAttention", "k": ["alignments_size", "batch_size", "keys", "memory_layer", "query_layer", "values", "__call__", "__init__", "initial_alignments"], "r": "r1.2", "t": "tf.contrib.seq2seq.BahdanauAttention"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/seq2seq/BasicDecoder", "k": ["batch_size", "output_dtype", "output_size", "__init__", "finalize", "initialize", "step"], "r": "r1.2", "t": "tf.contrib.seq2seq.BasicDecoder"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/seq2seq/BasicDecoderOutput", "k": ["rnn_output", "sample_id", "__new__"], "r": "r1.2", "t": "tf.contrib.seq2seq.BasicDecoderOutput"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/seq2seq/BeamSearchDecoder", "k": ["batch_size", "output_dtype", "output_size", "__init__", "finalize", "initialize", "step"], "r": "r1.2", "t": "tf.contrib.seq2seq.BeamSearchDecoder"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/seq2seq/BeamSearchDecoderOutput", "k": ["parent_ids", "predicted_ids", "scores", "__new__"], "r": "r1.2", "t": "tf.contrib.seq2seq.BeamSearchDecoderOutput"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/seq2seq/BeamSearchDecoderState", "k": ["cell_state", "finished", "lengths", "log_probs", "__new__"], "r": "r1.2", "t": "tf.contrib.seq2seq.BeamSearchDecoderState"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/seq2seq/CustomHelper", "k": ["batch_size", "__init__", "initialize", "next_inputs", "sample"], "r": "r1.2", "t": "tf.contrib.seq2seq.CustomHelper"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/seq2seq/Decoder", "k": ["batch_size", "output_dtype", "output_size", "finalize", "initialize", "step"], "r": "r1.2", "t": "tf.contrib.seq2seq.Decoder"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/seq2seq/FinalBeamSearchDecoderOutput", "k": ["beam_search_decoder_output", "predicted_ids", "__new__"], "r": "r1.2", "t": "tf.contrib.seq2seq.FinalBeamSearchDecoderOutput"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/seq2seq/GreedyEmbeddingHelper", "k": ["batch_size", "__init__", "initialize", "next_inputs", "sample"], "r": "r1.2", "t": "tf.contrib.seq2seq.GreedyEmbeddingHelper"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/seq2seq/Helper", "k": ["batch_size", "initialize", "next_inputs", "sample"], "r": "r1.2", "t": "tf.contrib.seq2seq.Helper"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/seq2seq/LuongAttention", "k": ["alignments_size", "batch_size", "keys", "memory_layer", "query_layer", "values", "__call__", "__init__", "initial_alignments"], "r": "r1.2", "t": "tf.contrib.seq2seq.LuongAttention"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/seq2seq/SampleEmbeddingHelper", "k": ["batch_size", "__init__", "initialize", "next_inputs", "sample"], "r": "r1.2", "t": "tf.contrib.seq2seq.SampleEmbeddingHelper"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/seq2seq/ScheduledEmbeddingTrainingHelper", "k": ["batch_size", "__init__", "initialize", "next_inputs", "sample"], "r": "r1.2", "t": "tf.contrib.seq2seq.ScheduledEmbeddingTrainingHelper"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/seq2seq/ScheduledOutputTrainingHelper", "k": ["batch_size", "__init__", "initialize", "next_inputs", "sample"], "r": "r1.2", "t": "tf.contrib.seq2seq.ScheduledOutputTrainingHelper"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/seq2seq/TrainingHelper", "k": ["batch_size", "__init__", "initialize", "next_inputs", "sample"], "r": "r1.2", "t": "tf.contrib.seq2seq.TrainingHelper"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/seq2seq/dynamic_decode", "k": [], "r": "r1.2", "t": "tf.contrib.seq2seq.dynamic_decode"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/seq2seq/gather_tree", "k": [], "r": "r1.2", "t": "tf.contrib.seq2seq.gather_tree"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/seq2seq/hardmax", "k": [], "r": "r1.2", "t": "tf.contrib.seq2seq.hardmax"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/seq2seq/sequence_loss", "k": [], "r": "r1.2", "t": "tf.contrib.seq2seq.sequence_loss"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/seq2seq/tile_batch", "k": [], "r": "r1.2", "t": "tf.contrib.seq2seq.tile_batch"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/session_bundle", "k": [], "r": "r1.2", "t": "tf.contrib.session_bundle"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/slim", "k": [], "r": "r1.2", "t": "tf.contrib.slim"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/solvers", "k": [], "r": "r1.2", "t": "tf.contrib.solvers"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/sparsemax", "k": [], "r": "r1.2", "t": "tf.contrib.sparsemax"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/sparsemax/sparsemax", "k": [], "r": "r1.2", "t": "tf.contrib.sparsemax.sparsemax"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/sparsemax/sparsemax_loss", "k": [], "r": "r1.2", "t": "tf.contrib.sparsemax.sparsemax_loss"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/specs", "k": [], "r": "r1.2", "t": "tf.contrib.specs"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/staging", "k": ["absolute_import", "division", "print_function"], "r": "r1.2", "t": "tf.contrib.staging"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/staging/StagingArea", "k": ["dtypes", "name", "names", "shapes", "__init__", "get", "put"], "r": "r1.2", "t": "tf.contrib.staging.StagingArea"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/stat_summarizer", "k": ["DeleteStatSummarizer", "NewStatSummarizer"], "r": "r1.2", "t": "tf.contrib.stat_summarizer"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/stat_summarizer/StatSummarizer", "k": ["GetOutputString", "PrintStepStats", "ProcessStepStats", "ProcessStepStatsStr", "__getattr__", "__init__", "__setattr__", "__swig_getmethods__", "__swig_setmethods__"], "r": "r1.2", "t": "tf.contrib.stat_summarizer.StatSummarizer"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/stateless", "k": [], "r": "r1.2", "t": "tf.contrib.stateless"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/stateless/stateless_random_normal", "k": [], "r": "r1.2", "t": "tf.contrib.stateless.stateless_random_normal"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/stateless/stateless_random_uniform", "k": [], "r": "r1.2", "t": "tf.contrib.stateless.stateless_random_uniform"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/stateless/stateless_truncated_normal", "k": [], "r": "r1.2", "t": "tf.contrib.stateless.stateless_truncated_normal"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/tensor_forest", "k": [], "r": "r1.2", "t": "tf.contrib.tensor_forest"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/tensorboard", "k": [], "r": "r1.2", "t": "tf.contrib.tensorboard"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/testing", "k": [], "r": "r1.2", "t": "tf.contrib.testing"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/tfprof", "k": [], "r": "r1.2", "t": "tf.contrib.tfprof"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/training", "k": [], "r": "r1.2", "t": "tf.contrib.training"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/training/FailureTolerator", "k": ["__init__", "forgive"], "r": "r1.2", "t": "tf.contrib.training.FailureTolerator"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/training/GreedyLoadBalancingStrategy", "k": ["__call__", "__init__"], "r": "r1.2", "t": "tf.contrib.training.GreedyLoadBalancingStrategy"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/training/HParams", "k": ["__init__", "add_hparam", "from_proto", "get_model_structure", "parse", "parse_json", "set_model_structure", "to_json", "to_proto", "values"], "r": "r1.2", "t": "tf.contrib.training.HParams"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/training/NextQueuedSequenceBatch", "k": ["batch_size", "context", "insertion_index", "key", "length", "next_key", "sequence", "sequence_count", "sequences", "total_length", "__init__", "save_state", "state"], "r": "r1.2", "t": "tf.contrib.training.NextQueuedSequenceBatch"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/training/SequenceQueueingStateSaver", "k": ["barrier", "batch_size", "name", "next_batch", "num_unroll", "prefetch_op", "__init__", "close"], "r": "r1.2", "t": "tf.contrib.training.SequenceQueueingStateSaver"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/training/StopAfterNEvalsHook", "k": ["__init__", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "r1.2", "t": "tf.contrib.training.StopAfterNEvalsHook"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/training/SummaryAtEndHook", "k": ["__init__", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "r1.2", "t": "tf.contrib.training.SummaryAtEndHook"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/training/add_gradients_summaries", "k": [], "r": "r1.2", "t": "tf.contrib.training.add_gradients_summaries"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/training/batch_sequences_with_states", "k": [], "r": "r1.2", "t": "tf.contrib.training.batch_sequences_with_states"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/training/bucket", "k": [], "r": "r1.2", "t": "tf.contrib.training.bucket"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/training/bucket_by_sequence_length", "k": [], "r": "r1.2", "t": "tf.contrib.training.bucket_by_sequence_length"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/training/byte_size_load_fn", "k": [], "r": "r1.2", "t": "tf.contrib.training.byte_size_load_fn"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/training/checkpoints_iterator", "k": [], "r": "r1.2", "t": "tf.contrib.training.checkpoints_iterator"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/training/clip_gradient_norms", "k": [], "r": "r1.2", "t": "tf.contrib.training.clip_gradient_norms"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/training/create_train_op", "k": [], "r": "r1.2", "t": "tf.contrib.training.create_train_op"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/training/evaluate_once", "k": [], "r": "r1.2", "t": "tf.contrib.training.evaluate_once"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/training/evaluate_repeatedly", "k": [], "r": "r1.2", "t": "tf.contrib.training.evaluate_repeatedly"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/training/get_or_create_eval_step", "k": [], "r": "r1.2", "t": "tf.contrib.training.get_or_create_eval_step"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/training/multiply_gradients", "k": [], "r": "r1.2", "t": "tf.contrib.training.multiply_gradients"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/training/parse_values", "k": [], "r": "r1.2", "t": "tf.contrib.training.parse_values"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/training/python_input", "k": [], "r": "r1.2", "t": "tf.contrib.training.python_input"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/training/rejection_sample", "k": [], "r": "r1.2", "t": "tf.contrib.training.rejection_sample"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/training/resample_at_rate", "k": [], "r": "r1.2", "t": "tf.contrib.training.resample_at_rate"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/training/stratified_sample", "k": [], "r": "r1.2", "t": "tf.contrib.training.stratified_sample"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/training/train", "k": [], "r": "r1.2", "t": "tf.contrib.training.train"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/training/wait_for_new_checkpoint", "k": [], "r": "r1.2", "t": "tf.contrib.training.wait_for_new_checkpoint"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/training/weighted_resample", "k": [], "r": "r1.2", "t": "tf.contrib.training.weighted_resample"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/util", "k": [], "r": "r1.2", "t": "tf.contrib.util"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/util/constant_value", "k": [], "r": "r1.2", "t": "tf.contrib.util.constant_value"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/util/loader", "k": [], "r": "r1.2", "t": "tf.contrib.util.loader"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/util/ops_used_by_graph_def", "k": [], "r": "r1.2", "t": "tf.contrib.util.ops_used_by_graph_def"}, {"p": "/versions/r1.2/api_docs/python/tf/contrib/util/stripped_op_list_for_graph", "k": [], "r": "r1.2", "t": "tf.contrib.util.stripped_op_list_for_graph"}, {"p": "/versions/r1.2/api_docs/python/tf/control_dependencies", "k": [], "r": "r1.2", "t": "tf.control_dependencies"}, {"p": "/versions/r1.2/api_docs/python/tf/convert_to_tensor", "k": [], "r": "r1.2", "t": "tf.convert_to_tensor"}, {"p": "/versions/r1.2/api_docs/python/tf/convert_to_tensor_or_indexed_slices", "k": [], "r": "r1.2", "t": "tf.convert_to_tensor_or_indexed_slices"}, {"p": "/versions/r1.2/api_docs/python/tf/convert_to_tensor_or_sparse_tensor", "k": [], "r": "r1.2", "t": "tf.convert_to_tensor_or_sparse_tensor"}, {"p": "/versions/r1.2/api_docs/python/tf/cos", "k": [], "r": "r1.2", "t": "tf.cos"}, {"p": "/versions/r1.2/api_docs/python/tf/count_nonzero", "k": [], "r": "r1.2", "t": "tf.count_nonzero"}, {"p": "/versions/r1.2/api_docs/python/tf/count_up_to", "k": [], "r": "r1.2", "t": "tf.count_up_to"}, {"p": "/versions/r1.2/api_docs/python/tf/create_partitioned_variables", "k": [], "r": "r1.2", "t": "tf.create_partitioned_variables"}, {"p": "/versions/r1.2/api_docs/python/tf/cross", "k": [], "r": "r1.2", "t": "tf.cross"}, {"p": "/versions/r1.2/api_docs/python/tf/cumprod", "k": [], "r": "r1.2", "t": "tf.cumprod"}, {"p": "/versions/r1.2/api_docs/python/tf/cumsum", "k": [], "r": "r1.2", "t": "tf.cumsum"}, {"p": "/versions/r1.2/api_docs/python/tf/decode_base64", "k": [], "r": "r1.2", "t": "tf.decode_base64"}, {"p": "/versions/r1.2/api_docs/python/tf/decode_csv", "k": [], "r": "r1.2", "t": "tf.decode_csv"}, {"p": "/versions/r1.2/api_docs/python/tf/decode_json_example", "k": [], "r": "r1.2", "t": "tf.decode_json_example"}, {"p": "/versions/r1.2/api_docs/python/tf/decode_raw", "k": [], "r": "r1.2", "t": "tf.decode_raw"}, {"p": "/versions/r1.2/api_docs/python/tf/delete_session_tensor", "k": [], "r": "r1.2", "t": "tf.delete_session_tensor"}, {"p": "/versions/r1.2/api_docs/python/tf/depth_to_space", "k": [], "r": "r1.2", "t": "tf.depth_to_space"}, {"p": "/versions/r1.2/api_docs/python/tf/dequantize", "k": [], "r": "r1.2", "t": "tf.dequantize"}, {"p": "/versions/r1.2/api_docs/python/tf/deserialize_many_sparse", "k": [], "r": "r1.2", "t": "tf.deserialize_many_sparse"}, {"p": "/versions/r1.2/api_docs/python/tf/device", "k": [], "r": "r1.2", "t": "tf.device"}, {"p": "/versions/r1.2/api_docs/python/tf/diag", "k": [], "r": "r1.2", "t": "tf.diag"}, {"p": "/versions/r1.2/api_docs/python/tf/diag_part", "k": [], "r": "r1.2", "t": "tf.diag_part"}, {"p": "/versions/r1.2/api_docs/python/tf/digamma", "k": [], "r": "r1.2", "t": "tf.digamma"}, {"p": "/versions/r1.2/api_docs/python/tf/div", "k": [], "r": "r1.2", "t": "tf.div"}, {"p": "/versions/r1.2/api_docs/python/tf/divide", "k": [], "r": "r1.2", "t": "tf.divide"}, {"p": "/versions/r1.2/api_docs/python/tf/dynamic_partition", "k": [], "r": "r1.2", "t": "tf.dynamic_partition"}, {"p": "/versions/r1.2/api_docs/python/tf/dynamic_stitch", "k": [], "r": "r1.2", "t": "tf.dynamic_stitch"}, {"p": "/versions/r1.2/api_docs/python/tf/edit_distance", "k": [], "r": "r1.2", "t": "tf.edit_distance"}, {"p": "/versions/r1.2/api_docs/python/tf/einsum", "k": [], "r": "r1.2", "t": "tf.einsum"}, {"p": "/versions/r1.2/api_docs/python/tf/encode_base64", "k": [], "r": "r1.2", "t": "tf.encode_base64"}, {"p": "/versions/r1.2/api_docs/python/tf/equal", "k": [], "r": "r1.2", "t": "tf.equal"}, {"p": "/versions/r1.2/api_docs/python/tf/erf", "k": [], "r": "r1.2", "t": "tf.erf"}, {"p": "/versions/r1.2/api_docs/python/tf/erfc", "k": [], "r": "r1.2", "t": "tf.erfc"}, {"p": "/versions/r1.2/api_docs/python/tf/errors", "k": ["ABORTED", "ALREADY_EXISTS", "CANCELLED", "DATA_LOSS", "DEADLINE_EXCEEDED", "FAILED_PRECONDITION", "INTERNAL", "INVALID_ARGUMENT", "NOT_FOUND", "OK", "OUT_OF_RANGE", "PERMISSION_DENIED", "RESOURCE_EXHAUSTED", "UNAUTHENTICATED", "UNAVAILABLE", "UNIMPLEMENTED", "UNKNOWN"], "r": "r1.2", "t": "tf.errors"}, {"p": "/versions/r1.2/api_docs/python/tf/errors/AbortedError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "r1.2", "t": "tf.errors.AbortedError"}, {"p": "/versions/r1.2/api_docs/python/tf/errors/AlreadyExistsError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "r1.2", "t": "tf.errors.AlreadyExistsError"}, {"p": "/versions/r1.2/api_docs/python/tf/errors/CancelledError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "r1.2", "t": "tf.errors.CancelledError"}, {"p": "/versions/r1.2/api_docs/python/tf/errors/DataLossError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "r1.2", "t": "tf.errors.DataLossError"}, {"p": "/versions/r1.2/api_docs/python/tf/errors/DeadlineExceededError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "r1.2", "t": "tf.errors.DeadlineExceededError"}, {"p": "/versions/r1.2/api_docs/python/tf/errors/FailedPreconditionError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "r1.2", "t": "tf.errors.FailedPreconditionError"}, {"p": "/versions/r1.2/api_docs/python/tf/errors/InternalError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "r1.2", "t": "tf.errors.InternalError"}, {"p": "/versions/r1.2/api_docs/python/tf/errors/InvalidArgumentError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "r1.2", "t": "tf.errors.InvalidArgumentError"}, {"p": "/versions/r1.2/api_docs/python/tf/errors/NotFoundError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "r1.2", "t": "tf.errors.NotFoundError"}, {"p": "/versions/r1.2/api_docs/python/tf/errors/OutOfRangeError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "r1.2", "t": "tf.errors.OutOfRangeError"}, {"p": "/versions/r1.2/api_docs/python/tf/errors/PermissionDeniedError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "r1.2", "t": "tf.errors.PermissionDeniedError"}, {"p": "/versions/r1.2/api_docs/python/tf/errors/ResourceExhaustedError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "r1.2", "t": "tf.errors.ResourceExhaustedError"}, {"p": "/versions/r1.2/api_docs/python/tf/errors/UnauthenticatedError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "r1.2", "t": "tf.errors.UnauthenticatedError"}, {"p": "/versions/r1.2/api_docs/python/tf/errors/UnavailableError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "r1.2", "t": "tf.errors.UnavailableError"}, {"p": "/versions/r1.2/api_docs/python/tf/errors/UnimplementedError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "r1.2", "t": "tf.errors.UnimplementedError"}, {"p": "/versions/r1.2/api_docs/python/tf/errors/UnknownError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "r1.2", "t": "tf.errors.UnknownError"}, {"p": "/versions/r1.2/api_docs/python/tf/errors/error_code_from_exception_type", "k": [], "r": "r1.2", "t": "tf.errors.error_code_from_exception_type"}, {"p": "/versions/r1.2/api_docs/python/tf/errors/exception_type_from_error_code", "k": [], "r": "r1.2", "t": "tf.errors.exception_type_from_error_code"}, {"p": "/versions/r1.2/api_docs/python/tf/errors/raise_exception_on_not_ok_status", "k": [], "r": "r1.2", "t": "tf.errors.raise_exception_on_not_ok_status"}, {"p": "/versions/r1.2/api_docs/python/tf/estimator", "k": [], "r": "r1.2", "t": "tf.estimator"}, {"p": "/versions/r1.2/api_docs/python/tf/estimator/Estimator", "k": ["config", "model_dir", "params", "__init__", "evaluate", "export_savedmodel", "predict", "train"], "r": "r1.2", "t": "tf.estimator.Estimator"}, {"p": "/versions/r1.2/api_docs/python/tf/estimator/EstimatorSpec", "k": ["eval_metric_ops", "export_outputs", "loss", "predictions", "scaffold", "train_op", "training_chief_hooks", "training_hooks", "__new__"], "r": "r1.2", "t": "tf.estimator.EstimatorSpec"}, {"p": "/versions/r1.2/api_docs/python/tf/estimator/ModeKeys", "k": ["EVAL", "PREDICT", "TRAIN"], "r": "r1.2", "t": "tf.estimator.ModeKeys"}, {"p": "/versions/r1.2/api_docs/python/tf/estimator/RunConfig", "k": ["cluster_spec", "evaluation_master", "is_chief", "keep_checkpoint_every_n_hours", "keep_checkpoint_max", "master", "model_dir", "num_ps_replicas", "num_worker_replicas", "save_checkpoints_secs", "save_checkpoints_steps", "save_summary_steps", "session_config", "task_id", "task_type", "tf_random_seed", "__init__", "replace"], "r": "r1.2", "t": "tf.estimator.RunConfig"}, {"p": "/versions/r1.2/api_docs/python/tf/estimator/export", "k": [], "r": "r1.2", "t": "tf.estimator.export"}, {"p": "/versions/r1.2/api_docs/python/tf/estimator/export/ClassificationOutput", "k": ["classes", "scores", "__init__", "as_signature_def"], "r": "r1.2", "t": "tf.estimator.export.ClassificationOutput"}, {"p": "/versions/r1.2/api_docs/python/tf/estimator/export/ExportOutput", "k": ["as_signature_def"], "r": "r1.2", "t": "tf.estimator.export.ExportOutput"}, {"p": "/versions/r1.2/api_docs/python/tf/estimator/export/PredictOutput", "k": ["outputs", "__init__", "as_signature_def"], "r": "r1.2", "t": "tf.estimator.export.PredictOutput"}, {"p": "/versions/r1.2/api_docs/python/tf/estimator/export/RegressionOutput", "k": ["value", "__init__", "as_signature_def"], "r": "r1.2", "t": "tf.estimator.export.RegressionOutput"}, {"p": "/versions/r1.2/api_docs/python/tf/estimator/export/ServingInputReceiver", "k": ["features", "receiver_tensors", "__new__"], "r": "r1.2", "t": "tf.estimator.export.ServingInputReceiver"}, {"p": "/versions/r1.2/api_docs/python/tf/estimator/export/build_parsing_serving_input_receiver_fn", "k": [], "r": "r1.2", "t": "tf.estimator.export.build_parsing_serving_input_receiver_fn"}, {"p": "/versions/r1.2/api_docs/python/tf/estimator/export/build_raw_serving_input_receiver_fn", "k": [], "r": "r1.2", "t": "tf.estimator.export.build_raw_serving_input_receiver_fn"}, {"p": "/versions/r1.2/api_docs/python/tf/estimator/inputs", "k": [], "r": "r1.2", "t": "tf.estimator.inputs"}, {"p": "/versions/r1.2/api_docs/python/tf/estimator/inputs/numpy_input_fn", "k": [], "r": "r1.2", "t": "tf.estimator.inputs.numpy_input_fn"}, {"p": "/versions/r1.2/api_docs/python/tf/estimator/inputs/pandas_input_fn", "k": [], "r": "r1.2", "t": "tf.estimator.inputs.pandas_input_fn"}, {"p": "/versions/r1.2/api_docs/python/tf/exp", "k": [], "r": "r1.2", "t": "tf.exp"}, {"p": "/versions/r1.2/api_docs/python/tf/expand_dims", "k": [], "r": "r1.2", "t": "tf.expand_dims"}, {"p": "/versions/r1.2/api_docs/python/tf/expm1", "k": [], "r": "r1.2", "t": "tf.expm1"}, {"p": "/versions/r1.2/api_docs/python/tf/extract_image_patches", "k": [], "r": "r1.2", "t": "tf.extract_image_patches"}, {"p": "/versions/r1.2/api_docs/python/tf/eye", "k": [], "r": "r1.2", "t": "tf.eye"}, {"p": "/versions/r1.2/api_docs/python/tf/fake_quant_with_min_max_args", "k": [], "r": "r1.2", "t": "tf.fake_quant_with_min_max_args"}, {"p": "/versions/r1.2/api_docs/python/tf/fake_quant_with_min_max_args_gradient", "k": [], "r": "r1.2", "t": "tf.fake_quant_with_min_max_args_gradient"}, {"p": "/versions/r1.2/api_docs/python/tf/fake_quant_with_min_max_vars", "k": [], "r": "r1.2", "t": "tf.fake_quant_with_min_max_vars"}, {"p": "/versions/r1.2/api_docs/python/tf/fake_quant_with_min_max_vars_gradient", "k": [], "r": "r1.2", "t": "tf.fake_quant_with_min_max_vars_gradient"}, {"p": "/versions/r1.2/api_docs/python/tf/fake_quant_with_min_max_vars_per_channel", "k": [], "r": "r1.2", "t": "tf.fake_quant_with_min_max_vars_per_channel"}, {"p": "/versions/r1.2/api_docs/python/tf/fake_quant_with_min_max_vars_per_channel_gradient", "k": [], "r": "r1.2", "t": "tf.fake_quant_with_min_max_vars_per_channel_gradient"}, {"p": "/versions/r1.2/api_docs/python/tf/feature_column", "k": [], "r": "r1.2", "t": "tf.feature_column"}, {"p": "/versions/r1.2/api_docs/python/tf/feature_column/bucketized_column", "k": [], "r": "r1.2", "t": "tf.feature_column.bucketized_column"}, {"p": "/versions/r1.2/api_docs/python/tf/feature_column/categorical_column_with_hash_bucket", "k": [], "r": "r1.2", "t": "tf.feature_column.categorical_column_with_hash_bucket"}, {"p": "/versions/r1.2/api_docs/python/tf/feature_column/categorical_column_with_identity", "k": [], "r": "r1.2", "t": "tf.feature_column.categorical_column_with_identity"}, {"p": "/versions/r1.2/api_docs/python/tf/feature_column/categorical_column_with_vocabulary_file", "k": [], "r": "r1.2", "t": "tf.feature_column.categorical_column_with_vocabulary_file"}, {"p": "/versions/r1.2/api_docs/python/tf/feature_column/categorical_column_with_vocabulary_list", "k": [], "r": "r1.2", "t": "tf.feature_column.categorical_column_with_vocabulary_list"}, {"p": "/versions/r1.2/api_docs/python/tf/feature_column/crossed_column", "k": [], "r": "r1.2", "t": "tf.feature_column.crossed_column"}, {"p": "/versions/r1.2/api_docs/python/tf/feature_column/embedding_column", "k": [], "r": "r1.2", "t": "tf.feature_column.embedding_column"}, {"p": "/versions/r1.2/api_docs/python/tf/feature_column/indicator_column", "k": [], "r": "r1.2", "t": "tf.feature_column.indicator_column"}, {"p": "/versions/r1.2/api_docs/python/tf/feature_column/input_layer", "k": [], "r": "r1.2", "t": "tf.feature_column.input_layer"}, {"p": "/versions/r1.2/api_docs/python/tf/feature_column/linear_model", "k": [], "r": "r1.2", "t": "tf.feature_column.linear_model"}, {"p": "/versions/r1.2/api_docs/python/tf/feature_column/make_parse_example_spec", "k": [], "r": "r1.2", "t": "tf.feature_column.make_parse_example_spec"}, {"p": "/versions/r1.2/api_docs/python/tf/feature_column/numeric_column", "k": [], "r": "r1.2", "t": "tf.feature_column.numeric_column"}, {"p": "/versions/r1.2/api_docs/python/tf/feature_column/weighted_categorical_column", "k": [], "r": "r1.2", "t": "tf.feature_column.weighted_categorical_column"}, {"p": "/versions/r1.2/api_docs/python/tf/fft", "k": [], "r": "r1.2", "t": "tf.fft"}, {"p": "/versions/r1.2/api_docs/python/tf/fft2d", "k": [], "r": "r1.2", "t": "tf.fft2d"}, {"p": "/versions/r1.2/api_docs/python/tf/fft3d", "k": [], "r": "r1.2", "t": "tf.fft3d"}, {"p": "/versions/r1.2/api_docs/python/tf/fill", "k": [], "r": "r1.2", "t": "tf.fill"}, {"p": "/versions/r1.2/api_docs/python/tf/fixed_size_partitioner", "k": [], "r": "r1.2", "t": "tf.fixed_size_partitioner"}, {"p": "/versions/r1.2/api_docs/python/tf/flags", "k": [], "r": "r1.2", "t": "tf.flags"}, {"p": "/versions/r1.2/api_docs/python/tf/floor", "k": [], "r": "r1.2", "t": "tf.floor"}, {"p": "/versions/r1.2/api_docs/python/tf/floor_div", "k": [], "r": "r1.2", "t": "tf.floor_div"}, {"p": "/versions/r1.2/api_docs/python/tf/floordiv", "k": [], "r": "r1.2", "t": "tf.floordiv"}, {"p": "/versions/r1.2/api_docs/python/tf/floormod", "k": [], "r": "r1.2", "t": "tf.floormod"}, {"p": "/versions/r1.2/api_docs/python/tf/foldl", "k": [], "r": "r1.2", "t": "tf.foldl"}, {"p": "/versions/r1.2/api_docs/python/tf/foldr", "k": [], "r": "r1.2", "t": "tf.foldr"}, {"p": "/versions/r1.2/api_docs/python/tf/gather", "k": [], "r": "r1.2", "t": "tf.gather"}, {"p": "/versions/r1.2/api_docs/python/tf/gather_nd", "k": [], "r": "r1.2", "t": "tf.gather_nd"}, {"p": "/versions/r1.2/api_docs/python/tf/get_collection", "k": [], "r": "r1.2", "t": "tf.get_collection"}, {"p": "/versions/r1.2/api_docs/python/tf/get_collection_ref", "k": [], "r": "r1.2", "t": "tf.get_collection_ref"}, {"p": "/versions/r1.2/api_docs/python/tf/get_default_graph", "k": [], "r": "r1.2", "t": "tf.get_default_graph"}, {"p": "/versions/r1.2/api_docs/python/tf/get_default_session", "k": [], "r": "r1.2", "t": "tf.get_default_session"}, {"p": "/versions/r1.2/api_docs/python/tf/get_local_variable", "k": [], "r": "r1.2", "t": "tf.get_local_variable"}, {"p": "/versions/r1.2/api_docs/python/tf/get_seed", "k": [], "r": "r1.2", "t": "tf.get_seed"}, {"p": "/versions/r1.2/api_docs/python/tf/get_session_handle", "k": [], "r": "r1.2", "t": "tf.get_session_handle"}, {"p": "/versions/r1.2/api_docs/python/tf/get_session_tensor", "k": [], "r": "r1.2", "t": "tf.get_session_tensor"}, {"p": "/versions/r1.2/api_docs/python/tf/get_variable", "k": [], "r": "r1.2", "t": "tf.get_variable"}, {"p": "/versions/r1.2/api_docs/python/tf/get_variable_scope", "k": [], "r": "r1.2", "t": "tf.get_variable_scope"}, {"p": "/versions/r1.2/api_docs/python/tf/gfile", "k": [], "r": "r1.2", "t": "tf.gfile"}, {"p": "/versions/r1.2/api_docs/python/tf/gfile/Copy", "k": [], "r": "r1.2", "t": "tf.gfile.Copy"}, {"p": "/versions/r1.2/api_docs/python/tf/gfile/DeleteRecursively", "k": [], "r": "r1.2", "t": "tf.gfile.DeleteRecursively"}, {"p": "/versions/r1.2/api_docs/python/tf/gfile/Exists", "k": [], "r": "r1.2", "t": "tf.gfile.Exists"}, {"p": "/versions/r1.2/api_docs/python/tf/gfile/FastGFile", "k": ["mode", "name", "__enter__", "__exit__", "__init__", "__iter__", "__next__", "close", "flush", "next", "read", "readline", "readlines", "seek", "size", "tell", "write"], "r": "r1.2", "t": "tf.gfile.FastGFile"}, {"p": "/versions/r1.2/api_docs/python/tf/gfile/GFile", "k": ["mode", "name", "__enter__", "__exit__", "__init__", "__iter__", "__next__", "close", "flush", "next", "read", "readline", "readlines", "seek", "size", "tell", "write"], "r": "r1.2", "t": "tf.gfile.GFile"}, {"p": "/versions/r1.2/api_docs/python/tf/gfile/Glob", "k": [], "r": "r1.2", "t": "tf.gfile.Glob"}, {"p": "/versions/r1.2/api_docs/python/tf/gfile/IsDirectory", "k": [], "r": "r1.2", "t": "tf.gfile.IsDirectory"}, {"p": "/versions/r1.2/api_docs/python/tf/gfile/ListDirectory", "k": [], "r": "r1.2", "t": "tf.gfile.ListDirectory"}, {"p": "/versions/r1.2/api_docs/python/tf/gfile/MakeDirs", "k": [], "r": "r1.2", "t": "tf.gfile.MakeDirs"}, {"p": "/versions/r1.2/api_docs/python/tf/gfile/MkDir", "k": [], "r": "r1.2", "t": "tf.gfile.MkDir"}, {"p": "/versions/r1.2/api_docs/python/tf/gfile/Remove", "k": [], "r": "r1.2", "t": "tf.gfile.Remove"}, {"p": "/versions/r1.2/api_docs/python/tf/gfile/Rename", "k": [], "r": "r1.2", "t": "tf.gfile.Rename"}, {"p": "/versions/r1.2/api_docs/python/tf/gfile/Stat", "k": [], "r": "r1.2", "t": "tf.gfile.Stat"}, {"p": "/versions/r1.2/api_docs/python/tf/gfile/Walk", "k": [], "r": "r1.2", "t": "tf.gfile.Walk"}, {"p": "/versions/r1.2/api_docs/python/tf/global_norm", "k": [], "r": "r1.2", "t": "tf.global_norm"}, {"p": "/versions/r1.2/api_docs/python/tf/global_variables", "k": [], "r": "r1.2", "t": "tf.global_variables"}, {"p": "/versions/r1.2/api_docs/python/tf/global_variables_initializer", "k": [], "r": "r1.2", "t": "tf.global_variables_initializer"}, {"p": "/versions/r1.2/api_docs/python/tf/gradients", "k": [], "r": "r1.2", "t": "tf.gradients"}, {"p": "/versions/r1.2/api_docs/python/tf/graph_util", "k": [], "r": "r1.2", "t": "tf.graph_util"}, {"p": "/versions/r1.2/api_docs/python/tf/graph_util/convert_variables_to_constants", "k": [], "r": "r1.2", "t": "tf.graph_util.convert_variables_to_constants"}, {"p": "/versions/r1.2/api_docs/python/tf/graph_util/extract_sub_graph", "k": [], "r": "r1.2", "t": "tf.graph_util.extract_sub_graph"}, {"p": "/versions/r1.2/api_docs/python/tf/graph_util/must_run_on_cpu", "k": [], "r": "r1.2", "t": "tf.graph_util.must_run_on_cpu"}, {"p": "/versions/r1.2/api_docs/python/tf/graph_util/remove_training_nodes", "k": [], "r": "r1.2", "t": "tf.graph_util.remove_training_nodes"}, {"p": "/versions/r1.2/api_docs/python/tf/graph_util/tensor_shape_from_node_def_name", "k": [], "r": "r1.2", "t": "tf.graph_util.tensor_shape_from_node_def_name"}, {"p": "/versions/r1.2/api_docs/python/tf/greater", "k": [], "r": "r1.2", "t": "tf.greater"}, {"p": "/versions/r1.2/api_docs/python/tf/greater_equal", "k": [], "r": "r1.2", "t": "tf.greater_equal"}, {"p": "/versions/r1.2/api_docs/python/tf/group", "k": [], "r": "r1.2", "t": "tf.group"}, {"p": "/versions/r1.2/api_docs/python/tf/hessians", "k": [], "r": "r1.2", "t": "tf.hessians"}, {"p": "/versions/r1.2/api_docs/python/tf/histogram_fixed_width", "k": [], "r": "r1.2", "t": "tf.histogram_fixed_width"}, {"p": "/versions/r1.2/api_docs/python/tf/identity", "k": [], "r": "r1.2", "t": "tf.identity"}, {"p": "/versions/r1.2/api_docs/python/tf/ifft", "k": [], "r": "r1.2", "t": "tf.ifft"}, {"p": "/versions/r1.2/api_docs/python/tf/ifft2d", "k": [], "r": "r1.2", "t": "tf.ifft2d"}, {"p": "/versions/r1.2/api_docs/python/tf/ifft3d", "k": [], "r": "r1.2", "t": "tf.ifft3d"}, {"p": "/versions/r1.2/api_docs/python/tf/igamma", "k": [], "r": "r1.2", "t": "tf.igamma"}, {"p": "/versions/r1.2/api_docs/python/tf/igammac", "k": [], "r": "r1.2", "t": "tf.igammac"}, {"p": "/versions/r1.2/api_docs/python/tf/imag", "k": [], "r": "r1.2", "t": "tf.imag"}, {"p": "/versions/r1.2/api_docs/python/tf/image", "k": [], "r": "r1.2", "t": "tf.image"}, {"p": "/versions/r1.2/api_docs/python/tf/image/ResizeMethod", "k": ["AREA", "BICUBIC", "BILINEAR", "NEAREST_NEIGHBOR"], "r": "r1.2", "t": "tf.image.ResizeMethod"}, {"p": "/versions/r1.2/api_docs/python/tf/image/adjust_brightness", "k": [], "r": "r1.2", "t": "tf.image.adjust_brightness"}, {"p": "/versions/r1.2/api_docs/python/tf/image/adjust_contrast", "k": [], "r": "r1.2", "t": "tf.image.adjust_contrast"}, {"p": "/versions/r1.2/api_docs/python/tf/image/adjust_gamma", "k": [], "r": "r1.2", "t": "tf.image.adjust_gamma"}, {"p": "/versions/r1.2/api_docs/python/tf/image/adjust_hue", "k": [], "r": "r1.2", "t": "tf.image.adjust_hue"}, {"p": "/versions/r1.2/api_docs/python/tf/image/adjust_saturation", "k": [], "r": "r1.2", "t": "tf.image.adjust_saturation"}, {"p": "/versions/r1.2/api_docs/python/tf/image/central_crop", "k": [], "r": "r1.2", "t": "tf.image.central_crop"}, {"p": "/versions/r1.2/api_docs/python/tf/image/convert_image_dtype", "k": [], "r": "r1.2", "t": "tf.image.convert_image_dtype"}, {"p": "/versions/r1.2/api_docs/python/tf/image/crop_and_resize", "k": [], "r": "r1.2", "t": "tf.image.crop_and_resize"}, {"p": "/versions/r1.2/api_docs/python/tf/image/crop_to_bounding_box", "k": [], "r": "r1.2", "t": "tf.image.crop_to_bounding_box"}, {"p": "/versions/r1.2/api_docs/python/tf/image/decode_gif", "k": [], "r": "r1.2", "t": "tf.image.decode_gif"}, {"p": "/versions/r1.2/api_docs/python/tf/image/decode_image", "k": [], "r": "r1.2", "t": "tf.image.decode_image"}, {"p": "/versions/r1.2/api_docs/python/tf/image/decode_jpeg", "k": [], "r": "r1.2", "t": "tf.image.decode_jpeg"}, {"p": "/versions/r1.2/api_docs/python/tf/image/decode_png", "k": [], "r": "r1.2", "t": "tf.image.decode_png"}, {"p": "/versions/r1.2/api_docs/python/tf/image/draw_bounding_boxes", "k": [], "r": "r1.2", "t": "tf.image.draw_bounding_boxes"}, {"p": "/versions/r1.2/api_docs/python/tf/image/encode_jpeg", "k": [], "r": "r1.2", "t": "tf.image.encode_jpeg"}, {"p": "/versions/r1.2/api_docs/python/tf/image/encode_png", "k": [], "r": "r1.2", "t": "tf.image.encode_png"}, {"p": "/versions/r1.2/api_docs/python/tf/image/extract_glimpse", "k": [], "r": "r1.2", "t": "tf.image.extract_glimpse"}, {"p": "/versions/r1.2/api_docs/python/tf/image/flip_left_right", "k": [], "r": "r1.2", "t": "tf.image.flip_left_right"}, {"p": "/versions/r1.2/api_docs/python/tf/image/flip_up_down", "k": [], "r": "r1.2", "t": "tf.image.flip_up_down"}, {"p": "/versions/r1.2/api_docs/python/tf/image/grayscale_to_rgb", "k": [], "r": "r1.2", "t": "tf.image.grayscale_to_rgb"}, {"p": "/versions/r1.2/api_docs/python/tf/image/hsv_to_rgb", "k": [], "r": "r1.2", "t": "tf.image.hsv_to_rgb"}, {"p": "/versions/r1.2/api_docs/python/tf/image/non_max_suppression", "k": [], "r": "r1.2", "t": "tf.image.non_max_suppression"}, {"p": "/versions/r1.2/api_docs/python/tf/image/pad_to_bounding_box", "k": [], "r": "r1.2", "t": "tf.image.pad_to_bounding_box"}, {"p": "/versions/r1.2/api_docs/python/tf/image/per_image_standardization", "k": [], "r": "r1.2", "t": "tf.image.per_image_standardization"}, {"p": "/versions/r1.2/api_docs/python/tf/image/random_brightness", "k": [], "r": "r1.2", "t": "tf.image.random_brightness"}, {"p": "/versions/r1.2/api_docs/python/tf/image/random_contrast", "k": [], "r": "r1.2", "t": "tf.image.random_contrast"}, {"p": "/versions/r1.2/api_docs/python/tf/image/random_flip_left_right", "k": [], "r": "r1.2", "t": "tf.image.random_flip_left_right"}, {"p": "/versions/r1.2/api_docs/python/tf/image/random_flip_up_down", "k": [], "r": "r1.2", "t": "tf.image.random_flip_up_down"}, {"p": "/versions/r1.2/api_docs/python/tf/image/random_hue", "k": [], "r": "r1.2", "t": "tf.image.random_hue"}, {"p": "/versions/r1.2/api_docs/python/tf/image/random_saturation", "k": [], "r": "r1.2", "t": "tf.image.random_saturation"}, {"p": "/versions/r1.2/api_docs/python/tf/image/resize_area", "k": [], "r": "r1.2", "t": "tf.image.resize_area"}, {"p": "/versions/r1.2/api_docs/python/tf/image/resize_bicubic", "k": [], "r": "r1.2", "t": "tf.image.resize_bicubic"}, {"p": "/versions/r1.2/api_docs/python/tf/image/resize_bilinear", "k": [], "r": "r1.2", "t": "tf.image.resize_bilinear"}, {"p": "/versions/r1.2/api_docs/python/tf/image/resize_image_with_crop_or_pad", "k": [], "r": "r1.2", "t": "tf.image.resize_image_with_crop_or_pad"}, {"p": "/versions/r1.2/api_docs/python/tf/image/resize_images", "k": [], "r": "r1.2", "t": "tf.image.resize_images"}, {"p": "/versions/r1.2/api_docs/python/tf/image/resize_nearest_neighbor", "k": [], "r": "r1.2", "t": "tf.image.resize_nearest_neighbor"}, {"p": "/versions/r1.2/api_docs/python/tf/image/rgb_to_grayscale", "k": [], "r": "r1.2", "t": "tf.image.rgb_to_grayscale"}, {"p": "/versions/r1.2/api_docs/python/tf/image/rgb_to_hsv", "k": [], "r": "r1.2", "t": "tf.image.rgb_to_hsv"}, {"p": "/versions/r1.2/api_docs/python/tf/image/rot90", "k": [], "r": "r1.2", "t": "tf.image.rot90"}, {"p": "/versions/r1.2/api_docs/python/tf/image/sample_distorted_bounding_box", "k": [], "r": "r1.2", "t": "tf.image.sample_distorted_bounding_box"}, {"p": "/versions/r1.2/api_docs/python/tf/image/total_variation", "k": [], "r": "r1.2", "t": "tf.image.total_variation"}, {"p": "/versions/r1.2/api_docs/python/tf/image/transpose_image", "k": [], "r": "r1.2", "t": "tf.image.transpose_image"}, {"p": "/versions/r1.2/api_docs/python/tf/import_graph_def", "k": [], "r": "r1.2", "t": "tf.import_graph_def"}, {"p": "/versions/r1.2/api_docs/python/tf/initialize_all_tables", "k": [], "r": "r1.2", "t": "tf.initialize_all_tables"}, {"p": "/versions/r1.2/api_docs/python/tf/initialize_all_variables", "k": [], "r": "r1.2", "t": "tf.initialize_all_variables"}, {"p": "/versions/r1.2/api_docs/python/tf/initialize_local_variables", "k": [], "r": "r1.2", "t": "tf.initialize_local_variables"}, {"p": "/versions/r1.2/api_docs/python/tf/initialize_variables", "k": [], "r": "r1.2", "t": "tf.initialize_variables"}, {"p": "/versions/r1.2/api_docs/python/tf/invert_permutation", "k": [], "r": "r1.2", "t": "tf.invert_permutation"}, {"p": "/versions/r1.2/api_docs/python/tf/is_finite", "k": [], "r": "r1.2", "t": "tf.is_finite"}, {"p": "/versions/r1.2/api_docs/python/tf/is_inf", "k": [], "r": "r1.2", "t": "tf.is_inf"}, {"p": "/versions/r1.2/api_docs/python/tf/is_nan", "k": [], "r": "r1.2", "t": "tf.is_nan"}, {"p": "/versions/r1.2/api_docs/python/tf/is_non_decreasing", "k": [], "r": "r1.2", "t": "tf.is_non_decreasing"}, {"p": "/versions/r1.2/api_docs/python/tf/is_numeric_tensor", "k": [], "r": "r1.2", "t": "tf.is_numeric_tensor"}, {"p": "/versions/r1.2/api_docs/python/tf/is_strictly_increasing", "k": [], "r": "r1.2", "t": "tf.is_strictly_increasing"}, {"p": "/versions/r1.2/api_docs/python/tf/is_variable_initialized", "k": [], "r": "r1.2", "t": "tf.is_variable_initialized"}, {"p": "/versions/r1.2/api_docs/python/tf/layers", "k": [], "r": "r1.2", "t": "tf.layers"}, {"p": "/versions/r1.2/api_docs/python/tf/layers/average_pooling1d", "k": [], "r": "r1.2", "t": "tf.layers.average_pooling1d"}, {"p": "/versions/r1.2/api_docs/python/tf/layers/average_pooling2d", "k": [], "r": "r1.2", "t": "tf.layers.average_pooling2d"}, {"p": "/versions/r1.2/api_docs/python/tf/layers/average_pooling3d", "k": [], "r": "r1.2", "t": "tf.layers.average_pooling3d"}, {"p": "/versions/r1.2/api_docs/python/tf/layers/batch_normalization", "k": [], "r": "r1.2", "t": "tf.layers.batch_normalization"}, {"p": "/versions/r1.2/api_docs/python/tf/layers/conv1d", "k": [], "r": "r1.2", "t": "tf.layers.conv1d"}, {"p": "/versions/r1.2/api_docs/python/tf/layers/conv2d", "k": [], "r": "r1.2", "t": "tf.layers.conv2d"}, {"p": "/versions/r1.2/api_docs/python/tf/layers/conv2d_transpose", "k": [], "r": "r1.2", "t": "tf.layers.conv2d_transpose"}, {"p": "/versions/r1.2/api_docs/python/tf/layers/conv3d", "k": [], "r": "r1.2", "t": "tf.layers.conv3d"}, {"p": "/versions/r1.2/api_docs/python/tf/layers/conv3d_transpose", "k": [], "r": "r1.2", "t": "tf.layers.conv3d_transpose"}, {"p": "/versions/r1.2/api_docs/python/tf/layers/dense", "k": [], "r": "r1.2", "t": "tf.layers.dense"}, {"p": "/versions/r1.2/api_docs/python/tf/layers/dropout", "k": [], "r": "r1.2", "t": "tf.layers.dropout"}, {"p": "/versions/r1.2/api_docs/python/tf/layers/max_pooling1d", "k": [], "r": "r1.2", "t": "tf.layers.max_pooling1d"}, {"p": "/versions/r1.2/api_docs/python/tf/layers/max_pooling2d", "k": [], "r": "r1.2", "t": "tf.layers.max_pooling2d"}, {"p": "/versions/r1.2/api_docs/python/tf/layers/max_pooling3d", "k": [], "r": "r1.2", "t": "tf.layers.max_pooling3d"}, {"p": "/versions/r1.2/api_docs/python/tf/layers/separable_conv2d", "k": [], "r": "r1.2", "t": "tf.layers.separable_conv2d"}, {"p": "/versions/r1.2/api_docs/python/tf/lbeta", "k": [], "r": "r1.2", "t": "tf.lbeta"}, {"p": "/versions/r1.2/api_docs/python/tf/less", "k": [], "r": "r1.2", "t": "tf.less"}, {"p": "/versions/r1.2/api_docs/python/tf/less_equal", "k": [], "r": "r1.2", "t": "tf.less_equal"}, {"p": "/versions/r1.2/api_docs/python/tf/lgamma", "k": [], "r": "r1.2", "t": "tf.lgamma"}, {"p": "/versions/r1.2/api_docs/python/tf/lin_space", "k": [], "r": "r1.2", "t": "tf.lin_space"}, {"p": "/versions/r1.2/api_docs/python/tf/load_file_system_library", "k": [], "r": "r1.2", "t": "tf.load_file_system_library"}, {"p": "/versions/r1.2/api_docs/python/tf/load_op_library", "k": [], "r": "r1.2", "t": "tf.load_op_library"}, {"p": "/versions/r1.2/api_docs/python/tf/local_variables", "k": [], "r": "r1.2", "t": "tf.local_variables"}, {"p": "/versions/r1.2/api_docs/python/tf/local_variables_initializer", "k": [], "r": "r1.2", "t": "tf.local_variables_initializer"}, {"p": "/versions/r1.2/api_docs/python/tf/log", "k": [], "r": "r1.2", "t": "tf.log"}, {"p": "/versions/r1.2/api_docs/python/tf/log1p", "k": [], "r": "r1.2", "t": "tf.log1p"}, {"p": "/versions/r1.2/api_docs/python/tf/log_sigmoid", "k": [], "r": "r1.2", "t": "tf.log_sigmoid"}, {"p": "/versions/r1.2/api_docs/python/tf/logging", "k": ["DEBUG", "ERROR", "FATAL", "INFO", "WARN"], "r": "r1.2", "t": "tf.logging"}, {"p": "/versions/r1.2/api_docs/python/tf/logging/TaskLevelStatusMessage", "k": [], "r": "r1.2", "t": "tf.logging.TaskLevelStatusMessage"}, {"p": "/versions/r1.2/api_docs/python/tf/logging/debug", "k": [], "r": "r1.2", "t": "tf.logging.debug"}, {"p": "/versions/r1.2/api_docs/python/tf/logging/error", "k": [], "r": "r1.2", "t": "tf.logging.error"}, {"p": "/versions/r1.2/api_docs/python/tf/logging/fatal", "k": [], "r": "r1.2", "t": "tf.logging.fatal"}, {"p": "/versions/r1.2/api_docs/python/tf/logging/flush", "k": [], "r": "r1.2", "t": "tf.logging.flush"}, {"p": "/versions/r1.2/api_docs/python/tf/logging/get_verbosity", "k": [], "r": "r1.2", "t": "tf.logging.get_verbosity"}, {"p": "/versions/r1.2/api_docs/python/tf/logging/info", "k": [], "r": "r1.2", "t": "tf.logging.info"}, {"p": "/versions/r1.2/api_docs/python/tf/logging/log", "k": [], "r": "r1.2", "t": "tf.logging.log"}, {"p": "/versions/r1.2/api_docs/python/tf/logging/log_every_n", "k": [], "r": "r1.2", "t": "tf.logging.log_every_n"}, {"p": "/versions/r1.2/api_docs/python/tf/logging/log_first_n", "k": [], "r": "r1.2", "t": "tf.logging.log_first_n"}, {"p": "/versions/r1.2/api_docs/python/tf/logging/log_if", "k": [], "r": "r1.2", "t": "tf.logging.log_if"}, {"p": "/versions/r1.2/api_docs/python/tf/logging/set_verbosity", "k": [], "r": "r1.2", "t": "tf.logging.set_verbosity"}, {"p": "/versions/r1.2/api_docs/python/tf/logging/vlog", "k": [], "r": "r1.2", "t": "tf.logging.vlog"}, {"p": "/versions/r1.2/api_docs/python/tf/logging/warn", "k": [], "r": "r1.2", "t": "tf.logging.warn"}, {"p": "/versions/r1.2/api_docs/python/tf/logging/warning", "k": [], "r": "r1.2", "t": "tf.logging.warning"}, {"p": "/versions/r1.2/api_docs/python/tf/logical_and", "k": [], "r": "r1.2", "t": "tf.logical_and"}, {"p": "/versions/r1.2/api_docs/python/tf/logical_not", "k": [], "r": "r1.2", "t": "tf.logical_not"}, {"p": "/versions/r1.2/api_docs/python/tf/logical_or", "k": [], "r": "r1.2", "t": "tf.logical_or"}, {"p": "/versions/r1.2/api_docs/python/tf/logical_xor", "k": [], "r": "r1.2", "t": "tf.logical_xor"}, {"p": "/versions/r1.2/api_docs/python/tf/losses", "k": [], "r": "r1.2", "t": "tf.losses"}, {"p": "/versions/r1.2/api_docs/python/tf/losses/Reduction", "k": ["all", "validate", "MEAN", "NONE", "SUM", "SUM_BY_NONZERO_WEIGHTS"], "r": "r1.2", "t": "tf.losses.Reduction"}, {"p": "/versions/r1.2/api_docs/python/tf/losses/absolute_difference", "k": [], "r": "r1.2", "t": "tf.losses.absolute_difference"}, {"p": "/versions/r1.2/api_docs/python/tf/losses/add_loss", "k": [], "r": "r1.2", "t": "tf.losses.add_loss"}, {"p": "/versions/r1.2/api_docs/python/tf/losses/compute_weighted_loss", "k": [], "r": "r1.2", "t": "tf.losses.compute_weighted_loss"}, {"p": "/versions/r1.2/api_docs/python/tf/losses/cosine_distance", "k": [], "r": "r1.2", "t": "tf.losses.cosine_distance"}, {"p": "/versions/r1.2/api_docs/python/tf/losses/get_losses", "k": [], "r": "r1.2", "t": "tf.losses.get_losses"}, {"p": "/versions/r1.2/api_docs/python/tf/losses/get_regularization_loss", "k": [], "r": "r1.2", "t": "tf.losses.get_regularization_loss"}, {"p": "/versions/r1.2/api_docs/python/tf/losses/get_regularization_losses", "k": [], "r": "r1.2", "t": "tf.losses.get_regularization_losses"}, {"p": "/versions/r1.2/api_docs/python/tf/losses/get_total_loss", "k": [], "r": "r1.2", "t": "tf.losses.get_total_loss"}, {"p": "/versions/r1.2/api_docs/python/tf/losses/hinge_loss", "k": [], "r": "r1.2", "t": "tf.losses.hinge_loss"}, {"p": "/versions/r1.2/api_docs/python/tf/losses/huber_loss", "k": [], "r": "r1.2", "t": "tf.losses.huber_loss"}, {"p": "/versions/r1.2/api_docs/python/tf/losses/log_loss", "k": [], "r": "r1.2", "t": "tf.losses.log_loss"}, {"p": "/versions/r1.2/api_docs/python/tf/losses/mean_pairwise_squared_error", "k": [], "r": "r1.2", "t": "tf.losses.mean_pairwise_squared_error"}, {"p": "/versions/r1.2/api_docs/python/tf/losses/mean_squared_error", "k": [], "r": "r1.2", "t": "tf.losses.mean_squared_error"}, {"p": "/versions/r1.2/api_docs/python/tf/losses/sigmoid_cross_entropy", "k": [], "r": "r1.2", "t": "tf.losses.sigmoid_cross_entropy"}, {"p": "/versions/r1.2/api_docs/python/tf/losses/softmax_cross_entropy", "k": [], "r": "r1.2", "t": "tf.losses.softmax_cross_entropy"}, {"p": "/versions/r1.2/api_docs/python/tf/losses/sparse_softmax_cross_entropy", "k": [], "r": "r1.2", "t": "tf.losses.sparse_softmax_cross_entropy"}, {"p": "/versions/r1.2/api_docs/python/tf/make_ndarray", "k": [], "r": "r1.2", "t": "tf.make_ndarray"}, {"p": "/versions/r1.2/api_docs/python/tf/make_template", "k": [], "r": "r1.2", "t": "tf.make_template"}, {"p": "/versions/r1.2/api_docs/python/tf/make_tensor_proto", "k": [], "r": "r1.2", "t": "tf.make_tensor_proto"}, {"p": "/versions/r1.2/api_docs/python/tf/map_fn", "k": [], "r": "r1.2", "t": "tf.map_fn"}, {"p": "/versions/r1.2/api_docs/python/tf/matching_files", "k": [], "r": "r1.2", "t": "tf.matching_files"}, {"p": "/versions/r1.2/api_docs/python/tf/matmul", "k": [], "r": "r1.2", "t": "tf.matmul"}, {"p": "/versions/r1.2/api_docs/python/tf/matrix_band_part", "k": [], "r": "r1.2", "t": "tf.matrix_band_part"}, {"p": "/versions/r1.2/api_docs/python/tf/matrix_determinant", "k": [], "r": "r1.2", "t": "tf.matrix_determinant"}, {"p": "/versions/r1.2/api_docs/python/tf/matrix_diag", "k": [], "r": "r1.2", "t": "tf.matrix_diag"}, {"p": "/versions/r1.2/api_docs/python/tf/matrix_diag_part", "k": [], "r": "r1.2", "t": "tf.matrix_diag_part"}, {"p": "/versions/r1.2/api_docs/python/tf/matrix_inverse", "k": [], "r": "r1.2", "t": "tf.matrix_inverse"}, {"p": "/versions/r1.2/api_docs/python/tf/matrix_set_diag", "k": [], "r": "r1.2", "t": "tf.matrix_set_diag"}, {"p": "/versions/r1.2/api_docs/python/tf/matrix_solve", "k": [], "r": "r1.2", "t": "tf.matrix_solve"}, {"p": "/versions/r1.2/api_docs/python/tf/matrix_solve_ls", "k": [], "r": "r1.2", "t": "tf.matrix_solve_ls"}, {"p": "/versions/r1.2/api_docs/python/tf/matrix_transpose", "k": [], "r": "r1.2", "t": "tf.matrix_transpose"}, {"p": "/versions/r1.2/api_docs/python/tf/matrix_triangular_solve", "k": [], "r": "r1.2", "t": "tf.matrix_triangular_solve"}, {"p": "/versions/r1.2/api_docs/python/tf/maximum", "k": [], "r": "r1.2", "t": "tf.maximum"}, {"p": "/versions/r1.2/api_docs/python/tf/meshgrid", "k": [], "r": "r1.2", "t": "tf.meshgrid"}, {"p": "/versions/r1.2/api_docs/python/tf/metrics", "k": [], "r": "r1.2", "t": "tf.metrics"}, {"p": "/versions/r1.2/api_docs/python/tf/metrics/accuracy", "k": [], "r": "r1.2", "t": "tf.metrics.accuracy"}, {"p": "/versions/r1.2/api_docs/python/tf/metrics/auc", "k": [], "r": "r1.2", "t": "tf.metrics.auc"}, {"p": "/versions/r1.2/api_docs/python/tf/metrics/false_negatives", "k": [], "r": "r1.2", "t": "tf.metrics.false_negatives"}, {"p": "/versions/r1.2/api_docs/python/tf/metrics/false_positives", "k": [], "r": "r1.2", "t": "tf.metrics.false_positives"}, {"p": "/versions/r1.2/api_docs/python/tf/metrics/mean", "k": [], "r": "r1.2", "t": "tf.metrics.mean"}, {"p": "/versions/r1.2/api_docs/python/tf/metrics/mean_absolute_error", "k": [], "r": "r1.2", "t": "tf.metrics.mean_absolute_error"}, {"p": "/versions/r1.2/api_docs/python/tf/metrics/mean_cosine_distance", "k": [], "r": "r1.2", "t": "tf.metrics.mean_cosine_distance"}, {"p": "/versions/r1.2/api_docs/python/tf/metrics/mean_iou", "k": [], "r": "r1.2", "t": "tf.metrics.mean_iou"}, {"p": "/versions/r1.2/api_docs/python/tf/metrics/mean_per_class_accuracy", "k": [], "r": "r1.2", "t": "tf.metrics.mean_per_class_accuracy"}, {"p": "/versions/r1.2/api_docs/python/tf/metrics/mean_relative_error", "k": [], "r": "r1.2", "t": "tf.metrics.mean_relative_error"}, {"p": "/versions/r1.2/api_docs/python/tf/metrics/mean_squared_error", "k": [], "r": "r1.2", "t": "tf.metrics.mean_squared_error"}, {"p": "/versions/r1.2/api_docs/python/tf/metrics/mean_tensor", "k": [], "r": "r1.2", "t": "tf.metrics.mean_tensor"}, {"p": "/versions/r1.2/api_docs/python/tf/metrics/percentage_below", "k": [], "r": "r1.2", "t": "tf.metrics.percentage_below"}, {"p": "/versions/r1.2/api_docs/python/tf/metrics/precision", "k": [], "r": "r1.2", "t": "tf.metrics.precision"}, {"p": "/versions/r1.2/api_docs/python/tf/metrics/precision_at_thresholds", "k": [], "r": "r1.2", "t": "tf.metrics.precision_at_thresholds"}, {"p": "/versions/r1.2/api_docs/python/tf/metrics/recall", "k": [], "r": "r1.2", "t": "tf.metrics.recall"}, {"p": "/versions/r1.2/api_docs/python/tf/metrics/recall_at_k", "k": [], "r": "r1.2", "t": "tf.metrics.recall_at_k"}, {"p": "/versions/r1.2/api_docs/python/tf/metrics/recall_at_thresholds", "k": [], "r": "r1.2", "t": "tf.metrics.recall_at_thresholds"}, {"p": "/versions/r1.2/api_docs/python/tf/metrics/root_mean_squared_error", "k": [], "r": "r1.2", "t": "tf.metrics.root_mean_squared_error"}, {"p": "/versions/r1.2/api_docs/python/tf/metrics/sensitivity_at_specificity", "k": [], "r": "r1.2", "t": "tf.metrics.sensitivity_at_specificity"}, {"p": "/versions/r1.2/api_docs/python/tf/metrics/sparse_average_precision_at_k", "k": [], "r": "r1.2", "t": "tf.metrics.sparse_average_precision_at_k"}, {"p": "/versions/r1.2/api_docs/python/tf/metrics/sparse_precision_at_k", "k": [], "r": "r1.2", "t": "tf.metrics.sparse_precision_at_k"}, {"p": "/versions/r1.2/api_docs/python/tf/metrics/specificity_at_sensitivity", "k": [], "r": "r1.2", "t": "tf.metrics.specificity_at_sensitivity"}, {"p": "/versions/r1.2/api_docs/python/tf/metrics/true_positives", "k": [], "r": "r1.2", "t": "tf.metrics.true_positives"}, {"p": "/versions/r1.2/api_docs/python/tf/min_max_variable_partitioner", "k": [], "r": "r1.2", "t": "tf.min_max_variable_partitioner"}, {"p": "/versions/r1.2/api_docs/python/tf/minimum", "k": [], "r": "r1.2", "t": "tf.minimum"}, {"p": "/versions/r1.2/api_docs/python/tf/model_variables", "k": [], "r": "r1.2", "t": "tf.model_variables"}, {"p": "/versions/r1.2/api_docs/python/tf/moving_average_variables", "k": [], "r": "r1.2", "t": "tf.moving_average_variables"}, {"p": "/versions/r1.2/api_docs/python/tf/multinomial", "k": [], "r": "r1.2", "t": "tf.multinomial"}, {"p": "/versions/r1.2/api_docs/python/tf/multiply", "k": [], "r": "r1.2", "t": "tf.multiply"}, {"p": "/versions/r1.2/api_docs/python/tf/name_scope", "k": [], "r": "r1.2", "t": "tf.name_scope"}, {"p": "/versions/r1.2/api_docs/python/tf/negative", "k": [], "r": "r1.2", "t": "tf.negative"}, {"p": "/versions/r1.2/api_docs/python/tf/nn", "k": [], "r": "r1.2", "t": "tf.nn"}, {"p": "/versions/r1.2/api_docs/python/tf/nn/all_candidate_sampler", "k": [], "r": "r1.2", "t": "tf.nn.all_candidate_sampler"}, {"p": "/versions/r1.2/api_docs/python/tf/nn/atrous_conv2d", "k": [], "r": "r1.2", "t": "tf.nn.atrous_conv2d"}, {"p": "/versions/r1.2/api_docs/python/tf/nn/atrous_conv2d_transpose", "k": [], "r": "r1.2", "t": "tf.nn.atrous_conv2d_transpose"}, {"p": "/versions/r1.2/api_docs/python/tf/nn/avg_pool", "k": [], "r": "r1.2", "t": "tf.nn.avg_pool"}, {"p": "/versions/r1.2/api_docs/python/tf/nn/avg_pool3d", "k": [], "r": "r1.2", "t": "tf.nn.avg_pool3d"}, {"p": "/versions/r1.2/api_docs/python/tf/nn/batch_norm_with_global_normalization", "k": [], "r": "r1.2", "t": "tf.nn.batch_norm_with_global_normalization"}, {"p": "/versions/r1.2/api_docs/python/tf/nn/batch_normalization", "k": [], "r": "r1.2", "t": "tf.nn.batch_normalization"}, {"p": "/versions/r1.2/api_docs/python/tf/nn/bias_add", "k": [], "r": "r1.2", "t": "tf.nn.bias_add"}, {"p": "/versions/r1.2/api_docs/python/tf/nn/bidirectional_dynamic_rnn", "k": [], "r": "r1.2", "t": "tf.nn.bidirectional_dynamic_rnn"}, {"p": "/versions/r1.2/api_docs/python/tf/nn/compute_accidental_hits", "k": [], "r": "r1.2", "t": "tf.nn.compute_accidental_hits"}, {"p": "/versions/r1.2/api_docs/python/tf/nn/conv1d", "k": [], "r": "r1.2", "t": "tf.nn.conv1d"}, {"p": "/versions/r1.2/api_docs/python/tf/nn/conv2d", "k": [], "r": "r1.2", "t": "tf.nn.conv2d"}, {"p": "/versions/r1.2/api_docs/python/tf/nn/conv2d_backprop_filter", "k": [], "r": "r1.2", "t": "tf.nn.conv2d_backprop_filter"}, {"p": "/versions/r1.2/api_docs/python/tf/nn/conv2d_backprop_input", "k": [], "r": "r1.2", "t": "tf.nn.conv2d_backprop_input"}, {"p": "/versions/r1.2/api_docs/python/tf/nn/conv2d_transpose", "k": [], "r": "r1.2", "t": "tf.nn.conv2d_transpose"}, {"p": "/versions/r1.2/api_docs/python/tf/nn/conv3d", "k": [], "r": "r1.2", "t": "tf.nn.conv3d"}, {"p": "/versions/r1.2/api_docs/python/tf/nn/conv3d_backprop_filter_v2", "k": [], "r": "r1.2", "t": "tf.nn.conv3d_backprop_filter_v2"}, {"p": "/versions/r1.2/api_docs/python/tf/nn/conv3d_transpose", "k": [], "r": "r1.2", "t": "tf.nn.conv3d_transpose"}, {"p": "/versions/r1.2/api_docs/python/tf/nn/convolution", "k": [], "r": "r1.2", "t": "tf.nn.convolution"}, {"p": "/versions/r1.2/api_docs/python/tf/nn/crelu", "k": [], "r": "r1.2", "t": "tf.nn.crelu"}, {"p": "/versions/r1.2/api_docs/python/tf/nn/ctc_beam_search_decoder", "k": [], "r": "r1.2", "t": "tf.nn.ctc_beam_search_decoder"}, {"p": "/versions/r1.2/api_docs/python/tf/nn/ctc_greedy_decoder", "k": [], "r": "r1.2", "t": "tf.nn.ctc_greedy_decoder"}, {"p": "/versions/r1.2/api_docs/python/tf/nn/ctc_loss", "k": [], "r": "r1.2", "t": "tf.nn.ctc_loss"}, {"p": "/versions/r1.2/api_docs/python/tf/nn/depthwise_conv2d", "k": [], "r": "r1.2", "t": "tf.nn.depthwise_conv2d"}, {"p": "/versions/r1.2/api_docs/python/tf/nn/depthwise_conv2d_native", "k": [], "r": "r1.2", "t": "tf.nn.depthwise_conv2d_native"}, {"p": "/versions/r1.2/api_docs/python/tf/nn/depthwise_conv2d_native_backprop_filter", "k": [], "r": "r1.2", "t": "tf.nn.depthwise_conv2d_native_backprop_filter"}, {"p": "/versions/r1.2/api_docs/python/tf/nn/depthwise_conv2d_native_backprop_input", "k": [], "r": "r1.2", "t": "tf.nn.depthwise_conv2d_native_backprop_input"}, {"p": "/versions/r1.2/api_docs/python/tf/nn/dilation2d", "k": [], "r": "r1.2", "t": "tf.nn.dilation2d"}, {"p": "/versions/r1.2/api_docs/python/tf/nn/dropout", "k": [], "r": "r1.2", "t": "tf.nn.dropout"}, {"p": "/versions/r1.2/api_docs/python/tf/nn/dynamic_rnn", "k": [], "r": "r1.2", "t": "tf.nn.dynamic_rnn"}, {"p": "/versions/r1.2/api_docs/python/tf/nn/elu", "k": [], "r": "r1.2", "t": "tf.nn.elu"}, {"p": "/versions/r1.2/api_docs/python/tf/nn/embedding_lookup", "k": [], "r": "r1.2", "t": "tf.nn.embedding_lookup"}, {"p": "/versions/r1.2/api_docs/python/tf/nn/embedding_lookup_sparse", "k": [], "r": "r1.2", "t": "tf.nn.embedding_lookup_sparse"}, {"p": "/versions/r1.2/api_docs/python/tf/nn/erosion2d", "k": [], "r": "r1.2", "t": "tf.nn.erosion2d"}, {"p": "/versions/r1.2/api_docs/python/tf/nn/fixed_unigram_candidate_sampler", "k": [], "r": "r1.2", "t": "tf.nn.fixed_unigram_candidate_sampler"}, {"p": "/versions/r1.2/api_docs/python/tf/nn/fractional_avg_pool", "k": [], "r": "r1.2", "t": "tf.nn.fractional_avg_pool"}, {"p": "/versions/r1.2/api_docs/python/tf/nn/fractional_max_pool", "k": [], "r": "r1.2", "t": "tf.nn.fractional_max_pool"}, {"p": "/versions/r1.2/api_docs/python/tf/nn/fused_batch_norm", "k": [], "r": "r1.2", "t": "tf.nn.fused_batch_norm"}, {"p": "/versions/r1.2/api_docs/python/tf/nn/in_top_k", "k": [], "r": "r1.2", "t": "tf.nn.in_top_k"}, {"p": "/versions/r1.2/api_docs/python/tf/nn/l2_loss", "k": [], "r": "r1.2", "t": "tf.nn.l2_loss"}, {"p": "/versions/r1.2/api_docs/python/tf/nn/l2_normalize", "k": [], "r": "r1.2", "t": "tf.nn.l2_normalize"}, {"p": "/versions/r1.2/api_docs/python/tf/nn/learned_unigram_candidate_sampler", "k": [], "r": "r1.2", "t": "tf.nn.learned_unigram_candidate_sampler"}, {"p": "/versions/r1.2/api_docs/python/tf/nn/local_response_normalization", "k": [], "r": "r1.2", "t": "tf.nn.local_response_normalization"}, {"p": "/versions/r1.2/api_docs/python/tf/nn/log_poisson_loss", "k": [], "r": "r1.2", "t": "tf.nn.log_poisson_loss"}, {"p": "/versions/r1.2/api_docs/python/tf/nn/log_softmax", "k": [], "r": "r1.2", "t": "tf.nn.log_softmax"}, {"p": "/versions/r1.2/api_docs/python/tf/nn/log_uniform_candidate_sampler", "k": [], "r": "r1.2", "t": "tf.nn.log_uniform_candidate_sampler"}, {"p": "/versions/r1.2/api_docs/python/tf/nn/max_pool", "k": [], "r": "r1.2", "t": "tf.nn.max_pool"}, {"p": "/versions/r1.2/api_docs/python/tf/nn/max_pool3d", "k": [], "r": "r1.2", "t": "tf.nn.max_pool3d"}, {"p": "/versions/r1.2/api_docs/python/tf/nn/max_pool_with_argmax", "k": [], "r": "r1.2", "t": "tf.nn.max_pool_with_argmax"}, {"p": "/versions/r1.2/api_docs/python/tf/nn/moments", "k": [], "r": "r1.2", "t": "tf.nn.moments"}, {"p": "/versions/r1.2/api_docs/python/tf/nn/nce_loss", "k": [], "r": "r1.2", "t": "tf.nn.nce_loss"}, {"p": "/versions/r1.2/api_docs/python/tf/nn/normalize_moments", "k": [], "r": "r1.2", "t": "tf.nn.normalize_moments"}, {"p": "/versions/r1.2/api_docs/python/tf/nn/pool", "k": [], "r": "r1.2", "t": "tf.nn.pool"}, {"p": "/versions/r1.2/api_docs/python/tf/nn/quantized_avg_pool", "k": [], "r": "r1.2", "t": "tf.nn.quantized_avg_pool"}, {"p": "/versions/r1.2/api_docs/python/tf/nn/quantized_conv2d", "k": [], "r": "r1.2", "t": "tf.nn.quantized_conv2d"}, {"p": "/versions/r1.2/api_docs/python/tf/nn/quantized_max_pool", "k": [], "r": "r1.2", "t": "tf.nn.quantized_max_pool"}, {"p": "/versions/r1.2/api_docs/python/tf/nn/quantized_relu_x", "k": [], "r": "r1.2", "t": "tf.nn.quantized_relu_x"}, {"p": "/versions/r1.2/api_docs/python/tf/nn/raw_rnn", "k": [], "r": "r1.2", "t": "tf.nn.raw_rnn"}, {"p": "/versions/r1.2/api_docs/python/tf/nn/relu", "k": [], "r": "r1.2", "t": "tf.nn.relu"}, {"p": "/versions/r1.2/api_docs/python/tf/nn/relu6", "k": [], "r": "r1.2", "t": "tf.nn.relu6"}, {"p": "/versions/r1.2/api_docs/python/tf/nn/relu_layer", "k": [], "r": "r1.2", "t": "tf.nn.relu_layer"}, {"p": "/versions/r1.2/api_docs/python/tf/nn/rnn_cell", "k": [], "r": "r1.2", "t": "tf.nn.rnn_cell"}, {"p": "/versions/r1.2/api_docs/python/tf/nn/sampled_softmax_loss", "k": [], "r": "r1.2", "t": "tf.nn.sampled_softmax_loss"}, {"p": "/versions/r1.2/api_docs/python/tf/nn/separable_conv2d", "k": [], "r": "r1.2", "t": "tf.nn.separable_conv2d"}, {"p": "/versions/r1.2/api_docs/python/tf/nn/sigmoid_cross_entropy_with_logits", "k": [], "r": "r1.2", "t": "tf.nn.sigmoid_cross_entropy_with_logits"}, {"p": "/versions/r1.2/api_docs/python/tf/nn/softmax", "k": [], "r": "r1.2", "t": "tf.nn.softmax"}, {"p": "/versions/r1.2/api_docs/python/tf/nn/softmax_cross_entropy_with_logits", "k": [], "r": "r1.2", "t": "tf.nn.softmax_cross_entropy_with_logits"}, {"p": "/versions/r1.2/api_docs/python/tf/nn/softplus", "k": [], "r": "r1.2", "t": "tf.nn.softplus"}, {"p": "/versions/r1.2/api_docs/python/tf/nn/softsign", "k": [], "r": "r1.2", "t": "tf.nn.softsign"}, {"p": "/versions/r1.2/api_docs/python/tf/nn/sparse_softmax_cross_entropy_with_logits", "k": [], "r": "r1.2", "t": "tf.nn.sparse_softmax_cross_entropy_with_logits"}, {"p": "/versions/r1.2/api_docs/python/tf/nn/static_bidirectional_rnn", "k": [], "r": "r1.2", "t": "tf.nn.static_bidirectional_rnn"}, {"p": "/versions/r1.2/api_docs/python/tf/nn/static_rnn", "k": [], "r": "r1.2", "t": "tf.nn.static_rnn"}, {"p": "/versions/r1.2/api_docs/python/tf/nn/static_state_saving_rnn", "k": [], "r": "r1.2", "t": "tf.nn.static_state_saving_rnn"}, {"p": "/versions/r1.2/api_docs/python/tf/nn/sufficient_statistics", "k": [], "r": "r1.2", "t": "tf.nn.sufficient_statistics"}, {"p": "/versions/r1.2/api_docs/python/tf/nn/top_k", "k": [], "r": "r1.2", "t": "tf.nn.top_k"}, {"p": "/versions/r1.2/api_docs/python/tf/nn/uniform_candidate_sampler", "k": [], "r": "r1.2", "t": "tf.nn.uniform_candidate_sampler"}, {"p": "/versions/r1.2/api_docs/python/tf/nn/weighted_cross_entropy_with_logits", "k": [], "r": "r1.2", "t": "tf.nn.weighted_cross_entropy_with_logits"}, {"p": "/versions/r1.2/api_docs/python/tf/nn/weighted_moments", "k": [], "r": "r1.2", "t": "tf.nn.weighted_moments"}, {"p": "/versions/r1.2/api_docs/python/tf/nn/with_space_to_batch", "k": [], "r": "r1.2", "t": "tf.nn.with_space_to_batch"}, {"p": "/versions/r1.2/api_docs/python/tf/nn/xw_plus_b", "k": [], "r": "r1.2", "t": "tf.nn.xw_plus_b"}, {"p": "/versions/r1.2/api_docs/python/tf/nn/zero_fraction", "k": [], "r": "r1.2", "t": "tf.nn.zero_fraction"}, {"p": "/versions/r1.2/api_docs/python/tf/no_op", "k": [], "r": "r1.2", "t": "tf.no_op"}, {"p": "/versions/r1.2/api_docs/python/tf/no_regularizer", "k": [], "r": "r1.2", "t": "tf.no_regularizer"}, {"p": "/versions/r1.2/api_docs/python/tf/norm", "k": [], "r": "r1.2", "t": "tf.norm"}, {"p": "/versions/r1.2/api_docs/python/tf/not_equal", "k": [], "r": "r1.2", "t": "tf.not_equal"}, {"p": "/versions/r1.2/api_docs/python/tf/one_hot", "k": [], "r": "r1.2", "t": "tf.one_hot"}, {"p": "/versions/r1.2/api_docs/python/tf/ones", "k": [], "r": "r1.2", "t": "tf.ones"}, {"p": "/versions/r1.2/api_docs/python/tf/ones_initializer", "k": ["__call__", "__init__", "from_config", "get_config"], "r": "r1.2", "t": "tf.ones_initializer"}, {"p": "/versions/r1.2/api_docs/python/tf/ones_like", "k": [], "r": "r1.2", "t": "tf.ones_like"}, {"p": "/versions/r1.2/api_docs/python/tf/op_scope", "k": [], "r": "r1.2", "t": "tf.op_scope"}, {"p": "/versions/r1.2/api_docs/python/tf/orthogonal_initializer", "k": ["__call__", "__init__", "from_config", "get_config"], "r": "r1.2", "t": "tf.orthogonal_initializer"}, {"p": "/versions/r1.2/api_docs/python/tf/pad", "k": [], "r": "r1.2", "t": "tf.pad"}, {"p": "/versions/r1.2/api_docs/python/tf/parallel_stack", "k": [], "r": "r1.2", "t": "tf.parallel_stack"}, {"p": "/versions/r1.2/api_docs/python/tf/parse_example", "k": [], "r": "r1.2", "t": "tf.parse_example"}, {"p": "/versions/r1.2/api_docs/python/tf/parse_single_example", "k": [], "r": "r1.2", "t": "tf.parse_single_example"}, {"p": "/versions/r1.2/api_docs/python/tf/parse_single_sequence_example", "k": [], "r": "r1.2", "t": "tf.parse_single_sequence_example"}, {"p": "/versions/r1.2/api_docs/python/tf/parse_tensor", "k": [], "r": "r1.2", "t": "tf.parse_tensor"}, {"p": "/versions/r1.2/api_docs/python/tf/placeholder", "k": [], "r": "r1.2", "t": "tf.placeholder"}, {"p": "/versions/r1.2/api_docs/python/tf/placeholder_with_default", "k": [], "r": "r1.2", "t": "tf.placeholder_with_default"}, {"p": "/versions/r1.2/api_docs/python/tf/polygamma", "k": [], "r": "r1.2", "t": "tf.polygamma"}, {"p": "/versions/r1.2/api_docs/python/tf/pow", "k": [], "r": "r1.2", "t": "tf.pow"}, {"p": "/versions/r1.2/api_docs/python/tf/py_func", "k": [], "r": "r1.2", "t": "tf.py_func"}, {"p": "/versions/r1.2/api_docs/python/tf/python_io", "k": [], "r": "r1.2", "t": "tf.python_io"}, {"p": "/versions/r1.2/api_docs/python/tf/python_io/TFRecordCompressionType", "k": ["GZIP", "NONE", "ZLIB"], "r": "r1.2", "t": "tf.python_io.TFRecordCompressionType"}, {"p": "/versions/r1.2/api_docs/python/tf/python_io/TFRecordOptions", "k": ["__init__", "get_compression_type_string", "compression_type_map"], "r": "r1.2", "t": "tf.python_io.TFRecordOptions"}, {"p": "/versions/r1.2/api_docs/python/tf/python_io/TFRecordWriter", "k": ["__enter__", "__exit__", "__init__", "close", "write"], "r": "r1.2", "t": "tf.python_io.TFRecordWriter"}, {"p": "/versions/r1.2/api_docs/python/tf/python_io/tf_record_iterator", "k": [], "r": "r1.2", "t": "tf.python_io.tf_record_iterator"}, {"p": "/versions/r1.2/api_docs/python/tf/pywrap_tensorflow", "k": [], "r": "r1.2", "t": "tf.pywrap_tensorflow"}, {"p": "/versions/r1.2/api_docs/python/tf/qr", "k": [], "r": "r1.2", "t": "tf.qr"}, {"p": "/versions/r1.2/api_docs/python/tf/quantize_v2", "k": [], "r": "r1.2", "t": "tf.quantize_v2"}, {"p": "/versions/r1.2/api_docs/python/tf/quantized_concat", "k": [], "r": "r1.2", "t": "tf.quantized_concat"}, {"p": "/versions/r1.2/api_docs/python/tf/random_crop", "k": [], "r": "r1.2", "t": "tf.random_crop"}, {"p": "/versions/r1.2/api_docs/python/tf/random_gamma", "k": [], "r": "r1.2", "t": "tf.random_gamma"}, {"p": "/versions/r1.2/api_docs/python/tf/random_normal", "k": [], "r": "r1.2", "t": "tf.random_normal"}, {"p": "/versions/r1.2/api_docs/python/tf/random_normal_initializer", "k": ["__call__", "__init__", "from_config", "get_config"], "r": "r1.2", "t": "tf.random_normal_initializer"}, {"p": "/versions/r1.2/api_docs/python/tf/random_poisson", "k": [], "r": "r1.2", "t": "tf.random_poisson"}, {"p": "/versions/r1.2/api_docs/python/tf/random_shuffle", "k": [], "r": "r1.2", "t": "tf.random_shuffle"}, {"p": "/versions/r1.2/api_docs/python/tf/random_uniform", "k": [], "r": "r1.2", "t": "tf.random_uniform"}, {"p": "/versions/r1.2/api_docs/python/tf/random_uniform_initializer", "k": ["__call__", "__init__", "from_config", "get_config"], "r": "r1.2", "t": "tf.random_uniform_initializer"}, {"p": "/versions/r1.2/api_docs/python/tf/range", "k": [], "r": "r1.2", "t": "tf.range"}, {"p": "/versions/r1.2/api_docs/python/tf/rank", "k": [], "r": "r1.2", "t": "tf.rank"}, {"p": "/versions/r1.2/api_docs/python/tf/read_file", "k": [], "r": "r1.2", "t": "tf.read_file"}, {"p": "/versions/r1.2/api_docs/python/tf/real", "k": [], "r": "r1.2", "t": "tf.real"}, {"p": "/versions/r1.2/api_docs/python/tf/realdiv", "k": [], "r": "r1.2", "t": "tf.realdiv"}, {"p": "/versions/r1.2/api_docs/python/tf/reciprocal", "k": [], "r": "r1.2", "t": "tf.reciprocal"}, {"p": "/versions/r1.2/api_docs/python/tf/reduce_all", "k": [], "r": "r1.2", "t": "tf.reduce_all"}, {"p": "/versions/r1.2/api_docs/python/tf/reduce_any", "k": [], "r": "r1.2", "t": "tf.reduce_any"}, {"p": "/versions/r1.2/api_docs/python/tf/reduce_join", "k": [], "r": "r1.2", "t": "tf.reduce_join"}, {"p": "/versions/r1.2/api_docs/python/tf/reduce_logsumexp", "k": [], "r": "r1.2", "t": "tf.reduce_logsumexp"}, {"p": "/versions/r1.2/api_docs/python/tf/reduce_max", "k": [], "r": "r1.2", "t": "tf.reduce_max"}, {"p": "/versions/r1.2/api_docs/python/tf/reduce_mean", "k": [], "r": "r1.2", "t": "tf.reduce_mean"}, {"p": "/versions/r1.2/api_docs/python/tf/reduce_min", "k": [], "r": "r1.2", "t": "tf.reduce_min"}, {"p": "/versions/r1.2/api_docs/python/tf/reduce_prod", "k": [], "r": "r1.2", "t": "tf.reduce_prod"}, {"p": "/versions/r1.2/api_docs/python/tf/reduce_sum", "k": [], "r": "r1.2", "t": "tf.reduce_sum"}, {"p": "/versions/r1.2/api_docs/python/tf/register_tensor_conversion_function", "k": [], "r": "r1.2", "t": "tf.register_tensor_conversion_function"}, {"p": "/versions/r1.2/api_docs/python/tf/report_uninitialized_variables", "k": [], "r": "r1.2", "t": "tf.report_uninitialized_variables"}, {"p": "/versions/r1.2/api_docs/python/tf/required_space_to_batch_paddings", "k": [], "r": "r1.2", "t": "tf.required_space_to_batch_paddings"}, {"p": "/versions/r1.2/api_docs/python/tf/reset_default_graph", "k": [], "r": "r1.2", "t": "tf.reset_default_graph"}, {"p": "/versions/r1.2/api_docs/python/tf/reshape", "k": [], "r": "r1.2", "t": "tf.reshape"}, {"p": "/versions/r1.2/api_docs/python/tf/resource_loader", "k": [], "r": "r1.2", "t": "tf.resource_loader"}, {"p": "/versions/r1.2/api_docs/python/tf/resource_loader/get_data_files_path", "k": [], "r": "r1.2", "t": "tf.resource_loader.get_data_files_path"}, {"p": "/versions/r1.2/api_docs/python/tf/resource_loader/get_path_to_datafile", "k": [], "r": "r1.2", "t": "tf.resource_loader.get_path_to_datafile"}, {"p": "/versions/r1.2/api_docs/python/tf/resource_loader/get_root_dir_with_all_resources", "k": [], "r": "r1.2", "t": "tf.resource_loader.get_root_dir_with_all_resources"}, {"p": "/versions/r1.2/api_docs/python/tf/resource_loader/load_resource", "k": [], "r": "r1.2", "t": "tf.resource_loader.load_resource"}, {"p": "/versions/r1.2/api_docs/python/tf/resource_loader/readahead_file_path", "k": [], "r": "r1.2", "t": "tf.resource_loader.readahead_file_path"}, {"p": "/versions/r1.2/api_docs/python/tf/reverse", "k": [], "r": "r1.2", "t": "tf.reverse"}, {"p": "/versions/r1.2/api_docs/python/tf/reverse_sequence", "k": [], "r": "r1.2", "t": "tf.reverse_sequence"}, {"p": "/versions/r1.2/api_docs/python/tf/reverse_v2", "k": [], "r": "r1.2", "t": "tf.reverse_v2"}, {"p": "/versions/r1.2/api_docs/python/tf/rint", "k": [], "r": "r1.2", "t": "tf.rint"}, {"p": "/versions/r1.2/api_docs/python/tf/round", "k": [], "r": "r1.2", "t": "tf.round"}, {"p": "/versions/r1.2/api_docs/python/tf/rsqrt", "k": [], "r": "r1.2", "t": "tf.rsqrt"}, {"p": "/versions/r1.2/api_docs/python/tf/saturate_cast", "k": [], "r": "r1.2", "t": "tf.saturate_cast"}, {"p": "/versions/r1.2/api_docs/python/tf/saved_model", "k": [], "r": "r1.2", "t": "tf.saved_model"}, {"p": "/versions/r1.2/api_docs/python/tf/saved_model/builder", "k": [], "r": "r1.2", "t": "tf.saved_model.builder"}, {"p": "/versions/r1.2/api_docs/python/tf/saved_model/builder/SavedModelBuilder", "k": ["__init__", "add_meta_graph", "add_meta_graph_and_variables", "save"], "r": "r1.2", "t": "tf.saved_model.builder.SavedModelBuilder"}, {"p": "/versions/r1.2/api_docs/python/tf/saved_model/constants", "k": ["ASSETS_DIRECTORY", "ASSETS_KEY", "LEGACY_INIT_OP_KEY", "MAIN_OP_KEY", "SAVED_MODEL_FILENAME_PB", "SAVED_MODEL_FILENAME_PBTXT", "SAVED_MODEL_SCHEMA_VERSION", "VARIABLES_DIRECTORY", "VARIABLES_FILENAME"], "r": "r1.2", "t": "tf.saved_model.constants"}, {"p": "/versions/r1.2/api_docs/python/tf/saved_model/loader", "k": [], "r": "r1.2", "t": "tf.saved_model.loader"}, {"p": "/versions/r1.2/api_docs/python/tf/saved_model/loader/load", "k": [], "r": "r1.2", "t": "tf.saved_model.loader.load"}, {"p": "/versions/r1.2/api_docs/python/tf/saved_model/loader/maybe_saved_model_directory", "k": [], "r": "r1.2", "t": "tf.saved_model.loader.maybe_saved_model_directory"}, {"p": "/versions/r1.2/api_docs/python/tf/saved_model/main_op", "k": [], "r": "r1.2", "t": "tf.saved_model.main_op"}, {"p": "/versions/r1.2/api_docs/python/tf/saved_model/main_op/main_op", "k": [], "r": "r1.2", "t": "tf.saved_model.main_op.main_op"}, {"p": "/versions/r1.2/api_docs/python/tf/saved_model/main_op/main_op_with_restore", "k": [], "r": "r1.2", "t": "tf.saved_model.main_op.main_op_with_restore"}, {"p": "/versions/r1.2/api_docs/python/tf/saved_model/signature_constants", "k": ["CLASSIFY_INPUTS", "CLASSIFY_METHOD_NAME", "CLASSIFY_OUTPUT_CLASSES", "CLASSIFY_OUTPUT_SCORES", "DEFAULT_SERVING_SIGNATURE_DEF_KEY", "PREDICT_INPUTS", "PREDICT_METHOD_NAME", "PREDICT_OUTPUTS", "REGRESS_INPUTS", "REGRESS_METHOD_NAME", "REGRESS_OUTPUTS"], "r": "r1.2", "t": "tf.saved_model.signature_constants"}, {"p": "/versions/r1.2/api_docs/python/tf/saved_model/signature_def_utils", "k": [], "r": "r1.2", "t": "tf.saved_model.signature_def_utils"}, {"p": "/versions/r1.2/api_docs/python/tf/saved_model/signature_def_utils/build_signature_def", "k": [], "r": "r1.2", "t": "tf.saved_model.signature_def_utils.build_signature_def"}, {"p": "/versions/r1.2/api_docs/python/tf/saved_model/signature_def_utils/classification_signature_def", "k": [], "r": "r1.2", "t": "tf.saved_model.signature_def_utils.classification_signature_def"}, {"p": "/versions/r1.2/api_docs/python/tf/saved_model/signature_def_utils/predict_signature_def", "k": [], "r": "r1.2", "t": "tf.saved_model.signature_def_utils.predict_signature_def"}, {"p": "/versions/r1.2/api_docs/python/tf/saved_model/signature_def_utils/regression_signature_def", "k": [], "r": "r1.2", "t": "tf.saved_model.signature_def_utils.regression_signature_def"}, {"p": "/versions/r1.2/api_docs/python/tf/saved_model/tag_constants", "k": ["SERVING", "TRAINING"], "r": "r1.2", "t": "tf.saved_model.tag_constants"}, {"p": "/versions/r1.2/api_docs/python/tf/saved_model/utils", "k": [], "r": "r1.2", "t": "tf.saved_model.utils"}, {"p": "/versions/r1.2/api_docs/python/tf/saved_model/utils/build_tensor_info", "k": [], "r": "r1.2", "t": "tf.saved_model.utils.build_tensor_info"}, {"p": "/versions/r1.2/api_docs/python/tf/scalar_mul", "k": [], "r": "r1.2", "t": "tf.scalar_mul"}, {"p": "/versions/r1.2/api_docs/python/tf/scan", "k": [], "r": "r1.2", "t": "tf.scan"}, {"p": "/versions/r1.2/api_docs/python/tf/scatter_add", "k": [], "r": "r1.2", "t": "tf.scatter_add"}, {"p": "/versions/r1.2/api_docs/python/tf/scatter_div", "k": [], "r": "r1.2", "t": "tf.scatter_div"}, {"p": "/versions/r1.2/api_docs/python/tf/scatter_mul", "k": [], "r": "r1.2", "t": "tf.scatter_mul"}, {"p": "/versions/r1.2/api_docs/python/tf/scatter_nd", "k": [], "r": "r1.2", "t": "tf.scatter_nd"}, {"p": "/versions/r1.2/api_docs/python/tf/scatter_nd_add", "k": [], "r": "r1.2", "t": "tf.scatter_nd_add"}, {"p": "/versions/r1.2/api_docs/python/tf/scatter_nd_sub", "k": [], "r": "r1.2", "t": "tf.scatter_nd_sub"}, {"p": "/versions/r1.2/api_docs/python/tf/scatter_nd_update", "k": [], "r": "r1.2", "t": "tf.scatter_nd_update"}, {"p": "/versions/r1.2/api_docs/python/tf/scatter_sub", "k": [], "r": "r1.2", "t": "tf.scatter_sub"}, {"p": "/versions/r1.2/api_docs/python/tf/scatter_update", "k": [], "r": "r1.2", "t": "tf.scatter_update"}, {"p": "/versions/r1.2/api_docs/python/tf/segment_max", "k": [], "r": "r1.2", "t": "tf.segment_max"}, {"p": "/versions/r1.2/api_docs/python/tf/segment_mean", "k": [], "r": "r1.2", "t": "tf.segment_mean"}, {"p": "/versions/r1.2/api_docs/python/tf/segment_min", "k": [], "r": "r1.2", "t": "tf.segment_min"}, {"p": "/versions/r1.2/api_docs/python/tf/segment_prod", "k": [], "r": "r1.2", "t": "tf.segment_prod"}, {"p": "/versions/r1.2/api_docs/python/tf/segment_sum", "k": [], "r": "r1.2", "t": "tf.segment_sum"}, {"p": "/versions/r1.2/api_docs/python/tf/self_adjoint_eig", "k": [], "r": "r1.2", "t": "tf.self_adjoint_eig"}, {"p": "/versions/r1.2/api_docs/python/tf/self_adjoint_eigvals", "k": [], "r": "r1.2", "t": "tf.self_adjoint_eigvals"}, {"p": "/versions/r1.2/api_docs/python/tf/sequence_mask", "k": [], "r": "r1.2", "t": "tf.sequence_mask"}, {"p": "/versions/r1.2/api_docs/python/tf/serialize_many_sparse", "k": [], "r": "r1.2", "t": "tf.serialize_many_sparse"}, {"p": "/versions/r1.2/api_docs/python/tf/serialize_sparse", "k": [], "r": "r1.2", "t": "tf.serialize_sparse"}, {"p": "/versions/r1.2/api_docs/python/tf/set_random_seed", "k": [], "r": "r1.2", "t": "tf.set_random_seed"}, {"p": "/versions/r1.2/api_docs/python/tf/setdiff1d", "k": [], "r": "r1.2", "t": "tf.setdiff1d"}, {"p": "/versions/r1.2/api_docs/python/tf/sets", "k": [], "r": "r1.2", "t": "tf.sets"}, {"p": "/versions/r1.2/api_docs/python/tf/sets/set_difference", "k": [], "r": "r1.2", "t": "tf.sets.set_difference"}, {"p": "/versions/r1.2/api_docs/python/tf/sets/set_intersection", "k": [], "r": "r1.2", "t": "tf.sets.set_intersection"}, {"p": "/versions/r1.2/api_docs/python/tf/sets/set_size", "k": [], "r": "r1.2", "t": "tf.sets.set_size"}, {"p": "/versions/r1.2/api_docs/python/tf/sets/set_union", "k": [], "r": "r1.2", "t": "tf.sets.set_union"}, {"p": "/versions/r1.2/api_docs/python/tf/shape", "k": [], "r": "r1.2", "t": "tf.shape"}, {"p": "/versions/r1.2/api_docs/python/tf/shape_n", "k": [], "r": "r1.2", "t": "tf.shape_n"}, {"p": "/versions/r1.2/api_docs/python/tf/sigmoid", "k": [], "r": "r1.2", "t": "tf.sigmoid"}, {"p": "/versions/r1.2/api_docs/python/tf/sign", "k": [], "r": "r1.2", "t": "tf.sign"}, {"p": "/versions/r1.2/api_docs/python/tf/sin", "k": [], "r": "r1.2", "t": "tf.sin"}, {"p": "/versions/r1.2/api_docs/python/tf/size", "k": [], "r": "r1.2", "t": "tf.size"}, {"p": "/versions/r1.2/api_docs/python/tf/slice", "k": [], "r": "r1.2", "t": "tf.slice"}, {"p": "/versions/r1.2/api_docs/python/tf/space_to_batch", "k": [], "r": "r1.2", "t": "tf.space_to_batch"}, {"p": "/versions/r1.2/api_docs/python/tf/space_to_batch_nd", "k": [], "r": "r1.2", "t": "tf.space_to_batch_nd"}, {"p": "/versions/r1.2/api_docs/python/tf/space_to_depth", "k": [], "r": "r1.2", "t": "tf.space_to_depth"}, {"p": "/versions/r1.2/api_docs/python/tf/sparse_add", "k": [], "r": "r1.2", "t": "tf.sparse_add"}, {"p": "/versions/r1.2/api_docs/python/tf/sparse_concat", "k": [], "r": "r1.2", "t": "tf.sparse_concat"}, {"p": "/versions/r1.2/api_docs/python/tf/sparse_fill_empty_rows", "k": [], "r": "r1.2", "t": "tf.sparse_fill_empty_rows"}, {"p": "/versions/r1.2/api_docs/python/tf/sparse_mask", "k": [], "r": "r1.2", "t": "tf.sparse_mask"}, {"p": "/versions/r1.2/api_docs/python/tf/sparse_matmul", "k": [], "r": "r1.2", "t": "tf.sparse_matmul"}, {"p": "/versions/r1.2/api_docs/python/tf/sparse_maximum", "k": [], "r": "r1.2", "t": "tf.sparse_maximum"}, {"p": "/versions/r1.2/api_docs/python/tf/sparse_merge", "k": [], "r": "r1.2", "t": "tf.sparse_merge"}, {"p": "/versions/r1.2/api_docs/python/tf/sparse_minimum", "k": [], "r": "r1.2", "t": "tf.sparse_minimum"}, {"p": "/versions/r1.2/api_docs/python/tf/sparse_placeholder", "k": [], "r": "r1.2", "t": "tf.sparse_placeholder"}, {"p": "/versions/r1.2/api_docs/python/tf/sparse_reduce_sum", "k": [], "r": "r1.2", "t": "tf.sparse_reduce_sum"}, {"p": "/versions/r1.2/api_docs/python/tf/sparse_reduce_sum_sparse", "k": [], "r": "r1.2", "t": "tf.sparse_reduce_sum_sparse"}, {"p": "/versions/r1.2/api_docs/python/tf/sparse_reorder", "k": [], "r": "r1.2", "t": "tf.sparse_reorder"}, {"p": "/versions/r1.2/api_docs/python/tf/sparse_reset_shape", "k": [], "r": "r1.2", "t": "tf.sparse_reset_shape"}, {"p": "/versions/r1.2/api_docs/python/tf/sparse_reshape", "k": [], "r": "r1.2", "t": "tf.sparse_reshape"}, {"p": "/versions/r1.2/api_docs/python/tf/sparse_retain", "k": [], "r": "r1.2", "t": "tf.sparse_retain"}, {"p": "/versions/r1.2/api_docs/python/tf/sparse_segment_mean", "k": [], "r": "r1.2", "t": "tf.sparse_segment_mean"}, {"p": "/versions/r1.2/api_docs/python/tf/sparse_segment_sqrt_n", "k": [], "r": "r1.2", "t": "tf.sparse_segment_sqrt_n"}, {"p": "/versions/r1.2/api_docs/python/tf/sparse_segment_sum", "k": [], "r": "r1.2", "t": "tf.sparse_segment_sum"}, {"p": "/versions/r1.2/api_docs/python/tf/sparse_softmax", "k": [], "r": "r1.2", "t": "tf.sparse_softmax"}, {"p": "/versions/r1.2/api_docs/python/tf/sparse_split", "k": [], "r": "r1.2", "t": "tf.sparse_split"}, {"p": "/versions/r1.2/api_docs/python/tf/sparse_tensor_dense_matmul", "k": [], "r": "r1.2", "t": "tf.sparse_tensor_dense_matmul"}, {"p": "/versions/r1.2/api_docs/python/tf/sparse_tensor_to_dense", "k": [], "r": "r1.2", "t": "tf.sparse_tensor_to_dense"}, {"p": "/versions/r1.2/api_docs/python/tf/sparse_to_dense", "k": [], "r": "r1.2", "t": "tf.sparse_to_dense"}, {"p": "/versions/r1.2/api_docs/python/tf/sparse_to_indicator", "k": [], "r": "r1.2", "t": "tf.sparse_to_indicator"}, {"p": "/versions/r1.2/api_docs/python/tf/sparse_transpose", "k": [], "r": "r1.2", "t": "tf.sparse_transpose"}, {"p": "/versions/r1.2/api_docs/python/tf/spectral", "k": [], "r": "r1.2", "t": "tf.spectral"}, {"p": "/versions/r1.2/api_docs/python/tf/spectral/irfft", "k": [], "r": "r1.2", "t": "tf.spectral.irfft"}, {"p": "/versions/r1.2/api_docs/python/tf/spectral/irfft2d", "k": [], "r": "r1.2", "t": "tf.spectral.irfft2d"}, {"p": "/versions/r1.2/api_docs/python/tf/spectral/irfft3d", "k": [], "r": "r1.2", "t": "tf.spectral.irfft3d"}, {"p": "/versions/r1.2/api_docs/python/tf/spectral/rfft", "k": [], "r": "r1.2", "t": "tf.spectral.rfft"}, {"p": "/versions/r1.2/api_docs/python/tf/spectral/rfft2d", "k": [], "r": "r1.2", "t": "tf.spectral.rfft2d"}, {"p": "/versions/r1.2/api_docs/python/tf/spectral/rfft3d", "k": [], "r": "r1.2", "t": "tf.spectral.rfft3d"}, {"p": "/versions/r1.2/api_docs/python/tf/split", "k": [], "r": "r1.2", "t": "tf.split"}, {"p": "/versions/r1.2/api_docs/python/tf/sqrt", "k": [], "r": "r1.2", "t": "tf.sqrt"}, {"p": "/versions/r1.2/api_docs/python/tf/square", "k": [], "r": "r1.2", "t": "tf.square"}, {"p": "/versions/r1.2/api_docs/python/tf/squared_difference", "k": [], "r": "r1.2", "t": "tf.squared_difference"}, {"p": "/versions/r1.2/api_docs/python/tf/squeeze", "k": [], "r": "r1.2", "t": "tf.squeeze"}, {"p": "/versions/r1.2/api_docs/python/tf/stack", "k": [], "r": "r1.2", "t": "tf.stack"}, {"p": "/versions/r1.2/api_docs/python/tf/stop_gradient", "k": [], "r": "r1.2", "t": "tf.stop_gradient"}, {"p": "/versions/r1.2/api_docs/python/tf/strided_slice", "k": [], "r": "r1.2", "t": "tf.strided_slice"}, {"p": "/versions/r1.2/api_docs/python/tf/string_join", "k": [], "r": "r1.2", "t": "tf.string_join"}, {"p": "/versions/r1.2/api_docs/python/tf/string_split", "k": [], "r": "r1.2", "t": "tf.string_split"}, {"p": "/versions/r1.2/api_docs/python/tf/string_to_hash_bucket", "k": [], "r": "r1.2", "t": "tf.string_to_hash_bucket"}, {"p": "/versions/r1.2/api_docs/python/tf/string_to_hash_bucket_fast", "k": [], "r": "r1.2", "t": "tf.string_to_hash_bucket_fast"}, {"p": "/versions/r1.2/api_docs/python/tf/string_to_hash_bucket_strong", "k": [], "r": "r1.2", "t": "tf.string_to_hash_bucket_strong"}, {"p": "/versions/r1.2/api_docs/python/tf/string_to_number", "k": [], "r": "r1.2", "t": "tf.string_to_number"}, {"p": "/versions/r1.2/api_docs/python/tf/substr", "k": [], "r": "r1.2", "t": "tf.substr"}, {"p": "/versions/r1.2/api_docs/python/tf/subtract", "k": [], "r": "r1.2", "t": "tf.subtract"}, {"p": "/versions/r1.2/api_docs/python/tf/summary", "k": [], "r": "r1.2", "t": "tf.summary"}, {"p": "/versions/r1.2/api_docs/python/tf/summary/FileWriter", "k": ["__init__", "add_event", "add_graph", "add_meta_graph", "add_run_metadata", "add_session_log", "add_summary", "close", "flush", "get_logdir", "reopen"], "r": "r1.2", "t": "tf.summary.FileWriter"}, {"p": "/versions/r1.2/api_docs/python/tf/summary/FileWriterCache", "k": ["clear", "get"], "r": "r1.2", "t": "tf.summary.FileWriterCache"}, {"p": "/versions/r1.2/api_docs/python/tf/summary/SummaryDescription", "k": [], "r": "r1.2", "t": "tf.summary.SummaryDescription"}, {"p": "/versions/r1.2/api_docs/python/tf/summary/TaggedRunMetadata", "k": [], "r": "r1.2", "t": "tf.summary.TaggedRunMetadata"}, {"p": "/versions/r1.2/api_docs/python/tf/summary/audio", "k": [], "r": "r1.2", "t": "tf.summary.audio"}, {"p": "/versions/r1.2/api_docs/python/tf/summary/get_summary_description", "k": [], "r": "r1.2", "t": "tf.summary.get_summary_description"}, {"p": "/versions/r1.2/api_docs/python/tf/summary/histogram", "k": [], "r": "r1.2", "t": "tf.summary.histogram"}, {"p": "/versions/r1.2/api_docs/python/tf/summary/image", "k": [], "r": "r1.2", "t": "tf.summary.image"}, {"p": "/versions/r1.2/api_docs/python/tf/summary/merge", "k": [], "r": "r1.2", "t": "tf.summary.merge"}, {"p": "/versions/r1.2/api_docs/python/tf/summary/merge_all", "k": [], "r": "r1.2", "t": "tf.summary.merge_all"}, {"p": "/versions/r1.2/api_docs/python/tf/summary/scalar", "k": [], "r": "r1.2", "t": "tf.summary.scalar"}, {"p": "/versions/r1.2/api_docs/python/tf/summary/tensor_summary", "k": [], "r": "r1.2", "t": "tf.summary.tensor_summary"}, {"p": "/versions/r1.2/api_docs/python/tf/summary/text", "k": [], "r": "r1.2", "t": "tf.summary.text"}, {"p": "/versions/r1.2/api_docs/python/tf/svd", "k": [], "r": "r1.2", "t": "tf.svd"}, {"p": "/versions/r1.2/api_docs/python/tf/sysconfig", "k": [], "r": "r1.2", "t": "tf.sysconfig"}, {"p": "/versions/r1.2/api_docs/python/tf/sysconfig/get_include", "k": [], "r": "r1.2", "t": "tf.sysconfig.get_include"}, {"p": "/versions/r1.2/api_docs/python/tf/sysconfig/get_lib", "k": [], "r": "r1.2", "t": "tf.sysconfig.get_lib"}, {"p": "/versions/r1.2/api_docs/python/tf/tables_initializer", "k": [], "r": "r1.2", "t": "tf.tables_initializer"}, {"p": "/versions/r1.2/api_docs/python/tf/tan", "k": [], "r": "r1.2", "t": "tf.tan"}, {"p": "/versions/r1.2/api_docs/python/tf/tanh", "k": [], "r": "r1.2", "t": "tf.tanh"}, {"p": "/versions/r1.2/api_docs/python/tf/tensordot", "k": [], "r": "r1.2", "t": "tf.tensordot"}, {"p": "/versions/r1.2/api_docs/python/tf/test", "k": [], "r": "r1.2", "t": "tf.test"}, {"p": "/versions/r1.2/api_docs/python/tf/test/Benchmark", "k": ["is_abstract", "report_benchmark", "run_op_benchmark"], "r": "r1.2", "t": "tf.test.Benchmark"}, {"p": "/versions/r1.2/api_docs/python/tf/test/StubOutForTesting", "k": ["CleanUp", "Set", "SmartSet", "SmartUnsetAll", "UnsetAll", "__del__", "__enter__", "__exit__", "__init__"], "r": "r1.2", "t": "tf.test.StubOutForTesting"}, {"p": "/versions/r1.2/api_docs/python/tf/test/TestCase", "k": ["failureException", "__call__", "__eq__", "__init__", "__ne__", "addCleanup", "addTypeEqualityFunc", "assertAllClose", "assertAllCloseAccordingToType", "assertAllEqual", "assertAlmostEqual", "assertAlmostEquals", "assertArrayNear", "assertDeviceEqual", "assertDictContainsSubset", "assertDictEqual", "assertEqual", "assertEquals", "assertFalse", "assertGreater", "assertGreaterEqual", "assertIn", "assertIs", "assertIsInstance", "assertIsNone", "assertIsNot", "assertIsNotNone", "assertItemsEqual", "assertLess", "assertLessEqual", "assertListEqual", "assertMultiLineEqual", "assertNDArrayNear", "assertNear", "assertNotAlmostEqual", "assertNotAlmostEquals", "assertNotEqual", "assertNotEquals", "assertNotIn", "assertNotIsInstance", "assertNotRegexpMatches", "assertProtoEquals", "assertProtoEqualsVersion", "assertRaises", "assertRaisesOpError", "assertRaisesRegexp", "assertRaisesWithPredicateMatch", "assertRegexpMatches", "assertSequenceEqual", "assertSetEqual", "assertShapeEqual", "assertStartsWith", "assertTrue", "assertTupleEqual", "assert_", "checkedThread", "countTestCases", "debug", "defaultTestResult", "doCleanups", "fail", "failIf", "failIfAlmostEqual", "failIfEqual", "failUnless", "failUnlessAlmostEqual", "failUnlessEqual", "failUnlessRaises", "get_temp_dir", "id", "run", "setUp", "setUpClass", "shortDescription", "skipTest", "tearDown", "tearDownClass", "test_session", "longMessage", "maxDiff"], "r": "r1.2", "t": "tf.test.TestCase"}, {"p": "/versions/r1.2/api_docs/python/tf/test/TestCase/failureException", "k": [], "r": "r1.2", "t": "tf.test.TestCase.failureException"}, {"p": "/versions/r1.2/api_docs/python/tf/test/assert_equal_graph_def", "k": [], "r": "r1.2", "t": "tf.test.assert_equal_graph_def"}, {"p": "/versions/r1.2/api_docs/python/tf/test/compute_gradient", "k": [], "r": "r1.2", "t": "tf.test.compute_gradient"}, {"p": "/versions/r1.2/api_docs/python/tf/test/compute_gradient_error", "k": [], "r": "r1.2", "t": "tf.test.compute_gradient_error"}, {"p": "/versions/r1.2/api_docs/python/tf/test/create_local_cluster", "k": [], "r": "r1.2", "t": "tf.test.create_local_cluster"}, {"p": "/versions/r1.2/api_docs/python/tf/test/get_temp_dir", "k": [], "r": "r1.2", "t": "tf.test.get_temp_dir"}, {"p": "/versions/r1.2/api_docs/python/tf/test/gpu_device_name", "k": [], "r": "r1.2", "t": "tf.test.gpu_device_name"}, {"p": "/versions/r1.2/api_docs/python/tf/test/is_built_with_cuda", "k": [], "r": "r1.2", "t": "tf.test.is_built_with_cuda"}, {"p": "/versions/r1.2/api_docs/python/tf/test/is_gpu_available", "k": [], "r": "r1.2", "t": "tf.test.is_gpu_available"}, {"p": "/versions/r1.2/api_docs/python/tf/test/main", "k": [], "r": "r1.2", "t": "tf.test.main"}, {"p": "/versions/r1.2/api_docs/python/tf/test/mock", "k": [], "r": "r1.2", "t": "tf.test.mock"}, {"p": "/versions/r1.2/api_docs/python/tf/test/test_src_dir_path", "k": [], "r": "r1.2", "t": "tf.test.test_src_dir_path"}, {"p": "/versions/r1.2/api_docs/python/tf/tile", "k": [], "r": "r1.2", "t": "tf.tile"}, {"p": "/versions/r1.2/api_docs/python/tf/to_bfloat16", "k": [], "r": "r1.2", "t": "tf.to_bfloat16"}, {"p": "/versions/r1.2/api_docs/python/tf/to_double", "k": [], "r": "r1.2", "t": "tf.to_double"}, {"p": "/versions/r1.2/api_docs/python/tf/to_float", "k": [], "r": "r1.2", "t": "tf.to_float"}, {"p": "/versions/r1.2/api_docs/python/tf/to_int32", "k": [], "r": "r1.2", "t": "tf.to_int32"}, {"p": "/versions/r1.2/api_docs/python/tf/to_int64", "k": [], "r": "r1.2", "t": "tf.to_int64"}, {"p": "/versions/r1.2/api_docs/python/tf/tools", "k": [], "r": "r1.2", "t": "tf.tools"}, {"p": "/versions/r1.2/api_docs/python/tf/trace", "k": [], "r": "r1.2", "t": "tf.trace"}, {"p": "/versions/r1.2/api_docs/python/tf/train", "k": [], "r": "r1.2", "t": "tf.train"}, {"p": "/versions/r1.2/api_docs/python/tf/train/AdadeltaOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.2", "t": "tf.train.AdadeltaOptimizer"}, {"p": "/versions/r1.2/api_docs/python/tf/train/AdagradDAOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.2", "t": "tf.train.AdagradDAOptimizer"}, {"p": "/versions/r1.2/api_docs/python/tf/train/AdagradOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.2", "t": "tf.train.AdagradOptimizer"}, {"p": "/versions/r1.2/api_docs/python/tf/train/AdamOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.2", "t": "tf.train.AdamOptimizer"}, {"p": "/versions/r1.2/api_docs/python/tf/train/BytesList", "k": [], "r": "r1.2", "t": "tf.train.BytesList"}, {"p": "/versions/r1.2/api_docs/python/tf/train/CheckpointSaverHook", "k": ["__init__", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "r1.2", "t": "tf.train.CheckpointSaverHook"}, {"p": "/versions/r1.2/api_docs/python/tf/train/CheckpointSaverListener", "k": ["after_save", "before_save", "begin", "end"], "r": "r1.2", "t": "tf.train.CheckpointSaverListener"}, {"p": "/versions/r1.2/api_docs/python/tf/train/ChiefSessionCreator", "k": ["__init__", "create_session"], "r": "r1.2", "t": "tf.train.ChiefSessionCreator"}, {"p": "/versions/r1.2/api_docs/python/tf/train/ClusterDef", "k": [], "r": "r1.2", "t": "tf.train.ClusterDef"}, {"p": "/versions/r1.2/api_docs/python/tf/train/ClusterSpec", "k": ["jobs", "__bool__", "__eq__", "__init__", "__ne__", "__nonzero__", "as_cluster_def", "as_dict", "job_tasks", "num_tasks", "task_address", "task_indices"], "r": "r1.2", "t": "tf.train.ClusterSpec"}, {"p": "/versions/r1.2/api_docs/python/tf/train/Coordinator", "k": ["joined", "__init__", "clear_stop", "join", "raise_requested_exception", "register_thread", "request_stop", "should_stop", "stop_on_exception", "wait_for_stop"], "r": "r1.2", "t": "tf.train.Coordinator"}, {"p": "/versions/r1.2/api_docs/python/tf/train/Example", "k": [], "r": "r1.2", "t": "tf.train.Example"}, {"p": "/versions/r1.2/api_docs/python/tf/train/ExponentialMovingAverage", "k": ["__init__", "apply", "average", "average_name", "variables_to_restore"], "r": "r1.2", "t": "tf.train.ExponentialMovingAverage"}, {"p": "/versions/r1.2/api_docs/python/tf/train/Feature", "k": [], "r": "r1.2", "t": "tf.train.Feature"}, {"p": "/versions/r1.2/api_docs/python/tf/train/FeatureList", "k": [], "r": "r1.2", "t": "tf.train.FeatureList"}, {"p": "/versions/r1.2/api_docs/python/tf/train/FeatureLists", "k": ["FeatureListEntry"], "r": "r1.2", "t": "tf.train.FeatureLists"}, {"p": "/versions/r1.2/api_docs/python/tf/train/FeatureLists/FeatureListEntry", "k": [], "r": "r1.2", "t": "tf.train.FeatureLists.FeatureListEntry"}, {"p": "/versions/r1.2/api_docs/python/tf/train/Features", "k": ["FeatureEntry"], "r": "r1.2", "t": "tf.train.Features"}, {"p": "/versions/r1.2/api_docs/python/tf/train/Features/FeatureEntry", "k": [], "r": "r1.2", "t": "tf.train.Features.FeatureEntry"}, {"p": "/versions/r1.2/api_docs/python/tf/train/FeedFnHook", "k": ["__init__", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "r1.2", "t": "tf.train.FeedFnHook"}, {"p": "/versions/r1.2/api_docs/python/tf/train/FinalOpsHook", "k": ["final_ops_values", "__init__", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "r1.2", "t": "tf.train.FinalOpsHook"}, {"p": "/versions/r1.2/api_docs/python/tf/train/FloatList", "k": [], "r": "r1.2", "t": "tf.train.FloatList"}, {"p": "/versions/r1.2/api_docs/python/tf/train/FtrlOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.2", "t": "tf.train.FtrlOptimizer"}, {"p": "/versions/r1.2/api_docs/python/tf/train/GlobalStepWaiterHook", "k": ["__init__", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "r1.2", "t": "tf.train.GlobalStepWaiterHook"}, {"p": "/versions/r1.2/api_docs/python/tf/train/GradientDescentOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.2", "t": "tf.train.GradientDescentOptimizer"}, {"p": "/versions/r1.2/api_docs/python/tf/train/Int64List", "k": [], "r": "r1.2", "t": "tf.train.Int64List"}, {"p": "/versions/r1.2/api_docs/python/tf/train/JobDef", "k": ["TasksEntry"], "r": "r1.2", "t": "tf.train.JobDef"}, {"p": "/versions/r1.2/api_docs/python/tf/train/JobDef/TasksEntry", "k": [], "r": "r1.2", "t": "tf.train.JobDef.TasksEntry"}, {"p": "/versions/r1.2/api_docs/python/tf/train/LoggingTensorHook", "k": ["__init__", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "r1.2", "t": "tf.train.LoggingTensorHook"}, {"p": "/versions/r1.2/api_docs/python/tf/train/LooperThread", "k": ["daemon", "ident", "name", "__init__", "getName", "isAlive", "isDaemon", "is_alive", "join", "loop", "run", "run_loop", "setDaemon", "setName", "start", "start_loop", "stop_loop"], "r": "r1.2", "t": "tf.train.LooperThread"}, {"p": "/versions/r1.2/api_docs/python/tf/train/MomentumOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.2", "t": "tf.train.MomentumOptimizer"}, {"p": "/versions/r1.2/api_docs/python/tf/train/MonitoredSession", "k": ["graph", "__enter__", "__exit__", "__init__", "close", "run", "should_stop"], "r": "r1.2", "t": "tf.train.MonitoredSession"}, {"p": "/versions/r1.2/api_docs/python/tf/train/MonitoredTrainingSession", "k": [], "r": "r1.2", "t": "tf.train.MonitoredTrainingSession"}, {"p": "/versions/r1.2/api_docs/python/tf/train/NanLossDuringTrainingError", "k": [], "r": "r1.2", "t": "tf.train.NanLossDuringTrainingError"}, {"p": "/versions/r1.2/api_docs/python/tf/train/NanTensorHook", "k": ["__init__", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "r1.2", "t": "tf.train.NanTensorHook"}, {"p": "/versions/r1.2/api_docs/python/tf/train/NewCheckpointReader", "k": [], "r": "r1.2", "t": "tf.train.NewCheckpointReader"}, {"p": "/versions/r1.2/api_docs/python/tf/train/Optimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.2", "t": "tf.train.Optimizer"}, {"p": "/versions/r1.2/api_docs/python/tf/train/ProximalAdagradOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.2", "t": "tf.train.ProximalAdagradOptimizer"}, {"p": "/versions/r1.2/api_docs/python/tf/train/ProximalGradientDescentOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.2", "t": "tf.train.ProximalGradientDescentOptimizer"}, {"p": "/versions/r1.2/api_docs/python/tf/train/QueueRunner", "k": ["cancel_op", "close_op", "enqueue_ops", "exceptions_raised", "name", "queue", "queue_closed_exception_types", "__init__", "create_threads", "from_proto", "to_proto"], "r": "r1.2", "t": "tf.train.QueueRunner"}, {"p": "/versions/r1.2/api_docs/python/tf/train/RMSPropOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.2", "t": "tf.train.RMSPropOptimizer"}, {"p": "/versions/r1.2/api_docs/python/tf/train/Saver", "k": ["last_checkpoints", "__init__", "as_saver_def", "build", "export_meta_graph", "from_proto", "recover_last_checkpoints", "restore", "save", "set_last_checkpoints", "set_last_checkpoints_with_time", "to_proto"], "r": "r1.2", "t": "tf.train.Saver"}, {"p": "/versions/r1.2/api_docs/python/tf/train/SaverDef", "k": ["CheckpointFormatVersion", "LEGACY", "V1", "V2"], "r": "r1.2", "t": "tf.train.SaverDef"}, {"p": "/versions/r1.2/api_docs/python/tf/train/Scaffold", "k": ["init_feed_dict", "init_fn", "init_op", "local_init_op", "ready_for_local_init_op", "ready_op", "saver", "summary_op", "__init__", "finalize", "get_or_default"], "r": "r1.2", "t": "tf.train.Scaffold"}, {"p": "/versions/r1.2/api_docs/python/tf/train/SecondOrStepTimer", "k": ["__init__", "last_triggered_step", "should_trigger_for_step", "update_last_triggered_step"], "r": "r1.2", "t": "tf.train.SecondOrStepTimer"}, {"p": "/versions/r1.2/api_docs/python/tf/train/SequenceExample", "k": [], "r": "r1.2", "t": "tf.train.SequenceExample"}, {"p": "/versions/r1.2/api_docs/python/tf/train/Server", "k": ["server_def", "target", "__init__", "create_local_server", "join", "start"], "r": "r1.2", "t": "tf.train.Server"}, {"p": "/versions/r1.2/api_docs/python/tf/train/ServerDef", "k": [], "r": "r1.2", "t": "tf.train.ServerDef"}, {"p": "/versions/r1.2/api_docs/python/tf/train/SessionCreator", "k": ["create_session"], "r": "r1.2", "t": "tf.train.SessionCreator"}, {"p": "/versions/r1.2/api_docs/python/tf/train/SessionManager", "k": ["__init__", "prepare_session", "recover_session", "wait_for_session"], "r": "r1.2", "t": "tf.train.SessionManager"}, {"p": "/versions/r1.2/api_docs/python/tf/train/SessionRunArgs", "k": ["feed_dict", "fetches", "options", "__new__"], "r": "r1.2", "t": "tf.train.SessionRunArgs"}, {"p": "/versions/r1.2/api_docs/python/tf/train/SessionRunContext", "k": ["original_args", "session", "stop_requested", "__init__", "request_stop"], "r": "r1.2", "t": "tf.train.SessionRunContext"}, {"p": "/versions/r1.2/api_docs/python/tf/train/SessionRunHook", "k": ["after_create_session", "after_run", "before_run", "begin", "end"], "r": "r1.2", "t": "tf.train.SessionRunHook"}, {"p": "/versions/r1.2/api_docs/python/tf/train/SessionRunValues", "k": ["options", "results", "run_metadata", "__new__"], "r": "r1.2", "t": "tf.train.SessionRunValues"}, {"p": "/versions/r1.2/api_docs/python/tf/train/SingularMonitoredSession", "k": ["graph", "__enter__", "__exit__", "__init__", "close", "raw_session", "run", "should_stop"], "r": "r1.2", "t": "tf.train.SingularMonitoredSession"}, {"p": "/versions/r1.2/api_docs/python/tf/train/StepCounterHook", "k": ["__init__", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "r1.2", "t": "tf.train.StepCounterHook"}, {"p": "/versions/r1.2/api_docs/python/tf/train/StopAtStepHook", "k": ["__init__", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "r1.2", "t": "tf.train.StopAtStepHook"}, {"p": "/versions/r1.2/api_docs/python/tf/train/SummarySaverHook", "k": ["__init__", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "r1.2", "t": "tf.train.SummarySaverHook"}, {"p": "/versions/r1.2/api_docs/python/tf/train/Supervisor", "k": ["coord", "global_step", "init_feed_dict", "init_op", "is_chief", "ready_for_local_init_op", "ready_op", "save_model_secs", "save_path", "save_summaries_secs", "saver", "session_manager", "summary_op", "summary_writer", "Loop", "PrepareSession", "RequestStop", "ShouldStop", "StartQueueRunners", "StartStandardServices", "Stop", "StopOnException", "SummaryComputed", "WaitForStop", "__init__", "loop", "managed_session", "prepare_or_wait_for_session", "request_stop", "should_stop", "start_queue_runners", "start_standard_services", "stop", "stop_on_exception", "summary_computed", "wait_for_stop", "USE_DEFAULT"], "r": "r1.2", "t": "tf.train.Supervisor"}, {"p": "/versions/r1.2/api_docs/python/tf/train/SyncReplicasOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_chief_queue_runner", "get_init_tokens_op", "get_name", "get_slot", "get_slot_names", "make_session_run_hook", "minimize", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.2", "t": "tf.train.SyncReplicasOptimizer"}, {"p": "/versions/r1.2/api_docs/python/tf/train/WorkerSessionCreator", "k": ["__init__", "create_session"], "r": "r1.2", "t": "tf.train.WorkerSessionCreator"}, {"p": "/versions/r1.2/api_docs/python/tf/train/add_queue_runner", "k": [], "r": "r1.2", "t": "tf.train.add_queue_runner"}, {"p": "/versions/r1.2/api_docs/python/tf/train/assert_global_step", "k": [], "r": "r1.2", "t": "tf.train.assert_global_step"}, {"p": "/versions/r1.2/api_docs/python/tf/train/basic_train_loop", "k": [], "r": "r1.2", "t": "tf.train.basic_train_loop"}, {"p": "/versions/r1.2/api_docs/python/tf/train/batch", "k": [], "r": "r1.2", "t": "tf.train.batch"}, {"p": "/versions/r1.2/api_docs/python/tf/train/batch_join", "k": [], "r": "r1.2", "t": "tf.train.batch_join"}, {"p": "/versions/r1.2/api_docs/python/tf/train/checkpoint_exists", "k": [], "r": "r1.2", "t": "tf.train.checkpoint_exists"}, {"p": "/versions/r1.2/api_docs/python/tf/train/create_global_step", "k": [], "r": "r1.2", "t": "tf.train.create_global_step"}, {"p": "/versions/r1.2/api_docs/python/tf/train/do_quantize_training_on_graphdef", "k": [], "r": "r1.2", "t": "tf.train.do_quantize_training_on_graphdef"}, {"p": "/versions/r1.2/api_docs/python/tf/train/exponential_decay", "k": [], "r": "r1.2", "t": "tf.train.exponential_decay"}, {"p": "/versions/r1.2/api_docs/python/tf/train/export_meta_graph", "k": [], "r": "r1.2", "t": "tf.train.export_meta_graph"}, {"p": "/versions/r1.2/api_docs/python/tf/train/generate_checkpoint_state_proto", "k": [], "r": "r1.2", "t": "tf.train.generate_checkpoint_state_proto"}, {"p": "/versions/r1.2/api_docs/python/tf/train/get_checkpoint_mtimes", "k": [], "r": "r1.2", "t": "tf.train.get_checkpoint_mtimes"}, {"p": "/versions/r1.2/api_docs/python/tf/train/get_checkpoint_state", "k": [], "r": "r1.2", "t": "tf.train.get_checkpoint_state"}, {"p": "/versions/r1.2/api_docs/python/tf/train/get_global_step", "k": [], "r": "r1.2", "t": "tf.train.get_global_step"}, {"p": "/versions/r1.2/api_docs/python/tf/train/get_or_create_global_step", "k": [], "r": "r1.2", "t": "tf.train.get_or_create_global_step"}, {"p": "/versions/r1.2/api_docs/python/tf/train/global_step", "k": [], "r": "r1.2", "t": "tf.train.global_step"}, {"p": "/versions/r1.2/api_docs/python/tf/train/import_meta_graph", "k": [], "r": "r1.2", "t": "tf.train.import_meta_graph"}, {"p": "/versions/r1.2/api_docs/python/tf/train/input_producer", "k": [], "r": "r1.2", "t": "tf.train.input_producer"}, {"p": "/versions/r1.2/api_docs/python/tf/train/inverse_time_decay", "k": [], "r": "r1.2", "t": "tf.train.inverse_time_decay"}, {"p": "/versions/r1.2/api_docs/python/tf/train/latest_checkpoint", "k": [], "r": "r1.2", "t": "tf.train.latest_checkpoint"}, {"p": "/versions/r1.2/api_docs/python/tf/train/limit_epochs", "k": [], "r": "r1.2", "t": "tf.train.limit_epochs"}, {"p": "/versions/r1.2/api_docs/python/tf/train/match_filenames_once", "k": [], "r": "r1.2", "t": "tf.train.match_filenames_once"}, {"p": "/versions/r1.2/api_docs/python/tf/train/maybe_batch", "k": [], "r": "r1.2", "t": "tf.train.maybe_batch"}, {"p": "/versions/r1.2/api_docs/python/tf/train/maybe_batch_join", "k": [], "r": "r1.2", "t": "tf.train.maybe_batch_join"}, {"p": "/versions/r1.2/api_docs/python/tf/train/maybe_shuffle_batch", "k": [], "r": "r1.2", "t": "tf.train.maybe_shuffle_batch"}, {"p": "/versions/r1.2/api_docs/python/tf/train/maybe_shuffle_batch_join", "k": [], "r": "r1.2", "t": "tf.train.maybe_shuffle_batch_join"}, {"p": "/versions/r1.2/api_docs/python/tf/train/natural_exp_decay", "k": [], "r": "r1.2", "t": "tf.train.natural_exp_decay"}, {"p": "/versions/r1.2/api_docs/python/tf/train/piecewise_constant", "k": [], "r": "r1.2", "t": "tf.train.piecewise_constant"}, {"p": "/versions/r1.2/api_docs/python/tf/train/polynomial_decay", "k": [], "r": "r1.2", "t": "tf.train.polynomial_decay"}, {"p": "/versions/r1.2/api_docs/python/tf/train/queue_runner", "k": [], "r": "r1.2", "t": "tf.train.queue_runner"}, {"p": "/versions/r1.2/api_docs/python/tf/train/range_input_producer", "k": [], "r": "r1.2", "t": "tf.train.range_input_producer"}, {"p": "/versions/r1.2/api_docs/python/tf/train/replica_device_setter", "k": [], "r": "r1.2", "t": "tf.train.replica_device_setter"}, {"p": "/versions/r1.2/api_docs/python/tf/train/sdca_fprint", "k": [], "r": "r1.2", "t": "tf.train.sdca_fprint"}, {"p": "/versions/r1.2/api_docs/python/tf/train/sdca_optimizer", "k": [], "r": "r1.2", "t": "tf.train.sdca_optimizer"}, {"p": "/versions/r1.2/api_docs/python/tf/train/sdca_shrink_l1", "k": [], "r": "r1.2", "t": "tf.train.sdca_shrink_l1"}, {"p": "/versions/r1.2/api_docs/python/tf/train/shuffle_batch", "k": [], "r": "r1.2", "t": "tf.train.shuffle_batch"}, {"p": "/versions/r1.2/api_docs/python/tf/train/shuffle_batch_join", "k": [], "r": "r1.2", "t": "tf.train.shuffle_batch_join"}, {"p": "/versions/r1.2/api_docs/python/tf/train/slice_input_producer", "k": [], "r": "r1.2", "t": "tf.train.slice_input_producer"}, {"p": "/versions/r1.2/api_docs/python/tf/train/start_queue_runners", "k": [], "r": "r1.2", "t": "tf.train.start_queue_runners"}, {"p": "/versions/r1.2/api_docs/python/tf/train/string_input_producer", "k": [], "r": "r1.2", "t": "tf.train.string_input_producer"}, {"p": "/versions/r1.2/api_docs/python/tf/train/summary_iterator", "k": [], "r": "r1.2", "t": "tf.train.summary_iterator"}, {"p": "/versions/r1.2/api_docs/python/tf/train/update_checkpoint_state", "k": [], "r": "r1.2", "t": "tf.train.update_checkpoint_state"}, {"p": "/versions/r1.2/api_docs/python/tf/train/write_graph", "k": [], "r": "r1.2", "t": "tf.train.write_graph"}, {"p": "/versions/r1.2/api_docs/python/tf/trainable_variables", "k": [], "r": "r1.2", "t": "tf.trainable_variables"}, {"p": "/versions/r1.2/api_docs/python/tf/transpose", "k": [], "r": "r1.2", "t": "tf.transpose"}, {"p": "/versions/r1.2/api_docs/python/tf/truediv", "k": [], "r": "r1.2", "t": "tf.truediv"}, {"p": "/versions/r1.2/api_docs/python/tf/truncated_normal", "k": [], "r": "r1.2", "t": "tf.truncated_normal"}, {"p": "/versions/r1.2/api_docs/python/tf/truncated_normal_initializer", "k": ["__call__", "__init__", "from_config", "get_config"], "r": "r1.2", "t": "tf.truncated_normal_initializer"}, {"p": "/versions/r1.2/api_docs/python/tf/truncatediv", "k": [], "r": "r1.2", "t": "tf.truncatediv"}, {"p": "/versions/r1.2/api_docs/python/tf/truncatemod", "k": [], "r": "r1.2", "t": "tf.truncatemod"}, {"p": "/versions/r1.2/api_docs/python/tf/tuple", "k": [], "r": "r1.2", "t": "tf.tuple"}, {"p": "/versions/r1.2/api_docs/python/tf/uniform_unit_scaling_initializer", "k": ["__call__", "__init__", "from_config", "get_config"], "r": "r1.2", "t": "tf.uniform_unit_scaling_initializer"}, {"p": "/versions/r1.2/api_docs/python/tf/unique", "k": [], "r": "r1.2", "t": "tf.unique"}, {"p": "/versions/r1.2/api_docs/python/tf/unique_with_counts", "k": [], "r": "r1.2", "t": "tf.unique_with_counts"}, {"p": "/versions/r1.2/api_docs/python/tf/unsorted_segment_max", "k": [], "r": "r1.2", "t": "tf.unsorted_segment_max"}, {"p": "/versions/r1.2/api_docs/python/tf/unsorted_segment_sum", "k": [], "r": "r1.2", "t": "tf.unsorted_segment_sum"}, {"p": "/versions/r1.2/api_docs/python/tf/unstack", "k": [], "r": "r1.2", "t": "tf.unstack"}, {"p": "/versions/r1.2/api_docs/python/tf/user_ops", "k": [], "r": "r1.2", "t": "tf.user_ops"}, {"p": "/versions/r1.2/api_docs/python/tf/variable_axis_size_partitioner", "k": [], "r": "r1.2", "t": "tf.variable_axis_size_partitioner"}, {"p": "/versions/r1.2/api_docs/python/tf/variable_op_scope", "k": [], "r": "r1.2", "t": "tf.variable_op_scope"}, {"p": "/versions/r1.2/api_docs/python/tf/variable_scope", "k": [], "r": "r1.2", "t": "tf.variable_scope"}, {"p": "/versions/r1.2/api_docs/python/tf/variables_initializer", "k": [], "r": "r1.2", "t": "tf.variables_initializer"}, {"p": "/versions/r1.2/api_docs/python/tf/verify_tensor_all_finite", "k": [], "r": "r1.2", "t": "tf.verify_tensor_all_finite"}, {"p": "/versions/r1.2/api_docs/python/tf/where", "k": [], "r": "r1.2", "t": "tf.where"}, {"p": "/versions/r1.2/api_docs/python/tf/while_loop", "k": [], "r": "r1.2", "t": "tf.while_loop"}, {"p": "/versions/r1.2/api_docs/python/tf/write_file", "k": [], "r": "r1.2", "t": "tf.write_file"}, {"p": "/versions/r1.2/api_docs/python/tf/zeros", "k": [], "r": "r1.2", "t": "tf.zeros"}, {"p": "/versions/r1.2/api_docs/python/tf/zeros_initializer", "k": ["__call__", "__init__", "from_config", "get_config"], "r": "r1.2", "t": "tf.zeros_initializer"}, {"p": "/versions/r1.2/api_docs/python/tf/zeros_like", "k": [], "r": "r1.2", "t": "tf.zeros_like"}, {"p": "/versions/r1.2/api_docs/python/tf/zeta", "k": [], "r": "r1.2", "t": "tf.zeta"}, {"p": "/versions/r1.2/api_docs/python/tfdbg", "k": [], "r": "r1.2", "t": "tfdbg"}, {"p": "/versions/r1.2/api_docs/python/tfdbg/DebugDumpDir", "k": ["core_metadata", "dumped_tensor_data", "python_graph", "run_feed_keys_info", "run_fetches_info", "size", "t0", "__init__", "debug_watch_keys", "devices", "find", "get_dump_sizes_bytes", "get_rel_timestamps", "get_tensor_file_paths", "get_tensors", "loaded_partition_graphs", "node_attributes", "node_device", "node_exists", "node_inputs", "node_op_type", "node_recipients", "node_traceback", "nodes", "partition_graphs", "set_python_graph", "transitive_inputs", "watch_key_to_data"], "r": "r1.2", "t": "tfdbg.DebugDumpDir"}, {"p": "/versions/r1.2/api_docs/python/tfdbg/DebugTensorDatum", "k": ["debug_op", "dump_size_bytes", "extended_timestamp", "file_path", "node_name", "output_slot", "tensor_name", "timestamp", "watch_key", "__init__", "get_tensor"], "r": "r1.2", "t": "tfdbg.DebugTensorDatum"}, {"p": "/versions/r1.2/api_docs/python/tfdbg/DumpingDebugHook", "k": ["graph", "graph_def", "sess_str", "session", "__enter__", "__exit__", "__init__", "after_create_session", "after_run", "as_default", "before_run", "begin", "close", "end", "invoke_node_stepper", "on_run_end", "on_run_start", "on_session_init", "partial_run", "partial_run_setup", "prepare_run_debug_urls", "run"], "r": "r1.2", "t": "tfdbg.DumpingDebugHook"}, {"p": "/versions/r1.2/api_docs/python/tfdbg/DumpingDebugWrapperSession", "k": ["graph", "graph_def", "sess_str", "session", "__enter__", "__exit__", "__init__", "as_default", "close", "invoke_node_stepper", "on_run_end", "on_run_start", "on_session_init", "partial_run", "partial_run_setup", "prepare_run_debug_urls", "run"], "r": "r1.2", "t": "tfdbg.DumpingDebugWrapperSession"}, {"p": "/versions/r1.2/api_docs/python/tfdbg/GrpcDebugHook", "k": ["__init__", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "r1.2", "t": "tfdbg.GrpcDebugHook"}, {"p": "/versions/r1.2/api_docs/python/tfdbg/GrpcDebugWrapperSession", "k": ["graph", "graph_def", "sess_str", "session", "__enter__", "__exit__", "__init__", "as_default", "close", "invoke_node_stepper", "on_run_end", "on_run_start", "on_session_init", "partial_run", "partial_run_setup", "prepare_run_debug_urls", "run"], "r": "r1.2", "t": "tfdbg.GrpcDebugWrapperSession"}, {"p": "/versions/r1.2/api_docs/python/tfdbg/LocalCLIDebugHook", "k": ["graph", "graph_def", "sess_str", "session", "__enter__", "__exit__", "__init__", "add_tensor_filter", "after_create_session", "after_run", "as_default", "before_run", "begin", "close", "end", "invoke_node_stepper", "on_run_end", "on_run_start", "on_session_init", "partial_run", "partial_run_setup", "run"], "r": "r1.2", "t": "tfdbg.LocalCLIDebugHook"}, {"p": "/versions/r1.2/api_docs/python/tfdbg/LocalCLIDebugWrapperSession", "k": ["graph", "graph_def", "sess_str", "session", "__enter__", "__exit__", "__init__", "add_tensor_filter", "as_default", "close", "invoke_node_stepper", "on_run_end", "on_run_start", "on_session_init", "partial_run", "partial_run_setup", "run"], "r": "r1.2", "t": "tfdbg.LocalCLIDebugWrapperSession"}, {"p": "/versions/r1.2/api_docs/python/tfdbg/WatchOptions", "k": ["__init__"], "r": "r1.2", "t": "tfdbg.WatchOptions"}, {"p": "/versions/r1.2/api_docs/python/tfdbg/add_debug_tensor_watch", "k": [], "r": "r1.2", "t": "tfdbg.add_debug_tensor_watch"}, {"p": "/versions/r1.2/api_docs/python/tfdbg/has_inf_or_nan", "k": [], "r": "r1.2", "t": "tfdbg.has_inf_or_nan"}, {"p": "/versions/r1.2/api_docs/python/tfdbg/load_tensor_from_event_file", "k": [], "r": "r1.2", "t": "tfdbg.load_tensor_from_event_file"}, {"p": "/versions/r1.2/api_docs/python/tfdbg/watch_graph", "k": [], "r": "r1.2", "t": "tfdbg.watch_graph"}, {"p": "/versions/r1.2/api_docs/python/tfdbg/watch_graph_with_blacklists", "k": [], "r": "r1.2", "t": "tfdbg.watch_graph_with_blacklists"}, {"p": "/versions/r1.3/api_docs/python/tf", "k": ["COMPILER_VERSION", "GIT_VERSION", "GRAPH_DEF_VERSION", "GRAPH_DEF_VERSION_MIN_CONSUMER", "GRAPH_DEF_VERSION_MIN_PRODUCER", "QUANTIZED_DTYPES", "VERSION", "__compiler_version__", "__git_version__", "__version__", "bfloat16", "bool", "complex128", "complex64", "double", "float16", "float32", "float64", "half", "int16", "int32", "int64", "int8", "newaxis", "qint16", "qint32", "qint8", "quint16", "quint8", "resource", "string", "uint16", "uint8"], "r": "r1.3", "t": "tf"}, {"p": "/versions/r1.3/api_docs/python/tf/AggregationMethod", "k": ["ADD_N", "DEFAULT", "EXPERIMENTAL_ACCUMULATE_N", "EXPERIMENTAL_TREE"], "r": "r1.3", "t": "tf.AggregationMethod"}, {"p": "/versions/r1.3/api_docs/python/tf/Assert", "k": [], "r": "r1.3", "t": "tf.Assert"}, {"p": "/versions/r1.3/api_docs/python/tf/AttrValue", "k": ["ListValue"], "r": "r1.3", "t": "tf.AttrValue"}, {"p": "/versions/r1.3/api_docs/python/tf/AttrValue/ListValue", "k": [], "r": "r1.3", "t": "tf.AttrValue.ListValue"}, {"p": "/versions/r1.3/api_docs/python/tf/ConditionalAccumulator", "k": ["accumulator_ref", "dtype", "name", "__init__", "apply_grad", "num_accumulated", "set_global_step", "take_grad"], "r": "r1.3", "t": "tf.ConditionalAccumulator"}, {"p": "/versions/r1.3/api_docs/python/tf/ConditionalAccumulatorBase", "k": ["accumulator_ref", "dtype", "name", "__init__", "num_accumulated", "set_global_step"], "r": "r1.3", "t": "tf.ConditionalAccumulatorBase"}, {"p": "/versions/r1.3/api_docs/python/tf/ConfigProto", "k": ["DeviceCountEntry"], "r": "r1.3", "t": "tf.ConfigProto"}, {"p": "/versions/r1.3/api_docs/python/tf/ConfigProto/DeviceCountEntry", "k": [], "r": "r1.3", "t": "tf.ConfigProto.DeviceCountEntry"}, {"p": "/versions/r1.3/api_docs/python/tf/DType", "k": ["as_datatype_enum", "as_numpy_dtype", "base_dtype", "is_bool", "is_complex", "is_floating", "is_integer", "is_numpy_compatible", "is_quantized", "is_unsigned", "limits", "max", "min", "name", "real_dtype", "size", "__eq__", "__init__", "__int__", "__ne__", "is_compatible_with"], "r": "r1.3", "t": "tf.DType"}, {"p": "/versions/r1.3/api_docs/python/tf/DeviceSpec", "k": ["job", "replica", "task", "__init__", "from_string", "merge_from", "parse_from_string", "to_string"], "r": "r1.3", "t": "tf.DeviceSpec"}, {"p": "/versions/r1.3/api_docs/python/tf/Dimension", "k": ["value", "__add__", "__div__", "__eq__", "__floordiv__", "__ge__", "__gt__", "__index__", "__init__", "__int__", "__le__", "__long__", "__lt__", "__mod__", "__mul__", "__ne__", "__sub__", "assert_is_compatible_with", "is_compatible_with", "merge_with"], "r": "r1.3", "t": "tf.Dimension"}, {"p": "/versions/r1.3/api_docs/python/tf/Event", "k": [], "r": "r1.3", "t": "tf.Event"}, {"p": "/versions/r1.3/api_docs/python/tf/FIFOQueue", "k": ["dtypes", "name", "names", "queue_ref", "shapes", "__init__", "close", "dequeue", "dequeue_many", "dequeue_up_to", "enqueue", "enqueue_many", "from_list", "is_closed", "size"], "r": "r1.3", "t": "tf.FIFOQueue"}, {"p": "/versions/r1.3/api_docs/python/tf/FixedLenFeature", "k": ["default_value", "dtype", "shape", "__new__"], "r": "r1.3", "t": "tf.FixedLenFeature"}, {"p": "/versions/r1.3/api_docs/python/tf/FixedLenSequenceFeature", "k": ["allow_missing", "default_value", "dtype", "shape", "__new__"], "r": "r1.3", "t": "tf.FixedLenSequenceFeature"}, {"p": "/versions/r1.3/api_docs/python/tf/FixedLengthRecordReader", "k": ["reader_ref", "supports_serialize", "__init__", "num_records_produced", "num_work_units_completed", "read", "read_up_to", "reset", "restore_state", "serialize_state"], "r": "r1.3", "t": "tf.FixedLengthRecordReader"}, {"p": "/versions/r1.3/api_docs/python/tf/GPUOptions", "k": [], "r": "r1.3", "t": "tf.GPUOptions"}, {"p": "/versions/r1.3/api_docs/python/tf/Graph", "k": ["building_function", "collections", "finalized", "graph_def_versions", "seed", "version", "__init__", "add_to_collection", "add_to_collections", "as_default", "as_graph_def", "as_graph_element", "clear_collection", "colocate_with", "container", "control_dependencies", "create_op", "device", "finalize", "get_all_collection_keys", "get_collection", "get_collection_ref", "get_name_scope", "get_operation_by_name", "get_operations", "get_tensor_by_name", "gradient_override_map", "is_feedable", "is_fetchable", "name_scope", "prevent_feeding", "prevent_fetching", "unique_name"], "r": "r1.3", "t": "tf.Graph"}, {"p": "/versions/r1.3/api_docs/python/tf/GraphDef", "k": [], "r": "r1.3", "t": "tf.GraphDef"}, {"p": "/versions/r1.3/api_docs/python/tf/GraphKeys", "k": ["ACTIVATIONS", "ASSET_FILEPATHS", "BIASES", "CONCATENATED_VARIABLES", "COND_CONTEXT", "EVAL_STEP", "GLOBAL_STEP", "GLOBAL_VARIABLES", "INIT_OP", "LOCAL_INIT_OP", "LOCAL_RESOURCES", "LOCAL_VARIABLES", "LOSSES", "MODEL_VARIABLES", "MOVING_AVERAGE_VARIABLES", "QUEUE_RUNNERS", "READY_FOR_LOCAL_INIT_OP", "READY_OP", "REGULARIZATION_LOSSES", "RESOURCES", "SAVEABLE_OBJECTS", "SAVERS", "SUMMARIES", "SUMMARY_OP", "TABLE_INITIALIZERS", "TRAINABLE_RESOURCE_VARIABLES", "TRAINABLE_VARIABLES", "TRAIN_OP", "UPDATE_OPS", "VARIABLES", "WEIGHTS", "WHILE_CONTEXT"], "r": "r1.3", "t": "tf.GraphKeys"}, {"p": "/versions/r1.3/api_docs/python/tf/GraphOptions", "k": [], "r": "r1.3", "t": "tf.GraphOptions"}, {"p": "/versions/r1.3/api_docs/python/tf/HistogramProto", "k": [], "r": "r1.3", "t": "tf.HistogramProto"}, {"p": "/versions/r1.3/api_docs/python/tf/IdentityReader", "k": ["reader_ref", "supports_serialize", "__init__", "num_records_produced", "num_work_units_completed", "read", "read_up_to", "reset", "restore_state", "serialize_state"], "r": "r1.3", "t": "tf.IdentityReader"}, {"p": "/versions/r1.3/api_docs/python/tf/IndexedSlices", "k": ["dense_shape", "device", "dtype", "graph", "indices", "name", "op", "values", "__init__", "__neg__"], "r": "r1.3", "t": "tf.IndexedSlices"}, {"p": "/versions/r1.3/api_docs/python/tf/InteractiveSession", "k": ["graph", "graph_def", "sess_str", "__init__", "as_default", "close", "list_devices", "make_callable", "partial_run", "partial_run_setup", "run"], "r": "r1.3", "t": "tf.InteractiveSession"}, {"p": "/versions/r1.3/api_docs/python/tf/LMDBReader", "k": ["reader_ref", "supports_serialize", "__init__", "num_records_produced", "num_work_units_completed", "read", "read_up_to", "reset", "restore_state", "serialize_state"], "r": "r1.3", "t": "tf.LMDBReader"}, {"p": "/versions/r1.3/api_docs/python/tf/LogMessage", "k": ["DEBUGGING", "ERROR", "FATAL", "INFO", "Level", "UNKNOWN", "WARN"], "r": "r1.3", "t": "tf.LogMessage"}, {"p": "/versions/r1.3/api_docs/python/tf/MetaGraphDef", "k": ["CollectionDefEntry", "MetaInfoDef", "SignatureDefEntry"], "r": "r1.3", "t": "tf.MetaGraphDef"}, {"p": "/versions/r1.3/api_docs/python/tf/MetaGraphDef/CollectionDefEntry", "k": [], "r": "r1.3", "t": "tf.MetaGraphDef.CollectionDefEntry"}, {"p": "/versions/r1.3/api_docs/python/tf/MetaGraphDef/MetaInfoDef", "k": [], "r": "r1.3", "t": "tf.MetaGraphDef.MetaInfoDef"}, {"p": "/versions/r1.3/api_docs/python/tf/MetaGraphDef/SignatureDefEntry", "k": [], "r": "r1.3", "t": "tf.MetaGraphDef.SignatureDefEntry"}, {"p": "/versions/r1.3/api_docs/python/tf/NameAttrList", "k": ["AttrEntry"], "r": "r1.3", "t": "tf.NameAttrList"}, {"p": "/versions/r1.3/api_docs/python/tf/NameAttrList/AttrEntry", "k": [], "r": "r1.3", "t": "tf.NameAttrList.AttrEntry"}, {"p": "/versions/r1.3/api_docs/python/tf/NoGradient", "k": [], "r": "r1.3", "t": "tf.NoGradient"}, {"p": "/versions/r1.3/api_docs/python/tf/NodeDef", "k": ["AttrEntry"], "r": "r1.3", "t": "tf.NodeDef"}, {"p": "/versions/r1.3/api_docs/python/tf/NodeDef/AttrEntry", "k": [], "r": "r1.3", "t": "tf.NodeDef.AttrEntry"}, {"p": "/versions/r1.3/api_docs/python/tf/OpError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "r1.3", "t": "tf.OpError"}, {"p": "/versions/r1.3/api_docs/python/tf/Operation", "k": ["control_inputs", "device", "graph", "inputs", "name", "node_def", "op_def", "outputs", "traceback", "traceback_with_start_lines", "type", "__init__", "colocation_groups", "get_attr", "run", "values"], "r": "r1.3", "t": "tf.Operation"}, {"p": "/versions/r1.3/api_docs/python/tf/OptimizerOptions", "k": ["DEFAULT", "GlobalJitLevel", "L0", "L1", "Level", "OFF", "ON_1", "ON_2"], "r": "r1.3", "t": "tf.OptimizerOptions"}, {"p": "/versions/r1.3/api_docs/python/tf/PaddingFIFOQueue", "k": ["dtypes", "name", "names", "queue_ref", "shapes", "__init__", "close", "dequeue", "dequeue_many", "dequeue_up_to", "enqueue", "enqueue_many", "from_list", "is_closed", "size"], "r": "r1.3", "t": "tf.PaddingFIFOQueue"}, {"p": "/versions/r1.3/api_docs/python/tf/Print", "k": [], "r": "r1.3", "t": "tf.Print"}, {"p": "/versions/r1.3/api_docs/python/tf/PriorityQueue", "k": ["dtypes", "name", "names", "queue_ref", "shapes", "__init__", "close", "dequeue", "dequeue_many", "dequeue_up_to", "enqueue", "enqueue_many", "from_list", "is_closed", "size"], "r": "r1.3", "t": "tf.PriorityQueue"}, {"p": "/versions/r1.3/api_docs/python/tf/QueueBase", "k": ["dtypes", "name", "names", "queue_ref", "shapes", "__init__", "close", "dequeue", "dequeue_many", "dequeue_up_to", "enqueue", "enqueue_many", "from_list", "is_closed", "size"], "r": "r1.3", "t": "tf.QueueBase"}, {"p": "/versions/r1.3/api_docs/python/tf/RandomShuffleQueue", "k": ["dtypes", "name", "names", "queue_ref", "shapes", "__init__", "close", "dequeue", "dequeue_many", "dequeue_up_to", "enqueue", "enqueue_many", "from_list", "is_closed", "size"], "r": "r1.3", "t": "tf.RandomShuffleQueue"}, {"p": "/versions/r1.3/api_docs/python/tf/ReaderBase", "k": ["reader_ref", "supports_serialize", "__init__", "num_records_produced", "num_work_units_completed", "read", "read_up_to", "reset", "restore_state", "serialize_state"], "r": "r1.3", "t": "tf.ReaderBase"}, {"p": "/versions/r1.3/api_docs/python/tf/RegisterGradient", "k": ["__call__", "__init__"], "r": "r1.3", "t": "tf.RegisterGradient"}, {"p": "/versions/r1.3/api_docs/python/tf/RunMetadata", "k": [], "r": "r1.3", "t": "tf.RunMetadata"}, {"p": "/versions/r1.3/api_docs/python/tf/RunOptions", "k": ["FULL_TRACE", "HARDWARE_TRACE", "NO_TRACE", "SOFTWARE_TRACE", "TraceLevel"], "r": "r1.3", "t": "tf.RunOptions"}, {"p": "/versions/r1.3/api_docs/python/tf/Session", "k": ["graph", "graph_def", "sess_str", "__enter__", "__exit__", "__init__", "as_default", "close", "list_devices", "make_callable", "partial_run", "partial_run_setup", "reset", "run"], "r": "r1.3", "t": "tf.Session"}, {"p": "/versions/r1.3/api_docs/python/tf/SessionLog", "k": ["CHECKPOINT", "START", "STATUS_UNSPECIFIED", "STOP", "SessionStatus"], "r": "r1.3", "t": "tf.SessionLog"}, {"p": "/versions/r1.3/api_docs/python/tf/SparseConditionalAccumulator", "k": ["accumulator_ref", "dtype", "name", "__init__", "apply_grad", "apply_indexed_slices_grad", "num_accumulated", "set_global_step", "take_grad", "take_indexed_slices_grad"], "r": "r1.3", "t": "tf.SparseConditionalAccumulator"}, {"p": "/versions/r1.3/api_docs/python/tf/SparseFeature", "k": ["already_sorted", "dtype", "index_key", "size", "value_key", "__new__"], "r": "r1.3", "t": "tf.SparseFeature"}, {"p": "/versions/r1.3/api_docs/python/tf/SparseTensor", "k": ["dense_shape", "dtype", "graph", "indices", "op", "values", "__div__", "__init__", "__mul__", "__truediv__", "eval", "from_value", "get_shape"], "r": "r1.3", "t": "tf.SparseTensor"}, {"p": "/versions/r1.3/api_docs/python/tf/SparseTensorValue", "k": ["dense_shape", "indices", "values", "__new__"], "r": "r1.3", "t": "tf.SparseTensorValue"}, {"p": "/versions/r1.3/api_docs/python/tf/Summary", "k": ["Audio", "Image", "Value"], "r": "r1.3", "t": "tf.Summary"}, {"p": "/versions/r1.3/api_docs/python/tf/Summary/Audio", "k": [], "r": "r1.3", "t": "tf.Summary.Audio"}, {"p": "/versions/r1.3/api_docs/python/tf/Summary/Image", "k": [], "r": "r1.3", "t": "tf.Summary.Image"}, {"p": "/versions/r1.3/api_docs/python/tf/Summary/Value", "k": [], "r": "r1.3", "t": "tf.Summary.Value"}, {"p": "/versions/r1.3/api_docs/python/tf/SummaryMetadata", "k": ["PluginData"], "r": "r1.3", "t": "tf.SummaryMetadata"}, {"p": "/versions/r1.3/api_docs/python/tf/SummaryMetadata/PluginData", "k": [], "r": "r1.3", "t": "tf.SummaryMetadata.PluginData"}, {"p": "/versions/r1.3/api_docs/python/tf/TFRecordReader", "k": ["reader_ref", "supports_serialize", "__init__", "num_records_produced", "num_work_units_completed", "read", "read_up_to", "reset", "restore_state", "serialize_state"], "r": "r1.3", "t": "tf.TFRecordReader"}, {"p": "/versions/r1.3/api_docs/python/tf/Tensor", "k": ["device", "dtype", "graph", "name", "op", "shape", "value_index", "__abs__", "__add__", "__and__", "__bool__", "__div__", "__eq__", "__floordiv__", "__ge__", "__getitem__", "__gt__", "__init__", "__invert__", "__iter__", "__le__", "__lt__", "__matmul__", "__mod__", "__mul__", "__neg__", "__nonzero__", "__or__", "__pow__", "__radd__", "__rand__", "__rdiv__", "__rfloordiv__", "__rmatmul__", "__rmod__", "__rmul__", "__ror__", "__rpow__", "__rsub__", "__rtruediv__", "__rxor__", "__sub__", "__truediv__", "__xor__", "consumers", "eval", "get_shape", "set_shape", "OVERLOADABLE_OPERATORS", "__array_priority__"], "r": "r1.3", "t": "tf.Tensor"}, {"p": "/versions/r1.3/api_docs/python/tf/TensorArray", "k": ["dtype", "flow", "handle", "__init__", "close", "concat", "gather", "grad", "identity", "read", "scatter", "size", "split", "stack", "unstack", "write"], "r": "r1.3", "t": "tf.TensorArray"}, {"p": "/versions/r1.3/api_docs/python/tf/TensorInfo", "k": ["CooSparse"], "r": "r1.3", "t": "tf.TensorInfo"}, {"p": "/versions/r1.3/api_docs/python/tf/TensorInfo/CooSparse", "k": [], "r": "r1.3", "t": "tf.TensorInfo.CooSparse"}, {"p": "/versions/r1.3/api_docs/python/tf/TensorShape", "k": ["dims", "ndims", "__bool__", "__eq__", "__getitem__", "__init__", "__iter__", "__len__", "__ne__", "__nonzero__", "as_list", "as_proto", "assert_has_rank", "assert_is_compatible_with", "assert_is_fully_defined", "assert_same_rank", "concatenate", "is_compatible_with", "is_fully_defined", "merge_with", "most_specific_compatible_shape", "num_elements", "with_rank", "with_rank_at_least", "with_rank_at_most"], "r": "r1.3", "t": "tf.TensorShape"}, {"p": "/versions/r1.3/api_docs/python/tf/TextLineReader", "k": ["reader_ref", "supports_serialize", "__init__", "num_records_produced", "num_work_units_completed", "read", "read_up_to", "reset", "restore_state", "serialize_state"], "r": "r1.3", "t": "tf.TextLineReader"}, {"p": "/versions/r1.3/api_docs/python/tf/VarLenFeature", "k": ["dtype", "__new__"], "r": "r1.3", "t": "tf.VarLenFeature"}, {"p": "/versions/r1.3/api_docs/python/tf/Variable", "k": ["SaveSliceInfo", "device", "dtype", "graph", "initial_value", "initializer", "name", "op", "shape", "__abs__", "__add__", "__and__", "__div__", "__floordiv__", "__ge__", "__getitem__", "__gt__", "__init__", "__invert__", "__iter__", "__le__", "__lt__", "__matmul__", "__mod__", "__mul__", "__neg__", "__or__", "__pow__", "__radd__", "__rand__", "__rdiv__", "__rfloordiv__", "__rmatmul__", "__rmod__", "__rmul__", "__ror__", "__rpow__", "__rsub__", "__rtruediv__", "__rxor__", "__sub__", "__truediv__", "__xor__", "assign", "assign_add", "assign_sub", "count_up_to", "eval", "from_proto", "get_shape", "initialized_value", "load", "read_value", "scatter_sub", "set_shape", "to_proto", "value", "__array_priority__"], "r": "r1.3", "t": "tf.Variable"}, {"p": "/versions/r1.3/api_docs/python/tf/Variable/SaveSliceInfo", "k": ["spec", "__init__", "to_proto"], "r": "r1.3", "t": "tf.Variable.SaveSliceInfo"}, {"p": "/versions/r1.3/api_docs/python/tf/VariableScope", "k": ["caching_device", "custom_getter", "dtype", "initializer", "name", "original_name_scope", "partitioner", "regularizer", "reuse", "use_resource", "__init__", "get_collection", "get_variable", "global_variables", "reuse_variables", "set_caching_device", "set_custom_getter", "set_dtype", "set_initializer", "set_partitioner", "set_regularizer", "set_use_resource", "trainable_variables"], "r": "r1.3", "t": "tf.VariableScope"}, {"p": "/versions/r1.3/api_docs/python/tf/WholeFileReader", "k": ["reader_ref", "supports_serialize", "__init__", "num_records_produced", "num_work_units_completed", "read", "read_up_to", "reset", "restore_state", "serialize_state"], "r": "r1.3", "t": "tf.WholeFileReader"}, {"p": "/versions/r1.3/api_docs/python/tf/abs", "k": [], "r": "r1.3", "t": "tf.abs"}, {"p": "/versions/r1.3/api_docs/python/tf/accumulate_n", "k": [], "r": "r1.3", "t": "tf.accumulate_n"}, {"p": "/versions/r1.3/api_docs/python/tf/acos", "k": [], "r": "r1.3", "t": "tf.acos"}, {"p": "/versions/r1.3/api_docs/python/tf/acosh", "k": [], "r": "r1.3", "t": "tf.acosh"}, {"p": "/versions/r1.3/api_docs/python/tf/add", "k": [], "r": "r1.3", "t": "tf.add"}, {"p": "/versions/r1.3/api_docs/python/tf/add_check_numerics_ops", "k": [], "r": "r1.3", "t": "tf.add_check_numerics_ops"}, {"p": "/versions/r1.3/api_docs/python/tf/add_n", "k": [], "r": "r1.3", "t": "tf.add_n"}, {"p": "/versions/r1.3/api_docs/python/tf/add_to_collection", "k": [], "r": "r1.3", "t": "tf.add_to_collection"}, {"p": "/versions/r1.3/api_docs/python/tf/all_variables", "k": [], "r": "r1.3", "t": "tf.all_variables"}, {"p": "/versions/r1.3/api_docs/python/tf/app", "k": [], "r": "r1.3", "t": "tf.app"}, {"p": "/versions/r1.3/api_docs/python/tf/app/run", "k": [], "r": "r1.3", "t": "tf.app.run"}, {"p": "/versions/r1.3/api_docs/python/tf/arg_max", "k": [], "r": "r1.3", "t": "tf.arg_max"}, {"p": "/versions/r1.3/api_docs/python/tf/arg_min", "k": [], "r": "r1.3", "t": "tf.arg_min"}, {"p": "/versions/r1.3/api_docs/python/tf/argmax", "k": [], "r": "r1.3", "t": "tf.argmax"}, {"p": "/versions/r1.3/api_docs/python/tf/argmin", "k": [], "r": "r1.3", "t": "tf.argmin"}, {"p": "/versions/r1.3/api_docs/python/tf/as_dtype", "k": [], "r": "r1.3", "t": "tf.as_dtype"}, {"p": "/versions/r1.3/api_docs/python/tf/as_string", "k": [], "r": "r1.3", "t": "tf.as_string"}, {"p": "/versions/r1.3/api_docs/python/tf/asin", "k": [], "r": "r1.3", "t": "tf.asin"}, {"p": "/versions/r1.3/api_docs/python/tf/asinh", "k": [], "r": "r1.3", "t": "tf.asinh"}, {"p": "/versions/r1.3/api_docs/python/tf/assert_equal", "k": [], "r": "r1.3", "t": "tf.assert_equal"}, {"p": "/versions/r1.3/api_docs/python/tf/assert_greater", "k": [], "r": "r1.3", "t": "tf.assert_greater"}, {"p": "/versions/r1.3/api_docs/python/tf/assert_greater_equal", "k": [], "r": "r1.3", "t": "tf.assert_greater_equal"}, {"p": "/versions/r1.3/api_docs/python/tf/assert_integer", "k": [], "r": "r1.3", "t": "tf.assert_integer"}, {"p": "/versions/r1.3/api_docs/python/tf/assert_less", "k": [], "r": "r1.3", "t": "tf.assert_less"}, {"p": "/versions/r1.3/api_docs/python/tf/assert_less_equal", "k": [], "r": "r1.3", "t": "tf.assert_less_equal"}, {"p": "/versions/r1.3/api_docs/python/tf/assert_negative", "k": [], "r": "r1.3", "t": "tf.assert_negative"}, {"p": "/versions/r1.3/api_docs/python/tf/assert_non_negative", "k": [], "r": "r1.3", "t": "tf.assert_non_negative"}, {"p": "/versions/r1.3/api_docs/python/tf/assert_non_positive", "k": [], "r": "r1.3", "t": "tf.assert_non_positive"}, {"p": "/versions/r1.3/api_docs/python/tf/assert_none_equal", "k": [], "r": "r1.3", "t": "tf.assert_none_equal"}, {"p": "/versions/r1.3/api_docs/python/tf/assert_positive", "k": [], "r": "r1.3", "t": "tf.assert_positive"}, {"p": "/versions/r1.3/api_docs/python/tf/assert_proper_iterable", "k": [], "r": "r1.3", "t": "tf.assert_proper_iterable"}, {"p": "/versions/r1.3/api_docs/python/tf/assert_rank", "k": [], "r": "r1.3", "t": "tf.assert_rank"}, {"p": "/versions/r1.3/api_docs/python/tf/assert_rank_at_least", "k": [], "r": "r1.3", "t": "tf.assert_rank_at_least"}, {"p": "/versions/r1.3/api_docs/python/tf/assert_same_float_dtype", "k": [], "r": "r1.3", "t": "tf.assert_same_float_dtype"}, {"p": "/versions/r1.3/api_docs/python/tf/assert_scalar", "k": [], "r": "r1.3", "t": "tf.assert_scalar"}, {"p": "/versions/r1.3/api_docs/python/tf/assert_type", "k": [], "r": "r1.3", "t": "tf.assert_type"}, {"p": "/versions/r1.3/api_docs/python/tf/assert_variables_initialized", "k": [], "r": "r1.3", "t": "tf.assert_variables_initialized"}, {"p": "/versions/r1.3/api_docs/python/tf/assign", "k": [], "r": "r1.3", "t": "tf.assign"}, {"p": "/versions/r1.3/api_docs/python/tf/assign_add", "k": [], "r": "r1.3", "t": "tf.assign_add"}, {"p": "/versions/r1.3/api_docs/python/tf/assign_sub", "k": [], "r": "r1.3", "t": "tf.assign_sub"}, {"p": "/versions/r1.3/api_docs/python/tf/atan", "k": [], "r": "r1.3", "t": "tf.atan"}, {"p": "/versions/r1.3/api_docs/python/tf/atan2", "k": [], "r": "r1.3", "t": "tf.atan2"}, {"p": "/versions/r1.3/api_docs/python/tf/atanh", "k": [], "r": "r1.3", "t": "tf.atanh"}, {"p": "/versions/r1.3/api_docs/python/tf/batch_to_space", "k": [], "r": "r1.3", "t": "tf.batch_to_space"}, {"p": "/versions/r1.3/api_docs/python/tf/batch_to_space_nd", "k": [], "r": "r1.3", "t": "tf.batch_to_space_nd"}, {"p": "/versions/r1.3/api_docs/python/tf/betainc", "k": [], "r": "r1.3", "t": "tf.betainc"}, {"p": "/versions/r1.3/api_docs/python/tf/bincount", "k": [], "r": "r1.3", "t": "tf.bincount"}, {"p": "/versions/r1.3/api_docs/python/tf/bitcast", "k": [], "r": "r1.3", "t": "tf.bitcast"}, {"p": "/versions/r1.3/api_docs/python/tf/bitwise", "k": [], "r": "r1.3", "t": "tf.bitwise"}, {"p": "/versions/r1.3/api_docs/python/tf/bitwise/bitwise_and", "k": [], "r": "r1.3", "t": "tf.bitwise.bitwise_and"}, {"p": "/versions/r1.3/api_docs/python/tf/bitwise/bitwise_or", "k": [], "r": "r1.3", "t": "tf.bitwise.bitwise_or"}, {"p": "/versions/r1.3/api_docs/python/tf/bitwise/bitwise_xor", "k": [], "r": "r1.3", "t": "tf.bitwise.bitwise_xor"}, {"p": "/versions/r1.3/api_docs/python/tf/bitwise/invert", "k": [], "r": "r1.3", "t": "tf.bitwise.invert"}, {"p": "/versions/r1.3/api_docs/python/tf/boolean_mask", "k": [], "r": "r1.3", "t": "tf.boolean_mask"}, {"p": "/versions/r1.3/api_docs/python/tf/broadcast_dynamic_shape", "k": [], "r": "r1.3", "t": "tf.broadcast_dynamic_shape"}, {"p": "/versions/r1.3/api_docs/python/tf/broadcast_static_shape", "k": [], "r": "r1.3", "t": "tf.broadcast_static_shape"}, {"p": "/versions/r1.3/api_docs/python/tf/case", "k": [], "r": "r1.3", "t": "tf.case"}, {"p": "/versions/r1.3/api_docs/python/tf/cast", "k": [], "r": "r1.3", "t": "tf.cast"}, {"p": "/versions/r1.3/api_docs/python/tf/ceil", "k": [], "r": "r1.3", "t": "tf.ceil"}, {"p": "/versions/r1.3/api_docs/python/tf/check_numerics", "k": [], "r": "r1.3", "t": "tf.check_numerics"}, {"p": "/versions/r1.3/api_docs/python/tf/cholesky", "k": [], "r": "r1.3", "t": "tf.cholesky"}, {"p": "/versions/r1.3/api_docs/python/tf/cholesky_solve", "k": [], "r": "r1.3", "t": "tf.cholesky_solve"}, {"p": "/versions/r1.3/api_docs/python/tf/clip_by_average_norm", "k": [], "r": "r1.3", "t": "tf.clip_by_average_norm"}, {"p": "/versions/r1.3/api_docs/python/tf/clip_by_global_norm", "k": [], "r": "r1.3", "t": "tf.clip_by_global_norm"}, {"p": "/versions/r1.3/api_docs/python/tf/clip_by_norm", "k": [], "r": "r1.3", "t": "tf.clip_by_norm"}, {"p": "/versions/r1.3/api_docs/python/tf/clip_by_value", "k": [], "r": "r1.3", "t": "tf.clip_by_value"}, {"p": "/versions/r1.3/api_docs/python/tf/colocate_with", "k": [], "r": "r1.3", "t": "tf.colocate_with"}, {"p": "/versions/r1.3/api_docs/python/tf/compat", "k": ["bytes_or_text_types", "complex_types", "integral_types", "real_types"], "r": "r1.3", "t": "tf.compat"}, {"p": "/versions/r1.3/api_docs/python/tf/compat/as_bytes", "k": [], "r": "r1.3", "t": "tf.compat.as_bytes"}, {"p": "/versions/r1.3/api_docs/python/tf/compat/as_str_any", "k": [], "r": "r1.3", "t": "tf.compat.as_str_any"}, {"p": "/versions/r1.3/api_docs/python/tf/compat/as_text", "k": [], "r": "r1.3", "t": "tf.compat.as_text"}, {"p": "/versions/r1.3/api_docs/python/tf/complex", "k": [], "r": "r1.3", "t": "tf.complex"}, {"p": "/versions/r1.3/api_docs/python/tf/concat", "k": [], "r": "r1.3", "t": "tf.concat"}, {"p": "/versions/r1.3/api_docs/python/tf/cond", "k": [], "r": "r1.3", "t": "tf.cond"}, {"p": "/versions/r1.3/api_docs/python/tf/confusion_matrix", "k": [], "r": "r1.3", "t": "tf.confusion_matrix"}, {"p": "/versions/r1.3/api_docs/python/tf/conj", "k": [], "r": "r1.3", "t": "tf.conj"}, {"p": "/versions/r1.3/api_docs/python/tf/constant", "k": [], "r": "r1.3", "t": "tf.constant"}, {"p": "/versions/r1.3/api_docs/python/tf/constant_initializer", "k": ["__call__", "__init__", "from_config", "get_config"], "r": "r1.3", "t": "tf.constant_initializer"}, {"p": "/versions/r1.3/api_docs/python/tf/container", "k": [], "r": "r1.3", "t": "tf.container"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib", "k": [], "r": "r1.3", "t": "tf.contrib"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/bayesflow", "k": [], "r": "r1.3", "t": "tf.contrib.bayesflow"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/bayesflow/csiszar_divergence", "k": [], "r": "r1.3", "t": "tf.contrib.bayesflow.csiszar_divergence"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/bayesflow/csiszar_divergence/amari_alpha", "k": [], "r": "r1.3", "t": "tf.contrib.bayesflow.csiszar_divergence.amari_alpha"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/bayesflow/csiszar_divergence/arithmetic_geometric", "k": [], "r": "r1.3", "t": "tf.contrib.bayesflow.csiszar_divergence.arithmetic_geometric"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/bayesflow/csiszar_divergence/chi_square", "k": [], "r": "r1.3", "t": "tf.contrib.bayesflow.csiszar_divergence.chi_square"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/bayesflow/csiszar_divergence/dual_csiszar_function", "k": [], "r": "r1.3", "t": "tf.contrib.bayesflow.csiszar_divergence.dual_csiszar_function"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/bayesflow/csiszar_divergence/jeffreys", "k": [], "r": "r1.3", "t": "tf.contrib.bayesflow.csiszar_divergence.jeffreys"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/bayesflow/csiszar_divergence/jensen_shannon", "k": [], "r": "r1.3", "t": "tf.contrib.bayesflow.csiszar_divergence.jensen_shannon"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/bayesflow/csiszar_divergence/kl_forward", "k": [], "r": "r1.3", "t": "tf.contrib.bayesflow.csiszar_divergence.kl_forward"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/bayesflow/csiszar_divergence/kl_reverse", "k": [], "r": "r1.3", "t": "tf.contrib.bayesflow.csiszar_divergence.kl_reverse"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/bayesflow/csiszar_divergence/log1p_abs", "k": [], "r": "r1.3", "t": "tf.contrib.bayesflow.csiszar_divergence.log1p_abs"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/bayesflow/csiszar_divergence/modified_gan", "k": [], "r": "r1.3", "t": "tf.contrib.bayesflow.csiszar_divergence.modified_gan"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/bayesflow/csiszar_divergence/monte_carlo_csiszar_f_divergence", "k": [], "r": "r1.3", "t": "tf.contrib.bayesflow.csiszar_divergence.monte_carlo_csiszar_f_divergence"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/bayesflow/csiszar_divergence/pearson", "k": [], "r": "r1.3", "t": "tf.contrib.bayesflow.csiszar_divergence.pearson"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/bayesflow/csiszar_divergence/squared_hellinger", "k": [], "r": "r1.3", "t": "tf.contrib.bayesflow.csiszar_divergence.squared_hellinger"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/bayesflow/csiszar_divergence/symmetrized_csiszar_function", "k": [], "r": "r1.3", "t": "tf.contrib.bayesflow.csiszar_divergence.symmetrized_csiszar_function"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/bayesflow/csiszar_divergence/total_variation", "k": [], "r": "r1.3", "t": "tf.contrib.bayesflow.csiszar_divergence.total_variation"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/bayesflow/csiszar_divergence/triangular", "k": [], "r": "r1.3", "t": "tf.contrib.bayesflow.csiszar_divergence.triangular"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/bayesflow/entropy", "k": [], "r": "r1.3", "t": "tf.contrib.bayesflow.entropy"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/bayesflow/entropy/elbo_ratio", "k": [], "r": "r1.3", "t": "tf.contrib.bayesflow.entropy.elbo_ratio"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/bayesflow/entropy/entropy_shannon", "k": [], "r": "r1.3", "t": "tf.contrib.bayesflow.entropy.entropy_shannon"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/bayesflow/entropy/renyi_alpha", "k": [], "r": "r1.3", "t": "tf.contrib.bayesflow.entropy.renyi_alpha"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/bayesflow/entropy/renyi_ratio", "k": [], "r": "r1.3", "t": "tf.contrib.bayesflow.entropy.renyi_ratio"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/bayesflow/monte_carlo", "k": [], "r": "r1.3", "t": "tf.contrib.bayesflow.monte_carlo"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/bayesflow/monte_carlo/expectation", "k": [], "r": "r1.3", "t": "tf.contrib.bayesflow.monte_carlo.expectation"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/bayesflow/monte_carlo/expectation_importance_sampler", "k": [], "r": "r1.3", "t": "tf.contrib.bayesflow.monte_carlo.expectation_importance_sampler"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/bayesflow/monte_carlo/expectation_importance_sampler_logspace", "k": [], "r": "r1.3", "t": "tf.contrib.bayesflow.monte_carlo.expectation_importance_sampler_logspace"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/bayesflow/monte_carlo/expectation_v2", "k": [], "r": "r1.3", "t": "tf.contrib.bayesflow.monte_carlo.expectation_v2"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/bayesflow/stochastic_gradient_estimators", "k": [], "r": "r1.3", "t": "tf.contrib.bayesflow.stochastic_gradient_estimators"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/bayesflow/stochastic_graph", "k": [], "r": "r1.3", "t": "tf.contrib.bayesflow.stochastic_graph"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/bayesflow/stochastic_graph/surrogate_loss", "k": [], "r": "r1.3", "t": "tf.contrib.bayesflow.stochastic_graph.surrogate_loss"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/bayesflow/stochastic_tensor", "k": [], "r": "r1.3", "t": "tf.contrib.bayesflow.stochastic_tensor"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/bayesflow/stochastic_tensor/BaseStochasticTensor", "k": ["dtype", "graph", "name", "__init__", "loss", "value"], "r": "r1.3", "t": "tf.contrib.bayesflow.stochastic_tensor.BaseStochasticTensor"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/bayesflow/stochastic_tensor/MeanValue", "k": ["stop_gradient", "__init__", "declare_inputs", "popped_above", "pushed_above"], "r": "r1.3", "t": "tf.contrib.bayesflow.stochastic_tensor.MeanValue"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/bayesflow/stochastic_tensor/ObservedStochasticTensor", "k": ["distribution", "dtype", "graph", "name", "value_type", "__init__", "entropy", "loss", "mean", "value"], "r": "r1.3", "t": "tf.contrib.bayesflow.stochastic_tensor.ObservedStochasticTensor"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/bayesflow/stochastic_tensor/SampleValue", "k": ["shape", "stop_gradient", "__init__", "declare_inputs", "popped_above", "pushed_above"], "r": "r1.3", "t": "tf.contrib.bayesflow.stochastic_tensor.SampleValue"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/bayesflow/stochastic_tensor/StochasticTensor", "k": ["distribution", "dtype", "graph", "name", "value_type", "__init__", "entropy", "loss", "mean", "value"], "r": "r1.3", "t": "tf.contrib.bayesflow.stochastic_tensor.StochasticTensor"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/bayesflow/stochastic_tensor/get_current_value_type", "k": [], "r": "r1.3", "t": "tf.contrib.bayesflow.stochastic_tensor.get_current_value_type"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/bayesflow/stochastic_tensor/value_type", "k": [], "r": "r1.3", "t": "tf.contrib.bayesflow.stochastic_tensor.value_type"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/bayesflow/stochastic_variables", "k": [], "r": "r1.3", "t": "tf.contrib.bayesflow.stochastic_variables"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/bayesflow/variational_inference", "k": [], "r": "r1.3", "t": "tf.contrib.bayesflow.variational_inference"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/bayesflow/variational_inference/ELBOForms", "k": ["check_form", "analytic_entropy", "analytic_kl", "default", "sample"], "r": "r1.3", "t": "tf.contrib.bayesflow.variational_inference.ELBOForms"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/bayesflow/variational_inference/elbo", "k": [], "r": "r1.3", "t": "tf.contrib.bayesflow.variational_inference.elbo"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/bayesflow/variational_inference/elbo_with_log_joint", "k": [], "r": "r1.3", "t": "tf.contrib.bayesflow.variational_inference.elbo_with_log_joint"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/bayesflow/variational_inference/register_prior", "k": [], "r": "r1.3", "t": "tf.contrib.bayesflow.variational_inference.register_prior"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/cloud", "k": [], "r": "r1.3", "t": "tf.contrib.cloud"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/cloud/BigQueryReader", "k": ["reader_ref", "supports_serialize", "__init__", "num_records_produced", "num_work_units_completed", "partitions", "read", "read_up_to", "reset", "restore_state", "serialize_state"], "r": "r1.3", "t": "tf.contrib.cloud.BigQueryReader"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/compiler", "k": [], "r": "r1.3", "t": "tf.contrib.compiler"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/copy_graph", "k": [], "r": "r1.3", "t": "tf.contrib.copy_graph"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/copy_graph/copy_op_to_graph", "k": [], "r": "r1.3", "t": "tf.contrib.copy_graph.copy_op_to_graph"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/copy_graph/copy_variable_to_graph", "k": [], "r": "r1.3", "t": "tf.contrib.copy_graph.copy_variable_to_graph"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/copy_graph/get_copied_op", "k": [], "r": "r1.3", "t": "tf.contrib.copy_graph.get_copied_op"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/crf", "k": [], "r": "r1.3", "t": "tf.contrib.crf"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/crf/CrfForwardRnnCell", "k": ["graph", "losses", "non_trainable_variables", "non_trainable_weights", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "get_losses_for", "get_updates_for", "zero_state"], "r": "r1.3", "t": "tf.contrib.crf.CrfForwardRnnCell"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/crf/crf_binary_score", "k": [], "r": "r1.3", "t": "tf.contrib.crf.crf_binary_score"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/crf/crf_log_likelihood", "k": [], "r": "r1.3", "t": "tf.contrib.crf.crf_log_likelihood"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/crf/crf_log_norm", "k": [], "r": "r1.3", "t": "tf.contrib.crf.crf_log_norm"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/crf/crf_sequence_score", "k": [], "r": "r1.3", "t": "tf.contrib.crf.crf_sequence_score"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/crf/crf_unary_score", "k": [], "r": "r1.3", "t": "tf.contrib.crf.crf_unary_score"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/crf/viterbi_decode", "k": [], "r": "r1.3", "t": "tf.contrib.crf.viterbi_decode"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/cudnn_rnn", "k": [], "r": "r1.3", "t": "tf.contrib.cudnn_rnn"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/cudnn_rnn/CudnnGRU", "k": ["direction", "input_size", "num_layers", "num_units", "rnn_mode", "__call__", "__init__", "canonical_to_params", "params_size", "params_to_canonical"], "r": "r1.3", "t": "tf.contrib.cudnn_rnn.CudnnGRU"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/cudnn_rnn/CudnnLSTM", "k": ["direction", "input_size", "num_layers", "num_units", "rnn_mode", "__call__", "__init__", "canonical_to_params", "params_size", "params_to_canonical"], "r": "r1.3", "t": "tf.contrib.cudnn_rnn.CudnnLSTM"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/cudnn_rnn/CudnnRNNRelu", "k": ["direction", "input_size", "num_layers", "num_units", "rnn_mode", "__call__", "__init__", "canonical_to_params", "params_size", "params_to_canonical"], "r": "r1.3", "t": "tf.contrib.cudnn_rnn.CudnnRNNRelu"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/cudnn_rnn/CudnnRNNTanh", "k": ["direction", "input_size", "num_layers", "num_units", "rnn_mode", "__call__", "__init__", "canonical_to_params", "params_size", "params_to_canonical"], "r": "r1.3", "t": "tf.contrib.cudnn_rnn.CudnnRNNTanh"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/cudnn_rnn/RNNParamsSaveable", "k": ["__init__", "restore"], "r": "r1.3", "t": "tf.contrib.cudnn_rnn.RNNParamsSaveable"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/data", "k": [], "r": "r1.3", "t": "tf.contrib.data"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/data/Dataset", "k": ["output_shapes", "output_types", "__init__", "batch", "cache", "concatenate", "dense_to_sparse_batch", "enumerate", "filter", "flat_map", "from_sparse_tensor_slices", "from_tensor_slices", "from_tensors", "group_by_window", "ignore_errors", "interleave", "list_files", "make_dataset_resource", "make_initializable_iterator", "make_one_shot_iterator", "map", "padded_batch", "range", "read_batch_features", "repeat", "shuffle", "skip", "take", "unbatch", "zip"], "r": "r1.3", "t": "tf.contrib.data.Dataset"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/data/FixedLengthRecordDataset", "k": ["output_shapes", "output_types", "__init__", "batch", "cache", "concatenate", "dense_to_sparse_batch", "enumerate", "filter", "flat_map", "from_sparse_tensor_slices", "from_tensor_slices", "from_tensors", "group_by_window", "ignore_errors", "interleave", "list_files", "make_dataset_resource", "make_initializable_iterator", "make_one_shot_iterator", "map", "padded_batch", "range", "read_batch_features", "repeat", "shuffle", "skip", "take", "unbatch", "zip"], "r": "r1.3", "t": "tf.contrib.data.FixedLengthRecordDataset"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/data/Iterator", "k": ["initializer", "output_shapes", "output_types", "__init__", "dispose_op", "from_dataset", "from_string_handle", "from_structure", "get_next", "make_initializer", "string_handle"], "r": "r1.3", "t": "tf.contrib.data.Iterator"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/data/TFRecordDataset", "k": ["output_shapes", "output_types", "__init__", "batch", "cache", "concatenate", "dense_to_sparse_batch", "enumerate", "filter", "flat_map", "from_sparse_tensor_slices", "from_tensor_slices", "from_tensors", "group_by_window", "ignore_errors", "interleave", "list_files", "make_dataset_resource", "make_initializable_iterator", "make_one_shot_iterator", "map", "padded_batch", "range", "read_batch_features", "repeat", "shuffle", "skip", "take", "unbatch", "zip"], "r": "r1.3", "t": "tf.contrib.data.TFRecordDataset"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/data/TextLineDataset", "k": ["output_shapes", "output_types", "__init__", "batch", "cache", "concatenate", "dense_to_sparse_batch", "enumerate", "filter", "flat_map", "from_sparse_tensor_slices", "from_tensor_slices", "from_tensors", "group_by_window", "ignore_errors", "interleave", "list_files", "make_dataset_resource", "make_initializable_iterator", "make_one_shot_iterator", "map", "padded_batch", "range", "read_batch_features", "repeat", "shuffle", "skip", "take", "unbatch", "zip"], "r": "r1.3", "t": "tf.contrib.data.TextLineDataset"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/data/read_batch_features", "k": [], "r": "r1.3", "t": "tf.contrib.data.read_batch_features"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/data/rejection_resample", "k": [], "r": "r1.3", "t": "tf.contrib.data.rejection_resample"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/decision_trees", "k": [], "r": "r1.3", "t": "tf.contrib.decision_trees"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/deprecated", "k": [], "r": "r1.3", "t": "tf.contrib.deprecated"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/deprecated/audio_summary", "k": [], "r": "r1.3", "t": "tf.contrib.deprecated.audio_summary"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/deprecated/histogram_summary", "k": [], "r": "r1.3", "t": "tf.contrib.deprecated.histogram_summary"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/deprecated/image_summary", "k": [], "r": "r1.3", "t": "tf.contrib.deprecated.image_summary"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/deprecated/merge_all_summaries", "k": [], "r": "r1.3", "t": "tf.contrib.deprecated.merge_all_summaries"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/deprecated/merge_summary", "k": [], "r": "r1.3", "t": "tf.contrib.deprecated.merge_summary"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/deprecated/scalar_summary", "k": [], "r": "r1.3", "t": "tf.contrib.deprecated.scalar_summary"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/distributions", "k": ["FULLY_REPARAMETERIZED", "NOT_REPARAMETERIZED"], "r": "r1.3", "t": "tf.contrib.distributions"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/distributions/BernoulliWithSigmoidProbs", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "logits", "name", "parameters", "probs", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.3", "t": "tf.contrib.distributions.BernoulliWithSigmoidProbs"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/distributions/BetaWithSoftplusConcentration", "k": ["allow_nan_stats", "batch_shape", "concentration0", "concentration1", "dtype", "event_shape", "name", "parameters", "reparameterization_type", "total_concentration", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.3", "t": "tf.contrib.distributions.BetaWithSoftplusConcentration"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/distributions/Binomial", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "logits", "name", "parameters", "probs", "reparameterization_type", "total_count", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.3", "t": "tf.contrib.distributions.Binomial"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/distributions/Chi2", "k": ["allow_nan_stats", "batch_shape", "concentration", "df", "dtype", "event_shape", "name", "parameters", "rate", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.3", "t": "tf.contrib.distributions.Chi2"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/distributions/Chi2WithAbsDf", "k": ["allow_nan_stats", "batch_shape", "concentration", "df", "dtype", "event_shape", "name", "parameters", "rate", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.3", "t": "tf.contrib.distributions.Chi2WithAbsDf"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/distributions/ConditionalDistribution", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "name", "parameters", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.3", "t": "tf.contrib.distributions.ConditionalDistribution"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/distributions/ConditionalTransformedDistribution", "k": ["allow_nan_stats", "batch_shape", "bijector", "distribution", "dtype", "event_shape", "name", "parameters", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.3", "t": "tf.contrib.distributions.ConditionalTransformedDistribution"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/distributions/Deterministic", "k": ["allow_nan_stats", "atol", "batch_shape", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "rtol", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.3", "t": "tf.contrib.distributions.Deterministic"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/distributions/ExpRelaxedOneHotCategorical", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "event_size", "logits", "name", "parameters", "probs", "reparameterization_type", "temperature", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.3", "t": "tf.contrib.distributions.ExpRelaxedOneHotCategorical"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/distributions/ExponentialWithSoftplusRate", "k": ["allow_nan_stats", "batch_shape", "concentration", "dtype", "event_shape", "name", "parameters", "rate", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.3", "t": "tf.contrib.distributions.ExponentialWithSoftplusRate"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/distributions/GammaWithSoftplusConcentrationRate", "k": ["allow_nan_stats", "batch_shape", "concentration", "dtype", "event_shape", "name", "parameters", "rate", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.3", "t": "tf.contrib.distributions.GammaWithSoftplusConcentrationRate"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/distributions/Geometric", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "logits", "name", "parameters", "probs", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.3", "t": "tf.contrib.distributions.Geometric"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/distributions/InverseGamma", "k": ["allow_nan_stats", "batch_shape", "concentration", "dtype", "event_shape", "name", "parameters", "rate", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.3", "t": "tf.contrib.distributions.InverseGamma"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/distributions/InverseGammaWithSoftplusConcentrationRate", "k": ["allow_nan_stats", "batch_shape", "concentration", "dtype", "event_shape", "name", "parameters", "rate", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.3", "t": "tf.contrib.distributions.InverseGammaWithSoftplusConcentrationRate"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/distributions/LaplaceWithSoftplusScale", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.3", "t": "tf.contrib.distributions.LaplaceWithSoftplusScale"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/distributions/Logistic", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.3", "t": "tf.contrib.distributions.Logistic"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/distributions/Mixture", "k": ["allow_nan_stats", "batch_shape", "cat", "components", "dtype", "event_shape", "name", "num_components", "parameters", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "entropy_lower_bound", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.3", "t": "tf.contrib.distributions.Mixture"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/distributions/MultivariateNormalDiag", "k": ["allow_nan_stats", "batch_shape", "bijector", "distribution", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.3", "t": "tf.contrib.distributions.MultivariateNormalDiag"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/distributions/MultivariateNormalDiagPlusLowRank", "k": ["allow_nan_stats", "batch_shape", "bijector", "distribution", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.3", "t": "tf.contrib.distributions.MultivariateNormalDiagPlusLowRank"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/distributions/MultivariateNormalDiagWithSoftplusScale", "k": ["allow_nan_stats", "batch_shape", "bijector", "distribution", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.3", "t": "tf.contrib.distributions.MultivariateNormalDiagWithSoftplusScale"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/distributions/MultivariateNormalFullCovariance", "k": ["allow_nan_stats", "batch_shape", "bijector", "distribution", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.3", "t": "tf.contrib.distributions.MultivariateNormalFullCovariance"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/distributions/MultivariateNormalTriL", "k": ["allow_nan_stats", "batch_shape", "bijector", "distribution", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.3", "t": "tf.contrib.distributions.MultivariateNormalTriL"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/distributions/NegativeBinomial", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "logits", "name", "parameters", "probs", "reparameterization_type", "total_count", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.3", "t": "tf.contrib.distributions.NegativeBinomial"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/distributions/NormalWithSoftplusScale", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.3", "t": "tf.contrib.distributions.NormalWithSoftplusScale"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/distributions/OneHotCategorical", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "event_size", "logits", "name", "parameters", "probs", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.3", "t": "tf.contrib.distributions.OneHotCategorical"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/distributions/Poisson", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "name", "parameters", "rate", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.3", "t": "tf.contrib.distributions.Poisson"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/distributions/QuantizedDistribution", "k": ["allow_nan_stats", "batch_shape", "distribution", "dtype", "event_shape", "name", "parameters", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.3", "t": "tf.contrib.distributions.QuantizedDistribution"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/distributions/RelaxedBernoulli", "k": ["allow_nan_stats", "batch_shape", "bijector", "distribution", "dtype", "event_shape", "logits", "name", "parameters", "probs", "reparameterization_type", "temperature", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.3", "t": "tf.contrib.distributions.RelaxedBernoulli"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/distributions/RelaxedOneHotCategorical", "k": ["allow_nan_stats", "batch_shape", "bijector", "distribution", "dtype", "event_shape", "name", "parameters", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.3", "t": "tf.contrib.distributions.RelaxedOneHotCategorical"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/distributions/StudentTWithAbsDfSoftplusScale", "k": ["allow_nan_stats", "batch_shape", "df", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.3", "t": "tf.contrib.distributions.StudentTWithAbsDfSoftplusScale"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/distributions/TransformedDistribution", "k": ["allow_nan_stats", "batch_shape", "bijector", "distribution", "dtype", "event_shape", "name", "parameters", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.3", "t": "tf.contrib.distributions.TransformedDistribution"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/distributions/VectorDeterministic", "k": ["allow_nan_stats", "atol", "batch_shape", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "rtol", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.3", "t": "tf.contrib.distributions.VectorDeterministic"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/distributions/VectorExponentialDiag", "k": ["allow_nan_stats", "batch_shape", "bijector", "distribution", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.3", "t": "tf.contrib.distributions.VectorExponentialDiag"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/distributions/VectorLaplaceDiag", "k": ["allow_nan_stats", "batch_shape", "bijector", "distribution", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.3", "t": "tf.contrib.distributions.VectorLaplaceDiag"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/distributions/WishartCholesky", "k": ["allow_nan_stats", "batch_shape", "cholesky_input_output_matrices", "df", "dimension", "dtype", "event_shape", "name", "parameters", "reparameterization_type", "scale_operator_pd", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_normalization", "log_prob", "log_survival_function", "mean", "mean_log_det", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "scale", "stddev", "survival_function", "variance"], "r": "r1.3", "t": "tf.contrib.distributions.WishartCholesky"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/distributions/WishartFull", "k": ["allow_nan_stats", "batch_shape", "cholesky_input_output_matrices", "df", "dimension", "dtype", "event_shape", "name", "parameters", "reparameterization_type", "scale_operator_pd", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_normalization", "log_prob", "log_survival_function", "mean", "mean_log_det", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "scale", "stddev", "survival_function", "variance"], "r": "r1.3", "t": "tf.contrib.distributions.WishartFull"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/distributions/bijectors", "k": [], "r": "r1.3", "t": "tf.contrib.distributions.bijectors"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/distributions/bijectors/Affine", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "scale", "shift", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.3", "t": "tf.contrib.distributions.bijectors.Affine"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/distributions/bijectors/AffineLinearOperator", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "scale", "shift", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.3", "t": "tf.contrib.distributions.bijectors.AffineLinearOperator"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/distributions/bijectors/Chain", "k": ["bijectors", "dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.3", "t": "tf.contrib.distributions.bijectors.Chain"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/distributions/bijectors/CholeskyOuterProduct", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.3", "t": "tf.contrib.distributions.bijectors.CholeskyOuterProduct"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/distributions/bijectors/ConditionalBijector", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.3", "t": "tf.contrib.distributions.bijectors.ConditionalBijector"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/distributions/bijectors/Exp", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "power", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.3", "t": "tf.contrib.distributions.bijectors.Exp"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/distributions/bijectors/Inline", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.3", "t": "tf.contrib.distributions.bijectors.Inline"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/distributions/bijectors/Invert", "k": ["bijector", "dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.3", "t": "tf.contrib.distributions.bijectors.Invert"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/distributions/bijectors/PowerTransform", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "power", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.3", "t": "tf.contrib.distributions.bijectors.PowerTransform"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/distributions/bijectors/Sigmoid", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.3", "t": "tf.contrib.distributions.bijectors.Sigmoid"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/distributions/bijectors/SigmoidCentered", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.3", "t": "tf.contrib.distributions.bijectors.SigmoidCentered"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/distributions/bijectors/SinhArcsinh", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "skewness", "tailweight", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.3", "t": "tf.contrib.distributions.bijectors.SinhArcsinh"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/distributions/bijectors/SoftmaxCentered", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.3", "t": "tf.contrib.distributions.bijectors.SoftmaxCentered"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/distributions/bijectors/Softplus", "k": ["dtype", "event_ndims", "graph_parents", "hinge_softness", "is_constant_jacobian", "name", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.3", "t": "tf.contrib.distributions.bijectors.Softplus"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/distributions/matrix_diag_transform", "k": [], "r": "r1.3", "t": "tf.contrib.distributions.matrix_diag_transform"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/distributions/normal_conjugates_known_scale_posterior", "k": [], "r": "r1.3", "t": "tf.contrib.distributions.normal_conjugates_known_scale_posterior"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/distributions/normal_conjugates_known_scale_predictive", "k": [], "r": "r1.3", "t": "tf.contrib.distributions.normal_conjugates_known_scale_predictive"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/distributions/percentile", "k": [], "r": "r1.3", "t": "tf.contrib.distributions.percentile"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/distributions/softplus_inverse", "k": [], "r": "r1.3", "t": "tf.contrib.distributions.softplus_inverse"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/factorization", "k": [], "r": "r1.3", "t": "tf.contrib.factorization"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/ffmpeg", "k": [], "r": "r1.3", "t": "tf.contrib.ffmpeg"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/ffmpeg/decode_audio", "k": [], "r": "r1.3", "t": "tf.contrib.ffmpeg.decode_audio"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/ffmpeg/encode_audio", "k": [], "r": "r1.3", "t": "tf.contrib.ffmpeg.encode_audio"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/framework", "k": [], "r": "r1.3", "t": "tf.contrib.framework"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/framework/VariableDeviceChooser", "k": ["__call__", "__init__"], "r": "r1.3", "t": "tf.contrib.framework.VariableDeviceChooser"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/framework/add_arg_scope", "k": [], "r": "r1.3", "t": "tf.contrib.framework.add_arg_scope"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/framework/add_model_variable", "k": [], "r": "r1.3", "t": "tf.contrib.framework.add_model_variable"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/framework/arg_scope", "k": [], "r": "r1.3", "t": "tf.contrib.framework.arg_scope"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/framework/arg_scoped_arguments", "k": [], "r": "r1.3", "t": "tf.contrib.framework.arg_scoped_arguments"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/framework/assert_global_step", "k": [], "r": "r1.3", "t": "tf.contrib.framework.assert_global_step"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/framework/assert_or_get_global_step", "k": [], "r": "r1.3", "t": "tf.contrib.framework.assert_or_get_global_step"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/framework/assert_scalar_int", "k": [], "r": "r1.3", "t": "tf.contrib.framework.assert_scalar_int"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/framework/assign_from_checkpoint", "k": [], "r": "r1.3", "t": "tf.contrib.framework.assign_from_checkpoint"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/framework/assign_from_checkpoint_fn", "k": [], "r": "r1.3", "t": "tf.contrib.framework.assign_from_checkpoint_fn"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/framework/assign_from_values", "k": [], "r": "r1.3", "t": "tf.contrib.framework.assign_from_values"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/framework/assign_from_values_fn", "k": [], "r": "r1.3", "t": "tf.contrib.framework.assign_from_values_fn"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/framework/create_global_step", "k": [], "r": "r1.3", "t": "tf.contrib.framework.create_global_step"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/framework/deprecated", "k": [], "r": "r1.3", "t": "tf.contrib.framework.deprecated"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/framework/deprecated_arg_values", "k": [], "r": "r1.3", "t": "tf.contrib.framework.deprecated_arg_values"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/framework/deprecated_args", "k": [], "r": "r1.3", "t": "tf.contrib.framework.deprecated_args"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/framework/filter_variables", "k": [], "r": "r1.3", "t": "tf.contrib.framework.filter_variables"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/framework/get_global_step", "k": [], "r": "r1.3", "t": "tf.contrib.framework.get_global_step"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/framework/get_graph_from_inputs", "k": [], "r": "r1.3", "t": "tf.contrib.framework.get_graph_from_inputs"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/framework/get_local_variables", "k": [], "r": "r1.3", "t": "tf.contrib.framework.get_local_variables"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/framework/get_model_variables", "k": [], "r": "r1.3", "t": "tf.contrib.framework.get_model_variables"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/framework/get_name_scope", "k": [], "r": "r1.3", "t": "tf.contrib.framework.get_name_scope"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/framework/get_or_create_global_step", "k": [], "r": "r1.3", "t": "tf.contrib.framework.get_or_create_global_step"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/framework/get_trainable_variables", "k": [], "r": "r1.3", "t": "tf.contrib.framework.get_trainable_variables"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/framework/get_unique_variable", "k": [], "r": "r1.3", "t": "tf.contrib.framework.get_unique_variable"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/framework/get_variable_full_name", "k": [], "r": "r1.3", "t": "tf.contrib.framework.get_variable_full_name"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/framework/get_variables", "k": [], "r": "r1.3", "t": "tf.contrib.framework.get_variables"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/framework/get_variables_by_name", "k": [], "r": "r1.3", "t": "tf.contrib.framework.get_variables_by_name"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/framework/get_variables_by_suffix", "k": [], "r": "r1.3", "t": "tf.contrib.framework.get_variables_by_suffix"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/framework/get_variables_to_restore", "k": [], "r": "r1.3", "t": "tf.contrib.framework.get_variables_to_restore"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/framework/has_arg_scope", "k": [], "r": "r1.3", "t": "tf.contrib.framework.has_arg_scope"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/framework/init_from_checkpoint", "k": [], "r": "r1.3", "t": "tf.contrib.framework.init_from_checkpoint"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/framework/is_tensor", "k": [], "r": "r1.3", "t": "tf.contrib.framework.is_tensor"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/framework/list_variables", "k": [], "r": "r1.3", "t": "tf.contrib.framework.list_variables"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/framework/load_and_remap_matrix_initializer", "k": [], "r": "r1.3", "t": "tf.contrib.framework.load_and_remap_matrix_initializer"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/framework/load_checkpoint", "k": [], "r": "r1.3", "t": "tf.contrib.framework.load_checkpoint"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/framework/load_embedding_initializer", "k": [], "r": "r1.3", "t": "tf.contrib.framework.load_embedding_initializer"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/framework/load_linear_multiclass_bias_initializer", "k": [], "r": "r1.3", "t": "tf.contrib.framework.load_linear_multiclass_bias_initializer"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/framework/load_variable", "k": [], "r": "r1.3", "t": "tf.contrib.framework.load_variable"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/framework/load_variable_slot_initializer", "k": [], "r": "r1.3", "t": "tf.contrib.framework.load_variable_slot_initializer"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/framework/local_variable", "k": [], "r": "r1.3", "t": "tf.contrib.framework.local_variable"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/framework/model_variable", "k": [], "r": "r1.3", "t": "tf.contrib.framework.model_variable"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/framework/nest", "k": [], "r": "r1.3", "t": "tf.contrib.framework.nest"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/framework/nest/assert_same_structure", "k": [], "r": "r1.3", "t": "tf.contrib.framework.nest.assert_same_structure"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/framework/nest/assert_shallow_structure", "k": [], "r": "r1.3", "t": "tf.contrib.framework.nest.assert_shallow_structure"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/framework/nest/flatten", "k": [], "r": "r1.3", "t": "tf.contrib.framework.nest.flatten"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/framework/nest/flatten_dict_items", "k": [], "r": "r1.3", "t": "tf.contrib.framework.nest.flatten_dict_items"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/framework/nest/flatten_up_to", "k": [], "r": "r1.3", "t": "tf.contrib.framework.nest.flatten_up_to"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/framework/nest/is_sequence", "k": [], "r": "r1.3", "t": "tf.contrib.framework.nest.is_sequence"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/framework/nest/map_structure", "k": [], "r": "r1.3", "t": "tf.contrib.framework.nest.map_structure"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/framework/nest/map_structure_up_to", "k": [], "r": "r1.3", "t": "tf.contrib.framework.nest.map_structure_up_to"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/framework/nest/pack_sequence_as", "k": [], "r": "r1.3", "t": "tf.contrib.framework.nest.pack_sequence_as"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/framework/prepend_name_scope", "k": [], "r": "r1.3", "t": "tf.contrib.framework.prepend_name_scope"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/framework/reduce_sum_n", "k": [], "r": "r1.3", "t": "tf.contrib.framework.reduce_sum_n"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/framework/remove_squeezable_dimensions", "k": [], "r": "r1.3", "t": "tf.contrib.framework.remove_squeezable_dimensions"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/framework/strip_name_scope", "k": [], "r": "r1.3", "t": "tf.contrib.framework.strip_name_scope"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/framework/variable", "k": [], "r": "r1.3", "t": "tf.contrib.framework.variable"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/framework/with_same_shape", "k": [], "r": "r1.3", "t": "tf.contrib.framework.with_same_shape"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/framework/with_shape", "k": [], "r": "r1.3", "t": "tf.contrib.framework.with_shape"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/framework/zero_initializer", "k": [], "r": "r1.3", "t": "tf.contrib.framework.zero_initializer"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/graph_editor", "k": [], "r": "r1.3", "t": "tf.contrib.graph_editor"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/graph_editor/ControlOutputs", "k": ["graph", "__init__", "get", "get_all", "update"], "r": "r1.3", "t": "tf.contrib.graph_editor.ControlOutputs"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/graph_editor/SubGraphView", "k": ["connected_inputs", "connected_outputs", "graph", "inputs", "ops", "outputs", "passthroughs", "__bool__", "__copy__", "__enter__", "__exit__", "__init__", "__nonzero__", "consumers", "copy", "find_op_by_name", "input_index", "is_passthrough", "op", "output_index", "remap", "remap_default", "remap_inputs", "remap_outputs", "remap_outputs_make_unique", "remap_outputs_to_consumers", "remove_unused_ops"], "r": "r1.3", "t": "tf.contrib.graph_editor.SubGraphView"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/graph_editor/Transformer", "k": ["__call__", "__init__"], "r": "r1.3", "t": "tf.contrib.graph_editor.Transformer"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/graph_editor/TransformerInfo", "k": ["__init__", "original", "transformed"], "r": "r1.3", "t": "tf.contrib.graph_editor.TransformerInfo"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/graph_editor/add_control_inputs", "k": [], "r": "r1.3", "t": "tf.contrib.graph_editor.add_control_inputs"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/graph_editor/assign_renamed_collections_handler", "k": [], "r": "r1.3", "t": "tf.contrib.graph_editor.assign_renamed_collections_handler"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/graph_editor/bypass", "k": [], "r": "r1.3", "t": "tf.contrib.graph_editor.bypass"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/graph_editor/can_be_regex", "k": [], "r": "r1.3", "t": "tf.contrib.graph_editor.can_be_regex"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/graph_editor/check_cios", "k": [], "r": "r1.3", "t": "tf.contrib.graph_editor.check_cios"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/graph_editor/compute_boundary_ts", "k": [], "r": "r1.3", "t": "tf.contrib.graph_editor.compute_boundary_ts"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/graph_editor/connect", "k": [], "r": "r1.3", "t": "tf.contrib.graph_editor.connect"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/graph_editor/copy", "k": [], "r": "r1.3", "t": "tf.contrib.graph_editor.copy"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/graph_editor/copy_op_handler", "k": [], "r": "r1.3", "t": "tf.contrib.graph_editor.copy_op_handler"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/graph_editor/copy_with_input_replacements", "k": [], "r": "r1.3", "t": "tf.contrib.graph_editor.copy_with_input_replacements"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/graph_editor/detach", "k": [], "r": "r1.3", "t": "tf.contrib.graph_editor.detach"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/graph_editor/detach_control_inputs", "k": [], "r": "r1.3", "t": "tf.contrib.graph_editor.detach_control_inputs"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/graph_editor/detach_control_outputs", "k": [], "r": "r1.3", "t": "tf.contrib.graph_editor.detach_control_outputs"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/graph_editor/detach_inputs", "k": [], "r": "r1.3", "t": "tf.contrib.graph_editor.detach_inputs"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/graph_editor/detach_outputs", "k": [], "r": "r1.3", "t": "tf.contrib.graph_editor.detach_outputs"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/graph_editor/edit", "k": [], "r": "r1.3", "t": "tf.contrib.graph_editor.edit"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/graph_editor/filter_ops", "k": [], "r": "r1.3", "t": "tf.contrib.graph_editor.filter_ops"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/graph_editor/filter_ops_from_regex", "k": [], "r": "r1.3", "t": "tf.contrib.graph_editor.filter_ops_from_regex"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/graph_editor/filter_ts", "k": [], "r": "r1.3", "t": "tf.contrib.graph_editor.filter_ts"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/graph_editor/filter_ts_from_regex", "k": [], "r": "r1.3", "t": "tf.contrib.graph_editor.filter_ts_from_regex"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/graph_editor/get_backward_walk_ops", "k": [], "r": "r1.3", "t": "tf.contrib.graph_editor.get_backward_walk_ops"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/graph_editor/get_consuming_ops", "k": [], "r": "r1.3", "t": "tf.contrib.graph_editor.get_consuming_ops"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/graph_editor/get_forward_walk_ops", "k": [], "r": "r1.3", "t": "tf.contrib.graph_editor.get_forward_walk_ops"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/graph_editor/get_generating_ops", "k": [], "r": "r1.3", "t": "tf.contrib.graph_editor.get_generating_ops"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/graph_editor/get_name_scope_ops", "k": [], "r": "r1.3", "t": "tf.contrib.graph_editor.get_name_scope_ops"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/graph_editor/get_ops_ios", "k": [], "r": "r1.3", "t": "tf.contrib.graph_editor.get_ops_ios"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/graph_editor/get_tensors", "k": [], "r": "r1.3", "t": "tf.contrib.graph_editor.get_tensors"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/graph_editor/get_walks_intersection_ops", "k": [], "r": "r1.3", "t": "tf.contrib.graph_editor.get_walks_intersection_ops"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/graph_editor/get_walks_union_ops", "k": [], "r": "r1.3", "t": "tf.contrib.graph_editor.get_walks_union_ops"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/graph_editor/get_within_boundary_ops", "k": [], "r": "r1.3", "t": "tf.contrib.graph_editor.get_within_boundary_ops"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/graph_editor/graph_replace", "k": [], "r": "r1.3", "t": "tf.contrib.graph_editor.graph_replace"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/graph_editor/keep_t_if_possible_handler", "k": [], "r": "r1.3", "t": "tf.contrib.graph_editor.keep_t_if_possible_handler"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/graph_editor/make_list_of_op", "k": [], "r": "r1.3", "t": "tf.contrib.graph_editor.make_list_of_op"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/graph_editor/make_list_of_t", "k": [], "r": "r1.3", "t": "tf.contrib.graph_editor.make_list_of_t"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/graph_editor/make_placeholder_from_dtype_and_shape", "k": [], "r": "r1.3", "t": "tf.contrib.graph_editor.make_placeholder_from_dtype_and_shape"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/graph_editor/make_placeholder_from_tensor", "k": [], "r": "r1.3", "t": "tf.contrib.graph_editor.make_placeholder_from_tensor"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/graph_editor/make_regex", "k": [], "r": "r1.3", "t": "tf.contrib.graph_editor.make_regex"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/graph_editor/make_view", "k": [], "r": "r1.3", "t": "tf.contrib.graph_editor.make_view"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/graph_editor/make_view_from_scope", "k": [], "r": "r1.3", "t": "tf.contrib.graph_editor.make_view_from_scope"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/graph_editor/placeholder_name", "k": [], "r": "r1.3", "t": "tf.contrib.graph_editor.placeholder_name"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/graph_editor/remove_control_inputs", "k": [], "r": "r1.3", "t": "tf.contrib.graph_editor.remove_control_inputs"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/graph_editor/replace_t_with_placeholder_handler", "k": [], "r": "r1.3", "t": "tf.contrib.graph_editor.replace_t_with_placeholder_handler"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/graph_editor/reroute", "k": [], "r": "r1.3", "t": "tf.contrib.graph_editor.reroute"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/graph_editor/reroute_inputs", "k": [], "r": "r1.3", "t": "tf.contrib.graph_editor.reroute_inputs"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/graph_editor/reroute_ios", "k": [], "r": "r1.3", "t": "tf.contrib.graph_editor.reroute_ios"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/graph_editor/reroute_outputs", "k": [], "r": "r1.3", "t": "tf.contrib.graph_editor.reroute_outputs"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/graph_editor/reroute_ts", "k": [], "r": "r1.3", "t": "tf.contrib.graph_editor.reroute_ts"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/graph_editor/select", "k": [], "r": "r1.3", "t": "tf.contrib.graph_editor.select"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/graph_editor/select_ops", "k": [], "r": "r1.3", "t": "tf.contrib.graph_editor.select_ops"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/graph_editor/select_ops_and_ts", "k": [], "r": "r1.3", "t": "tf.contrib.graph_editor.select_ops_and_ts"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/graph_editor/select_ts", "k": [], "r": "r1.3", "t": "tf.contrib.graph_editor.select_ts"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/graph_editor/subgraph", "k": [], "r": "r1.3", "t": "tf.contrib.graph_editor.subgraph"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/graph_editor/swap_inputs", "k": [], "r": "r1.3", "t": "tf.contrib.graph_editor.swap_inputs"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/graph_editor/swap_ios", "k": [], "r": "r1.3", "t": "tf.contrib.graph_editor.swap_ios"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/graph_editor/swap_outputs", "k": [], "r": "r1.3", "t": "tf.contrib.graph_editor.swap_outputs"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/graph_editor/swap_ts", "k": [], "r": "r1.3", "t": "tf.contrib.graph_editor.swap_ts"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/graph_editor/transform", "k": [], "r": "r1.3", "t": "tf.contrib.graph_editor.transform"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/graph_editor/transform_op_if_inside_handler", "k": [], "r": "r1.3", "t": "tf.contrib.graph_editor.transform_op_if_inside_handler"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/graph_editor/util", "k": [], "r": "r1.3", "t": "tf.contrib.graph_editor.util"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/grid_rnn", "k": [], "r": "r1.3", "t": "tf.contrib.grid_rnn"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/image", "k": [], "r": "r1.3", "t": "tf.contrib.image"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/image/angles_to_projective_transforms", "k": [], "r": "r1.3", "t": "tf.contrib.image.angles_to_projective_transforms"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/image/compose_transforms", "k": [], "r": "r1.3", "t": "tf.contrib.image.compose_transforms"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/image/rotate", "k": [], "r": "r1.3", "t": "tf.contrib.image.rotate"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/image/single_image_random_dot_stereograms", "k": [], "r": "r1.3", "t": "tf.contrib.image.single_image_random_dot_stereograms"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/image/transform", "k": [], "r": "r1.3", "t": "tf.contrib.image.transform"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/input_pipeline", "k": [], "r": "r1.3", "t": "tf.contrib.input_pipeline"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/input_pipeline/obtain_next", "k": [], "r": "r1.3", "t": "tf.contrib.input_pipeline.obtain_next"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/integrate", "k": [], "r": "r1.3", "t": "tf.contrib.integrate"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/integrate/odeint", "k": [], "r": "r1.3", "t": "tf.contrib.integrate.odeint"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras", "k": [], "r": "r1.3", "t": "tf.contrib.keras"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/activations", "k": [], "r": "r1.3", "t": "tf.contrib.keras.activations"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/activations/deserialize", "k": [], "r": "r1.3", "t": "tf.contrib.keras.activations.deserialize"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/activations/elu", "k": [], "r": "r1.3", "t": "tf.contrib.keras.activations.elu"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/activations/get", "k": [], "r": "r1.3", "t": "tf.contrib.keras.activations.get"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/activations/hard_sigmoid", "k": [], "r": "r1.3", "t": "tf.contrib.keras.activations.hard_sigmoid"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/activations/linear", "k": [], "r": "r1.3", "t": "tf.contrib.keras.activations.linear"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/activations/relu", "k": [], "r": "r1.3", "t": "tf.contrib.keras.activations.relu"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/activations/serialize", "k": [], "r": "r1.3", "t": "tf.contrib.keras.activations.serialize"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/activations/sigmoid", "k": [], "r": "r1.3", "t": "tf.contrib.keras.activations.sigmoid"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/activations/softmax", "k": [], "r": "r1.3", "t": "tf.contrib.keras.activations.softmax"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/activations/softplus", "k": [], "r": "r1.3", "t": "tf.contrib.keras.activations.softplus"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/activations/softsign", "k": [], "r": "r1.3", "t": "tf.contrib.keras.activations.softsign"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/activations/tanh", "k": [], "r": "r1.3", "t": "tf.contrib.keras.activations.tanh"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/api", "k": [], "r": "r1.3", "t": "tf.contrib.keras.api"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/applications", "k": [], "r": "r1.3", "t": "tf.contrib.keras.applications"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/applications/InceptionV3", "k": [], "r": "r1.3", "t": "tf.contrib.keras.applications.InceptionV3"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/applications/ResNet50", "k": [], "r": "r1.3", "t": "tf.contrib.keras.applications.ResNet50"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/applications/VGG16", "k": [], "r": "r1.3", "t": "tf.contrib.keras.applications.VGG16"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/applications/VGG19", "k": [], "r": "r1.3", "t": "tf.contrib.keras.applications.VGG19"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/applications/Xception", "k": [], "r": "r1.3", "t": "tf.contrib.keras.applications.Xception"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/applications/inception_v3", "k": [], "r": "r1.3", "t": "tf.contrib.keras.applications.inception_v3"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/applications/inception_v3/decode_predictions", "k": [], "r": "r1.3", "t": "tf.contrib.keras.applications.inception_v3.decode_predictions"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/applications/inception_v3/preprocess_input", "k": [], "r": "r1.3", "t": "tf.contrib.keras.applications.inception_v3.preprocess_input"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/applications/resnet50", "k": [], "r": "r1.3", "t": "tf.contrib.keras.applications.resnet50"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/applications/resnet50/preprocess_input", "k": [], "r": "r1.3", "t": "tf.contrib.keras.applications.resnet50.preprocess_input"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/applications/vgg16", "k": [], "r": "r1.3", "t": "tf.contrib.keras.applications.vgg16"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/applications/vgg19", "k": [], "r": "r1.3", "t": "tf.contrib.keras.applications.vgg19"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/applications/xception", "k": [], "r": "r1.3", "t": "tf.contrib.keras.applications.xception"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/applications/xception/preprocess_input", "k": [], "r": "r1.3", "t": "tf.contrib.keras.applications.xception.preprocess_input"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/abs", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.abs"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/all", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.all"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/any", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.any"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/arange", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.arange"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/argmax", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.argmax"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/argmin", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.argmin"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/backend", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.backend"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/batch_dot", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.batch_dot"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/batch_flatten", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.batch_flatten"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/batch_get_value", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.batch_get_value"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/batch_normalization", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.batch_normalization"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/batch_set_value", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.batch_set_value"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/bias_add", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.bias_add"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/binary_crossentropy", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.binary_crossentropy"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/cast", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.cast"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/cast_to_floatx", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.cast_to_floatx"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/categorical_crossentropy", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.categorical_crossentropy"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/clear_session", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.clear_session"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/clip", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.clip"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/concatenate", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.concatenate"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/constant", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.constant"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/conv1d", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.conv1d"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/conv2d", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.conv2d"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/conv2d_transpose", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.conv2d_transpose"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/conv3d", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.conv3d"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/cos", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.cos"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/count_params", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.count_params"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/ctc_batch_cost", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.ctc_batch_cost"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/ctc_decode", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.ctc_decode"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/ctc_label_dense_to_sparse", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.ctc_label_dense_to_sparse"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/dot", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.dot"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/dropout", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.dropout"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/dtype", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.dtype"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/elu", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.elu"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/epsilon", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.epsilon"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/equal", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.equal"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/eval", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.eval"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/exp", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.exp"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/expand_dims", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.expand_dims"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/eye", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.eye"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/flatten", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.flatten"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/floatx", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.floatx"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/foldl", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.foldl"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/foldr", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.foldr"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/function", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.function"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/gather", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.gather"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/get_session", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.get_session"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/get_uid", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.get_uid"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/get_value", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.get_value"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/gradients", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.gradients"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/greater", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.greater"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/greater_equal", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.greater_equal"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/hard_sigmoid", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.hard_sigmoid"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/image_data_format", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.image_data_format"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/in_test_phase", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.in_test_phase"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/in_top_k", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.in_top_k"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/in_train_phase", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.in_train_phase"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/int_shape", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.int_shape"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/is_sparse", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.is_sparse"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/l2_normalize", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.l2_normalize"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/learning_phase", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.learning_phase"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/less", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.less"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/less_equal", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.less_equal"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/log", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.log"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/manual_variable_initialization", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.manual_variable_initialization"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/map_fn", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.map_fn"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/max", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.max"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/maximum", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.maximum"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/mean", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.mean"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/min", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.min"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/minimum", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.minimum"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/moving_average_update", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.moving_average_update"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/ndim", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.ndim"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/normalize_batch_in_training", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.normalize_batch_in_training"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/not_equal", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.not_equal"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/one_hot", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.one_hot"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/ones", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.ones"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/ones_like", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.ones_like"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/permute_dimensions", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.permute_dimensions"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/placeholder", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.placeholder"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/pool2d", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.pool2d"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/pool3d", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.pool3d"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/pow", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.pow"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/print_tensor", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.print_tensor"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/prod", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.prod"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/random_binomial", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.random_binomial"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/random_normal", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.random_normal"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/random_normal_variable", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.random_normal_variable"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/random_uniform", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.random_uniform"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/random_uniform_variable", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.random_uniform_variable"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/relu", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.relu"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/repeat", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.repeat"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/repeat_elements", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.repeat_elements"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/reset_uids", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.reset_uids"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/reshape", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.reshape"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/resize_images", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.resize_images"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/resize_volumes", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.resize_volumes"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/reverse", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.reverse"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/rnn", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.rnn"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/round", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.round"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/separable_conv2d", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.separable_conv2d"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/set_epsilon", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.set_epsilon"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/set_floatx", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.set_floatx"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/set_image_data_format", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.set_image_data_format"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/set_learning_phase", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.set_learning_phase"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/set_session", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.set_session"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/set_value", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.set_value"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/shape", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.shape"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/sigmoid", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.sigmoid"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/sign", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.sign"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/sin", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.sin"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/softmax", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.softmax"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/softplus", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.softplus"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/softsign", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.softsign"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/sparse_categorical_crossentropy", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.sparse_categorical_crossentropy"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/spatial_2d_padding", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.spatial_2d_padding"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/spatial_3d_padding", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.spatial_3d_padding"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/sqrt", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.sqrt"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/square", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.square"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/squeeze", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.squeeze"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/stack", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.stack"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/std", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.std"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/stop_gradient", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.stop_gradient"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/sum", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.sum"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/switch", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.switch"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/tanh", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.tanh"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/temporal_padding", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.temporal_padding"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/to_dense", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.to_dense"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/transpose", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.transpose"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/truncated_normal", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.truncated_normal"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/update", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.update"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/update_add", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.update_add"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/update_sub", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.update_sub"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/var", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.var"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/variable", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.variable"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/zeros", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.zeros"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/backend/zeros_like", "k": [], "r": "r1.3", "t": "tf.contrib.keras.backend.zeros_like"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/callbacks", "k": [], "r": "r1.3", "t": "tf.contrib.keras.callbacks"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/callbacks/BaseLogger", "k": ["__init__", "on_batch_begin", "on_batch_end", "on_epoch_begin", "on_epoch_end", "on_train_begin", "on_train_end", "set_model", "set_params"], "r": "r1.3", "t": "tf.contrib.keras.callbacks.BaseLogger"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/callbacks/CSVLogger", "k": ["__init__", "on_batch_begin", "on_batch_end", "on_epoch_begin", "on_epoch_end", "on_train_begin", "on_train_end", "set_model", "set_params"], "r": "r1.3", "t": "tf.contrib.keras.callbacks.CSVLogger"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/callbacks/Callback", "k": ["__init__", "on_batch_begin", "on_batch_end", "on_epoch_begin", "on_epoch_end", "on_train_begin", "on_train_end", "set_model", "set_params"], "r": "r1.3", "t": "tf.contrib.keras.callbacks.Callback"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/callbacks/EarlyStopping", "k": ["__init__", "on_batch_begin", "on_batch_end", "on_epoch_begin", "on_epoch_end", "on_train_begin", "on_train_end", "set_model", "set_params"], "r": "r1.3", "t": "tf.contrib.keras.callbacks.EarlyStopping"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/callbacks/History", "k": ["__init__", "on_batch_begin", "on_batch_end", "on_epoch_begin", "on_epoch_end", "on_train_begin", "on_train_end", "set_model", "set_params"], "r": "r1.3", "t": "tf.contrib.keras.callbacks.History"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/callbacks/LambdaCallback", "k": ["__init__", "on_batch_begin", "on_batch_end", "on_epoch_begin", "on_epoch_end", "on_train_begin", "on_train_end", "set_model", "set_params"], "r": "r1.3", "t": "tf.contrib.keras.callbacks.LambdaCallback"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/callbacks/LearningRateScheduler", "k": ["__init__", "on_batch_begin", "on_batch_end", "on_epoch_begin", "on_epoch_end", "on_train_begin", "on_train_end", "set_model", "set_params"], "r": "r1.3", "t": "tf.contrib.keras.callbacks.LearningRateScheduler"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/callbacks/ModelCheckpoint", "k": ["__init__", "on_batch_begin", "on_batch_end", "on_epoch_begin", "on_epoch_end", "on_train_begin", "on_train_end", "set_model", "set_params"], "r": "r1.3", "t": "tf.contrib.keras.callbacks.ModelCheckpoint"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/callbacks/ProgbarLogger", "k": ["__init__", "on_batch_begin", "on_batch_end", "on_epoch_begin", "on_epoch_end", "on_train_begin", "on_train_end", "set_model", "set_params"], "r": "r1.3", "t": "tf.contrib.keras.callbacks.ProgbarLogger"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/callbacks/ReduceLROnPlateau", "k": ["__init__", "in_cooldown", "on_batch_begin", "on_batch_end", "on_epoch_begin", "on_epoch_end", "on_train_begin", "on_train_end", "set_model", "set_params"], "r": "r1.3", "t": "tf.contrib.keras.callbacks.ReduceLROnPlateau"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/callbacks/RemoteMonitor", "k": ["__init__", "on_batch_begin", "on_batch_end", "on_epoch_begin", "on_epoch_end", "on_train_begin", "on_train_end", "set_model", "set_params"], "r": "r1.3", "t": "tf.contrib.keras.callbacks.RemoteMonitor"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/callbacks/TensorBoard", "k": ["__init__", "on_batch_begin", "on_batch_end", "on_epoch_begin", "on_epoch_end", "on_train_begin", "on_train_end", "set_model", "set_params"], "r": "r1.3", "t": "tf.contrib.keras.callbacks.TensorBoard"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/constraints", "k": [], "r": "r1.3", "t": "tf.contrib.keras.constraints"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/constraints/Constraint", "k": ["__call__", "get_config"], "r": "r1.3", "t": "tf.contrib.keras.constraints.Constraint"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/constraints/MaxNorm", "k": ["__call__", "__init__", "get_config"], "r": "r1.3", "t": "tf.contrib.keras.constraints.MaxNorm"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/constraints/MinMaxNorm", "k": ["__call__", "__init__", "get_config"], "r": "r1.3", "t": "tf.contrib.keras.constraints.MinMaxNorm"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/constraints/NonNeg", "k": ["__call__", "get_config"], "r": "r1.3", "t": "tf.contrib.keras.constraints.NonNeg"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/constraints/UnitNorm", "k": ["__call__", "__init__", "get_config"], "r": "r1.3", "t": "tf.contrib.keras.constraints.UnitNorm"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/constraints/deserialize", "k": [], "r": "r1.3", "t": "tf.contrib.keras.constraints.deserialize"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/constraints/get", "k": [], "r": "r1.3", "t": "tf.contrib.keras.constraints.get"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/constraints/serialize", "k": [], "r": "r1.3", "t": "tf.contrib.keras.constraints.serialize"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/datasets", "k": [], "r": "r1.3", "t": "tf.contrib.keras.datasets"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/datasets/boston_housing", "k": [], "r": "r1.3", "t": "tf.contrib.keras.datasets.boston_housing"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/datasets/boston_housing/load_data", "k": [], "r": "r1.3", "t": "tf.contrib.keras.datasets.boston_housing.load_data"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/datasets/cifar10", "k": [], "r": "r1.3", "t": "tf.contrib.keras.datasets.cifar10"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/datasets/cifar10/load_data", "k": [], "r": "r1.3", "t": "tf.contrib.keras.datasets.cifar10.load_data"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/datasets/cifar100", "k": [], "r": "r1.3", "t": "tf.contrib.keras.datasets.cifar100"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/datasets/cifar100/load_data", "k": [], "r": "r1.3", "t": "tf.contrib.keras.datasets.cifar100.load_data"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/datasets/imdb", "k": [], "r": "r1.3", "t": "tf.contrib.keras.datasets.imdb"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/datasets/imdb/get_word_index", "k": [], "r": "r1.3", "t": "tf.contrib.keras.datasets.imdb.get_word_index"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/datasets/imdb/load_data", "k": [], "r": "r1.3", "t": "tf.contrib.keras.datasets.imdb.load_data"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/datasets/mnist", "k": [], "r": "r1.3", "t": "tf.contrib.keras.datasets.mnist"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/datasets/mnist/load_data", "k": [], "r": "r1.3", "t": "tf.contrib.keras.datasets.mnist.load_data"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/datasets/reuters", "k": [], "r": "r1.3", "t": "tf.contrib.keras.datasets.reuters"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/datasets/reuters/get_word_index", "k": [], "r": "r1.3", "t": "tf.contrib.keras.datasets.reuters.get_word_index"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/datasets/reuters/load_data", "k": [], "r": "r1.3", "t": "tf.contrib.keras.datasets.reuters.load_data"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/initializers", "k": [], "r": "r1.3", "t": "tf.contrib.keras.initializers"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/initializers/Identity", "k": ["__call__", "__init__", "from_config", "get_config"], "r": "r1.3", "t": "tf.contrib.keras.initializers.Identity"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/initializers/Initializer", "k": ["__call__", "from_config", "get_config"], "r": "r1.3", "t": "tf.contrib.keras.initializers.Initializer"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/initializers/deserialize", "k": [], "r": "r1.3", "t": "tf.contrib.keras.initializers.deserialize"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/initializers/get", "k": [], "r": "r1.3", "t": "tf.contrib.keras.initializers.get"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/initializers/glorot_normal", "k": [], "r": "r1.3", "t": "tf.contrib.keras.initializers.glorot_normal"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/initializers/glorot_uniform", "k": [], "r": "r1.3", "t": "tf.contrib.keras.initializers.glorot_uniform"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/initializers/he_normal", "k": [], "r": "r1.3", "t": "tf.contrib.keras.initializers.he_normal"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/initializers/he_uniform", "k": [], "r": "r1.3", "t": "tf.contrib.keras.initializers.he_uniform"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/initializers/lecun_uniform", "k": [], "r": "r1.3", "t": "tf.contrib.keras.initializers.lecun_uniform"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/initializers/serialize", "k": [], "r": "r1.3", "t": "tf.contrib.keras.initializers.serialize"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/layers", "k": [], "r": "r1.3", "t": "tf.contrib.keras.layers"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/layers/Activation", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.3", "t": "tf.contrib.keras.layers.Activation"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/layers/ActivityRegularization", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.3", "t": "tf.contrib.keras.layers.ActivityRegularization"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/layers/Add", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.3", "t": "tf.contrib.keras.layers.Add"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/layers/Average", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.3", "t": "tf.contrib.keras.layers.Average"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/layers/AveragePooling1D", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.3", "t": "tf.contrib.keras.layers.AveragePooling1D"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/layers/AveragePooling2D", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.3", "t": "tf.contrib.keras.layers.AveragePooling2D"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/layers/AveragePooling3D", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.3", "t": "tf.contrib.keras.layers.AveragePooling3D"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/layers/BatchNormalization", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.3", "t": "tf.contrib.keras.layers.BatchNormalization"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/layers/Bidirectional", "k": ["activity_regularizer", "constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "reset_states", "set_weights"], "r": "r1.3", "t": "tf.contrib.keras.layers.Bidirectional"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/layers/Concatenate", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.3", "t": "tf.contrib.keras.layers.Concatenate"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/layers/Conv1D", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.3", "t": "tf.contrib.keras.layers.Conv1D"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/layers/Conv2D", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.3", "t": "tf.contrib.keras.layers.Conv2D"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/layers/Conv2DTranspose", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.3", "t": "tf.contrib.keras.layers.Conv2DTranspose"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/layers/Conv3D", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.3", "t": "tf.contrib.keras.layers.Conv3D"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/layers/ConvLSTM2D", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_constants", "get_initial_state", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "input_conv", "preprocess_input", "reccurent_conv", "reset_states", "set_weights", "step"], "r": "r1.3", "t": "tf.contrib.keras.layers.ConvLSTM2D"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/layers/Cropping1D", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.3", "t": "tf.contrib.keras.layers.Cropping1D"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/layers/Cropping2D", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.3", "t": "tf.contrib.keras.layers.Cropping2D"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/layers/Cropping3D", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.3", "t": "tf.contrib.keras.layers.Cropping3D"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/layers/Dense", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.3", "t": "tf.contrib.keras.layers.Dense"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/layers/Dot", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.3", "t": "tf.contrib.keras.layers.Dot"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/layers/Dropout", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.3", "t": "tf.contrib.keras.layers.Dropout"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/layers/ELU", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.3", "t": "tf.contrib.keras.layers.ELU"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/layers/Embedding", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.3", "t": "tf.contrib.keras.layers.Embedding"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/layers/Flatten", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.3", "t": "tf.contrib.keras.layers.Flatten"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/layers/GRU", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_constants", "get_initial_state", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "preprocess_input", "reset_states", "set_weights", "step"], "r": "r1.3", "t": "tf.contrib.keras.layers.GRU"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/layers/GaussianDropout", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.3", "t": "tf.contrib.keras.layers.GaussianDropout"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/layers/GaussianNoise", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.3", "t": "tf.contrib.keras.layers.GaussianNoise"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/layers/GlobalAveragePooling1D", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.3", "t": "tf.contrib.keras.layers.GlobalAveragePooling1D"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/layers/GlobalAveragePooling2D", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.3", "t": "tf.contrib.keras.layers.GlobalAveragePooling2D"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/layers/GlobalAveragePooling3D", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.3", "t": "tf.contrib.keras.layers.GlobalAveragePooling3D"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/layers/GlobalMaxPool1D", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.3", "t": "tf.contrib.keras.layers.GlobalMaxPool1D"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/layers/GlobalMaxPool2D", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.3", "t": "tf.contrib.keras.layers.GlobalMaxPool2D"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/layers/GlobalMaxPool3D", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.3", "t": "tf.contrib.keras.layers.GlobalMaxPool3D"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/layers/Input", "k": [], "r": "r1.3", "t": "tf.contrib.keras.layers.Input"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/layers/InputLayer", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.3", "t": "tf.contrib.keras.layers.InputLayer"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/layers/InputSpec", "k": ["__init__"], "r": "r1.3", "t": "tf.contrib.keras.layers.InputSpec"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/layers/LSTM", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_constants", "get_initial_state", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "preprocess_input", "reset_states", "set_weights", "step"], "r": "r1.3", "t": "tf.contrib.keras.layers.LSTM"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/layers/Lambda", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.3", "t": "tf.contrib.keras.layers.Lambda"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/layers/Layer", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.3", "t": "tf.contrib.keras.layers.Layer"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/layers/LeakyReLU", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.3", "t": "tf.contrib.keras.layers.LeakyReLU"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/layers/LocallyConnected1D", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.3", "t": "tf.contrib.keras.layers.LocallyConnected1D"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/layers/LocallyConnected2D", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.3", "t": "tf.contrib.keras.layers.LocallyConnected2D"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/layers/Masking", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.3", "t": "tf.contrib.keras.layers.Masking"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/layers/MaxPool1D", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.3", "t": "tf.contrib.keras.layers.MaxPool1D"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/layers/MaxPool2D", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.3", "t": "tf.contrib.keras.layers.MaxPool2D"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/layers/MaxPool3D", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.3", "t": "tf.contrib.keras.layers.MaxPool3D"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/layers/Maximum", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.3", "t": "tf.contrib.keras.layers.Maximum"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/layers/Multiply", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.3", "t": "tf.contrib.keras.layers.Multiply"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/layers/PReLU", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.3", "t": "tf.contrib.keras.layers.PReLU"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/layers/Permute", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.3", "t": "tf.contrib.keras.layers.Permute"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/layers/RepeatVector", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.3", "t": "tf.contrib.keras.layers.RepeatVector"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/layers/Reshape", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.3", "t": "tf.contrib.keras.layers.Reshape"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/layers/SeparableConv2D", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.3", "t": "tf.contrib.keras.layers.SeparableConv2D"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/layers/SimpleRNN", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_constants", "get_initial_state", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "preprocess_input", "reset_states", "set_weights", "step"], "r": "r1.3", "t": "tf.contrib.keras.layers.SimpleRNN"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/layers/SpatialDropout1D", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.3", "t": "tf.contrib.keras.layers.SpatialDropout1D"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/layers/SpatialDropout2D", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.3", "t": "tf.contrib.keras.layers.SpatialDropout2D"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/layers/SpatialDropout3D", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.3", "t": "tf.contrib.keras.layers.SpatialDropout3D"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/layers/ThresholdedReLU", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.3", "t": "tf.contrib.keras.layers.ThresholdedReLU"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/layers/TimeDistributed", "k": ["activity_regularizer", "constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.3", "t": "tf.contrib.keras.layers.TimeDistributed"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/layers/UpSampling1D", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.3", "t": "tf.contrib.keras.layers.UpSampling1D"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/layers/UpSampling2D", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.3", "t": "tf.contrib.keras.layers.UpSampling2D"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/layers/UpSampling3D", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.3", "t": "tf.contrib.keras.layers.UpSampling3D"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/layers/Wrapper", "k": ["activity_regularizer", "constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.3", "t": "tf.contrib.keras.layers.Wrapper"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/layers/ZeroPadding1D", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.3", "t": "tf.contrib.keras.layers.ZeroPadding1D"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/layers/ZeroPadding2D", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.3", "t": "tf.contrib.keras.layers.ZeroPadding2D"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/layers/ZeroPadding3D", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.3", "t": "tf.contrib.keras.layers.ZeroPadding3D"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/layers/add", "k": [], "r": "r1.3", "t": "tf.contrib.keras.layers.add"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/layers/average", "k": [], "r": "r1.3", "t": "tf.contrib.keras.layers.average"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/layers/concatenate", "k": [], "r": "r1.3", "t": "tf.contrib.keras.layers.concatenate"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/layers/dot", "k": [], "r": "r1.3", "t": "tf.contrib.keras.layers.dot"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/layers/maximum", "k": [], "r": "r1.3", "t": "tf.contrib.keras.layers.maximum"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/layers/multiply", "k": [], "r": "r1.3", "t": "tf.contrib.keras.layers.multiply"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/losses", "k": [], "r": "r1.3", "t": "tf.contrib.keras.losses"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/losses/binary_crossentropy", "k": [], "r": "r1.3", "t": "tf.contrib.keras.losses.binary_crossentropy"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/losses/categorical_crossentropy", "k": [], "r": "r1.3", "t": "tf.contrib.keras.losses.categorical_crossentropy"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/losses/cosine_proximity", "k": [], "r": "r1.3", "t": "tf.contrib.keras.losses.cosine_proximity"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/losses/deserialize", "k": [], "r": "r1.3", "t": "tf.contrib.keras.losses.deserialize"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/losses/get", "k": [], "r": "r1.3", "t": "tf.contrib.keras.losses.get"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/losses/hinge", "k": [], "r": "r1.3", "t": "tf.contrib.keras.losses.hinge"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/losses/kullback_leibler_divergence", "k": [], "r": "r1.3", "t": "tf.contrib.keras.losses.kullback_leibler_divergence"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/losses/mean_absolute_error", "k": [], "r": "r1.3", "t": "tf.contrib.keras.losses.mean_absolute_error"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/losses/mean_absolute_percentage_error", "k": [], "r": "r1.3", "t": "tf.contrib.keras.losses.mean_absolute_percentage_error"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/losses/mean_squared_error", "k": [], "r": "r1.3", "t": "tf.contrib.keras.losses.mean_squared_error"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/losses/mean_squared_logarithmic_error", "k": [], "r": "r1.3", "t": "tf.contrib.keras.losses.mean_squared_logarithmic_error"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/losses/poisson", "k": [], "r": "r1.3", "t": "tf.contrib.keras.losses.poisson"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/losses/serialize", "k": [], "r": "r1.3", "t": "tf.contrib.keras.losses.serialize"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/losses/sparse_categorical_crossentropy", "k": [], "r": "r1.3", "t": "tf.contrib.keras.losses.sparse_categorical_crossentropy"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/losses/squared_hinge", "k": [], "r": "r1.3", "t": "tf.contrib.keras.losses.squared_hinge"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/metrics", "k": [], "r": "r1.3", "t": "tf.contrib.keras.metrics"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/metrics/binary_accuracy", "k": [], "r": "r1.3", "t": "tf.contrib.keras.metrics.binary_accuracy"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/metrics/categorical_accuracy", "k": [], "r": "r1.3", "t": "tf.contrib.keras.metrics.categorical_accuracy"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/metrics/deserialize", "k": [], "r": "r1.3", "t": "tf.contrib.keras.metrics.deserialize"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/metrics/get", "k": [], "r": "r1.3", "t": "tf.contrib.keras.metrics.get"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/metrics/serialize", "k": [], "r": "r1.3", "t": "tf.contrib.keras.metrics.serialize"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/metrics/top_k_categorical_accuracy", "k": [], "r": "r1.3", "t": "tf.contrib.keras.metrics.top_k_categorical_accuracy"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/models", "k": [], "r": "r1.3", "t": "tf.contrib.keras.models"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/models/Model", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "input_spec", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "state_updates", "stateful", "trainable_variables", "trainable_weights", "updates", "uses_learning_phase", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compile", "compute_mask", "count_params", "evaluate", "evaluate_generator", "fit", "fit_generator", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_layer", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "load_weights", "predict", "predict_generator", "predict_on_batch", "reset_states", "run_internal_graph", "save", "save_weights", "set_weights", "summary", "test_on_batch", "to_json", "to_yaml", "train_on_batch"], "r": "r1.3", "t": "tf.contrib.keras.models.Model"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/models/Sequential", "k": ["constraints", "graph", "input", "input_mask", "input_shape", "input_spec", "losses", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "regularizers", "scope_name", "state_updates", "stateful", "trainable", "trainable_variables", "trainable_weights", "updates", "uses_learning_phase", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compile", "compute_mask", "count_params", "evaluate", "evaluate_generator", "fit", "fit_generator", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_layer", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "load_weights", "pop", "predict", "predict_classes", "predict_generator", "predict_on_batch", "predict_proba", "reset_states", "run_internal_graph", "save", "save_weights", "set_weights", "summary", "test_on_batch", "to_json", "to_yaml", "train_on_batch"], "r": "r1.3", "t": "tf.contrib.keras.models.Sequential"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/models/load_model", "k": [], "r": "r1.3", "t": "tf.contrib.keras.models.load_model"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/models/model_from_config", "k": [], "r": "r1.3", "t": "tf.contrib.keras.models.model_from_config"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/models/model_from_json", "k": [], "r": "r1.3", "t": "tf.contrib.keras.models.model_from_json"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/models/model_from_yaml", "k": [], "r": "r1.3", "t": "tf.contrib.keras.models.model_from_yaml"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/models/save_model", "k": [], "r": "r1.3", "t": "tf.contrib.keras.models.save_model"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/optimizers", "k": [], "r": "r1.3", "t": "tf.contrib.keras.optimizers"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/optimizers/Adadelta", "k": ["__init__", "from_config", "get_config", "get_gradients", "get_updates", "get_weights", "set_weights"], "r": "r1.3", "t": "tf.contrib.keras.optimizers.Adadelta"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/optimizers/Adagrad", "k": ["__init__", "from_config", "get_config", "get_gradients", "get_updates", "get_weights", "set_weights"], "r": "r1.3", "t": "tf.contrib.keras.optimizers.Adagrad"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/optimizers/Adam", "k": ["__init__", "from_config", "get_config", "get_gradients", "get_updates", "get_weights", "set_weights"], "r": "r1.3", "t": "tf.contrib.keras.optimizers.Adam"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/optimizers/Adamax", "k": ["__init__", "from_config", "get_config", "get_gradients", "get_updates", "get_weights", "set_weights"], "r": "r1.3", "t": "tf.contrib.keras.optimizers.Adamax"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/optimizers/Nadam", "k": ["__init__", "from_config", "get_config", "get_gradients", "get_updates", "get_weights", "set_weights"], "r": "r1.3", "t": "tf.contrib.keras.optimizers.Nadam"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/optimizers/Optimizer", "k": ["__init__", "from_config", "get_config", "get_gradients", "get_updates", "get_weights", "set_weights"], "r": "r1.3", "t": "tf.contrib.keras.optimizers.Optimizer"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/optimizers/RMSprop", "k": ["__init__", "from_config", "get_config", "get_gradients", "get_updates", "get_weights", "set_weights"], "r": "r1.3", "t": "tf.contrib.keras.optimizers.RMSprop"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/optimizers/SGD", "k": ["__init__", "from_config", "get_config", "get_gradients", "get_updates", "get_weights", "set_weights"], "r": "r1.3", "t": "tf.contrib.keras.optimizers.SGD"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/optimizers/deserialize", "k": [], "r": "r1.3", "t": "tf.contrib.keras.optimizers.deserialize"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/optimizers/get", "k": [], "r": "r1.3", "t": "tf.contrib.keras.optimizers.get"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/optimizers/serialize", "k": [], "r": "r1.3", "t": "tf.contrib.keras.optimizers.serialize"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/preprocessing", "k": [], "r": "r1.3", "t": "tf.contrib.keras.preprocessing"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/preprocessing/image", "k": [], "r": "r1.3", "t": "tf.contrib.keras.preprocessing.image"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/preprocessing/image/DirectoryIterator", "k": ["__init__", "__iter__", "__next__", "next", "reset"], "r": "r1.3", "t": "tf.contrib.keras.preprocessing.image.DirectoryIterator"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/preprocessing/image/ImageDataGenerator", "k": ["__init__", "fit", "flow", "flow_from_directory", "random_transform", "standardize"], "r": "r1.3", "t": "tf.contrib.keras.preprocessing.image.ImageDataGenerator"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/preprocessing/image/Iterator", "k": ["__init__", "__iter__", "__next__", "reset"], "r": "r1.3", "t": "tf.contrib.keras.preprocessing.image.Iterator"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/preprocessing/image/NumpyArrayIterator", "k": ["__init__", "__iter__", "__next__", "next", "reset"], "r": "r1.3", "t": "tf.contrib.keras.preprocessing.image.NumpyArrayIterator"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/preprocessing/image/apply_transform", "k": [], "r": "r1.3", "t": "tf.contrib.keras.preprocessing.image.apply_transform"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/preprocessing/image/array_to_img", "k": [], "r": "r1.3", "t": "tf.contrib.keras.preprocessing.image.array_to_img"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/preprocessing/image/flip_axis", "k": [], "r": "r1.3", "t": "tf.contrib.keras.preprocessing.image.flip_axis"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/preprocessing/image/img_to_array", "k": [], "r": "r1.3", "t": "tf.contrib.keras.preprocessing.image.img_to_array"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/preprocessing/image/load_img", "k": [], "r": "r1.3", "t": "tf.contrib.keras.preprocessing.image.load_img"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/preprocessing/image/random_channel_shift", "k": [], "r": "r1.3", "t": "tf.contrib.keras.preprocessing.image.random_channel_shift"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/preprocessing/image/random_rotation", "k": [], "r": "r1.3", "t": "tf.contrib.keras.preprocessing.image.random_rotation"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/preprocessing/image/random_shear", "k": [], "r": "r1.3", "t": "tf.contrib.keras.preprocessing.image.random_shear"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/preprocessing/image/random_shift", "k": [], "r": "r1.3", "t": "tf.contrib.keras.preprocessing.image.random_shift"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/preprocessing/image/random_zoom", "k": [], "r": "r1.3", "t": "tf.contrib.keras.preprocessing.image.random_zoom"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/preprocessing/sequence", "k": [], "r": "r1.3", "t": "tf.contrib.keras.preprocessing.sequence"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/preprocessing/sequence/make_sampling_table", "k": [], "r": "r1.3", "t": "tf.contrib.keras.preprocessing.sequence.make_sampling_table"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/preprocessing/sequence/pad_sequences", "k": [], "r": "r1.3", "t": "tf.contrib.keras.preprocessing.sequence.pad_sequences"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/preprocessing/sequence/skipgrams", "k": [], "r": "r1.3", "t": "tf.contrib.keras.preprocessing.sequence.skipgrams"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/preprocessing/text", "k": [], "r": "r1.3", "t": "tf.contrib.keras.preprocessing.text"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/preprocessing/text/Tokenizer", "k": ["__init__", "fit_on_sequences", "fit_on_texts", "sequences_to_matrix", "texts_to_matrix", "texts_to_sequences", "texts_to_sequences_generator"], "r": "r1.3", "t": "tf.contrib.keras.preprocessing.text.Tokenizer"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/preprocessing/text/one_hot", "k": [], "r": "r1.3", "t": "tf.contrib.keras.preprocessing.text.one_hot"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/preprocessing/text/text_to_word_sequence", "k": [], "r": "r1.3", "t": "tf.contrib.keras.preprocessing.text.text_to_word_sequence"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/regularizers", "k": [], "r": "r1.3", "t": "tf.contrib.keras.regularizers"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/regularizers/L1L2", "k": ["__call__", "__init__", "from_config", "get_config"], "r": "r1.3", "t": "tf.contrib.keras.regularizers.L1L2"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/regularizers/Regularizer", "k": ["__call__", "from_config"], "r": "r1.3", "t": "tf.contrib.keras.regularizers.Regularizer"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/regularizers/deserialize", "k": [], "r": "r1.3", "t": "tf.contrib.keras.regularizers.deserialize"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/regularizers/get", "k": [], "r": "r1.3", "t": "tf.contrib.keras.regularizers.get"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/regularizers/l1", "k": [], "r": "r1.3", "t": "tf.contrib.keras.regularizers.l1"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/regularizers/l1_l2", "k": [], "r": "r1.3", "t": "tf.contrib.keras.regularizers.l1_l2"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/regularizers/l2", "k": [], "r": "r1.3", "t": "tf.contrib.keras.regularizers.l2"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/regularizers/serialize", "k": [], "r": "r1.3", "t": "tf.contrib.keras.regularizers.serialize"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/utils", "k": [], "r": "r1.3", "t": "tf.contrib.keras.utils"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/utils/CustomObjectScope", "k": ["__enter__", "__exit__", "__init__"], "r": "r1.3", "t": "tf.contrib.keras.utils.CustomObjectScope"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/utils/HDF5Matrix", "k": ["dtype", "ndim", "shape", "size", "__getitem__", "__init__", "__len__", "refs"], "r": "r1.3", "t": "tf.contrib.keras.utils.HDF5Matrix"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/utils/Progbar", "k": ["__init__", "add", "update"], "r": "r1.3", "t": "tf.contrib.keras.utils.Progbar"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/utils/convert_all_kernels_in_model", "k": [], "r": "r1.3", "t": "tf.contrib.keras.utils.convert_all_kernels_in_model"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/utils/custom_object_scope", "k": [], "r": "r1.3", "t": "tf.contrib.keras.utils.custom_object_scope"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/utils/deserialize_keras_object", "k": [], "r": "r1.3", "t": "tf.contrib.keras.utils.deserialize_keras_object"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/utils/get_custom_objects", "k": [], "r": "r1.3", "t": "tf.contrib.keras.utils.get_custom_objects"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/utils/get_file", "k": [], "r": "r1.3", "t": "tf.contrib.keras.utils.get_file"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/utils/normalize", "k": [], "r": "r1.3", "t": "tf.contrib.keras.utils.normalize"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/utils/plot_model", "k": [], "r": "r1.3", "t": "tf.contrib.keras.utils.plot_model"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/utils/serialize_keras_object", "k": [], "r": "r1.3", "t": "tf.contrib.keras.utils.serialize_keras_object"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/utils/to_categorical", "k": [], "r": "r1.3", "t": "tf.contrib.keras.utils.to_categorical"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/wrappers", "k": [], "r": "r1.3", "t": "tf.contrib.keras.wrappers"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/wrappers/scikit_learn", "k": [], "r": "r1.3", "t": "tf.contrib.keras.wrappers.scikit_learn"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/wrappers/scikit_learn/KerasClassifier", "k": ["__init__", "check_params", "filter_sk_params", "fit", "get_params", "predict", "predict_proba", "score", "set_params"], "r": "r1.3", "t": "tf.contrib.keras.wrappers.scikit_learn.KerasClassifier"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/keras/wrappers/scikit_learn/KerasRegressor", "k": ["__init__", "check_params", "filter_sk_params", "fit", "get_params", "predict", "score", "set_params"], "r": "r1.3", "t": "tf.contrib.keras.wrappers.scikit_learn.KerasRegressor"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/kernel_methods", "k": [], "r": "r1.3", "t": "tf.contrib.kernel_methods"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/kernel_methods/KernelLinearClassifier", "k": ["config", "model_dir", "__init__", "evaluate", "export", "export_savedmodel", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "predict_classes", "predict_proba", "set_params"], "r": "r1.3", "t": "tf.contrib.kernel_methods.KernelLinearClassifier"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/kernel_methods/RandomFourierFeatureMapper", "k": ["input_dim", "name", "output_dim", "__init__", "map"], "r": "r1.3", "t": "tf.contrib.kernel_methods.RandomFourierFeatureMapper"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/labeled_tensor", "k": [], "r": "r1.3", "t": "tf.contrib.labeled_tensor"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/layers", "k": ["OPTIMIZER_CLS_NAMES", "SPARSE_FEATURE_CROSS_DEFAULT_HASH_KEY", "elu", "legacy_linear", "legacy_relu", "linear", "relu", "relu6", "scale_gradient"], "r": "r1.3", "t": "tf.contrib.layers"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/layers/apply_regularization", "k": [], "r": "r1.3", "t": "tf.contrib.layers.apply_regularization"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/layers/avg_pool2d", "k": [], "r": "r1.3", "t": "tf.contrib.layers.avg_pool2d"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/layers/avg_pool3d", "k": [], "r": "r1.3", "t": "tf.contrib.layers.avg_pool3d"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/layers/batch_norm", "k": [], "r": "r1.3", "t": "tf.contrib.layers.batch_norm"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/layers/bias_add", "k": [], "r": "r1.3", "t": "tf.contrib.layers.bias_add"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/layers/bow_encoder", "k": [], "r": "r1.3", "t": "tf.contrib.layers.bow_encoder"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/layers/bucketized_column", "k": [], "r": "r1.3", "t": "tf.contrib.layers.bucketized_column"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/layers/check_feature_columns", "k": [], "r": "r1.3", "t": "tf.contrib.layers.check_feature_columns"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/layers/conv2d", "k": [], "r": "r1.3", "t": "tf.contrib.layers.conv2d"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/layers/conv2d_in_plane", "k": [], "r": "r1.3", "t": "tf.contrib.layers.conv2d_in_plane"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/layers/conv2d_transpose", "k": [], "r": "r1.3", "t": "tf.contrib.layers.conv2d_transpose"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/layers/conv3d_transpose", "k": [], "r": "r1.3", "t": "tf.contrib.layers.conv3d_transpose"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/layers/create_feature_spec_for_parsing", "k": [], "r": "r1.3", "t": "tf.contrib.layers.create_feature_spec_for_parsing"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/layers/crossed_column", "k": [], "r": "r1.3", "t": "tf.contrib.layers.crossed_column"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/layers/dropout", "k": [], "r": "r1.3", "t": "tf.contrib.layers.dropout"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/layers/embed_sequence", "k": [], "r": "r1.3", "t": "tf.contrib.layers.embed_sequence"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/layers/embedding_column", "k": [], "r": "r1.3", "t": "tf.contrib.layers.embedding_column"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/layers/embedding_lookup_unique", "k": [], "r": "r1.3", "t": "tf.contrib.layers.embedding_lookup_unique"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/layers/feature_column", "k": [], "r": "r1.3", "t": "tf.contrib.layers.feature_column"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/layers/flatten", "k": [], "r": "r1.3", "t": "tf.contrib.layers.flatten"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/layers/fully_connected", "k": [], "r": "r1.3", "t": "tf.contrib.layers.fully_connected"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/layers/infer_real_valued_columns", "k": [], "r": "r1.3", "t": "tf.contrib.layers.infer_real_valued_columns"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/layers/input_from_feature_columns", "k": [], "r": "r1.3", "t": "tf.contrib.layers.input_from_feature_columns"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/layers/joint_weighted_sum_from_feature_columns", "k": [], "r": "r1.3", "t": "tf.contrib.layers.joint_weighted_sum_from_feature_columns"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/layers/l1_l2_regularizer", "k": [], "r": "r1.3", "t": "tf.contrib.layers.l1_l2_regularizer"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/layers/l1_regularizer", "k": [], "r": "r1.3", "t": "tf.contrib.layers.l1_regularizer"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/layers/l2_regularizer", "k": [], "r": "r1.3", "t": "tf.contrib.layers.l2_regularizer"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/layers/layer_norm", "k": [], "r": "r1.3", "t": "tf.contrib.layers.layer_norm"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/layers/legacy_fully_connected", "k": [], "r": "r1.3", "t": "tf.contrib.layers.legacy_fully_connected"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/layers/make_place_holder_tensors_for_base_features", "k": [], "r": "r1.3", "t": "tf.contrib.layers.make_place_holder_tensors_for_base_features"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/layers/max_pool2d", "k": [], "r": "r1.3", "t": "tf.contrib.layers.max_pool2d"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/layers/max_pool3d", "k": [], "r": "r1.3", "t": "tf.contrib.layers.max_pool3d"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/layers/multi_class_target", "k": [], "r": "r1.3", "t": "tf.contrib.layers.multi_class_target"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/layers/one_hot_column", "k": [], "r": "r1.3", "t": "tf.contrib.layers.one_hot_column"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/layers/one_hot_encoding", "k": [], "r": "r1.3", "t": "tf.contrib.layers.one_hot_encoding"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/layers/optimize_loss", "k": [], "r": "r1.3", "t": "tf.contrib.layers.optimize_loss"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/layers/parse_feature_columns_from_examples", "k": [], "r": "r1.3", "t": "tf.contrib.layers.parse_feature_columns_from_examples"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/layers/parse_feature_columns_from_sequence_examples", "k": [], "r": "r1.3", "t": "tf.contrib.layers.parse_feature_columns_from_sequence_examples"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/layers/real_valued_column", "k": [], "r": "r1.3", "t": "tf.contrib.layers.real_valued_column"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/layers/regression_target", "k": [], "r": "r1.3", "t": "tf.contrib.layers.regression_target"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/layers/repeat", "k": [], "r": "r1.3", "t": "tf.contrib.layers.repeat"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/layers/safe_embedding_lookup_sparse", "k": [], "r": "r1.3", "t": "tf.contrib.layers.safe_embedding_lookup_sparse"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/layers/scattered_embedding_column", "k": [], "r": "r1.3", "t": "tf.contrib.layers.scattered_embedding_column"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/layers/separable_conv2d", "k": [], "r": "r1.3", "t": "tf.contrib.layers.separable_conv2d"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/layers/sequence_input_from_feature_columns", "k": [], "r": "r1.3", "t": "tf.contrib.layers.sequence_input_from_feature_columns"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/layers/shared_embedding_columns", "k": [], "r": "r1.3", "t": "tf.contrib.layers.shared_embedding_columns"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/layers/softmax", "k": [], "r": "r1.3", "t": "tf.contrib.layers.softmax"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/layers/sparse_column_with_hash_bucket", "k": [], "r": "r1.3", "t": "tf.contrib.layers.sparse_column_with_hash_bucket"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/layers/sparse_column_with_integerized_feature", "k": [], "r": "r1.3", "t": "tf.contrib.layers.sparse_column_with_integerized_feature"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/layers/sparse_column_with_keys", "k": [], "r": "r1.3", "t": "tf.contrib.layers.sparse_column_with_keys"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/layers/stack", "k": [], "r": "r1.3", "t": "tf.contrib.layers.stack"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/layers/sum_regularizer", "k": [], "r": "r1.3", "t": "tf.contrib.layers.sum_regularizer"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/layers/summaries", "k": [], "r": "r1.3", "t": "tf.contrib.layers.summaries"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/layers/summarize_activation", "k": [], "r": "r1.3", "t": "tf.contrib.layers.summarize_activation"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/layers/summarize_activations", "k": [], "r": "r1.3", "t": "tf.contrib.layers.summarize_activations"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/layers/summarize_collection", "k": [], "r": "r1.3", "t": "tf.contrib.layers.summarize_collection"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/layers/summarize_tensor", "k": [], "r": "r1.3", "t": "tf.contrib.layers.summarize_tensor"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/layers/summarize_tensors", "k": [], "r": "r1.3", "t": "tf.contrib.layers.summarize_tensors"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/layers/transform_features", "k": [], "r": "r1.3", "t": "tf.contrib.layers.transform_features"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/layers/unit_norm", "k": [], "r": "r1.3", "t": "tf.contrib.layers.unit_norm"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/layers/variance_scaling_initializer", "k": [], "r": "r1.3", "t": "tf.contrib.layers.variance_scaling_initializer"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/layers/weighted_sparse_column", "k": [], "r": "r1.3", "t": "tf.contrib.layers.weighted_sparse_column"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/layers/weighted_sum_from_feature_columns", "k": [], "r": "r1.3", "t": "tf.contrib.layers.weighted_sum_from_feature_columns"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/layers/xavier_initializer", "k": [], "r": "r1.3", "t": "tf.contrib.layers.xavier_initializer"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/learn", "k": [], "r": "r1.3", "t": "tf.contrib.learn"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/learn/BaseEstimator", "k": ["config", "model_dir", "__init__", "evaluate", "export", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "set_params"], "r": "r1.3", "t": "tf.contrib.learn.BaseEstimator"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/learn/DNNClassifier", "k": ["config", "model_dir", "__init__", "evaluate", "export", "export_savedmodel", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "predict_classes", "predict_proba", "set_params"], "r": "r1.3", "t": "tf.contrib.learn.DNNClassifier"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/learn/DNNEstimator", "k": ["config", "model_dir", "__init__", "evaluate", "export", "export_savedmodel", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "set_params"], "r": "r1.3", "t": "tf.contrib.learn.DNNEstimator"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/learn/DNNLinearCombinedClassifier", "k": ["config", "model_dir", "__init__", "evaluate", "export", "export_savedmodel", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "predict_classes", "predict_proba", "set_params"], "r": "r1.3", "t": "tf.contrib.learn.DNNLinearCombinedClassifier"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/learn/DNNLinearCombinedEstimator", "k": ["config", "model_dir", "__init__", "evaluate", "export", "export_savedmodel", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "set_params"], "r": "r1.3", "t": "tf.contrib.learn.DNNLinearCombinedEstimator"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/learn/DNNLinearCombinedRegressor", "k": ["config", "model_dir", "__init__", "evaluate", "export", "export_savedmodel", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "predict_scores", "set_params"], "r": "r1.3", "t": "tf.contrib.learn.DNNLinearCombinedRegressor"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/learn/DNNRegressor", "k": ["config", "model_dir", "__init__", "evaluate", "export", "export_savedmodel", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "predict_scores", "set_params"], "r": "r1.3", "t": "tf.contrib.learn.DNNRegressor"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/learn/DynamicRnnEstimator", "k": ["config", "model_dir", "__init__", "evaluate", "export", "export_savedmodel", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "set_params"], "r": "r1.3", "t": "tf.contrib.learn.DynamicRnnEstimator"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/learn/Estimator", "k": ["config", "model_dir", "__init__", "evaluate", "export", "export_savedmodel", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "set_params"], "r": "r1.3", "t": "tf.contrib.learn.Estimator"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/learn/Evaluable", "k": ["model_dir", "evaluate"], "r": "r1.3", "t": "tf.contrib.learn.Evaluable"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/learn/Experiment", "k": ["estimator", "eval_metrics", "eval_steps", "train_steps", "__init__", "continuous_eval", "continuous_eval_on_train_data", "continuous_train_and_eval", "evaluate", "extend_train_hooks", "local_run", "reset_export_strategies", "run_std_server", "test", "train", "train_and_evaluate"], "r": "r1.3", "t": "tf.contrib.learn.Experiment"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/learn/ExportStrategy", "k": ["export_fn", "name", "__new__", "export"], "r": "r1.3", "t": "tf.contrib.learn.ExportStrategy"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/learn/Head", "k": ["logits_dimension", "create_model_fn_ops"], "r": "r1.3", "t": "tf.contrib.learn.Head"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/learn/InputFnOps", "k": ["default_inputs", "features", "labels", "__new__"], "r": "r1.3", "t": "tf.contrib.learn.InputFnOps"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/learn/KMeansClustering", "k": ["config", "model_dir", "__init__", "clusters", "evaluate", "export", "export_savedmodel", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "predict_cluster_idx", "score", "set_params", "transform", "ALL_SCORES", "CLUSTERS", "CLUSTER_IDX", "COSINE_DISTANCE", "KMEANS_PLUS_PLUS_INIT", "LOSS_OP_NAME", "RANDOM_INIT", "SCORES", "SQUARED_EUCLIDEAN_DISTANCE"], "r": "r1.3", "t": "tf.contrib.learn.KMeansClustering"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/learn/LinearClassifier", "k": ["config", "model_dir", "__init__", "evaluate", "export", "export_savedmodel", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "predict_classes", "predict_proba", "set_params"], "r": "r1.3", "t": "tf.contrib.learn.LinearClassifier"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/learn/LinearEstimator", "k": ["config", "model_dir", "__init__", "evaluate", "export", "export_savedmodel", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "set_params"], "r": "r1.3", "t": "tf.contrib.learn.LinearEstimator"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/learn/LinearRegressor", "k": ["config", "model_dir", "__init__", "evaluate", "export", "export_savedmodel", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "predict_scores", "set_params"], "r": "r1.3", "t": "tf.contrib.learn.LinearRegressor"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/learn/LogisticRegressor", "k": [], "r": "r1.3", "t": "tf.contrib.learn.LogisticRegressor"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/learn/MetricSpec", "k": ["label_key", "metric_fn", "prediction_key", "weight_key", "__init__", "create_metric_ops"], "r": "r1.3", "t": "tf.contrib.learn.MetricSpec"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/learn/ModeKeys", "k": ["validate", "EVAL", "INFER", "TRAIN"], "r": "r1.3", "t": "tf.contrib.learn.ModeKeys"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/learn/ModelFnOps", "k": ["eval_metric_ops", "loss", "mode", "output_alternatives", "predictions", "scaffold", "train_op", "training_chief_hooks", "training_hooks", "__new__", "estimator_spec"], "r": "r1.3", "t": "tf.contrib.learn.ModelFnOps"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/learn/NanLossDuringTrainingError", "k": [], "r": "r1.3", "t": "tf.contrib.learn.NanLossDuringTrainingError"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/learn/NotFittedError", "k": [], "r": "r1.3", "t": "tf.contrib.learn.NotFittedError"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/learn/PredictionKey", "k": ["CLASSES", "GENERIC", "LOGISTIC", "LOGITS", "PROBABILITIES", "SCORES", "TOP_K"], "r": "r1.3", "t": "tf.contrib.learn.PredictionKey"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/learn/ProblemType", "k": ["CLASSIFICATION", "LINEAR_REGRESSION", "LOGISTIC_REGRESSION", "UNSPECIFIED"], "r": "r1.3", "t": "tf.contrib.learn.ProblemType"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/learn/RunConfig", "k": ["cluster_spec", "environment", "evaluation_master", "is_chief", "keep_checkpoint_every_n_hours", "keep_checkpoint_max", "log_step_count_steps", "master", "model_dir", "num_ps_replicas", "num_worker_replicas", "save_checkpoints_secs", "save_checkpoints_steps", "save_summary_steps", "session_config", "task_id", "task_type", "tf_config", "tf_random_seed", "__init__", "get_task_id", "replace", "uid"], "r": "r1.3", "t": "tf.contrib.learn.RunConfig"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/learn/SKCompat", "k": ["__init__", "fit", "get_params", "predict", "score", "set_params"], "r": "r1.3", "t": "tf.contrib.learn.SKCompat"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/learn/SVM", "k": ["config", "model_dir", "__init__", "evaluate", "export", "export_savedmodel", "export_with_defaults", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "predict_classes", "predict_proba", "set_params"], "r": "r1.3", "t": "tf.contrib.learn.SVM"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/learn/TaskType", "k": ["MASTER", "PS", "WORKER"], "r": "r1.3", "t": "tf.contrib.learn.TaskType"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/learn/Trainable", "k": ["fit"], "r": "r1.3", "t": "tf.contrib.learn.Trainable"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/learn/binary_svm_head", "k": [], "r": "r1.3", "t": "tf.contrib.learn.binary_svm_head"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/learn/build_parsing_serving_input_fn", "k": [], "r": "r1.3", "t": "tf.contrib.learn.build_parsing_serving_input_fn"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/learn/datasets", "k": [], "r": "r1.3", "t": "tf.contrib.learn.datasets"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/learn/evaluate", "k": [], "r": "r1.3", "t": "tf.contrib.learn.evaluate"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/learn/extract_dask_data", "k": [], "r": "r1.3", "t": "tf.contrib.learn.extract_dask_data"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/learn/extract_dask_labels", "k": [], "r": "r1.3", "t": "tf.contrib.learn.extract_dask_labels"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/learn/extract_pandas_data", "k": [], "r": "r1.3", "t": "tf.contrib.learn.extract_pandas_data"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/learn/extract_pandas_labels", "k": [], "r": "r1.3", "t": "tf.contrib.learn.extract_pandas_labels"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/learn/extract_pandas_matrix", "k": [], "r": "r1.3", "t": "tf.contrib.learn.extract_pandas_matrix"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/learn/graph_actions", "k": [], "r": "r1.3", "t": "tf.contrib.learn.graph_actions"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/learn/head", "k": [], "r": "r1.3", "t": "tf.contrib.learn.head"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/learn/infer", "k": [], "r": "r1.3", "t": "tf.contrib.learn.infer"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/learn/infer_real_valued_columns_from_input", "k": [], "r": "r1.3", "t": "tf.contrib.learn.infer_real_valued_columns_from_input"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/learn/infer_real_valued_columns_from_input_fn", "k": [], "r": "r1.3", "t": "tf.contrib.learn.infer_real_valued_columns_from_input_fn"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/learn/io", "k": [], "r": "r1.3", "t": "tf.contrib.learn.io"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/learn/learn_runner", "k": [], "r": "r1.3", "t": "tf.contrib.learn.learn_runner"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/learn/learn_runner/run", "k": [], "r": "r1.3", "t": "tf.contrib.learn.learn_runner.run"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/learn/learn_runner/tune", "k": [], "r": "r1.3", "t": "tf.contrib.learn.learn_runner.tune"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/learn/make_export_strategy", "k": [], "r": "r1.3", "t": "tf.contrib.learn.make_export_strategy"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/learn/models", "k": [], "r": "r1.3", "t": "tf.contrib.learn.models"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/learn/monitors", "k": [], "r": "r1.3", "t": "tf.contrib.learn.monitors"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/learn/multi_class_head", "k": [], "r": "r1.3", "t": "tf.contrib.learn.multi_class_head"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/learn/multi_head", "k": [], "r": "r1.3", "t": "tf.contrib.learn.multi_head"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/learn/multi_label_head", "k": [], "r": "r1.3", "t": "tf.contrib.learn.multi_label_head"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/learn/no_op_train_fn", "k": [], "r": "r1.3", "t": "tf.contrib.learn.no_op_train_fn"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/learn/ops", "k": [], "r": "r1.3", "t": "tf.contrib.learn.ops"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/learn/poisson_regression_head", "k": [], "r": "r1.3", "t": "tf.contrib.learn.poisson_regression_head"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/learn/preprocessing", "k": [], "r": "r1.3", "t": "tf.contrib.learn.preprocessing"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/learn/read_batch_examples", "k": [], "r": "r1.3", "t": "tf.contrib.learn.read_batch_examples"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/learn/read_batch_features", "k": [], "r": "r1.3", "t": "tf.contrib.learn.read_batch_features"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/learn/read_batch_record_features", "k": [], "r": "r1.3", "t": "tf.contrib.learn.read_batch_record_features"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/learn/regression_head", "k": [], "r": "r1.3", "t": "tf.contrib.learn.regression_head"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/learn/run_feeds", "k": [], "r": "r1.3", "t": "tf.contrib.learn.run_feeds"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/learn/run_n", "k": [], "r": "r1.3", "t": "tf.contrib.learn.run_n"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/learn/train", "k": [], "r": "r1.3", "t": "tf.contrib.learn.train"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/learn/utils", "k": [], "r": "r1.3", "t": "tf.contrib.learn.utils"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/legacy_seq2seq", "k": [], "r": "r1.3", "t": "tf.contrib.legacy_seq2seq"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/legacy_seq2seq/attention_decoder", "k": [], "r": "r1.3", "t": "tf.contrib.legacy_seq2seq.attention_decoder"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/legacy_seq2seq/basic_rnn_seq2seq", "k": [], "r": "r1.3", "t": "tf.contrib.legacy_seq2seq.basic_rnn_seq2seq"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/legacy_seq2seq/embedding_attention_decoder", "k": [], "r": "r1.3", "t": "tf.contrib.legacy_seq2seq.embedding_attention_decoder"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/legacy_seq2seq/embedding_attention_seq2seq", "k": [], "r": "r1.3", "t": "tf.contrib.legacy_seq2seq.embedding_attention_seq2seq"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/legacy_seq2seq/embedding_rnn_decoder", "k": [], "r": "r1.3", "t": "tf.contrib.legacy_seq2seq.embedding_rnn_decoder"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/legacy_seq2seq/embedding_rnn_seq2seq", "k": [], "r": "r1.3", "t": "tf.contrib.legacy_seq2seq.embedding_rnn_seq2seq"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/legacy_seq2seq/embedding_tied_rnn_seq2seq", "k": [], "r": "r1.3", "t": "tf.contrib.legacy_seq2seq.embedding_tied_rnn_seq2seq"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/legacy_seq2seq/model_with_buckets", "k": [], "r": "r1.3", "t": "tf.contrib.legacy_seq2seq.model_with_buckets"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/legacy_seq2seq/one2many_rnn_seq2seq", "k": [], "r": "r1.3", "t": "tf.contrib.legacy_seq2seq.one2many_rnn_seq2seq"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/legacy_seq2seq/rnn_decoder", "k": [], "r": "r1.3", "t": "tf.contrib.legacy_seq2seq.rnn_decoder"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/legacy_seq2seq/sequence_loss", "k": [], "r": "r1.3", "t": "tf.contrib.legacy_seq2seq.sequence_loss"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/legacy_seq2seq/sequence_loss_by_example", "k": [], "r": "r1.3", "t": "tf.contrib.legacy_seq2seq.sequence_loss_by_example"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/legacy_seq2seq/tied_rnn_seq2seq", "k": [], "r": "r1.3", "t": "tf.contrib.legacy_seq2seq.tied_rnn_seq2seq"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/linalg", "k": [], "r": "r1.3", "t": "tf.contrib.linalg"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/linalg/LinearOperator", "k": ["batch_shape", "domain_dimension", "dtype", "graph_parents", "is_non_singular", "is_positive_definite", "is_self_adjoint", "is_square", "name", "range_dimension", "shape", "tensor_rank", "__init__", "add_to_tensor", "assert_non_singular", "assert_positive_definite", "assert_self_adjoint", "batch_shape_tensor", "determinant", "diag_part", "domain_dimension_tensor", "log_abs_determinant", "matmul", "matvec", "range_dimension_tensor", "shape_tensor", "solve", "solvevec", "tensor_rank_tensor", "to_dense", "trace"], "r": "r1.3", "t": "tf.contrib.linalg.LinearOperator"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/linalg/LinearOperatorComposition", "k": ["batch_shape", "domain_dimension", "dtype", "graph_parents", "is_non_singular", "is_positive_definite", "is_self_adjoint", "is_square", "name", "operators", "range_dimension", "shape", "tensor_rank", "__init__", "add_to_tensor", "assert_non_singular", "assert_positive_definite", "assert_self_adjoint", "batch_shape_tensor", "determinant", "diag_part", "domain_dimension_tensor", "log_abs_determinant", "matmul", "matvec", "range_dimension_tensor", "shape_tensor", "solve", "solvevec", "tensor_rank_tensor", "to_dense", "trace"], "r": "r1.3", "t": "tf.contrib.linalg.LinearOperatorComposition"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/linalg/LinearOperatorDiag", "k": ["batch_shape", "diag", "domain_dimension", "dtype", "graph_parents", "is_non_singular", "is_positive_definite", "is_self_adjoint", "is_square", "name", "range_dimension", "shape", "tensor_rank", "__init__", "add_to_tensor", "assert_non_singular", "assert_positive_definite", "assert_self_adjoint", "batch_shape_tensor", "determinant", "diag_part", "domain_dimension_tensor", "log_abs_determinant", "matmul", "matvec", "range_dimension_tensor", "shape_tensor", "solve", "solvevec", "tensor_rank_tensor", "to_dense", "trace"], "r": "r1.3", "t": "tf.contrib.linalg.LinearOperatorDiag"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/linalg/LinearOperatorFullMatrix", "k": ["batch_shape", "domain_dimension", "dtype", "graph_parents", "is_non_singular", "is_positive_definite", "is_self_adjoint", "is_square", "name", "range_dimension", "shape", "tensor_rank", "__init__", "add_to_tensor", "assert_non_singular", "assert_positive_definite", "assert_self_adjoint", "batch_shape_tensor", "determinant", "diag_part", "domain_dimension_tensor", "log_abs_determinant", "matmul", "matvec", "range_dimension_tensor", "shape_tensor", "solve", "solvevec", "tensor_rank_tensor", "to_dense", "trace"], "r": "r1.3", "t": "tf.contrib.linalg.LinearOperatorFullMatrix"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/linalg/LinearOperatorIdentity", "k": ["batch_shape", "domain_dimension", "dtype", "graph_parents", "is_non_singular", "is_positive_definite", "is_self_adjoint", "is_square", "name", "range_dimension", "shape", "tensor_rank", "__init__", "add_to_tensor", "assert_non_singular", "assert_positive_definite", "assert_self_adjoint", "batch_shape_tensor", "determinant", "diag_part", "domain_dimension_tensor", "log_abs_determinant", "matmul", "matvec", "range_dimension_tensor", "shape_tensor", "solve", "solvevec", "tensor_rank_tensor", "to_dense", "trace"], "r": "r1.3", "t": "tf.contrib.linalg.LinearOperatorIdentity"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/linalg/LinearOperatorScaledIdentity", "k": ["batch_shape", "domain_dimension", "dtype", "graph_parents", "is_non_singular", "is_positive_definite", "is_self_adjoint", "is_square", "multiplier", "name", "range_dimension", "shape", "tensor_rank", "__init__", "add_to_tensor", "assert_non_singular", "assert_positive_definite", "assert_self_adjoint", "batch_shape_tensor", "determinant", "diag_part", "domain_dimension_tensor", "log_abs_determinant", "matmul", "matvec", "range_dimension_tensor", "shape_tensor", "solve", "solvevec", "tensor_rank_tensor", "to_dense", "trace"], "r": "r1.3", "t": "tf.contrib.linalg.LinearOperatorScaledIdentity"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/linalg/LinearOperatorTriL", "k": ["batch_shape", "domain_dimension", "dtype", "graph_parents", "is_non_singular", "is_positive_definite", "is_self_adjoint", "is_square", "name", "range_dimension", "shape", "tensor_rank", "__init__", "add_to_tensor", "assert_non_singular", "assert_positive_definite", "assert_self_adjoint", "batch_shape_tensor", "determinant", "diag_part", "domain_dimension_tensor", "log_abs_determinant", "matmul", "matvec", "range_dimension_tensor", "shape_tensor", "solve", "solvevec", "tensor_rank_tensor", "to_dense", "trace"], "r": "r1.3", "t": "tf.contrib.linalg.LinearOperatorTriL"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/linalg/LinearOperatorUDVHUpdate", "k": ["base_operator", "batch_shape", "diag_operator", "diag_update", "domain_dimension", "dtype", "graph_parents", "is_diag_update_positive", "is_non_singular", "is_positive_definite", "is_self_adjoint", "is_square", "name", "range_dimension", "shape", "tensor_rank", "u", "v", "__init__", "add_to_tensor", "assert_non_singular", "assert_positive_definite", "assert_self_adjoint", "batch_shape_tensor", "determinant", "diag_part", "domain_dimension_tensor", "log_abs_determinant", "matmul", "matvec", "range_dimension_tensor", "shape_tensor", "solve", "solvevec", "tensor_rank_tensor", "to_dense", "trace"], "r": "r1.3", "t": "tf.contrib.linalg.LinearOperatorUDVHUpdate"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/linear_optimizer", "k": [], "r": "r1.3", "t": "tf.contrib.linear_optimizer"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/linear_optimizer/SDCAOptimizer", "k": ["example_id_column", "num_loss_partitions", "num_table_shards", "symmetric_l1_regularization", "symmetric_l2_regularization", "__init__", "get_name", "get_train_step"], "r": "r1.3", "t": "tf.contrib.linear_optimizer.SDCAOptimizer"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/linear_optimizer/SdcaModel", "k": ["__init__", "approximate_duality_gap", "minimize", "predictions", "regularized_loss", "unregularized_loss", "update_weights"], "r": "r1.3", "t": "tf.contrib.linear_optimizer.SdcaModel"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/linear_optimizer/SparseFeatureColumn", "k": ["example_indices", "feature_indices", "feature_values", "__init__"], "r": "r1.3", "t": "tf.contrib.linear_optimizer.SparseFeatureColumn"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/lookup", "k": ["FastHashSpec"], "r": "r1.3", "t": "tf.contrib.lookup"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/lookup/HashTable", "k": ["default_value", "init", "key_dtype", "name", "table_ref", "value_dtype", "__init__", "lookup", "size"], "r": "r1.3", "t": "tf.contrib.lookup.HashTable"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/lookup/HasherSpec", "k": ["hasher", "key", "__new__"], "r": "r1.3", "t": "tf.contrib.lookup.HasherSpec"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/lookup/IdTableWithHashBuckets", "k": ["init", "key_dtype", "name", "value_dtype", "__init__", "lookup", "size"], "r": "r1.3", "t": "tf.contrib.lookup.IdTableWithHashBuckets"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/lookup/InitializableLookupTableBase", "k": ["default_value", "init", "key_dtype", "name", "table_ref", "value_dtype", "__init__", "lookup", "size"], "r": "r1.3", "t": "tf.contrib.lookup.InitializableLookupTableBase"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/lookup/KeyValueTensorInitializer", "k": ["key_dtype", "value_dtype", "__init__", "initialize"], "r": "r1.3", "t": "tf.contrib.lookup.KeyValueTensorInitializer"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/lookup/LookupInterface", "k": ["init", "key_dtype", "name", "value_dtype", "__init__", "lookup", "size"], "r": "r1.3", "t": "tf.contrib.lookup.LookupInterface"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/lookup/MutableDenseHashTable", "k": ["init", "key_dtype", "name", "value_dtype", "__init__", "export", "insert", "lookup", "size"], "r": "r1.3", "t": "tf.contrib.lookup.MutableDenseHashTable"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/lookup/MutableHashTable", "k": ["init", "key_dtype", "name", "value_dtype", "__init__", "export", "insert", "lookup", "size"], "r": "r1.3", "t": "tf.contrib.lookup.MutableHashTable"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/lookup/StrongHashSpec", "k": ["hasher", "key", "__new__"], "r": "r1.3", "t": "tf.contrib.lookup.StrongHashSpec"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/lookup/TableInitializerBase", "k": ["key_dtype", "value_dtype", "__init__", "initialize"], "r": "r1.3", "t": "tf.contrib.lookup.TableInitializerBase"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/lookup/TextFileIdTableInitializer", "k": ["key_dtype", "value_dtype", "__init__", "initialize"], "r": "r1.3", "t": "tf.contrib.lookup.TextFileIdTableInitializer"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/lookup/TextFileIndex", "k": ["LINE_NUMBER", "WHOLE_LINE"], "r": "r1.3", "t": "tf.contrib.lookup.TextFileIndex"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/lookup/TextFileInitializer", "k": ["key_dtype", "value_dtype", "__init__", "initialize"], "r": "r1.3", "t": "tf.contrib.lookup.TextFileInitializer"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/lookup/TextFileStringTableInitializer", "k": ["key_dtype", "value_dtype", "__init__", "initialize"], "r": "r1.3", "t": "tf.contrib.lookup.TextFileStringTableInitializer"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/lookup/index_table_from_file", "k": [], "r": "r1.3", "t": "tf.contrib.lookup.index_table_from_file"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/lookup/index_table_from_tensor", "k": [], "r": "r1.3", "t": "tf.contrib.lookup.index_table_from_tensor"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/lookup/index_to_string", "k": [], "r": "r1.3", "t": "tf.contrib.lookup.index_to_string"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/lookup/index_to_string_table_from_file", "k": [], "r": "r1.3", "t": "tf.contrib.lookup.index_to_string_table_from_file"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/lookup/index_to_string_table_from_tensor", "k": [], "r": "r1.3", "t": "tf.contrib.lookup.index_to_string_table_from_tensor"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/lookup/string_to_index", "k": [], "r": "r1.3", "t": "tf.contrib.lookup.string_to_index"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/lookup/string_to_index_table_from_file", "k": [], "r": "r1.3", "t": "tf.contrib.lookup.string_to_index_table_from_file"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/lookup/string_to_index_table_from_tensor", "k": [], "r": "r1.3", "t": "tf.contrib.lookup.string_to_index_table_from_tensor"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/losses", "k": [], "r": "r1.3", "t": "tf.contrib.losses"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/losses/absolute_difference", "k": [], "r": "r1.3", "t": "tf.contrib.losses.absolute_difference"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/losses/add_loss", "k": [], "r": "r1.3", "t": "tf.contrib.losses.add_loss"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/losses/compute_weighted_loss", "k": [], "r": "r1.3", "t": "tf.contrib.losses.compute_weighted_loss"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/losses/cosine_distance", "k": [], "r": "r1.3", "t": "tf.contrib.losses.cosine_distance"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/losses/get_losses", "k": [], "r": "r1.3", "t": "tf.contrib.losses.get_losses"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/losses/get_regularization_losses", "k": [], "r": "r1.3", "t": "tf.contrib.losses.get_regularization_losses"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/losses/get_total_loss", "k": [], "r": "r1.3", "t": "tf.contrib.losses.get_total_loss"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/losses/hinge_loss", "k": [], "r": "r1.3", "t": "tf.contrib.losses.hinge_loss"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/losses/log_loss", "k": [], "r": "r1.3", "t": "tf.contrib.losses.log_loss"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/losses/mean_pairwise_squared_error", "k": [], "r": "r1.3", "t": "tf.contrib.losses.mean_pairwise_squared_error"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/losses/mean_squared_error", "k": [], "r": "r1.3", "t": "tf.contrib.losses.mean_squared_error"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/losses/sigmoid_cross_entropy", "k": [], "r": "r1.3", "t": "tf.contrib.losses.sigmoid_cross_entropy"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/losses/softmax_cross_entropy", "k": [], "r": "r1.3", "t": "tf.contrib.losses.softmax_cross_entropy"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/losses/sparse_softmax_cross_entropy", "k": [], "r": "r1.3", "t": "tf.contrib.losses.sparse_softmax_cross_entropy"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/memory_stats", "k": [], "r": "r1.3", "t": "tf.contrib.memory_stats"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/memory_stats/BytesLimit", "k": [], "r": "r1.3", "t": "tf.contrib.memory_stats.BytesLimit"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/memory_stats/MaxBytesInUse", "k": [], "r": "r1.3", "t": "tf.contrib.memory_stats.MaxBytesInUse"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/metrics", "k": [], "r": "r1.3", "t": "tf.contrib.metrics"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/metrics/accuracy", "k": [], "r": "r1.3", "t": "tf.contrib.metrics.accuracy"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/metrics/aggregate_metric_map", "k": [], "r": "r1.3", "t": "tf.contrib.metrics.aggregate_metric_map"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/metrics/aggregate_metrics", "k": [], "r": "r1.3", "t": "tf.contrib.metrics.aggregate_metrics"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/metrics/auc_using_histogram", "k": [], "r": "r1.3", "t": "tf.contrib.metrics.auc_using_histogram"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/metrics/confusion_matrix", "k": [], "r": "r1.3", "t": "tf.contrib.metrics.confusion_matrix"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/metrics/streaming_accuracy", "k": [], "r": "r1.3", "t": "tf.contrib.metrics.streaming_accuracy"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/metrics/streaming_auc", "k": [], "r": "r1.3", "t": "tf.contrib.metrics.streaming_auc"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/metrics/streaming_concat", "k": [], "r": "r1.3", "t": "tf.contrib.metrics.streaming_concat"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/metrics/streaming_covariance", "k": [], "r": "r1.3", "t": "tf.contrib.metrics.streaming_covariance"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/metrics/streaming_curve_points", "k": [], "r": "r1.3", "t": "tf.contrib.metrics.streaming_curve_points"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/metrics/streaming_false_negatives", "k": [], "r": "r1.3", "t": "tf.contrib.metrics.streaming_false_negatives"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/metrics/streaming_false_negatives_at_thresholds", "k": [], "r": "r1.3", "t": "tf.contrib.metrics.streaming_false_negatives_at_thresholds"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/metrics/streaming_false_positives", "k": [], "r": "r1.3", "t": "tf.contrib.metrics.streaming_false_positives"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/metrics/streaming_false_positives_at_thresholds", "k": [], "r": "r1.3", "t": "tf.contrib.metrics.streaming_false_positives_at_thresholds"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/metrics/streaming_mean", "k": [], "r": "r1.3", "t": "tf.contrib.metrics.streaming_mean"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/metrics/streaming_mean_absolute_error", "k": [], "r": "r1.3", "t": "tf.contrib.metrics.streaming_mean_absolute_error"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/metrics/streaming_mean_cosine_distance", "k": [], "r": "r1.3", "t": "tf.contrib.metrics.streaming_mean_cosine_distance"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/metrics/streaming_mean_iou", "k": [], "r": "r1.3", "t": "tf.contrib.metrics.streaming_mean_iou"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/metrics/streaming_mean_relative_error", "k": [], "r": "r1.3", "t": "tf.contrib.metrics.streaming_mean_relative_error"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/metrics/streaming_mean_squared_error", "k": [], "r": "r1.3", "t": "tf.contrib.metrics.streaming_mean_squared_error"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/metrics/streaming_mean_tensor", "k": [], "r": "r1.3", "t": "tf.contrib.metrics.streaming_mean_tensor"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/metrics/streaming_pearson_correlation", "k": [], "r": "r1.3", "t": "tf.contrib.metrics.streaming_pearson_correlation"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/metrics/streaming_percentage_less", "k": [], "r": "r1.3", "t": "tf.contrib.metrics.streaming_percentage_less"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/metrics/streaming_precision", "k": [], "r": "r1.3", "t": "tf.contrib.metrics.streaming_precision"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/metrics/streaming_precision_at_thresholds", "k": [], "r": "r1.3", "t": "tf.contrib.metrics.streaming_precision_at_thresholds"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/metrics/streaming_recall", "k": [], "r": "r1.3", "t": "tf.contrib.metrics.streaming_recall"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/metrics/streaming_recall_at_k", "k": [], "r": "r1.3", "t": "tf.contrib.metrics.streaming_recall_at_k"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/metrics/streaming_recall_at_thresholds", "k": [], "r": "r1.3", "t": "tf.contrib.metrics.streaming_recall_at_thresholds"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/metrics/streaming_root_mean_squared_error", "k": [], "r": "r1.3", "t": "tf.contrib.metrics.streaming_root_mean_squared_error"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/metrics/streaming_sensitivity_at_specificity", "k": [], "r": "r1.3", "t": "tf.contrib.metrics.streaming_sensitivity_at_specificity"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/metrics/streaming_sparse_average_precision_at_k", "k": [], "r": "r1.3", "t": "tf.contrib.metrics.streaming_sparse_average_precision_at_k"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/metrics/streaming_sparse_average_precision_at_top_k", "k": [], "r": "r1.3", "t": "tf.contrib.metrics.streaming_sparse_average_precision_at_top_k"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/metrics/streaming_sparse_precision_at_k", "k": [], "r": "r1.3", "t": "tf.contrib.metrics.streaming_sparse_precision_at_k"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/metrics/streaming_sparse_precision_at_top_k", "k": [], "r": "r1.3", "t": "tf.contrib.metrics.streaming_sparse_precision_at_top_k"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/metrics/streaming_sparse_recall_at_k", "k": [], "r": "r1.3", "t": "tf.contrib.metrics.streaming_sparse_recall_at_k"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/metrics/streaming_specificity_at_sensitivity", "k": [], "r": "r1.3", "t": "tf.contrib.metrics.streaming_specificity_at_sensitivity"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/metrics/streaming_true_negatives", "k": [], "r": "r1.3", "t": "tf.contrib.metrics.streaming_true_negatives"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/metrics/streaming_true_negatives_at_thresholds", "k": [], "r": "r1.3", "t": "tf.contrib.metrics.streaming_true_negatives_at_thresholds"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/metrics/streaming_true_positives", "k": [], "r": "r1.3", "t": "tf.contrib.metrics.streaming_true_positives"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/metrics/streaming_true_positives_at_thresholds", "k": [], "r": "r1.3", "t": "tf.contrib.metrics.streaming_true_positives_at_thresholds"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/nccl", "k": [], "r": "r1.3", "t": "tf.contrib.nccl"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/nccl/all_max", "k": [], "r": "r1.3", "t": "tf.contrib.nccl.all_max"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/nccl/all_min", "k": [], "r": "r1.3", "t": "tf.contrib.nccl.all_min"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/nccl/all_prod", "k": [], "r": "r1.3", "t": "tf.contrib.nccl.all_prod"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/nccl/all_sum", "k": [], "r": "r1.3", "t": "tf.contrib.nccl.all_sum"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/nccl/broadcast", "k": [], "r": "r1.3", "t": "tf.contrib.nccl.broadcast"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/ndlstm", "k": [], "r": "r1.3", "t": "tf.contrib.ndlstm"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/nn", "k": [], "r": "r1.3", "t": "tf.contrib.nn"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/nn/deprecated_flipped_sigmoid_cross_entropy_with_logits", "k": [], "r": "r1.3", "t": "tf.contrib.nn.deprecated_flipped_sigmoid_cross_entropy_with_logits"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/nn/deprecated_flipped_softmax_cross_entropy_with_logits", "k": [], "r": "r1.3", "t": "tf.contrib.nn.deprecated_flipped_softmax_cross_entropy_with_logits"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/nn/deprecated_flipped_sparse_softmax_cross_entropy_with_logits", "k": [], "r": "r1.3", "t": "tf.contrib.nn.deprecated_flipped_sparse_softmax_cross_entropy_with_logits"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/nn/rank_sampled_softmax_loss", "k": [], "r": "r1.3", "t": "tf.contrib.nn.rank_sampled_softmax_loss"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/opt", "k": [], "r": "r1.3", "t": "tf.contrib.opt"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/opt/DelayCompensatedGradientDescentOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.3", "t": "tf.contrib.opt.DelayCompensatedGradientDescentOptimizer"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/opt/DropStaleGradientOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.3", "t": "tf.contrib.opt.DropStaleGradientOptimizer"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/opt/ExternalOptimizerInterface", "k": ["__init__", "minimize"], "r": "r1.3", "t": "tf.contrib.opt.ExternalOptimizerInterface"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/opt/LazyAdamOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.3", "t": "tf.contrib.opt.LazyAdamOptimizer"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/opt/MovingAverageOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "swapping_saver", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.3", "t": "tf.contrib.opt.MovingAverageOptimizer"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/opt/NadamOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.3", "t": "tf.contrib.opt.NadamOptimizer"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/opt/ScipyOptimizerInterface", "k": ["__init__", "minimize"], "r": "r1.3", "t": "tf.contrib.opt.ScipyOptimizerInterface"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/opt/VariableClippingOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.3", "t": "tf.contrib.opt.VariableClippingOptimizer"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/predictor", "k": [], "r": "r1.3", "t": "tf.contrib.predictor"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/predictor/from_contrib_estimator", "k": [], "r": "r1.3", "t": "tf.contrib.predictor.from_contrib_estimator"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/predictor/from_estimator", "k": [], "r": "r1.3", "t": "tf.contrib.predictor.from_estimator"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/predictor/from_saved_model", "k": [], "r": "r1.3", "t": "tf.contrib.predictor.from_saved_model"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/quantization", "k": [], "r": "r1.3", "t": "tf.contrib.quantization"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/remote_fused_graph", "k": [], "r": "r1.3", "t": "tf.contrib.remote_fused_graph"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/remote_fused_graph/remote_fused_graph_execute", "k": [], "r": "r1.3", "t": "tf.contrib.remote_fused_graph.remote_fused_graph_execute"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/resampler", "k": [], "r": "r1.3", "t": "tf.contrib.resampler"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/resampler/resampler", "k": [], "r": "r1.3", "t": "tf.contrib.resampler.resampler"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/rnn", "k": [], "r": "r1.3", "t": "tf.contrib.rnn"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/rnn/AttentionCellWrapper", "k": ["graph", "losses", "non_trainable_variables", "non_trainable_weights", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "get_losses_for", "get_updates_for", "zero_state"], "r": "r1.3", "t": "tf.contrib.rnn.AttentionCellWrapper"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/rnn/BasicLSTMCell", "k": ["graph", "losses", "non_trainable_variables", "non_trainable_weights", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "get_losses_for", "get_updates_for", "zero_state"], "r": "r1.3", "t": "tf.contrib.rnn.BasicLSTMCell"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/rnn/BasicRNNCell", "k": ["graph", "losses", "non_trainable_variables", "non_trainable_weights", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "get_losses_for", "get_updates_for", "zero_state"], "r": "r1.3", "t": "tf.contrib.rnn.BasicRNNCell"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/rnn/BidirectionalGridLSTMCell", "k": ["graph", "losses", "non_trainable_variables", "non_trainable_weights", "output_size", "scope_name", "state_size", "state_tuple_type", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "get_losses_for", "get_updates_for", "zero_state"], "r": "r1.3", "t": "tf.contrib.rnn.BidirectionalGridLSTMCell"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/rnn/CompiledWrapper", "k": ["graph", "losses", "non_trainable_variables", "non_trainable_weights", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "get_losses_for", "get_updates_for", "zero_state"], "r": "r1.3", "t": "tf.contrib.rnn.CompiledWrapper"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/rnn/CoupledInputForgetGateLSTMCell", "k": ["graph", "losses", "non_trainable_variables", "non_trainable_weights", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "get_losses_for", "get_updates_for", "zero_state"], "r": "r1.3", "t": "tf.contrib.rnn.CoupledInputForgetGateLSTMCell"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/rnn/DeviceWrapper", "k": ["graph", "losses", "non_trainable_variables", "non_trainable_weights", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "get_losses_for", "get_updates_for", "zero_state"], "r": "r1.3", "t": "tf.contrib.rnn.DeviceWrapper"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/rnn/DropoutWrapper", "k": ["graph", "losses", "non_trainable_variables", "non_trainable_weights", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "get_losses_for", "get_updates_for", "zero_state"], "r": "r1.3", "t": "tf.contrib.rnn.DropoutWrapper"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/rnn/EmbeddingWrapper", "k": ["graph", "losses", "non_trainable_variables", "non_trainable_weights", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "get_losses_for", "get_updates_for", "zero_state"], "r": "r1.3", "t": "tf.contrib.rnn.EmbeddingWrapper"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/rnn/FusedRNNCell", "k": ["__call__"], "r": "r1.3", "t": "tf.contrib.rnn.FusedRNNCell"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/rnn/FusedRNNCellAdaptor", "k": ["__call__", "__init__"], "r": "r1.3", "t": "tf.contrib.rnn.FusedRNNCellAdaptor"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/rnn/GLSTMCell", "k": ["graph", "losses", "non_trainable_variables", "non_trainable_weights", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "get_losses_for", "get_updates_for", "zero_state"], "r": "r1.3", "t": "tf.contrib.rnn.GLSTMCell"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/rnn/GRUBlockCell", "k": ["graph", "losses", "non_trainable_variables", "non_trainable_weights", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "get_losses_for", "get_updates_for", "zero_state"], "r": "r1.3", "t": "tf.contrib.rnn.GRUBlockCell"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/rnn/GRUCell", "k": ["graph", "losses", "non_trainable_variables", "non_trainable_weights", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "get_losses_for", "get_updates_for", "zero_state"], "r": "r1.3", "t": "tf.contrib.rnn.GRUCell"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/rnn/GridLSTMCell", "k": ["graph", "losses", "non_trainable_variables", "non_trainable_weights", "output_size", "scope_name", "state_size", "state_tuple_type", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "get_losses_for", "get_updates_for", "zero_state"], "r": "r1.3", "t": "tf.contrib.rnn.GridLSTMCell"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/rnn/HighwayWrapper", "k": ["graph", "losses", "non_trainable_variables", "non_trainable_weights", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "get_losses_for", "get_updates_for", "zero_state"], "r": "r1.3", "t": "tf.contrib.rnn.HighwayWrapper"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/rnn/InputProjectionWrapper", "k": ["graph", "losses", "non_trainable_variables", "non_trainable_weights", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "get_losses_for", "get_updates_for", "zero_state"], "r": "r1.3", "t": "tf.contrib.rnn.InputProjectionWrapper"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/rnn/IntersectionRNNCell", "k": ["graph", "losses", "non_trainable_variables", "non_trainable_weights", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "get_losses_for", "get_updates_for", "zero_state"], "r": "r1.3", "t": "tf.contrib.rnn.IntersectionRNNCell"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/rnn/LSTMBlockCell", "k": ["graph", "losses", "non_trainable_variables", "non_trainable_weights", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "get_losses_for", "get_updates_for", "zero_state"], "r": "r1.3", "t": "tf.contrib.rnn.LSTMBlockCell"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/rnn/LSTMBlockFusedCell", "k": ["num_units", "__call__", "__init__"], "r": "r1.3", "t": "tf.contrib.rnn.LSTMBlockFusedCell"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/rnn/LSTMBlockWrapper", "k": ["num_units", "__call__"], "r": "r1.3", "t": "tf.contrib.rnn.LSTMBlockWrapper"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/rnn/LSTMCell", "k": ["graph", "losses", "non_trainable_variables", "non_trainable_weights", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "get_losses_for", "get_updates_for", "zero_state"], "r": "r1.3", "t": "tf.contrib.rnn.LSTMCell"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/rnn/LSTMStateTuple", "k": ["c", "dtype", "h", "__new__"], "r": "r1.3", "t": "tf.contrib.rnn.LSTMStateTuple"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/rnn/LayerNormBasicLSTMCell", "k": ["graph", "losses", "non_trainable_variables", "non_trainable_weights", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "get_losses_for", "get_updates_for", "zero_state"], "r": "r1.3", "t": "tf.contrib.rnn.LayerNormBasicLSTMCell"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/rnn/MultiRNNCell", "k": ["graph", "losses", "non_trainable_variables", "non_trainable_weights", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "get_losses_for", "get_updates_for", "zero_state"], "r": "r1.3", "t": "tf.contrib.rnn.MultiRNNCell"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/rnn/NASCell", "k": ["graph", "losses", "non_trainable_variables", "non_trainable_weights", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "get_losses_for", "get_updates_for", "zero_state"], "r": "r1.3", "t": "tf.contrib.rnn.NASCell"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/rnn/OutputProjectionWrapper", "k": ["graph", "losses", "non_trainable_variables", "non_trainable_weights", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "get_losses_for", "get_updates_for", "zero_state"], "r": "r1.3", "t": "tf.contrib.rnn.OutputProjectionWrapper"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/rnn/PhasedLSTMCell", "k": ["graph", "losses", "non_trainable_variables", "non_trainable_weights", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "get_losses_for", "get_updates_for", "zero_state"], "r": "r1.3", "t": "tf.contrib.rnn.PhasedLSTMCell"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/rnn/RNNCell", "k": ["graph", "losses", "non_trainable_variables", "non_trainable_weights", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "get_losses_for", "get_updates_for", "zero_state"], "r": "r1.3", "t": "tf.contrib.rnn.RNNCell"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/rnn/ResidualWrapper", "k": ["graph", "losses", "non_trainable_variables", "non_trainable_weights", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "get_losses_for", "get_updates_for", "zero_state"], "r": "r1.3", "t": "tf.contrib.rnn.ResidualWrapper"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/rnn/TimeFreqLSTMCell", "k": ["graph", "losses", "non_trainable_variables", "non_trainable_weights", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "get_losses_for", "get_updates_for", "zero_state"], "r": "r1.3", "t": "tf.contrib.rnn.TimeFreqLSTMCell"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/rnn/TimeReversedFusedRNN", "k": ["__call__", "__init__"], "r": "r1.3", "t": "tf.contrib.rnn.TimeReversedFusedRNN"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/rnn/UGRNNCell", "k": ["graph", "losses", "non_trainable_variables", "non_trainable_weights", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "get_losses_for", "get_updates_for", "zero_state"], "r": "r1.3", "t": "tf.contrib.rnn.UGRNNCell"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/rnn/stack_bidirectional_dynamic_rnn", "k": [], "r": "r1.3", "t": "tf.contrib.rnn.stack_bidirectional_dynamic_rnn"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/rnn/stack_bidirectional_rnn", "k": [], "r": "r1.3", "t": "tf.contrib.rnn.stack_bidirectional_rnn"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/saved_model", "k": [], "r": "r1.3", "t": "tf.contrib.saved_model"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/saved_model/get_signature_def_by_key", "k": [], "r": "r1.3", "t": "tf.contrib.saved_model.get_signature_def_by_key"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/seq2seq", "k": [], "r": "r1.3", "t": "tf.contrib.seq2seq"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/seq2seq/AttentionMechanism", "k": [], "r": "r1.3", "t": "tf.contrib.seq2seq.AttentionMechanism"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/seq2seq/AttentionWrapper", "k": ["graph", "losses", "non_trainable_variables", "non_trainable_weights", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "get_losses_for", "get_updates_for", "zero_state"], "r": "r1.3", "t": "tf.contrib.seq2seq.AttentionWrapper"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/seq2seq/AttentionWrapperState", "k": ["alignment_history", "alignments", "attention", "cell_state", "time", "__new__", "clone"], "r": "r1.3", "t": "tf.contrib.seq2seq.AttentionWrapperState"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/seq2seq/BahdanauAttention", "k": ["alignments_size", "batch_size", "keys", "memory_layer", "query_layer", "values", "__call__", "__init__", "initial_alignments"], "r": "r1.3", "t": "tf.contrib.seq2seq.BahdanauAttention"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/seq2seq/BahdanauMonotonicAttention", "k": ["alignments_size", "batch_size", "keys", "memory_layer", "query_layer", "values", "__call__", "__init__", "initial_alignments"], "r": "r1.3", "t": "tf.contrib.seq2seq.BahdanauMonotonicAttention"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/seq2seq/BasicDecoder", "k": ["batch_size", "output_dtype", "output_size", "__init__", "finalize", "initialize", "step"], "r": "r1.3", "t": "tf.contrib.seq2seq.BasicDecoder"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/seq2seq/BasicDecoderOutput", "k": ["rnn_output", "sample_id", "__new__"], "r": "r1.3", "t": "tf.contrib.seq2seq.BasicDecoderOutput"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/seq2seq/BeamSearchDecoder", "k": ["batch_size", "output_dtype", "output_size", "__init__", "finalize", "initialize", "step"], "r": "r1.3", "t": "tf.contrib.seq2seq.BeamSearchDecoder"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/seq2seq/BeamSearchDecoderOutput", "k": ["parent_ids", "predicted_ids", "scores", "__new__"], "r": "r1.3", "t": "tf.contrib.seq2seq.BeamSearchDecoderOutput"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/seq2seq/BeamSearchDecoderState", "k": ["cell_state", "finished", "lengths", "log_probs", "__new__"], "r": "r1.3", "t": "tf.contrib.seq2seq.BeamSearchDecoderState"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/seq2seq/CustomHelper", "k": ["batch_size", "__init__", "initialize", "next_inputs", "sample"], "r": "r1.3", "t": "tf.contrib.seq2seq.CustomHelper"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/seq2seq/Decoder", "k": ["batch_size", "output_dtype", "output_size", "finalize", "initialize", "step"], "r": "r1.3", "t": "tf.contrib.seq2seq.Decoder"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/seq2seq/FinalBeamSearchDecoderOutput", "k": ["beam_search_decoder_output", "predicted_ids", "__new__"], "r": "r1.3", "t": "tf.contrib.seq2seq.FinalBeamSearchDecoderOutput"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/seq2seq/GreedyEmbeddingHelper", "k": ["batch_size", "__init__", "initialize", "next_inputs", "sample"], "r": "r1.3", "t": "tf.contrib.seq2seq.GreedyEmbeddingHelper"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/seq2seq/Helper", "k": ["batch_size", "initialize", "next_inputs", "sample"], "r": "r1.3", "t": "tf.contrib.seq2seq.Helper"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/seq2seq/LuongAttention", "k": ["alignments_size", "batch_size", "keys", "memory_layer", "query_layer", "values", "__call__", "__init__", "initial_alignments"], "r": "r1.3", "t": "tf.contrib.seq2seq.LuongAttention"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/seq2seq/LuongMonotonicAttention", "k": ["alignments_size", "batch_size", "keys", "memory_layer", "query_layer", "values", "__call__", "__init__", "initial_alignments"], "r": "r1.3", "t": "tf.contrib.seq2seq.LuongMonotonicAttention"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/seq2seq/SampleEmbeddingHelper", "k": ["batch_size", "__init__", "initialize", "next_inputs", "sample"], "r": "r1.3", "t": "tf.contrib.seq2seq.SampleEmbeddingHelper"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/seq2seq/ScheduledEmbeddingTrainingHelper", "k": ["batch_size", "__init__", "initialize", "next_inputs", "sample"], "r": "r1.3", "t": "tf.contrib.seq2seq.ScheduledEmbeddingTrainingHelper"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/seq2seq/ScheduledOutputTrainingHelper", "k": ["batch_size", "__init__", "initialize", "next_inputs", "sample"], "r": "r1.3", "t": "tf.contrib.seq2seq.ScheduledOutputTrainingHelper"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/seq2seq/TrainingHelper", "k": ["batch_size", "__init__", "initialize", "next_inputs", "sample"], "r": "r1.3", "t": "tf.contrib.seq2seq.TrainingHelper"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/seq2seq/dynamic_decode", "k": [], "r": "r1.3", "t": "tf.contrib.seq2seq.dynamic_decode"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/seq2seq/gather_tree", "k": [], "r": "r1.3", "t": "tf.contrib.seq2seq.gather_tree"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/seq2seq/hardmax", "k": [], "r": "r1.3", "t": "tf.contrib.seq2seq.hardmax"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/seq2seq/monotonic_attention", "k": [], "r": "r1.3", "t": "tf.contrib.seq2seq.monotonic_attention"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/seq2seq/safe_cumprod", "k": [], "r": "r1.3", "t": "tf.contrib.seq2seq.safe_cumprod"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/seq2seq/sequence_loss", "k": [], "r": "r1.3", "t": "tf.contrib.seq2seq.sequence_loss"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/seq2seq/tile_batch", "k": [], "r": "r1.3", "t": "tf.contrib.seq2seq.tile_batch"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/session_bundle", "k": [], "r": "r1.3", "t": "tf.contrib.session_bundle"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/signal", "k": [], "r": "r1.3", "t": "tf.contrib.signal"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/signal/frame", "k": [], "r": "r1.3", "t": "tf.contrib.signal.frame"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/signal/hamming_window", "k": [], "r": "r1.3", "t": "tf.contrib.signal.hamming_window"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/signal/hann_window", "k": [], "r": "r1.3", "t": "tf.contrib.signal.hann_window"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/signal/inverse_stft", "k": [], "r": "r1.3", "t": "tf.contrib.signal.inverse_stft"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/signal/overlap_and_add", "k": [], "r": "r1.3", "t": "tf.contrib.signal.overlap_and_add"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/signal/stft", "k": [], "r": "r1.3", "t": "tf.contrib.signal.stft"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/slim", "k": [], "r": "r1.3", "t": "tf.contrib.slim"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/solvers", "k": [], "r": "r1.3", "t": "tf.contrib.solvers"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/sparsemax", "k": [], "r": "r1.3", "t": "tf.contrib.sparsemax"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/sparsemax/sparsemax", "k": [], "r": "r1.3", "t": "tf.contrib.sparsemax.sparsemax"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/sparsemax/sparsemax_loss", "k": [], "r": "r1.3", "t": "tf.contrib.sparsemax.sparsemax_loss"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/specs", "k": [], "r": "r1.3", "t": "tf.contrib.specs"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/staging", "k": ["absolute_import", "division", "print_function"], "r": "r1.3", "t": "tf.contrib.staging"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/staging/StagingArea", "k": ["capacity", "dtypes", "memory_limit", "name", "names", "shapes", "__init__", "clear", "get", "peek", "put", "size"], "r": "r1.3", "t": "tf.contrib.staging.StagingArea"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/stat_summarizer", "k": ["DeleteStatSummarizer", "NewStatSummarizer"], "r": "r1.3", "t": "tf.contrib.stat_summarizer"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/stat_summarizer/StatSummarizer", "k": ["GetOutputString", "PrintStepStats", "ProcessStepStats", "ProcessStepStatsStr", "__getattr__", "__init__", "__setattr__", "__swig_getmethods__", "__swig_setmethods__"], "r": "r1.3", "t": "tf.contrib.stat_summarizer.StatSummarizer"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/stateless", "k": [], "r": "r1.3", "t": "tf.contrib.stateless"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/stateless/stateless_random_normal", "k": [], "r": "r1.3", "t": "tf.contrib.stateless.stateless_random_normal"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/stateless/stateless_random_uniform", "k": [], "r": "r1.3", "t": "tf.contrib.stateless.stateless_random_uniform"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/stateless/stateless_truncated_normal", "k": [], "r": "r1.3", "t": "tf.contrib.stateless.stateless_truncated_normal"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/tensor_forest", "k": [], "r": "r1.3", "t": "tf.contrib.tensor_forest"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/tensorboard", "k": [], "r": "r1.3", "t": "tf.contrib.tensorboard"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/testing", "k": [], "r": "r1.3", "t": "tf.contrib.testing"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/tfprof", "k": [], "r": "r1.3", "t": "tf.contrib.tfprof"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/timeseries", "k": [], "r": "r1.3", "t": "tf.contrib.timeseries"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/timeseries/ARModel", "k": ["__init__", "define_loss", "generate", "get_batch_loss", "get_start_state", "initialize_graph", "loss_op", "predict", "prediction_ops", "random_model_parameters", "scale_back_data", "scale_back_variance", "scale_data", "NORMAL_LIKELIHOOD_LOSS", "SQUARED_LOSS"], "r": "r1.3", "t": "tf.contrib.timeseries.ARModel"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/timeseries/ARRegressor", "k": ["config", "model_dir", "params", "__init__", "build_raw_serving_input_receiver_fn", "evaluate", "export_savedmodel", "predict", "train"], "r": "r1.3", "t": "tf.contrib.timeseries.ARRegressor"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/timeseries/CSVReader", "k": ["__init__", "check_dataset_size", "read", "read_full"], "r": "r1.3", "t": "tf.contrib.timeseries.CSVReader"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/timeseries/FilteringResults", "k": ["STATE_PREFIX", "STATE_TUPLE", "TIMES"], "r": "r1.3", "t": "tf.contrib.timeseries.FilteringResults"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/timeseries/RandomWindowInputFn", "k": ["__call__", "__init__", "create_batch"], "r": "r1.3", "t": "tf.contrib.timeseries.RandomWindowInputFn"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/timeseries/StructuralEnsembleRegressor", "k": ["config", "model_dir", "params", "__init__", "build_raw_serving_input_receiver_fn", "evaluate", "export_savedmodel", "predict", "train"], "r": "r1.3", "t": "tf.contrib.timeseries.StructuralEnsembleRegressor"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/timeseries/TrainEvalFeatures", "k": ["TIMES", "VALUES"], "r": "r1.3", "t": "tf.contrib.timeseries.TrainEvalFeatures"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/timeseries/WholeDatasetInputFn", "k": ["__call__", "__init__", "create_batch"], "r": "r1.3", "t": "tf.contrib.timeseries.WholeDatasetInputFn"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/timeseries/predict_continuation_input_fn", "k": [], "r": "r1.3", "t": "tf.contrib.timeseries.predict_continuation_input_fn"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/timeseries/saved_model_utils", "k": [], "r": "r1.3", "t": "tf.contrib.timeseries.saved_model_utils"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/timeseries/saved_model_utils/filter_continuation", "k": [], "r": "r1.3", "t": "tf.contrib.timeseries.saved_model_utils.filter_continuation"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/timeseries/saved_model_utils/predict_continuation", "k": [], "r": "r1.3", "t": "tf.contrib.timeseries.saved_model_utils.predict_continuation"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/tpu", "k": [], "r": "r1.3", "t": "tf.contrib.tpu"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/training", "k": [], "r": "r1.3", "t": "tf.contrib.training"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/training/FeedingQueueRunner", "k": ["cancel_op", "close_op", "enqueue_ops", "exceptions_raised", "name", "queue", "queue_closed_exception_types", "__init__", "create_threads", "from_proto", "to_proto"], "r": "r1.3", "t": "tf.contrib.training.FeedingQueueRunner"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/training/GreedyLoadBalancingStrategy", "k": ["__call__", "__init__"], "r": "r1.3", "t": "tf.contrib.training.GreedyLoadBalancingStrategy"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/training/HParams", "k": ["__init__", "add_hparam", "from_proto", "get_model_structure", "parse", "parse_json", "set_model_structure", "to_json", "to_proto", "values"], "r": "r1.3", "t": "tf.contrib.training.HParams"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/training/NextQueuedSequenceBatch", "k": ["batch_size", "context", "insertion_index", "key", "length", "next_key", "sequence", "sequence_count", "sequences", "total_length", "__init__", "save_state", "state"], "r": "r1.3", "t": "tf.contrib.training.NextQueuedSequenceBatch"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/training/SequenceQueueingStateSaver", "k": ["barrier", "batch_size", "name", "next_batch", "num_unroll", "prefetch_op", "__init__", "close"], "r": "r1.3", "t": "tf.contrib.training.SequenceQueueingStateSaver"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/training/StopAfterNEvalsHook", "k": ["__init__", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "r1.3", "t": "tf.contrib.training.StopAfterNEvalsHook"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/training/SummaryAtEndHook", "k": ["__init__", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "r1.3", "t": "tf.contrib.training.SummaryAtEndHook"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/training/add_gradients_summaries", "k": [], "r": "r1.3", "t": "tf.contrib.training.add_gradients_summaries"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/training/batch_sequences_with_states", "k": [], "r": "r1.3", "t": "tf.contrib.training.batch_sequences_with_states"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/training/bucket", "k": [], "r": "r1.3", "t": "tf.contrib.training.bucket"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/training/bucket_by_sequence_length", "k": [], "r": "r1.3", "t": "tf.contrib.training.bucket_by_sequence_length"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/training/byte_size_load_fn", "k": [], "r": "r1.3", "t": "tf.contrib.training.byte_size_load_fn"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/training/checkpoints_iterator", "k": [], "r": "r1.3", "t": "tf.contrib.training.checkpoints_iterator"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/training/clip_gradient_norms", "k": [], "r": "r1.3", "t": "tf.contrib.training.clip_gradient_norms"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/training/create_train_op", "k": [], "r": "r1.3", "t": "tf.contrib.training.create_train_op"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/training/evaluate_once", "k": [], "r": "r1.3", "t": "tf.contrib.training.evaluate_once"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/training/evaluate_repeatedly", "k": [], "r": "r1.3", "t": "tf.contrib.training.evaluate_repeatedly"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/training/get_or_create_eval_step", "k": [], "r": "r1.3", "t": "tf.contrib.training.get_or_create_eval_step"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/training/multiply_gradients", "k": [], "r": "r1.3", "t": "tf.contrib.training.multiply_gradients"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/training/parse_values", "k": [], "r": "r1.3", "t": "tf.contrib.training.parse_values"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/training/python_input", "k": [], "r": "r1.3", "t": "tf.contrib.training.python_input"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/training/rejection_sample", "k": [], "r": "r1.3", "t": "tf.contrib.training.rejection_sample"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/training/resample_at_rate", "k": [], "r": "r1.3", "t": "tf.contrib.training.resample_at_rate"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/training/stratified_sample", "k": [], "r": "r1.3", "t": "tf.contrib.training.stratified_sample"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/training/train", "k": [], "r": "r1.3", "t": "tf.contrib.training.train"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/training/wait_for_new_checkpoint", "k": [], "r": "r1.3", "t": "tf.contrib.training.wait_for_new_checkpoint"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/training/weighted_resample", "k": [], "r": "r1.3", "t": "tf.contrib.training.weighted_resample"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/util", "k": [], "r": "r1.3", "t": "tf.contrib.util"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/util/constant_value", "k": [], "r": "r1.3", "t": "tf.contrib.util.constant_value"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/util/loader", "k": [], "r": "r1.3", "t": "tf.contrib.util.loader"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/util/ops_used_by_graph_def", "k": [], "r": "r1.3", "t": "tf.contrib.util.ops_used_by_graph_def"}, {"p": "/versions/r1.3/api_docs/python/tf/contrib/util/stripped_op_list_for_graph", "k": [], "r": "r1.3", "t": "tf.contrib.util.stripped_op_list_for_graph"}, {"p": "/versions/r1.3/api_docs/python/tf/control_dependencies", "k": [], "r": "r1.3", "t": "tf.control_dependencies"}, {"p": "/versions/r1.3/api_docs/python/tf/convert_to_tensor", "k": [], "r": "r1.3", "t": "tf.convert_to_tensor"}, {"p": "/versions/r1.3/api_docs/python/tf/convert_to_tensor_or_indexed_slices", "k": [], "r": "r1.3", "t": "tf.convert_to_tensor_or_indexed_slices"}, {"p": "/versions/r1.3/api_docs/python/tf/convert_to_tensor_or_sparse_tensor", "k": [], "r": "r1.3", "t": "tf.convert_to_tensor_or_sparse_tensor"}, {"p": "/versions/r1.3/api_docs/python/tf/cos", "k": [], "r": "r1.3", "t": "tf.cos"}, {"p": "/versions/r1.3/api_docs/python/tf/cosh", "k": [], "r": "r1.3", "t": "tf.cosh"}, {"p": "/versions/r1.3/api_docs/python/tf/count_nonzero", "k": [], "r": "r1.3", "t": "tf.count_nonzero"}, {"p": "/versions/r1.3/api_docs/python/tf/count_up_to", "k": [], "r": "r1.3", "t": "tf.count_up_to"}, {"p": "/versions/r1.3/api_docs/python/tf/create_partitioned_variables", "k": [], "r": "r1.3", "t": "tf.create_partitioned_variables"}, {"p": "/versions/r1.3/api_docs/python/tf/cross", "k": [], "r": "r1.3", "t": "tf.cross"}, {"p": "/versions/r1.3/api_docs/python/tf/cumprod", "k": [], "r": "r1.3", "t": "tf.cumprod"}, {"p": "/versions/r1.3/api_docs/python/tf/cumsum", "k": [], "r": "r1.3", "t": "tf.cumsum"}, {"p": "/versions/r1.3/api_docs/python/tf/decode_base64", "k": [], "r": "r1.3", "t": "tf.decode_base64"}, {"p": "/versions/r1.3/api_docs/python/tf/decode_csv", "k": [], "r": "r1.3", "t": "tf.decode_csv"}, {"p": "/versions/r1.3/api_docs/python/tf/decode_json_example", "k": [], "r": "r1.3", "t": "tf.decode_json_example"}, {"p": "/versions/r1.3/api_docs/python/tf/decode_raw", "k": [], "r": "r1.3", "t": "tf.decode_raw"}, {"p": "/versions/r1.3/api_docs/python/tf/delete_session_tensor", "k": [], "r": "r1.3", "t": "tf.delete_session_tensor"}, {"p": "/versions/r1.3/api_docs/python/tf/depth_to_space", "k": [], "r": "r1.3", "t": "tf.depth_to_space"}, {"p": "/versions/r1.3/api_docs/python/tf/dequantize", "k": [], "r": "r1.3", "t": "tf.dequantize"}, {"p": "/versions/r1.3/api_docs/python/tf/deserialize_many_sparse", "k": [], "r": "r1.3", "t": "tf.deserialize_many_sparse"}, {"p": "/versions/r1.3/api_docs/python/tf/device", "k": [], "r": "r1.3", "t": "tf.device"}, {"p": "/versions/r1.3/api_docs/python/tf/diag", "k": [], "r": "r1.3", "t": "tf.diag"}, {"p": "/versions/r1.3/api_docs/python/tf/diag_part", "k": [], "r": "r1.3", "t": "tf.diag_part"}, {"p": "/versions/r1.3/api_docs/python/tf/digamma", "k": [], "r": "r1.3", "t": "tf.digamma"}, {"p": "/versions/r1.3/api_docs/python/tf/distributions", "k": ["FULLY_REPARAMETERIZED", "NOT_REPARAMETERIZED"], "r": "r1.3", "t": "tf.distributions"}, {"p": "/versions/r1.3/api_docs/python/tf/distributions/Bernoulli", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "logits", "name", "parameters", "probs", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.3", "t": "tf.distributions.Bernoulli"}, {"p": "/versions/r1.3/api_docs/python/tf/distributions/Beta", "k": ["allow_nan_stats", "batch_shape", "concentration0", "concentration1", "dtype", "event_shape", "name", "parameters", "reparameterization_type", "total_concentration", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.3", "t": "tf.distributions.Beta"}, {"p": "/versions/r1.3/api_docs/python/tf/distributions/Categorical", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "event_size", "logits", "name", "parameters", "probs", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.3", "t": "tf.distributions.Categorical"}, {"p": "/versions/r1.3/api_docs/python/tf/distributions/Dirichlet", "k": ["allow_nan_stats", "batch_shape", "concentration", "dtype", "event_shape", "name", "parameters", "reparameterization_type", "total_concentration", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.3", "t": "tf.distributions.Dirichlet"}, {"p": "/versions/r1.3/api_docs/python/tf/distributions/DirichletMultinomial", "k": ["allow_nan_stats", "batch_shape", "concentration", "dtype", "event_shape", "name", "parameters", "reparameterization_type", "total_concentration", "total_count", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.3", "t": "tf.distributions.DirichletMultinomial"}, {"p": "/versions/r1.3/api_docs/python/tf/distributions/Distribution", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "name", "parameters", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.3", "t": "tf.distributions.Distribution"}, {"p": "/versions/r1.3/api_docs/python/tf/distributions/Exponential", "k": ["allow_nan_stats", "batch_shape", "concentration", "dtype", "event_shape", "name", "parameters", "rate", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.3", "t": "tf.distributions.Exponential"}, {"p": "/versions/r1.3/api_docs/python/tf/distributions/Gamma", "k": ["allow_nan_stats", "batch_shape", "concentration", "dtype", "event_shape", "name", "parameters", "rate", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.3", "t": "tf.distributions.Gamma"}, {"p": "/versions/r1.3/api_docs/python/tf/distributions/Laplace", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.3", "t": "tf.distributions.Laplace"}, {"p": "/versions/r1.3/api_docs/python/tf/distributions/Multinomial", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "logits", "name", "parameters", "probs", "reparameterization_type", "total_count", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.3", "t": "tf.distributions.Multinomial"}, {"p": "/versions/r1.3/api_docs/python/tf/distributions/Normal", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.3", "t": "tf.distributions.Normal"}, {"p": "/versions/r1.3/api_docs/python/tf/distributions/RegisterKL", "k": ["__call__", "__init__"], "r": "r1.3", "t": "tf.distributions.RegisterKL"}, {"p": "/versions/r1.3/api_docs/python/tf/distributions/ReparameterizationType", "k": ["__eq__", "__init__"], "r": "r1.3", "t": "tf.distributions.ReparameterizationType"}, {"p": "/versions/r1.3/api_docs/python/tf/distributions/StudentT", "k": ["allow_nan_stats", "batch_shape", "df", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.3", "t": "tf.distributions.StudentT"}, {"p": "/versions/r1.3/api_docs/python/tf/distributions/Uniform", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "high", "low", "name", "parameters", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "range", "sample", "stddev", "survival_function", "variance"], "r": "r1.3", "t": "tf.distributions.Uniform"}, {"p": "/versions/r1.3/api_docs/python/tf/distributions/bijectors", "k": [], "r": "r1.3", "t": "tf.distributions.bijectors"}, {"p": "/versions/r1.3/api_docs/python/tf/distributions/bijectors/Bijector", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.3", "t": "tf.distributions.bijectors.Bijector"}, {"p": "/versions/r1.3/api_docs/python/tf/distributions/bijectors/Identity", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.3", "t": "tf.distributions.bijectors.Identity"}, {"p": "/versions/r1.3/api_docs/python/tf/distributions/kl_divergence", "k": [], "r": "r1.3", "t": "tf.distributions.kl_divergence"}, {"p": "/versions/r1.3/api_docs/python/tf/div", "k": [], "r": "r1.3", "t": "tf.div"}, {"p": "/versions/r1.3/api_docs/python/tf/divide", "k": [], "r": "r1.3", "t": "tf.divide"}, {"p": "/versions/r1.3/api_docs/python/tf/dynamic_partition", "k": [], "r": "r1.3", "t": "tf.dynamic_partition"}, {"p": "/versions/r1.3/api_docs/python/tf/dynamic_stitch", "k": [], "r": "r1.3", "t": "tf.dynamic_stitch"}, {"p": "/versions/r1.3/api_docs/python/tf/edit_distance", "k": [], "r": "r1.3", "t": "tf.edit_distance"}, {"p": "/versions/r1.3/api_docs/python/tf/einsum", "k": [], "r": "r1.3", "t": "tf.einsum"}, {"p": "/versions/r1.3/api_docs/python/tf/encode_base64", "k": [], "r": "r1.3", "t": "tf.encode_base64"}, {"p": "/versions/r1.3/api_docs/python/tf/equal", "k": [], "r": "r1.3", "t": "tf.equal"}, {"p": "/versions/r1.3/api_docs/python/tf/erf", "k": [], "r": "r1.3", "t": "tf.erf"}, {"p": "/versions/r1.3/api_docs/python/tf/erfc", "k": [], "r": "r1.3", "t": "tf.erfc"}, {"p": "/versions/r1.3/api_docs/python/tf/errors", "k": ["ABORTED", "ALREADY_EXISTS", "CANCELLED", "DATA_LOSS", "DEADLINE_EXCEEDED", "FAILED_PRECONDITION", "INTERNAL", "INVALID_ARGUMENT", "NOT_FOUND", "OK", "OUT_OF_RANGE", "PERMISSION_DENIED", "RESOURCE_EXHAUSTED", "UNAUTHENTICATED", "UNAVAILABLE", "UNIMPLEMENTED", "UNKNOWN"], "r": "r1.3", "t": "tf.errors"}, {"p": "/versions/r1.3/api_docs/python/tf/errors/AbortedError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "r1.3", "t": "tf.errors.AbortedError"}, {"p": "/versions/r1.3/api_docs/python/tf/errors/AlreadyExistsError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "r1.3", "t": "tf.errors.AlreadyExistsError"}, {"p": "/versions/r1.3/api_docs/python/tf/errors/CancelledError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "r1.3", "t": "tf.errors.CancelledError"}, {"p": "/versions/r1.3/api_docs/python/tf/errors/DataLossError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "r1.3", "t": "tf.errors.DataLossError"}, {"p": "/versions/r1.3/api_docs/python/tf/errors/DeadlineExceededError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "r1.3", "t": "tf.errors.DeadlineExceededError"}, {"p": "/versions/r1.3/api_docs/python/tf/errors/FailedPreconditionError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "r1.3", "t": "tf.errors.FailedPreconditionError"}, {"p": "/versions/r1.3/api_docs/python/tf/errors/InternalError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "r1.3", "t": "tf.errors.InternalError"}, {"p": "/versions/r1.3/api_docs/python/tf/errors/InvalidArgumentError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "r1.3", "t": "tf.errors.InvalidArgumentError"}, {"p": "/versions/r1.3/api_docs/python/tf/errors/NotFoundError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "r1.3", "t": "tf.errors.NotFoundError"}, {"p": "/versions/r1.3/api_docs/python/tf/errors/OutOfRangeError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "r1.3", "t": "tf.errors.OutOfRangeError"}, {"p": "/versions/r1.3/api_docs/python/tf/errors/PermissionDeniedError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "r1.3", "t": "tf.errors.PermissionDeniedError"}, {"p": "/versions/r1.3/api_docs/python/tf/errors/ResourceExhaustedError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "r1.3", "t": "tf.errors.ResourceExhaustedError"}, {"p": "/versions/r1.3/api_docs/python/tf/errors/UnauthenticatedError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "r1.3", "t": "tf.errors.UnauthenticatedError"}, {"p": "/versions/r1.3/api_docs/python/tf/errors/UnavailableError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "r1.3", "t": "tf.errors.UnavailableError"}, {"p": "/versions/r1.3/api_docs/python/tf/errors/UnimplementedError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "r1.3", "t": "tf.errors.UnimplementedError"}, {"p": "/versions/r1.3/api_docs/python/tf/errors/UnknownError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "r1.3", "t": "tf.errors.UnknownError"}, {"p": "/versions/r1.3/api_docs/python/tf/errors/error_code_from_exception_type", "k": [], "r": "r1.3", "t": "tf.errors.error_code_from_exception_type"}, {"p": "/versions/r1.3/api_docs/python/tf/errors/exception_type_from_error_code", "k": [], "r": "r1.3", "t": "tf.errors.exception_type_from_error_code"}, {"p": "/versions/r1.3/api_docs/python/tf/errors/raise_exception_on_not_ok_status", "k": [], "r": "r1.3", "t": "tf.errors.raise_exception_on_not_ok_status"}, {"p": "/versions/r1.3/api_docs/python/tf/estimator", "k": [], "r": "r1.3", "t": "tf.estimator"}, {"p": "/versions/r1.3/api_docs/python/tf/estimator/DNNClassifier", "k": ["config", "model_dir", "params", "__init__", "evaluate", "export_savedmodel", "predict", "train"], "r": "r1.3", "t": "tf.estimator.DNNClassifier"}, {"p": "/versions/r1.3/api_docs/python/tf/estimator/DNNLinearCombinedClassifier", "k": ["config", "model_dir", "params", "__init__", "evaluate", "export_savedmodel", "predict", "train"], "r": "r1.3", "t": "tf.estimator.DNNLinearCombinedClassifier"}, {"p": "/versions/r1.3/api_docs/python/tf/estimator/DNNLinearCombinedRegressor", "k": ["config", "model_dir", "params", "__init__", "evaluate", "export_savedmodel", "predict", "train"], "r": "r1.3", "t": "tf.estimator.DNNLinearCombinedRegressor"}, {"p": "/versions/r1.3/api_docs/python/tf/estimator/DNNRegressor", "k": ["config", "model_dir", "params", "__init__", "evaluate", "export_savedmodel", "predict", "train"], "r": "r1.3", "t": "tf.estimator.DNNRegressor"}, {"p": "/versions/r1.3/api_docs/python/tf/estimator/Estimator", "k": ["config", "model_dir", "params", "__init__", "evaluate", "export_savedmodel", "predict", "train"], "r": "r1.3", "t": "tf.estimator.Estimator"}, {"p": "/versions/r1.3/api_docs/python/tf/estimator/EstimatorSpec", "k": ["eval_metric_ops", "export_outputs", "loss", "predictions", "scaffold", "train_op", "training_chief_hooks", "training_hooks", "__new__"], "r": "r1.3", "t": "tf.estimator.EstimatorSpec"}, {"p": "/versions/r1.3/api_docs/python/tf/estimator/LinearClassifier", "k": ["config", "model_dir", "params", "__init__", "evaluate", "export_savedmodel", "predict", "train"], "r": "r1.3", "t": "tf.estimator.LinearClassifier"}, {"p": "/versions/r1.3/api_docs/python/tf/estimator/LinearRegressor", "k": ["config", "model_dir", "params", "__init__", "evaluate", "export_savedmodel", "predict", "train"], "r": "r1.3", "t": "tf.estimator.LinearRegressor"}, {"p": "/versions/r1.3/api_docs/python/tf/estimator/ModeKeys", "k": ["EVAL", "PREDICT", "TRAIN"], "r": "r1.3", "t": "tf.estimator.ModeKeys"}, {"p": "/versions/r1.3/api_docs/python/tf/estimator/RunConfig", "k": ["cluster_spec", "evaluation_master", "is_chief", "keep_checkpoint_every_n_hours", "keep_checkpoint_max", "log_step_count_steps", "master", "model_dir", "num_ps_replicas", "num_worker_replicas", "save_checkpoints_secs", "save_checkpoints_steps", "save_summary_steps", "session_config", "task_id", "task_type", "tf_random_seed", "__init__", "replace"], "r": "r1.3", "t": "tf.estimator.RunConfig"}, {"p": "/versions/r1.3/api_docs/python/tf/estimator/classifier_parse_example_spec", "k": [], "r": "r1.3", "t": "tf.estimator.classifier_parse_example_spec"}, {"p": "/versions/r1.3/api_docs/python/tf/estimator/export", "k": [], "r": "r1.3", "t": "tf.estimator.export"}, {"p": "/versions/r1.3/api_docs/python/tf/estimator/export/ClassificationOutput", "k": ["classes", "scores", "__init__", "as_signature_def"], "r": "r1.3", "t": "tf.estimator.export.ClassificationOutput"}, {"p": "/versions/r1.3/api_docs/python/tf/estimator/export/ExportOutput", "k": ["as_signature_def"], "r": "r1.3", "t": "tf.estimator.export.ExportOutput"}, {"p": "/versions/r1.3/api_docs/python/tf/estimator/export/PredictOutput", "k": ["outputs", "__init__", "as_signature_def"], "r": "r1.3", "t": "tf.estimator.export.PredictOutput"}, {"p": "/versions/r1.3/api_docs/python/tf/estimator/export/RegressionOutput", "k": ["value", "__init__", "as_signature_def"], "r": "r1.3", "t": "tf.estimator.export.RegressionOutput"}, {"p": "/versions/r1.3/api_docs/python/tf/estimator/export/ServingInputReceiver", "k": ["features", "receiver_tensors", "__new__"], "r": "r1.3", "t": "tf.estimator.export.ServingInputReceiver"}, {"p": "/versions/r1.3/api_docs/python/tf/estimator/export/build_parsing_serving_input_receiver_fn", "k": [], "r": "r1.3", "t": "tf.estimator.export.build_parsing_serving_input_receiver_fn"}, {"p": "/versions/r1.3/api_docs/python/tf/estimator/export/build_raw_serving_input_receiver_fn", "k": [], "r": "r1.3", "t": "tf.estimator.export.build_raw_serving_input_receiver_fn"}, {"p": "/versions/r1.3/api_docs/python/tf/estimator/inputs", "k": [], "r": "r1.3", "t": "tf.estimator.inputs"}, {"p": "/versions/r1.3/api_docs/python/tf/estimator/inputs/numpy_input_fn", "k": [], "r": "r1.3", "t": "tf.estimator.inputs.numpy_input_fn"}, {"p": "/versions/r1.3/api_docs/python/tf/estimator/inputs/pandas_input_fn", "k": [], "r": "r1.3", "t": "tf.estimator.inputs.pandas_input_fn"}, {"p": "/versions/r1.3/api_docs/python/tf/estimator/regressor_parse_example_spec", "k": [], "r": "r1.3", "t": "tf.estimator.regressor_parse_example_spec"}, {"p": "/versions/r1.3/api_docs/python/tf/exp", "k": [], "r": "r1.3", "t": "tf.exp"}, {"p": "/versions/r1.3/api_docs/python/tf/expand_dims", "k": [], "r": "r1.3", "t": "tf.expand_dims"}, {"p": "/versions/r1.3/api_docs/python/tf/expm1", "k": [], "r": "r1.3", "t": "tf.expm1"}, {"p": "/versions/r1.3/api_docs/python/tf/extract_image_patches", "k": [], "r": "r1.3", "t": "tf.extract_image_patches"}, {"p": "/versions/r1.3/api_docs/python/tf/eye", "k": [], "r": "r1.3", "t": "tf.eye"}, {"p": "/versions/r1.3/api_docs/python/tf/fake_quant_with_min_max_args", "k": [], "r": "r1.3", "t": "tf.fake_quant_with_min_max_args"}, {"p": "/versions/r1.3/api_docs/python/tf/fake_quant_with_min_max_args_gradient", "k": [], "r": "r1.3", "t": "tf.fake_quant_with_min_max_args_gradient"}, {"p": "/versions/r1.3/api_docs/python/tf/fake_quant_with_min_max_vars", "k": [], "r": "r1.3", "t": "tf.fake_quant_with_min_max_vars"}, {"p": "/versions/r1.3/api_docs/python/tf/fake_quant_with_min_max_vars_gradient", "k": [], "r": "r1.3", "t": "tf.fake_quant_with_min_max_vars_gradient"}, {"p": "/versions/r1.3/api_docs/python/tf/fake_quant_with_min_max_vars_per_channel", "k": [], "r": "r1.3", "t": "tf.fake_quant_with_min_max_vars_per_channel"}, {"p": "/versions/r1.3/api_docs/python/tf/fake_quant_with_min_max_vars_per_channel_gradient", "k": [], "r": "r1.3", "t": "tf.fake_quant_with_min_max_vars_per_channel_gradient"}, {"p": "/versions/r1.3/api_docs/python/tf/feature_column", "k": [], "r": "r1.3", "t": "tf.feature_column"}, {"p": "/versions/r1.3/api_docs/python/tf/feature_column/bucketized_column", "k": [], "r": "r1.3", "t": "tf.feature_column.bucketized_column"}, {"p": "/versions/r1.3/api_docs/python/tf/feature_column/categorical_column_with_hash_bucket", "k": [], "r": "r1.3", "t": "tf.feature_column.categorical_column_with_hash_bucket"}, {"p": "/versions/r1.3/api_docs/python/tf/feature_column/categorical_column_with_identity", "k": [], "r": "r1.3", "t": "tf.feature_column.categorical_column_with_identity"}, {"p": "/versions/r1.3/api_docs/python/tf/feature_column/categorical_column_with_vocabulary_file", "k": [], "r": "r1.3", "t": "tf.feature_column.categorical_column_with_vocabulary_file"}, {"p": "/versions/r1.3/api_docs/python/tf/feature_column/categorical_column_with_vocabulary_list", "k": [], "r": "r1.3", "t": "tf.feature_column.categorical_column_with_vocabulary_list"}, {"p": "/versions/r1.3/api_docs/python/tf/feature_column/crossed_column", "k": [], "r": "r1.3", "t": "tf.feature_column.crossed_column"}, {"p": "/versions/r1.3/api_docs/python/tf/feature_column/embedding_column", "k": [], "r": "r1.3", "t": "tf.feature_column.embedding_column"}, {"p": "/versions/r1.3/api_docs/python/tf/feature_column/indicator_column", "k": [], "r": "r1.3", "t": "tf.feature_column.indicator_column"}, {"p": "/versions/r1.3/api_docs/python/tf/feature_column/input_layer", "k": [], "r": "r1.3", "t": "tf.feature_column.input_layer"}, {"p": "/versions/r1.3/api_docs/python/tf/feature_column/linear_model", "k": [], "r": "r1.3", "t": "tf.feature_column.linear_model"}, {"p": "/versions/r1.3/api_docs/python/tf/feature_column/make_parse_example_spec", "k": [], "r": "r1.3", "t": "tf.feature_column.make_parse_example_spec"}, {"p": "/versions/r1.3/api_docs/python/tf/feature_column/numeric_column", "k": [], "r": "r1.3", "t": "tf.feature_column.numeric_column"}, {"p": "/versions/r1.3/api_docs/python/tf/feature_column/weighted_categorical_column", "k": [], "r": "r1.3", "t": "tf.feature_column.weighted_categorical_column"}, {"p": "/versions/r1.3/api_docs/python/tf/fft", "k": [], "r": "r1.3", "t": "tf.fft"}, {"p": "/versions/r1.3/api_docs/python/tf/fft2d", "k": [], "r": "r1.3", "t": "tf.fft2d"}, {"p": "/versions/r1.3/api_docs/python/tf/fft3d", "k": [], "r": "r1.3", "t": "tf.fft3d"}, {"p": "/versions/r1.3/api_docs/python/tf/fill", "k": [], "r": "r1.3", "t": "tf.fill"}, {"p": "/versions/r1.3/api_docs/python/tf/fixed_size_partitioner", "k": [], "r": "r1.3", "t": "tf.fixed_size_partitioner"}, {"p": "/versions/r1.3/api_docs/python/tf/flags", "k": [], "r": "r1.3", "t": "tf.flags"}, {"p": "/versions/r1.3/api_docs/python/tf/floor", "k": [], "r": "r1.3", "t": "tf.floor"}, {"p": "/versions/r1.3/api_docs/python/tf/floor_div", "k": [], "r": "r1.3", "t": "tf.floor_div"}, {"p": "/versions/r1.3/api_docs/python/tf/floordiv", "k": [], "r": "r1.3", "t": "tf.floordiv"}, {"p": "/versions/r1.3/api_docs/python/tf/floormod", "k": [], "r": "r1.3", "t": "tf.floormod"}, {"p": "/versions/r1.3/api_docs/python/tf/foldl", "k": [], "r": "r1.3", "t": "tf.foldl"}, {"p": "/versions/r1.3/api_docs/python/tf/foldr", "k": [], "r": "r1.3", "t": "tf.foldr"}, {"p": "/versions/r1.3/api_docs/python/tf/gather", "k": [], "r": "r1.3", "t": "tf.gather"}, {"p": "/versions/r1.3/api_docs/python/tf/gather_nd", "k": [], "r": "r1.3", "t": "tf.gather_nd"}, {"p": "/versions/r1.3/api_docs/python/tf/get_collection", "k": [], "r": "r1.3", "t": "tf.get_collection"}, {"p": "/versions/r1.3/api_docs/python/tf/get_collection_ref", "k": [], "r": "r1.3", "t": "tf.get_collection_ref"}, {"p": "/versions/r1.3/api_docs/python/tf/get_default_graph", "k": [], "r": "r1.3", "t": "tf.get_default_graph"}, {"p": "/versions/r1.3/api_docs/python/tf/get_default_session", "k": [], "r": "r1.3", "t": "tf.get_default_session"}, {"p": "/versions/r1.3/api_docs/python/tf/get_local_variable", "k": [], "r": "r1.3", "t": "tf.get_local_variable"}, {"p": "/versions/r1.3/api_docs/python/tf/get_seed", "k": [], "r": "r1.3", "t": "tf.get_seed"}, {"p": "/versions/r1.3/api_docs/python/tf/get_session_handle", "k": [], "r": "r1.3", "t": "tf.get_session_handle"}, {"p": "/versions/r1.3/api_docs/python/tf/get_session_tensor", "k": [], "r": "r1.3", "t": "tf.get_session_tensor"}, {"p": "/versions/r1.3/api_docs/python/tf/get_variable", "k": [], "r": "r1.3", "t": "tf.get_variable"}, {"p": "/versions/r1.3/api_docs/python/tf/get_variable_scope", "k": [], "r": "r1.3", "t": "tf.get_variable_scope"}, {"p": "/versions/r1.3/api_docs/python/tf/gfile", "k": [], "r": "r1.3", "t": "tf.gfile"}, {"p": "/versions/r1.3/api_docs/python/tf/gfile/Copy", "k": [], "r": "r1.3", "t": "tf.gfile.Copy"}, {"p": "/versions/r1.3/api_docs/python/tf/gfile/DeleteRecursively", "k": [], "r": "r1.3", "t": "tf.gfile.DeleteRecursively"}, {"p": "/versions/r1.3/api_docs/python/tf/gfile/Exists", "k": [], "r": "r1.3", "t": "tf.gfile.Exists"}, {"p": "/versions/r1.3/api_docs/python/tf/gfile/FastGFile", "k": ["mode", "name", "__enter__", "__exit__", "__init__", "__iter__", "__next__", "close", "flush", "next", "read", "readline", "readlines", "seek", "size", "tell", "write"], "r": "r1.3", "t": "tf.gfile.FastGFile"}, {"p": "/versions/r1.3/api_docs/python/tf/gfile/GFile", "k": ["mode", "name", "__enter__", "__exit__", "__init__", "__iter__", "__next__", "close", "flush", "next", "read", "readline", "readlines", "seek", "size", "tell", "write"], "r": "r1.3", "t": "tf.gfile.GFile"}, {"p": "/versions/r1.3/api_docs/python/tf/gfile/Glob", "k": [], "r": "r1.3", "t": "tf.gfile.Glob"}, {"p": "/versions/r1.3/api_docs/python/tf/gfile/IsDirectory", "k": [], "r": "r1.3", "t": "tf.gfile.IsDirectory"}, {"p": "/versions/r1.3/api_docs/python/tf/gfile/ListDirectory", "k": [], "r": "r1.3", "t": "tf.gfile.ListDirectory"}, {"p": "/versions/r1.3/api_docs/python/tf/gfile/MakeDirs", "k": [], "r": "r1.3", "t": "tf.gfile.MakeDirs"}, {"p": "/versions/r1.3/api_docs/python/tf/gfile/MkDir", "k": [], "r": "r1.3", "t": "tf.gfile.MkDir"}, {"p": "/versions/r1.3/api_docs/python/tf/gfile/Remove", "k": [], "r": "r1.3", "t": "tf.gfile.Remove"}, {"p": "/versions/r1.3/api_docs/python/tf/gfile/Rename", "k": [], "r": "r1.3", "t": "tf.gfile.Rename"}, {"p": "/versions/r1.3/api_docs/python/tf/gfile/Stat", "k": [], "r": "r1.3", "t": "tf.gfile.Stat"}, {"p": "/versions/r1.3/api_docs/python/tf/gfile/Walk", "k": [], "r": "r1.3", "t": "tf.gfile.Walk"}, {"p": "/versions/r1.3/api_docs/python/tf/global_norm", "k": [], "r": "r1.3", "t": "tf.global_norm"}, {"p": "/versions/r1.3/api_docs/python/tf/global_variables", "k": [], "r": "r1.3", "t": "tf.global_variables"}, {"p": "/versions/r1.3/api_docs/python/tf/global_variables_initializer", "k": [], "r": "r1.3", "t": "tf.global_variables_initializer"}, {"p": "/versions/r1.3/api_docs/python/tf/glorot_normal_initializer", "k": [], "r": "r1.3", "t": "tf.glorot_normal_initializer"}, {"p": "/versions/r1.3/api_docs/python/tf/glorot_uniform_initializer", "k": [], "r": "r1.3", "t": "tf.glorot_uniform_initializer"}, {"p": "/versions/r1.3/api_docs/python/tf/gradients", "k": [], "r": "r1.3", "t": "tf.gradients"}, {"p": "/versions/r1.3/api_docs/python/tf/graph_util", "k": [], "r": "r1.3", "t": "tf.graph_util"}, {"p": "/versions/r1.3/api_docs/python/tf/graph_util/convert_variables_to_constants", "k": [], "r": "r1.3", "t": "tf.graph_util.convert_variables_to_constants"}, {"p": "/versions/r1.3/api_docs/python/tf/graph_util/extract_sub_graph", "k": [], "r": "r1.3", "t": "tf.graph_util.extract_sub_graph"}, {"p": "/versions/r1.3/api_docs/python/tf/graph_util/must_run_on_cpu", "k": [], "r": "r1.3", "t": "tf.graph_util.must_run_on_cpu"}, {"p": "/versions/r1.3/api_docs/python/tf/graph_util/remove_training_nodes", "k": [], "r": "r1.3", "t": "tf.graph_util.remove_training_nodes"}, {"p": "/versions/r1.3/api_docs/python/tf/graph_util/tensor_shape_from_node_def_name", "k": [], "r": "r1.3", "t": "tf.graph_util.tensor_shape_from_node_def_name"}, {"p": "/versions/r1.3/api_docs/python/tf/greater", "k": [], "r": "r1.3", "t": "tf.greater"}, {"p": "/versions/r1.3/api_docs/python/tf/greater_equal", "k": [], "r": "r1.3", "t": "tf.greater_equal"}, {"p": "/versions/r1.3/api_docs/python/tf/group", "k": [], "r": "r1.3", "t": "tf.group"}, {"p": "/versions/r1.3/api_docs/python/tf/hessians", "k": [], "r": "r1.3", "t": "tf.hessians"}, {"p": "/versions/r1.3/api_docs/python/tf/histogram_fixed_width", "k": [], "r": "r1.3", "t": "tf.histogram_fixed_width"}, {"p": "/versions/r1.3/api_docs/python/tf/identity", "k": [], "r": "r1.3", "t": "tf.identity"}, {"p": "/versions/r1.3/api_docs/python/tf/ifft", "k": [], "r": "r1.3", "t": "tf.ifft"}, {"p": "/versions/r1.3/api_docs/python/tf/ifft2d", "k": [], "r": "r1.3", "t": "tf.ifft2d"}, {"p": "/versions/r1.3/api_docs/python/tf/ifft3d", "k": [], "r": "r1.3", "t": "tf.ifft3d"}, {"p": "/versions/r1.3/api_docs/python/tf/igamma", "k": [], "r": "r1.3", "t": "tf.igamma"}, {"p": "/versions/r1.3/api_docs/python/tf/igammac", "k": [], "r": "r1.3", "t": "tf.igammac"}, {"p": "/versions/r1.3/api_docs/python/tf/imag", "k": [], "r": "r1.3", "t": "tf.imag"}, {"p": "/versions/r1.3/api_docs/python/tf/image", "k": [], "r": "r1.3", "t": "tf.image"}, {"p": "/versions/r1.3/api_docs/python/tf/image/ResizeMethod", "k": ["AREA", "BICUBIC", "BILINEAR", "NEAREST_NEIGHBOR"], "r": "r1.3", "t": "tf.image.ResizeMethod"}, {"p": "/versions/r1.3/api_docs/python/tf/image/adjust_brightness", "k": [], "r": "r1.3", "t": "tf.image.adjust_brightness"}, {"p": "/versions/r1.3/api_docs/python/tf/image/adjust_contrast", "k": [], "r": "r1.3", "t": "tf.image.adjust_contrast"}, {"p": "/versions/r1.3/api_docs/python/tf/image/adjust_gamma", "k": [], "r": "r1.3", "t": "tf.image.adjust_gamma"}, {"p": "/versions/r1.3/api_docs/python/tf/image/adjust_hue", "k": [], "r": "r1.3", "t": "tf.image.adjust_hue"}, {"p": "/versions/r1.3/api_docs/python/tf/image/adjust_saturation", "k": [], "r": "r1.3", "t": "tf.image.adjust_saturation"}, {"p": "/versions/r1.3/api_docs/python/tf/image/central_crop", "k": [], "r": "r1.3", "t": "tf.image.central_crop"}, {"p": "/versions/r1.3/api_docs/python/tf/image/convert_image_dtype", "k": [], "r": "r1.3", "t": "tf.image.convert_image_dtype"}, {"p": "/versions/r1.3/api_docs/python/tf/image/crop_and_resize", "k": [], "r": "r1.3", "t": "tf.image.crop_and_resize"}, {"p": "/versions/r1.3/api_docs/python/tf/image/crop_to_bounding_box", "k": [], "r": "r1.3", "t": "tf.image.crop_to_bounding_box"}, {"p": "/versions/r1.3/api_docs/python/tf/image/decode_bmp", "k": [], "r": "r1.3", "t": "tf.image.decode_bmp"}, {"p": "/versions/r1.3/api_docs/python/tf/image/decode_gif", "k": [], "r": "r1.3", "t": "tf.image.decode_gif"}, {"p": "/versions/r1.3/api_docs/python/tf/image/decode_image", "k": [], "r": "r1.3", "t": "tf.image.decode_image"}, {"p": "/versions/r1.3/api_docs/python/tf/image/decode_jpeg", "k": [], "r": "r1.3", "t": "tf.image.decode_jpeg"}, {"p": "/versions/r1.3/api_docs/python/tf/image/decode_png", "k": [], "r": "r1.3", "t": "tf.image.decode_png"}, {"p": "/versions/r1.3/api_docs/python/tf/image/draw_bounding_boxes", "k": [], "r": "r1.3", "t": "tf.image.draw_bounding_boxes"}, {"p": "/versions/r1.3/api_docs/python/tf/image/encode_jpeg", "k": [], "r": "r1.3", "t": "tf.image.encode_jpeg"}, {"p": "/versions/r1.3/api_docs/python/tf/image/encode_png", "k": [], "r": "r1.3", "t": "tf.image.encode_png"}, {"p": "/versions/r1.3/api_docs/python/tf/image/extract_glimpse", "k": [], "r": "r1.3", "t": "tf.image.extract_glimpse"}, {"p": "/versions/r1.3/api_docs/python/tf/image/flip_left_right", "k": [], "r": "r1.3", "t": "tf.image.flip_left_right"}, {"p": "/versions/r1.3/api_docs/python/tf/image/flip_up_down", "k": [], "r": "r1.3", "t": "tf.image.flip_up_down"}, {"p": "/versions/r1.3/api_docs/python/tf/image/grayscale_to_rgb", "k": [], "r": "r1.3", "t": "tf.image.grayscale_to_rgb"}, {"p": "/versions/r1.3/api_docs/python/tf/image/hsv_to_rgb", "k": [], "r": "r1.3", "t": "tf.image.hsv_to_rgb"}, {"p": "/versions/r1.3/api_docs/python/tf/image/non_max_suppression", "k": [], "r": "r1.3", "t": "tf.image.non_max_suppression"}, {"p": "/versions/r1.3/api_docs/python/tf/image/pad_to_bounding_box", "k": [], "r": "r1.3", "t": "tf.image.pad_to_bounding_box"}, {"p": "/versions/r1.3/api_docs/python/tf/image/per_image_standardization", "k": [], "r": "r1.3", "t": "tf.image.per_image_standardization"}, {"p": "/versions/r1.3/api_docs/python/tf/image/random_brightness", "k": [], "r": "r1.3", "t": "tf.image.random_brightness"}, {"p": "/versions/r1.3/api_docs/python/tf/image/random_contrast", "k": [], "r": "r1.3", "t": "tf.image.random_contrast"}, {"p": "/versions/r1.3/api_docs/python/tf/image/random_flip_left_right", "k": [], "r": "r1.3", "t": "tf.image.random_flip_left_right"}, {"p": "/versions/r1.3/api_docs/python/tf/image/random_flip_up_down", "k": [], "r": "r1.3", "t": "tf.image.random_flip_up_down"}, {"p": "/versions/r1.3/api_docs/python/tf/image/random_hue", "k": [], "r": "r1.3", "t": "tf.image.random_hue"}, {"p": "/versions/r1.3/api_docs/python/tf/image/random_saturation", "k": [], "r": "r1.3", "t": "tf.image.random_saturation"}, {"p": "/versions/r1.3/api_docs/python/tf/image/resize_area", "k": [], "r": "r1.3", "t": "tf.image.resize_area"}, {"p": "/versions/r1.3/api_docs/python/tf/image/resize_bicubic", "k": [], "r": "r1.3", "t": "tf.image.resize_bicubic"}, {"p": "/versions/r1.3/api_docs/python/tf/image/resize_bilinear", "k": [], "r": "r1.3", "t": "tf.image.resize_bilinear"}, {"p": "/versions/r1.3/api_docs/python/tf/image/resize_image_with_crop_or_pad", "k": [], "r": "r1.3", "t": "tf.image.resize_image_with_crop_or_pad"}, {"p": "/versions/r1.3/api_docs/python/tf/image/resize_images", "k": [], "r": "r1.3", "t": "tf.image.resize_images"}, {"p": "/versions/r1.3/api_docs/python/tf/image/resize_nearest_neighbor", "k": [], "r": "r1.3", "t": "tf.image.resize_nearest_neighbor"}, {"p": "/versions/r1.3/api_docs/python/tf/image/rgb_to_grayscale", "k": [], "r": "r1.3", "t": "tf.image.rgb_to_grayscale"}, {"p": "/versions/r1.3/api_docs/python/tf/image/rgb_to_hsv", "k": [], "r": "r1.3", "t": "tf.image.rgb_to_hsv"}, {"p": "/versions/r1.3/api_docs/python/tf/image/rot90", "k": [], "r": "r1.3", "t": "tf.image.rot90"}, {"p": "/versions/r1.3/api_docs/python/tf/image/sample_distorted_bounding_box", "k": [], "r": "r1.3", "t": "tf.image.sample_distorted_bounding_box"}, {"p": "/versions/r1.3/api_docs/python/tf/image/total_variation", "k": [], "r": "r1.3", "t": "tf.image.total_variation"}, {"p": "/versions/r1.3/api_docs/python/tf/image/transpose_image", "k": [], "r": "r1.3", "t": "tf.image.transpose_image"}, {"p": "/versions/r1.3/api_docs/python/tf/import_graph_def", "k": [], "r": "r1.3", "t": "tf.import_graph_def"}, {"p": "/versions/r1.3/api_docs/python/tf/initialize_all_tables", "k": [], "r": "r1.3", "t": "tf.initialize_all_tables"}, {"p": "/versions/r1.3/api_docs/python/tf/initialize_all_variables", "k": [], "r": "r1.3", "t": "tf.initialize_all_variables"}, {"p": "/versions/r1.3/api_docs/python/tf/initialize_local_variables", "k": [], "r": "r1.3", "t": "tf.initialize_local_variables"}, {"p": "/versions/r1.3/api_docs/python/tf/initialize_variables", "k": [], "r": "r1.3", "t": "tf.initialize_variables"}, {"p": "/versions/r1.3/api_docs/python/tf/invert_permutation", "k": [], "r": "r1.3", "t": "tf.invert_permutation"}, {"p": "/versions/r1.3/api_docs/python/tf/is_finite", "k": [], "r": "r1.3", "t": "tf.is_finite"}, {"p": "/versions/r1.3/api_docs/python/tf/is_inf", "k": [], "r": "r1.3", "t": "tf.is_inf"}, {"p": "/versions/r1.3/api_docs/python/tf/is_nan", "k": [], "r": "r1.3", "t": "tf.is_nan"}, {"p": "/versions/r1.3/api_docs/python/tf/is_non_decreasing", "k": [], "r": "r1.3", "t": "tf.is_non_decreasing"}, {"p": "/versions/r1.3/api_docs/python/tf/is_numeric_tensor", "k": [], "r": "r1.3", "t": "tf.is_numeric_tensor"}, {"p": "/versions/r1.3/api_docs/python/tf/is_strictly_increasing", "k": [], "r": "r1.3", "t": "tf.is_strictly_increasing"}, {"p": "/versions/r1.3/api_docs/python/tf/is_variable_initialized", "k": [], "r": "r1.3", "t": "tf.is_variable_initialized"}, {"p": "/versions/r1.3/api_docs/python/tf/layers", "k": [], "r": "r1.3", "t": "tf.layers"}, {"p": "/versions/r1.3/api_docs/python/tf/layers/average_pooling1d", "k": [], "r": "r1.3", "t": "tf.layers.average_pooling1d"}, {"p": "/versions/r1.3/api_docs/python/tf/layers/average_pooling2d", "k": [], "r": "r1.3", "t": "tf.layers.average_pooling2d"}, {"p": "/versions/r1.3/api_docs/python/tf/layers/average_pooling3d", "k": [], "r": "r1.3", "t": "tf.layers.average_pooling3d"}, {"p": "/versions/r1.3/api_docs/python/tf/layers/batch_normalization", "k": [], "r": "r1.3", "t": "tf.layers.batch_normalization"}, {"p": "/versions/r1.3/api_docs/python/tf/layers/conv1d", "k": [], "r": "r1.3", "t": "tf.layers.conv1d"}, {"p": "/versions/r1.3/api_docs/python/tf/layers/conv2d", "k": [], "r": "r1.3", "t": "tf.layers.conv2d"}, {"p": "/versions/r1.3/api_docs/python/tf/layers/conv2d_transpose", "k": [], "r": "r1.3", "t": "tf.layers.conv2d_transpose"}, {"p": "/versions/r1.3/api_docs/python/tf/layers/conv3d", "k": [], "r": "r1.3", "t": "tf.layers.conv3d"}, {"p": "/versions/r1.3/api_docs/python/tf/layers/conv3d_transpose", "k": [], "r": "r1.3", "t": "tf.layers.conv3d_transpose"}, {"p": "/versions/r1.3/api_docs/python/tf/layers/dense", "k": [], "r": "r1.3", "t": "tf.layers.dense"}, {"p": "/versions/r1.3/api_docs/python/tf/layers/dropout", "k": [], "r": "r1.3", "t": "tf.layers.dropout"}, {"p": "/versions/r1.3/api_docs/python/tf/layers/max_pooling1d", "k": [], "r": "r1.3", "t": "tf.layers.max_pooling1d"}, {"p": "/versions/r1.3/api_docs/python/tf/layers/max_pooling2d", "k": [], "r": "r1.3", "t": "tf.layers.max_pooling2d"}, {"p": "/versions/r1.3/api_docs/python/tf/layers/max_pooling3d", "k": [], "r": "r1.3", "t": "tf.layers.max_pooling3d"}, {"p": "/versions/r1.3/api_docs/python/tf/layers/separable_conv2d", "k": [], "r": "r1.3", "t": "tf.layers.separable_conv2d"}, {"p": "/versions/r1.3/api_docs/python/tf/lbeta", "k": [], "r": "r1.3", "t": "tf.lbeta"}, {"p": "/versions/r1.3/api_docs/python/tf/less", "k": [], "r": "r1.3", "t": "tf.less"}, {"p": "/versions/r1.3/api_docs/python/tf/less_equal", "k": [], "r": "r1.3", "t": "tf.less_equal"}, {"p": "/versions/r1.3/api_docs/python/tf/lgamma", "k": [], "r": "r1.3", "t": "tf.lgamma"}, {"p": "/versions/r1.3/api_docs/python/tf/lin_space", "k": [], "r": "r1.3", "t": "tf.lin_space"}, {"p": "/versions/r1.3/api_docs/python/tf/load_file_system_library", "k": [], "r": "r1.3", "t": "tf.load_file_system_library"}, {"p": "/versions/r1.3/api_docs/python/tf/load_op_library", "k": [], "r": "r1.3", "t": "tf.load_op_library"}, {"p": "/versions/r1.3/api_docs/python/tf/local_variables", "k": [], "r": "r1.3", "t": "tf.local_variables"}, {"p": "/versions/r1.3/api_docs/python/tf/local_variables_initializer", "k": [], "r": "r1.3", "t": "tf.local_variables_initializer"}, {"p": "/versions/r1.3/api_docs/python/tf/log", "k": [], "r": "r1.3", "t": "tf.log"}, {"p": "/versions/r1.3/api_docs/python/tf/log1p", "k": [], "r": "r1.3", "t": "tf.log1p"}, {"p": "/versions/r1.3/api_docs/python/tf/log_sigmoid", "k": [], "r": "r1.3", "t": "tf.log_sigmoid"}, {"p": "/versions/r1.3/api_docs/python/tf/logging", "k": ["DEBUG", "ERROR", "FATAL", "INFO", "WARN"], "r": "r1.3", "t": "tf.logging"}, {"p": "/versions/r1.3/api_docs/python/tf/logging/TaskLevelStatusMessage", "k": [], "r": "r1.3", "t": "tf.logging.TaskLevelStatusMessage"}, {"p": "/versions/r1.3/api_docs/python/tf/logging/debug", "k": [], "r": "r1.3", "t": "tf.logging.debug"}, {"p": "/versions/r1.3/api_docs/python/tf/logging/error", "k": [], "r": "r1.3", "t": "tf.logging.error"}, {"p": "/versions/r1.3/api_docs/python/tf/logging/fatal", "k": [], "r": "r1.3", "t": "tf.logging.fatal"}, {"p": "/versions/r1.3/api_docs/python/tf/logging/flush", "k": [], "r": "r1.3", "t": "tf.logging.flush"}, {"p": "/versions/r1.3/api_docs/python/tf/logging/get_verbosity", "k": [], "r": "r1.3", "t": "tf.logging.get_verbosity"}, {"p": "/versions/r1.3/api_docs/python/tf/logging/info", "k": [], "r": "r1.3", "t": "tf.logging.info"}, {"p": "/versions/r1.3/api_docs/python/tf/logging/log", "k": [], "r": "r1.3", "t": "tf.logging.log"}, {"p": "/versions/r1.3/api_docs/python/tf/logging/log_every_n", "k": [], "r": "r1.3", "t": "tf.logging.log_every_n"}, {"p": "/versions/r1.3/api_docs/python/tf/logging/log_first_n", "k": [], "r": "r1.3", "t": "tf.logging.log_first_n"}, {"p": "/versions/r1.3/api_docs/python/tf/logging/log_if", "k": [], "r": "r1.3", "t": "tf.logging.log_if"}, {"p": "/versions/r1.3/api_docs/python/tf/logging/set_verbosity", "k": [], "r": "r1.3", "t": "tf.logging.set_verbosity"}, {"p": "/versions/r1.3/api_docs/python/tf/logging/vlog", "k": [], "r": "r1.3", "t": "tf.logging.vlog"}, {"p": "/versions/r1.3/api_docs/python/tf/logging/warn", "k": [], "r": "r1.3", "t": "tf.logging.warn"}, {"p": "/versions/r1.3/api_docs/python/tf/logging/warning", "k": [], "r": "r1.3", "t": "tf.logging.warning"}, {"p": "/versions/r1.3/api_docs/python/tf/logical_and", "k": [], "r": "r1.3", "t": "tf.logical_and"}, {"p": "/versions/r1.3/api_docs/python/tf/logical_not", "k": [], "r": "r1.3", "t": "tf.logical_not"}, {"p": "/versions/r1.3/api_docs/python/tf/logical_or", "k": [], "r": "r1.3", "t": "tf.logical_or"}, {"p": "/versions/r1.3/api_docs/python/tf/logical_xor", "k": [], "r": "r1.3", "t": "tf.logical_xor"}, {"p": "/versions/r1.3/api_docs/python/tf/losses", "k": [], "r": "r1.3", "t": "tf.losses"}, {"p": "/versions/r1.3/api_docs/python/tf/losses/Reduction", "k": ["all", "validate", "MEAN", "NONE", "SUM", "SUM_BY_NONZERO_WEIGHTS"], "r": "r1.3", "t": "tf.losses.Reduction"}, {"p": "/versions/r1.3/api_docs/python/tf/losses/absolute_difference", "k": [], "r": "r1.3", "t": "tf.losses.absolute_difference"}, {"p": "/versions/r1.3/api_docs/python/tf/losses/add_loss", "k": [], "r": "r1.3", "t": "tf.losses.add_loss"}, {"p": "/versions/r1.3/api_docs/python/tf/losses/compute_weighted_loss", "k": [], "r": "r1.3", "t": "tf.losses.compute_weighted_loss"}, {"p": "/versions/r1.3/api_docs/python/tf/losses/cosine_distance", "k": [], "r": "r1.3", "t": "tf.losses.cosine_distance"}, {"p": "/versions/r1.3/api_docs/python/tf/losses/get_losses", "k": [], "r": "r1.3", "t": "tf.losses.get_losses"}, {"p": "/versions/r1.3/api_docs/python/tf/losses/get_regularization_loss", "k": [], "r": "r1.3", "t": "tf.losses.get_regularization_loss"}, {"p": "/versions/r1.3/api_docs/python/tf/losses/get_regularization_losses", "k": [], "r": "r1.3", "t": "tf.losses.get_regularization_losses"}, {"p": "/versions/r1.3/api_docs/python/tf/losses/get_total_loss", "k": [], "r": "r1.3", "t": "tf.losses.get_total_loss"}, {"p": "/versions/r1.3/api_docs/python/tf/losses/hinge_loss", "k": [], "r": "r1.3", "t": "tf.losses.hinge_loss"}, {"p": "/versions/r1.3/api_docs/python/tf/losses/huber_loss", "k": [], "r": "r1.3", "t": "tf.losses.huber_loss"}, {"p": "/versions/r1.3/api_docs/python/tf/losses/log_loss", "k": [], "r": "r1.3", "t": "tf.losses.log_loss"}, {"p": "/versions/r1.3/api_docs/python/tf/losses/mean_pairwise_squared_error", "k": [], "r": "r1.3", "t": "tf.losses.mean_pairwise_squared_error"}, {"p": "/versions/r1.3/api_docs/python/tf/losses/mean_squared_error", "k": [], "r": "r1.3", "t": "tf.losses.mean_squared_error"}, {"p": "/versions/r1.3/api_docs/python/tf/losses/sigmoid_cross_entropy", "k": [], "r": "r1.3", "t": "tf.losses.sigmoid_cross_entropy"}, {"p": "/versions/r1.3/api_docs/python/tf/losses/softmax_cross_entropy", "k": [], "r": "r1.3", "t": "tf.losses.softmax_cross_entropy"}, {"p": "/versions/r1.3/api_docs/python/tf/losses/sparse_softmax_cross_entropy", "k": [], "r": "r1.3", "t": "tf.losses.sparse_softmax_cross_entropy"}, {"p": "/versions/r1.3/api_docs/python/tf/make_ndarray", "k": [], "r": "r1.3", "t": "tf.make_ndarray"}, {"p": "/versions/r1.3/api_docs/python/tf/make_template", "k": [], "r": "r1.3", "t": "tf.make_template"}, {"p": "/versions/r1.3/api_docs/python/tf/make_tensor_proto", "k": [], "r": "r1.3", "t": "tf.make_tensor_proto"}, {"p": "/versions/r1.3/api_docs/python/tf/map_fn", "k": [], "r": "r1.3", "t": "tf.map_fn"}, {"p": "/versions/r1.3/api_docs/python/tf/matching_files", "k": [], "r": "r1.3", "t": "tf.matching_files"}, {"p": "/versions/r1.3/api_docs/python/tf/matmul", "k": [], "r": "r1.3", "t": "tf.matmul"}, {"p": "/versions/r1.3/api_docs/python/tf/matrix_band_part", "k": [], "r": "r1.3", "t": "tf.matrix_band_part"}, {"p": "/versions/r1.3/api_docs/python/tf/matrix_determinant", "k": [], "r": "r1.3", "t": "tf.matrix_determinant"}, {"p": "/versions/r1.3/api_docs/python/tf/matrix_diag", "k": [], "r": "r1.3", "t": "tf.matrix_diag"}, {"p": "/versions/r1.3/api_docs/python/tf/matrix_diag_part", "k": [], "r": "r1.3", "t": "tf.matrix_diag_part"}, {"p": "/versions/r1.3/api_docs/python/tf/matrix_inverse", "k": [], "r": "r1.3", "t": "tf.matrix_inverse"}, {"p": "/versions/r1.3/api_docs/python/tf/matrix_set_diag", "k": [], "r": "r1.3", "t": "tf.matrix_set_diag"}, {"p": "/versions/r1.3/api_docs/python/tf/matrix_solve", "k": [], "r": "r1.3", "t": "tf.matrix_solve"}, {"p": "/versions/r1.3/api_docs/python/tf/matrix_solve_ls", "k": [], "r": "r1.3", "t": "tf.matrix_solve_ls"}, {"p": "/versions/r1.3/api_docs/python/tf/matrix_transpose", "k": [], "r": "r1.3", "t": "tf.matrix_transpose"}, {"p": "/versions/r1.3/api_docs/python/tf/matrix_triangular_solve", "k": [], "r": "r1.3", "t": "tf.matrix_triangular_solve"}, {"p": "/versions/r1.3/api_docs/python/tf/maximum", "k": [], "r": "r1.3", "t": "tf.maximum"}, {"p": "/versions/r1.3/api_docs/python/tf/meshgrid", "k": [], "r": "r1.3", "t": "tf.meshgrid"}, {"p": "/versions/r1.3/api_docs/python/tf/metrics", "k": [], "r": "r1.3", "t": "tf.metrics"}, {"p": "/versions/r1.3/api_docs/python/tf/metrics/accuracy", "k": [], "r": "r1.3", "t": "tf.metrics.accuracy"}, {"p": "/versions/r1.3/api_docs/python/tf/metrics/auc", "k": [], "r": "r1.3", "t": "tf.metrics.auc"}, {"p": "/versions/r1.3/api_docs/python/tf/metrics/false_negatives", "k": [], "r": "r1.3", "t": "tf.metrics.false_negatives"}, {"p": "/versions/r1.3/api_docs/python/tf/metrics/false_positives", "k": [], "r": "r1.3", "t": "tf.metrics.false_positives"}, {"p": "/versions/r1.3/api_docs/python/tf/metrics/mean", "k": [], "r": "r1.3", "t": "tf.metrics.mean"}, {"p": "/versions/r1.3/api_docs/python/tf/metrics/mean_absolute_error", "k": [], "r": "r1.3", "t": "tf.metrics.mean_absolute_error"}, {"p": "/versions/r1.3/api_docs/python/tf/metrics/mean_cosine_distance", "k": [], "r": "r1.3", "t": "tf.metrics.mean_cosine_distance"}, {"p": "/versions/r1.3/api_docs/python/tf/metrics/mean_iou", "k": [], "r": "r1.3", "t": "tf.metrics.mean_iou"}, {"p": "/versions/r1.3/api_docs/python/tf/metrics/mean_per_class_accuracy", "k": [], "r": "r1.3", "t": "tf.metrics.mean_per_class_accuracy"}, {"p": "/versions/r1.3/api_docs/python/tf/metrics/mean_relative_error", "k": [], "r": "r1.3", "t": "tf.metrics.mean_relative_error"}, {"p": "/versions/r1.3/api_docs/python/tf/metrics/mean_squared_error", "k": [], "r": "r1.3", "t": "tf.metrics.mean_squared_error"}, {"p": "/versions/r1.3/api_docs/python/tf/metrics/mean_tensor", "k": [], "r": "r1.3", "t": "tf.metrics.mean_tensor"}, {"p": "/versions/r1.3/api_docs/python/tf/metrics/percentage_below", "k": [], "r": "r1.3", "t": "tf.metrics.percentage_below"}, {"p": "/versions/r1.3/api_docs/python/tf/metrics/precision", "k": [], "r": "r1.3", "t": "tf.metrics.precision"}, {"p": "/versions/r1.3/api_docs/python/tf/metrics/precision_at_thresholds", "k": [], "r": "r1.3", "t": "tf.metrics.precision_at_thresholds"}, {"p": "/versions/r1.3/api_docs/python/tf/metrics/recall", "k": [], "r": "r1.3", "t": "tf.metrics.recall"}, {"p": "/versions/r1.3/api_docs/python/tf/metrics/recall_at_k", "k": [], "r": "r1.3", "t": "tf.metrics.recall_at_k"}, {"p": "/versions/r1.3/api_docs/python/tf/metrics/recall_at_thresholds", "k": [], "r": "r1.3", "t": "tf.metrics.recall_at_thresholds"}, {"p": "/versions/r1.3/api_docs/python/tf/metrics/root_mean_squared_error", "k": [], "r": "r1.3", "t": "tf.metrics.root_mean_squared_error"}, {"p": "/versions/r1.3/api_docs/python/tf/metrics/sensitivity_at_specificity", "k": [], "r": "r1.3", "t": "tf.metrics.sensitivity_at_specificity"}, {"p": "/versions/r1.3/api_docs/python/tf/metrics/sparse_average_precision_at_k", "k": [], "r": "r1.3", "t": "tf.metrics.sparse_average_precision_at_k"}, {"p": "/versions/r1.3/api_docs/python/tf/metrics/sparse_precision_at_k", "k": [], "r": "r1.3", "t": "tf.metrics.sparse_precision_at_k"}, {"p": "/versions/r1.3/api_docs/python/tf/metrics/specificity_at_sensitivity", "k": [], "r": "r1.3", "t": "tf.metrics.specificity_at_sensitivity"}, {"p": "/versions/r1.3/api_docs/python/tf/metrics/true_positives", "k": [], "r": "r1.3", "t": "tf.metrics.true_positives"}, {"p": "/versions/r1.3/api_docs/python/tf/min_max_variable_partitioner", "k": [], "r": "r1.3", "t": "tf.min_max_variable_partitioner"}, {"p": "/versions/r1.3/api_docs/python/tf/minimum", "k": [], "r": "r1.3", "t": "tf.minimum"}, {"p": "/versions/r1.3/api_docs/python/tf/model_variables", "k": [], "r": "r1.3", "t": "tf.model_variables"}, {"p": "/versions/r1.3/api_docs/python/tf/moving_average_variables", "k": [], "r": "r1.3", "t": "tf.moving_average_variables"}, {"p": "/versions/r1.3/api_docs/python/tf/multinomial", "k": [], "r": "r1.3", "t": "tf.multinomial"}, {"p": "/versions/r1.3/api_docs/python/tf/multiply", "k": [], "r": "r1.3", "t": "tf.multiply"}, {"p": "/versions/r1.3/api_docs/python/tf/name_scope", "k": [], "r": "r1.3", "t": "tf.name_scope"}, {"p": "/versions/r1.3/api_docs/python/tf/negative", "k": [], "r": "r1.3", "t": "tf.negative"}, {"p": "/versions/r1.3/api_docs/python/tf/nn", "k": [], "r": "r1.3", "t": "tf.nn"}, {"p": "/versions/r1.3/api_docs/python/tf/nn/all_candidate_sampler", "k": [], "r": "r1.3", "t": "tf.nn.all_candidate_sampler"}, {"p": "/versions/r1.3/api_docs/python/tf/nn/atrous_conv2d", "k": [], "r": "r1.3", "t": "tf.nn.atrous_conv2d"}, {"p": "/versions/r1.3/api_docs/python/tf/nn/atrous_conv2d_transpose", "k": [], "r": "r1.3", "t": "tf.nn.atrous_conv2d_transpose"}, {"p": "/versions/r1.3/api_docs/python/tf/nn/avg_pool", "k": [], "r": "r1.3", "t": "tf.nn.avg_pool"}, {"p": "/versions/r1.3/api_docs/python/tf/nn/avg_pool3d", "k": [], "r": "r1.3", "t": "tf.nn.avg_pool3d"}, {"p": "/versions/r1.3/api_docs/python/tf/nn/batch_norm_with_global_normalization", "k": [], "r": "r1.3", "t": "tf.nn.batch_norm_with_global_normalization"}, {"p": "/versions/r1.3/api_docs/python/tf/nn/batch_normalization", "k": [], "r": "r1.3", "t": "tf.nn.batch_normalization"}, {"p": "/versions/r1.3/api_docs/python/tf/nn/bias_add", "k": [], "r": "r1.3", "t": "tf.nn.bias_add"}, {"p": "/versions/r1.3/api_docs/python/tf/nn/bidirectional_dynamic_rnn", "k": [], "r": "r1.3", "t": "tf.nn.bidirectional_dynamic_rnn"}, {"p": "/versions/r1.3/api_docs/python/tf/nn/compute_accidental_hits", "k": [], "r": "r1.3", "t": "tf.nn.compute_accidental_hits"}, {"p": "/versions/r1.3/api_docs/python/tf/nn/conv1d", "k": [], "r": "r1.3", "t": "tf.nn.conv1d"}, {"p": "/versions/r1.3/api_docs/python/tf/nn/conv2d", "k": [], "r": "r1.3", "t": "tf.nn.conv2d"}, {"p": "/versions/r1.3/api_docs/python/tf/nn/conv2d_backprop_filter", "k": [], "r": "r1.3", "t": "tf.nn.conv2d_backprop_filter"}, {"p": "/versions/r1.3/api_docs/python/tf/nn/conv2d_backprop_input", "k": [], "r": "r1.3", "t": "tf.nn.conv2d_backprop_input"}, {"p": "/versions/r1.3/api_docs/python/tf/nn/conv2d_transpose", "k": [], "r": "r1.3", "t": "tf.nn.conv2d_transpose"}, {"p": "/versions/r1.3/api_docs/python/tf/nn/conv3d", "k": [], "r": "r1.3", "t": "tf.nn.conv3d"}, {"p": "/versions/r1.3/api_docs/python/tf/nn/conv3d_backprop_filter_v2", "k": [], "r": "r1.3", "t": "tf.nn.conv3d_backprop_filter_v2"}, {"p": "/versions/r1.3/api_docs/python/tf/nn/conv3d_transpose", "k": [], "r": "r1.3", "t": "tf.nn.conv3d_transpose"}, {"p": "/versions/r1.3/api_docs/python/tf/nn/convolution", "k": [], "r": "r1.3", "t": "tf.nn.convolution"}, {"p": "/versions/r1.3/api_docs/python/tf/nn/crelu", "k": [], "r": "r1.3", "t": "tf.nn.crelu"}, {"p": "/versions/r1.3/api_docs/python/tf/nn/ctc_beam_search_decoder", "k": [], "r": "r1.3", "t": "tf.nn.ctc_beam_search_decoder"}, {"p": "/versions/r1.3/api_docs/python/tf/nn/ctc_greedy_decoder", "k": [], "r": "r1.3", "t": "tf.nn.ctc_greedy_decoder"}, {"p": "/versions/r1.3/api_docs/python/tf/nn/ctc_loss", "k": [], "r": "r1.3", "t": "tf.nn.ctc_loss"}, {"p": "/versions/r1.3/api_docs/python/tf/nn/depthwise_conv2d", "k": [], "r": "r1.3", "t": "tf.nn.depthwise_conv2d"}, {"p": "/versions/r1.3/api_docs/python/tf/nn/depthwise_conv2d_native", "k": [], "r": "r1.3", "t": "tf.nn.depthwise_conv2d_native"}, {"p": "/versions/r1.3/api_docs/python/tf/nn/depthwise_conv2d_native_backprop_filter", "k": [], "r": "r1.3", "t": "tf.nn.depthwise_conv2d_native_backprop_filter"}, {"p": "/versions/r1.3/api_docs/python/tf/nn/depthwise_conv2d_native_backprop_input", "k": [], "r": "r1.3", "t": "tf.nn.depthwise_conv2d_native_backprop_input"}, {"p": "/versions/r1.3/api_docs/python/tf/nn/dilation2d", "k": [], "r": "r1.3", "t": "tf.nn.dilation2d"}, {"p": "/versions/r1.3/api_docs/python/tf/nn/dropout", "k": [], "r": "r1.3", "t": "tf.nn.dropout"}, {"p": "/versions/r1.3/api_docs/python/tf/nn/dynamic_rnn", "k": [], "r": "r1.3", "t": "tf.nn.dynamic_rnn"}, {"p": "/versions/r1.3/api_docs/python/tf/nn/elu", "k": [], "r": "r1.3", "t": "tf.nn.elu"}, {"p": "/versions/r1.3/api_docs/python/tf/nn/embedding_lookup", "k": [], "r": "r1.3", "t": "tf.nn.embedding_lookup"}, {"p": "/versions/r1.3/api_docs/python/tf/nn/embedding_lookup_sparse", "k": [], "r": "r1.3", "t": "tf.nn.embedding_lookup_sparse"}, {"p": "/versions/r1.3/api_docs/python/tf/nn/erosion2d", "k": [], "r": "r1.3", "t": "tf.nn.erosion2d"}, {"p": "/versions/r1.3/api_docs/python/tf/nn/fixed_unigram_candidate_sampler", "k": [], "r": "r1.3", "t": "tf.nn.fixed_unigram_candidate_sampler"}, {"p": "/versions/r1.3/api_docs/python/tf/nn/fractional_avg_pool", "k": [], "r": "r1.3", "t": "tf.nn.fractional_avg_pool"}, {"p": "/versions/r1.3/api_docs/python/tf/nn/fractional_max_pool", "k": [], "r": "r1.3", "t": "tf.nn.fractional_max_pool"}, {"p": "/versions/r1.3/api_docs/python/tf/nn/fused_batch_norm", "k": [], "r": "r1.3", "t": "tf.nn.fused_batch_norm"}, {"p": "/versions/r1.3/api_docs/python/tf/nn/in_top_k", "k": [], "r": "r1.3", "t": "tf.nn.in_top_k"}, {"p": "/versions/r1.3/api_docs/python/tf/nn/l2_loss", "k": [], "r": "r1.3", "t": "tf.nn.l2_loss"}, {"p": "/versions/r1.3/api_docs/python/tf/nn/l2_normalize", "k": [], "r": "r1.3", "t": "tf.nn.l2_normalize"}, {"p": "/versions/r1.3/api_docs/python/tf/nn/learned_unigram_candidate_sampler", "k": [], "r": "r1.3", "t": "tf.nn.learned_unigram_candidate_sampler"}, {"p": "/versions/r1.3/api_docs/python/tf/nn/local_response_normalization", "k": [], "r": "r1.3", "t": "tf.nn.local_response_normalization"}, {"p": "/versions/r1.3/api_docs/python/tf/nn/log_poisson_loss", "k": [], "r": "r1.3", "t": "tf.nn.log_poisson_loss"}, {"p": "/versions/r1.3/api_docs/python/tf/nn/log_softmax", "k": [], "r": "r1.3", "t": "tf.nn.log_softmax"}, {"p": "/versions/r1.3/api_docs/python/tf/nn/log_uniform_candidate_sampler", "k": [], "r": "r1.3", "t": "tf.nn.log_uniform_candidate_sampler"}, {"p": "/versions/r1.3/api_docs/python/tf/nn/max_pool", "k": [], "r": "r1.3", "t": "tf.nn.max_pool"}, {"p": "/versions/r1.3/api_docs/python/tf/nn/max_pool3d", "k": [], "r": "r1.3", "t": "tf.nn.max_pool3d"}, {"p": "/versions/r1.3/api_docs/python/tf/nn/max_pool_with_argmax", "k": [], "r": "r1.3", "t": "tf.nn.max_pool_with_argmax"}, {"p": "/versions/r1.3/api_docs/python/tf/nn/moments", "k": [], "r": "r1.3", "t": "tf.nn.moments"}, {"p": "/versions/r1.3/api_docs/python/tf/nn/nce_loss", "k": [], "r": "r1.3", "t": "tf.nn.nce_loss"}, {"p": "/versions/r1.3/api_docs/python/tf/nn/normalize_moments", "k": [], "r": "r1.3", "t": "tf.nn.normalize_moments"}, {"p": "/versions/r1.3/api_docs/python/tf/nn/pool", "k": [], "r": "r1.3", "t": "tf.nn.pool"}, {"p": "/versions/r1.3/api_docs/python/tf/nn/quantized_avg_pool", "k": [], "r": "r1.3", "t": "tf.nn.quantized_avg_pool"}, {"p": "/versions/r1.3/api_docs/python/tf/nn/quantized_conv2d", "k": [], "r": "r1.3", "t": "tf.nn.quantized_conv2d"}, {"p": "/versions/r1.3/api_docs/python/tf/nn/quantized_max_pool", "k": [], "r": "r1.3", "t": "tf.nn.quantized_max_pool"}, {"p": "/versions/r1.3/api_docs/python/tf/nn/quantized_relu_x", "k": [], "r": "r1.3", "t": "tf.nn.quantized_relu_x"}, {"p": "/versions/r1.3/api_docs/python/tf/nn/raw_rnn", "k": [], "r": "r1.3", "t": "tf.nn.raw_rnn"}, {"p": "/versions/r1.3/api_docs/python/tf/nn/relu", "k": [], "r": "r1.3", "t": "tf.nn.relu"}, {"p": "/versions/r1.3/api_docs/python/tf/nn/relu6", "k": [], "r": "r1.3", "t": "tf.nn.relu6"}, {"p": "/versions/r1.3/api_docs/python/tf/nn/relu_layer", "k": [], "r": "r1.3", "t": "tf.nn.relu_layer"}, {"p": "/versions/r1.3/api_docs/python/tf/nn/rnn_cell", "k": [], "r": "r1.3", "t": "tf.nn.rnn_cell"}, {"p": "/versions/r1.3/api_docs/python/tf/nn/sampled_softmax_loss", "k": [], "r": "r1.3", "t": "tf.nn.sampled_softmax_loss"}, {"p": "/versions/r1.3/api_docs/python/tf/nn/separable_conv2d", "k": [], "r": "r1.3", "t": "tf.nn.separable_conv2d"}, {"p": "/versions/r1.3/api_docs/python/tf/nn/sigmoid_cross_entropy_with_logits", "k": [], "r": "r1.3", "t": "tf.nn.sigmoid_cross_entropy_with_logits"}, {"p": "/versions/r1.3/api_docs/python/tf/nn/softmax", "k": [], "r": "r1.3", "t": "tf.nn.softmax"}, {"p": "/versions/r1.3/api_docs/python/tf/nn/softmax_cross_entropy_with_logits", "k": [], "r": "r1.3", "t": "tf.nn.softmax_cross_entropy_with_logits"}, {"p": "/versions/r1.3/api_docs/python/tf/nn/softplus", "k": [], "r": "r1.3", "t": "tf.nn.softplus"}, {"p": "/versions/r1.3/api_docs/python/tf/nn/softsign", "k": [], "r": "r1.3", "t": "tf.nn.softsign"}, {"p": "/versions/r1.3/api_docs/python/tf/nn/sparse_softmax_cross_entropy_with_logits", "k": [], "r": "r1.3", "t": "tf.nn.sparse_softmax_cross_entropy_with_logits"}, {"p": "/versions/r1.3/api_docs/python/tf/nn/static_bidirectional_rnn", "k": [], "r": "r1.3", "t": "tf.nn.static_bidirectional_rnn"}, {"p": "/versions/r1.3/api_docs/python/tf/nn/static_rnn", "k": [], "r": "r1.3", "t": "tf.nn.static_rnn"}, {"p": "/versions/r1.3/api_docs/python/tf/nn/static_state_saving_rnn", "k": [], "r": "r1.3", "t": "tf.nn.static_state_saving_rnn"}, {"p": "/versions/r1.3/api_docs/python/tf/nn/sufficient_statistics", "k": [], "r": "r1.3", "t": "tf.nn.sufficient_statistics"}, {"p": "/versions/r1.3/api_docs/python/tf/nn/top_k", "k": [], "r": "r1.3", "t": "tf.nn.top_k"}, {"p": "/versions/r1.3/api_docs/python/tf/nn/uniform_candidate_sampler", "k": [], "r": "r1.3", "t": "tf.nn.uniform_candidate_sampler"}, {"p": "/versions/r1.3/api_docs/python/tf/nn/weighted_cross_entropy_with_logits", "k": [], "r": "r1.3", "t": "tf.nn.weighted_cross_entropy_with_logits"}, {"p": "/versions/r1.3/api_docs/python/tf/nn/weighted_moments", "k": [], "r": "r1.3", "t": "tf.nn.weighted_moments"}, {"p": "/versions/r1.3/api_docs/python/tf/nn/with_space_to_batch", "k": [], "r": "r1.3", "t": "tf.nn.with_space_to_batch"}, {"p": "/versions/r1.3/api_docs/python/tf/nn/xw_plus_b", "k": [], "r": "r1.3", "t": "tf.nn.xw_plus_b"}, {"p": "/versions/r1.3/api_docs/python/tf/nn/zero_fraction", "k": [], "r": "r1.3", "t": "tf.nn.zero_fraction"}, {"p": "/versions/r1.3/api_docs/python/tf/no_op", "k": [], "r": "r1.3", "t": "tf.no_op"}, {"p": "/versions/r1.3/api_docs/python/tf/no_regularizer", "k": [], "r": "r1.3", "t": "tf.no_regularizer"}, {"p": "/versions/r1.3/api_docs/python/tf/norm", "k": [], "r": "r1.3", "t": "tf.norm"}, {"p": "/versions/r1.3/api_docs/python/tf/not_equal", "k": [], "r": "r1.3", "t": "tf.not_equal"}, {"p": "/versions/r1.3/api_docs/python/tf/one_hot", "k": [], "r": "r1.3", "t": "tf.one_hot"}, {"p": "/versions/r1.3/api_docs/python/tf/ones", "k": [], "r": "r1.3", "t": "tf.ones"}, {"p": "/versions/r1.3/api_docs/python/tf/ones_initializer", "k": ["__call__", "__init__", "from_config", "get_config"], "r": "r1.3", "t": "tf.ones_initializer"}, {"p": "/versions/r1.3/api_docs/python/tf/ones_like", "k": [], "r": "r1.3", "t": "tf.ones_like"}, {"p": "/versions/r1.3/api_docs/python/tf/op_scope", "k": [], "r": "r1.3", "t": "tf.op_scope"}, {"p": "/versions/r1.3/api_docs/python/tf/orthogonal_initializer", "k": ["__call__", "__init__", "from_config", "get_config"], "r": "r1.3", "t": "tf.orthogonal_initializer"}, {"p": "/versions/r1.3/api_docs/python/tf/pad", "k": [], "r": "r1.3", "t": "tf.pad"}, {"p": "/versions/r1.3/api_docs/python/tf/parallel_stack", "k": [], "r": "r1.3", "t": "tf.parallel_stack"}, {"p": "/versions/r1.3/api_docs/python/tf/parse_example", "k": [], "r": "r1.3", "t": "tf.parse_example"}, {"p": "/versions/r1.3/api_docs/python/tf/parse_single_example", "k": [], "r": "r1.3", "t": "tf.parse_single_example"}, {"p": "/versions/r1.3/api_docs/python/tf/parse_single_sequence_example", "k": [], "r": "r1.3", "t": "tf.parse_single_sequence_example"}, {"p": "/versions/r1.3/api_docs/python/tf/parse_tensor", "k": [], "r": "r1.3", "t": "tf.parse_tensor"}, {"p": "/versions/r1.3/api_docs/python/tf/placeholder", "k": [], "r": "r1.3", "t": "tf.placeholder"}, {"p": "/versions/r1.3/api_docs/python/tf/placeholder_with_default", "k": [], "r": "r1.3", "t": "tf.placeholder_with_default"}, {"p": "/versions/r1.3/api_docs/python/tf/polygamma", "k": [], "r": "r1.3", "t": "tf.polygamma"}, {"p": "/versions/r1.3/api_docs/python/tf/pow", "k": [], "r": "r1.3", "t": "tf.pow"}, {"p": "/versions/r1.3/api_docs/python/tf/profiler", "k": [], "r": "r1.3", "t": "tf.profiler"}, {"p": "/versions/r1.3/api_docs/python/tf/profiler/AdviceProto", "k": ["Checker", "CheckersEntry"], "r": "r1.3", "t": "tf.profiler.AdviceProto"}, {"p": "/versions/r1.3/api_docs/python/tf/profiler/AdviceProto/Checker", "k": [], "r": "r1.3", "t": "tf.profiler.AdviceProto.Checker"}, {"p": "/versions/r1.3/api_docs/python/tf/profiler/AdviceProto/CheckersEntry", "k": [], "r": "r1.3", "t": "tf.profiler.AdviceProto.CheckersEntry"}, {"p": "/versions/r1.3/api_docs/python/tf/profiler/GraphNodeProto", "k": ["InputShapesEntry"], "r": "r1.3", "t": "tf.profiler.GraphNodeProto"}, {"p": "/versions/r1.3/api_docs/python/tf/profiler/GraphNodeProto/InputShapesEntry", "k": [], "r": "r1.3", "t": "tf.profiler.GraphNodeProto.InputShapesEntry"}, {"p": "/versions/r1.3/api_docs/python/tf/profiler/MultiGraphNodeProto", "k": [], "r": "r1.3", "t": "tf.profiler.MultiGraphNodeProto"}, {"p": "/versions/r1.3/api_docs/python/tf/profiler/OpLogProto", "k": [], "r": "r1.3", "t": "tf.profiler.OpLogProto"}, {"p": "/versions/r1.3/api_docs/python/tf/profiler/ProfileOptionBuilder", "k": ["__init__", "account_displayed_op_only", "build", "float_operation", "order_by", "select", "time_and_memory", "trainable_variables_parameter", "with_accounted_types", "with_empty_output", "with_file_output", "with_max_depth", "with_min_execution_time", "with_min_float_operations", "with_min_memory", "with_min_occurrence", "with_min_parameters", "with_node_names", "with_stdout_output", "with_step", "with_timeline_output"], "r": "r1.3", "t": "tf.profiler.ProfileOptionBuilder"}, {"p": "/versions/r1.3/api_docs/python/tf/profiler/Profiler", "k": ["__init__", "add_step", "advise", "profile_graph", "profile_name_scope", "profile_operations", "profile_python"], "r": "r1.3", "t": "tf.profiler.Profiler"}, {"p": "/versions/r1.3/api_docs/python/tf/profiler/advise", "k": [], "r": "r1.3", "t": "tf.profiler.advise"}, {"p": "/versions/r1.3/api_docs/python/tf/profiler/profile", "k": [], "r": "r1.3", "t": "tf.profiler.profile"}, {"p": "/versions/r1.3/api_docs/python/tf/profiler/write_op_log", "k": [], "r": "r1.3", "t": "tf.profiler.write_op_log"}, {"p": "/versions/r1.3/api_docs/python/tf/py_func", "k": [], "r": "r1.3", "t": "tf.py_func"}, {"p": "/versions/r1.3/api_docs/python/tf/python_io", "k": [], "r": "r1.3", "t": "tf.python_io"}, {"p": "/versions/r1.3/api_docs/python/tf/python_io/TFRecordCompressionType", "k": ["GZIP", "NONE", "ZLIB"], "r": "r1.3", "t": "tf.python_io.TFRecordCompressionType"}, {"p": "/versions/r1.3/api_docs/python/tf/python_io/TFRecordOptions", "k": ["__init__", "get_compression_type_string", "compression_type_map"], "r": "r1.3", "t": "tf.python_io.TFRecordOptions"}, {"p": "/versions/r1.3/api_docs/python/tf/python_io/TFRecordWriter", "k": ["__enter__", "__exit__", "__init__", "close", "flush", "write"], "r": "r1.3", "t": "tf.python_io.TFRecordWriter"}, {"p": "/versions/r1.3/api_docs/python/tf/python_io/tf_record_iterator", "k": [], "r": "r1.3", "t": "tf.python_io.tf_record_iterator"}, {"p": "/versions/r1.3/api_docs/python/tf/pywrap_tensorflow", "k": [], "r": "r1.3", "t": "tf.pywrap_tensorflow"}, {"p": "/versions/r1.3/api_docs/python/tf/qr", "k": [], "r": "r1.3", "t": "tf.qr"}, {"p": "/versions/r1.3/api_docs/python/tf/quantize_v2", "k": [], "r": "r1.3", "t": "tf.quantize_v2"}, {"p": "/versions/r1.3/api_docs/python/tf/quantized_concat", "k": [], "r": "r1.3", "t": "tf.quantized_concat"}, {"p": "/versions/r1.3/api_docs/python/tf/random_crop", "k": [], "r": "r1.3", "t": "tf.random_crop"}, {"p": "/versions/r1.3/api_docs/python/tf/random_gamma", "k": [], "r": "r1.3", "t": "tf.random_gamma"}, {"p": "/versions/r1.3/api_docs/python/tf/random_normal", "k": [], "r": "r1.3", "t": "tf.random_normal"}, {"p": "/versions/r1.3/api_docs/python/tf/random_normal_initializer", "k": ["__call__", "__init__", "from_config", "get_config"], "r": "r1.3", "t": "tf.random_normal_initializer"}, {"p": "/versions/r1.3/api_docs/python/tf/random_poisson", "k": [], "r": "r1.3", "t": "tf.random_poisson"}, {"p": "/versions/r1.3/api_docs/python/tf/random_shuffle", "k": [], "r": "r1.3", "t": "tf.random_shuffle"}, {"p": "/versions/r1.3/api_docs/python/tf/random_uniform", "k": [], "r": "r1.3", "t": "tf.random_uniform"}, {"p": "/versions/r1.3/api_docs/python/tf/random_uniform_initializer", "k": ["__call__", "__init__", "from_config", "get_config"], "r": "r1.3", "t": "tf.random_uniform_initializer"}, {"p": "/versions/r1.3/api_docs/python/tf/range", "k": [], "r": "r1.3", "t": "tf.range"}, {"p": "/versions/r1.3/api_docs/python/tf/rank", "k": [], "r": "r1.3", "t": "tf.rank"}, {"p": "/versions/r1.3/api_docs/python/tf/read_file", "k": [], "r": "r1.3", "t": "tf.read_file"}, {"p": "/versions/r1.3/api_docs/python/tf/real", "k": [], "r": "r1.3", "t": "tf.real"}, {"p": "/versions/r1.3/api_docs/python/tf/realdiv", "k": [], "r": "r1.3", "t": "tf.realdiv"}, {"p": "/versions/r1.3/api_docs/python/tf/reciprocal", "k": [], "r": "r1.3", "t": "tf.reciprocal"}, {"p": "/versions/r1.3/api_docs/python/tf/reduce_all", "k": [], "r": "r1.3", "t": "tf.reduce_all"}, {"p": "/versions/r1.3/api_docs/python/tf/reduce_any", "k": [], "r": "r1.3", "t": "tf.reduce_any"}, {"p": "/versions/r1.3/api_docs/python/tf/reduce_join", "k": [], "r": "r1.3", "t": "tf.reduce_join"}, {"p": "/versions/r1.3/api_docs/python/tf/reduce_logsumexp", "k": [], "r": "r1.3", "t": "tf.reduce_logsumexp"}, {"p": "/versions/r1.3/api_docs/python/tf/reduce_max", "k": [], "r": "r1.3", "t": "tf.reduce_max"}, {"p": "/versions/r1.3/api_docs/python/tf/reduce_mean", "k": [], "r": "r1.3", "t": "tf.reduce_mean"}, {"p": "/versions/r1.3/api_docs/python/tf/reduce_min", "k": [], "r": "r1.3", "t": "tf.reduce_min"}, {"p": "/versions/r1.3/api_docs/python/tf/reduce_prod", "k": [], "r": "r1.3", "t": "tf.reduce_prod"}, {"p": "/versions/r1.3/api_docs/python/tf/reduce_sum", "k": [], "r": "r1.3", "t": "tf.reduce_sum"}, {"p": "/versions/r1.3/api_docs/python/tf/register_tensor_conversion_function", "k": [], "r": "r1.3", "t": "tf.register_tensor_conversion_function"}, {"p": "/versions/r1.3/api_docs/python/tf/report_uninitialized_variables", "k": [], "r": "r1.3", "t": "tf.report_uninitialized_variables"}, {"p": "/versions/r1.3/api_docs/python/tf/required_space_to_batch_paddings", "k": [], "r": "r1.3", "t": "tf.required_space_to_batch_paddings"}, {"p": "/versions/r1.3/api_docs/python/tf/reset_default_graph", "k": [], "r": "r1.3", "t": "tf.reset_default_graph"}, {"p": "/versions/r1.3/api_docs/python/tf/reshape", "k": [], "r": "r1.3", "t": "tf.reshape"}, {"p": "/versions/r1.3/api_docs/python/tf/resource_loader", "k": [], "r": "r1.3", "t": "tf.resource_loader"}, {"p": "/versions/r1.3/api_docs/python/tf/resource_loader/get_data_files_path", "k": [], "r": "r1.3", "t": "tf.resource_loader.get_data_files_path"}, {"p": "/versions/r1.3/api_docs/python/tf/resource_loader/get_path_to_datafile", "k": [], "r": "r1.3", "t": "tf.resource_loader.get_path_to_datafile"}, {"p": "/versions/r1.3/api_docs/python/tf/resource_loader/get_root_dir_with_all_resources", "k": [], "r": "r1.3", "t": "tf.resource_loader.get_root_dir_with_all_resources"}, {"p": "/versions/r1.3/api_docs/python/tf/resource_loader/load_resource", "k": [], "r": "r1.3", "t": "tf.resource_loader.load_resource"}, {"p": "/versions/r1.3/api_docs/python/tf/resource_loader/readahead_file_path", "k": [], "r": "r1.3", "t": "tf.resource_loader.readahead_file_path"}, {"p": "/versions/r1.3/api_docs/python/tf/reverse", "k": [], "r": "r1.3", "t": "tf.reverse"}, {"p": "/versions/r1.3/api_docs/python/tf/reverse_sequence", "k": [], "r": "r1.3", "t": "tf.reverse_sequence"}, {"p": "/versions/r1.3/api_docs/python/tf/reverse_v2", "k": [], "r": "r1.3", "t": "tf.reverse_v2"}, {"p": "/versions/r1.3/api_docs/python/tf/rint", "k": [], "r": "r1.3", "t": "tf.rint"}, {"p": "/versions/r1.3/api_docs/python/tf/round", "k": [], "r": "r1.3", "t": "tf.round"}, {"p": "/versions/r1.3/api_docs/python/tf/rsqrt", "k": [], "r": "r1.3", "t": "tf.rsqrt"}, {"p": "/versions/r1.3/api_docs/python/tf/saturate_cast", "k": [], "r": "r1.3", "t": "tf.saturate_cast"}, {"p": "/versions/r1.3/api_docs/python/tf/saved_model", "k": [], "r": "r1.3", "t": "tf.saved_model"}, {"p": "/versions/r1.3/api_docs/python/tf/saved_model/builder", "k": [], "r": "r1.3", "t": "tf.saved_model.builder"}, {"p": "/versions/r1.3/api_docs/python/tf/saved_model/builder/SavedModelBuilder", "k": ["__init__", "add_meta_graph", "add_meta_graph_and_variables", "save"], "r": "r1.3", "t": "tf.saved_model.builder.SavedModelBuilder"}, {"p": "/versions/r1.3/api_docs/python/tf/saved_model/constants", "k": ["ASSETS_DIRECTORY", "ASSETS_KEY", "LEGACY_INIT_OP_KEY", "MAIN_OP_KEY", "SAVED_MODEL_FILENAME_PB", "SAVED_MODEL_FILENAME_PBTXT", "SAVED_MODEL_SCHEMA_VERSION", "VARIABLES_DIRECTORY", "VARIABLES_FILENAME"], "r": "r1.3", "t": "tf.saved_model.constants"}, {"p": "/versions/r1.3/api_docs/python/tf/saved_model/loader", "k": [], "r": "r1.3", "t": "tf.saved_model.loader"}, {"p": "/versions/r1.3/api_docs/python/tf/saved_model/loader/load", "k": [], "r": "r1.3", "t": "tf.saved_model.loader.load"}, {"p": "/versions/r1.3/api_docs/python/tf/saved_model/loader/maybe_saved_model_directory", "k": [], "r": "r1.3", "t": "tf.saved_model.loader.maybe_saved_model_directory"}, {"p": "/versions/r1.3/api_docs/python/tf/saved_model/main_op", "k": [], "r": "r1.3", "t": "tf.saved_model.main_op"}, {"p": "/versions/r1.3/api_docs/python/tf/saved_model/main_op/main_op", "k": [], "r": "r1.3", "t": "tf.saved_model.main_op.main_op"}, {"p": "/versions/r1.3/api_docs/python/tf/saved_model/main_op/main_op_with_restore", "k": [], "r": "r1.3", "t": "tf.saved_model.main_op.main_op_with_restore"}, {"p": "/versions/r1.3/api_docs/python/tf/saved_model/signature_constants", "k": ["CLASSIFY_INPUTS", "CLASSIFY_METHOD_NAME", "CLASSIFY_OUTPUT_CLASSES", "CLASSIFY_OUTPUT_SCORES", "DEFAULT_SERVING_SIGNATURE_DEF_KEY", "PREDICT_INPUTS", "PREDICT_METHOD_NAME", "PREDICT_OUTPUTS", "REGRESS_INPUTS", "REGRESS_METHOD_NAME", "REGRESS_OUTPUTS"], "r": "r1.3", "t": "tf.saved_model.signature_constants"}, {"p": "/versions/r1.3/api_docs/python/tf/saved_model/signature_def_utils", "k": [], "r": "r1.3", "t": "tf.saved_model.signature_def_utils"}, {"p": "/versions/r1.3/api_docs/python/tf/saved_model/signature_def_utils/build_signature_def", "k": [], "r": "r1.3", "t": "tf.saved_model.signature_def_utils.build_signature_def"}, {"p": "/versions/r1.3/api_docs/python/tf/saved_model/signature_def_utils/classification_signature_def", "k": [], "r": "r1.3", "t": "tf.saved_model.signature_def_utils.classification_signature_def"}, {"p": "/versions/r1.3/api_docs/python/tf/saved_model/signature_def_utils/predict_signature_def", "k": [], "r": "r1.3", "t": "tf.saved_model.signature_def_utils.predict_signature_def"}, {"p": "/versions/r1.3/api_docs/python/tf/saved_model/signature_def_utils/regression_signature_def", "k": [], "r": "r1.3", "t": "tf.saved_model.signature_def_utils.regression_signature_def"}, {"p": "/versions/r1.3/api_docs/python/tf/saved_model/tag_constants", "k": ["GPU", "SERVING", "TRAINING"], "r": "r1.3", "t": "tf.saved_model.tag_constants"}, {"p": "/versions/r1.3/api_docs/python/tf/saved_model/utils", "k": [], "r": "r1.3", "t": "tf.saved_model.utils"}, {"p": "/versions/r1.3/api_docs/python/tf/saved_model/utils/build_tensor_info", "k": [], "r": "r1.3", "t": "tf.saved_model.utils.build_tensor_info"}, {"p": "/versions/r1.3/api_docs/python/tf/saved_model/utils/get_tensor_from_tensor_info", "k": [], "r": "r1.3", "t": "tf.saved_model.utils.get_tensor_from_tensor_info"}, {"p": "/versions/r1.3/api_docs/python/tf/scalar_mul", "k": [], "r": "r1.3", "t": "tf.scalar_mul"}, {"p": "/versions/r1.3/api_docs/python/tf/scan", "k": [], "r": "r1.3", "t": "tf.scan"}, {"p": "/versions/r1.3/api_docs/python/tf/scatter_add", "k": [], "r": "r1.3", "t": "tf.scatter_add"}, {"p": "/versions/r1.3/api_docs/python/tf/scatter_div", "k": [], "r": "r1.3", "t": "tf.scatter_div"}, {"p": "/versions/r1.3/api_docs/python/tf/scatter_mul", "k": [], "r": "r1.3", "t": "tf.scatter_mul"}, {"p": "/versions/r1.3/api_docs/python/tf/scatter_nd", "k": [], "r": "r1.3", "t": "tf.scatter_nd"}, {"p": "/versions/r1.3/api_docs/python/tf/scatter_nd_add", "k": [], "r": "r1.3", "t": "tf.scatter_nd_add"}, {"p": "/versions/r1.3/api_docs/python/tf/scatter_nd_sub", "k": [], "r": "r1.3", "t": "tf.scatter_nd_sub"}, {"p": "/versions/r1.3/api_docs/python/tf/scatter_nd_update", "k": [], "r": "r1.3", "t": "tf.scatter_nd_update"}, {"p": "/versions/r1.3/api_docs/python/tf/scatter_sub", "k": [], "r": "r1.3", "t": "tf.scatter_sub"}, {"p": "/versions/r1.3/api_docs/python/tf/scatter_update", "k": [], "r": "r1.3", "t": "tf.scatter_update"}, {"p": "/versions/r1.3/api_docs/python/tf/segment_max", "k": [], "r": "r1.3", "t": "tf.segment_max"}, {"p": "/versions/r1.3/api_docs/python/tf/segment_mean", "k": [], "r": "r1.3", "t": "tf.segment_mean"}, {"p": "/versions/r1.3/api_docs/python/tf/segment_min", "k": [], "r": "r1.3", "t": "tf.segment_min"}, {"p": "/versions/r1.3/api_docs/python/tf/segment_prod", "k": [], "r": "r1.3", "t": "tf.segment_prod"}, {"p": "/versions/r1.3/api_docs/python/tf/segment_sum", "k": [], "r": "r1.3", "t": "tf.segment_sum"}, {"p": "/versions/r1.3/api_docs/python/tf/self_adjoint_eig", "k": [], "r": "r1.3", "t": "tf.self_adjoint_eig"}, {"p": "/versions/r1.3/api_docs/python/tf/self_adjoint_eigvals", "k": [], "r": "r1.3", "t": "tf.self_adjoint_eigvals"}, {"p": "/versions/r1.3/api_docs/python/tf/sequence_mask", "k": [], "r": "r1.3", "t": "tf.sequence_mask"}, {"p": "/versions/r1.3/api_docs/python/tf/serialize_many_sparse", "k": [], "r": "r1.3", "t": "tf.serialize_many_sparse"}, {"p": "/versions/r1.3/api_docs/python/tf/serialize_sparse", "k": [], "r": "r1.3", "t": "tf.serialize_sparse"}, {"p": "/versions/r1.3/api_docs/python/tf/set_random_seed", "k": [], "r": "r1.3", "t": "tf.set_random_seed"}, {"p": "/versions/r1.3/api_docs/python/tf/setdiff1d", "k": [], "r": "r1.3", "t": "tf.setdiff1d"}, {"p": "/versions/r1.3/api_docs/python/tf/sets", "k": [], "r": "r1.3", "t": "tf.sets"}, {"p": "/versions/r1.3/api_docs/python/tf/sets/set_difference", "k": [], "r": "r1.3", "t": "tf.sets.set_difference"}, {"p": "/versions/r1.3/api_docs/python/tf/sets/set_intersection", "k": [], "r": "r1.3", "t": "tf.sets.set_intersection"}, {"p": "/versions/r1.3/api_docs/python/tf/sets/set_size", "k": [], "r": "r1.3", "t": "tf.sets.set_size"}, {"p": "/versions/r1.3/api_docs/python/tf/sets/set_union", "k": [], "r": "r1.3", "t": "tf.sets.set_union"}, {"p": "/versions/r1.3/api_docs/python/tf/shape", "k": [], "r": "r1.3", "t": "tf.shape"}, {"p": "/versions/r1.3/api_docs/python/tf/shape_n", "k": [], "r": "r1.3", "t": "tf.shape_n"}, {"p": "/versions/r1.3/api_docs/python/tf/sigmoid", "k": [], "r": "r1.3", "t": "tf.sigmoid"}, {"p": "/versions/r1.3/api_docs/python/tf/sign", "k": [], "r": "r1.3", "t": "tf.sign"}, {"p": "/versions/r1.3/api_docs/python/tf/sin", "k": [], "r": "r1.3", "t": "tf.sin"}, {"p": "/versions/r1.3/api_docs/python/tf/sinh", "k": [], "r": "r1.3", "t": "tf.sinh"}, {"p": "/versions/r1.3/api_docs/python/tf/size", "k": [], "r": "r1.3", "t": "tf.size"}, {"p": "/versions/r1.3/api_docs/python/tf/slice", "k": [], "r": "r1.3", "t": "tf.slice"}, {"p": "/versions/r1.3/api_docs/python/tf/space_to_batch", "k": [], "r": "r1.3", "t": "tf.space_to_batch"}, {"p": "/versions/r1.3/api_docs/python/tf/space_to_batch_nd", "k": [], "r": "r1.3", "t": "tf.space_to_batch_nd"}, {"p": "/versions/r1.3/api_docs/python/tf/space_to_depth", "k": [], "r": "r1.3", "t": "tf.space_to_depth"}, {"p": "/versions/r1.3/api_docs/python/tf/sparse_add", "k": [], "r": "r1.3", "t": "tf.sparse_add"}, {"p": "/versions/r1.3/api_docs/python/tf/sparse_concat", "k": [], "r": "r1.3", "t": "tf.sparse_concat"}, {"p": "/versions/r1.3/api_docs/python/tf/sparse_fill_empty_rows", "k": [], "r": "r1.3", "t": "tf.sparse_fill_empty_rows"}, {"p": "/versions/r1.3/api_docs/python/tf/sparse_mask", "k": [], "r": "r1.3", "t": "tf.sparse_mask"}, {"p": "/versions/r1.3/api_docs/python/tf/sparse_matmul", "k": [], "r": "r1.3", "t": "tf.sparse_matmul"}, {"p": "/versions/r1.3/api_docs/python/tf/sparse_maximum", "k": [], "r": "r1.3", "t": "tf.sparse_maximum"}, {"p": "/versions/r1.3/api_docs/python/tf/sparse_merge", "k": [], "r": "r1.3", "t": "tf.sparse_merge"}, {"p": "/versions/r1.3/api_docs/python/tf/sparse_minimum", "k": [], "r": "r1.3", "t": "tf.sparse_minimum"}, {"p": "/versions/r1.3/api_docs/python/tf/sparse_placeholder", "k": [], "r": "r1.3", "t": "tf.sparse_placeholder"}, {"p": "/versions/r1.3/api_docs/python/tf/sparse_reduce_max", "k": [], "r": "r1.3", "t": "tf.sparse_reduce_max"}, {"p": "/versions/r1.3/api_docs/python/tf/sparse_reduce_max_sparse", "k": [], "r": "r1.3", "t": "tf.sparse_reduce_max_sparse"}, {"p": "/versions/r1.3/api_docs/python/tf/sparse_reduce_sum", "k": [], "r": "r1.3", "t": "tf.sparse_reduce_sum"}, {"p": "/versions/r1.3/api_docs/python/tf/sparse_reduce_sum_sparse", "k": [], "r": "r1.3", "t": "tf.sparse_reduce_sum_sparse"}, {"p": "/versions/r1.3/api_docs/python/tf/sparse_reorder", "k": [], "r": "r1.3", "t": "tf.sparse_reorder"}, {"p": "/versions/r1.3/api_docs/python/tf/sparse_reset_shape", "k": [], "r": "r1.3", "t": "tf.sparse_reset_shape"}, {"p": "/versions/r1.3/api_docs/python/tf/sparse_reshape", "k": [], "r": "r1.3", "t": "tf.sparse_reshape"}, {"p": "/versions/r1.3/api_docs/python/tf/sparse_retain", "k": [], "r": "r1.3", "t": "tf.sparse_retain"}, {"p": "/versions/r1.3/api_docs/python/tf/sparse_segment_mean", "k": [], "r": "r1.3", "t": "tf.sparse_segment_mean"}, {"p": "/versions/r1.3/api_docs/python/tf/sparse_segment_sqrt_n", "k": [], "r": "r1.3", "t": "tf.sparse_segment_sqrt_n"}, {"p": "/versions/r1.3/api_docs/python/tf/sparse_segment_sum", "k": [], "r": "r1.3", "t": "tf.sparse_segment_sum"}, {"p": "/versions/r1.3/api_docs/python/tf/sparse_slice", "k": [], "r": "r1.3", "t": "tf.sparse_slice"}, {"p": "/versions/r1.3/api_docs/python/tf/sparse_softmax", "k": [], "r": "r1.3", "t": "tf.sparse_softmax"}, {"p": "/versions/r1.3/api_docs/python/tf/sparse_split", "k": [], "r": "r1.3", "t": "tf.sparse_split"}, {"p": "/versions/r1.3/api_docs/python/tf/sparse_tensor_dense_matmul", "k": [], "r": "r1.3", "t": "tf.sparse_tensor_dense_matmul"}, {"p": "/versions/r1.3/api_docs/python/tf/sparse_tensor_to_dense", "k": [], "r": "r1.3", "t": "tf.sparse_tensor_to_dense"}, {"p": "/versions/r1.3/api_docs/python/tf/sparse_to_dense", "k": [], "r": "r1.3", "t": "tf.sparse_to_dense"}, {"p": "/versions/r1.3/api_docs/python/tf/sparse_to_indicator", "k": [], "r": "r1.3", "t": "tf.sparse_to_indicator"}, {"p": "/versions/r1.3/api_docs/python/tf/sparse_transpose", "k": [], "r": "r1.3", "t": "tf.sparse_transpose"}, {"p": "/versions/r1.3/api_docs/python/tf/spectral", "k": [], "r": "r1.3", "t": "tf.spectral"}, {"p": "/versions/r1.3/api_docs/python/tf/spectral/irfft", "k": [], "r": "r1.3", "t": "tf.spectral.irfft"}, {"p": "/versions/r1.3/api_docs/python/tf/spectral/irfft2d", "k": [], "r": "r1.3", "t": "tf.spectral.irfft2d"}, {"p": "/versions/r1.3/api_docs/python/tf/spectral/irfft3d", "k": [], "r": "r1.3", "t": "tf.spectral.irfft3d"}, {"p": "/versions/r1.3/api_docs/python/tf/spectral/rfft", "k": [], "r": "r1.3", "t": "tf.spectral.rfft"}, {"p": "/versions/r1.3/api_docs/python/tf/spectral/rfft2d", "k": [], "r": "r1.3", "t": "tf.spectral.rfft2d"}, {"p": "/versions/r1.3/api_docs/python/tf/spectral/rfft3d", "k": [], "r": "r1.3", "t": "tf.spectral.rfft3d"}, {"p": "/versions/r1.3/api_docs/python/tf/split", "k": [], "r": "r1.3", "t": "tf.split"}, {"p": "/versions/r1.3/api_docs/python/tf/sqrt", "k": [], "r": "r1.3", "t": "tf.sqrt"}, {"p": "/versions/r1.3/api_docs/python/tf/square", "k": [], "r": "r1.3", "t": "tf.square"}, {"p": "/versions/r1.3/api_docs/python/tf/squared_difference", "k": [], "r": "r1.3", "t": "tf.squared_difference"}, {"p": "/versions/r1.3/api_docs/python/tf/squeeze", "k": [], "r": "r1.3", "t": "tf.squeeze"}, {"p": "/versions/r1.3/api_docs/python/tf/stack", "k": [], "r": "r1.3", "t": "tf.stack"}, {"p": "/versions/r1.3/api_docs/python/tf/stop_gradient", "k": [], "r": "r1.3", "t": "tf.stop_gradient"}, {"p": "/versions/r1.3/api_docs/python/tf/strided_slice", "k": [], "r": "r1.3", "t": "tf.strided_slice"}, {"p": "/versions/r1.3/api_docs/python/tf/string_join", "k": [], "r": "r1.3", "t": "tf.string_join"}, {"p": "/versions/r1.3/api_docs/python/tf/string_split", "k": [], "r": "r1.3", "t": "tf.string_split"}, {"p": "/versions/r1.3/api_docs/python/tf/string_to_hash_bucket", "k": [], "r": "r1.3", "t": "tf.string_to_hash_bucket"}, {"p": "/versions/r1.3/api_docs/python/tf/string_to_hash_bucket_fast", "k": [], "r": "r1.3", "t": "tf.string_to_hash_bucket_fast"}, {"p": "/versions/r1.3/api_docs/python/tf/string_to_hash_bucket_strong", "k": [], "r": "r1.3", "t": "tf.string_to_hash_bucket_strong"}, {"p": "/versions/r1.3/api_docs/python/tf/string_to_number", "k": [], "r": "r1.3", "t": "tf.string_to_number"}, {"p": "/versions/r1.3/api_docs/python/tf/substr", "k": [], "r": "r1.3", "t": "tf.substr"}, {"p": "/versions/r1.3/api_docs/python/tf/subtract", "k": [], "r": "r1.3", "t": "tf.subtract"}, {"p": "/versions/r1.3/api_docs/python/tf/summary", "k": [], "r": "r1.3", "t": "tf.summary"}, {"p": "/versions/r1.3/api_docs/python/tf/summary/FileWriter", "k": ["__init__", "add_event", "add_graph", "add_meta_graph", "add_run_metadata", "add_session_log", "add_summary", "close", "flush", "get_logdir", "reopen"], "r": "r1.3", "t": "tf.summary.FileWriter"}, {"p": "/versions/r1.3/api_docs/python/tf/summary/FileWriterCache", "k": ["clear", "get"], "r": "r1.3", "t": "tf.summary.FileWriterCache"}, {"p": "/versions/r1.3/api_docs/python/tf/summary/SummaryDescription", "k": [], "r": "r1.3", "t": "tf.summary.SummaryDescription"}, {"p": "/versions/r1.3/api_docs/python/tf/summary/TaggedRunMetadata", "k": [], "r": "r1.3", "t": "tf.summary.TaggedRunMetadata"}, {"p": "/versions/r1.3/api_docs/python/tf/summary/audio", "k": [], "r": "r1.3", "t": "tf.summary.audio"}, {"p": "/versions/r1.3/api_docs/python/tf/summary/get_summary_description", "k": [], "r": "r1.3", "t": "tf.summary.get_summary_description"}, {"p": "/versions/r1.3/api_docs/python/tf/summary/histogram", "k": [], "r": "r1.3", "t": "tf.summary.histogram"}, {"p": "/versions/r1.3/api_docs/python/tf/summary/image", "k": [], "r": "r1.3", "t": "tf.summary.image"}, {"p": "/versions/r1.3/api_docs/python/tf/summary/merge", "k": [], "r": "r1.3", "t": "tf.summary.merge"}, {"p": "/versions/r1.3/api_docs/python/tf/summary/merge_all", "k": [], "r": "r1.3", "t": "tf.summary.merge_all"}, {"p": "/versions/r1.3/api_docs/python/tf/summary/scalar", "k": [], "r": "r1.3", "t": "tf.summary.scalar"}, {"p": "/versions/r1.3/api_docs/python/tf/summary/tensor_summary", "k": [], "r": "r1.3", "t": "tf.summary.tensor_summary"}, {"p": "/versions/r1.3/api_docs/python/tf/summary/text", "k": [], "r": "r1.3", "t": "tf.summary.text"}, {"p": "/versions/r1.3/api_docs/python/tf/svd", "k": [], "r": "r1.3", "t": "tf.svd"}, {"p": "/versions/r1.3/api_docs/python/tf/sysconfig", "k": [], "r": "r1.3", "t": "tf.sysconfig"}, {"p": "/versions/r1.3/api_docs/python/tf/sysconfig/get_include", "k": [], "r": "r1.3", "t": "tf.sysconfig.get_include"}, {"p": "/versions/r1.3/api_docs/python/tf/sysconfig/get_lib", "k": [], "r": "r1.3", "t": "tf.sysconfig.get_lib"}, {"p": "/versions/r1.3/api_docs/python/tf/tables_initializer", "k": [], "r": "r1.3", "t": "tf.tables_initializer"}, {"p": "/versions/r1.3/api_docs/python/tf/tan", "k": [], "r": "r1.3", "t": "tf.tan"}, {"p": "/versions/r1.3/api_docs/python/tf/tanh", "k": [], "r": "r1.3", "t": "tf.tanh"}, {"p": "/versions/r1.3/api_docs/python/tf/tensordot", "k": [], "r": "r1.3", "t": "tf.tensordot"}, {"p": "/versions/r1.3/api_docs/python/tf/test", "k": [], "r": "r1.3", "t": "tf.test"}, {"p": "/versions/r1.3/api_docs/python/tf/test/Benchmark", "k": ["is_abstract", "report_benchmark", "run_op_benchmark"], "r": "r1.3", "t": "tf.test.Benchmark"}, {"p": "/versions/r1.3/api_docs/python/tf/test/StubOutForTesting", "k": ["CleanUp", "Set", "SmartSet", "SmartUnsetAll", "UnsetAll", "__del__", "__enter__", "__exit__", "__init__"], "r": "r1.3", "t": "tf.test.StubOutForTesting"}, {"p": "/versions/r1.3/api_docs/python/tf/test/TestCase", "k": ["failureException", "__call__", "__eq__", "__init__", "__ne__", "addCleanup", "addTypeEqualityFunc", "assertAllClose", "assertAllCloseAccordingToType", "assertAllEqual", "assertAlmostEqual", "assertAlmostEquals", "assertArrayNear", "assertDeviceEqual", "assertDictContainsSubset", "assertDictEqual", "assertEqual", "assertEquals", "assertFalse", "assertGreater", "assertGreaterEqual", "assertIn", "assertIs", "assertIsInstance", "assertIsNone", "assertIsNot", "assertIsNotNone", "assertItemsEqual", "assertLess", "assertLessEqual", "assertListEqual", "assertMultiLineEqual", "assertNDArrayNear", "assertNear", "assertNotAlmostEqual", "assertNotAlmostEquals", "assertNotEqual", "assertNotEquals", "assertNotIn", "assertNotIsInstance", "assertNotRegexpMatches", "assertProtoEquals", "assertProtoEqualsVersion", "assertRaises", "assertRaisesOpError", "assertRaisesRegexp", "assertRaisesWithPredicateMatch", "assertRegexpMatches", "assertSequenceEqual", "assertSetEqual", "assertShapeEqual", "assertStartsWith", "assertTrue", "assertTupleEqual", "assert_", "checkedThread", "countTestCases", "debug", "defaultTestResult", "doCleanups", "fail", "failIf", "failIfAlmostEqual", "failIfEqual", "failUnless", "failUnlessAlmostEqual", "failUnlessEqual", "failUnlessRaises", "get_temp_dir", "id", "run", "setUp", "setUpClass", "shortDescription", "skipTest", "tearDown", "tearDownClass", "test_session", "longMessage", "maxDiff"], "r": "r1.3", "t": "tf.test.TestCase"}, {"p": "/versions/r1.3/api_docs/python/tf/test/TestCase/failureException", "k": [], "r": "r1.3", "t": "tf.test.TestCase.failureException"}, {"p": "/versions/r1.3/api_docs/python/tf/test/assert_equal_graph_def", "k": [], "r": "r1.3", "t": "tf.test.assert_equal_graph_def"}, {"p": "/versions/r1.3/api_docs/python/tf/test/compute_gradient", "k": [], "r": "r1.3", "t": "tf.test.compute_gradient"}, {"p": "/versions/r1.3/api_docs/python/tf/test/compute_gradient_error", "k": [], "r": "r1.3", "t": "tf.test.compute_gradient_error"}, {"p": "/versions/r1.3/api_docs/python/tf/test/create_local_cluster", "k": [], "r": "r1.3", "t": "tf.test.create_local_cluster"}, {"p": "/versions/r1.3/api_docs/python/tf/test/get_temp_dir", "k": [], "r": "r1.3", "t": "tf.test.get_temp_dir"}, {"p": "/versions/r1.3/api_docs/python/tf/test/gpu_device_name", "k": [], "r": "r1.3", "t": "tf.test.gpu_device_name"}, {"p": "/versions/r1.3/api_docs/python/tf/test/is_built_with_cuda", "k": [], "r": "r1.3", "t": "tf.test.is_built_with_cuda"}, {"p": "/versions/r1.3/api_docs/python/tf/test/is_gpu_available", "k": [], "r": "r1.3", "t": "tf.test.is_gpu_available"}, {"p": "/versions/r1.3/api_docs/python/tf/test/main", "k": [], "r": "r1.3", "t": "tf.test.main"}, {"p": "/versions/r1.3/api_docs/python/tf/test/test_src_dir_path", "k": [], "r": "r1.3", "t": "tf.test.test_src_dir_path"}, {"p": "/versions/r1.3/api_docs/python/tf/tile", "k": [], "r": "r1.3", "t": "tf.tile"}, {"p": "/versions/r1.3/api_docs/python/tf/to_bfloat16", "k": [], "r": "r1.3", "t": "tf.to_bfloat16"}, {"p": "/versions/r1.3/api_docs/python/tf/to_double", "k": [], "r": "r1.3", "t": "tf.to_double"}, {"p": "/versions/r1.3/api_docs/python/tf/to_float", "k": [], "r": "r1.3", "t": "tf.to_float"}, {"p": "/versions/r1.3/api_docs/python/tf/to_int32", "k": [], "r": "r1.3", "t": "tf.to_int32"}, {"p": "/versions/r1.3/api_docs/python/tf/to_int64", "k": [], "r": "r1.3", "t": "tf.to_int64"}, {"p": "/versions/r1.3/api_docs/python/tf/tools", "k": [], "r": "r1.3", "t": "tf.tools"}, {"p": "/versions/r1.3/api_docs/python/tf/trace", "k": [], "r": "r1.3", "t": "tf.trace"}, {"p": "/versions/r1.3/api_docs/python/tf/train", "k": [], "r": "r1.3", "t": "tf.train"}, {"p": "/versions/r1.3/api_docs/python/tf/train/AdadeltaOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.3", "t": "tf.train.AdadeltaOptimizer"}, {"p": "/versions/r1.3/api_docs/python/tf/train/AdagradDAOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.3", "t": "tf.train.AdagradDAOptimizer"}, {"p": "/versions/r1.3/api_docs/python/tf/train/AdagradOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.3", "t": "tf.train.AdagradOptimizer"}, {"p": "/versions/r1.3/api_docs/python/tf/train/AdamOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.3", "t": "tf.train.AdamOptimizer"}, {"p": "/versions/r1.3/api_docs/python/tf/train/BytesList", "k": [], "r": "r1.3", "t": "tf.train.BytesList"}, {"p": "/versions/r1.3/api_docs/python/tf/train/CheckpointSaverHook", "k": ["__init__", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "r1.3", "t": "tf.train.CheckpointSaverHook"}, {"p": "/versions/r1.3/api_docs/python/tf/train/CheckpointSaverListener", "k": ["after_save", "before_save", "begin", "end"], "r": "r1.3", "t": "tf.train.CheckpointSaverListener"}, {"p": "/versions/r1.3/api_docs/python/tf/train/ChiefSessionCreator", "k": ["__init__", "create_session"], "r": "r1.3", "t": "tf.train.ChiefSessionCreator"}, {"p": "/versions/r1.3/api_docs/python/tf/train/ClusterDef", "k": [], "r": "r1.3", "t": "tf.train.ClusterDef"}, {"p": "/versions/r1.3/api_docs/python/tf/train/ClusterSpec", "k": ["jobs", "__bool__", "__eq__", "__init__", "__ne__", "__nonzero__", "as_cluster_def", "as_dict", "job_tasks", "num_tasks", "task_address", "task_indices"], "r": "r1.3", "t": "tf.train.ClusterSpec"}, {"p": "/versions/r1.3/api_docs/python/tf/train/Coordinator", "k": ["joined", "__init__", "clear_stop", "join", "raise_requested_exception", "register_thread", "request_stop", "should_stop", "stop_on_exception", "wait_for_stop"], "r": "r1.3", "t": "tf.train.Coordinator"}, {"p": "/versions/r1.3/api_docs/python/tf/train/Example", "k": [], "r": "r1.3", "t": "tf.train.Example"}, {"p": "/versions/r1.3/api_docs/python/tf/train/ExponentialMovingAverage", "k": ["__init__", "apply", "average", "average_name", "variables_to_restore"], "r": "r1.3", "t": "tf.train.ExponentialMovingAverage"}, {"p": "/versions/r1.3/api_docs/python/tf/train/Feature", "k": [], "r": "r1.3", "t": "tf.train.Feature"}, {"p": "/versions/r1.3/api_docs/python/tf/train/FeatureList", "k": [], "r": "r1.3", "t": "tf.train.FeatureList"}, {"p": "/versions/r1.3/api_docs/python/tf/train/FeatureLists", "k": ["FeatureListEntry"], "r": "r1.3", "t": "tf.train.FeatureLists"}, {"p": "/versions/r1.3/api_docs/python/tf/train/FeatureLists/FeatureListEntry", "k": [], "r": "r1.3", "t": "tf.train.FeatureLists.FeatureListEntry"}, {"p": "/versions/r1.3/api_docs/python/tf/train/Features", "k": ["FeatureEntry"], "r": "r1.3", "t": "tf.train.Features"}, {"p": "/versions/r1.3/api_docs/python/tf/train/Features/FeatureEntry", "k": [], "r": "r1.3", "t": "tf.train.Features.FeatureEntry"}, {"p": "/versions/r1.3/api_docs/python/tf/train/FeedFnHook", "k": ["__init__", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "r1.3", "t": "tf.train.FeedFnHook"}, {"p": "/versions/r1.3/api_docs/python/tf/train/FinalOpsHook", "k": ["final_ops_values", "__init__", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "r1.3", "t": "tf.train.FinalOpsHook"}, {"p": "/versions/r1.3/api_docs/python/tf/train/FloatList", "k": [], "r": "r1.3", "t": "tf.train.FloatList"}, {"p": "/versions/r1.3/api_docs/python/tf/train/FtrlOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.3", "t": "tf.train.FtrlOptimizer"}, {"p": "/versions/r1.3/api_docs/python/tf/train/GlobalStepWaiterHook", "k": ["__init__", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "r1.3", "t": "tf.train.GlobalStepWaiterHook"}, {"p": "/versions/r1.3/api_docs/python/tf/train/GradientDescentOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.3", "t": "tf.train.GradientDescentOptimizer"}, {"p": "/versions/r1.3/api_docs/python/tf/train/Int64List", "k": [], "r": "r1.3", "t": "tf.train.Int64List"}, {"p": "/versions/r1.3/api_docs/python/tf/train/JobDef", "k": ["TasksEntry"], "r": "r1.3", "t": "tf.train.JobDef"}, {"p": "/versions/r1.3/api_docs/python/tf/train/JobDef/TasksEntry", "k": [], "r": "r1.3", "t": "tf.train.JobDef.TasksEntry"}, {"p": "/versions/r1.3/api_docs/python/tf/train/LoggingTensorHook", "k": ["__init__", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "r1.3", "t": "tf.train.LoggingTensorHook"}, {"p": "/versions/r1.3/api_docs/python/tf/train/LooperThread", "k": ["daemon", "ident", "name", "__init__", "getName", "isAlive", "isDaemon", "is_alive", "join", "loop", "run", "run_loop", "setDaemon", "setName", "start", "start_loop", "stop_loop"], "r": "r1.3", "t": "tf.train.LooperThread"}, {"p": "/versions/r1.3/api_docs/python/tf/train/MomentumOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.3", "t": "tf.train.MomentumOptimizer"}, {"p": "/versions/r1.3/api_docs/python/tf/train/MonitoredSession", "k": ["graph", "__enter__", "__exit__", "__init__", "close", "run", "should_stop"], "r": "r1.3", "t": "tf.train.MonitoredSession"}, {"p": "/versions/r1.3/api_docs/python/tf/train/MonitoredTrainingSession", "k": [], "r": "r1.3", "t": "tf.train.MonitoredTrainingSession"}, {"p": "/versions/r1.3/api_docs/python/tf/train/NanLossDuringTrainingError", "k": [], "r": "r1.3", "t": "tf.train.NanLossDuringTrainingError"}, {"p": "/versions/r1.3/api_docs/python/tf/train/NanTensorHook", "k": ["__init__", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "r1.3", "t": "tf.train.NanTensorHook"}, {"p": "/versions/r1.3/api_docs/python/tf/train/NewCheckpointReader", "k": [], "r": "r1.3", "t": "tf.train.NewCheckpointReader"}, {"p": "/versions/r1.3/api_docs/python/tf/train/Optimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.3", "t": "tf.train.Optimizer"}, {"p": "/versions/r1.3/api_docs/python/tf/train/ProximalAdagradOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.3", "t": "tf.train.ProximalAdagradOptimizer"}, {"p": "/versions/r1.3/api_docs/python/tf/train/ProximalGradientDescentOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.3", "t": "tf.train.ProximalGradientDescentOptimizer"}, {"p": "/versions/r1.3/api_docs/python/tf/train/QueueRunner", "k": ["cancel_op", "close_op", "enqueue_ops", "exceptions_raised", "name", "queue", "queue_closed_exception_types", "__init__", "create_threads", "from_proto", "to_proto"], "r": "r1.3", "t": "tf.train.QueueRunner"}, {"p": "/versions/r1.3/api_docs/python/tf/train/RMSPropOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.3", "t": "tf.train.RMSPropOptimizer"}, {"p": "/versions/r1.3/api_docs/python/tf/train/Saver", "k": ["last_checkpoints", "__init__", "as_saver_def", "build", "export_meta_graph", "from_proto", "recover_last_checkpoints", "restore", "save", "set_last_checkpoints", "set_last_checkpoints_with_time", "to_proto"], "r": "r1.3", "t": "tf.train.Saver"}, {"p": "/versions/r1.3/api_docs/python/tf/train/SaverDef", "k": ["CheckpointFormatVersion", "LEGACY", "V1", "V2"], "r": "r1.3", "t": "tf.train.SaverDef"}, {"p": "/versions/r1.3/api_docs/python/tf/train/Scaffold", "k": ["init_feed_dict", "init_fn", "init_op", "local_init_op", "ready_for_local_init_op", "ready_op", "saver", "summary_op", "__init__", "finalize", "get_or_default"], "r": "r1.3", "t": "tf.train.Scaffold"}, {"p": "/versions/r1.3/api_docs/python/tf/train/SecondOrStepTimer", "k": ["__init__", "last_triggered_step", "reset", "should_trigger_for_step", "update_last_triggered_step"], "r": "r1.3", "t": "tf.train.SecondOrStepTimer"}, {"p": "/versions/r1.3/api_docs/python/tf/train/SequenceExample", "k": [], "r": "r1.3", "t": "tf.train.SequenceExample"}, {"p": "/versions/r1.3/api_docs/python/tf/train/Server", "k": ["server_def", "target", "__init__", "create_local_server", "join", "start"], "r": "r1.3", "t": "tf.train.Server"}, {"p": "/versions/r1.3/api_docs/python/tf/train/ServerDef", "k": [], "r": "r1.3", "t": "tf.train.ServerDef"}, {"p": "/versions/r1.3/api_docs/python/tf/train/SessionCreator", "k": ["create_session"], "r": "r1.3", "t": "tf.train.SessionCreator"}, {"p": "/versions/r1.3/api_docs/python/tf/train/SessionManager", "k": ["__init__", "prepare_session", "recover_session", "wait_for_session"], "r": "r1.3", "t": "tf.train.SessionManager"}, {"p": "/versions/r1.3/api_docs/python/tf/train/SessionRunArgs", "k": ["feed_dict", "fetches", "options", "__new__"], "r": "r1.3", "t": "tf.train.SessionRunArgs"}, {"p": "/versions/r1.3/api_docs/python/tf/train/SessionRunContext", "k": ["original_args", "session", "stop_requested", "__init__", "request_stop"], "r": "r1.3", "t": "tf.train.SessionRunContext"}, {"p": "/versions/r1.3/api_docs/python/tf/train/SessionRunHook", "k": ["after_create_session", "after_run", "before_run", "begin", "end"], "r": "r1.3", "t": "tf.train.SessionRunHook"}, {"p": "/versions/r1.3/api_docs/python/tf/train/SessionRunValues", "k": ["options", "results", "run_metadata", "__new__"], "r": "r1.3", "t": "tf.train.SessionRunValues"}, {"p": "/versions/r1.3/api_docs/python/tf/train/SingularMonitoredSession", "k": ["graph", "__enter__", "__exit__", "__init__", "close", "raw_session", "run", "should_stop"], "r": "r1.3", "t": "tf.train.SingularMonitoredSession"}, {"p": "/versions/r1.3/api_docs/python/tf/train/StepCounterHook", "k": ["__init__", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "r1.3", "t": "tf.train.StepCounterHook"}, {"p": "/versions/r1.3/api_docs/python/tf/train/StopAtStepHook", "k": ["__init__", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "r1.3", "t": "tf.train.StopAtStepHook"}, {"p": "/versions/r1.3/api_docs/python/tf/train/SummarySaverHook", "k": ["__init__", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "r1.3", "t": "tf.train.SummarySaverHook"}, {"p": "/versions/r1.3/api_docs/python/tf/train/Supervisor", "k": ["coord", "global_step", "init_feed_dict", "init_op", "is_chief", "ready_for_local_init_op", "ready_op", "save_model_secs", "save_path", "save_summaries_secs", "saver", "session_manager", "summary_op", "summary_writer", "Loop", "PrepareSession", "RequestStop", "ShouldStop", "StartQueueRunners", "StartStandardServices", "Stop", "StopOnException", "SummaryComputed", "WaitForStop", "__init__", "loop", "managed_session", "prepare_or_wait_for_session", "request_stop", "should_stop", "start_queue_runners", "start_standard_services", "stop", "stop_on_exception", "summary_computed", "wait_for_stop", "USE_DEFAULT"], "r": "r1.3", "t": "tf.train.Supervisor"}, {"p": "/versions/r1.3/api_docs/python/tf/train/SyncReplicasOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_chief_queue_runner", "get_init_tokens_op", "get_name", "get_slot", "get_slot_names", "make_session_run_hook", "minimize", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.3", "t": "tf.train.SyncReplicasOptimizer"}, {"p": "/versions/r1.3/api_docs/python/tf/train/WorkerSessionCreator", "k": ["__init__", "create_session"], "r": "r1.3", "t": "tf.train.WorkerSessionCreator"}, {"p": "/versions/r1.3/api_docs/python/tf/train/add_queue_runner", "k": [], "r": "r1.3", "t": "tf.train.add_queue_runner"}, {"p": "/versions/r1.3/api_docs/python/tf/train/assert_global_step", "k": [], "r": "r1.3", "t": "tf.train.assert_global_step"}, {"p": "/versions/r1.3/api_docs/python/tf/train/basic_train_loop", "k": [], "r": "r1.3", "t": "tf.train.basic_train_loop"}, {"p": "/versions/r1.3/api_docs/python/tf/train/batch", "k": [], "r": "r1.3", "t": "tf.train.batch"}, {"p": "/versions/r1.3/api_docs/python/tf/train/batch_join", "k": [], "r": "r1.3", "t": "tf.train.batch_join"}, {"p": "/versions/r1.3/api_docs/python/tf/train/checkpoint_exists", "k": [], "r": "r1.3", "t": "tf.train.checkpoint_exists"}, {"p": "/versions/r1.3/api_docs/python/tf/train/create_global_step", "k": [], "r": "r1.3", "t": "tf.train.create_global_step"}, {"p": "/versions/r1.3/api_docs/python/tf/train/do_quantize_training_on_graphdef", "k": [], "r": "r1.3", "t": "tf.train.do_quantize_training_on_graphdef"}, {"p": "/versions/r1.3/api_docs/python/tf/train/exponential_decay", "k": [], "r": "r1.3", "t": "tf.train.exponential_decay"}, {"p": "/versions/r1.3/api_docs/python/tf/train/export_meta_graph", "k": [], "r": "r1.3", "t": "tf.train.export_meta_graph"}, {"p": "/versions/r1.3/api_docs/python/tf/train/generate_checkpoint_state_proto", "k": [], "r": "r1.3", "t": "tf.train.generate_checkpoint_state_proto"}, {"p": "/versions/r1.3/api_docs/python/tf/train/get_checkpoint_mtimes", "k": [], "r": "r1.3", "t": "tf.train.get_checkpoint_mtimes"}, {"p": "/versions/r1.3/api_docs/python/tf/train/get_checkpoint_state", "k": [], "r": "r1.3", "t": "tf.train.get_checkpoint_state"}, {"p": "/versions/r1.3/api_docs/python/tf/train/get_global_step", "k": [], "r": "r1.3", "t": "tf.train.get_global_step"}, {"p": "/versions/r1.3/api_docs/python/tf/train/get_or_create_global_step", "k": [], "r": "r1.3", "t": "tf.train.get_or_create_global_step"}, {"p": "/versions/r1.3/api_docs/python/tf/train/global_step", "k": [], "r": "r1.3", "t": "tf.train.global_step"}, {"p": "/versions/r1.3/api_docs/python/tf/train/import_meta_graph", "k": [], "r": "r1.3", "t": "tf.train.import_meta_graph"}, {"p": "/versions/r1.3/api_docs/python/tf/train/init_from_checkpoint", "k": [], "r": "r1.3", "t": "tf.train.init_from_checkpoint"}, {"p": "/versions/r1.3/api_docs/python/tf/train/input_producer", "k": [], "r": "r1.3", "t": "tf.train.input_producer"}, {"p": "/versions/r1.3/api_docs/python/tf/train/inverse_time_decay", "k": [], "r": "r1.3", "t": "tf.train.inverse_time_decay"}, {"p": "/versions/r1.3/api_docs/python/tf/train/latest_checkpoint", "k": [], "r": "r1.3", "t": "tf.train.latest_checkpoint"}, {"p": "/versions/r1.3/api_docs/python/tf/train/limit_epochs", "k": [], "r": "r1.3", "t": "tf.train.limit_epochs"}, {"p": "/versions/r1.3/api_docs/python/tf/train/list_variables", "k": [], "r": "r1.3", "t": "tf.train.list_variables"}, {"p": "/versions/r1.3/api_docs/python/tf/train/load_checkpoint", "k": [], "r": "r1.3", "t": "tf.train.load_checkpoint"}, {"p": "/versions/r1.3/api_docs/python/tf/train/load_variable", "k": [], "r": "r1.3", "t": "tf.train.load_variable"}, {"p": "/versions/r1.3/api_docs/python/tf/train/match_filenames_once", "k": [], "r": "r1.3", "t": "tf.train.match_filenames_once"}, {"p": "/versions/r1.3/api_docs/python/tf/train/maybe_batch", "k": [], "r": "r1.3", "t": "tf.train.maybe_batch"}, {"p": "/versions/r1.3/api_docs/python/tf/train/maybe_batch_join", "k": [], "r": "r1.3", "t": "tf.train.maybe_batch_join"}, {"p": "/versions/r1.3/api_docs/python/tf/train/maybe_shuffle_batch", "k": [], "r": "r1.3", "t": "tf.train.maybe_shuffle_batch"}, {"p": "/versions/r1.3/api_docs/python/tf/train/maybe_shuffle_batch_join", "k": [], "r": "r1.3", "t": "tf.train.maybe_shuffle_batch_join"}, {"p": "/versions/r1.3/api_docs/python/tf/train/natural_exp_decay", "k": [], "r": "r1.3", "t": "tf.train.natural_exp_decay"}, {"p": "/versions/r1.3/api_docs/python/tf/train/piecewise_constant", "k": [], "r": "r1.3", "t": "tf.train.piecewise_constant"}, {"p": "/versions/r1.3/api_docs/python/tf/train/polynomial_decay", "k": [], "r": "r1.3", "t": "tf.train.polynomial_decay"}, {"p": "/versions/r1.3/api_docs/python/tf/train/queue_runner", "k": [], "r": "r1.3", "t": "tf.train.queue_runner"}, {"p": "/versions/r1.3/api_docs/python/tf/train/range_input_producer", "k": [], "r": "r1.3", "t": "tf.train.range_input_producer"}, {"p": "/versions/r1.3/api_docs/python/tf/train/replica_device_setter", "k": [], "r": "r1.3", "t": "tf.train.replica_device_setter"}, {"p": "/versions/r1.3/api_docs/python/tf/train/sdca_fprint", "k": [], "r": "r1.3", "t": "tf.train.sdca_fprint"}, {"p": "/versions/r1.3/api_docs/python/tf/train/sdca_optimizer", "k": [], "r": "r1.3", "t": "tf.train.sdca_optimizer"}, {"p": "/versions/r1.3/api_docs/python/tf/train/sdca_shrink_l1", "k": [], "r": "r1.3", "t": "tf.train.sdca_shrink_l1"}, {"p": "/versions/r1.3/api_docs/python/tf/train/shuffle_batch", "k": [], "r": "r1.3", "t": "tf.train.shuffle_batch"}, {"p": "/versions/r1.3/api_docs/python/tf/train/shuffle_batch_join", "k": [], "r": "r1.3", "t": "tf.train.shuffle_batch_join"}, {"p": "/versions/r1.3/api_docs/python/tf/train/slice_input_producer", "k": [], "r": "r1.3", "t": "tf.train.slice_input_producer"}, {"p": "/versions/r1.3/api_docs/python/tf/train/start_queue_runners", "k": [], "r": "r1.3", "t": "tf.train.start_queue_runners"}, {"p": "/versions/r1.3/api_docs/python/tf/train/string_input_producer", "k": [], "r": "r1.3", "t": "tf.train.string_input_producer"}, {"p": "/versions/r1.3/api_docs/python/tf/train/summary_iterator", "k": [], "r": "r1.3", "t": "tf.train.summary_iterator"}, {"p": "/versions/r1.3/api_docs/python/tf/train/update_checkpoint_state", "k": [], "r": "r1.3", "t": "tf.train.update_checkpoint_state"}, {"p": "/versions/r1.3/api_docs/python/tf/train/write_graph", "k": [], "r": "r1.3", "t": "tf.train.write_graph"}, {"p": "/versions/r1.3/api_docs/python/tf/trainable_variables", "k": [], "r": "r1.3", "t": "tf.trainable_variables"}, {"p": "/versions/r1.3/api_docs/python/tf/transpose", "k": [], "r": "r1.3", "t": "tf.transpose"}, {"p": "/versions/r1.3/api_docs/python/tf/truediv", "k": [], "r": "r1.3", "t": "tf.truediv"}, {"p": "/versions/r1.3/api_docs/python/tf/truncated_normal", "k": [], "r": "r1.3", "t": "tf.truncated_normal"}, {"p": "/versions/r1.3/api_docs/python/tf/truncated_normal_initializer", "k": ["__call__", "__init__", "from_config", "get_config"], "r": "r1.3", "t": "tf.truncated_normal_initializer"}, {"p": "/versions/r1.3/api_docs/python/tf/truncatediv", "k": [], "r": "r1.3", "t": "tf.truncatediv"}, {"p": "/versions/r1.3/api_docs/python/tf/truncatemod", "k": [], "r": "r1.3", "t": "tf.truncatemod"}, {"p": "/versions/r1.3/api_docs/python/tf/tuple", "k": [], "r": "r1.3", "t": "tf.tuple"}, {"p": "/versions/r1.3/api_docs/python/tf/uniform_unit_scaling_initializer", "k": ["__call__", "__init__", "from_config", "get_config"], "r": "r1.3", "t": "tf.uniform_unit_scaling_initializer"}, {"p": "/versions/r1.3/api_docs/python/tf/unique", "k": [], "r": "r1.3", "t": "tf.unique"}, {"p": "/versions/r1.3/api_docs/python/tf/unique_with_counts", "k": [], "r": "r1.3", "t": "tf.unique_with_counts"}, {"p": "/versions/r1.3/api_docs/python/tf/unsorted_segment_max", "k": [], "r": "r1.3", "t": "tf.unsorted_segment_max"}, {"p": "/versions/r1.3/api_docs/python/tf/unsorted_segment_sum", "k": [], "r": "r1.3", "t": "tf.unsorted_segment_sum"}, {"p": "/versions/r1.3/api_docs/python/tf/unstack", "k": [], "r": "r1.3", "t": "tf.unstack"}, {"p": "/versions/r1.3/api_docs/python/tf/user_ops", "k": [], "r": "r1.3", "t": "tf.user_ops"}, {"p": "/versions/r1.3/api_docs/python/tf/variable_axis_size_partitioner", "k": [], "r": "r1.3", "t": "tf.variable_axis_size_partitioner"}, {"p": "/versions/r1.3/api_docs/python/tf/variable_op_scope", "k": [], "r": "r1.3", "t": "tf.variable_op_scope"}, {"p": "/versions/r1.3/api_docs/python/tf/variable_scope", "k": [], "r": "r1.3", "t": "tf.variable_scope"}, {"p": "/versions/r1.3/api_docs/python/tf/variables_initializer", "k": [], "r": "r1.3", "t": "tf.variables_initializer"}, {"p": "/versions/r1.3/api_docs/python/tf/variance_scaling_initializer", "k": ["__call__", "__init__", "from_config", "get_config"], "r": "r1.3", "t": "tf.variance_scaling_initializer"}, {"p": "/versions/r1.3/api_docs/python/tf/verify_tensor_all_finite", "k": [], "r": "r1.3", "t": "tf.verify_tensor_all_finite"}, {"p": "/versions/r1.3/api_docs/python/tf/where", "k": [], "r": "r1.3", "t": "tf.where"}, {"p": "/versions/r1.3/api_docs/python/tf/while_loop", "k": [], "r": "r1.3", "t": "tf.while_loop"}, {"p": "/versions/r1.3/api_docs/python/tf/write_file", "k": [], "r": "r1.3", "t": "tf.write_file"}, {"p": "/versions/r1.3/api_docs/python/tf/zeros", "k": [], "r": "r1.3", "t": "tf.zeros"}, {"p": "/versions/r1.3/api_docs/python/tf/zeros_initializer", "k": ["__call__", "__init__", "from_config", "get_config"], "r": "r1.3", "t": "tf.zeros_initializer"}, {"p": "/versions/r1.3/api_docs/python/tf/zeros_like", "k": [], "r": "r1.3", "t": "tf.zeros_like"}, {"p": "/versions/r1.3/api_docs/python/tf/zeta", "k": [], "r": "r1.3", "t": "tf.zeta"}, {"p": "/versions/r1.3/api_docs/python/tfdbg", "k": [], "r": "r1.3", "t": "tfdbg"}, {"p": "/versions/r1.3/api_docs/python/tfdbg/DebugDumpDir", "k": ["core_metadata", "dumped_tensor_data", "python_graph", "run_feed_keys_info", "run_fetches_info", "size", "t0", "__init__", "debug_watch_keys", "devices", "find", "find_some_path", "get_dump_sizes_bytes", "get_rel_timestamps", "get_tensor_file_paths", "get_tensors", "loaded_partition_graphs", "node_attributes", "node_device", "node_exists", "node_inputs", "node_op_type", "node_recipients", "node_traceback", "nodes", "partition_graphs", "set_python_graph", "transitive_inputs", "watch_key_to_data"], "r": "r1.3", "t": "tfdbg.DebugDumpDir"}, {"p": "/versions/r1.3/api_docs/python/tfdbg/DebugTensorDatum", "k": ["debug_op", "device_name", "dump_size_bytes", "extended_timestamp", "file_path", "node_name", "output_slot", "tensor_name", "timestamp", "watch_key", "__init__", "get_tensor"], "r": "r1.3", "t": "tfdbg.DebugTensorDatum"}, {"p": "/versions/r1.3/api_docs/python/tfdbg/DumpingDebugHook", "k": ["graph", "graph_def", "sess_str", "session", "__enter__", "__exit__", "__init__", "after_create_session", "after_run", "as_default", "before_run", "begin", "close", "end", "invoke_node_stepper", "list_devices", "make_callable", "on_run_end", "on_run_start", "on_session_init", "partial_run", "partial_run_setup", "prepare_run_debug_urls", "reset", "run"], "r": "r1.3", "t": "tfdbg.DumpingDebugHook"}, {"p": "/versions/r1.3/api_docs/python/tfdbg/DumpingDebugWrapperSession", "k": ["graph", "graph_def", "sess_str", "session", "__enter__", "__exit__", "__init__", "as_default", "close", "invoke_node_stepper", "list_devices", "make_callable", "on_run_end", "on_run_start", "on_session_init", "partial_run", "partial_run_setup", "prepare_run_debug_urls", "reset", "run"], "r": "r1.3", "t": "tfdbg.DumpingDebugWrapperSession"}, {"p": "/versions/r1.3/api_docs/python/tfdbg/GradientsDebugger", "k": ["graph", "y_tensor", "__enter__", "__exit__", "__init__", "gradient_tensor", "gradient_tensors", "identify_gradient", "register_gradient_tensor", "watch_gradients_by_tensor_names", "watch_gradients_by_tensors"], "r": "r1.3", "t": "tfdbg.GradientsDebugger"}, {"p": "/versions/r1.3/api_docs/python/tfdbg/GrpcDebugHook", "k": ["__init__", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "r1.3", "t": "tfdbg.GrpcDebugHook"}, {"p": "/versions/r1.3/api_docs/python/tfdbg/GrpcDebugWrapperSession", "k": ["graph", "graph_def", "sess_str", "session", "__enter__", "__exit__", "__init__", "as_default", "close", "invoke_node_stepper", "list_devices", "make_callable", "on_run_end", "on_run_start", "on_session_init", "partial_run", "partial_run_setup", "prepare_run_debug_urls", "reset", "run"], "r": "r1.3", "t": "tfdbg.GrpcDebugWrapperSession"}, {"p": "/versions/r1.3/api_docs/python/tfdbg/LocalCLIDebugHook", "k": ["graph", "graph_def", "sess_str", "session", "__enter__", "__exit__", "__init__", "add_tensor_filter", "after_create_session", "after_run", "as_default", "before_run", "begin", "close", "end", "invoke_node_stepper", "list_devices", "make_callable", "on_run_end", "on_run_start", "on_session_init", "partial_run", "partial_run_setup", "reset", "run"], "r": "r1.3", "t": "tfdbg.LocalCLIDebugHook"}, {"p": "/versions/r1.3/api_docs/python/tfdbg/LocalCLIDebugWrapperSession", "k": ["graph", "graph_def", "sess_str", "session", "__enter__", "__exit__", "__init__", "add_tensor_filter", "as_default", "close", "invoke_node_stepper", "list_devices", "make_callable", "on_run_end", "on_run_start", "on_session_init", "partial_run", "partial_run_setup", "reset", "run"], "r": "r1.3", "t": "tfdbg.LocalCLIDebugWrapperSession"}, {"p": "/versions/r1.3/api_docs/python/tfdbg/WatchOptions", "k": ["__init__"], "r": "r1.3", "t": "tfdbg.WatchOptions"}, {"p": "/versions/r1.3/api_docs/python/tfdbg/add_debug_tensor_watch", "k": [], "r": "r1.3", "t": "tfdbg.add_debug_tensor_watch"}, {"p": "/versions/r1.3/api_docs/python/tfdbg/has_inf_or_nan", "k": [], "r": "r1.3", "t": "tfdbg.has_inf_or_nan"}, {"p": "/versions/r1.3/api_docs/python/tfdbg/load_tensor_from_event", "k": [], "r": "r1.3", "t": "tfdbg.load_tensor_from_event"}, {"p": "/versions/r1.3/api_docs/python/tfdbg/load_tensor_from_event_file", "k": [], "r": "r1.3", "t": "tfdbg.load_tensor_from_event_file"}, {"p": "/versions/r1.3/api_docs/python/tfdbg/watch_graph", "k": [], "r": "r1.3", "t": "tfdbg.watch_graph"}, {"p": "/versions/r1.3/api_docs/python/tfdbg/watch_graph_with_blacklists", "k": [], "r": "r1.3", "t": "tfdbg.watch_graph_with_blacklists"}, {"p": "/versions/r1.4/api_docs/python/tf", "k": ["AUTO_REUSE", "COMPILER_VERSION", "GIT_VERSION", "GRAPH_DEF_VERSION", "GRAPH_DEF_VERSION_MIN_CONSUMER", "GRAPH_DEF_VERSION_MIN_PRODUCER", "QUANTIZED_DTYPES", "VERSION", "__compiler_version__", "__git_version__", "__version__", "bfloat16", "bool", "complex128", "complex64", "double", "float16", "float32", "float64", "half", "int16", "int32", "int64", "int8", "newaxis", "qint16", "qint32", "qint8", "quint16", "quint8", "resource", "string", "uint16", "uint8", "variant"], "r": "r1.4", "t": "tf"}, {"p": "/versions/r1.4/api_docs/python/tf/AggregationMethod", "k": ["ADD_N", "DEFAULT", "EXPERIMENTAL_ACCUMULATE_N", "EXPERIMENTAL_TREE"], "r": "r1.4", "t": "tf.AggregationMethod"}, {"p": "/versions/r1.4/api_docs/python/tf/Assert", "k": [], "r": "r1.4", "t": "tf.Assert"}, {"p": "/versions/r1.4/api_docs/python/tf/AttrValue", "k": ["ListValue"], "r": "r1.4", "t": "tf.AttrValue"}, {"p": "/versions/r1.4/api_docs/python/tf/AttrValue/ListValue", "k": [], "r": "r1.4", "t": "tf.AttrValue.ListValue"}, {"p": "/versions/r1.4/api_docs/python/tf/ConditionalAccumulator", "k": ["accumulator_ref", "dtype", "name", "__init__", "apply_grad", "num_accumulated", "set_global_step", "take_grad"], "r": "r1.4", "t": "tf.ConditionalAccumulator"}, {"p": "/versions/r1.4/api_docs/python/tf/ConditionalAccumulatorBase", "k": ["accumulator_ref", "dtype", "name", "__init__", "num_accumulated", "set_global_step"], "r": "r1.4", "t": "tf.ConditionalAccumulatorBase"}, {"p": "/versions/r1.4/api_docs/python/tf/ConfigProto", "k": ["DeviceCountEntry"], "r": "r1.4", "t": "tf.ConfigProto"}, {"p": "/versions/r1.4/api_docs/python/tf/ConfigProto/DeviceCountEntry", "k": [], "r": "r1.4", "t": "tf.ConfigProto.DeviceCountEntry"}, {"p": "/versions/r1.4/api_docs/python/tf/DType", "k": ["as_datatype_enum", "as_numpy_dtype", "base_dtype", "is_bool", "is_complex", "is_floating", "is_integer", "is_numpy_compatible", "is_quantized", "is_unsigned", "limits", "max", "min", "name", "real_dtype", "size", "__eq__", "__init__", "__int__", "__ne__", "is_compatible_with"], "r": "r1.4", "t": "tf.DType"}, {"p": "/versions/r1.4/api_docs/python/tf/DeviceSpec", "k": ["job", "replica", "task", "__init__", "from_string", "merge_from", "parse_from_string", "to_string"], "r": "r1.4", "t": "tf.DeviceSpec"}, {"p": "/versions/r1.4/api_docs/python/tf/Dimension", "k": ["value", "__add__", "__div__", "__eq__", "__floordiv__", "__ge__", "__gt__", "__index__", "__init__", "__int__", "__le__", "__long__", "__lt__", "__mod__", "__mul__", "__ne__", "__sub__", "assert_is_compatible_with", "is_compatible_with", "merge_with"], "r": "r1.4", "t": "tf.Dimension"}, {"p": "/versions/r1.4/api_docs/python/tf/Event", "k": [], "r": "r1.4", "t": "tf.Event"}, {"p": "/versions/r1.4/api_docs/python/tf/FIFOQueue", "k": ["dtypes", "name", "names", "queue_ref", "shapes", "__init__", "close", "dequeue", "dequeue_many", "dequeue_up_to", "enqueue", "enqueue_many", "from_list", "is_closed", "size"], "r": "r1.4", "t": "tf.FIFOQueue"}, {"p": "/versions/r1.4/api_docs/python/tf/FixedLenFeature", "k": ["default_value", "dtype", "shape", "__new__"], "r": "r1.4", "t": "tf.FixedLenFeature"}, {"p": "/versions/r1.4/api_docs/python/tf/FixedLenSequenceFeature", "k": ["allow_missing", "default_value", "dtype", "shape", "__new__"], "r": "r1.4", "t": "tf.FixedLenSequenceFeature"}, {"p": "/versions/r1.4/api_docs/python/tf/FixedLengthRecordReader", "k": ["reader_ref", "supports_serialize", "__init__", "num_records_produced", "num_work_units_completed", "read", "read_up_to", "reset", "restore_state", "serialize_state"], "r": "r1.4", "t": "tf.FixedLengthRecordReader"}, {"p": "/versions/r1.4/api_docs/python/tf/GPUOptions", "k": [], "r": "r1.4", "t": "tf.GPUOptions"}, {"p": "/versions/r1.4/api_docs/python/tf/Graph", "k": ["building_function", "collections", "finalized", "graph_def_versions", "seed", "version", "__init__", "add_to_collection", "add_to_collections", "as_default", "as_graph_def", "as_graph_element", "clear_collection", "colocate_with", "container", "control_dependencies", "create_op", "device", "finalize", "get_all_collection_keys", "get_collection", "get_collection_ref", "get_name_scope", "get_operation_by_name", "get_operations", "get_tensor_by_name", "gradient_override_map", "is_feedable", "is_fetchable", "name_scope", "prevent_feeding", "prevent_fetching", "unique_name"], "r": "r1.4", "t": "tf.Graph"}, {"p": "/versions/r1.4/api_docs/python/tf/GraphDef", "k": [], "r": "r1.4", "t": "tf.GraphDef"}, {"p": "/versions/r1.4/api_docs/python/tf/GraphKeys", "k": ["ACTIVATIONS", "ASSET_FILEPATHS", "BIASES", "CONCATENATED_VARIABLES", "COND_CONTEXT", "EVAL_STEP", "GLOBAL_STEP", "GLOBAL_VARIABLES", "INIT_OP", "LOCAL_INIT_OP", "LOCAL_RESOURCES", "LOCAL_VARIABLES", "LOSSES", "MODEL_VARIABLES", "MOVING_AVERAGE_VARIABLES", "QUEUE_RUNNERS", "READY_FOR_LOCAL_INIT_OP", "READY_OP", "REGULARIZATION_LOSSES", "RESOURCES", "SAVEABLE_OBJECTS", "SAVERS", "SUMMARIES", "SUMMARY_OP", "TABLE_INITIALIZERS", "TRAINABLE_RESOURCE_VARIABLES", "TRAINABLE_VARIABLES", "TRAIN_OP", "UPDATE_OPS", "VARIABLES", "WEIGHTS", "WHILE_CONTEXT"], "r": "r1.4", "t": "tf.GraphKeys"}, {"p": "/versions/r1.4/api_docs/python/tf/GraphOptions", "k": [], "r": "r1.4", "t": "tf.GraphOptions"}, {"p": "/versions/r1.4/api_docs/python/tf/HistogramProto", "k": [], "r": "r1.4", "t": "tf.HistogramProto"}, {"p": "/versions/r1.4/api_docs/python/tf/IdentityReader", "k": ["reader_ref", "supports_serialize", "__init__", "num_records_produced", "num_work_units_completed", "read", "read_up_to", "reset", "restore_state", "serialize_state"], "r": "r1.4", "t": "tf.IdentityReader"}, {"p": "/versions/r1.4/api_docs/python/tf/IndexedSlices", "k": ["dense_shape", "device", "dtype", "graph", "indices", "name", "op", "values", "__init__", "__neg__"], "r": "r1.4", "t": "tf.IndexedSlices"}, {"p": "/versions/r1.4/api_docs/python/tf/InteractiveSession", "k": ["graph", "graph_def", "sess_str", "__init__", "as_default", "close", "list_devices", "make_callable", "partial_run", "partial_run_setup", "run"], "r": "r1.4", "t": "tf.InteractiveSession"}, {"p": "/versions/r1.4/api_docs/python/tf/LMDBReader", "k": ["reader_ref", "supports_serialize", "__init__", "num_records_produced", "num_work_units_completed", "read", "read_up_to", "reset", "restore_state", "serialize_state"], "r": "r1.4", "t": "tf.LMDBReader"}, {"p": "/versions/r1.4/api_docs/python/tf/LogMessage", "k": ["DEBUGGING", "ERROR", "FATAL", "INFO", "Level", "UNKNOWN", "WARN"], "r": "r1.4", "t": "tf.LogMessage"}, {"p": "/versions/r1.4/api_docs/python/tf/MetaGraphDef", "k": ["CollectionDefEntry", "MetaInfoDef", "SignatureDefEntry"], "r": "r1.4", "t": "tf.MetaGraphDef"}, {"p": "/versions/r1.4/api_docs/python/tf/MetaGraphDef/CollectionDefEntry", "k": [], "r": "r1.4", "t": "tf.MetaGraphDef.CollectionDefEntry"}, {"p": "/versions/r1.4/api_docs/python/tf/MetaGraphDef/MetaInfoDef", "k": [], "r": "r1.4", "t": "tf.MetaGraphDef.MetaInfoDef"}, {"p": "/versions/r1.4/api_docs/python/tf/MetaGraphDef/SignatureDefEntry", "k": [], "r": "r1.4", "t": "tf.MetaGraphDef.SignatureDefEntry"}, {"p": "/versions/r1.4/api_docs/python/tf/NameAttrList", "k": ["AttrEntry"], "r": "r1.4", "t": "tf.NameAttrList"}, {"p": "/versions/r1.4/api_docs/python/tf/NameAttrList/AttrEntry", "k": [], "r": "r1.4", "t": "tf.NameAttrList.AttrEntry"}, {"p": "/versions/r1.4/api_docs/python/tf/NoGradient", "k": [], "r": "r1.4", "t": "tf.NoGradient"}, {"p": "/versions/r1.4/api_docs/python/tf/NodeDef", "k": ["AttrEntry"], "r": "r1.4", "t": "tf.NodeDef"}, {"p": "/versions/r1.4/api_docs/python/tf/NodeDef/AttrEntry", "k": [], "r": "r1.4", "t": "tf.NodeDef.AttrEntry"}, {"p": "/versions/r1.4/api_docs/python/tf/OpError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "r1.4", "t": "tf.OpError"}, {"p": "/versions/r1.4/api_docs/python/tf/Operation", "k": ["control_inputs", "device", "graph", "inputs", "name", "node_def", "op_def", "outputs", "traceback", "traceback_with_start_lines", "type", "__init__", "colocation_groups", "get_attr", "run", "values"], "r": "r1.4", "t": "tf.Operation"}, {"p": "/versions/r1.4/api_docs/python/tf/OptimizerOptions", "k": ["DEFAULT", "GlobalJitLevel", "L0", "L1", "Level", "OFF", "ON_1", "ON_2"], "r": "r1.4", "t": "tf.OptimizerOptions"}, {"p": "/versions/r1.4/api_docs/python/tf/PaddingFIFOQueue", "k": ["dtypes", "name", "names", "queue_ref", "shapes", "__init__", "close", "dequeue", "dequeue_many", "dequeue_up_to", "enqueue", "enqueue_many", "from_list", "is_closed", "size"], "r": "r1.4", "t": "tf.PaddingFIFOQueue"}, {"p": "/versions/r1.4/api_docs/python/tf/Print", "k": [], "r": "r1.4", "t": "tf.Print"}, {"p": "/versions/r1.4/api_docs/python/tf/PriorityQueue", "k": ["dtypes", "name", "names", "queue_ref", "shapes", "__init__", "close", "dequeue", "dequeue_many", "dequeue_up_to", "enqueue", "enqueue_many", "from_list", "is_closed", "size"], "r": "r1.4", "t": "tf.PriorityQueue"}, {"p": "/versions/r1.4/api_docs/python/tf/QueueBase", "k": ["dtypes", "name", "names", "queue_ref", "shapes", "__init__", "close", "dequeue", "dequeue_many", "dequeue_up_to", "enqueue", "enqueue_many", "from_list", "is_closed", "size"], "r": "r1.4", "t": "tf.QueueBase"}, {"p": "/versions/r1.4/api_docs/python/tf/RandomShuffleQueue", "k": ["dtypes", "name", "names", "queue_ref", "shapes", "__init__", "close", "dequeue", "dequeue_many", "dequeue_up_to", "enqueue", "enqueue_many", "from_list", "is_closed", "size"], "r": "r1.4", "t": "tf.RandomShuffleQueue"}, {"p": "/versions/r1.4/api_docs/python/tf/ReaderBase", "k": ["reader_ref", "supports_serialize", "__init__", "num_records_produced", "num_work_units_completed", "read", "read_up_to", "reset", "restore_state", "serialize_state"], "r": "r1.4", "t": "tf.ReaderBase"}, {"p": "/versions/r1.4/api_docs/python/tf/RegisterGradient", "k": ["__call__", "__init__"], "r": "r1.4", "t": "tf.RegisterGradient"}, {"p": "/versions/r1.4/api_docs/python/tf/RunMetadata", "k": [], "r": "r1.4", "t": "tf.RunMetadata"}, {"p": "/versions/r1.4/api_docs/python/tf/RunOptions", "k": ["FULL_TRACE", "HARDWARE_TRACE", "NO_TRACE", "SOFTWARE_TRACE", "TraceLevel"], "r": "r1.4", "t": "tf.RunOptions"}, {"p": "/versions/r1.4/api_docs/python/tf/Session", "k": ["graph", "graph_def", "sess_str", "__enter__", "__exit__", "__init__", "as_default", "close", "list_devices", "make_callable", "partial_run", "partial_run_setup", "reset", "run"], "r": "r1.4", "t": "tf.Session"}, {"p": "/versions/r1.4/api_docs/python/tf/SessionLog", "k": ["CHECKPOINT", "START", "STATUS_UNSPECIFIED", "STOP", "SessionStatus"], "r": "r1.4", "t": "tf.SessionLog"}, {"p": "/versions/r1.4/api_docs/python/tf/SparseConditionalAccumulator", "k": ["accumulator_ref", "dtype", "name", "__init__", "apply_grad", "apply_indexed_slices_grad", "num_accumulated", "set_global_step", "take_grad", "take_indexed_slices_grad"], "r": "r1.4", "t": "tf.SparseConditionalAccumulator"}, {"p": "/versions/r1.4/api_docs/python/tf/SparseFeature", "k": ["already_sorted", "dtype", "index_key", "size", "value_key", "__new__"], "r": "r1.4", "t": "tf.SparseFeature"}, {"p": "/versions/r1.4/api_docs/python/tf/SparseTensor", "k": ["dense_shape", "dtype", "graph", "indices", "op", "values", "__div__", "__init__", "__mul__", "__truediv__", "eval", "from_value", "get_shape"], "r": "r1.4", "t": "tf.SparseTensor"}, {"p": "/versions/r1.4/api_docs/python/tf/SparseTensorValue", "k": ["dense_shape", "indices", "values", "__new__"], "r": "r1.4", "t": "tf.SparseTensorValue"}, {"p": "/versions/r1.4/api_docs/python/tf/Summary", "k": ["Audio", "Image", "Value"], "r": "r1.4", "t": "tf.Summary"}, {"p": "/versions/r1.4/api_docs/python/tf/Summary/Audio", "k": [], "r": "r1.4", "t": "tf.Summary.Audio"}, {"p": "/versions/r1.4/api_docs/python/tf/Summary/Image", "k": [], "r": "r1.4", "t": "tf.Summary.Image"}, {"p": "/versions/r1.4/api_docs/python/tf/Summary/Value", "k": [], "r": "r1.4", "t": "tf.Summary.Value"}, {"p": "/versions/r1.4/api_docs/python/tf/SummaryMetadata", "k": ["PluginData"], "r": "r1.4", "t": "tf.SummaryMetadata"}, {"p": "/versions/r1.4/api_docs/python/tf/SummaryMetadata/PluginData", "k": [], "r": "r1.4", "t": "tf.SummaryMetadata.PluginData"}, {"p": "/versions/r1.4/api_docs/python/tf/TFRecordReader", "k": ["reader_ref", "supports_serialize", "__init__", "num_records_produced", "num_work_units_completed", "read", "read_up_to", "reset", "restore_state", "serialize_state"], "r": "r1.4", "t": "tf.TFRecordReader"}, {"p": "/versions/r1.4/api_docs/python/tf/Tensor", "k": ["device", "dtype", "graph", "name", "op", "shape", "value_index", "__abs__", "__add__", "__and__", "__bool__", "__div__", "__eq__", "__floordiv__", "__ge__", "__getitem__", "__gt__", "__init__", "__invert__", "__iter__", "__le__", "__lt__", "__matmul__", "__mod__", "__mul__", "__neg__", "__nonzero__", "__or__", "__pow__", "__radd__", "__rand__", "__rdiv__", "__rfloordiv__", "__rmatmul__", "__rmod__", "__rmul__", "__ror__", "__rpow__", "__rsub__", "__rtruediv__", "__rxor__", "__sub__", "__truediv__", "__xor__", "consumers", "eval", "get_shape", "set_shape", "OVERLOADABLE_OPERATORS", "__array_priority__"], "r": "r1.4", "t": "tf.Tensor"}, {"p": "/versions/r1.4/api_docs/python/tf/TensorArray", "k": ["dtype", "flow", "handle", "__init__", "close", "concat", "gather", "grad", "identity", "read", "scatter", "size", "split", "stack", "unstack", "write"], "r": "r1.4", "t": "tf.TensorArray"}, {"p": "/versions/r1.4/api_docs/python/tf/TensorInfo", "k": ["CooSparse"], "r": "r1.4", "t": "tf.TensorInfo"}, {"p": "/versions/r1.4/api_docs/python/tf/TensorInfo/CooSparse", "k": [], "r": "r1.4", "t": "tf.TensorInfo.CooSparse"}, {"p": "/versions/r1.4/api_docs/python/tf/TensorShape", "k": ["dims", "ndims", "__bool__", "__eq__", "__getitem__", "__init__", "__iter__", "__len__", "__ne__", "__nonzero__", "as_list", "as_proto", "assert_has_rank", "assert_is_compatible_with", "assert_is_fully_defined", "assert_same_rank", "concatenate", "is_compatible_with", "is_fully_defined", "merge_with", "most_specific_compatible_shape", "num_elements", "with_rank", "with_rank_at_least", "with_rank_at_most"], "r": "r1.4", "t": "tf.TensorShape"}, {"p": "/versions/r1.4/api_docs/python/tf/TextLineReader", "k": ["reader_ref", "supports_serialize", "__init__", "num_records_produced", "num_work_units_completed", "read", "read_up_to", "reset", "restore_state", "serialize_state"], "r": "r1.4", "t": "tf.TextLineReader"}, {"p": "/versions/r1.4/api_docs/python/tf/VarLenFeature", "k": ["dtype", "__new__"], "r": "r1.4", "t": "tf.VarLenFeature"}, {"p": "/versions/r1.4/api_docs/python/tf/Variable", "k": ["SaveSliceInfo", "constraint", "device", "dtype", "graph", "initial_value", "initializer", "name", "op", "shape", "__abs__", "__add__", "__and__", "__div__", "__floordiv__", "__ge__", "__getitem__", "__gt__", "__init__", "__invert__", "__iter__", "__le__", "__lt__", "__matmul__", "__mod__", "__mul__", "__neg__", "__or__", "__pow__", "__radd__", "__rand__", "__rdiv__", "__rfloordiv__", "__rmatmul__", "__rmod__", "__rmul__", "__ror__", "__rpow__", "__rsub__", "__rtruediv__", "__rxor__", "__sub__", "__truediv__", "__xor__", "assign", "assign_add", "assign_sub", "count_up_to", "eval", "from_proto", "get_shape", "initialized_value", "load", "read_value", "scatter_sub", "set_shape", "to_proto", "value", "__array_priority__"], "r": "r1.4", "t": "tf.Variable"}, {"p": "/versions/r1.4/api_docs/python/tf/Variable/SaveSliceInfo", "k": ["spec", "__init__", "to_proto"], "r": "r1.4", "t": "tf.Variable.SaveSliceInfo"}, {"p": "/versions/r1.4/api_docs/python/tf/VariableScope", "k": ["caching_device", "constraint", "custom_getter", "dtype", "initializer", "name", "original_name_scope", "partitioner", "regularizer", "reuse", "use_resource", "__init__", "get_collection", "get_variable", "global_variables", "local_variables", "reuse_variables", "set_caching_device", "set_custom_getter", "set_dtype", "set_initializer", "set_partitioner", "set_regularizer", "set_use_resource", "trainable_variables"], "r": "r1.4", "t": "tf.VariableScope"}, {"p": "/versions/r1.4/api_docs/python/tf/WholeFileReader", "k": ["reader_ref", "supports_serialize", "__init__", "num_records_produced", "num_work_units_completed", "read", "read_up_to", "reset", "restore_state", "serialize_state"], "r": "r1.4", "t": "tf.WholeFileReader"}, {"p": "/versions/r1.4/api_docs/python/tf/abs", "k": [], "r": "r1.4", "t": "tf.abs"}, {"p": "/versions/r1.4/api_docs/python/tf/accumulate_n", "k": [], "r": "r1.4", "t": "tf.accumulate_n"}, {"p": "/versions/r1.4/api_docs/python/tf/acos", "k": [], "r": "r1.4", "t": "tf.acos"}, {"p": "/versions/r1.4/api_docs/python/tf/acosh", "k": [], "r": "r1.4", "t": "tf.acosh"}, {"p": "/versions/r1.4/api_docs/python/tf/add", "k": [], "r": "r1.4", "t": "tf.add"}, {"p": "/versions/r1.4/api_docs/python/tf/add_check_numerics_ops", "k": [], "r": "r1.4", "t": "tf.add_check_numerics_ops"}, {"p": "/versions/r1.4/api_docs/python/tf/add_n", "k": [], "r": "r1.4", "t": "tf.add_n"}, {"p": "/versions/r1.4/api_docs/python/tf/add_to_collection", "k": [], "r": "r1.4", "t": "tf.add_to_collection"}, {"p": "/versions/r1.4/api_docs/python/tf/all_variables", "k": [], "r": "r1.4", "t": "tf.all_variables"}, {"p": "/versions/r1.4/api_docs/python/tf/angle", "k": [], "r": "r1.4", "t": "tf.angle"}, {"p": "/versions/r1.4/api_docs/python/tf/app", "k": [], "r": "r1.4", "t": "tf.app"}, {"p": "/versions/r1.4/api_docs/python/tf/app/run", "k": [], "r": "r1.4", "t": "tf.app.run"}, {"p": "/versions/r1.4/api_docs/python/tf/arg_max", "k": [], "r": "r1.4", "t": "tf.arg_max"}, {"p": "/versions/r1.4/api_docs/python/tf/arg_min", "k": [], "r": "r1.4", "t": "tf.arg_min"}, {"p": "/versions/r1.4/api_docs/python/tf/argmax", "k": [], "r": "r1.4", "t": "tf.argmax"}, {"p": "/versions/r1.4/api_docs/python/tf/argmin", "k": [], "r": "r1.4", "t": "tf.argmin"}, {"p": "/versions/r1.4/api_docs/python/tf/as_dtype", "k": [], "r": "r1.4", "t": "tf.as_dtype"}, {"p": "/versions/r1.4/api_docs/python/tf/as_string", "k": [], "r": "r1.4", "t": "tf.as_string"}, {"p": "/versions/r1.4/api_docs/python/tf/asin", "k": [], "r": "r1.4", "t": "tf.asin"}, {"p": "/versions/r1.4/api_docs/python/tf/asinh", "k": [], "r": "r1.4", "t": "tf.asinh"}, {"p": "/versions/r1.4/api_docs/python/tf/assert_equal", "k": [], "r": "r1.4", "t": "tf.assert_equal"}, {"p": "/versions/r1.4/api_docs/python/tf/assert_greater", "k": [], "r": "r1.4", "t": "tf.assert_greater"}, {"p": "/versions/r1.4/api_docs/python/tf/assert_greater_equal", "k": [], "r": "r1.4", "t": "tf.assert_greater_equal"}, {"p": "/versions/r1.4/api_docs/python/tf/assert_integer", "k": [], "r": "r1.4", "t": "tf.assert_integer"}, {"p": "/versions/r1.4/api_docs/python/tf/assert_less", "k": [], "r": "r1.4", "t": "tf.assert_less"}, {"p": "/versions/r1.4/api_docs/python/tf/assert_less_equal", "k": [], "r": "r1.4", "t": "tf.assert_less_equal"}, {"p": "/versions/r1.4/api_docs/python/tf/assert_negative", "k": [], "r": "r1.4", "t": "tf.assert_negative"}, {"p": "/versions/r1.4/api_docs/python/tf/assert_non_negative", "k": [], "r": "r1.4", "t": "tf.assert_non_negative"}, {"p": "/versions/r1.4/api_docs/python/tf/assert_non_positive", "k": [], "r": "r1.4", "t": "tf.assert_non_positive"}, {"p": "/versions/r1.4/api_docs/python/tf/assert_none_equal", "k": [], "r": "r1.4", "t": "tf.assert_none_equal"}, {"p": "/versions/r1.4/api_docs/python/tf/assert_positive", "k": [], "r": "r1.4", "t": "tf.assert_positive"}, {"p": "/versions/r1.4/api_docs/python/tf/assert_proper_iterable", "k": [], "r": "r1.4", "t": "tf.assert_proper_iterable"}, {"p": "/versions/r1.4/api_docs/python/tf/assert_rank", "k": [], "r": "r1.4", "t": "tf.assert_rank"}, {"p": "/versions/r1.4/api_docs/python/tf/assert_rank_at_least", "k": [], "r": "r1.4", "t": "tf.assert_rank_at_least"}, {"p": "/versions/r1.4/api_docs/python/tf/assert_rank_in", "k": [], "r": "r1.4", "t": "tf.assert_rank_in"}, {"p": "/versions/r1.4/api_docs/python/tf/assert_same_float_dtype", "k": [], "r": "r1.4", "t": "tf.assert_same_float_dtype"}, {"p": "/versions/r1.4/api_docs/python/tf/assert_scalar", "k": [], "r": "r1.4", "t": "tf.assert_scalar"}, {"p": "/versions/r1.4/api_docs/python/tf/assert_type", "k": [], "r": "r1.4", "t": "tf.assert_type"}, {"p": "/versions/r1.4/api_docs/python/tf/assert_variables_initialized", "k": [], "r": "r1.4", "t": "tf.assert_variables_initialized"}, {"p": "/versions/r1.4/api_docs/python/tf/assign", "k": [], "r": "r1.4", "t": "tf.assign"}, {"p": "/versions/r1.4/api_docs/python/tf/assign_add", "k": [], "r": "r1.4", "t": "tf.assign_add"}, {"p": "/versions/r1.4/api_docs/python/tf/assign_sub", "k": [], "r": "r1.4", "t": "tf.assign_sub"}, {"p": "/versions/r1.4/api_docs/python/tf/atan", "k": [], "r": "r1.4", "t": "tf.atan"}, {"p": "/versions/r1.4/api_docs/python/tf/atan2", "k": [], "r": "r1.4", "t": "tf.atan2"}, {"p": "/versions/r1.4/api_docs/python/tf/atanh", "k": [], "r": "r1.4", "t": "tf.atanh"}, {"p": "/versions/r1.4/api_docs/python/tf/batch_to_space", "k": [], "r": "r1.4", "t": "tf.batch_to_space"}, {"p": "/versions/r1.4/api_docs/python/tf/batch_to_space_nd", "k": [], "r": "r1.4", "t": "tf.batch_to_space_nd"}, {"p": "/versions/r1.4/api_docs/python/tf/betainc", "k": [], "r": "r1.4", "t": "tf.betainc"}, {"p": "/versions/r1.4/api_docs/python/tf/bincount", "k": [], "r": "r1.4", "t": "tf.bincount"}, {"p": "/versions/r1.4/api_docs/python/tf/bitcast", "k": [], "r": "r1.4", "t": "tf.bitcast"}, {"p": "/versions/r1.4/api_docs/python/tf/bitwise", "k": [], "r": "r1.4", "t": "tf.bitwise"}, {"p": "/versions/r1.4/api_docs/python/tf/bitwise/bitwise_and", "k": [], "r": "r1.4", "t": "tf.bitwise.bitwise_and"}, {"p": "/versions/r1.4/api_docs/python/tf/bitwise/bitwise_or", "k": [], "r": "r1.4", "t": "tf.bitwise.bitwise_or"}, {"p": "/versions/r1.4/api_docs/python/tf/bitwise/bitwise_xor", "k": [], "r": "r1.4", "t": "tf.bitwise.bitwise_xor"}, {"p": "/versions/r1.4/api_docs/python/tf/bitwise/invert", "k": [], "r": "r1.4", "t": "tf.bitwise.invert"}, {"p": "/versions/r1.4/api_docs/python/tf/boolean_mask", "k": [], "r": "r1.4", "t": "tf.boolean_mask"}, {"p": "/versions/r1.4/api_docs/python/tf/broadcast_dynamic_shape", "k": [], "r": "r1.4", "t": "tf.broadcast_dynamic_shape"}, {"p": "/versions/r1.4/api_docs/python/tf/broadcast_static_shape", "k": [], "r": "r1.4", "t": "tf.broadcast_static_shape"}, {"p": "/versions/r1.4/api_docs/python/tf/case", "k": [], "r": "r1.4", "t": "tf.case"}, {"p": "/versions/r1.4/api_docs/python/tf/cast", "k": [], "r": "r1.4", "t": "tf.cast"}, {"p": "/versions/r1.4/api_docs/python/tf/ceil", "k": [], "r": "r1.4", "t": "tf.ceil"}, {"p": "/versions/r1.4/api_docs/python/tf/check_numerics", "k": [], "r": "r1.4", "t": "tf.check_numerics"}, {"p": "/versions/r1.4/api_docs/python/tf/cholesky", "k": [], "r": "r1.4", "t": "tf.cholesky"}, {"p": "/versions/r1.4/api_docs/python/tf/cholesky_solve", "k": [], "r": "r1.4", "t": "tf.cholesky_solve"}, {"p": "/versions/r1.4/api_docs/python/tf/clip_by_average_norm", "k": [], "r": "r1.4", "t": "tf.clip_by_average_norm"}, {"p": "/versions/r1.4/api_docs/python/tf/clip_by_global_norm", "k": [], "r": "r1.4", "t": "tf.clip_by_global_norm"}, {"p": "/versions/r1.4/api_docs/python/tf/clip_by_norm", "k": [], "r": "r1.4", "t": "tf.clip_by_norm"}, {"p": "/versions/r1.4/api_docs/python/tf/clip_by_value", "k": [], "r": "r1.4", "t": "tf.clip_by_value"}, {"p": "/versions/r1.4/api_docs/python/tf/colocate_with", "k": [], "r": "r1.4", "t": "tf.colocate_with"}, {"p": "/versions/r1.4/api_docs/python/tf/compat", "k": ["bytes_or_text_types", "complex_types", "integral_types", "real_types"], "r": "r1.4", "t": "tf.compat"}, {"p": "/versions/r1.4/api_docs/python/tf/compat/as_bytes", "k": [], "r": "r1.4", "t": "tf.compat.as_bytes"}, {"p": "/versions/r1.4/api_docs/python/tf/compat/as_str_any", "k": [], "r": "r1.4", "t": "tf.compat.as_str_any"}, {"p": "/versions/r1.4/api_docs/python/tf/compat/as_text", "k": [], "r": "r1.4", "t": "tf.compat.as_text"}, {"p": "/versions/r1.4/api_docs/python/tf/complex", "k": [], "r": "r1.4", "t": "tf.complex"}, {"p": "/versions/r1.4/api_docs/python/tf/concat", "k": [], "r": "r1.4", "t": "tf.concat"}, {"p": "/versions/r1.4/api_docs/python/tf/cond", "k": [], "r": "r1.4", "t": "tf.cond"}, {"p": "/versions/r1.4/api_docs/python/tf/confusion_matrix", "k": [], "r": "r1.4", "t": "tf.confusion_matrix"}, {"p": "/versions/r1.4/api_docs/python/tf/conj", "k": [], "r": "r1.4", "t": "tf.conj"}, {"p": "/versions/r1.4/api_docs/python/tf/constant", "k": [], "r": "r1.4", "t": "tf.constant"}, {"p": "/versions/r1.4/api_docs/python/tf/constant_initializer", "k": ["__call__", "__init__", "from_config", "get_config"], "r": "r1.4", "t": "tf.constant_initializer"}, {"p": "/versions/r1.4/api_docs/python/tf/container", "k": [], "r": "r1.4", "t": "tf.container"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib", "k": [], "r": "r1.4", "t": "tf.contrib"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/bayesflow", "k": [], "r": "r1.4", "t": "tf.contrib.bayesflow"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/bayesflow/csiszar_divergence", "k": [], "r": "r1.4", "t": "tf.contrib.bayesflow.csiszar_divergence"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/bayesflow/csiszar_divergence/amari_alpha", "k": [], "r": "r1.4", "t": "tf.contrib.bayesflow.csiszar_divergence.amari_alpha"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/bayesflow/csiszar_divergence/arithmetic_geometric", "k": [], "r": "r1.4", "t": "tf.contrib.bayesflow.csiszar_divergence.arithmetic_geometric"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/bayesflow/csiszar_divergence/chi_square", "k": [], "r": "r1.4", "t": "tf.contrib.bayesflow.csiszar_divergence.chi_square"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/bayesflow/csiszar_divergence/csiszar_vimco", "k": [], "r": "r1.4", "t": "tf.contrib.bayesflow.csiszar_divergence.csiszar_vimco"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/bayesflow/csiszar_divergence/dual_csiszar_function", "k": [], "r": "r1.4", "t": "tf.contrib.bayesflow.csiszar_divergence.dual_csiszar_function"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/bayesflow/csiszar_divergence/jeffreys", "k": [], "r": "r1.4", "t": "tf.contrib.bayesflow.csiszar_divergence.jeffreys"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/bayesflow/csiszar_divergence/jensen_shannon", "k": [], "r": "r1.4", "t": "tf.contrib.bayesflow.csiszar_divergence.jensen_shannon"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/bayesflow/csiszar_divergence/kl_forward", "k": [], "r": "r1.4", "t": "tf.contrib.bayesflow.csiszar_divergence.kl_forward"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/bayesflow/csiszar_divergence/kl_reverse", "k": [], "r": "r1.4", "t": "tf.contrib.bayesflow.csiszar_divergence.kl_reverse"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/bayesflow/csiszar_divergence/log1p_abs", "k": [], "r": "r1.4", "t": "tf.contrib.bayesflow.csiszar_divergence.log1p_abs"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/bayesflow/csiszar_divergence/modified_gan", "k": [], "r": "r1.4", "t": "tf.contrib.bayesflow.csiszar_divergence.modified_gan"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/bayesflow/csiszar_divergence/monte_carlo_csiszar_f_divergence", "k": [], "r": "r1.4", "t": "tf.contrib.bayesflow.csiszar_divergence.monte_carlo_csiszar_f_divergence"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/bayesflow/csiszar_divergence/pearson", "k": [], "r": "r1.4", "t": "tf.contrib.bayesflow.csiszar_divergence.pearson"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/bayesflow/csiszar_divergence/squared_hellinger", "k": [], "r": "r1.4", "t": "tf.contrib.bayesflow.csiszar_divergence.squared_hellinger"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/bayesflow/csiszar_divergence/symmetrized_csiszar_function", "k": [], "r": "r1.4", "t": "tf.contrib.bayesflow.csiszar_divergence.symmetrized_csiszar_function"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/bayesflow/csiszar_divergence/t_power", "k": [], "r": "r1.4", "t": "tf.contrib.bayesflow.csiszar_divergence.t_power"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/bayesflow/csiszar_divergence/total_variation", "k": [], "r": "r1.4", "t": "tf.contrib.bayesflow.csiszar_divergence.total_variation"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/bayesflow/csiszar_divergence/triangular", "k": [], "r": "r1.4", "t": "tf.contrib.bayesflow.csiszar_divergence.triangular"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/bayesflow/custom_grad", "k": [], "r": "r1.4", "t": "tf.contrib.bayesflow.custom_grad"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/bayesflow/custom_grad/custom_gradient", "k": [], "r": "r1.4", "t": "tf.contrib.bayesflow.custom_grad.custom_gradient"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/bayesflow/entropy", "k": [], "r": "r1.4", "t": "tf.contrib.bayesflow.entropy"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/bayesflow/entropy/elbo_ratio", "k": [], "r": "r1.4", "t": "tf.contrib.bayesflow.entropy.elbo_ratio"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/bayesflow/entropy/entropy_shannon", "k": [], "r": "r1.4", "t": "tf.contrib.bayesflow.entropy.entropy_shannon"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/bayesflow/entropy/renyi_alpha", "k": [], "r": "r1.4", "t": "tf.contrib.bayesflow.entropy.renyi_alpha"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/bayesflow/entropy/renyi_ratio", "k": [], "r": "r1.4", "t": "tf.contrib.bayesflow.entropy.renyi_ratio"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/bayesflow/hmc", "k": [], "r": "r1.4", "t": "tf.contrib.bayesflow.hmc"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/bayesflow/hmc/ais_chain", "k": [], "r": "r1.4", "t": "tf.contrib.bayesflow.hmc.ais_chain"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/bayesflow/hmc/chain", "k": [], "r": "r1.4", "t": "tf.contrib.bayesflow.hmc.chain"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/bayesflow/hmc/kernel", "k": [], "r": "r1.4", "t": "tf.contrib.bayesflow.hmc.kernel"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/bayesflow/hmc/leapfrog_integrator", "k": [], "r": "r1.4", "t": "tf.contrib.bayesflow.hmc.leapfrog_integrator"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/bayesflow/hmc/leapfrog_step", "k": [], "r": "r1.4", "t": "tf.contrib.bayesflow.hmc.leapfrog_step"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/bayesflow/metropolis_hastings", "k": [], "r": "r1.4", "t": "tf.contrib.bayesflow.metropolis_hastings"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/bayesflow/metropolis_hastings/evolve", "k": [], "r": "r1.4", "t": "tf.contrib.bayesflow.metropolis_hastings.evolve"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/bayesflow/metropolis_hastings/normal_random_proposal", "k": [], "r": "r1.4", "t": "tf.contrib.bayesflow.metropolis_hastings.normal_random_proposal"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/bayesflow/metropolis_hastings/uniform_random_proposal", "k": [], "r": "r1.4", "t": "tf.contrib.bayesflow.metropolis_hastings.uniform_random_proposal"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/bayesflow/monte_carlo", "k": [], "r": "r1.4", "t": "tf.contrib.bayesflow.monte_carlo"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/bayesflow/monte_carlo/expectation", "k": [], "r": "r1.4", "t": "tf.contrib.bayesflow.monte_carlo.expectation"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/bayesflow/monte_carlo/expectation_importance_sampler", "k": [], "r": "r1.4", "t": "tf.contrib.bayesflow.monte_carlo.expectation_importance_sampler"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/bayesflow/monte_carlo/expectation_importance_sampler_logspace", "k": [], "r": "r1.4", "t": "tf.contrib.bayesflow.monte_carlo.expectation_importance_sampler_logspace"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/bayesflow/stochastic_gradient_estimators", "k": [], "r": "r1.4", "t": "tf.contrib.bayesflow.stochastic_gradient_estimators"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/bayesflow/stochastic_graph", "k": [], "r": "r1.4", "t": "tf.contrib.bayesflow.stochastic_graph"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/bayesflow/stochastic_graph/surrogate_loss", "k": [], "r": "r1.4", "t": "tf.contrib.bayesflow.stochastic_graph.surrogate_loss"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/bayesflow/stochastic_tensor", "k": [], "r": "r1.4", "t": "tf.contrib.bayesflow.stochastic_tensor"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/bayesflow/stochastic_tensor/BaseStochasticTensor", "k": ["dtype", "graph", "name", "__init__", "loss", "value"], "r": "r1.4", "t": "tf.contrib.bayesflow.stochastic_tensor.BaseStochasticTensor"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/bayesflow/stochastic_tensor/MeanValue", "k": ["stop_gradient", "__init__", "declare_inputs", "popped_above", "pushed_above"], "r": "r1.4", "t": "tf.contrib.bayesflow.stochastic_tensor.MeanValue"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/bayesflow/stochastic_tensor/ObservedStochasticTensor", "k": ["distribution", "dtype", "graph", "name", "value_type", "__init__", "entropy", "loss", "mean", "value"], "r": "r1.4", "t": "tf.contrib.bayesflow.stochastic_tensor.ObservedStochasticTensor"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/bayesflow/stochastic_tensor/SampleValue", "k": ["shape", "stop_gradient", "__init__", "declare_inputs", "popped_above", "pushed_above"], "r": "r1.4", "t": "tf.contrib.bayesflow.stochastic_tensor.SampleValue"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/bayesflow/stochastic_tensor/StochasticTensor", "k": ["distribution", "dtype", "graph", "name", "value_type", "__init__", "entropy", "loss", "mean", "value"], "r": "r1.4", "t": "tf.contrib.bayesflow.stochastic_tensor.StochasticTensor"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/bayesflow/stochastic_tensor/get_current_value_type", "k": [], "r": "r1.4", "t": "tf.contrib.bayesflow.stochastic_tensor.get_current_value_type"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/bayesflow/stochastic_tensor/value_type", "k": [], "r": "r1.4", "t": "tf.contrib.bayesflow.stochastic_tensor.value_type"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/bayesflow/stochastic_variables", "k": [], "r": "r1.4", "t": "tf.contrib.bayesflow.stochastic_variables"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/bayesflow/variational_inference", "k": [], "r": "r1.4", "t": "tf.contrib.bayesflow.variational_inference"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/bayesflow/variational_inference/ELBOForms", "k": ["check_form", "analytic_entropy", "analytic_kl", "default", "sample"], "r": "r1.4", "t": "tf.contrib.bayesflow.variational_inference.ELBOForms"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/bayesflow/variational_inference/elbo", "k": [], "r": "r1.4", "t": "tf.contrib.bayesflow.variational_inference.elbo"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/bayesflow/variational_inference/elbo_with_log_joint", "k": [], "r": "r1.4", "t": "tf.contrib.bayesflow.variational_inference.elbo_with_log_joint"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/bayesflow/variational_inference/register_prior", "k": [], "r": "r1.4", "t": "tf.contrib.bayesflow.variational_inference.register_prior"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/cloud", "k": [], "r": "r1.4", "t": "tf.contrib.cloud"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/cloud/BigQueryReader", "k": ["reader_ref", "supports_serialize", "__init__", "num_records_produced", "num_work_units_completed", "partitions", "read", "read_up_to", "reset", "restore_state", "serialize_state"], "r": "r1.4", "t": "tf.contrib.cloud.BigQueryReader"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/cluster_resolver", "k": [], "r": "r1.4", "t": "tf.contrib.cluster_resolver"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/compiler", "k": [], "r": "r1.4", "t": "tf.contrib.compiler"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/copy_graph", "k": [], "r": "r1.4", "t": "tf.contrib.copy_graph"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/copy_graph/copy_op_to_graph", "k": [], "r": "r1.4", "t": "tf.contrib.copy_graph.copy_op_to_graph"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/copy_graph/copy_variable_to_graph", "k": [], "r": "r1.4", "t": "tf.contrib.copy_graph.copy_variable_to_graph"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/copy_graph/get_copied_op", "k": [], "r": "r1.4", "t": "tf.contrib.copy_graph.get_copied_op"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/crf", "k": [], "r": "r1.4", "t": "tf.contrib.crf"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/crf/CrfDecodeBackwardRnnCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.4", "t": "tf.contrib.crf.CrfDecodeBackwardRnnCell"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/crf/CrfDecodeForwardRnnCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.4", "t": "tf.contrib.crf.CrfDecodeForwardRnnCell"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/crf/CrfForwardRnnCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.4", "t": "tf.contrib.crf.CrfForwardRnnCell"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/crf/crf_binary_score", "k": [], "r": "r1.4", "t": "tf.contrib.crf.crf_binary_score"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/crf/crf_decode", "k": [], "r": "r1.4", "t": "tf.contrib.crf.crf_decode"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/crf/crf_log_likelihood", "k": [], "r": "r1.4", "t": "tf.contrib.crf.crf_log_likelihood"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/crf/crf_log_norm", "k": [], "r": "r1.4", "t": "tf.contrib.crf.crf_log_norm"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/crf/crf_sequence_score", "k": [], "r": "r1.4", "t": "tf.contrib.crf.crf_sequence_score"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/crf/crf_unary_score", "k": [], "r": "r1.4", "t": "tf.contrib.crf.crf_unary_score"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/crf/viterbi_decode", "k": [], "r": "r1.4", "t": "tf.contrib.crf.viterbi_decode"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/cudnn_rnn", "k": [], "r": "r1.4", "t": "tf.contrib.cudnn_rnn"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/cudnn_rnn/CudnnCompatibleGRUCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.4", "t": "tf.contrib.cudnn_rnn.CudnnCompatibleGRUCell"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/cudnn_rnn/CudnnCompatibleLSTMCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.4", "t": "tf.contrib.cudnn_rnn.CudnnCompatibleLSTMCell"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/cudnn_rnn/CudnnGRU", "k": ["direction", "input_mode", "input_size", "num_layers", "num_units", "rnn_mode", "__call__", "__init__", "canonical_to_params", "params_size", "params_to_canonical"], "r": "r1.4", "t": "tf.contrib.cudnn_rnn.CudnnGRU"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/cudnn_rnn/CudnnGRUSaveable", "k": ["__init__", "restore"], "r": "r1.4", "t": "tf.contrib.cudnn_rnn.CudnnGRUSaveable"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/cudnn_rnn/CudnnLSTM", "k": ["direction", "input_mode", "input_size", "num_layers", "num_units", "rnn_mode", "__call__", "__init__", "canonical_to_params", "params_size", "params_to_canonical"], "r": "r1.4", "t": "tf.contrib.cudnn_rnn.CudnnLSTM"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/cudnn_rnn/CudnnLSTMSaveable", "k": ["__init__", "restore"], "r": "r1.4", "t": "tf.contrib.cudnn_rnn.CudnnLSTMSaveable"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/cudnn_rnn/CudnnRNNRelu", "k": ["direction", "input_mode", "input_size", "num_layers", "num_units", "rnn_mode", "__call__", "__init__", "canonical_to_params", "params_size", "params_to_canonical"], "r": "r1.4", "t": "tf.contrib.cudnn_rnn.CudnnRNNRelu"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/cudnn_rnn/CudnnRNNReluSaveable", "k": ["__init__", "restore"], "r": "r1.4", "t": "tf.contrib.cudnn_rnn.CudnnRNNReluSaveable"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/cudnn_rnn/CudnnRNNTanhSaveable", "k": ["__init__", "restore"], "r": "r1.4", "t": "tf.contrib.cudnn_rnn.CudnnRNNTanhSaveable"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/data", "k": [], "r": "r1.4", "t": "tf.contrib.data"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/data/Dataset", "k": ["output_shapes", "output_types", "__init__", "apply", "batch", "cache", "concatenate", "dense_to_sparse_batch", "enumerate", "filter", "flat_map", "from_generator", "from_sparse_tensor_slices", "from_tensor_slices", "from_tensors", "group_by_window", "ignore_errors", "interleave", "list_files", "make_dataset_resource", "make_initializable_iterator", "make_one_shot_iterator", "map", "padded_batch", "prefetch", "range", "repeat", "shard", "shuffle", "skip", "take", "unbatch", "zip"], "r": "r1.4", "t": "tf.contrib.data.Dataset"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/data/FixedLengthRecordDataset", "k": ["output_shapes", "output_types", "__init__", "apply", "batch", "cache", "concatenate", "dense_to_sparse_batch", "enumerate", "filter", "flat_map", "from_generator", "from_sparse_tensor_slices", "from_tensor_slices", "from_tensors", "group_by_window", "ignore_errors", "interleave", "list_files", "make_dataset_resource", "make_initializable_iterator", "make_one_shot_iterator", "map", "padded_batch", "prefetch", "range", "repeat", "shard", "shuffle", "skip", "take", "unbatch", "zip"], "r": "r1.4", "t": "tf.contrib.data.FixedLengthRecordDataset"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/data/TFRecordDataset", "k": ["output_shapes", "output_types", "__init__", "apply", "batch", "cache", "concatenate", "dense_to_sparse_batch", "enumerate", "filter", "flat_map", "from_generator", "from_sparse_tensor_slices", "from_tensor_slices", "from_tensors", "group_by_window", "ignore_errors", "interleave", "list_files", "make_dataset_resource", "make_initializable_iterator", "make_one_shot_iterator", "map", "padded_batch", "prefetch", "range", "repeat", "shard", "shuffle", "skip", "take", "unbatch", "zip"], "r": "r1.4", "t": "tf.contrib.data.TFRecordDataset"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/data/TextLineDataset", "k": ["output_shapes", "output_types", "__init__", "apply", "batch", "cache", "concatenate", "dense_to_sparse_batch", "enumerate", "filter", "flat_map", "from_generator", "from_sparse_tensor_slices", "from_tensor_slices", "from_tensors", "group_by_window", "ignore_errors", "interleave", "list_files", "make_dataset_resource", "make_initializable_iterator", "make_one_shot_iterator", "map", "padded_batch", "prefetch", "range", "repeat", "shard", "shuffle", "skip", "take", "unbatch", "zip"], "r": "r1.4", "t": "tf.contrib.data.TextLineDataset"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/data/batch_and_drop_remainder", "k": [], "r": "r1.4", "t": "tf.contrib.data.batch_and_drop_remainder"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/data/dense_to_sparse_batch", "k": [], "r": "r1.4", "t": "tf.contrib.data.dense_to_sparse_batch"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/data/enumerate_dataset", "k": [], "r": "r1.4", "t": "tf.contrib.data.enumerate_dataset"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/data/group_by_window", "k": [], "r": "r1.4", "t": "tf.contrib.data.group_by_window"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/data/ignore_errors", "k": [], "r": "r1.4", "t": "tf.contrib.data.ignore_errors"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/data/read_batch_features", "k": [], "r": "r1.4", "t": "tf.contrib.data.read_batch_features"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/data/rejection_resample", "k": [], "r": "r1.4", "t": "tf.contrib.data.rejection_resample"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/data/sloppy_interleave", "k": [], "r": "r1.4", "t": "tf.contrib.data.sloppy_interleave"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/data/unbatch", "k": [], "r": "r1.4", "t": "tf.contrib.data.unbatch"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/decision_trees", "k": [], "r": "r1.4", "t": "tf.contrib.decision_trees"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/deprecated", "k": [], "r": "r1.4", "t": "tf.contrib.deprecated"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/deprecated/audio_summary", "k": [], "r": "r1.4", "t": "tf.contrib.deprecated.audio_summary"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/deprecated/histogram_summary", "k": [], "r": "r1.4", "t": "tf.contrib.deprecated.histogram_summary"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/deprecated/image_summary", "k": [], "r": "r1.4", "t": "tf.contrib.deprecated.image_summary"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/deprecated/merge_all_summaries", "k": [], "r": "r1.4", "t": "tf.contrib.deprecated.merge_all_summaries"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/deprecated/merge_summary", "k": [], "r": "r1.4", "t": "tf.contrib.deprecated.merge_summary"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/deprecated/scalar_summary", "k": [], "r": "r1.4", "t": "tf.contrib.deprecated.scalar_summary"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/distributions", "k": ["FULLY_REPARAMETERIZED", "NOT_REPARAMETERIZED"], "r": "r1.4", "t": "tf.contrib.distributions"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/distributions/BernoulliWithSigmoidProbs", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "logits", "name", "parameters", "probs", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.4", "t": "tf.contrib.distributions.BernoulliWithSigmoidProbs"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/distributions/BetaWithSoftplusConcentration", "k": ["allow_nan_stats", "batch_shape", "concentration0", "concentration1", "dtype", "event_shape", "name", "parameters", "reparameterization_type", "total_concentration", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.4", "t": "tf.contrib.distributions.BetaWithSoftplusConcentration"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/distributions/Binomial", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "logits", "name", "parameters", "probs", "reparameterization_type", "total_count", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.4", "t": "tf.contrib.distributions.Binomial"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/distributions/Chi2", "k": ["allow_nan_stats", "batch_shape", "concentration", "df", "dtype", "event_shape", "name", "parameters", "rate", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.4", "t": "tf.contrib.distributions.Chi2"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/distributions/Chi2WithAbsDf", "k": ["allow_nan_stats", "batch_shape", "concentration", "df", "dtype", "event_shape", "name", "parameters", "rate", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.4", "t": "tf.contrib.distributions.Chi2WithAbsDf"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/distributions/ConditionalDistribution", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "name", "parameters", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.4", "t": "tf.contrib.distributions.ConditionalDistribution"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/distributions/ConditionalTransformedDistribution", "k": ["allow_nan_stats", "batch_shape", "bijector", "distribution", "dtype", "event_shape", "name", "parameters", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.4", "t": "tf.contrib.distributions.ConditionalTransformedDistribution"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/distributions/Deterministic", "k": ["allow_nan_stats", "atol", "batch_shape", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "rtol", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.4", "t": "tf.contrib.distributions.Deterministic"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/distributions/ExpRelaxedOneHotCategorical", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "event_size", "logits", "name", "parameters", "probs", "reparameterization_type", "temperature", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.4", "t": "tf.contrib.distributions.ExpRelaxedOneHotCategorical"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/distributions/ExponentialWithSoftplusRate", "k": ["allow_nan_stats", "batch_shape", "concentration", "dtype", "event_shape", "name", "parameters", "rate", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.4", "t": "tf.contrib.distributions.ExponentialWithSoftplusRate"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/distributions/GammaWithSoftplusConcentrationRate", "k": ["allow_nan_stats", "batch_shape", "concentration", "dtype", "event_shape", "name", "parameters", "rate", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.4", "t": "tf.contrib.distributions.GammaWithSoftplusConcentrationRate"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/distributions/Geometric", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "logits", "name", "parameters", "probs", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.4", "t": "tf.contrib.distributions.Geometric"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/distributions/Independent", "k": ["allow_nan_stats", "batch_shape", "distribution", "dtype", "event_shape", "name", "parameters", "reduce_batch_ndims", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.4", "t": "tf.contrib.distributions.Independent"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/distributions/InverseGamma", "k": ["allow_nan_stats", "batch_shape", "concentration", "dtype", "event_shape", "name", "parameters", "rate", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.4", "t": "tf.contrib.distributions.InverseGamma"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/distributions/InverseGammaWithSoftplusConcentrationRate", "k": ["allow_nan_stats", "batch_shape", "concentration", "dtype", "event_shape", "name", "parameters", "rate", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.4", "t": "tf.contrib.distributions.InverseGammaWithSoftplusConcentrationRate"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/distributions/LaplaceWithSoftplusScale", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.4", "t": "tf.contrib.distributions.LaplaceWithSoftplusScale"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/distributions/Logistic", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.4", "t": "tf.contrib.distributions.Logistic"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/distributions/Mixture", "k": ["allow_nan_stats", "batch_shape", "cat", "components", "dtype", "event_shape", "name", "num_components", "parameters", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "entropy_lower_bound", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.4", "t": "tf.contrib.distributions.Mixture"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/distributions/MixtureSameFamily", "k": ["allow_nan_stats", "batch_shape", "components_distribution", "dtype", "event_shape", "mixture_distribution", "name", "parameters", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.4", "t": "tf.contrib.distributions.MixtureSameFamily"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/distributions/MultivariateNormalDiag", "k": ["allow_nan_stats", "batch_shape", "bijector", "distribution", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.4", "t": "tf.contrib.distributions.MultivariateNormalDiag"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/distributions/MultivariateNormalDiagPlusLowRank", "k": ["allow_nan_stats", "batch_shape", "bijector", "distribution", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.4", "t": "tf.contrib.distributions.MultivariateNormalDiagPlusLowRank"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/distributions/MultivariateNormalDiagWithSoftplusScale", "k": ["allow_nan_stats", "batch_shape", "bijector", "distribution", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.4", "t": "tf.contrib.distributions.MultivariateNormalDiagWithSoftplusScale"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/distributions/MultivariateNormalFullCovariance", "k": ["allow_nan_stats", "batch_shape", "bijector", "distribution", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.4", "t": "tf.contrib.distributions.MultivariateNormalFullCovariance"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/distributions/MultivariateNormalTriL", "k": ["allow_nan_stats", "batch_shape", "bijector", "distribution", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.4", "t": "tf.contrib.distributions.MultivariateNormalTriL"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/distributions/NegativeBinomial", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "logits", "name", "parameters", "probs", "reparameterization_type", "total_count", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.4", "t": "tf.contrib.distributions.NegativeBinomial"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/distributions/NormalWithSoftplusScale", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.4", "t": "tf.contrib.distributions.NormalWithSoftplusScale"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/distributions/OneHotCategorical", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "event_size", "logits", "name", "parameters", "probs", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.4", "t": "tf.contrib.distributions.OneHotCategorical"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/distributions/Poisson", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "log_rate", "name", "parameters", "rate", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.4", "t": "tf.contrib.distributions.Poisson"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/distributions/PoissonLogNormalQuadratureCompound", "k": ["allow_nan_stats", "batch_shape", "distribution", "dtype", "event_shape", "loc", "mixture_distribution", "name", "parameters", "quadrature_polynomial_degree", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.4", "t": "tf.contrib.distributions.PoissonLogNormalQuadratureCompound"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/distributions/QuantizedDistribution", "k": ["allow_nan_stats", "batch_shape", "distribution", "dtype", "event_shape", "name", "parameters", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.4", "t": "tf.contrib.distributions.QuantizedDistribution"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/distributions/RelaxedBernoulli", "k": ["allow_nan_stats", "batch_shape", "bijector", "distribution", "dtype", "event_shape", "logits", "name", "parameters", "probs", "reparameterization_type", "temperature", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.4", "t": "tf.contrib.distributions.RelaxedBernoulli"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/distributions/RelaxedOneHotCategorical", "k": ["allow_nan_stats", "batch_shape", "bijector", "distribution", "dtype", "event_shape", "name", "parameters", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.4", "t": "tf.contrib.distributions.RelaxedOneHotCategorical"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/distributions/SinhArcsinh", "k": ["allow_nan_stats", "batch_shape", "bijector", "distribution", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "skewness", "tailweight", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.4", "t": "tf.contrib.distributions.SinhArcsinh"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/distributions/StudentTWithAbsDfSoftplusScale", "k": ["allow_nan_stats", "batch_shape", "df", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.4", "t": "tf.contrib.distributions.StudentTWithAbsDfSoftplusScale"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/distributions/TransformedDistribution", "k": ["allow_nan_stats", "batch_shape", "bijector", "distribution", "dtype", "event_shape", "name", "parameters", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.4", "t": "tf.contrib.distributions.TransformedDistribution"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/distributions/VectorDeterministic", "k": ["allow_nan_stats", "atol", "batch_shape", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "rtol", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.4", "t": "tf.contrib.distributions.VectorDeterministic"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/distributions/VectorDiffeomixture", "k": ["allow_nan_stats", "batch_shape", "distribution", "dtype", "endpoint_affine", "event_shape", "interpolate_weight", "interpolated_affine", "mixture_distribution", "name", "parameters", "quadrature_polynomial_degree", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.4", "t": "tf.contrib.distributions.VectorDiffeomixture"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/distributions/VectorExponentialDiag", "k": ["allow_nan_stats", "batch_shape", "bijector", "distribution", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.4", "t": "tf.contrib.distributions.VectorExponentialDiag"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/distributions/VectorLaplaceDiag", "k": ["allow_nan_stats", "batch_shape", "bijector", "distribution", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.4", "t": "tf.contrib.distributions.VectorLaplaceDiag"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/distributions/VectorSinhArcsinhDiag", "k": ["allow_nan_stats", "batch_shape", "bijector", "distribution", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "skewness", "tailweight", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.4", "t": "tf.contrib.distributions.VectorSinhArcsinhDiag"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/distributions/WishartCholesky", "k": ["allow_nan_stats", "batch_shape", "cholesky_input_output_matrices", "df", "dimension", "dtype", "event_shape", "name", "parameters", "reparameterization_type", "scale_operator", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_normalization", "log_prob", "log_survival_function", "mean", "mean_log_det", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "scale", "stddev", "survival_function", "variance"], "r": "r1.4", "t": "tf.contrib.distributions.WishartCholesky"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/distributions/WishartFull", "k": ["allow_nan_stats", "batch_shape", "cholesky_input_output_matrices", "df", "dimension", "dtype", "event_shape", "name", "parameters", "reparameterization_type", "scale_operator", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_normalization", "log_prob", "log_survival_function", "mean", "mean_log_det", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "scale", "stddev", "survival_function", "variance"], "r": "r1.4", "t": "tf.contrib.distributions.WishartFull"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/distributions/assign_log_moving_mean_exp", "k": [], "r": "r1.4", "t": "tf.contrib.distributions.assign_log_moving_mean_exp"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/distributions/assign_moving_mean_variance", "k": [], "r": "r1.4", "t": "tf.contrib.distributions.assign_moving_mean_variance"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/distributions/bijectors", "k": [], "r": "r1.4", "t": "tf.contrib.distributions.bijectors"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/distributions/bijectors/AbsoluteValue", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.4", "t": "tf.contrib.distributions.bijectors.AbsoluteValue"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/distributions/bijectors/Affine", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "scale", "shift", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.4", "t": "tf.contrib.distributions.bijectors.Affine"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/distributions/bijectors/AffineLinearOperator", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "scale", "shift", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.4", "t": "tf.contrib.distributions.bijectors.AffineLinearOperator"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/distributions/bijectors/Chain", "k": ["bijectors", "dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.4", "t": "tf.contrib.distributions.bijectors.Chain"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/distributions/bijectors/CholeskyOuterProduct", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.4", "t": "tf.contrib.distributions.bijectors.CholeskyOuterProduct"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/distributions/bijectors/ConditionalBijector", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.4", "t": "tf.contrib.distributions.bijectors.ConditionalBijector"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/distributions/bijectors/Exp", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "power", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.4", "t": "tf.contrib.distributions.bijectors.Exp"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/distributions/bijectors/Inline", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.4", "t": "tf.contrib.distributions.bijectors.Inline"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/distributions/bijectors/Invert", "k": ["bijector", "dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.4", "t": "tf.contrib.distributions.bijectors.Invert"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/distributions/bijectors/PowerTransform", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "power", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.4", "t": "tf.contrib.distributions.bijectors.PowerTransform"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/distributions/bijectors/Sigmoid", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.4", "t": "tf.contrib.distributions.bijectors.Sigmoid"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/distributions/bijectors/SigmoidCentered", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.4", "t": "tf.contrib.distributions.bijectors.SigmoidCentered"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/distributions/bijectors/SinhArcsinh", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "skewness", "tailweight", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.4", "t": "tf.contrib.distributions.bijectors.SinhArcsinh"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/distributions/bijectors/SoftmaxCentered", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.4", "t": "tf.contrib.distributions.bijectors.SoftmaxCentered"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/distributions/bijectors/Softplus", "k": ["dtype", "event_ndims", "graph_parents", "hinge_softness", "is_constant_jacobian", "name", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.4", "t": "tf.contrib.distributions.bijectors.Softplus"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/distributions/estimator_head_distribution_regression", "k": [], "r": "r1.4", "t": "tf.contrib.distributions.estimator_head_distribution_regression"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/distributions/matrix_diag_transform", "k": [], "r": "r1.4", "t": "tf.contrib.distributions.matrix_diag_transform"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/distributions/moving_mean_variance", "k": [], "r": "r1.4", "t": "tf.contrib.distributions.moving_mean_variance"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/distributions/normal_conjugates_known_scale_posterior", "k": [], "r": "r1.4", "t": "tf.contrib.distributions.normal_conjugates_known_scale_posterior"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/distributions/normal_conjugates_known_scale_predictive", "k": [], "r": "r1.4", "t": "tf.contrib.distributions.normal_conjugates_known_scale_predictive"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/distributions/percentile", "k": [], "r": "r1.4", "t": "tf.contrib.distributions.percentile"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/distributions/softplus_inverse", "k": [], "r": "r1.4", "t": "tf.contrib.distributions.softplus_inverse"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/estimator", "k": [], "r": "r1.4", "t": "tf.contrib.estimator"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/estimator/DNNEstimator", "k": ["config", "model_dir", "model_fn", "params", "__init__", "evaluate", "export_savedmodel", "get_variable_names", "get_variable_value", "latest_checkpoint", "predict", "train"], "r": "r1.4", "t": "tf.contrib.estimator.DNNEstimator"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/estimator/add_metrics", "k": [], "r": "r1.4", "t": "tf.contrib.estimator.add_metrics"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/estimator/binary_classification_head", "k": [], "r": "r1.4", "t": "tf.contrib.estimator.binary_classification_head"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/estimator/call_logit_fn", "k": [], "r": "r1.4", "t": "tf.contrib.estimator.call_logit_fn"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/estimator/clip_gradients_by_norm", "k": [], "r": "r1.4", "t": "tf.contrib.estimator.clip_gradients_by_norm"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/estimator/dnn_logit_fn_builder", "k": [], "r": "r1.4", "t": "tf.contrib.estimator.dnn_logit_fn_builder"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/estimator/forward_features", "k": [], "r": "r1.4", "t": "tf.contrib.estimator.forward_features"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/estimator/linear_logit_fn_builder", "k": [], "r": "r1.4", "t": "tf.contrib.estimator.linear_logit_fn_builder"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/estimator/multi_class_head", "k": [], "r": "r1.4", "t": "tf.contrib.estimator.multi_class_head"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/estimator/multi_head", "k": [], "r": "r1.4", "t": "tf.contrib.estimator.multi_head"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/estimator/multi_label_head", "k": [], "r": "r1.4", "t": "tf.contrib.estimator.multi_label_head"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/estimator/regression_head", "k": [], "r": "r1.4", "t": "tf.contrib.estimator.regression_head"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/factorization", "k": ["COSINE_DISTANCE", "KMEANS_PLUS_PLUS_INIT", "RANDOM_INIT", "SQUARED_EUCLIDEAN_DISTANCE"], "r": "r1.4", "t": "tf.contrib.factorization"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/factorization/GMM", "k": ["config", "model_dir", "__init__", "clusters", "covariances", "evaluate", "export", "export_savedmodel", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "predict_assignments", "score", "set_params", "weights", "ALL_SCORES", "ASSIGNMENTS", "SCORES"], "r": "r1.4", "t": "tf.contrib.factorization.GMM"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/factorization/GmmAlgorithm", "k": ["__init__", "alphas", "assignments", "clusters", "covariances", "init_ops", "is_initialized", "scores", "training_ops", "CLUSTERS_COVS_VARIABLE", "CLUSTERS_VARIABLE", "CLUSTERS_WEIGHT"], "r": "r1.4", "t": "tf.contrib.factorization.GmmAlgorithm"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/factorization/KMeans", "k": ["__init__", "training_graph"], "r": "r1.4", "t": "tf.contrib.factorization.KMeans"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/factorization/KMeansClustering", "k": ["config", "model_dir", "model_fn", "params", "__init__", "cluster_centers", "evaluate", "export_savedmodel", "get_variable_names", "get_variable_value", "latest_checkpoint", "predict", "predict_cluster_index", "score", "train", "transform", "ALL_DISTANCES", "CLUSTERS", "CLUSTER_INDEX", "COSINE_DISTANCE", "KMEANS_PLUS_PLUS_INIT", "RANDOM_INIT", "SCORE", "SQUARED_EUCLIDEAN_DISTANCE"], "r": "r1.4", "t": "tf.contrib.factorization.KMeansClustering"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/factorization/WALSMatrixFactorization", "k": ["config", "model_dir", "__init__", "evaluate", "export", "export_savedmodel", "fit", "get_col_factors", "get_params", "get_projections", "get_row_factors", "get_variable_names", "get_variable_value", "partial_fit", "predict", "set_params", "COMPLETED_SWEEPS", "INPUT_COLS", "INPUT_ROWS", "PROJECTION_RESULT", "PROJECTION_WEIGHTS", "PROJECT_ROW"], "r": "r1.4", "t": "tf.contrib.factorization.WALSMatrixFactorization"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/factorization/WALSModel", "k": ["col_factors", "col_update_prep_gramian_op", "col_weights", "initialize_col_update_op", "initialize_op", "initialize_row_update_op", "row_factors", "row_update_prep_gramian_op", "row_weights", "worker_init", "__init__", "project_col_factors", "project_row_factors", "scatter_update", "update_col_factors", "update_row_factors"], "r": "r1.4", "t": "tf.contrib.factorization.WALSModel"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/factorization/gmm", "k": [], "r": "r1.4", "t": "tf.contrib.factorization.gmm"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/ffmpeg", "k": [], "r": "r1.4", "t": "tf.contrib.ffmpeg"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/ffmpeg/decode_audio", "k": [], "r": "r1.4", "t": "tf.contrib.ffmpeg.decode_audio"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/ffmpeg/encode_audio", "k": [], "r": "r1.4", "t": "tf.contrib.ffmpeg.encode_audio"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/framework", "k": [], "r": "r1.4", "t": "tf.contrib.framework"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/framework/VariableDeviceChooser", "k": ["__call__", "__init__"], "r": "r1.4", "t": "tf.contrib.framework.VariableDeviceChooser"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/framework/add_arg_scope", "k": [], "r": "r1.4", "t": "tf.contrib.framework.add_arg_scope"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/framework/add_model_variable", "k": [], "r": "r1.4", "t": "tf.contrib.framework.add_model_variable"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/framework/arg_scope", "k": [], "r": "r1.4", "t": "tf.contrib.framework.arg_scope"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/framework/arg_scoped_arguments", "k": [], "r": "r1.4", "t": "tf.contrib.framework.arg_scoped_arguments"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/framework/assert_global_step", "k": [], "r": "r1.4", "t": "tf.contrib.framework.assert_global_step"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/framework/assert_or_get_global_step", "k": [], "r": "r1.4", "t": "tf.contrib.framework.assert_or_get_global_step"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/framework/assert_scalar_int", "k": [], "r": "r1.4", "t": "tf.contrib.framework.assert_scalar_int"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/framework/assign_from_checkpoint", "k": [], "r": "r1.4", "t": "tf.contrib.framework.assign_from_checkpoint"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/framework/assign_from_checkpoint_fn", "k": [], "r": "r1.4", "t": "tf.contrib.framework.assign_from_checkpoint_fn"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/framework/assign_from_values", "k": [], "r": "r1.4", "t": "tf.contrib.framework.assign_from_values"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/framework/assign_from_values_fn", "k": [], "r": "r1.4", "t": "tf.contrib.framework.assign_from_values_fn"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/framework/create_global_step", "k": [], "r": "r1.4", "t": "tf.contrib.framework.create_global_step"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/framework/deprecated", "k": [], "r": "r1.4", "t": "tf.contrib.framework.deprecated"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/framework/deprecated_arg_values", "k": [], "r": "r1.4", "t": "tf.contrib.framework.deprecated_arg_values"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/framework/deprecated_args", "k": [], "r": "r1.4", "t": "tf.contrib.framework.deprecated_args"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/framework/filter_variables", "k": [], "r": "r1.4", "t": "tf.contrib.framework.filter_variables"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/framework/get_global_step", "k": [], "r": "r1.4", "t": "tf.contrib.framework.get_global_step"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/framework/get_graph_from_inputs", "k": [], "r": "r1.4", "t": "tf.contrib.framework.get_graph_from_inputs"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/framework/get_local_variables", "k": [], "r": "r1.4", "t": "tf.contrib.framework.get_local_variables"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/framework/get_model_variables", "k": [], "r": "r1.4", "t": "tf.contrib.framework.get_model_variables"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/framework/get_name_scope", "k": [], "r": "r1.4", "t": "tf.contrib.framework.get_name_scope"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/framework/get_or_create_global_step", "k": [], "r": "r1.4", "t": "tf.contrib.framework.get_or_create_global_step"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/framework/get_trainable_variables", "k": [], "r": "r1.4", "t": "tf.contrib.framework.get_trainable_variables"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/framework/get_unique_variable", "k": [], "r": "r1.4", "t": "tf.contrib.framework.get_unique_variable"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/framework/get_variable_full_name", "k": [], "r": "r1.4", "t": "tf.contrib.framework.get_variable_full_name"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/framework/get_variables", "k": [], "r": "r1.4", "t": "tf.contrib.framework.get_variables"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/framework/get_variables_by_name", "k": [], "r": "r1.4", "t": "tf.contrib.framework.get_variables_by_name"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/framework/get_variables_by_suffix", "k": [], "r": "r1.4", "t": "tf.contrib.framework.get_variables_by_suffix"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/framework/get_variables_to_restore", "k": [], "r": "r1.4", "t": "tf.contrib.framework.get_variables_to_restore"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/framework/has_arg_scope", "k": [], "r": "r1.4", "t": "tf.contrib.framework.has_arg_scope"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/framework/init_from_checkpoint", "k": [], "r": "r1.4", "t": "tf.contrib.framework.init_from_checkpoint"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/framework/is_tensor", "k": [], "r": "r1.4", "t": "tf.contrib.framework.is_tensor"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/framework/list_variables", "k": [], "r": "r1.4", "t": "tf.contrib.framework.list_variables"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/framework/load_and_remap_matrix_initializer", "k": [], "r": "r1.4", "t": "tf.contrib.framework.load_and_remap_matrix_initializer"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/framework/load_checkpoint", "k": [], "r": "r1.4", "t": "tf.contrib.framework.load_checkpoint"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/framework/load_embedding_initializer", "k": [], "r": "r1.4", "t": "tf.contrib.framework.load_embedding_initializer"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/framework/load_linear_multiclass_bias_initializer", "k": [], "r": "r1.4", "t": "tf.contrib.framework.load_linear_multiclass_bias_initializer"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/framework/load_variable", "k": [], "r": "r1.4", "t": "tf.contrib.framework.load_variable"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/framework/load_variable_slot_initializer", "k": [], "r": "r1.4", "t": "tf.contrib.framework.load_variable_slot_initializer"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/framework/local_variable", "k": [], "r": "r1.4", "t": "tf.contrib.framework.local_variable"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/framework/model_variable", "k": [], "r": "r1.4", "t": "tf.contrib.framework.model_variable"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/framework/nest", "k": [], "r": "r1.4", "t": "tf.contrib.framework.nest"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/framework/nest/assert_same_structure", "k": [], "r": "r1.4", "t": "tf.contrib.framework.nest.assert_same_structure"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/framework/nest/assert_shallow_structure", "k": [], "r": "r1.4", "t": "tf.contrib.framework.nest.assert_shallow_structure"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/framework/nest/flatten", "k": [], "r": "r1.4", "t": "tf.contrib.framework.nest.flatten"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/framework/nest/flatten_dict_items", "k": [], "r": "r1.4", "t": "tf.contrib.framework.nest.flatten_dict_items"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/framework/nest/flatten_up_to", "k": [], "r": "r1.4", "t": "tf.contrib.framework.nest.flatten_up_to"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/framework/nest/get_traverse_shallow_structure", "k": [], "r": "r1.4", "t": "tf.contrib.framework.nest.get_traverse_shallow_structure"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/framework/nest/is_sequence", "k": [], "r": "r1.4", "t": "tf.contrib.framework.nest.is_sequence"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/framework/nest/map_structure", "k": [], "r": "r1.4", "t": "tf.contrib.framework.nest.map_structure"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/framework/nest/map_structure_up_to", "k": [], "r": "r1.4", "t": "tf.contrib.framework.nest.map_structure_up_to"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/framework/nest/pack_sequence_as", "k": [], "r": "r1.4", "t": "tf.contrib.framework.nest.pack_sequence_as"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/framework/prepend_name_scope", "k": [], "r": "r1.4", "t": "tf.contrib.framework.prepend_name_scope"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/framework/reduce_sum_n", "k": [], "r": "r1.4", "t": "tf.contrib.framework.reduce_sum_n"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/framework/remove_squeezable_dimensions", "k": [], "r": "r1.4", "t": "tf.contrib.framework.remove_squeezable_dimensions"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/framework/strip_name_scope", "k": [], "r": "r1.4", "t": "tf.contrib.framework.strip_name_scope"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/framework/variable", "k": [], "r": "r1.4", "t": "tf.contrib.framework.variable"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/framework/with_same_shape", "k": [], "r": "r1.4", "t": "tf.contrib.framework.with_same_shape"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/framework/with_shape", "k": [], "r": "r1.4", "t": "tf.contrib.framework.with_shape"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/framework/zero_initializer", "k": [], "r": "r1.4", "t": "tf.contrib.framework.zero_initializer"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/gan", "k": [], "r": "r1.4", "t": "tf.contrib.gan"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/gan/ACGANModel", "k": ["discriminator_fn", "discriminator_gen_classification_logits", "discriminator_gen_outputs", "discriminator_real_classification_logits", "discriminator_real_outputs", "discriminator_scope", "discriminator_variables", "generated_data", "generator_fn", "generator_inputs", "generator_scope", "generator_variables", "one_hot_labels", "real_data", "__new__"], "r": "r1.4", "t": "tf.contrib.gan.ACGANModel"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/gan/GANLoss", "k": ["discriminator_loss", "generator_loss", "__new__"], "r": "r1.4", "t": "tf.contrib.gan.GANLoss"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/gan/GANModel", "k": ["discriminator_fn", "discriminator_gen_outputs", "discriminator_real_outputs", "discriminator_scope", "discriminator_variables", "generated_data", "generator_fn", "generator_inputs", "generator_scope", "generator_variables", "real_data", "__new__"], "r": "r1.4", "t": "tf.contrib.gan.GANModel"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/gan/GANTrainOps", "k": ["discriminator_train_op", "generator_train_op", "global_step_inc_op", "__new__"], "r": "r1.4", "t": "tf.contrib.gan.GANTrainOps"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/gan/GANTrainSteps", "k": ["discriminator_train_steps", "generator_train_steps", "__new__"], "r": "r1.4", "t": "tf.contrib.gan.GANTrainSteps"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/gan/InfoGANModel", "k": ["discriminator_fn", "discriminator_gen_outputs", "discriminator_real_outputs", "discriminator_scope", "discriminator_variables", "generated_data", "generator_fn", "generator_inputs", "generator_scope", "generator_variables", "predicted_distributions", "real_data", "structured_generator_inputs", "__new__"], "r": "r1.4", "t": "tf.contrib.gan.InfoGANModel"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/gan/acgan_model", "k": [], "r": "r1.4", "t": "tf.contrib.gan.acgan_model"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/gan/estimator", "k": [], "r": "r1.4", "t": "tf.contrib.gan.estimator"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/gan/estimator/GANEstimator", "k": ["config", "model_dir", "model_fn", "params", "__init__", "evaluate", "export_savedmodel", "get_variable_names", "get_variable_value", "latest_checkpoint", "predict", "train"], "r": "r1.4", "t": "tf.contrib.gan.estimator.GANEstimator"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/gan/estimator/GANHead", "k": ["logits_dimension", "name", "__init__", "create_estimator_spec", "create_loss"], "r": "r1.4", "t": "tf.contrib.gan.estimator.GANHead"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/gan/estimator/SummaryType", "k": ["IMAGES", "IMAGE_COMPARISON", "NONE", "VARIABLES", "__members__"], "r": "r1.4", "t": "tf.contrib.gan.estimator.SummaryType"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/gan/estimator/gan_estimator", "k": ["__all__"], "r": "r1.4", "t": "tf.contrib.gan.estimator.gan_estimator"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/gan/estimator/gan_head", "k": [], "r": "r1.4", "t": "tf.contrib.gan.estimator.gan_head"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/gan/estimator/head", "k": ["__all__"], "r": "r1.4", "t": "tf.contrib.gan.estimator.head"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/gan/eval", "k": ["frechet_inception_distance", "inception_score"], "r": "r1.4", "t": "tf.contrib.gan.eval"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/gan/eval/add_gan_model_image_summaries", "k": [], "r": "r1.4", "t": "tf.contrib.gan.eval.add_gan_model_image_summaries"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/gan/eval/add_gan_model_summaries", "k": [], "r": "r1.4", "t": "tf.contrib.gan.eval.add_gan_model_summaries"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/gan/eval/add_image_comparison_summaries", "k": [], "r": "r1.4", "t": "tf.contrib.gan.eval.add_image_comparison_summaries"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/gan/eval/add_regularization_loss_summaries", "k": [], "r": "r1.4", "t": "tf.contrib.gan.eval.add_regularization_loss_summaries"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/gan/eval/classifier_metrics", "k": ["__all__", "frechet_inception_distance", "inception_score"], "r": "r1.4", "t": "tf.contrib.gan.eval.classifier_metrics"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/gan/eval/classifier_score", "k": [], "r": "r1.4", "t": "tf.contrib.gan.eval.classifier_score"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/gan/eval/eval_utils", "k": ["__all__"], "r": "r1.4", "t": "tf.contrib.gan.eval.eval_utils"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/gan/eval/frechet_classifier_distance", "k": [], "r": "r1.4", "t": "tf.contrib.gan.eval.frechet_classifier_distance"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/gan/eval/get_graph_def_from_disk", "k": [], "r": "r1.4", "t": "tf.contrib.gan.eval.get_graph_def_from_disk"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/gan/eval/get_graph_def_from_resource", "k": [], "r": "r1.4", "t": "tf.contrib.gan.eval.get_graph_def_from_resource"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/gan/eval/get_graph_def_from_url_tarball", "k": [], "r": "r1.4", "t": "tf.contrib.gan.eval.get_graph_def_from_url_tarball"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/gan/eval/image_grid", "k": [], "r": "r1.4", "t": "tf.contrib.gan.eval.image_grid"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/gan/eval/image_reshaper", "k": [], "r": "r1.4", "t": "tf.contrib.gan.eval.image_reshaper"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/gan/eval/preprocess_image", "k": [], "r": "r1.4", "t": "tf.contrib.gan.eval.preprocess_image"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/gan/eval/run_image_classifier", "k": [], "r": "r1.4", "t": "tf.contrib.gan.eval.run_image_classifier"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/gan/eval/run_inception", "k": [], "r": "r1.4", "t": "tf.contrib.gan.eval.run_inception"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/gan/eval/summaries", "k": ["__all__"], "r": "r1.4", "t": "tf.contrib.gan.eval.summaries"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/gan/features", "k": [], "r": "r1.4", "t": "tf.contrib.gan.features"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/gan/features/VBN", "k": ["__call__", "__init__", "reference_batch_normalization"], "r": "r1.4", "t": "tf.contrib.gan.features.VBN"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/gan/features/clip_discriminator_weights", "k": [], "r": "r1.4", "t": "tf.contrib.gan.features.clip_discriminator_weights"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/gan/features/clip_variables", "k": [], "r": "r1.4", "t": "tf.contrib.gan.features.clip_variables"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/gan/features/condition_tensor", "k": [], "r": "r1.4", "t": "tf.contrib.gan.features.condition_tensor"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/gan/features/condition_tensor_from_onehot", "k": [], "r": "r1.4", "t": "tf.contrib.gan.features.condition_tensor_from_onehot"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/gan/gan_loss", "k": [], "r": "r1.4", "t": "tf.contrib.gan.gan_loss"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/gan/gan_model", "k": [], "r": "r1.4", "t": "tf.contrib.gan.gan_model"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/gan/gan_train", "k": [], "r": "r1.4", "t": "tf.contrib.gan.gan_train"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/gan/gan_train_ops", "k": [], "r": "r1.4", "t": "tf.contrib.gan.gan_train_ops"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/gan/get_joint_train_hooks", "k": [], "r": "r1.4", "t": "tf.contrib.gan.get_joint_train_hooks"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/gan/get_sequential_train_hooks", "k": [], "r": "r1.4", "t": "tf.contrib.gan.get_sequential_train_hooks"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/gan/get_sequential_train_steps", "k": [], "r": "r1.4", "t": "tf.contrib.gan.get_sequential_train_steps"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/gan/infogan_model", "k": [], "r": "r1.4", "t": "tf.contrib.gan.infogan_model"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/gan/losses", "k": [], "r": "r1.4", "t": "tf.contrib.gan.losses"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/gan/losses/acgan_discriminator_loss", "k": [], "r": "r1.4", "t": "tf.contrib.gan.losses.acgan_discriminator_loss"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/gan/losses/acgan_generator_loss", "k": [], "r": "r1.4", "t": "tf.contrib.gan.losses.acgan_generator_loss"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/gan/losses/combine_adversarial_loss", "k": [], "r": "r1.4", "t": "tf.contrib.gan.losses.combine_adversarial_loss"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/gan/losses/least_squares_discriminator_loss", "k": [], "r": "r1.4", "t": "tf.contrib.gan.losses.least_squares_discriminator_loss"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/gan/losses/least_squares_generator_loss", "k": [], "r": "r1.4", "t": "tf.contrib.gan.losses.least_squares_generator_loss"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/gan/losses/minimax_discriminator_loss", "k": [], "r": "r1.4", "t": "tf.contrib.gan.losses.minimax_discriminator_loss"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/gan/losses/minimax_generator_loss", "k": [], "r": "r1.4", "t": "tf.contrib.gan.losses.minimax_generator_loss"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/gan/losses/modified_discriminator_loss", "k": [], "r": "r1.4", "t": "tf.contrib.gan.losses.modified_discriminator_loss"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/gan/losses/modified_generator_loss", "k": [], "r": "r1.4", "t": "tf.contrib.gan.losses.modified_generator_loss"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/gan/losses/mutual_information_penalty", "k": [], "r": "r1.4", "t": "tf.contrib.gan.losses.mutual_information_penalty"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/gan/losses/wargs", "k": [], "r": "r1.4", "t": "tf.contrib.gan.losses.wargs"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/gan/losses/wargs/acgan_discriminator_loss", "k": [], "r": "r1.4", "t": "tf.contrib.gan.losses.wargs.acgan_discriminator_loss"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/gan/losses/wargs/acgan_generator_loss", "k": [], "r": "r1.4", "t": "tf.contrib.gan.losses.wargs.acgan_generator_loss"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/gan/losses/wargs/combine_adversarial_loss", "k": [], "r": "r1.4", "t": "tf.contrib.gan.losses.wargs.combine_adversarial_loss"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/gan/losses/wargs/least_squares_discriminator_loss", "k": [], "r": "r1.4", "t": "tf.contrib.gan.losses.wargs.least_squares_discriminator_loss"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/gan/losses/wargs/least_squares_generator_loss", "k": [], "r": "r1.4", "t": "tf.contrib.gan.losses.wargs.least_squares_generator_loss"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/gan/losses/wargs/minimax_discriminator_loss", "k": [], "r": "r1.4", "t": "tf.contrib.gan.losses.wargs.minimax_discriminator_loss"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/gan/losses/wargs/minimax_generator_loss", "k": [], "r": "r1.4", "t": "tf.contrib.gan.losses.wargs.minimax_generator_loss"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/gan/losses/wargs/modified_discriminator_loss", "k": [], "r": "r1.4", "t": "tf.contrib.gan.losses.wargs.modified_discriminator_loss"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/gan/losses/wargs/modified_generator_loss", "k": [], "r": "r1.4", "t": "tf.contrib.gan.losses.wargs.modified_generator_loss"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/gan/losses/wargs/mutual_information_penalty", "k": [], "r": "r1.4", "t": "tf.contrib.gan.losses.wargs.mutual_information_penalty"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/gan/losses/wargs/wasserstein_discriminator_loss", "k": [], "r": "r1.4", "t": "tf.contrib.gan.losses.wargs.wasserstein_discriminator_loss"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/gan/losses/wargs/wasserstein_generator_loss", "k": [], "r": "r1.4", "t": "tf.contrib.gan.losses.wargs.wasserstein_generator_loss"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/gan/losses/wargs/wasserstein_gradient_penalty", "k": [], "r": "r1.4", "t": "tf.contrib.gan.losses.wargs.wasserstein_gradient_penalty"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/gan/losses/wasserstein_discriminator_loss", "k": [], "r": "r1.4", "t": "tf.contrib.gan.losses.wasserstein_discriminator_loss"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/gan/losses/wasserstein_generator_loss", "k": [], "r": "r1.4", "t": "tf.contrib.gan.losses.wasserstein_generator_loss"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/gan/losses/wasserstein_gradient_penalty", "k": [], "r": "r1.4", "t": "tf.contrib.gan.losses.wasserstein_gradient_penalty"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/graph_editor", "k": [], "r": "r1.4", "t": "tf.contrib.graph_editor"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/graph_editor/ControlOutputs", "k": ["graph", "__init__", "get", "get_all", "update"], "r": "r1.4", "t": "tf.contrib.graph_editor.ControlOutputs"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/graph_editor/SubGraphView", "k": ["connected_inputs", "connected_outputs", "graph", "inputs", "ops", "outputs", "passthroughs", "__bool__", "__copy__", "__enter__", "__exit__", "__init__", "__nonzero__", "consumers", "copy", "find_op_by_name", "input_index", "is_passthrough", "op", "output_index", "remap", "remap_default", "remap_inputs", "remap_outputs", "remap_outputs_make_unique", "remap_outputs_to_consumers", "remove_unused_ops"], "r": "r1.4", "t": "tf.contrib.graph_editor.SubGraphView"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/graph_editor/Transformer", "k": ["__call__", "__init__"], "r": "r1.4", "t": "tf.contrib.graph_editor.Transformer"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/graph_editor/TransformerInfo", "k": ["__init__", "original", "transformed"], "r": "r1.4", "t": "tf.contrib.graph_editor.TransformerInfo"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/graph_editor/add_control_inputs", "k": [], "r": "r1.4", "t": "tf.contrib.graph_editor.add_control_inputs"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/graph_editor/assign_renamed_collections_handler", "k": [], "r": "r1.4", "t": "tf.contrib.graph_editor.assign_renamed_collections_handler"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/graph_editor/bypass", "k": [], "r": "r1.4", "t": "tf.contrib.graph_editor.bypass"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/graph_editor/can_be_regex", "k": [], "r": "r1.4", "t": "tf.contrib.graph_editor.can_be_regex"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/graph_editor/check_cios", "k": [], "r": "r1.4", "t": "tf.contrib.graph_editor.check_cios"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/graph_editor/compute_boundary_ts", "k": [], "r": "r1.4", "t": "tf.contrib.graph_editor.compute_boundary_ts"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/graph_editor/connect", "k": [], "r": "r1.4", "t": "tf.contrib.graph_editor.connect"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/graph_editor/copy", "k": [], "r": "r1.4", "t": "tf.contrib.graph_editor.copy"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/graph_editor/copy_op_handler", "k": [], "r": "r1.4", "t": "tf.contrib.graph_editor.copy_op_handler"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/graph_editor/copy_with_input_replacements", "k": [], "r": "r1.4", "t": "tf.contrib.graph_editor.copy_with_input_replacements"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/graph_editor/detach", "k": [], "r": "r1.4", "t": "tf.contrib.graph_editor.detach"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/graph_editor/detach_control_inputs", "k": [], "r": "r1.4", "t": "tf.contrib.graph_editor.detach_control_inputs"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/graph_editor/detach_control_outputs", "k": [], "r": "r1.4", "t": "tf.contrib.graph_editor.detach_control_outputs"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/graph_editor/detach_inputs", "k": [], "r": "r1.4", "t": "tf.contrib.graph_editor.detach_inputs"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/graph_editor/detach_outputs", "k": [], "r": "r1.4", "t": "tf.contrib.graph_editor.detach_outputs"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/graph_editor/edit", "k": [], "r": "r1.4", "t": "tf.contrib.graph_editor.edit"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/graph_editor/filter_ops", "k": [], "r": "r1.4", "t": "tf.contrib.graph_editor.filter_ops"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/graph_editor/filter_ops_from_regex", "k": [], "r": "r1.4", "t": "tf.contrib.graph_editor.filter_ops_from_regex"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/graph_editor/filter_ts", "k": [], "r": "r1.4", "t": "tf.contrib.graph_editor.filter_ts"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/graph_editor/filter_ts_from_regex", "k": [], "r": "r1.4", "t": "tf.contrib.graph_editor.filter_ts_from_regex"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/graph_editor/get_backward_walk_ops", "k": [], "r": "r1.4", "t": "tf.contrib.graph_editor.get_backward_walk_ops"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/graph_editor/get_consuming_ops", "k": [], "r": "r1.4", "t": "tf.contrib.graph_editor.get_consuming_ops"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/graph_editor/get_forward_walk_ops", "k": [], "r": "r1.4", "t": "tf.contrib.graph_editor.get_forward_walk_ops"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/graph_editor/get_generating_ops", "k": [], "r": "r1.4", "t": "tf.contrib.graph_editor.get_generating_ops"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/graph_editor/get_name_scope_ops", "k": [], "r": "r1.4", "t": "tf.contrib.graph_editor.get_name_scope_ops"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/graph_editor/get_ops_ios", "k": [], "r": "r1.4", "t": "tf.contrib.graph_editor.get_ops_ios"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/graph_editor/get_tensors", "k": [], "r": "r1.4", "t": "tf.contrib.graph_editor.get_tensors"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/graph_editor/get_walks_intersection_ops", "k": [], "r": "r1.4", "t": "tf.contrib.graph_editor.get_walks_intersection_ops"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/graph_editor/get_walks_union_ops", "k": [], "r": "r1.4", "t": "tf.contrib.graph_editor.get_walks_union_ops"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/graph_editor/get_within_boundary_ops", "k": [], "r": "r1.4", "t": "tf.contrib.graph_editor.get_within_boundary_ops"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/graph_editor/graph_replace", "k": [], "r": "r1.4", "t": "tf.contrib.graph_editor.graph_replace"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/graph_editor/keep_t_if_possible_handler", "k": [], "r": "r1.4", "t": "tf.contrib.graph_editor.keep_t_if_possible_handler"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/graph_editor/make_list_of_op", "k": [], "r": "r1.4", "t": "tf.contrib.graph_editor.make_list_of_op"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/graph_editor/make_list_of_t", "k": [], "r": "r1.4", "t": "tf.contrib.graph_editor.make_list_of_t"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/graph_editor/make_placeholder_from_dtype_and_shape", "k": [], "r": "r1.4", "t": "tf.contrib.graph_editor.make_placeholder_from_dtype_and_shape"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/graph_editor/make_placeholder_from_tensor", "k": [], "r": "r1.4", "t": "tf.contrib.graph_editor.make_placeholder_from_tensor"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/graph_editor/make_regex", "k": [], "r": "r1.4", "t": "tf.contrib.graph_editor.make_regex"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/graph_editor/make_view", "k": [], "r": "r1.4", "t": "tf.contrib.graph_editor.make_view"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/graph_editor/make_view_from_scope", "k": [], "r": "r1.4", "t": "tf.contrib.graph_editor.make_view_from_scope"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/graph_editor/placeholder_name", "k": [], "r": "r1.4", "t": "tf.contrib.graph_editor.placeholder_name"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/graph_editor/remove_control_inputs", "k": [], "r": "r1.4", "t": "tf.contrib.graph_editor.remove_control_inputs"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/graph_editor/replace_t_with_placeholder_handler", "k": [], "r": "r1.4", "t": "tf.contrib.graph_editor.replace_t_with_placeholder_handler"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/graph_editor/reroute", "k": [], "r": "r1.4", "t": "tf.contrib.graph_editor.reroute"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/graph_editor/reroute_inputs", "k": [], "r": "r1.4", "t": "tf.contrib.graph_editor.reroute_inputs"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/graph_editor/reroute_ios", "k": [], "r": "r1.4", "t": "tf.contrib.graph_editor.reroute_ios"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/graph_editor/reroute_outputs", "k": [], "r": "r1.4", "t": "tf.contrib.graph_editor.reroute_outputs"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/graph_editor/reroute_ts", "k": [], "r": "r1.4", "t": "tf.contrib.graph_editor.reroute_ts"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/graph_editor/select", "k": [], "r": "r1.4", "t": "tf.contrib.graph_editor.select"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/graph_editor/select_ops", "k": [], "r": "r1.4", "t": "tf.contrib.graph_editor.select_ops"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/graph_editor/select_ops_and_ts", "k": [], "r": "r1.4", "t": "tf.contrib.graph_editor.select_ops_and_ts"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/graph_editor/select_ts", "k": [], "r": "r1.4", "t": "tf.contrib.graph_editor.select_ts"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/graph_editor/subgraph", "k": [], "r": "r1.4", "t": "tf.contrib.graph_editor.subgraph"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/graph_editor/swap_inputs", "k": [], "r": "r1.4", "t": "tf.contrib.graph_editor.swap_inputs"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/graph_editor/swap_ios", "k": [], "r": "r1.4", "t": "tf.contrib.graph_editor.swap_ios"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/graph_editor/swap_outputs", "k": [], "r": "r1.4", "t": "tf.contrib.graph_editor.swap_outputs"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/graph_editor/swap_ts", "k": [], "r": "r1.4", "t": "tf.contrib.graph_editor.swap_ts"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/graph_editor/transform", "k": [], "r": "r1.4", "t": "tf.contrib.graph_editor.transform"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/graph_editor/transform_op_if_inside_handler", "k": [], "r": "r1.4", "t": "tf.contrib.graph_editor.transform_op_if_inside_handler"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/graph_editor/util", "k": [], "r": "r1.4", "t": "tf.contrib.graph_editor.util"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/grid_rnn", "k": [], "r": "r1.4", "t": "tf.contrib.grid_rnn"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/image", "k": [], "r": "r1.4", "t": "tf.contrib.image"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/image/angles_to_projective_transforms", "k": [], "r": "r1.4", "t": "tf.contrib.image.angles_to_projective_transforms"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/image/compose_transforms", "k": [], "r": "r1.4", "t": "tf.contrib.image.compose_transforms"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/image/rotate", "k": [], "r": "r1.4", "t": "tf.contrib.image.rotate"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/image/single_image_random_dot_stereograms", "k": [], "r": "r1.4", "t": "tf.contrib.image.single_image_random_dot_stereograms"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/image/transform", "k": [], "r": "r1.4", "t": "tf.contrib.image.transform"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/input_pipeline", "k": [], "r": "r1.4", "t": "tf.contrib.input_pipeline"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/input_pipeline/obtain_next", "k": [], "r": "r1.4", "t": "tf.contrib.input_pipeline.obtain_next"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/integrate", "k": [], "r": "r1.4", "t": "tf.contrib.integrate"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/integrate/odeint", "k": [], "r": "r1.4", "t": "tf.contrib.integrate.odeint"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/keras", "k": [], "r": "r1.4", "t": "tf.contrib.keras"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/kernel_methods", "k": [], "r": "r1.4", "t": "tf.contrib.kernel_methods"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/kernel_methods/KernelLinearClassifier", "k": ["config", "model_dir", "__init__", "evaluate", "export", "export_savedmodel", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "predict_classes", "predict_proba", "set_params"], "r": "r1.4", "t": "tf.contrib.kernel_methods.KernelLinearClassifier"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/kernel_methods/RandomFourierFeatureMapper", "k": ["input_dim", "name", "output_dim", "__init__", "map"], "r": "r1.4", "t": "tf.contrib.kernel_methods.RandomFourierFeatureMapper"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/kernel_methods/sparse_multiclass_hinge_loss", "k": [], "r": "r1.4", "t": "tf.contrib.kernel_methods.sparse_multiclass_hinge_loss"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/kfac", "k": [], "r": "r1.4", "t": "tf.contrib.kfac"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/kfac/curvature_matrix_vector_products", "k": [], "r": "r1.4", "t": "tf.contrib.kfac.curvature_matrix_vector_products"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/kfac/curvature_matrix_vector_products/CurvatureMatrixVectorProductComputer", "k": ["fisher_factor_inner_shapes", "generalized_gauss_newton_factor_inner_shapes", "__init__", "multiply_fisher", "multiply_fisher_factor", "multiply_fisher_factor_transpose", "multiply_generalized_gauss_newton", "multiply_generalized_gauss_newton_factor", "multiply_generalized_gauss_newton_factor_transpose", "multiply_hessian"], "r": "r1.4", "t": "tf.contrib.kfac.curvature_matrix_vector_products.CurvatureMatrixVectorProductComputer"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/kfac/estimator", "k": [], "r": "r1.4", "t": "tf.contrib.kfac.estimator"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/kfac/estimator/FisherEstimator", "k": ["damping", "variables", "__init__", "multiply", "multiply_inverse"], "r": "r1.4", "t": "tf.contrib.kfac.estimator.FisherEstimator"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/kfac/fisher_blocks", "k": [], "r": "r1.4", "t": "tf.contrib.kfac.fisher_blocks"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/kfac/fisher_blocks/ConvDiagonalFB", "k": ["__init__", "instantiate_factors", "multiply", "multiply_inverse", "tensors_to_compute_grads"], "r": "r1.4", "t": "tf.contrib.kfac.fisher_blocks.ConvDiagonalFB"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/kfac/fisher_blocks/ConvKFCBasicFB", "k": ["__init__", "full_fisher_block", "instantiate_factors", "multiply", "multiply_inverse", "tensors_to_compute_grads"], "r": "r1.4", "t": "tf.contrib.kfac.fisher_blocks.ConvKFCBasicFB"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/kfac/fisher_blocks/FisherBlock", "k": ["__init__", "instantiate_factors", "multiply", "multiply_inverse", "tensors_to_compute_grads"], "r": "r1.4", "t": "tf.contrib.kfac.fisher_blocks.FisherBlock"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/kfac/fisher_blocks/FullFB", "k": ["__init__", "full_fisher_block", "instantiate_factors", "multiply", "multiply_inverse", "tensors_to_compute_grads"], "r": "r1.4", "t": "tf.contrib.kfac.fisher_blocks.FullFB"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/kfac/fisher_blocks/FullyConnectedDiagonalFB", "k": ["__init__", "instantiate_factors", "multiply", "multiply_inverse", "tensors_to_compute_grads"], "r": "r1.4", "t": "tf.contrib.kfac.fisher_blocks.FullyConnectedDiagonalFB"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/kfac/fisher_blocks/FullyConnectedKFACBasicFB", "k": ["__init__", "full_fisher_block", "instantiate_factors", "multiply", "multiply_inverse", "tensors_to_compute_grads"], "r": "r1.4", "t": "tf.contrib.kfac.fisher_blocks.FullyConnectedKFACBasicFB"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/kfac/fisher_blocks/KroneckerProductFB", "k": ["__init__", "full_fisher_block", "instantiate_factors", "multiply", "multiply_inverse", "tensors_to_compute_grads"], "r": "r1.4", "t": "tf.contrib.kfac.fisher_blocks.KroneckerProductFB"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/kfac/fisher_blocks/NaiveDiagonalFB", "k": ["__init__", "full_fisher_block", "instantiate_factors", "multiply", "multiply_inverse", "tensors_to_compute_grads"], "r": "r1.4", "t": "tf.contrib.kfac.fisher_blocks.NaiveDiagonalFB"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/kfac/fisher_factors", "k": [], "r": "r1.4", "t": "tf.contrib.kfac.fisher_factors"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/kfac/fisher_factors/ConvDiagonalFactor", "k": ["__init__", "get_cov", "instantiate_covariance", "make_covariance_update_op", "make_inverse_update_ops"], "r": "r1.4", "t": "tf.contrib.kfac.fisher_factors.ConvDiagonalFactor"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/kfac/fisher_factors/ConvInputKroneckerFactor", "k": ["__init__", "get_cov", "get_eigendecomp", "get_inverse", "get_matpower", "instantiate_covariance", "make_covariance_update_op", "make_inverse_update_ops", "register_damped_inverse", "register_eigendecomp", "register_matpower"], "r": "r1.4", "t": "tf.contrib.kfac.fisher_factors.ConvInputKroneckerFactor"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/kfac/fisher_factors/ConvOutputKroneckerFactor", "k": ["__init__", "get_cov", "get_eigendecomp", "get_inverse", "get_matpower", "instantiate_covariance", "make_covariance_update_op", "make_inverse_update_ops", "register_damped_inverse", "register_eigendecomp", "register_matpower"], "r": "r1.4", "t": "tf.contrib.kfac.fisher_factors.ConvOutputKroneckerFactor"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/kfac/fisher_factors/DiagonalFactor", "k": ["__init__", "get_cov", "instantiate_covariance", "make_covariance_update_op", "make_inverse_update_ops"], "r": "r1.4", "t": "tf.contrib.kfac.fisher_factors.DiagonalFactor"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/kfac/fisher_factors/FisherFactor", "k": ["__init__", "get_cov", "instantiate_covariance", "make_covariance_update_op", "make_inverse_update_ops"], "r": "r1.4", "t": "tf.contrib.kfac.fisher_factors.FisherFactor"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/kfac/fisher_factors/FullFactor", "k": ["__init__", "get_cov", "get_eigendecomp", "get_inverse", "get_matpower", "instantiate_covariance", "make_covariance_update_op", "make_inverse_update_ops", "register_damped_inverse", "register_eigendecomp", "register_matpower"], "r": "r1.4", "t": "tf.contrib.kfac.fisher_factors.FullFactor"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/kfac/fisher_factors/FullyConnectedDiagonalFactor", "k": ["__init__", "get_cov", "instantiate_covariance", "make_covariance_update_op", "make_inverse_update_ops"], "r": "r1.4", "t": "tf.contrib.kfac.fisher_factors.FullyConnectedDiagonalFactor"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/kfac/fisher_factors/FullyConnectedKroneckerFactor", "k": ["__init__", "get_cov", "get_eigendecomp", "get_inverse", "get_matpower", "instantiate_covariance", "make_covariance_update_op", "make_inverse_update_ops", "register_damped_inverse", "register_eigendecomp", "register_matpower"], "r": "r1.4", "t": "tf.contrib.kfac.fisher_factors.FullyConnectedKroneckerFactor"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/kfac/fisher_factors/InverseProvidingFactor", "k": ["__init__", "get_cov", "get_eigendecomp", "get_inverse", "get_matpower", "instantiate_covariance", "make_covariance_update_op", "make_inverse_update_ops", "register_damped_inverse", "register_eigendecomp", "register_matpower"], "r": "r1.4", "t": "tf.contrib.kfac.fisher_factors.InverseProvidingFactor"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/kfac/fisher_factors/NaiveDiagonalFactor", "k": ["__init__", "get_cov", "instantiate_covariance", "make_covariance_update_op", "make_inverse_update_ops"], "r": "r1.4", "t": "tf.contrib.kfac.fisher_factors.NaiveDiagonalFactor"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/kfac/fisher_factors/covariance_initializer", "k": [], "r": "r1.4", "t": "tf.contrib.kfac.fisher_factors.covariance_initializer"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/kfac/fisher_factors/diagonal_covariance_initializer", "k": [], "r": "r1.4", "t": "tf.contrib.kfac.fisher_factors.diagonal_covariance_initializer"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/kfac/fisher_factors/inverse_initializer", "k": [], "r": "r1.4", "t": "tf.contrib.kfac.fisher_factors.inverse_initializer"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/kfac/fisher_factors/scalar_or_tensor_to_string", "k": [], "r": "r1.4", "t": "tf.contrib.kfac.fisher_factors.scalar_or_tensor_to_string"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/kfac/fisher_factors/scope_string_from_name", "k": [], "r": "r1.4", "t": "tf.contrib.kfac.fisher_factors.scope_string_from_name"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/kfac/fisher_factors/scope_string_from_params", "k": [], "r": "r1.4", "t": "tf.contrib.kfac.fisher_factors.scope_string_from_params"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/kfac/layer_collection", "k": ["APPROX_DIAGONAL_NAME", "APPROX_FULL_NAME", "APPROX_KRONECKER_NAME"], "r": "r1.4", "t": "tf.contrib.kfac.layer_collection"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/kfac/layer_collection/LayerCollection", "k": ["generic_registrations", "graph", "subgraph", "__init__", "create_subgraph", "get_blocks", "get_factors", "get_use_count_map", "make_or_get_factor", "register_block", "register_categorical_predictive_distribution", "register_conv2d", "register_fully_connected", "register_generic", "register_multi_bernoulli_predictive_distribution", "register_normal_predictive_distribution", "reset_internals", "total_loss", "total_sampled_loss"], "r": "r1.4", "t": "tf.contrib.kfac.layer_collection.LayerCollection"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/kfac/layer_collection/LayerParametersDict", "k": ["__delitem__", "__eq__", "__init__", "__iter__", "__ne__", "__reduce__", "__repr__", "__reversed__", "__setitem__", "clear", "copy", "fromkeys", "items", "iteritems", "iterkeys", "itervalues", "keys", "pop", "popitem", "setdefault", "update", "values", "viewitems", "viewkeys", "viewvalues", "__hash__"], "r": "r1.4", "t": "tf.contrib.kfac.layer_collection.LayerParametersDict"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/kfac/loss_functions", "k": [], "r": "r1.4", "t": "tf.contrib.kfac.loss_functions"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/kfac/loss_functions/CategoricalLogitsNegativeLogProbLoss", "k": ["fisher_factor_inner_shape", "fisher_factor_inner_static_shape", "hessian_factor_inner_shape", "hessian_factor_inner_static_shape", "inputs", "params", "__init__", "evaluate", "evaluate_on_sample", "multiply_fisher", "multiply_fisher_factor", "multiply_fisher_factor_replicated_one_hot", "multiply_fisher_factor_transpose", "multiply_hessian", "multiply_hessian_factor", "multiply_hessian_factor_replicated_one_hot", "multiply_hessian_factor_transpose", "sample"], "r": "r1.4", "t": "tf.contrib.kfac.loss_functions.CategoricalLogitsNegativeLogProbLoss"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/kfac/loss_functions/DistributionNegativeLogProbLoss", "k": ["fisher_factor_inner_shape", "fisher_factor_inner_static_shape", "hessian_factor_inner_shape", "hessian_factor_inner_static_shape", "inputs", "params", "__init__", "evaluate", "evaluate_on_sample", "multiply_fisher", "multiply_fisher_factor", "multiply_fisher_factor_replicated_one_hot", "multiply_fisher_factor_transpose", "multiply_hessian", "multiply_hessian_factor", "multiply_hessian_factor_replicated_one_hot", "multiply_hessian_factor_transpose", "sample"], "r": "r1.4", "t": "tf.contrib.kfac.loss_functions.DistributionNegativeLogProbLoss"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/kfac/loss_functions/LossFunction", "k": ["hessian_factor_inner_shape", "hessian_factor_inner_static_shape", "inputs", "__init__", "evaluate", "multiply_hessian", "multiply_hessian_factor", "multiply_hessian_factor_replicated_one_hot", "multiply_hessian_factor_transpose"], "r": "r1.4", "t": "tf.contrib.kfac.loss_functions.LossFunction"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/kfac/loss_functions/MultiBernoulliNegativeLogProbLoss", "k": ["fisher_factor_inner_shape", "fisher_factor_inner_static_shape", "hessian_factor_inner_shape", "hessian_factor_inner_static_shape", "inputs", "params", "__init__", "evaluate", "evaluate_on_sample", "multiply_fisher", "multiply_fisher_factor", "multiply_fisher_factor_replicated_one_hot", "multiply_fisher_factor_transpose", "multiply_hessian", "multiply_hessian_factor", "multiply_hessian_factor_replicated_one_hot", "multiply_hessian_factor_transpose", "sample"], "r": "r1.4", "t": "tf.contrib.kfac.loss_functions.MultiBernoulliNegativeLogProbLoss"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/kfac/loss_functions/NaturalParamsNegativeLogProbLoss", "k": ["fisher_factor_inner_shape", "fisher_factor_inner_static_shape", "hessian_factor_inner_shape", "hessian_factor_inner_static_shape", "inputs", "params", "__init__", "evaluate", "evaluate_on_sample", "multiply_fisher", "multiply_fisher_factor", "multiply_fisher_factor_replicated_one_hot", "multiply_fisher_factor_transpose", "multiply_hessian", "multiply_hessian_factor", "multiply_hessian_factor_replicated_one_hot", "multiply_hessian_factor_transpose", "sample"], "r": "r1.4", "t": "tf.contrib.kfac.loss_functions.NaturalParamsNegativeLogProbLoss"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/kfac/loss_functions/NegativeLogProbLoss", "k": ["fisher_factor_inner_shape", "fisher_factor_inner_static_shape", "hessian_factor_inner_shape", "hessian_factor_inner_static_shape", "inputs", "params", "__init__", "evaluate", "evaluate_on_sample", "multiply_fisher", "multiply_fisher_factor", "multiply_fisher_factor_replicated_one_hot", "multiply_fisher_factor_transpose", "multiply_hessian", "multiply_hessian_factor", "multiply_hessian_factor_replicated_one_hot", "multiply_hessian_factor_transpose", "sample"], "r": "r1.4", "t": "tf.contrib.kfac.loss_functions.NegativeLogProbLoss"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/kfac/loss_functions/NormalMeanNegativeLogProbLoss", "k": ["fisher_factor_inner_shape", "fisher_factor_inner_static_shape", "hessian_factor_inner_shape", "hessian_factor_inner_static_shape", "inputs", "params", "__init__", "evaluate", "evaluate_on_sample", "multiply_fisher", "multiply_fisher_factor", "multiply_fisher_factor_replicated_one_hot", "multiply_fisher_factor_transpose", "multiply_hessian", "multiply_hessian_factor", "multiply_hessian_factor_replicated_one_hot", "multiply_hessian_factor_transpose", "sample"], "r": "r1.4", "t": "tf.contrib.kfac.loss_functions.NormalMeanNegativeLogProbLoss"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/kfac/loss_functions/NormalMeanVarianceNegativeLogProbLoss", "k": ["fisher_factor_inner_shape", "fisher_factor_inner_static_shape", "hessian_factor_inner_shape", "hessian_factor_inner_static_shape", "inputs", "params", "__init__", "evaluate", "evaluate_on_sample", "multiply_fisher", "multiply_fisher_factor", "multiply_fisher_factor_replicated_one_hot", "multiply_fisher_factor_transpose", "multiply_hessian", "multiply_hessian_factor", "multiply_hessian_factor_replicated_one_hot", "multiply_hessian_factor_transpose", "sample"], "r": "r1.4", "t": "tf.contrib.kfac.loss_functions.NormalMeanVarianceNegativeLogProbLoss"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/kfac/loss_functions/insert_slice_in_zeros", "k": [], "r": "r1.4", "t": "tf.contrib.kfac.loss_functions.insert_slice_in_zeros"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/kfac/op_queue", "k": [], "r": "r1.4", "t": "tf.contrib.kfac.op_queue"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/kfac/op_queue/OpQueue", "k": ["ops", "__init__", "next_op"], "r": "r1.4", "t": "tf.contrib.kfac.op_queue.OpQueue"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/kfac/optimizer", "k": [], "r": "r1.4", "t": "tf.contrib.kfac.optimizer"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/kfac/optimizer/KfacOptimizer", "k": ["damping", "variables", "__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.4", "t": "tf.contrib.kfac.optimizer.KfacOptimizer"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/kfac/utils", "k": ["posdef_inv_funcs"], "r": "r1.4", "t": "tf.contrib.kfac.utils"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/kfac/utils/SequenceDict", "k": ["__getitem__", "__init__", "__setitem__", "items"], "r": "r1.4", "t": "tf.contrib.kfac.utils.SequenceDict"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/kfac/utils/SubGraph", "k": ["__init__", "filter_list", "is_member", "variable_uses"], "r": "r1.4", "t": "tf.contrib.kfac.utils.SubGraph"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/kfac/utils/column_to_tensors", "k": [], "r": "r1.4", "t": "tf.contrib.kfac.utils.column_to_tensors"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/kfac/utils/compute_pi", "k": [], "r": "r1.4", "t": "tf.contrib.kfac.utils.compute_pi"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/kfac/utils/fwd_gradients", "k": [], "r": "r1.4", "t": "tf.contrib.kfac.utils.fwd_gradients"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/kfac/utils/generate_random_signs", "k": [], "r": "r1.4", "t": "tf.contrib.kfac.utils.generate_random_signs"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/kfac/utils/kronecker_product", "k": [], "r": "r1.4", "t": "tf.contrib.kfac.utils.kronecker_product"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/kfac/utils/layer_params_to_mat2d", "k": [], "r": "r1.4", "t": "tf.contrib.kfac.utils.layer_params_to_mat2d"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/kfac/utils/mat2d_to_layer_params", "k": [], "r": "r1.4", "t": "tf.contrib.kfac.utils.mat2d_to_layer_params"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/kfac/utils/posdef_inv", "k": [], "r": "r1.4", "t": "tf.contrib.kfac.utils.posdef_inv"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/kfac/utils/posdef_inv_cholesky", "k": [], "r": "r1.4", "t": "tf.contrib.kfac.utils.posdef_inv_cholesky"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/kfac/utils/posdef_inv_matrix_inverse", "k": [], "r": "r1.4", "t": "tf.contrib.kfac.utils.posdef_inv_matrix_inverse"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/kfac/utils/setdefault", "k": [], "r": "r1.4", "t": "tf.contrib.kfac.utils.setdefault"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/kfac/utils/tensors_to_column", "k": [], "r": "r1.4", "t": "tf.contrib.kfac.utils.tensors_to_column"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/labeled_tensor", "k": [], "r": "r1.4", "t": "tf.contrib.labeled_tensor"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/layers", "k": ["OPTIMIZER_CLS_NAMES", "OPTIMIZER_SUMMARIES", "SPARSE_FEATURE_CROSS_DEFAULT_HASH_KEY", "elu", "legacy_linear", "legacy_relu", "linear", "relu", "relu6", "scale_gradient"], "r": "r1.4", "t": "tf.contrib.layers"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/layers/GDN", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "r1.4", "t": "tf.contrib.layers.GDN"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/layers/apply_regularization", "k": [], "r": "r1.4", "t": "tf.contrib.layers.apply_regularization"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/layers/avg_pool2d", "k": [], "r": "r1.4", "t": "tf.contrib.layers.avg_pool2d"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/layers/avg_pool3d", "k": [], "r": "r1.4", "t": "tf.contrib.layers.avg_pool3d"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/layers/batch_norm", "k": [], "r": "r1.4", "t": "tf.contrib.layers.batch_norm"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/layers/bias_add", "k": [], "r": "r1.4", "t": "tf.contrib.layers.bias_add"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/layers/bow_encoder", "k": [], "r": "r1.4", "t": "tf.contrib.layers.bow_encoder"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/layers/bucketized_column", "k": [], "r": "r1.4", "t": "tf.contrib.layers.bucketized_column"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/layers/check_feature_columns", "k": [], "r": "r1.4", "t": "tf.contrib.layers.check_feature_columns"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/layers/conv2d", "k": [], "r": "r1.4", "t": "tf.contrib.layers.conv2d"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/layers/conv2d_in_plane", "k": [], "r": "r1.4", "t": "tf.contrib.layers.conv2d_in_plane"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/layers/conv2d_transpose", "k": [], "r": "r1.4", "t": "tf.contrib.layers.conv2d_transpose"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/layers/conv3d_transpose", "k": [], "r": "r1.4", "t": "tf.contrib.layers.conv3d_transpose"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/layers/create_feature_spec_for_parsing", "k": [], "r": "r1.4", "t": "tf.contrib.layers.create_feature_spec_for_parsing"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/layers/crossed_column", "k": [], "r": "r1.4", "t": "tf.contrib.layers.crossed_column"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/layers/dropout", "k": [], "r": "r1.4", "t": "tf.contrib.layers.dropout"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/layers/embed_sequence", "k": [], "r": "r1.4", "t": "tf.contrib.layers.embed_sequence"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/layers/embedding_column", "k": [], "r": "r1.4", "t": "tf.contrib.layers.embedding_column"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/layers/embedding_lookup_unique", "k": [], "r": "r1.4", "t": "tf.contrib.layers.embedding_lookup_unique"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/layers/feature_column", "k": [], "r": "r1.4", "t": "tf.contrib.layers.feature_column"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/layers/flatten", "k": [], "r": "r1.4", "t": "tf.contrib.layers.flatten"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/layers/fully_connected", "k": [], "r": "r1.4", "t": "tf.contrib.layers.fully_connected"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/layers/gdn", "k": [], "r": "r1.4", "t": "tf.contrib.layers.gdn"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/layers/infer_real_valued_columns", "k": [], "r": "r1.4", "t": "tf.contrib.layers.infer_real_valued_columns"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/layers/input_from_feature_columns", "k": [], "r": "r1.4", "t": "tf.contrib.layers.input_from_feature_columns"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/layers/instance_norm", "k": [], "r": "r1.4", "t": "tf.contrib.layers.instance_norm"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/layers/joint_weighted_sum_from_feature_columns", "k": [], "r": "r1.4", "t": "tf.contrib.layers.joint_weighted_sum_from_feature_columns"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/layers/l1_l2_regularizer", "k": [], "r": "r1.4", "t": "tf.contrib.layers.l1_l2_regularizer"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/layers/l1_regularizer", "k": [], "r": "r1.4", "t": "tf.contrib.layers.l1_regularizer"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/layers/l2_regularizer", "k": [], "r": "r1.4", "t": "tf.contrib.layers.l2_regularizer"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/layers/layer_norm", "k": [], "r": "r1.4", "t": "tf.contrib.layers.layer_norm"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/layers/legacy_fully_connected", "k": [], "r": "r1.4", "t": "tf.contrib.layers.legacy_fully_connected"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/layers/make_place_holder_tensors_for_base_features", "k": [], "r": "r1.4", "t": "tf.contrib.layers.make_place_holder_tensors_for_base_features"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/layers/max_pool2d", "k": [], "r": "r1.4", "t": "tf.contrib.layers.max_pool2d"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/layers/max_pool3d", "k": [], "r": "r1.4", "t": "tf.contrib.layers.max_pool3d"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/layers/maxout", "k": [], "r": "r1.4", "t": "tf.contrib.layers.maxout"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/layers/multi_class_target", "k": [], "r": "r1.4", "t": "tf.contrib.layers.multi_class_target"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/layers/one_hot_column", "k": [], "r": "r1.4", "t": "tf.contrib.layers.one_hot_column"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/layers/one_hot_encoding", "k": [], "r": "r1.4", "t": "tf.contrib.layers.one_hot_encoding"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/layers/optimize_loss", "k": [], "r": "r1.4", "t": "tf.contrib.layers.optimize_loss"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/layers/parse_feature_columns_from_examples", "k": [], "r": "r1.4", "t": "tf.contrib.layers.parse_feature_columns_from_examples"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/layers/parse_feature_columns_from_sequence_examples", "k": [], "r": "r1.4", "t": "tf.contrib.layers.parse_feature_columns_from_sequence_examples"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/layers/real_valued_column", "k": [], "r": "r1.4", "t": "tf.contrib.layers.real_valued_column"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/layers/regression_target", "k": [], "r": "r1.4", "t": "tf.contrib.layers.regression_target"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/layers/repeat", "k": [], "r": "r1.4", "t": "tf.contrib.layers.repeat"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/layers/safe_embedding_lookup_sparse", "k": [], "r": "r1.4", "t": "tf.contrib.layers.safe_embedding_lookup_sparse"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/layers/scattered_embedding_column", "k": [], "r": "r1.4", "t": "tf.contrib.layers.scattered_embedding_column"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/layers/separable_conv2d", "k": [], "r": "r1.4", "t": "tf.contrib.layers.separable_conv2d"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/layers/sequence_input_from_feature_columns", "k": [], "r": "r1.4", "t": "tf.contrib.layers.sequence_input_from_feature_columns"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/layers/shared_embedding_columns", "k": [], "r": "r1.4", "t": "tf.contrib.layers.shared_embedding_columns"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/layers/softmax", "k": [], "r": "r1.4", "t": "tf.contrib.layers.softmax"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/layers/sparse_column_with_hash_bucket", "k": [], "r": "r1.4", "t": "tf.contrib.layers.sparse_column_with_hash_bucket"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/layers/sparse_column_with_integerized_feature", "k": [], "r": "r1.4", "t": "tf.contrib.layers.sparse_column_with_integerized_feature"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/layers/sparse_column_with_keys", "k": [], "r": "r1.4", "t": "tf.contrib.layers.sparse_column_with_keys"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/layers/sparse_column_with_vocabulary_file", "k": [], "r": "r1.4", "t": "tf.contrib.layers.sparse_column_with_vocabulary_file"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/layers/stack", "k": [], "r": "r1.4", "t": "tf.contrib.layers.stack"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/layers/sum_regularizer", "k": [], "r": "r1.4", "t": "tf.contrib.layers.sum_regularizer"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/layers/summaries", "k": [], "r": "r1.4", "t": "tf.contrib.layers.summaries"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/layers/summarize_activation", "k": [], "r": "r1.4", "t": "tf.contrib.layers.summarize_activation"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/layers/summarize_activations", "k": [], "r": "r1.4", "t": "tf.contrib.layers.summarize_activations"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/layers/summarize_collection", "k": [], "r": "r1.4", "t": "tf.contrib.layers.summarize_collection"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/layers/summarize_tensor", "k": [], "r": "r1.4", "t": "tf.contrib.layers.summarize_tensor"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/layers/summarize_tensors", "k": [], "r": "r1.4", "t": "tf.contrib.layers.summarize_tensors"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/layers/transform_features", "k": [], "r": "r1.4", "t": "tf.contrib.layers.transform_features"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/layers/unit_norm", "k": [], "r": "r1.4", "t": "tf.contrib.layers.unit_norm"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/layers/variance_scaling_initializer", "k": [], "r": "r1.4", "t": "tf.contrib.layers.variance_scaling_initializer"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/layers/weighted_sparse_column", "k": [], "r": "r1.4", "t": "tf.contrib.layers.weighted_sparse_column"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/layers/weighted_sum_from_feature_columns", "k": [], "r": "r1.4", "t": "tf.contrib.layers.weighted_sum_from_feature_columns"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/layers/xavier_initializer", "k": [], "r": "r1.4", "t": "tf.contrib.layers.xavier_initializer"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/learn", "k": [], "r": "r1.4", "t": "tf.contrib.learn"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/learn/BaseEstimator", "k": ["config", "model_dir", "__init__", "evaluate", "export", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "set_params"], "r": "r1.4", "t": "tf.contrib.learn.BaseEstimator"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/learn/DNNClassifier", "k": ["config", "model_dir", "__init__", "evaluate", "export", "export_savedmodel", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "predict_classes", "predict_proba", "set_params"], "r": "r1.4", "t": "tf.contrib.learn.DNNClassifier"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/learn/DNNEstimator", "k": ["config", "model_dir", "__init__", "evaluate", "export", "export_savedmodel", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "set_params"], "r": "r1.4", "t": "tf.contrib.learn.DNNEstimator"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/learn/DNNLinearCombinedClassifier", "k": ["config", "model_dir", "__init__", "evaluate", "export", "export_savedmodel", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "predict_classes", "predict_proba", "set_params"], "r": "r1.4", "t": "tf.contrib.learn.DNNLinearCombinedClassifier"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/learn/DNNLinearCombinedEstimator", "k": ["config", "model_dir", "__init__", "evaluate", "export", "export_savedmodel", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "set_params"], "r": "r1.4", "t": "tf.contrib.learn.DNNLinearCombinedEstimator"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/learn/DNNLinearCombinedRegressor", "k": ["config", "model_dir", "__init__", "evaluate", "export", "export_savedmodel", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "predict_scores", "set_params"], "r": "r1.4", "t": "tf.contrib.learn.DNNLinearCombinedRegressor"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/learn/DNNRegressor", "k": ["config", "model_dir", "__init__", "evaluate", "export", "export_savedmodel", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "predict_scores", "set_params"], "r": "r1.4", "t": "tf.contrib.learn.DNNRegressor"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/learn/DynamicRnnEstimator", "k": ["config", "model_dir", "__init__", "evaluate", "export", "export_savedmodel", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "set_params"], "r": "r1.4", "t": "tf.contrib.learn.DynamicRnnEstimator"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/learn/Estimator", "k": ["config", "model_dir", "__init__", "evaluate", "export", "export_savedmodel", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "set_params"], "r": "r1.4", "t": "tf.contrib.learn.Estimator"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/learn/Evaluable", "k": ["model_dir", "evaluate"], "r": "r1.4", "t": "tf.contrib.learn.Evaluable"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/learn/Experiment", "k": ["estimator", "eval_metrics", "eval_steps", "train_steps", "__init__", "continuous_eval", "continuous_eval_on_train_data", "continuous_train_and_eval", "evaluate", "extend_train_hooks", "local_run", "reset_export_strategies", "run_std_server", "test", "train", "train_and_evaluate"], "r": "r1.4", "t": "tf.contrib.learn.Experiment"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/learn/ExportStrategy", "k": ["export_fn", "name", "__new__", "export"], "r": "r1.4", "t": "tf.contrib.learn.ExportStrategy"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/learn/Head", "k": ["logits_dimension", "create_model_fn_ops"], "r": "r1.4", "t": "tf.contrib.learn.Head"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/learn/InputFnOps", "k": ["default_inputs", "features", "labels", "__new__"], "r": "r1.4", "t": "tf.contrib.learn.InputFnOps"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/learn/KMeansClustering", "k": ["config", "model_dir", "__init__", "clusters", "evaluate", "export", "export_savedmodel", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "predict_cluster_idx", "score", "set_params", "transform", "ALL_SCORES", "CLUSTERS", "CLUSTER_IDX", "COSINE_DISTANCE", "KMEANS_PLUS_PLUS_INIT", "LOSS_OP_NAME", "RANDOM_INIT", "SCORES", "SQUARED_EUCLIDEAN_DISTANCE"], "r": "r1.4", "t": "tf.contrib.learn.KMeansClustering"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/learn/LinearClassifier", "k": ["config", "model_dir", "__init__", "evaluate", "export", "export_savedmodel", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "predict_classes", "predict_proba", "set_params"], "r": "r1.4", "t": "tf.contrib.learn.LinearClassifier"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/learn/LinearEstimator", "k": ["config", "model_dir", "__init__", "evaluate", "export", "export_savedmodel", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "set_params"], "r": "r1.4", "t": "tf.contrib.learn.LinearEstimator"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/learn/LinearRegressor", "k": ["config", "model_dir", "__init__", "evaluate", "export", "export_savedmodel", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "predict_scores", "set_params"], "r": "r1.4", "t": "tf.contrib.learn.LinearRegressor"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/learn/LogisticRegressor", "k": [], "r": "r1.4", "t": "tf.contrib.learn.LogisticRegressor"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/learn/MetricSpec", "k": ["label_key", "metric_fn", "prediction_key", "weight_key", "__init__", "create_metric_ops"], "r": "r1.4", "t": "tf.contrib.learn.MetricSpec"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/learn/ModeKeys", "k": ["validate", "EVAL", "INFER", "TRAIN"], "r": "r1.4", "t": "tf.contrib.learn.ModeKeys"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/learn/ModelFnOps", "k": ["eval_metric_ops", "loss", "mode", "output_alternatives", "predictions", "scaffold", "train_op", "training_chief_hooks", "training_hooks", "__new__", "estimator_spec"], "r": "r1.4", "t": "tf.contrib.learn.ModelFnOps"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/learn/NanLossDuringTrainingError", "k": [], "r": "r1.4", "t": "tf.contrib.learn.NanLossDuringTrainingError"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/learn/NotFittedError", "k": [], "r": "r1.4", "t": "tf.contrib.learn.NotFittedError"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/learn/PredictionKey", "k": ["CLASSES", "GENERIC", "LOGISTIC", "LOGITS", "PROBABILITIES", "SCORES", "TOP_K"], "r": "r1.4", "t": "tf.contrib.learn.PredictionKey"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/learn/ProblemType", "k": ["CLASSIFICATION", "LINEAR_REGRESSION", "LOGISTIC_REGRESSION", "UNSPECIFIED"], "r": "r1.4", "t": "tf.contrib.learn.ProblemType"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/learn/RunConfig", "k": ["cluster_spec", "environment", "evaluation_master", "is_chief", "keep_checkpoint_every_n_hours", "keep_checkpoint_max", "log_step_count_steps", "master", "model_dir", "num_ps_replicas", "num_worker_replicas", "save_checkpoints_secs", "save_checkpoints_steps", "save_summary_steps", "service", "session_config", "task_id", "task_type", "tf_config", "tf_random_seed", "__init__", "get_task_id", "replace", "uid"], "r": "r1.4", "t": "tf.contrib.learn.RunConfig"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/learn/SKCompat", "k": ["__init__", "fit", "get_params", "predict", "score", "set_params"], "r": "r1.4", "t": "tf.contrib.learn.SKCompat"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/learn/SVM", "k": ["config", "model_dir", "__init__", "evaluate", "export", "export_savedmodel", "export_with_defaults", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "predict_classes", "predict_proba", "set_params"], "r": "r1.4", "t": "tf.contrib.learn.SVM"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/learn/TaskType", "k": ["MASTER", "PS", "WORKER"], "r": "r1.4", "t": "tf.contrib.learn.TaskType"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/learn/Trainable", "k": ["fit"], "r": "r1.4", "t": "tf.contrib.learn.Trainable"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/learn/binary_svm_head", "k": [], "r": "r1.4", "t": "tf.contrib.learn.binary_svm_head"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/learn/build_parsing_serving_input_fn", "k": [], "r": "r1.4", "t": "tf.contrib.learn.build_parsing_serving_input_fn"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/learn/datasets", "k": [], "r": "r1.4", "t": "tf.contrib.learn.datasets"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/learn/evaluate", "k": [], "r": "r1.4", "t": "tf.contrib.learn.evaluate"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/learn/extract_dask_data", "k": [], "r": "r1.4", "t": "tf.contrib.learn.extract_dask_data"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/learn/extract_dask_labels", "k": [], "r": "r1.4", "t": "tf.contrib.learn.extract_dask_labels"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/learn/extract_pandas_data", "k": [], "r": "r1.4", "t": "tf.contrib.learn.extract_pandas_data"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/learn/extract_pandas_labels", "k": [], "r": "r1.4", "t": "tf.contrib.learn.extract_pandas_labels"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/learn/extract_pandas_matrix", "k": [], "r": "r1.4", "t": "tf.contrib.learn.extract_pandas_matrix"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/learn/graph_actions", "k": [], "r": "r1.4", "t": "tf.contrib.learn.graph_actions"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/learn/head", "k": [], "r": "r1.4", "t": "tf.contrib.learn.head"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/learn/infer", "k": [], "r": "r1.4", "t": "tf.contrib.learn.infer"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/learn/infer_real_valued_columns_from_input", "k": [], "r": "r1.4", "t": "tf.contrib.learn.infer_real_valued_columns_from_input"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/learn/infer_real_valued_columns_from_input_fn", "k": [], "r": "r1.4", "t": "tf.contrib.learn.infer_real_valued_columns_from_input_fn"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/learn/io", "k": [], "r": "r1.4", "t": "tf.contrib.learn.io"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/learn/learn_runner", "k": [], "r": "r1.4", "t": "tf.contrib.learn.learn_runner"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/learn/learn_runner/run", "k": [], "r": "r1.4", "t": "tf.contrib.learn.learn_runner.run"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/learn/learn_runner/tune", "k": [], "r": "r1.4", "t": "tf.contrib.learn.learn_runner.tune"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/learn/make_export_strategy", "k": [], "r": "r1.4", "t": "tf.contrib.learn.make_export_strategy"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/learn/models", "k": [], "r": "r1.4", "t": "tf.contrib.learn.models"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/learn/monitors", "k": [], "r": "r1.4", "t": "tf.contrib.learn.monitors"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/learn/multi_class_head", "k": [], "r": "r1.4", "t": "tf.contrib.learn.multi_class_head"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/learn/multi_head", "k": [], "r": "r1.4", "t": "tf.contrib.learn.multi_head"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/learn/multi_label_head", "k": [], "r": "r1.4", "t": "tf.contrib.learn.multi_label_head"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/learn/no_op_train_fn", "k": [], "r": "r1.4", "t": "tf.contrib.learn.no_op_train_fn"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/learn/ops", "k": [], "r": "r1.4", "t": "tf.contrib.learn.ops"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/learn/poisson_regression_head", "k": [], "r": "r1.4", "t": "tf.contrib.learn.poisson_regression_head"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/learn/preprocessing", "k": [], "r": "r1.4", "t": "tf.contrib.learn.preprocessing"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/learn/read_batch_examples", "k": [], "r": "r1.4", "t": "tf.contrib.learn.read_batch_examples"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/learn/read_batch_features", "k": [], "r": "r1.4", "t": "tf.contrib.learn.read_batch_features"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/learn/read_batch_record_features", "k": [], "r": "r1.4", "t": "tf.contrib.learn.read_batch_record_features"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/learn/read_keyed_batch_examples", "k": [], "r": "r1.4", "t": "tf.contrib.learn.read_keyed_batch_examples"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/learn/read_keyed_batch_examples_shared_queue", "k": [], "r": "r1.4", "t": "tf.contrib.learn.read_keyed_batch_examples_shared_queue"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/learn/read_keyed_batch_features", "k": [], "r": "r1.4", "t": "tf.contrib.learn.read_keyed_batch_features"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/learn/read_keyed_batch_features_shared_queue", "k": [], "r": "r1.4", "t": "tf.contrib.learn.read_keyed_batch_features_shared_queue"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/learn/regression_head", "k": [], "r": "r1.4", "t": "tf.contrib.learn.regression_head"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/learn/run_feeds", "k": [], "r": "r1.4", "t": "tf.contrib.learn.run_feeds"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/learn/run_n", "k": [], "r": "r1.4", "t": "tf.contrib.learn.run_n"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/learn/train", "k": [], "r": "r1.4", "t": "tf.contrib.learn.train"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/learn/utils", "k": [], "r": "r1.4", "t": "tf.contrib.learn.utils"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/legacy_seq2seq", "k": [], "r": "r1.4", "t": "tf.contrib.legacy_seq2seq"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/legacy_seq2seq/attention_decoder", "k": [], "r": "r1.4", "t": "tf.contrib.legacy_seq2seq.attention_decoder"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/legacy_seq2seq/basic_rnn_seq2seq", "k": [], "r": "r1.4", "t": "tf.contrib.legacy_seq2seq.basic_rnn_seq2seq"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/legacy_seq2seq/embedding_attention_decoder", "k": [], "r": "r1.4", "t": "tf.contrib.legacy_seq2seq.embedding_attention_decoder"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/legacy_seq2seq/embedding_attention_seq2seq", "k": [], "r": "r1.4", "t": "tf.contrib.legacy_seq2seq.embedding_attention_seq2seq"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/legacy_seq2seq/embedding_rnn_decoder", "k": [], "r": "r1.4", "t": "tf.contrib.legacy_seq2seq.embedding_rnn_decoder"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/legacy_seq2seq/embedding_rnn_seq2seq", "k": [], "r": "r1.4", "t": "tf.contrib.legacy_seq2seq.embedding_rnn_seq2seq"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/legacy_seq2seq/embedding_tied_rnn_seq2seq", "k": [], "r": "r1.4", "t": "tf.contrib.legacy_seq2seq.embedding_tied_rnn_seq2seq"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/legacy_seq2seq/model_with_buckets", "k": [], "r": "r1.4", "t": "tf.contrib.legacy_seq2seq.model_with_buckets"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/legacy_seq2seq/one2many_rnn_seq2seq", "k": [], "r": "r1.4", "t": "tf.contrib.legacy_seq2seq.one2many_rnn_seq2seq"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/legacy_seq2seq/rnn_decoder", "k": [], "r": "r1.4", "t": "tf.contrib.legacy_seq2seq.rnn_decoder"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/legacy_seq2seq/sequence_loss", "k": [], "r": "r1.4", "t": "tf.contrib.legacy_seq2seq.sequence_loss"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/legacy_seq2seq/sequence_loss_by_example", "k": [], "r": "r1.4", "t": "tf.contrib.legacy_seq2seq.sequence_loss_by_example"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/legacy_seq2seq/tied_rnn_seq2seq", "k": [], "r": "r1.4", "t": "tf.contrib.legacy_seq2seq.tied_rnn_seq2seq"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/linalg", "k": [], "r": "r1.4", "t": "tf.contrib.linalg"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/linalg/LinearOperator", "k": ["batch_shape", "domain_dimension", "dtype", "graph_parents", "is_non_singular", "is_positive_definite", "is_self_adjoint", "is_square", "name", "range_dimension", "shape", "tensor_rank", "__init__", "add_to_tensor", "assert_non_singular", "assert_positive_definite", "assert_self_adjoint", "batch_shape_tensor", "determinant", "diag_part", "domain_dimension_tensor", "log_abs_determinant", "matmul", "matvec", "range_dimension_tensor", "shape_tensor", "solve", "solvevec", "tensor_rank_tensor", "to_dense", "trace"], "r": "r1.4", "t": "tf.contrib.linalg.LinearOperator"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/linalg/LinearOperatorComposition", "k": ["batch_shape", "domain_dimension", "dtype", "graph_parents", "is_non_singular", "is_positive_definite", "is_self_adjoint", "is_square", "name", "operators", "range_dimension", "shape", "tensor_rank", "__init__", "add_to_tensor", "assert_non_singular", "assert_positive_definite", "assert_self_adjoint", "batch_shape_tensor", "determinant", "diag_part", "domain_dimension_tensor", "log_abs_determinant", "matmul", "matvec", "range_dimension_tensor", "shape_tensor", "solve", "solvevec", "tensor_rank_tensor", "to_dense", "trace"], "r": "r1.4", "t": "tf.contrib.linalg.LinearOperatorComposition"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/linalg/LinearOperatorDiag", "k": ["batch_shape", "diag", "domain_dimension", "dtype", "graph_parents", "is_non_singular", "is_positive_definite", "is_self_adjoint", "is_square", "name", "range_dimension", "shape", "tensor_rank", "__init__", "add_to_tensor", "assert_non_singular", "assert_positive_definite", "assert_self_adjoint", "batch_shape_tensor", "determinant", "diag_part", "domain_dimension_tensor", "log_abs_determinant", "matmul", "matvec", "range_dimension_tensor", "shape_tensor", "solve", "solvevec", "tensor_rank_tensor", "to_dense", "trace"], "r": "r1.4", "t": "tf.contrib.linalg.LinearOperatorDiag"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/linalg/LinearOperatorFullMatrix", "k": ["batch_shape", "domain_dimension", "dtype", "graph_parents", "is_non_singular", "is_positive_definite", "is_self_adjoint", "is_square", "name", "range_dimension", "shape", "tensor_rank", "__init__", "add_to_tensor", "assert_non_singular", "assert_positive_definite", "assert_self_adjoint", "batch_shape_tensor", "determinant", "diag_part", "domain_dimension_tensor", "log_abs_determinant", "matmul", "matvec", "range_dimension_tensor", "shape_tensor", "solve", "solvevec", "tensor_rank_tensor", "to_dense", "trace"], "r": "r1.4", "t": "tf.contrib.linalg.LinearOperatorFullMatrix"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/linalg/LinearOperatorIdentity", "k": ["batch_shape", "domain_dimension", "dtype", "graph_parents", "is_non_singular", "is_positive_definite", "is_self_adjoint", "is_square", "name", "range_dimension", "shape", "tensor_rank", "__init__", "add_to_tensor", "assert_non_singular", "assert_positive_definite", "assert_self_adjoint", "batch_shape_tensor", "determinant", "diag_part", "domain_dimension_tensor", "log_abs_determinant", "matmul", "matvec", "range_dimension_tensor", "shape_tensor", "solve", "solvevec", "tensor_rank_tensor", "to_dense", "trace"], "r": "r1.4", "t": "tf.contrib.linalg.LinearOperatorIdentity"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/linalg/LinearOperatorScaledIdentity", "k": ["batch_shape", "domain_dimension", "dtype", "graph_parents", "is_non_singular", "is_positive_definite", "is_self_adjoint", "is_square", "multiplier", "name", "range_dimension", "shape", "tensor_rank", "__init__", "add_to_tensor", "assert_non_singular", "assert_positive_definite", "assert_self_adjoint", "batch_shape_tensor", "determinant", "diag_part", "domain_dimension_tensor", "log_abs_determinant", "matmul", "matvec", "range_dimension_tensor", "shape_tensor", "solve", "solvevec", "tensor_rank_tensor", "to_dense", "trace"], "r": "r1.4", "t": "tf.contrib.linalg.LinearOperatorScaledIdentity"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/linalg/LinearOperatorTriL", "k": ["batch_shape", "domain_dimension", "dtype", "graph_parents", "is_non_singular", "is_positive_definite", "is_self_adjoint", "is_square", "name", "range_dimension", "shape", "tensor_rank", "__init__", "add_to_tensor", "assert_non_singular", "assert_positive_definite", "assert_self_adjoint", "batch_shape_tensor", "determinant", "diag_part", "domain_dimension_tensor", "log_abs_determinant", "matmul", "matvec", "range_dimension_tensor", "shape_tensor", "solve", "solvevec", "tensor_rank_tensor", "to_dense", "trace"], "r": "r1.4", "t": "tf.contrib.linalg.LinearOperatorTriL"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/linalg/LinearOperatorUDVHUpdate", "k": ["base_operator", "batch_shape", "diag_operator", "diag_update", "domain_dimension", "dtype", "graph_parents", "is_diag_update_positive", "is_non_singular", "is_positive_definite", "is_self_adjoint", "is_square", "name", "range_dimension", "shape", "tensor_rank", "u", "v", "__init__", "add_to_tensor", "assert_non_singular", "assert_positive_definite", "assert_self_adjoint", "batch_shape_tensor", "determinant", "diag_part", "domain_dimension_tensor", "log_abs_determinant", "matmul", "matvec", "range_dimension_tensor", "shape_tensor", "solve", "solvevec", "tensor_rank_tensor", "to_dense", "trace"], "r": "r1.4", "t": "tf.contrib.linalg.LinearOperatorUDVHUpdate"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/linear_optimizer", "k": [], "r": "r1.4", "t": "tf.contrib.linear_optimizer"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/linear_optimizer/SDCAOptimizer", "k": ["example_id_column", "num_loss_partitions", "num_table_shards", "symmetric_l1_regularization", "symmetric_l2_regularization", "__init__", "get_name", "get_train_step"], "r": "r1.4", "t": "tf.contrib.linear_optimizer.SDCAOptimizer"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/linear_optimizer/SdcaModel", "k": ["__init__", "approximate_duality_gap", "minimize", "predictions", "regularized_loss", "unregularized_loss", "update_weights"], "r": "r1.4", "t": "tf.contrib.linear_optimizer.SdcaModel"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/linear_optimizer/SparseFeatureColumn", "k": ["example_indices", "feature_indices", "feature_values", "__init__"], "r": "r1.4", "t": "tf.contrib.linear_optimizer.SparseFeatureColumn"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/lookup", "k": ["FastHashSpec"], "r": "r1.4", "t": "tf.contrib.lookup"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/lookup/HashTable", "k": ["default_value", "init", "key_dtype", "name", "table_ref", "value_dtype", "__init__", "lookup", "size"], "r": "r1.4", "t": "tf.contrib.lookup.HashTable"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/lookup/HasherSpec", "k": ["hasher", "key", "__new__"], "r": "r1.4", "t": "tf.contrib.lookup.HasherSpec"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/lookup/IdTableWithHashBuckets", "k": ["init", "key_dtype", "name", "value_dtype", "__init__", "lookup", "size"], "r": "r1.4", "t": "tf.contrib.lookup.IdTableWithHashBuckets"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/lookup/InitializableLookupTableBase", "k": ["default_value", "init", "key_dtype", "name", "table_ref", "value_dtype", "__init__", "lookup", "size"], "r": "r1.4", "t": "tf.contrib.lookup.InitializableLookupTableBase"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/lookup/KeyValueTensorInitializer", "k": ["key_dtype", "value_dtype", "__init__", "initialize"], "r": "r1.4", "t": "tf.contrib.lookup.KeyValueTensorInitializer"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/lookup/LookupInterface", "k": ["init", "key_dtype", "name", "value_dtype", "__init__", "lookup", "size"], "r": "r1.4", "t": "tf.contrib.lookup.LookupInterface"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/lookup/MutableDenseHashTable", "k": ["init", "key_dtype", "name", "value_dtype", "__init__", "export", "insert", "lookup", "size"], "r": "r1.4", "t": "tf.contrib.lookup.MutableDenseHashTable"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/lookup/MutableHashTable", "k": ["init", "key_dtype", "name", "value_dtype", "__init__", "export", "insert", "lookup", "size"], "r": "r1.4", "t": "tf.contrib.lookup.MutableHashTable"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/lookup/StrongHashSpec", "k": ["hasher", "key", "__new__"], "r": "r1.4", "t": "tf.contrib.lookup.StrongHashSpec"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/lookup/TableInitializerBase", "k": ["key_dtype", "value_dtype", "__init__", "initialize"], "r": "r1.4", "t": "tf.contrib.lookup.TableInitializerBase"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/lookup/TextFileIdTableInitializer", "k": ["key_dtype", "value_dtype", "__init__", "initialize"], "r": "r1.4", "t": "tf.contrib.lookup.TextFileIdTableInitializer"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/lookup/TextFileIndex", "k": ["LINE_NUMBER", "WHOLE_LINE"], "r": "r1.4", "t": "tf.contrib.lookup.TextFileIndex"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/lookup/TextFileInitializer", "k": ["key_dtype", "value_dtype", "__init__", "initialize"], "r": "r1.4", "t": "tf.contrib.lookup.TextFileInitializer"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/lookup/TextFileStringTableInitializer", "k": ["key_dtype", "value_dtype", "__init__", "initialize"], "r": "r1.4", "t": "tf.contrib.lookup.TextFileStringTableInitializer"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/lookup/index_table_from_file", "k": [], "r": "r1.4", "t": "tf.contrib.lookup.index_table_from_file"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/lookup/index_table_from_tensor", "k": [], "r": "r1.4", "t": "tf.contrib.lookup.index_table_from_tensor"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/lookup/index_to_string", "k": [], "r": "r1.4", "t": "tf.contrib.lookup.index_to_string"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/lookup/index_to_string_table_from_file", "k": [], "r": "r1.4", "t": "tf.contrib.lookup.index_to_string_table_from_file"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/lookup/index_to_string_table_from_tensor", "k": [], "r": "r1.4", "t": "tf.contrib.lookup.index_to_string_table_from_tensor"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/lookup/string_to_index", "k": [], "r": "r1.4", "t": "tf.contrib.lookup.string_to_index"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/lookup/string_to_index_table_from_file", "k": [], "r": "r1.4", "t": "tf.contrib.lookup.string_to_index_table_from_file"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/lookup/string_to_index_table_from_tensor", "k": [], "r": "r1.4", "t": "tf.contrib.lookup.string_to_index_table_from_tensor"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/losses", "k": [], "r": "r1.4", "t": "tf.contrib.losses"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/losses/absolute_difference", "k": [], "r": "r1.4", "t": "tf.contrib.losses.absolute_difference"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/losses/add_loss", "k": [], "r": "r1.4", "t": "tf.contrib.losses.add_loss"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/losses/compute_weighted_loss", "k": [], "r": "r1.4", "t": "tf.contrib.losses.compute_weighted_loss"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/losses/cosine_distance", "k": [], "r": "r1.4", "t": "tf.contrib.losses.cosine_distance"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/losses/get_losses", "k": [], "r": "r1.4", "t": "tf.contrib.losses.get_losses"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/losses/get_regularization_losses", "k": [], "r": "r1.4", "t": "tf.contrib.losses.get_regularization_losses"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/losses/get_total_loss", "k": [], "r": "r1.4", "t": "tf.contrib.losses.get_total_loss"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/losses/hinge_loss", "k": [], "r": "r1.4", "t": "tf.contrib.losses.hinge_loss"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/losses/log_loss", "k": [], "r": "r1.4", "t": "tf.contrib.losses.log_loss"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/losses/mean_pairwise_squared_error", "k": [], "r": "r1.4", "t": "tf.contrib.losses.mean_pairwise_squared_error"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/losses/mean_squared_error", "k": [], "r": "r1.4", "t": "tf.contrib.losses.mean_squared_error"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/losses/sigmoid_cross_entropy", "k": [], "r": "r1.4", "t": "tf.contrib.losses.sigmoid_cross_entropy"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/losses/softmax_cross_entropy", "k": [], "r": "r1.4", "t": "tf.contrib.losses.softmax_cross_entropy"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/losses/sparse_softmax_cross_entropy", "k": [], "r": "r1.4", "t": "tf.contrib.losses.sparse_softmax_cross_entropy"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/memory_stats", "k": [], "r": "r1.4", "t": "tf.contrib.memory_stats"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/memory_stats/BytesInUse", "k": [], "r": "r1.4", "t": "tf.contrib.memory_stats.BytesInUse"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/memory_stats/BytesLimit", "k": [], "r": "r1.4", "t": "tf.contrib.memory_stats.BytesLimit"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/memory_stats/MaxBytesInUse", "k": [], "r": "r1.4", "t": "tf.contrib.memory_stats.MaxBytesInUse"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/meta_graph_transform", "k": [], "r": "r1.4", "t": "tf.contrib.meta_graph_transform"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/meta_graph_transform/meta_graph_transform", "k": ["absolute_import", "division", "print_function"], "r": "r1.4", "t": "tf.contrib.meta_graph_transform.meta_graph_transform"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/meta_graph_transform/meta_graph_transform/meta_graph_transform", "k": [], "r": "r1.4", "t": "tf.contrib.meta_graph_transform.meta_graph_transform.meta_graph_transform"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/metrics", "k": [], "r": "r1.4", "t": "tf.contrib.metrics"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/metrics/accuracy", "k": [], "r": "r1.4", "t": "tf.contrib.metrics.accuracy"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/metrics/aggregate_metric_map", "k": [], "r": "r1.4", "t": "tf.contrib.metrics.aggregate_metric_map"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/metrics/aggregate_metrics", "k": [], "r": "r1.4", "t": "tf.contrib.metrics.aggregate_metrics"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/metrics/auc_using_histogram", "k": [], "r": "r1.4", "t": "tf.contrib.metrics.auc_using_histogram"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/metrics/confusion_matrix", "k": [], "r": "r1.4", "t": "tf.contrib.metrics.confusion_matrix"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/metrics/sparse_recall_at_top_k", "k": [], "r": "r1.4", "t": "tf.contrib.metrics.sparse_recall_at_top_k"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/metrics/streaming_accuracy", "k": [], "r": "r1.4", "t": "tf.contrib.metrics.streaming_accuracy"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/metrics/streaming_auc", "k": [], "r": "r1.4", "t": "tf.contrib.metrics.streaming_auc"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/metrics/streaming_concat", "k": [], "r": "r1.4", "t": "tf.contrib.metrics.streaming_concat"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/metrics/streaming_covariance", "k": [], "r": "r1.4", "t": "tf.contrib.metrics.streaming_covariance"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/metrics/streaming_curve_points", "k": [], "r": "r1.4", "t": "tf.contrib.metrics.streaming_curve_points"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/metrics/streaming_false_negatives", "k": [], "r": "r1.4", "t": "tf.contrib.metrics.streaming_false_negatives"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/metrics/streaming_false_negatives_at_thresholds", "k": [], "r": "r1.4", "t": "tf.contrib.metrics.streaming_false_negatives_at_thresholds"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/metrics/streaming_false_positives", "k": [], "r": "r1.4", "t": "tf.contrib.metrics.streaming_false_positives"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/metrics/streaming_false_positives_at_thresholds", "k": [], "r": "r1.4", "t": "tf.contrib.metrics.streaming_false_positives_at_thresholds"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/metrics/streaming_mean", "k": [], "r": "r1.4", "t": "tf.contrib.metrics.streaming_mean"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/metrics/streaming_mean_absolute_error", "k": [], "r": "r1.4", "t": "tf.contrib.metrics.streaming_mean_absolute_error"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/metrics/streaming_mean_cosine_distance", "k": [], "r": "r1.4", "t": "tf.contrib.metrics.streaming_mean_cosine_distance"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/metrics/streaming_mean_iou", "k": [], "r": "r1.4", "t": "tf.contrib.metrics.streaming_mean_iou"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/metrics/streaming_mean_relative_error", "k": [], "r": "r1.4", "t": "tf.contrib.metrics.streaming_mean_relative_error"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/metrics/streaming_mean_squared_error", "k": [], "r": "r1.4", "t": "tf.contrib.metrics.streaming_mean_squared_error"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/metrics/streaming_mean_tensor", "k": [], "r": "r1.4", "t": "tf.contrib.metrics.streaming_mean_tensor"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/metrics/streaming_pearson_correlation", "k": [], "r": "r1.4", "t": "tf.contrib.metrics.streaming_pearson_correlation"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/metrics/streaming_percentage_less", "k": [], "r": "r1.4", "t": "tf.contrib.metrics.streaming_percentage_less"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/metrics/streaming_precision", "k": [], "r": "r1.4", "t": "tf.contrib.metrics.streaming_precision"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/metrics/streaming_precision_at_thresholds", "k": [], "r": "r1.4", "t": "tf.contrib.metrics.streaming_precision_at_thresholds"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/metrics/streaming_recall", "k": [], "r": "r1.4", "t": "tf.contrib.metrics.streaming_recall"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/metrics/streaming_recall_at_k", "k": [], "r": "r1.4", "t": "tf.contrib.metrics.streaming_recall_at_k"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/metrics/streaming_recall_at_thresholds", "k": [], "r": "r1.4", "t": "tf.contrib.metrics.streaming_recall_at_thresholds"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/metrics/streaming_root_mean_squared_error", "k": [], "r": "r1.4", "t": "tf.contrib.metrics.streaming_root_mean_squared_error"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/metrics/streaming_sensitivity_at_specificity", "k": [], "r": "r1.4", "t": "tf.contrib.metrics.streaming_sensitivity_at_specificity"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/metrics/streaming_sparse_average_precision_at_k", "k": [], "r": "r1.4", "t": "tf.contrib.metrics.streaming_sparse_average_precision_at_k"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/metrics/streaming_sparse_average_precision_at_top_k", "k": [], "r": "r1.4", "t": "tf.contrib.metrics.streaming_sparse_average_precision_at_top_k"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/metrics/streaming_sparse_precision_at_k", "k": [], "r": "r1.4", "t": "tf.contrib.metrics.streaming_sparse_precision_at_k"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/metrics/streaming_sparse_precision_at_top_k", "k": [], "r": "r1.4", "t": "tf.contrib.metrics.streaming_sparse_precision_at_top_k"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/metrics/streaming_sparse_recall_at_k", "k": [], "r": "r1.4", "t": "tf.contrib.metrics.streaming_sparse_recall_at_k"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/metrics/streaming_specificity_at_sensitivity", "k": [], "r": "r1.4", "t": "tf.contrib.metrics.streaming_specificity_at_sensitivity"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/metrics/streaming_true_negatives", "k": [], "r": "r1.4", "t": "tf.contrib.metrics.streaming_true_negatives"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/metrics/streaming_true_negatives_at_thresholds", "k": [], "r": "r1.4", "t": "tf.contrib.metrics.streaming_true_negatives_at_thresholds"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/metrics/streaming_true_positives", "k": [], "r": "r1.4", "t": "tf.contrib.metrics.streaming_true_positives"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/metrics/streaming_true_positives_at_thresholds", "k": [], "r": "r1.4", "t": "tf.contrib.metrics.streaming_true_positives_at_thresholds"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/nccl", "k": [], "r": "r1.4", "t": "tf.contrib.nccl"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/nccl/all_max", "k": [], "r": "r1.4", "t": "tf.contrib.nccl.all_max"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/nccl/all_min", "k": [], "r": "r1.4", "t": "tf.contrib.nccl.all_min"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/nccl/all_prod", "k": [], "r": "r1.4", "t": "tf.contrib.nccl.all_prod"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/nccl/all_sum", "k": [], "r": "r1.4", "t": "tf.contrib.nccl.all_sum"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/nccl/broadcast", "k": [], "r": "r1.4", "t": "tf.contrib.nccl.broadcast"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/nccl/reduce_sum", "k": [], "r": "r1.4", "t": "tf.contrib.nccl.reduce_sum"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/ndlstm", "k": [], "r": "r1.4", "t": "tf.contrib.ndlstm"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/nn", "k": [], "r": "r1.4", "t": "tf.contrib.nn"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/nn/alpha_dropout", "k": [], "r": "r1.4", "t": "tf.contrib.nn.alpha_dropout"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/nn/deprecated_flipped_sigmoid_cross_entropy_with_logits", "k": [], "r": "r1.4", "t": "tf.contrib.nn.deprecated_flipped_sigmoid_cross_entropy_with_logits"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/nn/deprecated_flipped_softmax_cross_entropy_with_logits", "k": [], "r": "r1.4", "t": "tf.contrib.nn.deprecated_flipped_softmax_cross_entropy_with_logits"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/nn/deprecated_flipped_sparse_softmax_cross_entropy_with_logits", "k": [], "r": "r1.4", "t": "tf.contrib.nn.deprecated_flipped_sparse_softmax_cross_entropy_with_logits"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/nn/rank_sampled_softmax_loss", "k": [], "r": "r1.4", "t": "tf.contrib.nn.rank_sampled_softmax_loss"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/opt", "k": [], "r": "r1.4", "t": "tf.contrib.opt"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/opt/DropStaleGradientOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.4", "t": "tf.contrib.opt.DropStaleGradientOptimizer"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/opt/ExternalOptimizerInterface", "k": ["__init__", "minimize"], "r": "r1.4", "t": "tf.contrib.opt.ExternalOptimizerInterface"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/opt/LazyAdamOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.4", "t": "tf.contrib.opt.LazyAdamOptimizer"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/opt/MovingAverageOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "swapping_saver", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.4", "t": "tf.contrib.opt.MovingAverageOptimizer"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/opt/NadamOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.4", "t": "tf.contrib.opt.NadamOptimizer"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/opt/ScipyOptimizerInterface", "k": ["__init__", "minimize"], "r": "r1.4", "t": "tf.contrib.opt.ScipyOptimizerInterface"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/opt/VariableClippingOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.4", "t": "tf.contrib.opt.VariableClippingOptimizer"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/predictor", "k": [], "r": "r1.4", "t": "tf.contrib.predictor"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/predictor/from_contrib_estimator", "k": [], "r": "r1.4", "t": "tf.contrib.predictor.from_contrib_estimator"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/predictor/from_estimator", "k": [], "r": "r1.4", "t": "tf.contrib.predictor.from_estimator"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/predictor/from_saved_model", "k": [], "r": "r1.4", "t": "tf.contrib.predictor.from_saved_model"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/quantization", "k": [], "r": "r1.4", "t": "tf.contrib.quantization"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/quantize", "k": [], "r": "r1.4", "t": "tf.contrib.quantize"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/quantize/create_eval_graph", "k": [], "r": "r1.4", "t": "tf.contrib.quantize.create_eval_graph"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/quantize/create_training_graph", "k": [], "r": "r1.4", "t": "tf.contrib.quantize.create_training_graph"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/reduce_slice_ops", "k": ["absolute_import", "division", "print_function"], "r": "r1.4", "t": "tf.contrib.reduce_slice_ops"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/reduce_slice_ops/python", "k": [], "r": "r1.4", "t": "tf.contrib.reduce_slice_ops.python"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/reduce_slice_ops/python/ops", "k": [], "r": "r1.4", "t": "tf.contrib.reduce_slice_ops.python.ops"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/remote_fused_graph", "k": [], "r": "r1.4", "t": "tf.contrib.remote_fused_graph"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/remote_fused_graph/remote_fused_graph_execute", "k": [], "r": "r1.4", "t": "tf.contrib.remote_fused_graph.remote_fused_graph_execute"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/resampler", "k": [], "r": "r1.4", "t": "tf.contrib.resampler"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/resampler/resampler", "k": [], "r": "r1.4", "t": "tf.contrib.resampler.resampler"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/rnn", "k": [], "r": "r1.4", "t": "tf.contrib.rnn"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/rnn/AttentionCellWrapper", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.4", "t": "tf.contrib.rnn.AttentionCellWrapper"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/rnn/BasicLSTMCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.4", "t": "tf.contrib.rnn.BasicLSTMCell"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/rnn/BasicRNNCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.4", "t": "tf.contrib.rnn.BasicRNNCell"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/rnn/BidirectionalGridLSTMCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "state_tuple_type", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.4", "t": "tf.contrib.rnn.BidirectionalGridLSTMCell"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/rnn/CompiledWrapper", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.4", "t": "tf.contrib.rnn.CompiledWrapper"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/rnn/Conv1DLSTMCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.4", "t": "tf.contrib.rnn.Conv1DLSTMCell"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/rnn/Conv2DLSTMCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.4", "t": "tf.contrib.rnn.Conv2DLSTMCell"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/rnn/Conv3DLSTMCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.4", "t": "tf.contrib.rnn.Conv3DLSTMCell"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/rnn/ConvLSTMCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.4", "t": "tf.contrib.rnn.ConvLSTMCell"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/rnn/CoupledInputForgetGateLSTMCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.4", "t": "tf.contrib.rnn.CoupledInputForgetGateLSTMCell"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/rnn/DeviceWrapper", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.4", "t": "tf.contrib.rnn.DeviceWrapper"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/rnn/DropoutWrapper", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.4", "t": "tf.contrib.rnn.DropoutWrapper"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/rnn/EmbeddingWrapper", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.4", "t": "tf.contrib.rnn.EmbeddingWrapper"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/rnn/FusedRNNCell", "k": ["__call__"], "r": "r1.4", "t": "tf.contrib.rnn.FusedRNNCell"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/rnn/FusedRNNCellAdaptor", "k": ["__call__", "__init__"], "r": "r1.4", "t": "tf.contrib.rnn.FusedRNNCellAdaptor"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/rnn/GLSTMCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.4", "t": "tf.contrib.rnn.GLSTMCell"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/rnn/GRUBlockCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.4", "t": "tf.contrib.rnn.GRUBlockCell"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/rnn/GRUBlockCellV2", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.4", "t": "tf.contrib.rnn.GRUBlockCellV2"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/rnn/GRUCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.4", "t": "tf.contrib.rnn.GRUCell"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/rnn/GridLSTMCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "state_tuple_type", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.4", "t": "tf.contrib.rnn.GridLSTMCell"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/rnn/HighwayWrapper", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.4", "t": "tf.contrib.rnn.HighwayWrapper"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/rnn/InputProjectionWrapper", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.4", "t": "tf.contrib.rnn.InputProjectionWrapper"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/rnn/IntersectionRNNCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.4", "t": "tf.contrib.rnn.IntersectionRNNCell"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/rnn/LSTMBlockCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.4", "t": "tf.contrib.rnn.LSTMBlockCell"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/rnn/LSTMBlockFusedCell", "k": ["num_units", "__call__", "__init__"], "r": "r1.4", "t": "tf.contrib.rnn.LSTMBlockFusedCell"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/rnn/LSTMBlockWrapper", "k": ["num_units", "__call__"], "r": "r1.4", "t": "tf.contrib.rnn.LSTMBlockWrapper"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/rnn/LSTMCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.4", "t": "tf.contrib.rnn.LSTMCell"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/rnn/LSTMStateTuple", "k": ["c", "dtype", "h", "__new__"], "r": "r1.4", "t": "tf.contrib.rnn.LSTMStateTuple"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/rnn/LayerNormBasicLSTMCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.4", "t": "tf.contrib.rnn.LayerNormBasicLSTMCell"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/rnn/MultiRNNCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.4", "t": "tf.contrib.rnn.MultiRNNCell"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/rnn/NASCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.4", "t": "tf.contrib.rnn.NASCell"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/rnn/OutputProjectionWrapper", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.4", "t": "tf.contrib.rnn.OutputProjectionWrapper"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/rnn/PhasedLSTMCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.4", "t": "tf.contrib.rnn.PhasedLSTMCell"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/rnn/RNNCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.4", "t": "tf.contrib.rnn.RNNCell"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/rnn/ResidualWrapper", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.4", "t": "tf.contrib.rnn.ResidualWrapper"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/rnn/TimeFreqLSTMCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.4", "t": "tf.contrib.rnn.TimeFreqLSTMCell"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/rnn/TimeReversedFusedRNN", "k": ["__call__", "__init__"], "r": "r1.4", "t": "tf.contrib.rnn.TimeReversedFusedRNN"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/rnn/UGRNNCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.4", "t": "tf.contrib.rnn.UGRNNCell"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/rnn/stack_bidirectional_dynamic_rnn", "k": [], "r": "r1.4", "t": "tf.contrib.rnn.stack_bidirectional_dynamic_rnn"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/rnn/stack_bidirectional_rnn", "k": [], "r": "r1.4", "t": "tf.contrib.rnn.stack_bidirectional_rnn"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/saved_model", "k": [], "r": "r1.4", "t": "tf.contrib.saved_model"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/saved_model/get_signature_def_by_key", "k": [], "r": "r1.4", "t": "tf.contrib.saved_model.get_signature_def_by_key"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/seq2seq", "k": [], "r": "r1.4", "t": "tf.contrib.seq2seq"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/seq2seq/AttentionMechanism", "k": [], "r": "r1.4", "t": "tf.contrib.seq2seq.AttentionMechanism"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/seq2seq/AttentionWrapper", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.4", "t": "tf.contrib.seq2seq.AttentionWrapper"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/seq2seq/AttentionWrapperState", "k": ["alignment_history", "alignments", "attention", "cell_state", "time", "__new__", "clone"], "r": "r1.4", "t": "tf.contrib.seq2seq.AttentionWrapperState"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/seq2seq/BahdanauAttention", "k": ["alignments_size", "batch_size", "keys", "memory_layer", "query_layer", "values", "__call__", "__init__", "initial_alignments"], "r": "r1.4", "t": "tf.contrib.seq2seq.BahdanauAttention"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/seq2seq/BahdanauMonotonicAttention", "k": ["alignments_size", "batch_size", "keys", "memory_layer", "query_layer", "values", "__call__", "__init__", "initial_alignments"], "r": "r1.4", "t": "tf.contrib.seq2seq.BahdanauMonotonicAttention"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/seq2seq/BasicDecoder", "k": ["batch_size", "output_dtype", "output_size", "__init__", "finalize", "initialize", "step"], "r": "r1.4", "t": "tf.contrib.seq2seq.BasicDecoder"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/seq2seq/BasicDecoderOutput", "k": ["rnn_output", "sample_id", "__new__"], "r": "r1.4", "t": "tf.contrib.seq2seq.BasicDecoderOutput"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/seq2seq/BeamSearchDecoder", "k": ["batch_size", "output_dtype", "output_size", "__init__", "finalize", "initialize", "step"], "r": "r1.4", "t": "tf.contrib.seq2seq.BeamSearchDecoder"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/seq2seq/BeamSearchDecoderOutput", "k": ["parent_ids", "predicted_ids", "scores", "__new__"], "r": "r1.4", "t": "tf.contrib.seq2seq.BeamSearchDecoderOutput"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/seq2seq/BeamSearchDecoderState", "k": ["cell_state", "finished", "lengths", "log_probs", "__new__"], "r": "r1.4", "t": "tf.contrib.seq2seq.BeamSearchDecoderState"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/seq2seq/CustomHelper", "k": ["batch_size", "sample_ids_dtype", "sample_ids_shape", "__init__", "initialize", "next_inputs", "sample"], "r": "r1.4", "t": "tf.contrib.seq2seq.CustomHelper"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/seq2seq/Decoder", "k": ["batch_size", "output_dtype", "output_size", "finalize", "initialize", "step"], "r": "r1.4", "t": "tf.contrib.seq2seq.Decoder"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/seq2seq/FinalBeamSearchDecoderOutput", "k": ["beam_search_decoder_output", "predicted_ids", "__new__"], "r": "r1.4", "t": "tf.contrib.seq2seq.FinalBeamSearchDecoderOutput"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/seq2seq/GreedyEmbeddingHelper", "k": ["batch_size", "sample_ids_dtype", "sample_ids_shape", "__init__", "initialize", "next_inputs", "sample"], "r": "r1.4", "t": "tf.contrib.seq2seq.GreedyEmbeddingHelper"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/seq2seq/Helper", "k": ["batch_size", "sample_ids_dtype", "sample_ids_shape", "initialize", "next_inputs", "sample"], "r": "r1.4", "t": "tf.contrib.seq2seq.Helper"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/seq2seq/InferenceHelper", "k": ["batch_size", "sample_ids_dtype", "sample_ids_shape", "__init__", "initialize", "next_inputs", "sample"], "r": "r1.4", "t": "tf.contrib.seq2seq.InferenceHelper"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/seq2seq/LuongAttention", "k": ["alignments_size", "batch_size", "keys", "memory_layer", "query_layer", "values", "__call__", "__init__", "initial_alignments"], "r": "r1.4", "t": "tf.contrib.seq2seq.LuongAttention"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/seq2seq/LuongMonotonicAttention", "k": ["alignments_size", "batch_size", "keys", "memory_layer", "query_layer", "values", "__call__", "__init__", "initial_alignments"], "r": "r1.4", "t": "tf.contrib.seq2seq.LuongMonotonicAttention"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/seq2seq/SampleEmbeddingHelper", "k": ["batch_size", "sample_ids_dtype", "sample_ids_shape", "__init__", "initialize", "next_inputs", "sample"], "r": "r1.4", "t": "tf.contrib.seq2seq.SampleEmbeddingHelper"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/seq2seq/ScheduledEmbeddingTrainingHelper", "k": ["batch_size", "sample_ids_dtype", "sample_ids_shape", "__init__", "initialize", "next_inputs", "sample"], "r": "r1.4", "t": "tf.contrib.seq2seq.ScheduledEmbeddingTrainingHelper"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/seq2seq/ScheduledOutputTrainingHelper", "k": ["batch_size", "sample_ids_dtype", "sample_ids_shape", "__init__", "initialize", "next_inputs", "sample"], "r": "r1.4", "t": "tf.contrib.seq2seq.ScheduledOutputTrainingHelper"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/seq2seq/TrainingHelper", "k": ["batch_size", "sample_ids_dtype", "sample_ids_shape", "__init__", "initialize", "next_inputs", "sample"], "r": "r1.4", "t": "tf.contrib.seq2seq.TrainingHelper"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/seq2seq/dynamic_decode", "k": [], "r": "r1.4", "t": "tf.contrib.seq2seq.dynamic_decode"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/seq2seq/gather_tree", "k": [], "r": "r1.4", "t": "tf.contrib.seq2seq.gather_tree"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/seq2seq/hardmax", "k": [], "r": "r1.4", "t": "tf.contrib.seq2seq.hardmax"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/seq2seq/monotonic_attention", "k": [], "r": "r1.4", "t": "tf.contrib.seq2seq.monotonic_attention"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/seq2seq/safe_cumprod", "k": [], "r": "r1.4", "t": "tf.contrib.seq2seq.safe_cumprod"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/seq2seq/sequence_loss", "k": [], "r": "r1.4", "t": "tf.contrib.seq2seq.sequence_loss"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/seq2seq/tile_batch", "k": [], "r": "r1.4", "t": "tf.contrib.seq2seq.tile_batch"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/session_bundle", "k": [], "r": "r1.4", "t": "tf.contrib.session_bundle"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/signal", "k": [], "r": "r1.4", "t": "tf.contrib.signal"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/signal/frame", "k": [], "r": "r1.4", "t": "tf.contrib.signal.frame"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/signal/hamming_window", "k": [], "r": "r1.4", "t": "tf.contrib.signal.hamming_window"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/signal/hann_window", "k": [], "r": "r1.4", "t": "tf.contrib.signal.hann_window"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/signal/inverse_stft", "k": [], "r": "r1.4", "t": "tf.contrib.signal.inverse_stft"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/signal/linear_to_mel_weight_matrix", "k": [], "r": "r1.4", "t": "tf.contrib.signal.linear_to_mel_weight_matrix"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/signal/mfccs_from_log_mel_spectrograms", "k": [], "r": "r1.4", "t": "tf.contrib.signal.mfccs_from_log_mel_spectrograms"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/signal/overlap_and_add", "k": [], "r": "r1.4", "t": "tf.contrib.signal.overlap_and_add"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/signal/stft", "k": [], "r": "r1.4", "t": "tf.contrib.signal.stft"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/slim", "k": [], "r": "r1.4", "t": "tf.contrib.slim"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/solvers", "k": [], "r": "r1.4", "t": "tf.contrib.solvers"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/sparsemax", "k": [], "r": "r1.4", "t": "tf.contrib.sparsemax"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/sparsemax/sparsemax", "k": [], "r": "r1.4", "t": "tf.contrib.sparsemax.sparsemax"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/sparsemax/sparsemax_loss", "k": [], "r": "r1.4", "t": "tf.contrib.sparsemax.sparsemax_loss"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/specs", "k": [], "r": "r1.4", "t": "tf.contrib.specs"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/staging", "k": ["absolute_import", "division", "print_function"], "r": "r1.4", "t": "tf.contrib.staging"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/staging/StagingArea", "k": ["capacity", "dtypes", "memory_limit", "name", "names", "shapes", "__init__", "clear", "get", "peek", "put", "size"], "r": "r1.4", "t": "tf.contrib.staging.StagingArea"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/stat_summarizer", "k": ["DeleteStatSummarizer", "NewStatSummarizer"], "r": "r1.4", "t": "tf.contrib.stat_summarizer"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/stat_summarizer/StatSummarizer", "k": ["GetOutputString", "PrintStepStats", "ProcessStepStats", "ProcessStepStatsStr", "__getattr__", "__init__", "__setattr__", "__swig_getmethods__", "__swig_setmethods__"], "r": "r1.4", "t": "tf.contrib.stat_summarizer.StatSummarizer"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/stateless", "k": [], "r": "r1.4", "t": "tf.contrib.stateless"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/stateless/stateless_random_normal", "k": [], "r": "r1.4", "t": "tf.contrib.stateless.stateless_random_normal"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/stateless/stateless_random_uniform", "k": [], "r": "r1.4", "t": "tf.contrib.stateless.stateless_random_uniform"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/stateless/stateless_truncated_normal", "k": [], "r": "r1.4", "t": "tf.contrib.stateless.stateless_truncated_normal"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/tensor_forest", "k": [], "r": "r1.4", "t": "tf.contrib.tensor_forest"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/tensorboard", "k": [], "r": "r1.4", "t": "tf.contrib.tensorboard"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/testing", "k": [], "r": "r1.4", "t": "tf.contrib.testing"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/tfprof", "k": [], "r": "r1.4", "t": "tf.contrib.tfprof"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/timeseries", "k": [], "r": "r1.4", "t": "tf.contrib.timeseries"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/timeseries/ARModel", "k": ["__init__", "define_loss", "generate", "get_batch_loss", "get_start_state", "initialize_graph", "loss_op", "predict", "prediction_ops", "random_model_parameters", "NORMAL_LIKELIHOOD_LOSS", "SQUARED_LOSS"], "r": "r1.4", "t": "tf.contrib.timeseries.ARModel"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/timeseries/ARRegressor", "k": ["config", "model_dir", "model_fn", "params", "__init__", "build_raw_serving_input_receiver_fn", "evaluate", "export_savedmodel", "get_variable_names", "get_variable_value", "latest_checkpoint", "predict", "train"], "r": "r1.4", "t": "tf.contrib.timeseries.ARRegressor"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/timeseries/CSVReader", "k": ["__init__", "check_dataset_size", "read", "read_full"], "r": "r1.4", "t": "tf.contrib.timeseries.CSVReader"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/timeseries/FilteringResults", "k": ["STATE_PREFIX", "STATE_TUPLE", "TIMES"], "r": "r1.4", "t": "tf.contrib.timeseries.FilteringResults"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/timeseries/NumpyReader", "k": ["__init__", "check_dataset_size", "read", "read_full"], "r": "r1.4", "t": "tf.contrib.timeseries.NumpyReader"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/timeseries/RandomWindowInputFn", "k": ["__call__", "__init__", "create_batch"], "r": "r1.4", "t": "tf.contrib.timeseries.RandomWindowInputFn"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/timeseries/StructuralEnsembleRegressor", "k": ["config", "model_dir", "model_fn", "params", "__init__", "build_raw_serving_input_receiver_fn", "evaluate", "export_savedmodel", "get_variable_names", "get_variable_value", "latest_checkpoint", "predict", "train"], "r": "r1.4", "t": "tf.contrib.timeseries.StructuralEnsembleRegressor"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/timeseries/TrainEvalFeatures", "k": ["TIMES", "VALUES"], "r": "r1.4", "t": "tf.contrib.timeseries.TrainEvalFeatures"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/timeseries/WholeDatasetInputFn", "k": ["__call__", "__init__", "create_batch"], "r": "r1.4", "t": "tf.contrib.timeseries.WholeDatasetInputFn"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/timeseries/predict_continuation_input_fn", "k": [], "r": "r1.4", "t": "tf.contrib.timeseries.predict_continuation_input_fn"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/timeseries/saved_model_utils", "k": [], "r": "r1.4", "t": "tf.contrib.timeseries.saved_model_utils"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/timeseries/saved_model_utils/filter_continuation", "k": [], "r": "r1.4", "t": "tf.contrib.timeseries.saved_model_utils.filter_continuation"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/timeseries/saved_model_utils/predict_continuation", "k": [], "r": "r1.4", "t": "tf.contrib.timeseries.saved_model_utils.predict_continuation"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/tpu", "k": [], "r": "r1.4", "t": "tf.contrib.tpu"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/tpu/CrossShardOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.4", "t": "tf.contrib.tpu.CrossShardOptimizer"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/tpu/InfeedQueue", "k": ["number_of_shards", "number_of_tuple_elements", "shard_dimensions", "sharding_policies", "tuple_shapes", "tuple_types", "__init__", "freeze", "generate_dequeue_op", "generate_enqueue_ops", "set_configuration_from_input_tensors", "set_configuration_from_sharded_input_tensors", "set_number_of_shards", "set_shard_dimensions", "set_tuple_shapes", "set_tuple_types", "split_inputs_and_generate_enqueue_ops"], "r": "r1.4", "t": "tf.contrib.tpu.InfeedQueue"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/tpu/RunConfig", "k": ["cluster_spec", "evaluation_master", "is_chief", "keep_checkpoint_every_n_hours", "keep_checkpoint_max", "log_step_count_steps", "master", "model_dir", "num_ps_replicas", "num_worker_replicas", "save_checkpoints_secs", "save_checkpoints_steps", "save_summary_steps", "service", "session_config", "task_id", "task_type", "tf_random_seed", "tpu_config", "__init__", "replace"], "r": "r1.4", "t": "tf.contrib.tpu.RunConfig"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/tpu/TPUConfig", "k": ["iterations_per_loop", "num_shards", "per_host_input_for_training", "__new__"], "r": "r1.4", "t": "tf.contrib.tpu.TPUConfig"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/tpu/TPUEstimator", "k": ["config", "model_dir", "model_fn", "params", "__init__", "evaluate", "export_savedmodel", "get_variable_names", "get_variable_value", "latest_checkpoint", "predict", "train"], "r": "r1.4", "t": "tf.contrib.tpu.TPUEstimator"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/tpu/TPUEstimatorSpec", "k": ["eval_metrics", "export_outputs", "loss", "mode", "predictions", "train_op", "__new__", "as_estimator_spec"], "r": "r1.4", "t": "tf.contrib.tpu.TPUEstimatorSpec"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/tpu/batch_parallel", "k": [], "r": "r1.4", "t": "tf.contrib.tpu.batch_parallel"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/tpu/core", "k": [], "r": "r1.4", "t": "tf.contrib.tpu.core"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/tpu/cross_replica_sum", "k": [], "r": "r1.4", "t": "tf.contrib.tpu.cross_replica_sum"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/tpu/infeed_dequeue", "k": [], "r": "r1.4", "t": "tf.contrib.tpu.infeed_dequeue"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/tpu/infeed_dequeue_tuple", "k": [], "r": "r1.4", "t": "tf.contrib.tpu.infeed_dequeue_tuple"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/tpu/initialize_system", "k": [], "r": "r1.4", "t": "tf.contrib.tpu.initialize_system"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/tpu/outfeed_enqueue", "k": [], "r": "r1.4", "t": "tf.contrib.tpu.outfeed_enqueue"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/tpu/outfeed_enqueue_tuple", "k": [], "r": "r1.4", "t": "tf.contrib.tpu.outfeed_enqueue_tuple"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/tpu/outside_all_rewrites", "k": [], "r": "r1.4", "t": "tf.contrib.tpu.outside_all_rewrites"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/tpu/profiler", "k": [], "r": "r1.4", "t": "tf.contrib.tpu.profiler"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/tpu/profiler/Device", "k": ["ResourcesEntry"], "r": "r1.4", "t": "tf.contrib.tpu.profiler.Device"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/tpu/profiler/Device/ResourcesEntry", "k": [], "r": "r1.4", "t": "tf.contrib.tpu.profiler.Device.ResourcesEntry"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/tpu/profiler/Resource", "k": [], "r": "r1.4", "t": "tf.contrib.tpu.profiler.Resource"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/tpu/profiler/Trace", "k": ["DevicesEntry"], "r": "r1.4", "t": "tf.contrib.tpu.profiler.Trace"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/tpu/profiler/Trace/DevicesEntry", "k": [], "r": "r1.4", "t": "tf.contrib.tpu.profiler.Trace.DevicesEntry"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/tpu/profiler/TraceEvent", "k": [], "r": "r1.4", "t": "tf.contrib.tpu.profiler.TraceEvent"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/tpu/repeat", "k": [], "r": "r1.4", "t": "tf.contrib.tpu.repeat"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/tpu/replicate", "k": [], "r": "r1.4", "t": "tf.contrib.tpu.replicate"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/tpu/rewrite", "k": [], "r": "r1.4", "t": "tf.contrib.tpu.rewrite"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/tpu/shard", "k": [], "r": "r1.4", "t": "tf.contrib.tpu.shard"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/tpu/shutdown_system", "k": [], "r": "r1.4", "t": "tf.contrib.tpu.shutdown_system"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/tpu/while_loop", "k": [], "r": "r1.4", "t": "tf.contrib.tpu.while_loop"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/training", "k": [], "r": "r1.4", "t": "tf.contrib.training"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/training/FeedingQueueRunner", "k": ["cancel_op", "close_op", "enqueue_ops", "exceptions_raised", "name", "queue", "queue_closed_exception_types", "__init__", "create_threads", "from_proto", "to_proto"], "r": "r1.4", "t": "tf.contrib.training.FeedingQueueRunner"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/training/GreedyLoadBalancingStrategy", "k": ["__call__", "__init__"], "r": "r1.4", "t": "tf.contrib.training.GreedyLoadBalancingStrategy"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/training/HParams", "k": ["__init__", "add_hparam", "from_proto", "get_model_structure", "parse", "parse_json", "set_from_map", "set_hparam", "set_model_structure", "to_json", "to_proto", "values"], "r": "r1.4", "t": "tf.contrib.training.HParams"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/training/NextQueuedSequenceBatch", "k": ["batch_size", "context", "insertion_index", "key", "length", "next_key", "sequence", "sequence_count", "sequences", "total_length", "__init__", "save_state", "state"], "r": "r1.4", "t": "tf.contrib.training.NextQueuedSequenceBatch"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/training/RandomStrategy", "k": ["__call__", "__init__"], "r": "r1.4", "t": "tf.contrib.training.RandomStrategy"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/training/SequenceQueueingStateSaver", "k": ["barrier", "batch_size", "name", "next_batch", "num_unroll", "prefetch_op", "__init__", "close"], "r": "r1.4", "t": "tf.contrib.training.SequenceQueueingStateSaver"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/training/StopAfterNEvalsHook", "k": ["__init__", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "r1.4", "t": "tf.contrib.training.StopAfterNEvalsHook"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/training/SummaryAtEndHook", "k": ["__init__", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "r1.4", "t": "tf.contrib.training.SummaryAtEndHook"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/training/add_gradients_summaries", "k": [], "r": "r1.4", "t": "tf.contrib.training.add_gradients_summaries"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/training/batch_sequences_with_states", "k": [], "r": "r1.4", "t": "tf.contrib.training.batch_sequences_with_states"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/training/bucket", "k": [], "r": "r1.4", "t": "tf.contrib.training.bucket"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/training/bucket_by_sequence_length", "k": [], "r": "r1.4", "t": "tf.contrib.training.bucket_by_sequence_length"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/training/byte_size_load_fn", "k": [], "r": "r1.4", "t": "tf.contrib.training.byte_size_load_fn"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/training/checkpoints_iterator", "k": [], "r": "r1.4", "t": "tf.contrib.training.checkpoints_iterator"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/training/clip_gradient_norms", "k": [], "r": "r1.4", "t": "tf.contrib.training.clip_gradient_norms"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/training/clip_gradient_norms_fn", "k": [], "r": "r1.4", "t": "tf.contrib.training.clip_gradient_norms_fn"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/training/create_train_op", "k": [], "r": "r1.4", "t": "tf.contrib.training.create_train_op"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/training/evaluate_once", "k": [], "r": "r1.4", "t": "tf.contrib.training.evaluate_once"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/training/evaluate_repeatedly", "k": [], "r": "r1.4", "t": "tf.contrib.training.evaluate_repeatedly"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/training/get_or_create_eval_step", "k": [], "r": "r1.4", "t": "tf.contrib.training.get_or_create_eval_step"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/training/multiply_gradients", "k": [], "r": "r1.4", "t": "tf.contrib.training.multiply_gradients"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/training/parse_values", "k": [], "r": "r1.4", "t": "tf.contrib.training.parse_values"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/training/rejection_sample", "k": [], "r": "r1.4", "t": "tf.contrib.training.rejection_sample"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/training/resample_at_rate", "k": [], "r": "r1.4", "t": "tf.contrib.training.resample_at_rate"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/training/stratified_sample", "k": [], "r": "r1.4", "t": "tf.contrib.training.stratified_sample"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/training/train", "k": [], "r": "r1.4", "t": "tf.contrib.training.train"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/training/wait_for_new_checkpoint", "k": [], "r": "r1.4", "t": "tf.contrib.training.wait_for_new_checkpoint"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/training/weighted_resample", "k": [], "r": "r1.4", "t": "tf.contrib.training.weighted_resample"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/util", "k": [], "r": "r1.4", "t": "tf.contrib.util"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/util/constant_value", "k": [], "r": "r1.4", "t": "tf.contrib.util.constant_value"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/util/loader", "k": [], "r": "r1.4", "t": "tf.contrib.util.loader"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/util/ops_used_by_graph_def", "k": [], "r": "r1.4", "t": "tf.contrib.util.ops_used_by_graph_def"}, {"p": "/versions/r1.4/api_docs/python/tf/contrib/util/stripped_op_list_for_graph", "k": [], "r": "r1.4", "t": "tf.contrib.util.stripped_op_list_for_graph"}, {"p": "/versions/r1.4/api_docs/python/tf/control_dependencies", "k": [], "r": "r1.4", "t": "tf.control_dependencies"}, {"p": "/versions/r1.4/api_docs/python/tf/convert_to_tensor", "k": [], "r": "r1.4", "t": "tf.convert_to_tensor"}, {"p": "/versions/r1.4/api_docs/python/tf/convert_to_tensor_or_indexed_slices", "k": [], "r": "r1.4", "t": "tf.convert_to_tensor_or_indexed_slices"}, {"p": "/versions/r1.4/api_docs/python/tf/convert_to_tensor_or_sparse_tensor", "k": [], "r": "r1.4", "t": "tf.convert_to_tensor_or_sparse_tensor"}, {"p": "/versions/r1.4/api_docs/python/tf/cos", "k": [], "r": "r1.4", "t": "tf.cos"}, {"p": "/versions/r1.4/api_docs/python/tf/cosh", "k": [], "r": "r1.4", "t": "tf.cosh"}, {"p": "/versions/r1.4/api_docs/python/tf/count_nonzero", "k": [], "r": "r1.4", "t": "tf.count_nonzero"}, {"p": "/versions/r1.4/api_docs/python/tf/count_up_to", "k": [], "r": "r1.4", "t": "tf.count_up_to"}, {"p": "/versions/r1.4/api_docs/python/tf/create_partitioned_variables", "k": [], "r": "r1.4", "t": "tf.create_partitioned_variables"}, {"p": "/versions/r1.4/api_docs/python/tf/cross", "k": [], "r": "r1.4", "t": "tf.cross"}, {"p": "/versions/r1.4/api_docs/python/tf/cumprod", "k": [], "r": "r1.4", "t": "tf.cumprod"}, {"p": "/versions/r1.4/api_docs/python/tf/cumsum", "k": [], "r": "r1.4", "t": "tf.cumsum"}, {"p": "/versions/r1.4/api_docs/python/tf/data", "k": [], "r": "r1.4", "t": "tf.data"}, {"p": "/versions/r1.4/api_docs/python/tf/data/Dataset", "k": ["output_shapes", "output_types", "__init__", "apply", "batch", "cache", "concatenate", "filter", "flat_map", "from_generator", "from_sparse_tensor_slices", "from_tensor_slices", "from_tensors", "interleave", "list_files", "make_initializable_iterator", "make_one_shot_iterator", "map", "padded_batch", "prefetch", "range", "repeat", "shard", "shuffle", "skip", "take", "zip"], "r": "r1.4", "t": "tf.data.Dataset"}, {"p": "/versions/r1.4/api_docs/python/tf/data/FixedLengthRecordDataset", "k": ["output_shapes", "output_types", "__init__", "apply", "batch", "cache", "concatenate", "filter", "flat_map", "from_generator", "from_sparse_tensor_slices", "from_tensor_slices", "from_tensors", "interleave", "list_files", "make_initializable_iterator", "make_one_shot_iterator", "map", "padded_batch", "prefetch", "range", "repeat", "shard", "shuffle", "skip", "take", "zip"], "r": "r1.4", "t": "tf.data.FixedLengthRecordDataset"}, {"p": "/versions/r1.4/api_docs/python/tf/data/Iterator", "k": ["initializer", "output_shapes", "output_types", "__init__", "from_string_handle", "from_structure", "get_next", "make_initializer", "string_handle"], "r": "r1.4", "t": "tf.data.Iterator"}, {"p": "/versions/r1.4/api_docs/python/tf/data/TFRecordDataset", "k": ["output_shapes", "output_types", "__init__", "apply", "batch", "cache", "concatenate", "filter", "flat_map", "from_generator", "from_sparse_tensor_slices", "from_tensor_slices", "from_tensors", "interleave", "list_files", "make_initializable_iterator", "make_one_shot_iterator", "map", "padded_batch", "prefetch", "range", "repeat", "shard", "shuffle", "skip", "take", "zip"], "r": "r1.4", "t": "tf.data.TFRecordDataset"}, {"p": "/versions/r1.4/api_docs/python/tf/data/TextLineDataset", "k": ["output_shapes", "output_types", "__init__", "apply", "batch", "cache", "concatenate", "filter", "flat_map", "from_generator", "from_sparse_tensor_slices", "from_tensor_slices", "from_tensors", "interleave", "list_files", "make_initializable_iterator", "make_one_shot_iterator", "map", "padded_batch", "prefetch", "range", "repeat", "shard", "shuffle", "skip", "take", "zip"], "r": "r1.4", "t": "tf.data.TextLineDataset"}, {"p": "/versions/r1.4/api_docs/python/tf/decode_base64", "k": [], "r": "r1.4", "t": "tf.decode_base64"}, {"p": "/versions/r1.4/api_docs/python/tf/decode_csv", "k": [], "r": "r1.4", "t": "tf.decode_csv"}, {"p": "/versions/r1.4/api_docs/python/tf/decode_json_example", "k": [], "r": "r1.4", "t": "tf.decode_json_example"}, {"p": "/versions/r1.4/api_docs/python/tf/decode_raw", "k": [], "r": "r1.4", "t": "tf.decode_raw"}, {"p": "/versions/r1.4/api_docs/python/tf/delete_session_tensor", "k": [], "r": "r1.4", "t": "tf.delete_session_tensor"}, {"p": "/versions/r1.4/api_docs/python/tf/depth_to_space", "k": [], "r": "r1.4", "t": "tf.depth_to_space"}, {"p": "/versions/r1.4/api_docs/python/tf/dequantize", "k": [], "r": "r1.4", "t": "tf.dequantize"}, {"p": "/versions/r1.4/api_docs/python/tf/deserialize_many_sparse", "k": [], "r": "r1.4", "t": "tf.deserialize_many_sparse"}, {"p": "/versions/r1.4/api_docs/python/tf/device", "k": [], "r": "r1.4", "t": "tf.device"}, {"p": "/versions/r1.4/api_docs/python/tf/diag", "k": [], "r": "r1.4", "t": "tf.diag"}, {"p": "/versions/r1.4/api_docs/python/tf/diag_part", "k": [], "r": "r1.4", "t": "tf.diag_part"}, {"p": "/versions/r1.4/api_docs/python/tf/digamma", "k": [], "r": "r1.4", "t": "tf.digamma"}, {"p": "/versions/r1.4/api_docs/python/tf/distributions", "k": ["FULLY_REPARAMETERIZED", "NOT_REPARAMETERIZED"], "r": "r1.4", "t": "tf.distributions"}, {"p": "/versions/r1.4/api_docs/python/tf/distributions/Bernoulli", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "logits", "name", "parameters", "probs", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.4", "t": "tf.distributions.Bernoulli"}, {"p": "/versions/r1.4/api_docs/python/tf/distributions/Beta", "k": ["allow_nan_stats", "batch_shape", "concentration0", "concentration1", "dtype", "event_shape", "name", "parameters", "reparameterization_type", "total_concentration", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.4", "t": "tf.distributions.Beta"}, {"p": "/versions/r1.4/api_docs/python/tf/distributions/Categorical", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "event_size", "logits", "name", "parameters", "probs", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.4", "t": "tf.distributions.Categorical"}, {"p": "/versions/r1.4/api_docs/python/tf/distributions/Dirichlet", "k": ["allow_nan_stats", "batch_shape", "concentration", "dtype", "event_shape", "name", "parameters", "reparameterization_type", "total_concentration", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.4", "t": "tf.distributions.Dirichlet"}, {"p": "/versions/r1.4/api_docs/python/tf/distributions/DirichletMultinomial", "k": ["allow_nan_stats", "batch_shape", "concentration", "dtype", "event_shape", "name", "parameters", "reparameterization_type", "total_concentration", "total_count", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.4", "t": "tf.distributions.DirichletMultinomial"}, {"p": "/versions/r1.4/api_docs/python/tf/distributions/Distribution", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "name", "parameters", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.4", "t": "tf.distributions.Distribution"}, {"p": "/versions/r1.4/api_docs/python/tf/distributions/Exponential", "k": ["allow_nan_stats", "batch_shape", "concentration", "dtype", "event_shape", "name", "parameters", "rate", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.4", "t": "tf.distributions.Exponential"}, {"p": "/versions/r1.4/api_docs/python/tf/distributions/Gamma", "k": ["allow_nan_stats", "batch_shape", "concentration", "dtype", "event_shape", "name", "parameters", "rate", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.4", "t": "tf.distributions.Gamma"}, {"p": "/versions/r1.4/api_docs/python/tf/distributions/Laplace", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.4", "t": "tf.distributions.Laplace"}, {"p": "/versions/r1.4/api_docs/python/tf/distributions/Multinomial", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "logits", "name", "parameters", "probs", "reparameterization_type", "total_count", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.4", "t": "tf.distributions.Multinomial"}, {"p": "/versions/r1.4/api_docs/python/tf/distributions/Normal", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.4", "t": "tf.distributions.Normal"}, {"p": "/versions/r1.4/api_docs/python/tf/distributions/RegisterKL", "k": ["__call__", "__init__"], "r": "r1.4", "t": "tf.distributions.RegisterKL"}, {"p": "/versions/r1.4/api_docs/python/tf/distributions/ReparameterizationType", "k": ["__eq__", "__init__"], "r": "r1.4", "t": "tf.distributions.ReparameterizationType"}, {"p": "/versions/r1.4/api_docs/python/tf/distributions/StudentT", "k": ["allow_nan_stats", "batch_shape", "df", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.4", "t": "tf.distributions.StudentT"}, {"p": "/versions/r1.4/api_docs/python/tf/distributions/Uniform", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "high", "low", "name", "parameters", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "range", "sample", "stddev", "survival_function", "variance"], "r": "r1.4", "t": "tf.distributions.Uniform"}, {"p": "/versions/r1.4/api_docs/python/tf/distributions/bijectors", "k": [], "r": "r1.4", "t": "tf.distributions.bijectors"}, {"p": "/versions/r1.4/api_docs/python/tf/distributions/bijectors/Bijector", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.4", "t": "tf.distributions.bijectors.Bijector"}, {"p": "/versions/r1.4/api_docs/python/tf/distributions/bijectors/Identity", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.4", "t": "tf.distributions.bijectors.Identity"}, {"p": "/versions/r1.4/api_docs/python/tf/distributions/kl_divergence", "k": [], "r": "r1.4", "t": "tf.distributions.kl_divergence"}, {"p": "/versions/r1.4/api_docs/python/tf/div", "k": [], "r": "r1.4", "t": "tf.div"}, {"p": "/versions/r1.4/api_docs/python/tf/divide", "k": [], "r": "r1.4", "t": "tf.divide"}, {"p": "/versions/r1.4/api_docs/python/tf/dynamic_partition", "k": [], "r": "r1.4", "t": "tf.dynamic_partition"}, {"p": "/versions/r1.4/api_docs/python/tf/dynamic_stitch", "k": [], "r": "r1.4", "t": "tf.dynamic_stitch"}, {"p": "/versions/r1.4/api_docs/python/tf/edit_distance", "k": [], "r": "r1.4", "t": "tf.edit_distance"}, {"p": "/versions/r1.4/api_docs/python/tf/einsum", "k": [], "r": "r1.4", "t": "tf.einsum"}, {"p": "/versions/r1.4/api_docs/python/tf/encode_base64", "k": [], "r": "r1.4", "t": "tf.encode_base64"}, {"p": "/versions/r1.4/api_docs/python/tf/equal", "k": [], "r": "r1.4", "t": "tf.equal"}, {"p": "/versions/r1.4/api_docs/python/tf/erf", "k": [], "r": "r1.4", "t": "tf.erf"}, {"p": "/versions/r1.4/api_docs/python/tf/erfc", "k": [], "r": "r1.4", "t": "tf.erfc"}, {"p": "/versions/r1.4/api_docs/python/tf/errors", "k": ["ABORTED", "ALREADY_EXISTS", "CANCELLED", "DATA_LOSS", "DEADLINE_EXCEEDED", "FAILED_PRECONDITION", "INTERNAL", "INVALID_ARGUMENT", "NOT_FOUND", "OK", "OUT_OF_RANGE", "PERMISSION_DENIED", "RESOURCE_EXHAUSTED", "UNAUTHENTICATED", "UNAVAILABLE", "UNIMPLEMENTED", "UNKNOWN"], "r": "r1.4", "t": "tf.errors"}, {"p": "/versions/r1.4/api_docs/python/tf/errors/AbortedError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "r1.4", "t": "tf.errors.AbortedError"}, {"p": "/versions/r1.4/api_docs/python/tf/errors/AlreadyExistsError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "r1.4", "t": "tf.errors.AlreadyExistsError"}, {"p": "/versions/r1.4/api_docs/python/tf/errors/CancelledError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "r1.4", "t": "tf.errors.CancelledError"}, {"p": "/versions/r1.4/api_docs/python/tf/errors/DataLossError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "r1.4", "t": "tf.errors.DataLossError"}, {"p": "/versions/r1.4/api_docs/python/tf/errors/DeadlineExceededError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "r1.4", "t": "tf.errors.DeadlineExceededError"}, {"p": "/versions/r1.4/api_docs/python/tf/errors/FailedPreconditionError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "r1.4", "t": "tf.errors.FailedPreconditionError"}, {"p": "/versions/r1.4/api_docs/python/tf/errors/InternalError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "r1.4", "t": "tf.errors.InternalError"}, {"p": "/versions/r1.4/api_docs/python/tf/errors/InvalidArgumentError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "r1.4", "t": "tf.errors.InvalidArgumentError"}, {"p": "/versions/r1.4/api_docs/python/tf/errors/NotFoundError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "r1.4", "t": "tf.errors.NotFoundError"}, {"p": "/versions/r1.4/api_docs/python/tf/errors/OutOfRangeError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "r1.4", "t": "tf.errors.OutOfRangeError"}, {"p": "/versions/r1.4/api_docs/python/tf/errors/PermissionDeniedError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "r1.4", "t": "tf.errors.PermissionDeniedError"}, {"p": "/versions/r1.4/api_docs/python/tf/errors/ResourceExhaustedError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "r1.4", "t": "tf.errors.ResourceExhaustedError"}, {"p": "/versions/r1.4/api_docs/python/tf/errors/UnauthenticatedError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "r1.4", "t": "tf.errors.UnauthenticatedError"}, {"p": "/versions/r1.4/api_docs/python/tf/errors/UnavailableError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "r1.4", "t": "tf.errors.UnavailableError"}, {"p": "/versions/r1.4/api_docs/python/tf/errors/UnimplementedError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "r1.4", "t": "tf.errors.UnimplementedError"}, {"p": "/versions/r1.4/api_docs/python/tf/errors/UnknownError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "r1.4", "t": "tf.errors.UnknownError"}, {"p": "/versions/r1.4/api_docs/python/tf/errors/error_code_from_exception_type", "k": [], "r": "r1.4", "t": "tf.errors.error_code_from_exception_type"}, {"p": "/versions/r1.4/api_docs/python/tf/errors/exception_type_from_error_code", "k": [], "r": "r1.4", "t": "tf.errors.exception_type_from_error_code"}, {"p": "/versions/r1.4/api_docs/python/tf/errors/raise_exception_on_not_ok_status", "k": ["__enter__", "__exit__"], "r": "r1.4", "t": "tf.errors.raise_exception_on_not_ok_status"}, {"p": "/versions/r1.4/api_docs/python/tf/estimator", "k": [], "r": "r1.4", "t": "tf.estimator"}, {"p": "/versions/r1.4/api_docs/python/tf/estimator/DNNClassifier", "k": ["config", "model_dir", "model_fn", "params", "__init__", "evaluate", "export_savedmodel", "get_variable_names", "get_variable_value", "latest_checkpoint", "predict", "train"], "r": "r1.4", "t": "tf.estimator.DNNClassifier"}, {"p": "/versions/r1.4/api_docs/python/tf/estimator/DNNLinearCombinedClassifier", "k": ["config", "model_dir", "model_fn", "params", "__init__", "evaluate", "export_savedmodel", "get_variable_names", "get_variable_value", "latest_checkpoint", "predict", "train"], "r": "r1.4", "t": "tf.estimator.DNNLinearCombinedClassifier"}, {"p": "/versions/r1.4/api_docs/python/tf/estimator/DNNLinearCombinedRegressor", "k": ["config", "model_dir", "model_fn", "params", "__init__", "evaluate", "export_savedmodel", "get_variable_names", "get_variable_value", "latest_checkpoint", "predict", "train"], "r": "r1.4", "t": "tf.estimator.DNNLinearCombinedRegressor"}, {"p": "/versions/r1.4/api_docs/python/tf/estimator/DNNRegressor", "k": ["config", "model_dir", "model_fn", "params", "__init__", "evaluate", "export_savedmodel", "get_variable_names", "get_variable_value", "latest_checkpoint", "predict", "train"], "r": "r1.4", "t": "tf.estimator.DNNRegressor"}, {"p": "/versions/r1.4/api_docs/python/tf/estimator/Estimator", "k": ["config", "model_dir", "model_fn", "params", "__init__", "evaluate", "export_savedmodel", "get_variable_names", "get_variable_value", "latest_checkpoint", "predict", "train"], "r": "r1.4", "t": "tf.estimator.Estimator"}, {"p": "/versions/r1.4/api_docs/python/tf/estimator/EstimatorSpec", "k": ["eval_metric_ops", "evaluation_hooks", "export_outputs", "loss", "mode", "predictions", "scaffold", "train_op", "training_chief_hooks", "training_hooks", "__new__"], "r": "r1.4", "t": "tf.estimator.EstimatorSpec"}, {"p": "/versions/r1.4/api_docs/python/tf/estimator/EvalSpec", "k": ["exporters", "hooks", "input_fn", "name", "start_delay_secs", "steps", "throttle_secs", "__new__"], "r": "r1.4", "t": "tf.estimator.EvalSpec"}, {"p": "/versions/r1.4/api_docs/python/tf/estimator/Exporter", "k": ["name", "export"], "r": "r1.4", "t": "tf.estimator.Exporter"}, {"p": "/versions/r1.4/api_docs/python/tf/estimator/FinalExporter", "k": ["name", "__init__", "export"], "r": "r1.4", "t": "tf.estimator.FinalExporter"}, {"p": "/versions/r1.4/api_docs/python/tf/estimator/LatestExporter", "k": ["name", "__init__", "export"], "r": "r1.4", "t": "tf.estimator.LatestExporter"}, {"p": "/versions/r1.4/api_docs/python/tf/estimator/LinearClassifier", "k": ["config", "model_dir", "model_fn", "params", "__init__", "evaluate", "export_savedmodel", "get_variable_names", "get_variable_value", "latest_checkpoint", "predict", "train"], "r": "r1.4", "t": "tf.estimator.LinearClassifier"}, {"p": "/versions/r1.4/api_docs/python/tf/estimator/LinearRegressor", "k": ["config", "model_dir", "model_fn", "params", "__init__", "evaluate", "export_savedmodel", "get_variable_names", "get_variable_value", "latest_checkpoint", "predict", "train"], "r": "r1.4", "t": "tf.estimator.LinearRegressor"}, {"p": "/versions/r1.4/api_docs/python/tf/estimator/ModeKeys", "k": ["EVAL", "PREDICT", "TRAIN"], "r": "r1.4", "t": "tf.estimator.ModeKeys"}, {"p": "/versions/r1.4/api_docs/python/tf/estimator/RunConfig", "k": ["cluster_spec", "evaluation_master", "is_chief", "keep_checkpoint_every_n_hours", "keep_checkpoint_max", "log_step_count_steps", "master", "model_dir", "num_ps_replicas", "num_worker_replicas", "save_checkpoints_secs", "save_checkpoints_steps", "save_summary_steps", "service", "session_config", "task_id", "task_type", "tf_random_seed", "__init__", "replace"], "r": "r1.4", "t": "tf.estimator.RunConfig"}, {"p": "/versions/r1.4/api_docs/python/tf/estimator/TrainSpec", "k": ["hooks", "input_fn", "max_steps", "__new__"], "r": "r1.4", "t": "tf.estimator.TrainSpec"}, {"p": "/versions/r1.4/api_docs/python/tf/estimator/classifier_parse_example_spec", "k": [], "r": "r1.4", "t": "tf.estimator.classifier_parse_example_spec"}, {"p": "/versions/r1.4/api_docs/python/tf/estimator/export", "k": [], "r": "r1.4", "t": "tf.estimator.export"}, {"p": "/versions/r1.4/api_docs/python/tf/estimator/export/ClassificationOutput", "k": ["classes", "scores", "__init__", "as_signature_def"], "r": "r1.4", "t": "tf.estimator.export.ClassificationOutput"}, {"p": "/versions/r1.4/api_docs/python/tf/estimator/export/ExportOutput", "k": ["as_signature_def"], "r": "r1.4", "t": "tf.estimator.export.ExportOutput"}, {"p": "/versions/r1.4/api_docs/python/tf/estimator/export/PredictOutput", "k": ["outputs", "__init__", "as_signature_def"], "r": "r1.4", "t": "tf.estimator.export.PredictOutput"}, {"p": "/versions/r1.4/api_docs/python/tf/estimator/export/RegressionOutput", "k": ["value", "__init__", "as_signature_def"], "r": "r1.4", "t": "tf.estimator.export.RegressionOutput"}, {"p": "/versions/r1.4/api_docs/python/tf/estimator/export/ServingInputReceiver", "k": ["features", "receiver_tensors", "receiver_tensors_alternatives", "__new__"], "r": "r1.4", "t": "tf.estimator.export.ServingInputReceiver"}, {"p": "/versions/r1.4/api_docs/python/tf/estimator/export/build_parsing_serving_input_receiver_fn", "k": [], "r": "r1.4", "t": "tf.estimator.export.build_parsing_serving_input_receiver_fn"}, {"p": "/versions/r1.4/api_docs/python/tf/estimator/export/build_raw_serving_input_receiver_fn", "k": [], "r": "r1.4", "t": "tf.estimator.export.build_raw_serving_input_receiver_fn"}, {"p": "/versions/r1.4/api_docs/python/tf/estimator/inputs", "k": [], "r": "r1.4", "t": "tf.estimator.inputs"}, {"p": "/versions/r1.4/api_docs/python/tf/estimator/inputs/numpy_input_fn", "k": [], "r": "r1.4", "t": "tf.estimator.inputs.numpy_input_fn"}, {"p": "/versions/r1.4/api_docs/python/tf/estimator/inputs/pandas_input_fn", "k": [], "r": "r1.4", "t": "tf.estimator.inputs.pandas_input_fn"}, {"p": "/versions/r1.4/api_docs/python/tf/estimator/regressor_parse_example_spec", "k": [], "r": "r1.4", "t": "tf.estimator.regressor_parse_example_spec"}, {"p": "/versions/r1.4/api_docs/python/tf/estimator/train_and_evaluate", "k": [], "r": "r1.4", "t": "tf.estimator.train_and_evaluate"}, {"p": "/versions/r1.4/api_docs/python/tf/exp", "k": [], "r": "r1.4", "t": "tf.exp"}, {"p": "/versions/r1.4/api_docs/python/tf/expand_dims", "k": [], "r": "r1.4", "t": "tf.expand_dims"}, {"p": "/versions/r1.4/api_docs/python/tf/expm1", "k": [], "r": "r1.4", "t": "tf.expm1"}, {"p": "/versions/r1.4/api_docs/python/tf/extract_image_patches", "k": [], "r": "r1.4", "t": "tf.extract_image_patches"}, {"p": "/versions/r1.4/api_docs/python/tf/eye", "k": [], "r": "r1.4", "t": "tf.eye"}, {"p": "/versions/r1.4/api_docs/python/tf/fake_quant_with_min_max_args", "k": [], "r": "r1.4", "t": "tf.fake_quant_with_min_max_args"}, {"p": "/versions/r1.4/api_docs/python/tf/fake_quant_with_min_max_args_gradient", "k": [], "r": "r1.4", "t": "tf.fake_quant_with_min_max_args_gradient"}, {"p": "/versions/r1.4/api_docs/python/tf/fake_quant_with_min_max_vars", "k": [], "r": "r1.4", "t": "tf.fake_quant_with_min_max_vars"}, {"p": "/versions/r1.4/api_docs/python/tf/fake_quant_with_min_max_vars_gradient", "k": [], "r": "r1.4", "t": "tf.fake_quant_with_min_max_vars_gradient"}, {"p": "/versions/r1.4/api_docs/python/tf/fake_quant_with_min_max_vars_per_channel", "k": [], "r": "r1.4", "t": "tf.fake_quant_with_min_max_vars_per_channel"}, {"p": "/versions/r1.4/api_docs/python/tf/fake_quant_with_min_max_vars_per_channel_gradient", "k": [], "r": "r1.4", "t": "tf.fake_quant_with_min_max_vars_per_channel_gradient"}, {"p": "/versions/r1.4/api_docs/python/tf/feature_column", "k": [], "r": "r1.4", "t": "tf.feature_column"}, {"p": "/versions/r1.4/api_docs/python/tf/feature_column/bucketized_column", "k": [], "r": "r1.4", "t": "tf.feature_column.bucketized_column"}, {"p": "/versions/r1.4/api_docs/python/tf/feature_column/categorical_column_with_hash_bucket", "k": [], "r": "r1.4", "t": "tf.feature_column.categorical_column_with_hash_bucket"}, {"p": "/versions/r1.4/api_docs/python/tf/feature_column/categorical_column_with_identity", "k": [], "r": "r1.4", "t": "tf.feature_column.categorical_column_with_identity"}, {"p": "/versions/r1.4/api_docs/python/tf/feature_column/categorical_column_with_vocabulary_file", "k": [], "r": "r1.4", "t": "tf.feature_column.categorical_column_with_vocabulary_file"}, {"p": "/versions/r1.4/api_docs/python/tf/feature_column/categorical_column_with_vocabulary_list", "k": [], "r": "r1.4", "t": "tf.feature_column.categorical_column_with_vocabulary_list"}, {"p": "/versions/r1.4/api_docs/python/tf/feature_column/crossed_column", "k": [], "r": "r1.4", "t": "tf.feature_column.crossed_column"}, {"p": "/versions/r1.4/api_docs/python/tf/feature_column/embedding_column", "k": [], "r": "r1.4", "t": "tf.feature_column.embedding_column"}, {"p": "/versions/r1.4/api_docs/python/tf/feature_column/indicator_column", "k": [], "r": "r1.4", "t": "tf.feature_column.indicator_column"}, {"p": "/versions/r1.4/api_docs/python/tf/feature_column/input_layer", "k": [], "r": "r1.4", "t": "tf.feature_column.input_layer"}, {"p": "/versions/r1.4/api_docs/python/tf/feature_column/linear_model", "k": [], "r": "r1.4", "t": "tf.feature_column.linear_model"}, {"p": "/versions/r1.4/api_docs/python/tf/feature_column/make_parse_example_spec", "k": [], "r": "r1.4", "t": "tf.feature_column.make_parse_example_spec"}, {"p": "/versions/r1.4/api_docs/python/tf/feature_column/numeric_column", "k": [], "r": "r1.4", "t": "tf.feature_column.numeric_column"}, {"p": "/versions/r1.4/api_docs/python/tf/feature_column/weighted_categorical_column", "k": [], "r": "r1.4", "t": "tf.feature_column.weighted_categorical_column"}, {"p": "/versions/r1.4/api_docs/python/tf/fft", "k": [], "r": "r1.4", "t": "tf.fft"}, {"p": "/versions/r1.4/api_docs/python/tf/fft2d", "k": [], "r": "r1.4", "t": "tf.fft2d"}, {"p": "/versions/r1.4/api_docs/python/tf/fft3d", "k": [], "r": "r1.4", "t": "tf.fft3d"}, {"p": "/versions/r1.4/api_docs/python/tf/fill", "k": [], "r": "r1.4", "t": "tf.fill"}, {"p": "/versions/r1.4/api_docs/python/tf/fixed_size_partitioner", "k": [], "r": "r1.4", "t": "tf.fixed_size_partitioner"}, {"p": "/versions/r1.4/api_docs/python/tf/flags", "k": [], "r": "r1.4", "t": "tf.flags"}, {"p": "/versions/r1.4/api_docs/python/tf/floor", "k": [], "r": "r1.4", "t": "tf.floor"}, {"p": "/versions/r1.4/api_docs/python/tf/floor_div", "k": [], "r": "r1.4", "t": "tf.floor_div"}, {"p": "/versions/r1.4/api_docs/python/tf/floordiv", "k": [], "r": "r1.4", "t": "tf.floordiv"}, {"p": "/versions/r1.4/api_docs/python/tf/floormod", "k": [], "r": "r1.4", "t": "tf.floormod"}, {"p": "/versions/r1.4/api_docs/python/tf/foldl", "k": [], "r": "r1.4", "t": "tf.foldl"}, {"p": "/versions/r1.4/api_docs/python/tf/foldr", "k": [], "r": "r1.4", "t": "tf.foldr"}, {"p": "/versions/r1.4/api_docs/python/tf/gather", "k": [], "r": "r1.4", "t": "tf.gather"}, {"p": "/versions/r1.4/api_docs/python/tf/gather_nd", "k": [], "r": "r1.4", "t": "tf.gather_nd"}, {"p": "/versions/r1.4/api_docs/python/tf/get_collection", "k": [], "r": "r1.4", "t": "tf.get_collection"}, {"p": "/versions/r1.4/api_docs/python/tf/get_collection_ref", "k": [], "r": "r1.4", "t": "tf.get_collection_ref"}, {"p": "/versions/r1.4/api_docs/python/tf/get_default_graph", "k": [], "r": "r1.4", "t": "tf.get_default_graph"}, {"p": "/versions/r1.4/api_docs/python/tf/get_default_session", "k": [], "r": "r1.4", "t": "tf.get_default_session"}, {"p": "/versions/r1.4/api_docs/python/tf/get_local_variable", "k": [], "r": "r1.4", "t": "tf.get_local_variable"}, {"p": "/versions/r1.4/api_docs/python/tf/get_seed", "k": [], "r": "r1.4", "t": "tf.get_seed"}, {"p": "/versions/r1.4/api_docs/python/tf/get_session_handle", "k": [], "r": "r1.4", "t": "tf.get_session_handle"}, {"p": "/versions/r1.4/api_docs/python/tf/get_session_tensor", "k": [], "r": "r1.4", "t": "tf.get_session_tensor"}, {"p": "/versions/r1.4/api_docs/python/tf/get_variable", "k": [], "r": "r1.4", "t": "tf.get_variable"}, {"p": "/versions/r1.4/api_docs/python/tf/get_variable_scope", "k": [], "r": "r1.4", "t": "tf.get_variable_scope"}, {"p": "/versions/r1.4/api_docs/python/tf/gfile", "k": [], "r": "r1.4", "t": "tf.gfile"}, {"p": "/versions/r1.4/api_docs/python/tf/gfile/Copy", "k": [], "r": "r1.4", "t": "tf.gfile.Copy"}, {"p": "/versions/r1.4/api_docs/python/tf/gfile/DeleteRecursively", "k": [], "r": "r1.4", "t": "tf.gfile.DeleteRecursively"}, {"p": "/versions/r1.4/api_docs/python/tf/gfile/Exists", "k": [], "r": "r1.4", "t": "tf.gfile.Exists"}, {"p": "/versions/r1.4/api_docs/python/tf/gfile/FastGFile", "k": ["mode", "name", "__enter__", "__exit__", "__init__", "__iter__", "__next__", "close", "flush", "next", "read", "readline", "readlines", "seek", "size", "tell", "write"], "r": "r1.4", "t": "tf.gfile.FastGFile"}, {"p": "/versions/r1.4/api_docs/python/tf/gfile/GFile", "k": ["mode", "name", "__enter__", "__exit__", "__init__", "__iter__", "__next__", "close", "flush", "next", "read", "readline", "readlines", "seek", "size", "tell", "write"], "r": "r1.4", "t": "tf.gfile.GFile"}, {"p": "/versions/r1.4/api_docs/python/tf/gfile/Glob", "k": [], "r": "r1.4", "t": "tf.gfile.Glob"}, {"p": "/versions/r1.4/api_docs/python/tf/gfile/IsDirectory", "k": [], "r": "r1.4", "t": "tf.gfile.IsDirectory"}, {"p": "/versions/r1.4/api_docs/python/tf/gfile/ListDirectory", "k": [], "r": "r1.4", "t": "tf.gfile.ListDirectory"}, {"p": "/versions/r1.4/api_docs/python/tf/gfile/MakeDirs", "k": [], "r": "r1.4", "t": "tf.gfile.MakeDirs"}, {"p": "/versions/r1.4/api_docs/python/tf/gfile/MkDir", "k": [], "r": "r1.4", "t": "tf.gfile.MkDir"}, {"p": "/versions/r1.4/api_docs/python/tf/gfile/Remove", "k": [], "r": "r1.4", "t": "tf.gfile.Remove"}, {"p": "/versions/r1.4/api_docs/python/tf/gfile/Rename", "k": [], "r": "r1.4", "t": "tf.gfile.Rename"}, {"p": "/versions/r1.4/api_docs/python/tf/gfile/Stat", "k": [], "r": "r1.4", "t": "tf.gfile.Stat"}, {"p": "/versions/r1.4/api_docs/python/tf/gfile/Walk", "k": [], "r": "r1.4", "t": "tf.gfile.Walk"}, {"p": "/versions/r1.4/api_docs/python/tf/global_norm", "k": [], "r": "r1.4", "t": "tf.global_norm"}, {"p": "/versions/r1.4/api_docs/python/tf/global_variables", "k": [], "r": "r1.4", "t": "tf.global_variables"}, {"p": "/versions/r1.4/api_docs/python/tf/global_variables_initializer", "k": [], "r": "r1.4", "t": "tf.global_variables_initializer"}, {"p": "/versions/r1.4/api_docs/python/tf/glorot_normal_initializer", "k": [], "r": "r1.4", "t": "tf.glorot_normal_initializer"}, {"p": "/versions/r1.4/api_docs/python/tf/glorot_uniform_initializer", "k": [], "r": "r1.4", "t": "tf.glorot_uniform_initializer"}, {"p": "/versions/r1.4/api_docs/python/tf/gradients", "k": [], "r": "r1.4", "t": "tf.gradients"}, {"p": "/versions/r1.4/api_docs/python/tf/graph_util", "k": [], "r": "r1.4", "t": "tf.graph_util"}, {"p": "/versions/r1.4/api_docs/python/tf/graph_util/convert_variables_to_constants", "k": [], "r": "r1.4", "t": "tf.graph_util.convert_variables_to_constants"}, {"p": "/versions/r1.4/api_docs/python/tf/graph_util/extract_sub_graph", "k": [], "r": "r1.4", "t": "tf.graph_util.extract_sub_graph"}, {"p": "/versions/r1.4/api_docs/python/tf/graph_util/must_run_on_cpu", "k": [], "r": "r1.4", "t": "tf.graph_util.must_run_on_cpu"}, {"p": "/versions/r1.4/api_docs/python/tf/graph_util/remove_training_nodes", "k": [], "r": "r1.4", "t": "tf.graph_util.remove_training_nodes"}, {"p": "/versions/r1.4/api_docs/python/tf/graph_util/tensor_shape_from_node_def_name", "k": [], "r": "r1.4", "t": "tf.graph_util.tensor_shape_from_node_def_name"}, {"p": "/versions/r1.4/api_docs/python/tf/greater", "k": [], "r": "r1.4", "t": "tf.greater"}, {"p": "/versions/r1.4/api_docs/python/tf/greater_equal", "k": [], "r": "r1.4", "t": "tf.greater_equal"}, {"p": "/versions/r1.4/api_docs/python/tf/group", "k": [], "r": "r1.4", "t": "tf.group"}, {"p": "/versions/r1.4/api_docs/python/tf/hessians", "k": [], "r": "r1.4", "t": "tf.hessians"}, {"p": "/versions/r1.4/api_docs/python/tf/histogram_fixed_width", "k": [], "r": "r1.4", "t": "tf.histogram_fixed_width"}, {"p": "/versions/r1.4/api_docs/python/tf/identity", "k": [], "r": "r1.4", "t": "tf.identity"}, {"p": "/versions/r1.4/api_docs/python/tf/identity_n", "k": [], "r": "r1.4", "t": "tf.identity_n"}, {"p": "/versions/r1.4/api_docs/python/tf/ifft", "k": [], "r": "r1.4", "t": "tf.ifft"}, {"p": "/versions/r1.4/api_docs/python/tf/ifft2d", "k": [], "r": "r1.4", "t": "tf.ifft2d"}, {"p": "/versions/r1.4/api_docs/python/tf/ifft3d", "k": [], "r": "r1.4", "t": "tf.ifft3d"}, {"p": "/versions/r1.4/api_docs/python/tf/igamma", "k": [], "r": "r1.4", "t": "tf.igamma"}, {"p": "/versions/r1.4/api_docs/python/tf/igammac", "k": [], "r": "r1.4", "t": "tf.igammac"}, {"p": "/versions/r1.4/api_docs/python/tf/imag", "k": [], "r": "r1.4", "t": "tf.imag"}, {"p": "/versions/r1.4/api_docs/python/tf/image", "k": [], "r": "r1.4", "t": "tf.image"}, {"p": "/versions/r1.4/api_docs/python/tf/image/ResizeMethod", "k": ["AREA", "BICUBIC", "BILINEAR", "NEAREST_NEIGHBOR"], "r": "r1.4", "t": "tf.image.ResizeMethod"}, {"p": "/versions/r1.4/api_docs/python/tf/image/adjust_brightness", "k": [], "r": "r1.4", "t": "tf.image.adjust_brightness"}, {"p": "/versions/r1.4/api_docs/python/tf/image/adjust_contrast", "k": [], "r": "r1.4", "t": "tf.image.adjust_contrast"}, {"p": "/versions/r1.4/api_docs/python/tf/image/adjust_gamma", "k": [], "r": "r1.4", "t": "tf.image.adjust_gamma"}, {"p": "/versions/r1.4/api_docs/python/tf/image/adjust_hue", "k": [], "r": "r1.4", "t": "tf.image.adjust_hue"}, {"p": "/versions/r1.4/api_docs/python/tf/image/adjust_saturation", "k": [], "r": "r1.4", "t": "tf.image.adjust_saturation"}, {"p": "/versions/r1.4/api_docs/python/tf/image/central_crop", "k": [], "r": "r1.4", "t": "tf.image.central_crop"}, {"p": "/versions/r1.4/api_docs/python/tf/image/convert_image_dtype", "k": [], "r": "r1.4", "t": "tf.image.convert_image_dtype"}, {"p": "/versions/r1.4/api_docs/python/tf/image/crop_and_resize", "k": [], "r": "r1.4", "t": "tf.image.crop_and_resize"}, {"p": "/versions/r1.4/api_docs/python/tf/image/crop_to_bounding_box", "k": [], "r": "r1.4", "t": "tf.image.crop_to_bounding_box"}, {"p": "/versions/r1.4/api_docs/python/tf/image/decode_and_crop_jpeg", "k": [], "r": "r1.4", "t": "tf.image.decode_and_crop_jpeg"}, {"p": "/versions/r1.4/api_docs/python/tf/image/decode_bmp", "k": [], "r": "r1.4", "t": "tf.image.decode_bmp"}, {"p": "/versions/r1.4/api_docs/python/tf/image/decode_gif", "k": [], "r": "r1.4", "t": "tf.image.decode_gif"}, {"p": "/versions/r1.4/api_docs/python/tf/image/decode_image", "k": [], "r": "r1.4", "t": "tf.image.decode_image"}, {"p": "/versions/r1.4/api_docs/python/tf/image/decode_jpeg", "k": [], "r": "r1.4", "t": "tf.image.decode_jpeg"}, {"p": "/versions/r1.4/api_docs/python/tf/image/decode_png", "k": [], "r": "r1.4", "t": "tf.image.decode_png"}, {"p": "/versions/r1.4/api_docs/python/tf/image/draw_bounding_boxes", "k": [], "r": "r1.4", "t": "tf.image.draw_bounding_boxes"}, {"p": "/versions/r1.4/api_docs/python/tf/image/encode_jpeg", "k": [], "r": "r1.4", "t": "tf.image.encode_jpeg"}, {"p": "/versions/r1.4/api_docs/python/tf/image/encode_png", "k": [], "r": "r1.4", "t": "tf.image.encode_png"}, {"p": "/versions/r1.4/api_docs/python/tf/image/extract_glimpse", "k": [], "r": "r1.4", "t": "tf.image.extract_glimpse"}, {"p": "/versions/r1.4/api_docs/python/tf/image/extract_jpeg_shape", "k": [], "r": "r1.4", "t": "tf.image.extract_jpeg_shape"}, {"p": "/versions/r1.4/api_docs/python/tf/image/flip_left_right", "k": [], "r": "r1.4", "t": "tf.image.flip_left_right"}, {"p": "/versions/r1.4/api_docs/python/tf/image/flip_up_down", "k": [], "r": "r1.4", "t": "tf.image.flip_up_down"}, {"p": "/versions/r1.4/api_docs/python/tf/image/grayscale_to_rgb", "k": [], "r": "r1.4", "t": "tf.image.grayscale_to_rgb"}, {"p": "/versions/r1.4/api_docs/python/tf/image/hsv_to_rgb", "k": [], "r": "r1.4", "t": "tf.image.hsv_to_rgb"}, {"p": "/versions/r1.4/api_docs/python/tf/image/non_max_suppression", "k": [], "r": "r1.4", "t": "tf.image.non_max_suppression"}, {"p": "/versions/r1.4/api_docs/python/tf/image/pad_to_bounding_box", "k": [], "r": "r1.4", "t": "tf.image.pad_to_bounding_box"}, {"p": "/versions/r1.4/api_docs/python/tf/image/per_image_standardization", "k": [], "r": "r1.4", "t": "tf.image.per_image_standardization"}, {"p": "/versions/r1.4/api_docs/python/tf/image/random_brightness", "k": [], "r": "r1.4", "t": "tf.image.random_brightness"}, {"p": "/versions/r1.4/api_docs/python/tf/image/random_contrast", "k": [], "r": "r1.4", "t": "tf.image.random_contrast"}, {"p": "/versions/r1.4/api_docs/python/tf/image/random_flip_left_right", "k": [], "r": "r1.4", "t": "tf.image.random_flip_left_right"}, {"p": "/versions/r1.4/api_docs/python/tf/image/random_flip_up_down", "k": [], "r": "r1.4", "t": "tf.image.random_flip_up_down"}, {"p": "/versions/r1.4/api_docs/python/tf/image/random_hue", "k": [], "r": "r1.4", "t": "tf.image.random_hue"}, {"p": "/versions/r1.4/api_docs/python/tf/image/random_saturation", "k": [], "r": "r1.4", "t": "tf.image.random_saturation"}, {"p": "/versions/r1.4/api_docs/python/tf/image/resize_area", "k": [], "r": "r1.4", "t": "tf.image.resize_area"}, {"p": "/versions/r1.4/api_docs/python/tf/image/resize_bicubic", "k": [], "r": "r1.4", "t": "tf.image.resize_bicubic"}, {"p": "/versions/r1.4/api_docs/python/tf/image/resize_bilinear", "k": [], "r": "r1.4", "t": "tf.image.resize_bilinear"}, {"p": "/versions/r1.4/api_docs/python/tf/image/resize_image_with_crop_or_pad", "k": [], "r": "r1.4", "t": "tf.image.resize_image_with_crop_or_pad"}, {"p": "/versions/r1.4/api_docs/python/tf/image/resize_images", "k": [], "r": "r1.4", "t": "tf.image.resize_images"}, {"p": "/versions/r1.4/api_docs/python/tf/image/resize_nearest_neighbor", "k": [], "r": "r1.4", "t": "tf.image.resize_nearest_neighbor"}, {"p": "/versions/r1.4/api_docs/python/tf/image/rgb_to_grayscale", "k": [], "r": "r1.4", "t": "tf.image.rgb_to_grayscale"}, {"p": "/versions/r1.4/api_docs/python/tf/image/rgb_to_hsv", "k": [], "r": "r1.4", "t": "tf.image.rgb_to_hsv"}, {"p": "/versions/r1.4/api_docs/python/tf/image/rot90", "k": [], "r": "r1.4", "t": "tf.image.rot90"}, {"p": "/versions/r1.4/api_docs/python/tf/image/sample_distorted_bounding_box", "k": [], "r": "r1.4", "t": "tf.image.sample_distorted_bounding_box"}, {"p": "/versions/r1.4/api_docs/python/tf/image/total_variation", "k": [], "r": "r1.4", "t": "tf.image.total_variation"}, {"p": "/versions/r1.4/api_docs/python/tf/image/transpose_image", "k": [], "r": "r1.4", "t": "tf.image.transpose_image"}, {"p": "/versions/r1.4/api_docs/python/tf/import_graph_def", "k": [], "r": "r1.4", "t": "tf.import_graph_def"}, {"p": "/versions/r1.4/api_docs/python/tf/initialize_all_tables", "k": [], "r": "r1.4", "t": "tf.initialize_all_tables"}, {"p": "/versions/r1.4/api_docs/python/tf/initialize_all_variables", "k": [], "r": "r1.4", "t": "tf.initialize_all_variables"}, {"p": "/versions/r1.4/api_docs/python/tf/initialize_local_variables", "k": [], "r": "r1.4", "t": "tf.initialize_local_variables"}, {"p": "/versions/r1.4/api_docs/python/tf/initialize_variables", "k": [], "r": "r1.4", "t": "tf.initialize_variables"}, {"p": "/versions/r1.4/api_docs/python/tf/initializers", "k": ["absolute_import", "division", "print_function"], "r": "r1.4", "t": "tf.initializers"}, {"p": "/versions/r1.4/api_docs/python/tf/initializers/identity", "k": ["__call__", "__init__", "from_config", "get_config"], "r": "r1.4", "t": "tf.initializers.identity"}, {"p": "/versions/r1.4/api_docs/python/tf/invert_permutation", "k": [], "r": "r1.4", "t": "tf.invert_permutation"}, {"p": "/versions/r1.4/api_docs/python/tf/is_finite", "k": [], "r": "r1.4", "t": "tf.is_finite"}, {"p": "/versions/r1.4/api_docs/python/tf/is_inf", "k": [], "r": "r1.4", "t": "tf.is_inf"}, {"p": "/versions/r1.4/api_docs/python/tf/is_nan", "k": [], "r": "r1.4", "t": "tf.is_nan"}, {"p": "/versions/r1.4/api_docs/python/tf/is_non_decreasing", "k": [], "r": "r1.4", "t": "tf.is_non_decreasing"}, {"p": "/versions/r1.4/api_docs/python/tf/is_numeric_tensor", "k": [], "r": "r1.4", "t": "tf.is_numeric_tensor"}, {"p": "/versions/r1.4/api_docs/python/tf/is_strictly_increasing", "k": [], "r": "r1.4", "t": "tf.is_strictly_increasing"}, {"p": "/versions/r1.4/api_docs/python/tf/is_variable_initialized", "k": [], "r": "r1.4", "t": "tf.is_variable_initialized"}, {"p": "/versions/r1.4/api_docs/python/tf/keras", "k": ["__version__"], "r": "r1.4", "t": "tf.keras"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/Input", "k": [], "r": "r1.4", "t": "tf.keras.Input"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/activations", "k": [], "r": "r1.4", "t": "tf.keras.activations"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/activations/deserialize", "k": [], "r": "r1.4", "t": "tf.keras.activations.deserialize"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/activations/elu", "k": [], "r": "r1.4", "t": "tf.keras.activations.elu"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/activations/get", "k": [], "r": "r1.4", "t": "tf.keras.activations.get"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/activations/hard_sigmoid", "k": [], "r": "r1.4", "t": "tf.keras.activations.hard_sigmoid"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/activations/linear", "k": [], "r": "r1.4", "t": "tf.keras.activations.linear"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/activations/relu", "k": [], "r": "r1.4", "t": "tf.keras.activations.relu"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/activations/selu", "k": [], "r": "r1.4", "t": "tf.keras.activations.selu"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/activations/serialize", "k": [], "r": "r1.4", "t": "tf.keras.activations.serialize"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/activations/sigmoid", "k": [], "r": "r1.4", "t": "tf.keras.activations.sigmoid"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/activations/softmax", "k": [], "r": "r1.4", "t": "tf.keras.activations.softmax"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/activations/softplus", "k": [], "r": "r1.4", "t": "tf.keras.activations.softplus"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/activations/softsign", "k": [], "r": "r1.4", "t": "tf.keras.activations.softsign"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/activations/tanh", "k": [], "r": "r1.4", "t": "tf.keras.activations.tanh"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/applications", "k": [], "r": "r1.4", "t": "tf.keras.applications"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/applications/InceptionV3", "k": [], "r": "r1.4", "t": "tf.keras.applications.InceptionV3"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/applications/MobileNet", "k": [], "r": "r1.4", "t": "tf.keras.applications.MobileNet"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/applications/ResNet50", "k": [], "r": "r1.4", "t": "tf.keras.applications.ResNet50"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/applications/VGG16", "k": [], "r": "r1.4", "t": "tf.keras.applications.VGG16"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/applications/VGG19", "k": [], "r": "r1.4", "t": "tf.keras.applications.VGG19"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/applications/Xception", "k": [], "r": "r1.4", "t": "tf.keras.applications.Xception"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/applications/inception_v3", "k": [], "r": "r1.4", "t": "tf.keras.applications.inception_v3"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/applications/inception_v3/decode_predictions", "k": [], "r": "r1.4", "t": "tf.keras.applications.inception_v3.decode_predictions"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/applications/inception_v3/preprocess_input", "k": [], "r": "r1.4", "t": "tf.keras.applications.inception_v3.preprocess_input"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/applications/mobilenet", "k": [], "r": "r1.4", "t": "tf.keras.applications.mobilenet"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/applications/mobilenet/preprocess_input", "k": [], "r": "r1.4", "t": "tf.keras.applications.mobilenet.preprocess_input"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/applications/resnet50", "k": [], "r": "r1.4", "t": "tf.keras.applications.resnet50"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/applications/resnet50/preprocess_input", "k": [], "r": "r1.4", "t": "tf.keras.applications.resnet50.preprocess_input"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/applications/vgg16", "k": [], "r": "r1.4", "t": "tf.keras.applications.vgg16"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/applications/vgg19", "k": [], "r": "r1.4", "t": "tf.keras.applications.vgg19"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/applications/xception", "k": [], "r": "r1.4", "t": "tf.keras.applications.xception"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/applications/xception/preprocess_input", "k": [], "r": "r1.4", "t": "tf.keras.applications.xception.preprocess_input"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend", "k": [], "r": "r1.4", "t": "tf.keras.backend"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/abs", "k": [], "r": "r1.4", "t": "tf.keras.backend.abs"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/all", "k": [], "r": "r1.4", "t": "tf.keras.backend.all"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/any", "k": [], "r": "r1.4", "t": "tf.keras.backend.any"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/arange", "k": [], "r": "r1.4", "t": "tf.keras.backend.arange"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/argmax", "k": [], "r": "r1.4", "t": "tf.keras.backend.argmax"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/argmin", "k": [], "r": "r1.4", "t": "tf.keras.backend.argmin"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/backend", "k": [], "r": "r1.4", "t": "tf.keras.backend.backend"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/batch_dot", "k": [], "r": "r1.4", "t": "tf.keras.backend.batch_dot"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/batch_flatten", "k": [], "r": "r1.4", "t": "tf.keras.backend.batch_flatten"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/batch_get_value", "k": [], "r": "r1.4", "t": "tf.keras.backend.batch_get_value"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/batch_normalization", "k": [], "r": "r1.4", "t": "tf.keras.backend.batch_normalization"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/batch_set_value", "k": [], "r": "r1.4", "t": "tf.keras.backend.batch_set_value"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/bias_add", "k": [], "r": "r1.4", "t": "tf.keras.backend.bias_add"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/binary_crossentropy", "k": [], "r": "r1.4", "t": "tf.keras.backend.binary_crossentropy"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/cast", "k": [], "r": "r1.4", "t": "tf.keras.backend.cast"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/cast_to_floatx", "k": [], "r": "r1.4", "t": "tf.keras.backend.cast_to_floatx"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/categorical_crossentropy", "k": [], "r": "r1.4", "t": "tf.keras.backend.categorical_crossentropy"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/clear_session", "k": [], "r": "r1.4", "t": "tf.keras.backend.clear_session"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/clip", "k": [], "r": "r1.4", "t": "tf.keras.backend.clip"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/concatenate", "k": [], "r": "r1.4", "t": "tf.keras.backend.concatenate"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/constant", "k": [], "r": "r1.4", "t": "tf.keras.backend.constant"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/conv1d", "k": [], "r": "r1.4", "t": "tf.keras.backend.conv1d"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/conv2d", "k": [], "r": "r1.4", "t": "tf.keras.backend.conv2d"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/conv2d_transpose", "k": [], "r": "r1.4", "t": "tf.keras.backend.conv2d_transpose"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/conv3d", "k": [], "r": "r1.4", "t": "tf.keras.backend.conv3d"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/cos", "k": [], "r": "r1.4", "t": "tf.keras.backend.cos"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/count_params", "k": [], "r": "r1.4", "t": "tf.keras.backend.count_params"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/ctc_batch_cost", "k": [], "r": "r1.4", "t": "tf.keras.backend.ctc_batch_cost"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/ctc_decode", "k": [], "r": "r1.4", "t": "tf.keras.backend.ctc_decode"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/ctc_label_dense_to_sparse", "k": [], "r": "r1.4", "t": "tf.keras.backend.ctc_label_dense_to_sparse"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/dot", "k": [], "r": "r1.4", "t": "tf.keras.backend.dot"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/dropout", "k": [], "r": "r1.4", "t": "tf.keras.backend.dropout"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/dtype", "k": [], "r": "r1.4", "t": "tf.keras.backend.dtype"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/elu", "k": [], "r": "r1.4", "t": "tf.keras.backend.elu"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/epsilon", "k": [], "r": "r1.4", "t": "tf.keras.backend.epsilon"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/equal", "k": [], "r": "r1.4", "t": "tf.keras.backend.equal"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/eval", "k": [], "r": "r1.4", "t": "tf.keras.backend.eval"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/exp", "k": [], "r": "r1.4", "t": "tf.keras.backend.exp"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/expand_dims", "k": [], "r": "r1.4", "t": "tf.keras.backend.expand_dims"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/eye", "k": [], "r": "r1.4", "t": "tf.keras.backend.eye"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/flatten", "k": [], "r": "r1.4", "t": "tf.keras.backend.flatten"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/floatx", "k": [], "r": "r1.4", "t": "tf.keras.backend.floatx"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/foldl", "k": [], "r": "r1.4", "t": "tf.keras.backend.foldl"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/foldr", "k": [], "r": "r1.4", "t": "tf.keras.backend.foldr"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/function", "k": [], "r": "r1.4", "t": "tf.keras.backend.function"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/gather", "k": [], "r": "r1.4", "t": "tf.keras.backend.gather"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/get_session", "k": [], "r": "r1.4", "t": "tf.keras.backend.get_session"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/get_uid", "k": [], "r": "r1.4", "t": "tf.keras.backend.get_uid"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/get_value", "k": [], "r": "r1.4", "t": "tf.keras.backend.get_value"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/gradients", "k": [], "r": "r1.4", "t": "tf.keras.backend.gradients"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/greater", "k": [], "r": "r1.4", "t": "tf.keras.backend.greater"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/greater_equal", "k": [], "r": "r1.4", "t": "tf.keras.backend.greater_equal"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/hard_sigmoid", "k": [], "r": "r1.4", "t": "tf.keras.backend.hard_sigmoid"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/image_data_format", "k": [], "r": "r1.4", "t": "tf.keras.backend.image_data_format"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/in_test_phase", "k": [], "r": "r1.4", "t": "tf.keras.backend.in_test_phase"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/in_top_k", "k": [], "r": "r1.4", "t": "tf.keras.backend.in_top_k"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/in_train_phase", "k": [], "r": "r1.4", "t": "tf.keras.backend.in_train_phase"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/int_shape", "k": [], "r": "r1.4", "t": "tf.keras.backend.int_shape"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/is_sparse", "k": [], "r": "r1.4", "t": "tf.keras.backend.is_sparse"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/l2_normalize", "k": [], "r": "r1.4", "t": "tf.keras.backend.l2_normalize"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/learning_phase", "k": [], "r": "r1.4", "t": "tf.keras.backend.learning_phase"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/less", "k": [], "r": "r1.4", "t": "tf.keras.backend.less"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/less_equal", "k": [], "r": "r1.4", "t": "tf.keras.backend.less_equal"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/log", "k": [], "r": "r1.4", "t": "tf.keras.backend.log"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/manual_variable_initialization", "k": [], "r": "r1.4", "t": "tf.keras.backend.manual_variable_initialization"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/map_fn", "k": [], "r": "r1.4", "t": "tf.keras.backend.map_fn"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/max", "k": [], "r": "r1.4", "t": "tf.keras.backend.max"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/maximum", "k": [], "r": "r1.4", "t": "tf.keras.backend.maximum"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/mean", "k": [], "r": "r1.4", "t": "tf.keras.backend.mean"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/min", "k": [], "r": "r1.4", "t": "tf.keras.backend.min"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/minimum", "k": [], "r": "r1.4", "t": "tf.keras.backend.minimum"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/moving_average_update", "k": [], "r": "r1.4", "t": "tf.keras.backend.moving_average_update"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/ndim", "k": [], "r": "r1.4", "t": "tf.keras.backend.ndim"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/normalize_batch_in_training", "k": [], "r": "r1.4", "t": "tf.keras.backend.normalize_batch_in_training"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/not_equal", "k": [], "r": "r1.4", "t": "tf.keras.backend.not_equal"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/one_hot", "k": [], "r": "r1.4", "t": "tf.keras.backend.one_hot"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/ones", "k": [], "r": "r1.4", "t": "tf.keras.backend.ones"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/ones_like", "k": [], "r": "r1.4", "t": "tf.keras.backend.ones_like"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/permute_dimensions", "k": [], "r": "r1.4", "t": "tf.keras.backend.permute_dimensions"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/placeholder", "k": [], "r": "r1.4", "t": "tf.keras.backend.placeholder"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/pool2d", "k": [], "r": "r1.4", "t": "tf.keras.backend.pool2d"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/pool3d", "k": [], "r": "r1.4", "t": "tf.keras.backend.pool3d"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/pow", "k": [], "r": "r1.4", "t": "tf.keras.backend.pow"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/print_tensor", "k": [], "r": "r1.4", "t": "tf.keras.backend.print_tensor"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/prod", "k": [], "r": "r1.4", "t": "tf.keras.backend.prod"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/random_binomial", "k": [], "r": "r1.4", "t": "tf.keras.backend.random_binomial"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/random_normal", "k": [], "r": "r1.4", "t": "tf.keras.backend.random_normal"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/random_normal_variable", "k": [], "r": "r1.4", "t": "tf.keras.backend.random_normal_variable"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/random_uniform", "k": [], "r": "r1.4", "t": "tf.keras.backend.random_uniform"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/random_uniform_variable", "k": [], "r": "r1.4", "t": "tf.keras.backend.random_uniform_variable"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/relu", "k": [], "r": "r1.4", "t": "tf.keras.backend.relu"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/repeat", "k": [], "r": "r1.4", "t": "tf.keras.backend.repeat"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/repeat_elements", "k": [], "r": "r1.4", "t": "tf.keras.backend.repeat_elements"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/reset_uids", "k": [], "r": "r1.4", "t": "tf.keras.backend.reset_uids"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/reshape", "k": [], "r": "r1.4", "t": "tf.keras.backend.reshape"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/resize_images", "k": [], "r": "r1.4", "t": "tf.keras.backend.resize_images"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/resize_volumes", "k": [], "r": "r1.4", "t": "tf.keras.backend.resize_volumes"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/reverse", "k": [], "r": "r1.4", "t": "tf.keras.backend.reverse"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/rnn", "k": [], "r": "r1.4", "t": "tf.keras.backend.rnn"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/round", "k": [], "r": "r1.4", "t": "tf.keras.backend.round"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/separable_conv2d", "k": [], "r": "r1.4", "t": "tf.keras.backend.separable_conv2d"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/set_epsilon", "k": [], "r": "r1.4", "t": "tf.keras.backend.set_epsilon"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/set_floatx", "k": [], "r": "r1.4", "t": "tf.keras.backend.set_floatx"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/set_image_data_format", "k": [], "r": "r1.4", "t": "tf.keras.backend.set_image_data_format"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/set_learning_phase", "k": [], "r": "r1.4", "t": "tf.keras.backend.set_learning_phase"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/set_session", "k": [], "r": "r1.4", "t": "tf.keras.backend.set_session"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/set_value", "k": [], "r": "r1.4", "t": "tf.keras.backend.set_value"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/shape", "k": [], "r": "r1.4", "t": "tf.keras.backend.shape"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/sigmoid", "k": [], "r": "r1.4", "t": "tf.keras.backend.sigmoid"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/sign", "k": [], "r": "r1.4", "t": "tf.keras.backend.sign"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/sin", "k": [], "r": "r1.4", "t": "tf.keras.backend.sin"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/softmax", "k": [], "r": "r1.4", "t": "tf.keras.backend.softmax"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/softplus", "k": [], "r": "r1.4", "t": "tf.keras.backend.softplus"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/softsign", "k": [], "r": "r1.4", "t": "tf.keras.backend.softsign"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/sparse_categorical_crossentropy", "k": [], "r": "r1.4", "t": "tf.keras.backend.sparse_categorical_crossentropy"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/spatial_2d_padding", "k": [], "r": "r1.4", "t": "tf.keras.backend.spatial_2d_padding"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/spatial_3d_padding", "k": [], "r": "r1.4", "t": "tf.keras.backend.spatial_3d_padding"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/sqrt", "k": [], "r": "r1.4", "t": "tf.keras.backend.sqrt"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/square", "k": [], "r": "r1.4", "t": "tf.keras.backend.square"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/squeeze", "k": [], "r": "r1.4", "t": "tf.keras.backend.squeeze"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/stack", "k": [], "r": "r1.4", "t": "tf.keras.backend.stack"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/std", "k": [], "r": "r1.4", "t": "tf.keras.backend.std"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/stop_gradient", "k": [], "r": "r1.4", "t": "tf.keras.backend.stop_gradient"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/sum", "k": [], "r": "r1.4", "t": "tf.keras.backend.sum"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/switch", "k": [], "r": "r1.4", "t": "tf.keras.backend.switch"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/tanh", "k": [], "r": "r1.4", "t": "tf.keras.backend.tanh"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/temporal_padding", "k": [], "r": "r1.4", "t": "tf.keras.backend.temporal_padding"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/to_dense", "k": [], "r": "r1.4", "t": "tf.keras.backend.to_dense"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/transpose", "k": [], "r": "r1.4", "t": "tf.keras.backend.transpose"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/truncated_normal", "k": [], "r": "r1.4", "t": "tf.keras.backend.truncated_normal"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/update", "k": [], "r": "r1.4", "t": "tf.keras.backend.update"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/update_add", "k": [], "r": "r1.4", "t": "tf.keras.backend.update_add"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/update_sub", "k": [], "r": "r1.4", "t": "tf.keras.backend.update_sub"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/var", "k": [], "r": "r1.4", "t": "tf.keras.backend.var"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/variable", "k": [], "r": "r1.4", "t": "tf.keras.backend.variable"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/zeros", "k": [], "r": "r1.4", "t": "tf.keras.backend.zeros"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/backend/zeros_like", "k": [], "r": "r1.4", "t": "tf.keras.backend.zeros_like"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/callbacks", "k": [], "r": "r1.4", "t": "tf.keras.callbacks"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/callbacks/BaseLogger", "k": ["__init__", "on_batch_begin", "on_batch_end", "on_epoch_begin", "on_epoch_end", "on_train_begin", "on_train_end", "set_model", "set_params"], "r": "r1.4", "t": "tf.keras.callbacks.BaseLogger"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/callbacks/CSVLogger", "k": ["__init__", "on_batch_begin", "on_batch_end", "on_epoch_begin", "on_epoch_end", "on_train_begin", "on_train_end", "set_model", "set_params"], "r": "r1.4", "t": "tf.keras.callbacks.CSVLogger"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/callbacks/Callback", "k": ["__init__", "on_batch_begin", "on_batch_end", "on_epoch_begin", "on_epoch_end", "on_train_begin", "on_train_end", "set_model", "set_params"], "r": "r1.4", "t": "tf.keras.callbacks.Callback"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/callbacks/EarlyStopping", "k": ["__init__", "on_batch_begin", "on_batch_end", "on_epoch_begin", "on_epoch_end", "on_train_begin", "on_train_end", "set_model", "set_params"], "r": "r1.4", "t": "tf.keras.callbacks.EarlyStopping"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/callbacks/History", "k": ["__init__", "on_batch_begin", "on_batch_end", "on_epoch_begin", "on_epoch_end", "on_train_begin", "on_train_end", "set_model", "set_params"], "r": "r1.4", "t": "tf.keras.callbacks.History"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/callbacks/LambdaCallback", "k": ["__init__", "on_batch_begin", "on_batch_end", "on_epoch_begin", "on_epoch_end", "on_train_begin", "on_train_end", "set_model", "set_params"], "r": "r1.4", "t": "tf.keras.callbacks.LambdaCallback"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/callbacks/LearningRateScheduler", "k": ["__init__", "on_batch_begin", "on_batch_end", "on_epoch_begin", "on_epoch_end", "on_train_begin", "on_train_end", "set_model", "set_params"], "r": "r1.4", "t": "tf.keras.callbacks.LearningRateScheduler"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/callbacks/ModelCheckpoint", "k": ["__init__", "on_batch_begin", "on_batch_end", "on_epoch_begin", "on_epoch_end", "on_train_begin", "on_train_end", "set_model", "set_params"], "r": "r1.4", "t": "tf.keras.callbacks.ModelCheckpoint"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/callbacks/ProgbarLogger", "k": ["__init__", "on_batch_begin", "on_batch_end", "on_epoch_begin", "on_epoch_end", "on_train_begin", "on_train_end", "set_model", "set_params"], "r": "r1.4", "t": "tf.keras.callbacks.ProgbarLogger"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/callbacks/ReduceLROnPlateau", "k": ["__init__", "in_cooldown", "on_batch_begin", "on_batch_end", "on_epoch_begin", "on_epoch_end", "on_train_begin", "on_train_end", "set_model", "set_params"], "r": "r1.4", "t": "tf.keras.callbacks.ReduceLROnPlateau"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/callbacks/RemoteMonitor", "k": ["__init__", "on_batch_begin", "on_batch_end", "on_epoch_begin", "on_epoch_end", "on_train_begin", "on_train_end", "set_model", "set_params"], "r": "r1.4", "t": "tf.keras.callbacks.RemoteMonitor"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/callbacks/TensorBoard", "k": ["__init__", "on_batch_begin", "on_batch_end", "on_epoch_begin", "on_epoch_end", "on_train_begin", "on_train_end", "set_model", "set_params"], "r": "r1.4", "t": "tf.keras.callbacks.TensorBoard"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/callbacks/TerminateOnNaN", "k": ["__init__", "on_batch_begin", "on_batch_end", "on_epoch_begin", "on_epoch_end", "on_train_begin", "on_train_end", "set_model", "set_params"], "r": "r1.4", "t": "tf.keras.callbacks.TerminateOnNaN"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/constraints", "k": [], "r": "r1.4", "t": "tf.keras.constraints"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/constraints/Constraint", "k": ["__call__", "get_config"], "r": "r1.4", "t": "tf.keras.constraints.Constraint"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/constraints/MaxNorm", "k": ["__call__", "__init__", "get_config"], "r": "r1.4", "t": "tf.keras.constraints.MaxNorm"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/constraints/MinMaxNorm", "k": ["__call__", "__init__", "get_config"], "r": "r1.4", "t": "tf.keras.constraints.MinMaxNorm"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/constraints/NonNeg", "k": ["__call__", "get_config"], "r": "r1.4", "t": "tf.keras.constraints.NonNeg"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/constraints/UnitNorm", "k": ["__call__", "__init__", "get_config"], "r": "r1.4", "t": "tf.keras.constraints.UnitNorm"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/constraints/deserialize", "k": [], "r": "r1.4", "t": "tf.keras.constraints.deserialize"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/constraints/get", "k": [], "r": "r1.4", "t": "tf.keras.constraints.get"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/constraints/serialize", "k": [], "r": "r1.4", "t": "tf.keras.constraints.serialize"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/datasets", "k": [], "r": "r1.4", "t": "tf.keras.datasets"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/datasets/boston_housing", "k": [], "r": "r1.4", "t": "tf.keras.datasets.boston_housing"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/datasets/boston_housing/load_data", "k": [], "r": "r1.4", "t": "tf.keras.datasets.boston_housing.load_data"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/datasets/cifar10", "k": [], "r": "r1.4", "t": "tf.keras.datasets.cifar10"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/datasets/cifar10/load_data", "k": [], "r": "r1.4", "t": "tf.keras.datasets.cifar10.load_data"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/datasets/cifar100", "k": [], "r": "r1.4", "t": "tf.keras.datasets.cifar100"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/datasets/cifar100/load_data", "k": [], "r": "r1.4", "t": "tf.keras.datasets.cifar100.load_data"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/datasets/imdb", "k": [], "r": "r1.4", "t": "tf.keras.datasets.imdb"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/datasets/imdb/get_word_index", "k": [], "r": "r1.4", "t": "tf.keras.datasets.imdb.get_word_index"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/datasets/imdb/load_data", "k": [], "r": "r1.4", "t": "tf.keras.datasets.imdb.load_data"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/datasets/mnist", "k": [], "r": "r1.4", "t": "tf.keras.datasets.mnist"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/datasets/mnist/load_data", "k": [], "r": "r1.4", "t": "tf.keras.datasets.mnist.load_data"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/datasets/reuters", "k": [], "r": "r1.4", "t": "tf.keras.datasets.reuters"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/datasets/reuters/get_word_index", "k": [], "r": "r1.4", "t": "tf.keras.datasets.reuters.get_word_index"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/datasets/reuters/load_data", "k": [], "r": "r1.4", "t": "tf.keras.datasets.reuters.load_data"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/estimator", "k": [], "r": "r1.4", "t": "tf.keras.estimator"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/estimator/model_to_estimator", "k": [], "r": "r1.4", "t": "tf.keras.estimator.model_to_estimator"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/initializers", "k": [], "r": "r1.4", "t": "tf.keras.initializers"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/initializers/Initializer", "k": ["__call__", "from_config", "get_config"], "r": "r1.4", "t": "tf.keras.initializers.Initializer"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/initializers/deserialize", "k": [], "r": "r1.4", "t": "tf.keras.initializers.deserialize"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/initializers/get", "k": [], "r": "r1.4", "t": "tf.keras.initializers.get"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/initializers/glorot_normal", "k": [], "r": "r1.4", "t": "tf.keras.initializers.glorot_normal"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/initializers/glorot_uniform", "k": [], "r": "r1.4", "t": "tf.keras.initializers.glorot_uniform"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/initializers/he_normal", "k": [], "r": "r1.4", "t": "tf.keras.initializers.he_normal"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/initializers/he_uniform", "k": [], "r": "r1.4", "t": "tf.keras.initializers.he_uniform"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/initializers/lecun_normal", "k": [], "r": "r1.4", "t": "tf.keras.initializers.lecun_normal"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/initializers/lecun_uniform", "k": [], "r": "r1.4", "t": "tf.keras.initializers.lecun_uniform"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/initializers/serialize", "k": [], "r": "r1.4", "t": "tf.keras.initializers.serialize"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/layers", "k": [], "r": "r1.4", "t": "tf.keras.layers"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/layers/Activation", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.4", "t": "tf.keras.layers.Activation"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/layers/ActivityRegularization", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.4", "t": "tf.keras.layers.ActivityRegularization"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/layers/Add", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.4", "t": "tf.keras.layers.Add"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/layers/AlphaDropout", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.4", "t": "tf.keras.layers.AlphaDropout"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/layers/Average", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.4", "t": "tf.keras.layers.Average"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/layers/AveragePooling1D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.4", "t": "tf.keras.layers.AveragePooling1D"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/layers/AveragePooling2D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.4", "t": "tf.keras.layers.AveragePooling2D"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/layers/AveragePooling3D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.4", "t": "tf.keras.layers.AveragePooling3D"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/layers/BatchNormalization", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.4", "t": "tf.keras.layers.BatchNormalization"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/layers/Bidirectional", "k": ["activity_regularizer", "constraints", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "reset_states", "set_weights"], "r": "r1.4", "t": "tf.keras.layers.Bidirectional"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/layers/Concatenate", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.4", "t": "tf.keras.layers.Concatenate"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/layers/Conv1D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.4", "t": "tf.keras.layers.Conv1D"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/layers/Conv2D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.4", "t": "tf.keras.layers.Conv2D"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/layers/Conv2DTranspose", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.4", "t": "tf.keras.layers.Conv2DTranspose"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/layers/Conv3D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.4", "t": "tf.keras.layers.Conv3D"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/layers/Conv3DTranspose", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.4", "t": "tf.keras.layers.Conv3DTranspose"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/layers/ConvLSTM2D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_constants", "get_initial_state", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "input_conv", "preprocess_input", "reccurent_conv", "reset_states", "set_weights", "step"], "r": "r1.4", "t": "tf.keras.layers.ConvLSTM2D"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/layers/Cropping1D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.4", "t": "tf.keras.layers.Cropping1D"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/layers/Cropping2D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.4", "t": "tf.keras.layers.Cropping2D"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/layers/Cropping3D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.4", "t": "tf.keras.layers.Cropping3D"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/layers/Dense", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.4", "t": "tf.keras.layers.Dense"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/layers/Dot", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.4", "t": "tf.keras.layers.Dot"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/layers/Dropout", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.4", "t": "tf.keras.layers.Dropout"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/layers/ELU", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.4", "t": "tf.keras.layers.ELU"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/layers/Embedding", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.4", "t": "tf.keras.layers.Embedding"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/layers/Flatten", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.4", "t": "tf.keras.layers.Flatten"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/layers/GRU", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_constants", "get_initial_state", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "preprocess_input", "reset_states", "set_weights", "step"], "r": "r1.4", "t": "tf.keras.layers.GRU"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/layers/GaussianDropout", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.4", "t": "tf.keras.layers.GaussianDropout"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/layers/GaussianNoise", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.4", "t": "tf.keras.layers.GaussianNoise"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/layers/GlobalAveragePooling1D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.4", "t": "tf.keras.layers.GlobalAveragePooling1D"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/layers/GlobalAveragePooling2D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.4", "t": "tf.keras.layers.GlobalAveragePooling2D"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/layers/GlobalAveragePooling3D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.4", "t": "tf.keras.layers.GlobalAveragePooling3D"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/layers/GlobalMaxPool1D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.4", "t": "tf.keras.layers.GlobalMaxPool1D"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/layers/GlobalMaxPool2D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.4", "t": "tf.keras.layers.GlobalMaxPool2D"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/layers/GlobalMaxPool3D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.4", "t": "tf.keras.layers.GlobalMaxPool3D"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/layers/InputLayer", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.4", "t": "tf.keras.layers.InputLayer"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/layers/LSTM", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_constants", "get_initial_state", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "preprocess_input", "reset_states", "set_weights", "step"], "r": "r1.4", "t": "tf.keras.layers.LSTM"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/layers/Lambda", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.4", "t": "tf.keras.layers.Lambda"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/layers/Layer", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.4", "t": "tf.keras.layers.Layer"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/layers/LeakyReLU", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.4", "t": "tf.keras.layers.LeakyReLU"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/layers/LocallyConnected1D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.4", "t": "tf.keras.layers.LocallyConnected1D"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/layers/LocallyConnected2D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.4", "t": "tf.keras.layers.LocallyConnected2D"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/layers/Masking", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.4", "t": "tf.keras.layers.Masking"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/layers/MaxPool1D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.4", "t": "tf.keras.layers.MaxPool1D"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/layers/MaxPool2D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.4", "t": "tf.keras.layers.MaxPool2D"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/layers/MaxPool3D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.4", "t": "tf.keras.layers.MaxPool3D"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/layers/Maximum", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.4", "t": "tf.keras.layers.Maximum"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/layers/Multiply", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.4", "t": "tf.keras.layers.Multiply"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/layers/PReLU", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.4", "t": "tf.keras.layers.PReLU"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/layers/Permute", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.4", "t": "tf.keras.layers.Permute"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/layers/RepeatVector", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.4", "t": "tf.keras.layers.RepeatVector"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/layers/Reshape", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.4", "t": "tf.keras.layers.Reshape"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/layers/SeparableConv2D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.4", "t": "tf.keras.layers.SeparableConv2D"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/layers/SimpleRNN", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_constants", "get_initial_state", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "preprocess_input", "reset_states", "set_weights", "step"], "r": "r1.4", "t": "tf.keras.layers.SimpleRNN"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/layers/SpatialDropout1D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.4", "t": "tf.keras.layers.SpatialDropout1D"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/layers/SpatialDropout2D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.4", "t": "tf.keras.layers.SpatialDropout2D"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/layers/SpatialDropout3D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.4", "t": "tf.keras.layers.SpatialDropout3D"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/layers/ThresholdedReLU", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.4", "t": "tf.keras.layers.ThresholdedReLU"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/layers/TimeDistributed", "k": ["activity_regularizer", "constraints", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.4", "t": "tf.keras.layers.TimeDistributed"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/layers/UpSampling1D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.4", "t": "tf.keras.layers.UpSampling1D"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/layers/UpSampling2D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.4", "t": "tf.keras.layers.UpSampling2D"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/layers/UpSampling3D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.4", "t": "tf.keras.layers.UpSampling3D"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/layers/Wrapper", "k": ["activity_regularizer", "constraints", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.4", "t": "tf.keras.layers.Wrapper"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/layers/ZeroPadding1D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.4", "t": "tf.keras.layers.ZeroPadding1D"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/layers/ZeroPadding2D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.4", "t": "tf.keras.layers.ZeroPadding2D"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/layers/ZeroPadding3D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.4", "t": "tf.keras.layers.ZeroPadding3D"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/layers/add", "k": [], "r": "r1.4", "t": "tf.keras.layers.add"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/layers/average", "k": [], "r": "r1.4", "t": "tf.keras.layers.average"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/layers/concatenate", "k": [], "r": "r1.4", "t": "tf.keras.layers.concatenate"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/layers/dot", "k": [], "r": "r1.4", "t": "tf.keras.layers.dot"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/layers/maximum", "k": [], "r": "r1.4", "t": "tf.keras.layers.maximum"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/layers/multiply", "k": [], "r": "r1.4", "t": "tf.keras.layers.multiply"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/losses", "k": [], "r": "r1.4", "t": "tf.keras.losses"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/losses/binary_crossentropy", "k": [], "r": "r1.4", "t": "tf.keras.losses.binary_crossentropy"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/losses/categorical_crossentropy", "k": [], "r": "r1.4", "t": "tf.keras.losses.categorical_crossentropy"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/losses/categorical_hinge", "k": [], "r": "r1.4", "t": "tf.keras.losses.categorical_hinge"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/losses/cosine_proximity", "k": [], "r": "r1.4", "t": "tf.keras.losses.cosine_proximity"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/losses/deserialize", "k": [], "r": "r1.4", "t": "tf.keras.losses.deserialize"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/losses/get", "k": [], "r": "r1.4", "t": "tf.keras.losses.get"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/losses/hinge", "k": [], "r": "r1.4", "t": "tf.keras.losses.hinge"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/losses/kullback_leibler_divergence", "k": [], "r": "r1.4", "t": "tf.keras.losses.kullback_leibler_divergence"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/losses/logcosh", "k": [], "r": "r1.4", "t": "tf.keras.losses.logcosh"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/losses/mean_absolute_error", "k": [], "r": "r1.4", "t": "tf.keras.losses.mean_absolute_error"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/losses/mean_absolute_percentage_error", "k": [], "r": "r1.4", "t": "tf.keras.losses.mean_absolute_percentage_error"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/losses/mean_squared_error", "k": [], "r": "r1.4", "t": "tf.keras.losses.mean_squared_error"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/losses/mean_squared_logarithmic_error", "k": [], "r": "r1.4", "t": "tf.keras.losses.mean_squared_logarithmic_error"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/losses/poisson", "k": [], "r": "r1.4", "t": "tf.keras.losses.poisson"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/losses/serialize", "k": [], "r": "r1.4", "t": "tf.keras.losses.serialize"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/losses/sparse_categorical_crossentropy", "k": [], "r": "r1.4", "t": "tf.keras.losses.sparse_categorical_crossentropy"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/losses/squared_hinge", "k": [], "r": "r1.4", "t": "tf.keras.losses.squared_hinge"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/metrics", "k": [], "r": "r1.4", "t": "tf.keras.metrics"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/metrics/binary_accuracy", "k": [], "r": "r1.4", "t": "tf.keras.metrics.binary_accuracy"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/metrics/categorical_accuracy", "k": [], "r": "r1.4", "t": "tf.keras.metrics.categorical_accuracy"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/metrics/deserialize", "k": [], "r": "r1.4", "t": "tf.keras.metrics.deserialize"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/metrics/get", "k": [], "r": "r1.4", "t": "tf.keras.metrics.get"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/metrics/serialize", "k": [], "r": "r1.4", "t": "tf.keras.metrics.serialize"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/metrics/sparse_top_k_categorical_accuracy", "k": [], "r": "r1.4", "t": "tf.keras.metrics.sparse_top_k_categorical_accuracy"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/metrics/top_k_categorical_accuracy", "k": [], "r": "r1.4", "t": "tf.keras.metrics.top_k_categorical_accuracy"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/models", "k": [], "r": "r1.4", "t": "tf.keras.models"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/models/Model", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "input_spec", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "state_updates", "stateful", "trainable_variables", "trainable_weights", "updates", "uses_learning_phase", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compile", "compute_mask", "count_params", "evaluate", "evaluate_generator", "fit", "fit_generator", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_layer", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "load_weights", "predict", "predict_generator", "predict_on_batch", "reset_states", "save", "save_weights", "set_weights", "summary", "test_on_batch", "to_json", "to_yaml", "train_on_batch"], "r": "r1.4", "t": "tf.keras.models.Model"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/models/Sequential", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "input_spec", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "regularizers", "scope_name", "state_updates", "stateful", "trainable", "trainable_variables", "trainable_weights", "updates", "uses_learning_phase", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compile", "compute_mask", "count_params", "evaluate", "evaluate_generator", "fit", "fit_generator", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_layer", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "load_weights", "pop", "predict", "predict_classes", "predict_generator", "predict_on_batch", "predict_proba", "reset_states", "save", "save_weights", "set_weights", "summary", "test_on_batch", "to_json", "to_yaml", "train_on_batch"], "r": "r1.4", "t": "tf.keras.models.Sequential"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/models/load_model", "k": [], "r": "r1.4", "t": "tf.keras.models.load_model"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/models/model_from_config", "k": [], "r": "r1.4", "t": "tf.keras.models.model_from_config"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/models/model_from_json", "k": [], "r": "r1.4", "t": "tf.keras.models.model_from_json"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/models/model_from_yaml", "k": [], "r": "r1.4", "t": "tf.keras.models.model_from_yaml"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/models/save_model", "k": [], "r": "r1.4", "t": "tf.keras.models.save_model"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/optimizers", "k": [], "r": "r1.4", "t": "tf.keras.optimizers"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/optimizers/Adadelta", "k": ["__init__", "from_config", "get_config", "get_gradients", "get_updates", "get_weights", "set_weights"], "r": "r1.4", "t": "tf.keras.optimizers.Adadelta"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/optimizers/Adagrad", "k": ["__init__", "from_config", "get_config", "get_gradients", "get_updates", "get_weights", "set_weights"], "r": "r1.4", "t": "tf.keras.optimizers.Adagrad"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/optimizers/Adam", "k": ["__init__", "from_config", "get_config", "get_gradients", "get_updates", "get_weights", "set_weights"], "r": "r1.4", "t": "tf.keras.optimizers.Adam"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/optimizers/Adamax", "k": ["__init__", "from_config", "get_config", "get_gradients", "get_updates", "get_weights", "set_weights"], "r": "r1.4", "t": "tf.keras.optimizers.Adamax"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/optimizers/Nadam", "k": ["__init__", "from_config", "get_config", "get_gradients", "get_updates", "get_weights", "set_weights"], "r": "r1.4", "t": "tf.keras.optimizers.Nadam"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/optimizers/Optimizer", "k": ["__init__", "from_config", "get_config", "get_gradients", "get_updates", "get_weights", "set_weights"], "r": "r1.4", "t": "tf.keras.optimizers.Optimizer"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/optimizers/RMSprop", "k": ["__init__", "from_config", "get_config", "get_gradients", "get_updates", "get_weights", "set_weights"], "r": "r1.4", "t": "tf.keras.optimizers.RMSprop"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/optimizers/SGD", "k": ["__init__", "from_config", "get_config", "get_gradients", "get_updates", "get_weights", "set_weights"], "r": "r1.4", "t": "tf.keras.optimizers.SGD"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/optimizers/deserialize", "k": [], "r": "r1.4", "t": "tf.keras.optimizers.deserialize"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/optimizers/get", "k": [], "r": "r1.4", "t": "tf.keras.optimizers.get"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/optimizers/serialize", "k": [], "r": "r1.4", "t": "tf.keras.optimizers.serialize"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/preprocessing", "k": [], "r": "r1.4", "t": "tf.keras.preprocessing"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/preprocessing/image", "k": [], "r": "r1.4", "t": "tf.keras.preprocessing.image"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/preprocessing/image/DirectoryIterator", "k": ["__init__", "__iter__", "__next__", "next", "reset"], "r": "r1.4", "t": "tf.keras.preprocessing.image.DirectoryIterator"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/preprocessing/image/ImageDataGenerator", "k": ["__init__", "fit", "flow", "flow_from_directory", "random_transform", "standardize"], "r": "r1.4", "t": "tf.keras.preprocessing.image.ImageDataGenerator"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/preprocessing/image/Iterator", "k": ["__init__", "__iter__", "__next__", "reset"], "r": "r1.4", "t": "tf.keras.preprocessing.image.Iterator"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/preprocessing/image/NumpyArrayIterator", "k": ["__init__", "__iter__", "__next__", "next", "reset"], "r": "r1.4", "t": "tf.keras.preprocessing.image.NumpyArrayIterator"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/preprocessing/image/apply_transform", "k": [], "r": "r1.4", "t": "tf.keras.preprocessing.image.apply_transform"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/preprocessing/image/array_to_img", "k": [], "r": "r1.4", "t": "tf.keras.preprocessing.image.array_to_img"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/preprocessing/image/flip_axis", "k": [], "r": "r1.4", "t": "tf.keras.preprocessing.image.flip_axis"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/preprocessing/image/img_to_array", "k": [], "r": "r1.4", "t": "tf.keras.preprocessing.image.img_to_array"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/preprocessing/image/load_img", "k": [], "r": "r1.4", "t": "tf.keras.preprocessing.image.load_img"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/preprocessing/image/random_channel_shift", "k": [], "r": "r1.4", "t": "tf.keras.preprocessing.image.random_channel_shift"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/preprocessing/image/random_rotation", "k": [], "r": "r1.4", "t": "tf.keras.preprocessing.image.random_rotation"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/preprocessing/image/random_shear", "k": [], "r": "r1.4", "t": "tf.keras.preprocessing.image.random_shear"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/preprocessing/image/random_shift", "k": [], "r": "r1.4", "t": "tf.keras.preprocessing.image.random_shift"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/preprocessing/image/random_zoom", "k": [], "r": "r1.4", "t": "tf.keras.preprocessing.image.random_zoom"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/preprocessing/sequence", "k": [], "r": "r1.4", "t": "tf.keras.preprocessing.sequence"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/preprocessing/sequence/make_sampling_table", "k": [], "r": "r1.4", "t": "tf.keras.preprocessing.sequence.make_sampling_table"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/preprocessing/sequence/pad_sequences", "k": [], "r": "r1.4", "t": "tf.keras.preprocessing.sequence.pad_sequences"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/preprocessing/sequence/skipgrams", "k": [], "r": "r1.4", "t": "tf.keras.preprocessing.sequence.skipgrams"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/preprocessing/text", "k": [], "r": "r1.4", "t": "tf.keras.preprocessing.text"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/preprocessing/text/Tokenizer", "k": ["__init__", "fit_on_sequences", "fit_on_texts", "sequences_to_matrix", "texts_to_matrix", "texts_to_sequences", "texts_to_sequences_generator"], "r": "r1.4", "t": "tf.keras.preprocessing.text.Tokenizer"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/preprocessing/text/one_hot", "k": [], "r": "r1.4", "t": "tf.keras.preprocessing.text.one_hot"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/preprocessing/text/text_to_word_sequence", "k": [], "r": "r1.4", "t": "tf.keras.preprocessing.text.text_to_word_sequence"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/regularizers", "k": [], "r": "r1.4", "t": "tf.keras.regularizers"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/regularizers/L1L2", "k": ["__call__", "__init__", "from_config", "get_config"], "r": "r1.4", "t": "tf.keras.regularizers.L1L2"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/regularizers/Regularizer", "k": ["__call__", "from_config"], "r": "r1.4", "t": "tf.keras.regularizers.Regularizer"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/regularizers/deserialize", "k": [], "r": "r1.4", "t": "tf.keras.regularizers.deserialize"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/regularizers/get", "k": [], "r": "r1.4", "t": "tf.keras.regularizers.get"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/regularizers/l1", "k": [], "r": "r1.4", "t": "tf.keras.regularizers.l1"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/regularizers/l1_l2", "k": [], "r": "r1.4", "t": "tf.keras.regularizers.l1_l2"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/regularizers/l2", "k": [], "r": "r1.4", "t": "tf.keras.regularizers.l2"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/regularizers/serialize", "k": [], "r": "r1.4", "t": "tf.keras.regularizers.serialize"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/utils", "k": [], "r": "r1.4", "t": "tf.keras.utils"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/utils/CustomObjectScope", "k": ["__enter__", "__exit__", "__init__"], "r": "r1.4", "t": "tf.keras.utils.CustomObjectScope"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/utils/GeneratorEnqueuer", "k": ["__init__", "get", "is_running", "start", "stop"], "r": "r1.4", "t": "tf.keras.utils.GeneratorEnqueuer"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/utils/HDF5Matrix", "k": ["dtype", "ndim", "shape", "size", "__getitem__", "__init__", "__len__", "refs"], "r": "r1.4", "t": "tf.keras.utils.HDF5Matrix"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/utils/Progbar", "k": ["__init__", "add", "update"], "r": "r1.4", "t": "tf.keras.utils.Progbar"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/utils/Sequence", "k": ["__getitem__", "__len__", "on_epoch_end"], "r": "r1.4", "t": "tf.keras.utils.Sequence"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/utils/SequenceEnqueuer", "k": ["get", "is_running", "start", "stop"], "r": "r1.4", "t": "tf.keras.utils.SequenceEnqueuer"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/utils/convert_all_kernels_in_model", "k": [], "r": "r1.4", "t": "tf.keras.utils.convert_all_kernels_in_model"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/utils/custom_object_scope", "k": [], "r": "r1.4", "t": "tf.keras.utils.custom_object_scope"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/utils/deserialize_keras_object", "k": [], "r": "r1.4", "t": "tf.keras.utils.deserialize_keras_object"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/utils/get_custom_objects", "k": [], "r": "r1.4", "t": "tf.keras.utils.get_custom_objects"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/utils/get_file", "k": [], "r": "r1.4", "t": "tf.keras.utils.get_file"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/utils/normalize", "k": [], "r": "r1.4", "t": "tf.keras.utils.normalize"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/utils/plot_model", "k": [], "r": "r1.4", "t": "tf.keras.utils.plot_model"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/utils/serialize_keras_object", "k": [], "r": "r1.4", "t": "tf.keras.utils.serialize_keras_object"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/utils/to_categorical", "k": [], "r": "r1.4", "t": "tf.keras.utils.to_categorical"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/wrappers", "k": [], "r": "r1.4", "t": "tf.keras.wrappers"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/wrappers/scikit_learn", "k": [], "r": "r1.4", "t": "tf.keras.wrappers.scikit_learn"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/wrappers/scikit_learn/KerasClassifier", "k": ["__init__", "check_params", "filter_sk_params", "fit", "get_params", "predict", "predict_proba", "score", "set_params"], "r": "r1.4", "t": "tf.keras.wrappers.scikit_learn.KerasClassifier"}, {"p": "/versions/r1.4/api_docs/python/tf/keras/wrappers/scikit_learn/KerasRegressor", "k": ["__init__", "check_params", "filter_sk_params", "fit", "get_params", "predict", "score", "set_params"], "r": "r1.4", "t": "tf.keras.wrappers.scikit_learn.KerasRegressor"}, {"p": "/versions/r1.4/api_docs/python/tf/layers", "k": [], "r": "r1.4", "t": "tf.layers"}, {"p": "/versions/r1.4/api_docs/python/tf/layers/AveragePooling1D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "r1.4", "t": "tf.layers.AveragePooling1D"}, {"p": "/versions/r1.4/api_docs/python/tf/layers/AveragePooling2D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "r1.4", "t": "tf.layers.AveragePooling2D"}, {"p": "/versions/r1.4/api_docs/python/tf/layers/AveragePooling3D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "r1.4", "t": "tf.layers.AveragePooling3D"}, {"p": "/versions/r1.4/api_docs/python/tf/layers/BatchNormalization", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "r1.4", "t": "tf.layers.BatchNormalization"}, {"p": "/versions/r1.4/api_docs/python/tf/layers/Conv1D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "r1.4", "t": "tf.layers.Conv1D"}, {"p": "/versions/r1.4/api_docs/python/tf/layers/Conv2D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "r1.4", "t": "tf.layers.Conv2D"}, {"p": "/versions/r1.4/api_docs/python/tf/layers/Conv2DTranspose", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "r1.4", "t": "tf.layers.Conv2DTranspose"}, {"p": "/versions/r1.4/api_docs/python/tf/layers/Conv3D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "r1.4", "t": "tf.layers.Conv3D"}, {"p": "/versions/r1.4/api_docs/python/tf/layers/Conv3DTranspose", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "r1.4", "t": "tf.layers.Conv3DTranspose"}, {"p": "/versions/r1.4/api_docs/python/tf/layers/Dense", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "r1.4", "t": "tf.layers.Dense"}, {"p": "/versions/r1.4/api_docs/python/tf/layers/Dropout", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "r1.4", "t": "tf.layers.Dropout"}, {"p": "/versions/r1.4/api_docs/python/tf/layers/Flatten", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "r1.4", "t": "tf.layers.Flatten"}, {"p": "/versions/r1.4/api_docs/python/tf/layers/Input", "k": [], "r": "r1.4", "t": "tf.layers.Input"}, {"p": "/versions/r1.4/api_docs/python/tf/layers/InputSpec", "k": ["__init__"], "r": "r1.4", "t": "tf.layers.InputSpec"}, {"p": "/versions/r1.4/api_docs/python/tf/layers/Layer", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "r1.4", "t": "tf.layers.Layer"}, {"p": "/versions/r1.4/api_docs/python/tf/layers/MaxPooling1D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "r1.4", "t": "tf.layers.MaxPooling1D"}, {"p": "/versions/r1.4/api_docs/python/tf/layers/MaxPooling2D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "r1.4", "t": "tf.layers.MaxPooling2D"}, {"p": "/versions/r1.4/api_docs/python/tf/layers/MaxPooling3D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "r1.4", "t": "tf.layers.MaxPooling3D"}, {"p": "/versions/r1.4/api_docs/python/tf/layers/SeparableConv2D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "r1.4", "t": "tf.layers.SeparableConv2D"}, {"p": "/versions/r1.4/api_docs/python/tf/layers/average_pooling1d", "k": [], "r": "r1.4", "t": "tf.layers.average_pooling1d"}, {"p": "/versions/r1.4/api_docs/python/tf/layers/average_pooling2d", "k": [], "r": "r1.4", "t": "tf.layers.average_pooling2d"}, {"p": "/versions/r1.4/api_docs/python/tf/layers/average_pooling3d", "k": [], "r": "r1.4", "t": "tf.layers.average_pooling3d"}, {"p": "/versions/r1.4/api_docs/python/tf/layers/batch_normalization", "k": [], "r": "r1.4", "t": "tf.layers.batch_normalization"}, {"p": "/versions/r1.4/api_docs/python/tf/layers/conv1d", "k": [], "r": "r1.4", "t": "tf.layers.conv1d"}, {"p": "/versions/r1.4/api_docs/python/tf/layers/conv2d", "k": [], "r": "r1.4", "t": "tf.layers.conv2d"}, {"p": "/versions/r1.4/api_docs/python/tf/layers/conv2d_transpose", "k": [], "r": "r1.4", "t": "tf.layers.conv2d_transpose"}, {"p": "/versions/r1.4/api_docs/python/tf/layers/conv3d", "k": [], "r": "r1.4", "t": "tf.layers.conv3d"}, {"p": "/versions/r1.4/api_docs/python/tf/layers/conv3d_transpose", "k": [], "r": "r1.4", "t": "tf.layers.conv3d_transpose"}, {"p": "/versions/r1.4/api_docs/python/tf/layers/dense", "k": [], "r": "r1.4", "t": "tf.layers.dense"}, {"p": "/versions/r1.4/api_docs/python/tf/layers/dropout", "k": [], "r": "r1.4", "t": "tf.layers.dropout"}, {"p": "/versions/r1.4/api_docs/python/tf/layers/flatten", "k": [], "r": "r1.4", "t": "tf.layers.flatten"}, {"p": "/versions/r1.4/api_docs/python/tf/layers/max_pooling1d", "k": [], "r": "r1.4", "t": "tf.layers.max_pooling1d"}, {"p": "/versions/r1.4/api_docs/python/tf/layers/max_pooling2d", "k": [], "r": "r1.4", "t": "tf.layers.max_pooling2d"}, {"p": "/versions/r1.4/api_docs/python/tf/layers/max_pooling3d", "k": [], "r": "r1.4", "t": "tf.layers.max_pooling3d"}, {"p": "/versions/r1.4/api_docs/python/tf/layers/separable_conv2d", "k": [], "r": "r1.4", "t": "tf.layers.separable_conv2d"}, {"p": "/versions/r1.4/api_docs/python/tf/lbeta", "k": [], "r": "r1.4", "t": "tf.lbeta"}, {"p": "/versions/r1.4/api_docs/python/tf/less", "k": [], "r": "r1.4", "t": "tf.less"}, {"p": "/versions/r1.4/api_docs/python/tf/less_equal", "k": [], "r": "r1.4", "t": "tf.less_equal"}, {"p": "/versions/r1.4/api_docs/python/tf/lgamma", "k": [], "r": "r1.4", "t": "tf.lgamma"}, {"p": "/versions/r1.4/api_docs/python/tf/lin_space", "k": [], "r": "r1.4", "t": "tf.lin_space"}, {"p": "/versions/r1.4/api_docs/python/tf/linalg", "k": [], "r": "r1.4", "t": "tf.linalg"}, {"p": "/versions/r1.4/api_docs/python/tf/linalg/logdet", "k": [], "r": "r1.4", "t": "tf.linalg.logdet"}, {"p": "/versions/r1.4/api_docs/python/tf/linalg/slogdet", "k": [], "r": "r1.4", "t": "tf.linalg.slogdet"}, {"p": "/versions/r1.4/api_docs/python/tf/load_file_system_library", "k": [], "r": "r1.4", "t": "tf.load_file_system_library"}, {"p": "/versions/r1.4/api_docs/python/tf/load_op_library", "k": [], "r": "r1.4", "t": "tf.load_op_library"}, {"p": "/versions/r1.4/api_docs/python/tf/local_variables", "k": [], "r": "r1.4", "t": "tf.local_variables"}, {"p": "/versions/r1.4/api_docs/python/tf/local_variables_initializer", "k": [], "r": "r1.4", "t": "tf.local_variables_initializer"}, {"p": "/versions/r1.4/api_docs/python/tf/log", "k": [], "r": "r1.4", "t": "tf.log"}, {"p": "/versions/r1.4/api_docs/python/tf/log1p", "k": [], "r": "r1.4", "t": "tf.log1p"}, {"p": "/versions/r1.4/api_docs/python/tf/log_sigmoid", "k": [], "r": "r1.4", "t": "tf.log_sigmoid"}, {"p": "/versions/r1.4/api_docs/python/tf/logging", "k": ["DEBUG", "ERROR", "FATAL", "INFO", "WARN"], "r": "r1.4", "t": "tf.logging"}, {"p": "/versions/r1.4/api_docs/python/tf/logging/TaskLevelStatusMessage", "k": [], "r": "r1.4", "t": "tf.logging.TaskLevelStatusMessage"}, {"p": "/versions/r1.4/api_docs/python/tf/logging/debug", "k": [], "r": "r1.4", "t": "tf.logging.debug"}, {"p": "/versions/r1.4/api_docs/python/tf/logging/error", "k": [], "r": "r1.4", "t": "tf.logging.error"}, {"p": "/versions/r1.4/api_docs/python/tf/logging/fatal", "k": [], "r": "r1.4", "t": "tf.logging.fatal"}, {"p": "/versions/r1.4/api_docs/python/tf/logging/flush", "k": [], "r": "r1.4", "t": "tf.logging.flush"}, {"p": "/versions/r1.4/api_docs/python/tf/logging/get_verbosity", "k": [], "r": "r1.4", "t": "tf.logging.get_verbosity"}, {"p": "/versions/r1.4/api_docs/python/tf/logging/info", "k": [], "r": "r1.4", "t": "tf.logging.info"}, {"p": "/versions/r1.4/api_docs/python/tf/logging/log", "k": [], "r": "r1.4", "t": "tf.logging.log"}, {"p": "/versions/r1.4/api_docs/python/tf/logging/log_every_n", "k": [], "r": "r1.4", "t": "tf.logging.log_every_n"}, {"p": "/versions/r1.4/api_docs/python/tf/logging/log_first_n", "k": [], "r": "r1.4", "t": "tf.logging.log_first_n"}, {"p": "/versions/r1.4/api_docs/python/tf/logging/log_if", "k": [], "r": "r1.4", "t": "tf.logging.log_if"}, {"p": "/versions/r1.4/api_docs/python/tf/logging/set_verbosity", "k": [], "r": "r1.4", "t": "tf.logging.set_verbosity"}, {"p": "/versions/r1.4/api_docs/python/tf/logging/vlog", "k": [], "r": "r1.4", "t": "tf.logging.vlog"}, {"p": "/versions/r1.4/api_docs/python/tf/logging/warn", "k": [], "r": "r1.4", "t": "tf.logging.warn"}, {"p": "/versions/r1.4/api_docs/python/tf/logging/warning", "k": [], "r": "r1.4", "t": "tf.logging.warning"}, {"p": "/versions/r1.4/api_docs/python/tf/logical_and", "k": [], "r": "r1.4", "t": "tf.logical_and"}, {"p": "/versions/r1.4/api_docs/python/tf/logical_not", "k": [], "r": "r1.4", "t": "tf.logical_not"}, {"p": "/versions/r1.4/api_docs/python/tf/logical_or", "k": [], "r": "r1.4", "t": "tf.logical_or"}, {"p": "/versions/r1.4/api_docs/python/tf/logical_xor", "k": [], "r": "r1.4", "t": "tf.logical_xor"}, {"p": "/versions/r1.4/api_docs/python/tf/losses", "k": [], "r": "r1.4", "t": "tf.losses"}, {"p": "/versions/r1.4/api_docs/python/tf/losses/Reduction", "k": ["all", "validate", "MEAN", "NONE", "SUM", "SUM_BY_NONZERO_WEIGHTS"], "r": "r1.4", "t": "tf.losses.Reduction"}, {"p": "/versions/r1.4/api_docs/python/tf/losses/absolute_difference", "k": [], "r": "r1.4", "t": "tf.losses.absolute_difference"}, {"p": "/versions/r1.4/api_docs/python/tf/losses/add_loss", "k": [], "r": "r1.4", "t": "tf.losses.add_loss"}, {"p": "/versions/r1.4/api_docs/python/tf/losses/compute_weighted_loss", "k": [], "r": "r1.4", "t": "tf.losses.compute_weighted_loss"}, {"p": "/versions/r1.4/api_docs/python/tf/losses/cosine_distance", "k": [], "r": "r1.4", "t": "tf.losses.cosine_distance"}, {"p": "/versions/r1.4/api_docs/python/tf/losses/get_losses", "k": [], "r": "r1.4", "t": "tf.losses.get_losses"}, {"p": "/versions/r1.4/api_docs/python/tf/losses/get_regularization_loss", "k": [], "r": "r1.4", "t": "tf.losses.get_regularization_loss"}, {"p": "/versions/r1.4/api_docs/python/tf/losses/get_regularization_losses", "k": [], "r": "r1.4", "t": "tf.losses.get_regularization_losses"}, {"p": "/versions/r1.4/api_docs/python/tf/losses/get_total_loss", "k": [], "r": "r1.4", "t": "tf.losses.get_total_loss"}, {"p": "/versions/r1.4/api_docs/python/tf/losses/hinge_loss", "k": [], "r": "r1.4", "t": "tf.losses.hinge_loss"}, {"p": "/versions/r1.4/api_docs/python/tf/losses/huber_loss", "k": [], "r": "r1.4", "t": "tf.losses.huber_loss"}, {"p": "/versions/r1.4/api_docs/python/tf/losses/log_loss", "k": [], "r": "r1.4", "t": "tf.losses.log_loss"}, {"p": "/versions/r1.4/api_docs/python/tf/losses/mean_pairwise_squared_error", "k": [], "r": "r1.4", "t": "tf.losses.mean_pairwise_squared_error"}, {"p": "/versions/r1.4/api_docs/python/tf/losses/mean_squared_error", "k": [], "r": "r1.4", "t": "tf.losses.mean_squared_error"}, {"p": "/versions/r1.4/api_docs/python/tf/losses/sigmoid_cross_entropy", "k": [], "r": "r1.4", "t": "tf.losses.sigmoid_cross_entropy"}, {"p": "/versions/r1.4/api_docs/python/tf/losses/softmax_cross_entropy", "k": [], "r": "r1.4", "t": "tf.losses.softmax_cross_entropy"}, {"p": "/versions/r1.4/api_docs/python/tf/losses/sparse_softmax_cross_entropy", "k": [], "r": "r1.4", "t": "tf.losses.sparse_softmax_cross_entropy"}, {"p": "/versions/r1.4/api_docs/python/tf/make_ndarray", "k": [], "r": "r1.4", "t": "tf.make_ndarray"}, {"p": "/versions/r1.4/api_docs/python/tf/make_template", "k": [], "r": "r1.4", "t": "tf.make_template"}, {"p": "/versions/r1.4/api_docs/python/tf/make_tensor_proto", "k": [], "r": "r1.4", "t": "tf.make_tensor_proto"}, {"p": "/versions/r1.4/api_docs/python/tf/map_fn", "k": [], "r": "r1.4", "t": "tf.map_fn"}, {"p": "/versions/r1.4/api_docs/python/tf/matching_files", "k": [], "r": "r1.4", "t": "tf.matching_files"}, {"p": "/versions/r1.4/api_docs/python/tf/matmul", "k": [], "r": "r1.4", "t": "tf.matmul"}, {"p": "/versions/r1.4/api_docs/python/tf/matrix_band_part", "k": [], "r": "r1.4", "t": "tf.matrix_band_part"}, {"p": "/versions/r1.4/api_docs/python/tf/matrix_determinant", "k": [], "r": "r1.4", "t": "tf.matrix_determinant"}, {"p": "/versions/r1.4/api_docs/python/tf/matrix_diag", "k": [], "r": "r1.4", "t": "tf.matrix_diag"}, {"p": "/versions/r1.4/api_docs/python/tf/matrix_diag_part", "k": [], "r": "r1.4", "t": "tf.matrix_diag_part"}, {"p": "/versions/r1.4/api_docs/python/tf/matrix_inverse", "k": [], "r": "r1.4", "t": "tf.matrix_inverse"}, {"p": "/versions/r1.4/api_docs/python/tf/matrix_set_diag", "k": [], "r": "r1.4", "t": "tf.matrix_set_diag"}, {"p": "/versions/r1.4/api_docs/python/tf/matrix_solve", "k": [], "r": "r1.4", "t": "tf.matrix_solve"}, {"p": "/versions/r1.4/api_docs/python/tf/matrix_solve_ls", "k": [], "r": "r1.4", "t": "tf.matrix_solve_ls"}, {"p": "/versions/r1.4/api_docs/python/tf/matrix_transpose", "k": [], "r": "r1.4", "t": "tf.matrix_transpose"}, {"p": "/versions/r1.4/api_docs/python/tf/matrix_triangular_solve", "k": [], "r": "r1.4", "t": "tf.matrix_triangular_solve"}, {"p": "/versions/r1.4/api_docs/python/tf/maximum", "k": [], "r": "r1.4", "t": "tf.maximum"}, {"p": "/versions/r1.4/api_docs/python/tf/meshgrid", "k": [], "r": "r1.4", "t": "tf.meshgrid"}, {"p": "/versions/r1.4/api_docs/python/tf/metrics", "k": [], "r": "r1.4", "t": "tf.metrics"}, {"p": "/versions/r1.4/api_docs/python/tf/metrics/accuracy", "k": [], "r": "r1.4", "t": "tf.metrics.accuracy"}, {"p": "/versions/r1.4/api_docs/python/tf/metrics/auc", "k": [], "r": "r1.4", "t": "tf.metrics.auc"}, {"p": "/versions/r1.4/api_docs/python/tf/metrics/false_negatives", "k": [], "r": "r1.4", "t": "tf.metrics.false_negatives"}, {"p": "/versions/r1.4/api_docs/python/tf/metrics/false_negatives_at_thresholds", "k": [], "r": "r1.4", "t": "tf.metrics.false_negatives_at_thresholds"}, {"p": "/versions/r1.4/api_docs/python/tf/metrics/false_positives", "k": [], "r": "r1.4", "t": "tf.metrics.false_positives"}, {"p": "/versions/r1.4/api_docs/python/tf/metrics/false_positives_at_thresholds", "k": [], "r": "r1.4", "t": "tf.metrics.false_positives_at_thresholds"}, {"p": "/versions/r1.4/api_docs/python/tf/metrics/mean", "k": [], "r": "r1.4", "t": "tf.metrics.mean"}, {"p": "/versions/r1.4/api_docs/python/tf/metrics/mean_absolute_error", "k": [], "r": "r1.4", "t": "tf.metrics.mean_absolute_error"}, {"p": "/versions/r1.4/api_docs/python/tf/metrics/mean_cosine_distance", "k": [], "r": "r1.4", "t": "tf.metrics.mean_cosine_distance"}, {"p": "/versions/r1.4/api_docs/python/tf/metrics/mean_iou", "k": [], "r": "r1.4", "t": "tf.metrics.mean_iou"}, {"p": "/versions/r1.4/api_docs/python/tf/metrics/mean_per_class_accuracy", "k": [], "r": "r1.4", "t": "tf.metrics.mean_per_class_accuracy"}, {"p": "/versions/r1.4/api_docs/python/tf/metrics/mean_relative_error", "k": [], "r": "r1.4", "t": "tf.metrics.mean_relative_error"}, {"p": "/versions/r1.4/api_docs/python/tf/metrics/mean_squared_error", "k": [], "r": "r1.4", "t": "tf.metrics.mean_squared_error"}, {"p": "/versions/r1.4/api_docs/python/tf/metrics/mean_tensor", "k": [], "r": "r1.4", "t": "tf.metrics.mean_tensor"}, {"p": "/versions/r1.4/api_docs/python/tf/metrics/percentage_below", "k": [], "r": "r1.4", "t": "tf.metrics.percentage_below"}, {"p": "/versions/r1.4/api_docs/python/tf/metrics/precision", "k": [], "r": "r1.4", "t": "tf.metrics.precision"}, {"p": "/versions/r1.4/api_docs/python/tf/metrics/precision_at_thresholds", "k": [], "r": "r1.4", "t": "tf.metrics.precision_at_thresholds"}, {"p": "/versions/r1.4/api_docs/python/tf/metrics/recall", "k": [], "r": "r1.4", "t": "tf.metrics.recall"}, {"p": "/versions/r1.4/api_docs/python/tf/metrics/recall_at_k", "k": [], "r": "r1.4", "t": "tf.metrics.recall_at_k"}, {"p": "/versions/r1.4/api_docs/python/tf/metrics/recall_at_thresholds", "k": [], "r": "r1.4", "t": "tf.metrics.recall_at_thresholds"}, {"p": "/versions/r1.4/api_docs/python/tf/metrics/root_mean_squared_error", "k": [], "r": "r1.4", "t": "tf.metrics.root_mean_squared_error"}, {"p": "/versions/r1.4/api_docs/python/tf/metrics/sensitivity_at_specificity", "k": [], "r": "r1.4", "t": "tf.metrics.sensitivity_at_specificity"}, {"p": "/versions/r1.4/api_docs/python/tf/metrics/sparse_average_precision_at_k", "k": [], "r": "r1.4", "t": "tf.metrics.sparse_average_precision_at_k"}, {"p": "/versions/r1.4/api_docs/python/tf/metrics/sparse_precision_at_k", "k": [], "r": "r1.4", "t": "tf.metrics.sparse_precision_at_k"}, {"p": "/versions/r1.4/api_docs/python/tf/metrics/specificity_at_sensitivity", "k": [], "r": "r1.4", "t": "tf.metrics.specificity_at_sensitivity"}, {"p": "/versions/r1.4/api_docs/python/tf/metrics/true_negatives_at_thresholds", "k": [], "r": "r1.4", "t": "tf.metrics.true_negatives_at_thresholds"}, {"p": "/versions/r1.4/api_docs/python/tf/metrics/true_positives", "k": [], "r": "r1.4", "t": "tf.metrics.true_positives"}, {"p": "/versions/r1.4/api_docs/python/tf/metrics/true_positives_at_thresholds", "k": [], "r": "r1.4", "t": "tf.metrics.true_positives_at_thresholds"}, {"p": "/versions/r1.4/api_docs/python/tf/min_max_variable_partitioner", "k": [], "r": "r1.4", "t": "tf.min_max_variable_partitioner"}, {"p": "/versions/r1.4/api_docs/python/tf/minimum", "k": [], "r": "r1.4", "t": "tf.minimum"}, {"p": "/versions/r1.4/api_docs/python/tf/model_variables", "k": [], "r": "r1.4", "t": "tf.model_variables"}, {"p": "/versions/r1.4/api_docs/python/tf/moving_average_variables", "k": [], "r": "r1.4", "t": "tf.moving_average_variables"}, {"p": "/versions/r1.4/api_docs/python/tf/multinomial", "k": [], "r": "r1.4", "t": "tf.multinomial"}, {"p": "/versions/r1.4/api_docs/python/tf/multiply", "k": [], "r": "r1.4", "t": "tf.multiply"}, {"p": "/versions/r1.4/api_docs/python/tf/name_scope", "k": ["__enter__", "__exit__", "__init__"], "r": "r1.4", "t": "tf.name_scope"}, {"p": "/versions/r1.4/api_docs/python/tf/negative", "k": [], "r": "r1.4", "t": "tf.negative"}, {"p": "/versions/r1.4/api_docs/python/tf/nn", "k": [], "r": "r1.4", "t": "tf.nn"}, {"p": "/versions/r1.4/api_docs/python/tf/nn/all_candidate_sampler", "k": [], "r": "r1.4", "t": "tf.nn.all_candidate_sampler"}, {"p": "/versions/r1.4/api_docs/python/tf/nn/atrous_conv2d", "k": [], "r": "r1.4", "t": "tf.nn.atrous_conv2d"}, {"p": "/versions/r1.4/api_docs/python/tf/nn/atrous_conv2d_transpose", "k": [], "r": "r1.4", "t": "tf.nn.atrous_conv2d_transpose"}, {"p": "/versions/r1.4/api_docs/python/tf/nn/avg_pool", "k": [], "r": "r1.4", "t": "tf.nn.avg_pool"}, {"p": "/versions/r1.4/api_docs/python/tf/nn/avg_pool3d", "k": [], "r": "r1.4", "t": "tf.nn.avg_pool3d"}, {"p": "/versions/r1.4/api_docs/python/tf/nn/batch_norm_with_global_normalization", "k": [], "r": "r1.4", "t": "tf.nn.batch_norm_with_global_normalization"}, {"p": "/versions/r1.4/api_docs/python/tf/nn/batch_normalization", "k": [], "r": "r1.4", "t": "tf.nn.batch_normalization"}, {"p": "/versions/r1.4/api_docs/python/tf/nn/bias_add", "k": [], "r": "r1.4", "t": "tf.nn.bias_add"}, {"p": "/versions/r1.4/api_docs/python/tf/nn/bidirectional_dynamic_rnn", "k": [], "r": "r1.4", "t": "tf.nn.bidirectional_dynamic_rnn"}, {"p": "/versions/r1.4/api_docs/python/tf/nn/compute_accidental_hits", "k": [], "r": "r1.4", "t": "tf.nn.compute_accidental_hits"}, {"p": "/versions/r1.4/api_docs/python/tf/nn/conv1d", "k": [], "r": "r1.4", "t": "tf.nn.conv1d"}, {"p": "/versions/r1.4/api_docs/python/tf/nn/conv2d", "k": [], "r": "r1.4", "t": "tf.nn.conv2d"}, {"p": "/versions/r1.4/api_docs/python/tf/nn/conv2d_backprop_filter", "k": [], "r": "r1.4", "t": "tf.nn.conv2d_backprop_filter"}, {"p": "/versions/r1.4/api_docs/python/tf/nn/conv2d_backprop_input", "k": [], "r": "r1.4", "t": "tf.nn.conv2d_backprop_input"}, {"p": "/versions/r1.4/api_docs/python/tf/nn/conv2d_transpose", "k": [], "r": "r1.4", "t": "tf.nn.conv2d_transpose"}, {"p": "/versions/r1.4/api_docs/python/tf/nn/conv3d", "k": [], "r": "r1.4", "t": "tf.nn.conv3d"}, {"p": "/versions/r1.4/api_docs/python/tf/nn/conv3d_backprop_filter_v2", "k": [], "r": "r1.4", "t": "tf.nn.conv3d_backprop_filter_v2"}, {"p": "/versions/r1.4/api_docs/python/tf/nn/conv3d_transpose", "k": [], "r": "r1.4", "t": "tf.nn.conv3d_transpose"}, {"p": "/versions/r1.4/api_docs/python/tf/nn/convolution", "k": [], "r": "r1.4", "t": "tf.nn.convolution"}, {"p": "/versions/r1.4/api_docs/python/tf/nn/crelu", "k": [], "r": "r1.4", "t": "tf.nn.crelu"}, {"p": "/versions/r1.4/api_docs/python/tf/nn/ctc_beam_search_decoder", "k": [], "r": "r1.4", "t": "tf.nn.ctc_beam_search_decoder"}, {"p": "/versions/r1.4/api_docs/python/tf/nn/ctc_greedy_decoder", "k": [], "r": "r1.4", "t": "tf.nn.ctc_greedy_decoder"}, {"p": "/versions/r1.4/api_docs/python/tf/nn/ctc_loss", "k": [], "r": "r1.4", "t": "tf.nn.ctc_loss"}, {"p": "/versions/r1.4/api_docs/python/tf/nn/depthwise_conv2d", "k": [], "r": "r1.4", "t": "tf.nn.depthwise_conv2d"}, {"p": "/versions/r1.4/api_docs/python/tf/nn/depthwise_conv2d_native", "k": [], "r": "r1.4", "t": "tf.nn.depthwise_conv2d_native"}, {"p": "/versions/r1.4/api_docs/python/tf/nn/depthwise_conv2d_native_backprop_filter", "k": [], "r": "r1.4", "t": "tf.nn.depthwise_conv2d_native_backprop_filter"}, {"p": "/versions/r1.4/api_docs/python/tf/nn/depthwise_conv2d_native_backprop_input", "k": [], "r": "r1.4", "t": "tf.nn.depthwise_conv2d_native_backprop_input"}, {"p": "/versions/r1.4/api_docs/python/tf/nn/dilation2d", "k": [], "r": "r1.4", "t": "tf.nn.dilation2d"}, {"p": "/versions/r1.4/api_docs/python/tf/nn/dropout", "k": [], "r": "r1.4", "t": "tf.nn.dropout"}, {"p": "/versions/r1.4/api_docs/python/tf/nn/dynamic_rnn", "k": [], "r": "r1.4", "t": "tf.nn.dynamic_rnn"}, {"p": "/versions/r1.4/api_docs/python/tf/nn/elu", "k": [], "r": "r1.4", "t": "tf.nn.elu"}, {"p": "/versions/r1.4/api_docs/python/tf/nn/embedding_lookup", "k": [], "r": "r1.4", "t": "tf.nn.embedding_lookup"}, {"p": "/versions/r1.4/api_docs/python/tf/nn/embedding_lookup_sparse", "k": [], "r": "r1.4", "t": "tf.nn.embedding_lookup_sparse"}, {"p": "/versions/r1.4/api_docs/python/tf/nn/erosion2d", "k": [], "r": "r1.4", "t": "tf.nn.erosion2d"}, {"p": "/versions/r1.4/api_docs/python/tf/nn/fixed_unigram_candidate_sampler", "k": [], "r": "r1.4", "t": "tf.nn.fixed_unigram_candidate_sampler"}, {"p": "/versions/r1.4/api_docs/python/tf/nn/fractional_avg_pool", "k": [], "r": "r1.4", "t": "tf.nn.fractional_avg_pool"}, {"p": "/versions/r1.4/api_docs/python/tf/nn/fractional_max_pool", "k": [], "r": "r1.4", "t": "tf.nn.fractional_max_pool"}, {"p": "/versions/r1.4/api_docs/python/tf/nn/fused_batch_norm", "k": [], "r": "r1.4", "t": "tf.nn.fused_batch_norm"}, {"p": "/versions/r1.4/api_docs/python/tf/nn/in_top_k", "k": [], "r": "r1.4", "t": "tf.nn.in_top_k"}, {"p": "/versions/r1.4/api_docs/python/tf/nn/l2_loss", "k": [], "r": "r1.4", "t": "tf.nn.l2_loss"}, {"p": "/versions/r1.4/api_docs/python/tf/nn/l2_normalize", "k": [], "r": "r1.4", "t": "tf.nn.l2_normalize"}, {"p": "/versions/r1.4/api_docs/python/tf/nn/leaky_relu", "k": [], "r": "r1.4", "t": "tf.nn.leaky_relu"}, {"p": "/versions/r1.4/api_docs/python/tf/nn/learned_unigram_candidate_sampler", "k": [], "r": "r1.4", "t": "tf.nn.learned_unigram_candidate_sampler"}, {"p": "/versions/r1.4/api_docs/python/tf/nn/local_response_normalization", "k": [], "r": "r1.4", "t": "tf.nn.local_response_normalization"}, {"p": "/versions/r1.4/api_docs/python/tf/nn/log_poisson_loss", "k": [], "r": "r1.4", "t": "tf.nn.log_poisson_loss"}, {"p": "/versions/r1.4/api_docs/python/tf/nn/log_softmax", "k": [], "r": "r1.4", "t": "tf.nn.log_softmax"}, {"p": "/versions/r1.4/api_docs/python/tf/nn/log_uniform_candidate_sampler", "k": [], "r": "r1.4", "t": "tf.nn.log_uniform_candidate_sampler"}, {"p": "/versions/r1.4/api_docs/python/tf/nn/max_pool", "k": [], "r": "r1.4", "t": "tf.nn.max_pool"}, {"p": "/versions/r1.4/api_docs/python/tf/nn/max_pool3d", "k": [], "r": "r1.4", "t": "tf.nn.max_pool3d"}, {"p": "/versions/r1.4/api_docs/python/tf/nn/max_pool_with_argmax", "k": [], "r": "r1.4", "t": "tf.nn.max_pool_with_argmax"}, {"p": "/versions/r1.4/api_docs/python/tf/nn/moments", "k": [], "r": "r1.4", "t": "tf.nn.moments"}, {"p": "/versions/r1.4/api_docs/python/tf/nn/nce_loss", "k": [], "r": "r1.4", "t": "tf.nn.nce_loss"}, {"p": "/versions/r1.4/api_docs/python/tf/nn/normalize_moments", "k": [], "r": "r1.4", "t": "tf.nn.normalize_moments"}, {"p": "/versions/r1.4/api_docs/python/tf/nn/pool", "k": [], "r": "r1.4", "t": "tf.nn.pool"}, {"p": "/versions/r1.4/api_docs/python/tf/nn/quantized_avg_pool", "k": [], "r": "r1.4", "t": "tf.nn.quantized_avg_pool"}, {"p": "/versions/r1.4/api_docs/python/tf/nn/quantized_conv2d", "k": [], "r": "r1.4", "t": "tf.nn.quantized_conv2d"}, {"p": "/versions/r1.4/api_docs/python/tf/nn/quantized_max_pool", "k": [], "r": "r1.4", "t": "tf.nn.quantized_max_pool"}, {"p": "/versions/r1.4/api_docs/python/tf/nn/quantized_relu_x", "k": [], "r": "r1.4", "t": "tf.nn.quantized_relu_x"}, {"p": "/versions/r1.4/api_docs/python/tf/nn/raw_rnn", "k": [], "r": "r1.4", "t": "tf.nn.raw_rnn"}, {"p": "/versions/r1.4/api_docs/python/tf/nn/relu", "k": [], "r": "r1.4", "t": "tf.nn.relu"}, {"p": "/versions/r1.4/api_docs/python/tf/nn/relu6", "k": [], "r": "r1.4", "t": "tf.nn.relu6"}, {"p": "/versions/r1.4/api_docs/python/tf/nn/relu_layer", "k": [], "r": "r1.4", "t": "tf.nn.relu_layer"}, {"p": "/versions/r1.4/api_docs/python/tf/nn/rnn_cell", "k": [], "r": "r1.4", "t": "tf.nn.rnn_cell"}, {"p": "/versions/r1.4/api_docs/python/tf/nn/sampled_softmax_loss", "k": [], "r": "r1.4", "t": "tf.nn.sampled_softmax_loss"}, {"p": "/versions/r1.4/api_docs/python/tf/nn/selu", "k": [], "r": "r1.4", "t": "tf.nn.selu"}, {"p": "/versions/r1.4/api_docs/python/tf/nn/separable_conv2d", "k": [], "r": "r1.4", "t": "tf.nn.separable_conv2d"}, {"p": "/versions/r1.4/api_docs/python/tf/nn/sigmoid_cross_entropy_with_logits", "k": [], "r": "r1.4", "t": "tf.nn.sigmoid_cross_entropy_with_logits"}, {"p": "/versions/r1.4/api_docs/python/tf/nn/softmax", "k": [], "r": "r1.4", "t": "tf.nn.softmax"}, {"p": "/versions/r1.4/api_docs/python/tf/nn/softmax_cross_entropy_with_logits", "k": [], "r": "r1.4", "t": "tf.nn.softmax_cross_entropy_with_logits"}, {"p": "/versions/r1.4/api_docs/python/tf/nn/softplus", "k": [], "r": "r1.4", "t": "tf.nn.softplus"}, {"p": "/versions/r1.4/api_docs/python/tf/nn/softsign", "k": [], "r": "r1.4", "t": "tf.nn.softsign"}, {"p": "/versions/r1.4/api_docs/python/tf/nn/sparse_softmax_cross_entropy_with_logits", "k": [], "r": "r1.4", "t": "tf.nn.sparse_softmax_cross_entropy_with_logits"}, {"p": "/versions/r1.4/api_docs/python/tf/nn/static_bidirectional_rnn", "k": [], "r": "r1.4", "t": "tf.nn.static_bidirectional_rnn"}, {"p": "/versions/r1.4/api_docs/python/tf/nn/static_rnn", "k": [], "r": "r1.4", "t": "tf.nn.static_rnn"}, {"p": "/versions/r1.4/api_docs/python/tf/nn/static_state_saving_rnn", "k": [], "r": "r1.4", "t": "tf.nn.static_state_saving_rnn"}, {"p": "/versions/r1.4/api_docs/python/tf/nn/sufficient_statistics", "k": [], "r": "r1.4", "t": "tf.nn.sufficient_statistics"}, {"p": "/versions/r1.4/api_docs/python/tf/nn/top_k", "k": [], "r": "r1.4", "t": "tf.nn.top_k"}, {"p": "/versions/r1.4/api_docs/python/tf/nn/uniform_candidate_sampler", "k": [], "r": "r1.4", "t": "tf.nn.uniform_candidate_sampler"}, {"p": "/versions/r1.4/api_docs/python/tf/nn/weighted_cross_entropy_with_logits", "k": [], "r": "r1.4", "t": "tf.nn.weighted_cross_entropy_with_logits"}, {"p": "/versions/r1.4/api_docs/python/tf/nn/weighted_moments", "k": [], "r": "r1.4", "t": "tf.nn.weighted_moments"}, {"p": "/versions/r1.4/api_docs/python/tf/nn/with_space_to_batch", "k": [], "r": "r1.4", "t": "tf.nn.with_space_to_batch"}, {"p": "/versions/r1.4/api_docs/python/tf/nn/xw_plus_b", "k": [], "r": "r1.4", "t": "tf.nn.xw_plus_b"}, {"p": "/versions/r1.4/api_docs/python/tf/nn/zero_fraction", "k": [], "r": "r1.4", "t": "tf.nn.zero_fraction"}, {"p": "/versions/r1.4/api_docs/python/tf/no_op", "k": [], "r": "r1.4", "t": "tf.no_op"}, {"p": "/versions/r1.4/api_docs/python/tf/no_regularizer", "k": [], "r": "r1.4", "t": "tf.no_regularizer"}, {"p": "/versions/r1.4/api_docs/python/tf/norm", "k": [], "r": "r1.4", "t": "tf.norm"}, {"p": "/versions/r1.4/api_docs/python/tf/not_equal", "k": [], "r": "r1.4", "t": "tf.not_equal"}, {"p": "/versions/r1.4/api_docs/python/tf/one_hot", "k": [], "r": "r1.4", "t": "tf.one_hot"}, {"p": "/versions/r1.4/api_docs/python/tf/ones", "k": [], "r": "r1.4", "t": "tf.ones"}, {"p": "/versions/r1.4/api_docs/python/tf/ones_initializer", "k": ["__call__", "__init__", "from_config", "get_config"], "r": "r1.4", "t": "tf.ones_initializer"}, {"p": "/versions/r1.4/api_docs/python/tf/ones_like", "k": [], "r": "r1.4", "t": "tf.ones_like"}, {"p": "/versions/r1.4/api_docs/python/tf/op_scope", "k": [], "r": "r1.4", "t": "tf.op_scope"}, {"p": "/versions/r1.4/api_docs/python/tf/orthogonal_initializer", "k": ["__call__", "__init__", "from_config", "get_config"], "r": "r1.4", "t": "tf.orthogonal_initializer"}, {"p": "/versions/r1.4/api_docs/python/tf/pad", "k": [], "r": "r1.4", "t": "tf.pad"}, {"p": "/versions/r1.4/api_docs/python/tf/parallel_stack", "k": [], "r": "r1.4", "t": "tf.parallel_stack"}, {"p": "/versions/r1.4/api_docs/python/tf/parse_example", "k": [], "r": "r1.4", "t": "tf.parse_example"}, {"p": "/versions/r1.4/api_docs/python/tf/parse_single_example", "k": [], "r": "r1.4", "t": "tf.parse_single_example"}, {"p": "/versions/r1.4/api_docs/python/tf/parse_single_sequence_example", "k": [], "r": "r1.4", "t": "tf.parse_single_sequence_example"}, {"p": "/versions/r1.4/api_docs/python/tf/parse_tensor", "k": [], "r": "r1.4", "t": "tf.parse_tensor"}, {"p": "/versions/r1.4/api_docs/python/tf/placeholder", "k": [], "r": "r1.4", "t": "tf.placeholder"}, {"p": "/versions/r1.4/api_docs/python/tf/placeholder_with_default", "k": [], "r": "r1.4", "t": "tf.placeholder_with_default"}, {"p": "/versions/r1.4/api_docs/python/tf/polygamma", "k": [], "r": "r1.4", "t": "tf.polygamma"}, {"p": "/versions/r1.4/api_docs/python/tf/pow", "k": [], "r": "r1.4", "t": "tf.pow"}, {"p": "/versions/r1.4/api_docs/python/tf/profiler", "k": [], "r": "r1.4", "t": "tf.profiler"}, {"p": "/versions/r1.4/api_docs/python/tf/profiler/AdviceProto", "k": ["Checker", "CheckersEntry"], "r": "r1.4", "t": "tf.profiler.AdviceProto"}, {"p": "/versions/r1.4/api_docs/python/tf/profiler/AdviceProto/Checker", "k": [], "r": "r1.4", "t": "tf.profiler.AdviceProto.Checker"}, {"p": "/versions/r1.4/api_docs/python/tf/profiler/AdviceProto/CheckersEntry", "k": [], "r": "r1.4", "t": "tf.profiler.AdviceProto.CheckersEntry"}, {"p": "/versions/r1.4/api_docs/python/tf/profiler/GraphNodeProto", "k": ["InputShapesEntry"], "r": "r1.4", "t": "tf.profiler.GraphNodeProto"}, {"p": "/versions/r1.4/api_docs/python/tf/profiler/GraphNodeProto/InputShapesEntry", "k": [], "r": "r1.4", "t": "tf.profiler.GraphNodeProto.InputShapesEntry"}, {"p": "/versions/r1.4/api_docs/python/tf/profiler/MultiGraphNodeProto", "k": [], "r": "r1.4", "t": "tf.profiler.MultiGraphNodeProto"}, {"p": "/versions/r1.4/api_docs/python/tf/profiler/OpLogProto", "k": [], "r": "r1.4", "t": "tf.profiler.OpLogProto"}, {"p": "/versions/r1.4/api_docs/python/tf/profiler/ProfileOptionBuilder", "k": ["__init__", "account_displayed_op_only", "build", "float_operation", "order_by", "select", "time_and_memory", "trainable_variables_parameter", "with_accounted_types", "with_empty_output", "with_file_output", "with_max_depth", "with_min_execution_time", "with_min_float_operations", "with_min_memory", "with_min_occurrence", "with_min_parameters", "with_node_names", "with_pprof_output", "with_stdout_output", "with_step", "with_timeline_output"], "r": "r1.4", "t": "tf.profiler.ProfileOptionBuilder"}, {"p": "/versions/r1.4/api_docs/python/tf/profiler/Profiler", "k": ["__init__", "add_step", "advise", "profile_graph", "profile_name_scope", "profile_operations", "profile_python"], "r": "r1.4", "t": "tf.profiler.Profiler"}, {"p": "/versions/r1.4/api_docs/python/tf/profiler/advise", "k": [], "r": "r1.4", "t": "tf.profiler.advise"}, {"p": "/versions/r1.4/api_docs/python/tf/profiler/profile", "k": [], "r": "r1.4", "t": "tf.profiler.profile"}, {"p": "/versions/r1.4/api_docs/python/tf/profiler/write_op_log", "k": [], "r": "r1.4", "t": "tf.profiler.write_op_log"}, {"p": "/versions/r1.4/api_docs/python/tf/py_func", "k": [], "r": "r1.4", "t": "tf.py_func"}, {"p": "/versions/r1.4/api_docs/python/tf/python_io", "k": [], "r": "r1.4", "t": "tf.python_io"}, {"p": "/versions/r1.4/api_docs/python/tf/python_io/TFRecordCompressionType", "k": ["GZIP", "NONE", "ZLIB"], "r": "r1.4", "t": "tf.python_io.TFRecordCompressionType"}, {"p": "/versions/r1.4/api_docs/python/tf/python_io/TFRecordOptions", "k": ["__init__", "get_compression_type_string", "compression_type_map"], "r": "r1.4", "t": "tf.python_io.TFRecordOptions"}, {"p": "/versions/r1.4/api_docs/python/tf/python_io/TFRecordWriter", "k": ["__enter__", "__exit__", "__init__", "close", "flush", "write"], "r": "r1.4", "t": "tf.python_io.TFRecordWriter"}, {"p": "/versions/r1.4/api_docs/python/tf/python_io/tf_record_iterator", "k": [], "r": "r1.4", "t": "tf.python_io.tf_record_iterator"}, {"p": "/versions/r1.4/api_docs/python/tf/pywrap_tensorflow", "k": [], "r": "r1.4", "t": "tf.pywrap_tensorflow"}, {"p": "/versions/r1.4/api_docs/python/tf/qr", "k": [], "r": "r1.4", "t": "tf.qr"}, {"p": "/versions/r1.4/api_docs/python/tf/quantize_v2", "k": [], "r": "r1.4", "t": "tf.quantize_v2"}, {"p": "/versions/r1.4/api_docs/python/tf/quantized_concat", "k": [], "r": "r1.4", "t": "tf.quantized_concat"}, {"p": "/versions/r1.4/api_docs/python/tf/random_crop", "k": [], "r": "r1.4", "t": "tf.random_crop"}, {"p": "/versions/r1.4/api_docs/python/tf/random_gamma", "k": [], "r": "r1.4", "t": "tf.random_gamma"}, {"p": "/versions/r1.4/api_docs/python/tf/random_normal", "k": [], "r": "r1.4", "t": "tf.random_normal"}, {"p": "/versions/r1.4/api_docs/python/tf/random_normal_initializer", "k": ["__call__", "__init__", "from_config", "get_config"], "r": "r1.4", "t": "tf.random_normal_initializer"}, {"p": "/versions/r1.4/api_docs/python/tf/random_poisson", "k": [], "r": "r1.4", "t": "tf.random_poisson"}, {"p": "/versions/r1.4/api_docs/python/tf/random_shuffle", "k": [], "r": "r1.4", "t": "tf.random_shuffle"}, {"p": "/versions/r1.4/api_docs/python/tf/random_uniform", "k": [], "r": "r1.4", "t": "tf.random_uniform"}, {"p": "/versions/r1.4/api_docs/python/tf/random_uniform_initializer", "k": ["__call__", "__init__", "from_config", "get_config"], "r": "r1.4", "t": "tf.random_uniform_initializer"}, {"p": "/versions/r1.4/api_docs/python/tf/range", "k": [], "r": "r1.4", "t": "tf.range"}, {"p": "/versions/r1.4/api_docs/python/tf/rank", "k": [], "r": "r1.4", "t": "tf.rank"}, {"p": "/versions/r1.4/api_docs/python/tf/read_file", "k": [], "r": "r1.4", "t": "tf.read_file"}, {"p": "/versions/r1.4/api_docs/python/tf/real", "k": [], "r": "r1.4", "t": "tf.real"}, {"p": "/versions/r1.4/api_docs/python/tf/realdiv", "k": [], "r": "r1.4", "t": "tf.realdiv"}, {"p": "/versions/r1.4/api_docs/python/tf/reciprocal", "k": [], "r": "r1.4", "t": "tf.reciprocal"}, {"p": "/versions/r1.4/api_docs/python/tf/reduce_all", "k": [], "r": "r1.4", "t": "tf.reduce_all"}, {"p": "/versions/r1.4/api_docs/python/tf/reduce_any", "k": [], "r": "r1.4", "t": "tf.reduce_any"}, {"p": "/versions/r1.4/api_docs/python/tf/reduce_join", "k": [], "r": "r1.4", "t": "tf.reduce_join"}, {"p": "/versions/r1.4/api_docs/python/tf/reduce_logsumexp", "k": [], "r": "r1.4", "t": "tf.reduce_logsumexp"}, {"p": "/versions/r1.4/api_docs/python/tf/reduce_max", "k": [], "r": "r1.4", "t": "tf.reduce_max"}, {"p": "/versions/r1.4/api_docs/python/tf/reduce_mean", "k": [], "r": "r1.4", "t": "tf.reduce_mean"}, {"p": "/versions/r1.4/api_docs/python/tf/reduce_min", "k": [], "r": "r1.4", "t": "tf.reduce_min"}, {"p": "/versions/r1.4/api_docs/python/tf/reduce_prod", "k": [], "r": "r1.4", "t": "tf.reduce_prod"}, {"p": "/versions/r1.4/api_docs/python/tf/reduce_sum", "k": [], "r": "r1.4", "t": "tf.reduce_sum"}, {"p": "/versions/r1.4/api_docs/python/tf/register_tensor_conversion_function", "k": [], "r": "r1.4", "t": "tf.register_tensor_conversion_function"}, {"p": "/versions/r1.4/api_docs/python/tf/report_uninitialized_variables", "k": [], "r": "r1.4", "t": "tf.report_uninitialized_variables"}, {"p": "/versions/r1.4/api_docs/python/tf/required_space_to_batch_paddings", "k": [], "r": "r1.4", "t": "tf.required_space_to_batch_paddings"}, {"p": "/versions/r1.4/api_docs/python/tf/reset_default_graph", "k": [], "r": "r1.4", "t": "tf.reset_default_graph"}, {"p": "/versions/r1.4/api_docs/python/tf/reshape", "k": [], "r": "r1.4", "t": "tf.reshape"}, {"p": "/versions/r1.4/api_docs/python/tf/resource_loader", "k": [], "r": "r1.4", "t": "tf.resource_loader"}, {"p": "/versions/r1.4/api_docs/python/tf/resource_loader/get_data_files_path", "k": [], "r": "r1.4", "t": "tf.resource_loader.get_data_files_path"}, {"p": "/versions/r1.4/api_docs/python/tf/resource_loader/get_path_to_datafile", "k": [], "r": "r1.4", "t": "tf.resource_loader.get_path_to_datafile"}, {"p": "/versions/r1.4/api_docs/python/tf/resource_loader/get_root_dir_with_all_resources", "k": [], "r": "r1.4", "t": "tf.resource_loader.get_root_dir_with_all_resources"}, {"p": "/versions/r1.4/api_docs/python/tf/resource_loader/load_resource", "k": [], "r": "r1.4", "t": "tf.resource_loader.load_resource"}, {"p": "/versions/r1.4/api_docs/python/tf/resource_loader/readahead_file_path", "k": [], "r": "r1.4", "t": "tf.resource_loader.readahead_file_path"}, {"p": "/versions/r1.4/api_docs/python/tf/reverse", "k": [], "r": "r1.4", "t": "tf.reverse"}, {"p": "/versions/r1.4/api_docs/python/tf/reverse_sequence", "k": [], "r": "r1.4", "t": "tf.reverse_sequence"}, {"p": "/versions/r1.4/api_docs/python/tf/reverse_v2", "k": [], "r": "r1.4", "t": "tf.reverse_v2"}, {"p": "/versions/r1.4/api_docs/python/tf/rint", "k": [], "r": "r1.4", "t": "tf.rint"}, {"p": "/versions/r1.4/api_docs/python/tf/round", "k": [], "r": "r1.4", "t": "tf.round"}, {"p": "/versions/r1.4/api_docs/python/tf/rsqrt", "k": [], "r": "r1.4", "t": "tf.rsqrt"}, {"p": "/versions/r1.4/api_docs/python/tf/saturate_cast", "k": [], "r": "r1.4", "t": "tf.saturate_cast"}, {"p": "/versions/r1.4/api_docs/python/tf/saved_model", "k": [], "r": "r1.4", "t": "tf.saved_model"}, {"p": "/versions/r1.4/api_docs/python/tf/saved_model/builder", "k": [], "r": "r1.4", "t": "tf.saved_model.builder"}, {"p": "/versions/r1.4/api_docs/python/tf/saved_model/builder/SavedModelBuilder", "k": ["__init__", "add_meta_graph", "add_meta_graph_and_variables", "save"], "r": "r1.4", "t": "tf.saved_model.builder.SavedModelBuilder"}, {"p": "/versions/r1.4/api_docs/python/tf/saved_model/constants", "k": ["ASSETS_DIRECTORY", "ASSETS_KEY", "LEGACY_INIT_OP_KEY", "MAIN_OP_KEY", "SAVED_MODEL_FILENAME_PB", "SAVED_MODEL_FILENAME_PBTXT", "SAVED_MODEL_SCHEMA_VERSION", "VARIABLES_DIRECTORY", "VARIABLES_FILENAME"], "r": "r1.4", "t": "tf.saved_model.constants"}, {"p": "/versions/r1.4/api_docs/python/tf/saved_model/loader", "k": [], "r": "r1.4", "t": "tf.saved_model.loader"}, {"p": "/versions/r1.4/api_docs/python/tf/saved_model/loader/load", "k": [], "r": "r1.4", "t": "tf.saved_model.loader.load"}, {"p": "/versions/r1.4/api_docs/python/tf/saved_model/loader/maybe_saved_model_directory", "k": [], "r": "r1.4", "t": "tf.saved_model.loader.maybe_saved_model_directory"}, {"p": "/versions/r1.4/api_docs/python/tf/saved_model/main_op", "k": [], "r": "r1.4", "t": "tf.saved_model.main_op"}, {"p": "/versions/r1.4/api_docs/python/tf/saved_model/main_op/main_op", "k": [], "r": "r1.4", "t": "tf.saved_model.main_op.main_op"}, {"p": "/versions/r1.4/api_docs/python/tf/saved_model/main_op/main_op_with_restore", "k": [], "r": "r1.4", "t": "tf.saved_model.main_op.main_op_with_restore"}, {"p": "/versions/r1.4/api_docs/python/tf/saved_model/signature_constants", "k": ["CLASSIFY_INPUTS", "CLASSIFY_METHOD_NAME", "CLASSIFY_OUTPUT_CLASSES", "CLASSIFY_OUTPUT_SCORES", "DEFAULT_SERVING_SIGNATURE_DEF_KEY", "PREDICT_INPUTS", "PREDICT_METHOD_NAME", "PREDICT_OUTPUTS", "REGRESS_INPUTS", "REGRESS_METHOD_NAME", "REGRESS_OUTPUTS"], "r": "r1.4", "t": "tf.saved_model.signature_constants"}, {"p": "/versions/r1.4/api_docs/python/tf/saved_model/signature_def_utils", "k": [], "r": "r1.4", "t": "tf.saved_model.signature_def_utils"}, {"p": "/versions/r1.4/api_docs/python/tf/saved_model/signature_def_utils/build_signature_def", "k": [], "r": "r1.4", "t": "tf.saved_model.signature_def_utils.build_signature_def"}, {"p": "/versions/r1.4/api_docs/python/tf/saved_model/signature_def_utils/classification_signature_def", "k": [], "r": "r1.4", "t": "tf.saved_model.signature_def_utils.classification_signature_def"}, {"p": "/versions/r1.4/api_docs/python/tf/saved_model/signature_def_utils/is_valid_signature", "k": [], "r": "r1.4", "t": "tf.saved_model.signature_def_utils.is_valid_signature"}, {"p": "/versions/r1.4/api_docs/python/tf/saved_model/signature_def_utils/predict_signature_def", "k": [], "r": "r1.4", "t": "tf.saved_model.signature_def_utils.predict_signature_def"}, {"p": "/versions/r1.4/api_docs/python/tf/saved_model/signature_def_utils/regression_signature_def", "k": [], "r": "r1.4", "t": "tf.saved_model.signature_def_utils.regression_signature_def"}, {"p": "/versions/r1.4/api_docs/python/tf/saved_model/tag_constants", "k": ["GPU", "SERVING", "TRAINING"], "r": "r1.4", "t": "tf.saved_model.tag_constants"}, {"p": "/versions/r1.4/api_docs/python/tf/saved_model/utils", "k": [], "r": "r1.4", "t": "tf.saved_model.utils"}, {"p": "/versions/r1.4/api_docs/python/tf/saved_model/utils/build_tensor_info", "k": [], "r": "r1.4", "t": "tf.saved_model.utils.build_tensor_info"}, {"p": "/versions/r1.4/api_docs/python/tf/saved_model/utils/get_tensor_from_tensor_info", "k": [], "r": "r1.4", "t": "tf.saved_model.utils.get_tensor_from_tensor_info"}, {"p": "/versions/r1.4/api_docs/python/tf/scalar_mul", "k": [], "r": "r1.4", "t": "tf.scalar_mul"}, {"p": "/versions/r1.4/api_docs/python/tf/scan", "k": [], "r": "r1.4", "t": "tf.scan"}, {"p": "/versions/r1.4/api_docs/python/tf/scatter_add", "k": [], "r": "r1.4", "t": "tf.scatter_add"}, {"p": "/versions/r1.4/api_docs/python/tf/scatter_div", "k": [], "r": "r1.4", "t": "tf.scatter_div"}, {"p": "/versions/r1.4/api_docs/python/tf/scatter_mul", "k": [], "r": "r1.4", "t": "tf.scatter_mul"}, {"p": "/versions/r1.4/api_docs/python/tf/scatter_nd", "k": [], "r": "r1.4", "t": "tf.scatter_nd"}, {"p": "/versions/r1.4/api_docs/python/tf/scatter_nd_add", "k": [], "r": "r1.4", "t": "tf.scatter_nd_add"}, {"p": "/versions/r1.4/api_docs/python/tf/scatter_nd_sub", "k": [], "r": "r1.4", "t": "tf.scatter_nd_sub"}, {"p": "/versions/r1.4/api_docs/python/tf/scatter_nd_update", "k": [], "r": "r1.4", "t": "tf.scatter_nd_update"}, {"p": "/versions/r1.4/api_docs/python/tf/scatter_sub", "k": [], "r": "r1.4", "t": "tf.scatter_sub"}, {"p": "/versions/r1.4/api_docs/python/tf/scatter_update", "k": [], "r": "r1.4", "t": "tf.scatter_update"}, {"p": "/versions/r1.4/api_docs/python/tf/segment_max", "k": [], "r": "r1.4", "t": "tf.segment_max"}, {"p": "/versions/r1.4/api_docs/python/tf/segment_mean", "k": [], "r": "r1.4", "t": "tf.segment_mean"}, {"p": "/versions/r1.4/api_docs/python/tf/segment_min", "k": [], "r": "r1.4", "t": "tf.segment_min"}, {"p": "/versions/r1.4/api_docs/python/tf/segment_prod", "k": [], "r": "r1.4", "t": "tf.segment_prod"}, {"p": "/versions/r1.4/api_docs/python/tf/segment_sum", "k": [], "r": "r1.4", "t": "tf.segment_sum"}, {"p": "/versions/r1.4/api_docs/python/tf/self_adjoint_eig", "k": [], "r": "r1.4", "t": "tf.self_adjoint_eig"}, {"p": "/versions/r1.4/api_docs/python/tf/self_adjoint_eigvals", "k": [], "r": "r1.4", "t": "tf.self_adjoint_eigvals"}, {"p": "/versions/r1.4/api_docs/python/tf/sequence_mask", "k": [], "r": "r1.4", "t": "tf.sequence_mask"}, {"p": "/versions/r1.4/api_docs/python/tf/serialize_many_sparse", "k": [], "r": "r1.4", "t": "tf.serialize_many_sparse"}, {"p": "/versions/r1.4/api_docs/python/tf/serialize_sparse", "k": [], "r": "r1.4", "t": "tf.serialize_sparse"}, {"p": "/versions/r1.4/api_docs/python/tf/serialize_tensor", "k": [], "r": "r1.4", "t": "tf.serialize_tensor"}, {"p": "/versions/r1.4/api_docs/python/tf/set_random_seed", "k": [], "r": "r1.4", "t": "tf.set_random_seed"}, {"p": "/versions/r1.4/api_docs/python/tf/setdiff1d", "k": [], "r": "r1.4", "t": "tf.setdiff1d"}, {"p": "/versions/r1.4/api_docs/python/tf/sets", "k": [], "r": "r1.4", "t": "tf.sets"}, {"p": "/versions/r1.4/api_docs/python/tf/sets/set_difference", "k": [], "r": "r1.4", "t": "tf.sets.set_difference"}, {"p": "/versions/r1.4/api_docs/python/tf/sets/set_intersection", "k": [], "r": "r1.4", "t": "tf.sets.set_intersection"}, {"p": "/versions/r1.4/api_docs/python/tf/sets/set_size", "k": [], "r": "r1.4", "t": "tf.sets.set_size"}, {"p": "/versions/r1.4/api_docs/python/tf/sets/set_union", "k": [], "r": "r1.4", "t": "tf.sets.set_union"}, {"p": "/versions/r1.4/api_docs/python/tf/shape", "k": [], "r": "r1.4", "t": "tf.shape"}, {"p": "/versions/r1.4/api_docs/python/tf/shape_n", "k": [], "r": "r1.4", "t": "tf.shape_n"}, {"p": "/versions/r1.4/api_docs/python/tf/sigmoid", "k": [], "r": "r1.4", "t": "tf.sigmoid"}, {"p": "/versions/r1.4/api_docs/python/tf/sign", "k": [], "r": "r1.4", "t": "tf.sign"}, {"p": "/versions/r1.4/api_docs/python/tf/sin", "k": [], "r": "r1.4", "t": "tf.sin"}, {"p": "/versions/r1.4/api_docs/python/tf/sinh", "k": [], "r": "r1.4", "t": "tf.sinh"}, {"p": "/versions/r1.4/api_docs/python/tf/size", "k": [], "r": "r1.4", "t": "tf.size"}, {"p": "/versions/r1.4/api_docs/python/tf/slice", "k": [], "r": "r1.4", "t": "tf.slice"}, {"p": "/versions/r1.4/api_docs/python/tf/space_to_batch", "k": [], "r": "r1.4", "t": "tf.space_to_batch"}, {"p": "/versions/r1.4/api_docs/python/tf/space_to_batch_nd", "k": [], "r": "r1.4", "t": "tf.space_to_batch_nd"}, {"p": "/versions/r1.4/api_docs/python/tf/space_to_depth", "k": [], "r": "r1.4", "t": "tf.space_to_depth"}, {"p": "/versions/r1.4/api_docs/python/tf/sparse_add", "k": [], "r": "r1.4", "t": "tf.sparse_add"}, {"p": "/versions/r1.4/api_docs/python/tf/sparse_concat", "k": [], "r": "r1.4", "t": "tf.sparse_concat"}, {"p": "/versions/r1.4/api_docs/python/tf/sparse_fill_empty_rows", "k": [], "r": "r1.4", "t": "tf.sparse_fill_empty_rows"}, {"p": "/versions/r1.4/api_docs/python/tf/sparse_mask", "k": [], "r": "r1.4", "t": "tf.sparse_mask"}, {"p": "/versions/r1.4/api_docs/python/tf/sparse_matmul", "k": [], "r": "r1.4", "t": "tf.sparse_matmul"}, {"p": "/versions/r1.4/api_docs/python/tf/sparse_maximum", "k": [], "r": "r1.4", "t": "tf.sparse_maximum"}, {"p": "/versions/r1.4/api_docs/python/tf/sparse_merge", "k": [], "r": "r1.4", "t": "tf.sparse_merge"}, {"p": "/versions/r1.4/api_docs/python/tf/sparse_minimum", "k": [], "r": "r1.4", "t": "tf.sparse_minimum"}, {"p": "/versions/r1.4/api_docs/python/tf/sparse_placeholder", "k": [], "r": "r1.4", "t": "tf.sparse_placeholder"}, {"p": "/versions/r1.4/api_docs/python/tf/sparse_reduce_max", "k": [], "r": "r1.4", "t": "tf.sparse_reduce_max"}, {"p": "/versions/r1.4/api_docs/python/tf/sparse_reduce_max_sparse", "k": [], "r": "r1.4", "t": "tf.sparse_reduce_max_sparse"}, {"p": "/versions/r1.4/api_docs/python/tf/sparse_reduce_sum", "k": [], "r": "r1.4", "t": "tf.sparse_reduce_sum"}, {"p": "/versions/r1.4/api_docs/python/tf/sparse_reduce_sum_sparse", "k": [], "r": "r1.4", "t": "tf.sparse_reduce_sum_sparse"}, {"p": "/versions/r1.4/api_docs/python/tf/sparse_reorder", "k": [], "r": "r1.4", "t": "tf.sparse_reorder"}, {"p": "/versions/r1.4/api_docs/python/tf/sparse_reset_shape", "k": [], "r": "r1.4", "t": "tf.sparse_reset_shape"}, {"p": "/versions/r1.4/api_docs/python/tf/sparse_reshape", "k": [], "r": "r1.4", "t": "tf.sparse_reshape"}, {"p": "/versions/r1.4/api_docs/python/tf/sparse_retain", "k": [], "r": "r1.4", "t": "tf.sparse_retain"}, {"p": "/versions/r1.4/api_docs/python/tf/sparse_segment_mean", "k": [], "r": "r1.4", "t": "tf.sparse_segment_mean"}, {"p": "/versions/r1.4/api_docs/python/tf/sparse_segment_sqrt_n", "k": [], "r": "r1.4", "t": "tf.sparse_segment_sqrt_n"}, {"p": "/versions/r1.4/api_docs/python/tf/sparse_segment_sum", "k": [], "r": "r1.4", "t": "tf.sparse_segment_sum"}, {"p": "/versions/r1.4/api_docs/python/tf/sparse_slice", "k": [], "r": "r1.4", "t": "tf.sparse_slice"}, {"p": "/versions/r1.4/api_docs/python/tf/sparse_softmax", "k": [], "r": "r1.4", "t": "tf.sparse_softmax"}, {"p": "/versions/r1.4/api_docs/python/tf/sparse_split", "k": [], "r": "r1.4", "t": "tf.sparse_split"}, {"p": "/versions/r1.4/api_docs/python/tf/sparse_tensor_dense_matmul", "k": [], "r": "r1.4", "t": "tf.sparse_tensor_dense_matmul"}, {"p": "/versions/r1.4/api_docs/python/tf/sparse_tensor_to_dense", "k": [], "r": "r1.4", "t": "tf.sparse_tensor_to_dense"}, {"p": "/versions/r1.4/api_docs/python/tf/sparse_to_dense", "k": [], "r": "r1.4", "t": "tf.sparse_to_dense"}, {"p": "/versions/r1.4/api_docs/python/tf/sparse_to_indicator", "k": [], "r": "r1.4", "t": "tf.sparse_to_indicator"}, {"p": "/versions/r1.4/api_docs/python/tf/sparse_transpose", "k": [], "r": "r1.4", "t": "tf.sparse_transpose"}, {"p": "/versions/r1.4/api_docs/python/tf/spectral", "k": [], "r": "r1.4", "t": "tf.spectral"}, {"p": "/versions/r1.4/api_docs/python/tf/spectral/dct", "k": [], "r": "r1.4", "t": "tf.spectral.dct"}, {"p": "/versions/r1.4/api_docs/python/tf/spectral/irfft", "k": [], "r": "r1.4", "t": "tf.spectral.irfft"}, {"p": "/versions/r1.4/api_docs/python/tf/spectral/irfft2d", "k": [], "r": "r1.4", "t": "tf.spectral.irfft2d"}, {"p": "/versions/r1.4/api_docs/python/tf/spectral/irfft3d", "k": [], "r": "r1.4", "t": "tf.spectral.irfft3d"}, {"p": "/versions/r1.4/api_docs/python/tf/spectral/rfft", "k": [], "r": "r1.4", "t": "tf.spectral.rfft"}, {"p": "/versions/r1.4/api_docs/python/tf/spectral/rfft2d", "k": [], "r": "r1.4", "t": "tf.spectral.rfft2d"}, {"p": "/versions/r1.4/api_docs/python/tf/spectral/rfft3d", "k": [], "r": "r1.4", "t": "tf.spectral.rfft3d"}, {"p": "/versions/r1.4/api_docs/python/tf/split", "k": [], "r": "r1.4", "t": "tf.split"}, {"p": "/versions/r1.4/api_docs/python/tf/sqrt", "k": [], "r": "r1.4", "t": "tf.sqrt"}, {"p": "/versions/r1.4/api_docs/python/tf/square", "k": [], "r": "r1.4", "t": "tf.square"}, {"p": "/versions/r1.4/api_docs/python/tf/squared_difference", "k": [], "r": "r1.4", "t": "tf.squared_difference"}, {"p": "/versions/r1.4/api_docs/python/tf/squeeze", "k": [], "r": "r1.4", "t": "tf.squeeze"}, {"p": "/versions/r1.4/api_docs/python/tf/stack", "k": [], "r": "r1.4", "t": "tf.stack"}, {"p": "/versions/r1.4/api_docs/python/tf/stop_gradient", "k": [], "r": "r1.4", "t": "tf.stop_gradient"}, {"p": "/versions/r1.4/api_docs/python/tf/strided_slice", "k": [], "r": "r1.4", "t": "tf.strided_slice"}, {"p": "/versions/r1.4/api_docs/python/tf/string_join", "k": [], "r": "r1.4", "t": "tf.string_join"}, {"p": "/versions/r1.4/api_docs/python/tf/string_split", "k": [], "r": "r1.4", "t": "tf.string_split"}, {"p": "/versions/r1.4/api_docs/python/tf/string_to_hash_bucket", "k": [], "r": "r1.4", "t": "tf.string_to_hash_bucket"}, {"p": "/versions/r1.4/api_docs/python/tf/string_to_hash_bucket_fast", "k": [], "r": "r1.4", "t": "tf.string_to_hash_bucket_fast"}, {"p": "/versions/r1.4/api_docs/python/tf/string_to_hash_bucket_strong", "k": [], "r": "r1.4", "t": "tf.string_to_hash_bucket_strong"}, {"p": "/versions/r1.4/api_docs/python/tf/string_to_number", "k": [], "r": "r1.4", "t": "tf.string_to_number"}, {"p": "/versions/r1.4/api_docs/python/tf/substr", "k": [], "r": "r1.4", "t": "tf.substr"}, {"p": "/versions/r1.4/api_docs/python/tf/subtract", "k": [], "r": "r1.4", "t": "tf.subtract"}, {"p": "/versions/r1.4/api_docs/python/tf/summary", "k": [], "r": "r1.4", "t": "tf.summary"}, {"p": "/versions/r1.4/api_docs/python/tf/summary/FileWriter", "k": ["__enter__", "__exit__", "__init__", "add_event", "add_graph", "add_meta_graph", "add_run_metadata", "add_session_log", "add_summary", "close", "flush", "get_logdir", "reopen"], "r": "r1.4", "t": "tf.summary.FileWriter"}, {"p": "/versions/r1.4/api_docs/python/tf/summary/FileWriterCache", "k": ["clear", "get"], "r": "r1.4", "t": "tf.summary.FileWriterCache"}, {"p": "/versions/r1.4/api_docs/python/tf/summary/SummaryDescription", "k": [], "r": "r1.4", "t": "tf.summary.SummaryDescription"}, {"p": "/versions/r1.4/api_docs/python/tf/summary/TaggedRunMetadata", "k": [], "r": "r1.4", "t": "tf.summary.TaggedRunMetadata"}, {"p": "/versions/r1.4/api_docs/python/tf/summary/audio", "k": [], "r": "r1.4", "t": "tf.summary.audio"}, {"p": "/versions/r1.4/api_docs/python/tf/summary/get_summary_description", "k": [], "r": "r1.4", "t": "tf.summary.get_summary_description"}, {"p": "/versions/r1.4/api_docs/python/tf/summary/histogram", "k": [], "r": "r1.4", "t": "tf.summary.histogram"}, {"p": "/versions/r1.4/api_docs/python/tf/summary/image", "k": [], "r": "r1.4", "t": "tf.summary.image"}, {"p": "/versions/r1.4/api_docs/python/tf/summary/merge", "k": [], "r": "r1.4", "t": "tf.summary.merge"}, {"p": "/versions/r1.4/api_docs/python/tf/summary/merge_all", "k": [], "r": "r1.4", "t": "tf.summary.merge_all"}, {"p": "/versions/r1.4/api_docs/python/tf/summary/scalar", "k": [], "r": "r1.4", "t": "tf.summary.scalar"}, {"p": "/versions/r1.4/api_docs/python/tf/summary/tensor_summary", "k": [], "r": "r1.4", "t": "tf.summary.tensor_summary"}, {"p": "/versions/r1.4/api_docs/python/tf/summary/text", "k": [], "r": "r1.4", "t": "tf.summary.text"}, {"p": "/versions/r1.4/api_docs/python/tf/svd", "k": [], "r": "r1.4", "t": "tf.svd"}, {"p": "/versions/r1.4/api_docs/python/tf/sysconfig", "k": [], "r": "r1.4", "t": "tf.sysconfig"}, {"p": "/versions/r1.4/api_docs/python/tf/sysconfig/get_include", "k": [], "r": "r1.4", "t": "tf.sysconfig.get_include"}, {"p": "/versions/r1.4/api_docs/python/tf/sysconfig/get_lib", "k": [], "r": "r1.4", "t": "tf.sysconfig.get_lib"}, {"p": "/versions/r1.4/api_docs/python/tf/tables_initializer", "k": [], "r": "r1.4", "t": "tf.tables_initializer"}, {"p": "/versions/r1.4/api_docs/python/tf/tan", "k": [], "r": "r1.4", "t": "tf.tan"}, {"p": "/versions/r1.4/api_docs/python/tf/tanh", "k": [], "r": "r1.4", "t": "tf.tanh"}, {"p": "/versions/r1.4/api_docs/python/tf/tensordot", "k": [], "r": "r1.4", "t": "tf.tensordot"}, {"p": "/versions/r1.4/api_docs/python/tf/test", "k": [], "r": "r1.4", "t": "tf.test"}, {"p": "/versions/r1.4/api_docs/python/tf/test/Benchmark", "k": ["is_abstract", "report_benchmark", "run_op_benchmark"], "r": "r1.4", "t": "tf.test.Benchmark"}, {"p": "/versions/r1.4/api_docs/python/tf/test/StubOutForTesting", "k": ["CleanUp", "Set", "SmartSet", "SmartUnsetAll", "UnsetAll", "__del__", "__enter__", "__exit__", "__init__"], "r": "r1.4", "t": "tf.test.StubOutForTesting"}, {"p": "/versions/r1.4/api_docs/python/tf/test/TestCase", "k": ["failureException", "__call__", "__eq__", "__init__", "__ne__", "addCleanup", "addTypeEqualityFunc", "assertAllClose", "assertAllCloseAccordingToType", "assertAllEqual", "assertAlmostEqual", "assertAlmostEquals", "assertArrayNear", "assertDeviceEqual", "assertDictContainsSubset", "assertDictEqual", "assertEqual", "assertEquals", "assertFalse", "assertGreater", "assertGreaterEqual", "assertIn", "assertIs", "assertIsInstance", "assertIsNone", "assertIsNot", "assertIsNotNone", "assertItemsEqual", "assertLess", "assertLessEqual", "assertListEqual", "assertMultiLineEqual", "assertNDArrayNear", "assertNear", "assertNotAlmostEqual", "assertNotAlmostEquals", "assertNotEqual", "assertNotEquals", "assertNotIn", "assertNotIsInstance", "assertNotRegexpMatches", "assertProtoEquals", "assertProtoEqualsVersion", "assertRaises", "assertRaisesOpError", "assertRaisesRegexp", "assertRaisesWithPredicateMatch", "assertRegexpMatches", "assertSequenceEqual", "assertSetEqual", "assertShapeEqual", "assertStartsWith", "assertTrue", "assertTupleEqual", "assert_", "checkedThread", "countTestCases", "debug", "defaultTestResult", "doCleanups", "evaluate", "fail", "failIf", "failIfAlmostEqual", "failIfEqual", "failUnless", "failUnlessAlmostEqual", "failUnlessEqual", "failUnlessRaises", "get_temp_dir", "id", "run", "setUp", "setUpClass", "shortDescription", "skipTest", "tearDown", "tearDownClass", "test_session", "longMessage", "maxDiff"], "r": "r1.4", "t": "tf.test.TestCase"}, {"p": "/versions/r1.4/api_docs/python/tf/test/TestCase/failureException", "k": [], "r": "r1.4", "t": "tf.test.TestCase.failureException"}, {"p": "/versions/r1.4/api_docs/python/tf/test/assert_equal_graph_def", "k": [], "r": "r1.4", "t": "tf.test.assert_equal_graph_def"}, {"p": "/versions/r1.4/api_docs/python/tf/test/compute_gradient", "k": [], "r": "r1.4", "t": "tf.test.compute_gradient"}, {"p": "/versions/r1.4/api_docs/python/tf/test/compute_gradient_error", "k": [], "r": "r1.4", "t": "tf.test.compute_gradient_error"}, {"p": "/versions/r1.4/api_docs/python/tf/test/create_local_cluster", "k": [], "r": "r1.4", "t": "tf.test.create_local_cluster"}, {"p": "/versions/r1.4/api_docs/python/tf/test/get_temp_dir", "k": [], "r": "r1.4", "t": "tf.test.get_temp_dir"}, {"p": "/versions/r1.4/api_docs/python/tf/test/gpu_device_name", "k": [], "r": "r1.4", "t": "tf.test.gpu_device_name"}, {"p": "/versions/r1.4/api_docs/python/tf/test/is_built_with_cuda", "k": [], "r": "r1.4", "t": "tf.test.is_built_with_cuda"}, {"p": "/versions/r1.4/api_docs/python/tf/test/is_gpu_available", "k": [], "r": "r1.4", "t": "tf.test.is_gpu_available"}, {"p": "/versions/r1.4/api_docs/python/tf/test/main", "k": [], "r": "r1.4", "t": "tf.test.main"}, {"p": "/versions/r1.4/api_docs/python/tf/test/test_src_dir_path", "k": [], "r": "r1.4", "t": "tf.test.test_src_dir_path"}, {"p": "/versions/r1.4/api_docs/python/tf/tile", "k": [], "r": "r1.4", "t": "tf.tile"}, {"p": "/versions/r1.4/api_docs/python/tf/to_bfloat16", "k": [], "r": "r1.4", "t": "tf.to_bfloat16"}, {"p": "/versions/r1.4/api_docs/python/tf/to_double", "k": [], "r": "r1.4", "t": "tf.to_double"}, {"p": "/versions/r1.4/api_docs/python/tf/to_float", "k": [], "r": "r1.4", "t": "tf.to_float"}, {"p": "/versions/r1.4/api_docs/python/tf/to_int32", "k": [], "r": "r1.4", "t": "tf.to_int32"}, {"p": "/versions/r1.4/api_docs/python/tf/to_int64", "k": [], "r": "r1.4", "t": "tf.to_int64"}, {"p": "/versions/r1.4/api_docs/python/tf/tools", "k": [], "r": "r1.4", "t": "tf.tools"}, {"p": "/versions/r1.4/api_docs/python/tf/trace", "k": [], "r": "r1.4", "t": "tf.trace"}, {"p": "/versions/r1.4/api_docs/python/tf/train", "k": [], "r": "r1.4", "t": "tf.train"}, {"p": "/versions/r1.4/api_docs/python/tf/train/AdadeltaOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.4", "t": "tf.train.AdadeltaOptimizer"}, {"p": "/versions/r1.4/api_docs/python/tf/train/AdagradDAOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.4", "t": "tf.train.AdagradDAOptimizer"}, {"p": "/versions/r1.4/api_docs/python/tf/train/AdagradOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.4", "t": "tf.train.AdagradOptimizer"}, {"p": "/versions/r1.4/api_docs/python/tf/train/AdamOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.4", "t": "tf.train.AdamOptimizer"}, {"p": "/versions/r1.4/api_docs/python/tf/train/BytesList", "k": [], "r": "r1.4", "t": "tf.train.BytesList"}, {"p": "/versions/r1.4/api_docs/python/tf/train/CheckpointSaverHook", "k": ["__init__", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "r1.4", "t": "tf.train.CheckpointSaverHook"}, {"p": "/versions/r1.4/api_docs/python/tf/train/CheckpointSaverListener", "k": ["after_save", "before_save", "begin", "end"], "r": "r1.4", "t": "tf.train.CheckpointSaverListener"}, {"p": "/versions/r1.4/api_docs/python/tf/train/ChiefSessionCreator", "k": ["__init__", "create_session"], "r": "r1.4", "t": "tf.train.ChiefSessionCreator"}, {"p": "/versions/r1.4/api_docs/python/tf/train/ClusterDef", "k": [], "r": "r1.4", "t": "tf.train.ClusterDef"}, {"p": "/versions/r1.4/api_docs/python/tf/train/ClusterSpec", "k": ["jobs", "__bool__", "__eq__", "__init__", "__ne__", "__nonzero__", "as_cluster_def", "as_dict", "job_tasks", "num_tasks", "task_address", "task_indices"], "r": "r1.4", "t": "tf.train.ClusterSpec"}, {"p": "/versions/r1.4/api_docs/python/tf/train/Coordinator", "k": ["joined", "__init__", "clear_stop", "join", "raise_requested_exception", "register_thread", "request_stop", "should_stop", "stop_on_exception", "wait_for_stop"], "r": "r1.4", "t": "tf.train.Coordinator"}, {"p": "/versions/r1.4/api_docs/python/tf/train/Example", "k": [], "r": "r1.4", "t": "tf.train.Example"}, {"p": "/versions/r1.4/api_docs/python/tf/train/ExponentialMovingAverage", "k": ["__init__", "apply", "average", "average_name", "variables_to_restore"], "r": "r1.4", "t": "tf.train.ExponentialMovingAverage"}, {"p": "/versions/r1.4/api_docs/python/tf/train/Feature", "k": [], "r": "r1.4", "t": "tf.train.Feature"}, {"p": "/versions/r1.4/api_docs/python/tf/train/FeatureList", "k": [], "r": "r1.4", "t": "tf.train.FeatureList"}, {"p": "/versions/r1.4/api_docs/python/tf/train/FeatureLists", "k": ["FeatureListEntry"], "r": "r1.4", "t": "tf.train.FeatureLists"}, {"p": "/versions/r1.4/api_docs/python/tf/train/FeatureLists/FeatureListEntry", "k": [], "r": "r1.4", "t": "tf.train.FeatureLists.FeatureListEntry"}, {"p": "/versions/r1.4/api_docs/python/tf/train/Features", "k": ["FeatureEntry"], "r": "r1.4", "t": "tf.train.Features"}, {"p": "/versions/r1.4/api_docs/python/tf/train/Features/FeatureEntry", "k": [], "r": "r1.4", "t": "tf.train.Features.FeatureEntry"}, {"p": "/versions/r1.4/api_docs/python/tf/train/FeedFnHook", "k": ["__init__", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "r1.4", "t": "tf.train.FeedFnHook"}, {"p": "/versions/r1.4/api_docs/python/tf/train/FinalOpsHook", "k": ["final_ops_values", "__init__", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "r1.4", "t": "tf.train.FinalOpsHook"}, {"p": "/versions/r1.4/api_docs/python/tf/train/FloatList", "k": [], "r": "r1.4", "t": "tf.train.FloatList"}, {"p": "/versions/r1.4/api_docs/python/tf/train/FtrlOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.4", "t": "tf.train.FtrlOptimizer"}, {"p": "/versions/r1.4/api_docs/python/tf/train/GlobalStepWaiterHook", "k": ["__init__", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "r1.4", "t": "tf.train.GlobalStepWaiterHook"}, {"p": "/versions/r1.4/api_docs/python/tf/train/GradientDescentOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.4", "t": "tf.train.GradientDescentOptimizer"}, {"p": "/versions/r1.4/api_docs/python/tf/train/Int64List", "k": [], "r": "r1.4", "t": "tf.train.Int64List"}, {"p": "/versions/r1.4/api_docs/python/tf/train/JobDef", "k": ["TasksEntry"], "r": "r1.4", "t": "tf.train.JobDef"}, {"p": "/versions/r1.4/api_docs/python/tf/train/JobDef/TasksEntry", "k": [], "r": "r1.4", "t": "tf.train.JobDef.TasksEntry"}, {"p": "/versions/r1.4/api_docs/python/tf/train/LoggingTensorHook", "k": ["__init__", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "r1.4", "t": "tf.train.LoggingTensorHook"}, {"p": "/versions/r1.4/api_docs/python/tf/train/LooperThread", "k": ["daemon", "ident", "name", "__init__", "getName", "isAlive", "isDaemon", "is_alive", "join", "loop", "run", "run_loop", "setDaemon", "setName", "start", "start_loop", "stop_loop"], "r": "r1.4", "t": "tf.train.LooperThread"}, {"p": "/versions/r1.4/api_docs/python/tf/train/MomentumOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.4", "t": "tf.train.MomentumOptimizer"}, {"p": "/versions/r1.4/api_docs/python/tf/train/MonitoredSession", "k": ["graph", "__enter__", "__exit__", "__init__", "close", "run", "should_stop"], "r": "r1.4", "t": "tf.train.MonitoredSession"}, {"p": "/versions/r1.4/api_docs/python/tf/train/MonitoredTrainingSession", "k": [], "r": "r1.4", "t": "tf.train.MonitoredTrainingSession"}, {"p": "/versions/r1.4/api_docs/python/tf/train/NanLossDuringTrainingError", "k": [], "r": "r1.4", "t": "tf.train.NanLossDuringTrainingError"}, {"p": "/versions/r1.4/api_docs/python/tf/train/NanTensorHook", "k": ["__init__", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "r1.4", "t": "tf.train.NanTensorHook"}, {"p": "/versions/r1.4/api_docs/python/tf/train/NewCheckpointReader", "k": [], "r": "r1.4", "t": "tf.train.NewCheckpointReader"}, {"p": "/versions/r1.4/api_docs/python/tf/train/Optimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.4", "t": "tf.train.Optimizer"}, {"p": "/versions/r1.4/api_docs/python/tf/train/ProfilerHook", "k": ["__init__", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "r1.4", "t": "tf.train.ProfilerHook"}, {"p": "/versions/r1.4/api_docs/python/tf/train/ProximalAdagradOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.4", "t": "tf.train.ProximalAdagradOptimizer"}, {"p": "/versions/r1.4/api_docs/python/tf/train/ProximalGradientDescentOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.4", "t": "tf.train.ProximalGradientDescentOptimizer"}, {"p": "/versions/r1.4/api_docs/python/tf/train/QueueRunner", "k": ["cancel_op", "close_op", "enqueue_ops", "exceptions_raised", "name", "queue", "queue_closed_exception_types", "__init__", "create_threads", "from_proto", "to_proto"], "r": "r1.4", "t": "tf.train.QueueRunner"}, {"p": "/versions/r1.4/api_docs/python/tf/train/RMSPropOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.4", "t": "tf.train.RMSPropOptimizer"}, {"p": "/versions/r1.4/api_docs/python/tf/train/Saver", "k": ["last_checkpoints", "__init__", "as_saver_def", "build", "export_meta_graph", "from_proto", "recover_last_checkpoints", "restore", "save", "set_last_checkpoints", "set_last_checkpoints_with_time", "to_proto"], "r": "r1.4", "t": "tf.train.Saver"}, {"p": "/versions/r1.4/api_docs/python/tf/train/SaverDef", "k": ["CheckpointFormatVersion", "LEGACY", "V1", "V2"], "r": "r1.4", "t": "tf.train.SaverDef"}, {"p": "/versions/r1.4/api_docs/python/tf/train/Scaffold", "k": ["init_feed_dict", "init_fn", "init_op", "local_init_op", "ready_for_local_init_op", "ready_op", "saver", "summary_op", "__init__", "finalize", "get_or_default"], "r": "r1.4", "t": "tf.train.Scaffold"}, {"p": "/versions/r1.4/api_docs/python/tf/train/SecondOrStepTimer", "k": ["__init__", "last_triggered_step", "reset", "should_trigger_for_step", "update_last_triggered_step"], "r": "r1.4", "t": "tf.train.SecondOrStepTimer"}, {"p": "/versions/r1.4/api_docs/python/tf/train/SequenceExample", "k": [], "r": "r1.4", "t": "tf.train.SequenceExample"}, {"p": "/versions/r1.4/api_docs/python/tf/train/Server", "k": ["server_def", "target", "__init__", "create_local_server", "join", "start"], "r": "r1.4", "t": "tf.train.Server"}, {"p": "/versions/r1.4/api_docs/python/tf/train/ServerDef", "k": [], "r": "r1.4", "t": "tf.train.ServerDef"}, {"p": "/versions/r1.4/api_docs/python/tf/train/SessionCreator", "k": ["create_session"], "r": "r1.4", "t": "tf.train.SessionCreator"}, {"p": "/versions/r1.4/api_docs/python/tf/train/SessionManager", "k": ["__init__", "prepare_session", "recover_session", "wait_for_session"], "r": "r1.4", "t": "tf.train.SessionManager"}, {"p": "/versions/r1.4/api_docs/python/tf/train/SessionRunArgs", "k": ["feed_dict", "fetches", "options", "__new__"], "r": "r1.4", "t": "tf.train.SessionRunArgs"}, {"p": "/versions/r1.4/api_docs/python/tf/train/SessionRunContext", "k": ["original_args", "session", "stop_requested", "__init__", "request_stop"], "r": "r1.4", "t": "tf.train.SessionRunContext"}, {"p": "/versions/r1.4/api_docs/python/tf/train/SessionRunHook", "k": ["after_create_session", "after_run", "before_run", "begin", "end"], "r": "r1.4", "t": "tf.train.SessionRunHook"}, {"p": "/versions/r1.4/api_docs/python/tf/train/SessionRunValues", "k": ["options", "results", "run_metadata", "__new__"], "r": "r1.4", "t": "tf.train.SessionRunValues"}, {"p": "/versions/r1.4/api_docs/python/tf/train/SingularMonitoredSession", "k": ["graph", "__enter__", "__exit__", "__init__", "close", "raw_session", "run", "should_stop"], "r": "r1.4", "t": "tf.train.SingularMonitoredSession"}, {"p": "/versions/r1.4/api_docs/python/tf/train/StepCounterHook", "k": ["__init__", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "r1.4", "t": "tf.train.StepCounterHook"}, {"p": "/versions/r1.4/api_docs/python/tf/train/StopAtStepHook", "k": ["__init__", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "r1.4", "t": "tf.train.StopAtStepHook"}, {"p": "/versions/r1.4/api_docs/python/tf/train/SummarySaverHook", "k": ["__init__", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "r1.4", "t": "tf.train.SummarySaverHook"}, {"p": "/versions/r1.4/api_docs/python/tf/train/Supervisor", "k": ["coord", "global_step", "init_feed_dict", "init_op", "is_chief", "ready_for_local_init_op", "ready_op", "save_model_secs", "save_path", "save_summaries_secs", "saver", "session_manager", "summary_op", "summary_writer", "Loop", "PrepareSession", "RequestStop", "ShouldStop", "StartQueueRunners", "StartStandardServices", "Stop", "StopOnException", "SummaryComputed", "WaitForStop", "__init__", "loop", "managed_session", "prepare_or_wait_for_session", "request_stop", "should_stop", "start_queue_runners", "start_standard_services", "stop", "stop_on_exception", "summary_computed", "wait_for_stop", "USE_DEFAULT"], "r": "r1.4", "t": "tf.train.Supervisor"}, {"p": "/versions/r1.4/api_docs/python/tf/train/SyncReplicasOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_chief_queue_runner", "get_init_tokens_op", "get_name", "get_slot", "get_slot_names", "make_session_run_hook", "minimize", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.4", "t": "tf.train.SyncReplicasOptimizer"}, {"p": "/versions/r1.4/api_docs/python/tf/train/WorkerSessionCreator", "k": ["__init__", "create_session"], "r": "r1.4", "t": "tf.train.WorkerSessionCreator"}, {"p": "/versions/r1.4/api_docs/python/tf/train/add_queue_runner", "k": [], "r": "r1.4", "t": "tf.train.add_queue_runner"}, {"p": "/versions/r1.4/api_docs/python/tf/train/assert_global_step", "k": [], "r": "r1.4", "t": "tf.train.assert_global_step"}, {"p": "/versions/r1.4/api_docs/python/tf/train/basic_train_loop", "k": [], "r": "r1.4", "t": "tf.train.basic_train_loop"}, {"p": "/versions/r1.4/api_docs/python/tf/train/batch", "k": [], "r": "r1.4", "t": "tf.train.batch"}, {"p": "/versions/r1.4/api_docs/python/tf/train/batch_join", "k": [], "r": "r1.4", "t": "tf.train.batch_join"}, {"p": "/versions/r1.4/api_docs/python/tf/train/checkpoint_exists", "k": [], "r": "r1.4", "t": "tf.train.checkpoint_exists"}, {"p": "/versions/r1.4/api_docs/python/tf/train/create_global_step", "k": [], "r": "r1.4", "t": "tf.train.create_global_step"}, {"p": "/versions/r1.4/api_docs/python/tf/train/do_quantize_training_on_graphdef", "k": [], "r": "r1.4", "t": "tf.train.do_quantize_training_on_graphdef"}, {"p": "/versions/r1.4/api_docs/python/tf/train/exponential_decay", "k": [], "r": "r1.4", "t": "tf.train.exponential_decay"}, {"p": "/versions/r1.4/api_docs/python/tf/train/export_meta_graph", "k": [], "r": "r1.4", "t": "tf.train.export_meta_graph"}, {"p": "/versions/r1.4/api_docs/python/tf/train/generate_checkpoint_state_proto", "k": [], "r": "r1.4", "t": "tf.train.generate_checkpoint_state_proto"}, {"p": "/versions/r1.4/api_docs/python/tf/train/get_checkpoint_mtimes", "k": [], "r": "r1.4", "t": "tf.train.get_checkpoint_mtimes"}, {"p": "/versions/r1.4/api_docs/python/tf/train/get_checkpoint_state", "k": [], "r": "r1.4", "t": "tf.train.get_checkpoint_state"}, {"p": "/versions/r1.4/api_docs/python/tf/train/get_global_step", "k": [], "r": "r1.4", "t": "tf.train.get_global_step"}, {"p": "/versions/r1.4/api_docs/python/tf/train/get_or_create_global_step", "k": [], "r": "r1.4", "t": "tf.train.get_or_create_global_step"}, {"p": "/versions/r1.4/api_docs/python/tf/train/global_step", "k": [], "r": "r1.4", "t": "tf.train.global_step"}, {"p": "/versions/r1.4/api_docs/python/tf/train/import_meta_graph", "k": [], "r": "r1.4", "t": "tf.train.import_meta_graph"}, {"p": "/versions/r1.4/api_docs/python/tf/train/init_from_checkpoint", "k": [], "r": "r1.4", "t": "tf.train.init_from_checkpoint"}, {"p": "/versions/r1.4/api_docs/python/tf/train/input_producer", "k": [], "r": "r1.4", "t": "tf.train.input_producer"}, {"p": "/versions/r1.4/api_docs/python/tf/train/inverse_time_decay", "k": [], "r": "r1.4", "t": "tf.train.inverse_time_decay"}, {"p": "/versions/r1.4/api_docs/python/tf/train/latest_checkpoint", "k": [], "r": "r1.4", "t": "tf.train.latest_checkpoint"}, {"p": "/versions/r1.4/api_docs/python/tf/train/limit_epochs", "k": [], "r": "r1.4", "t": "tf.train.limit_epochs"}, {"p": "/versions/r1.4/api_docs/python/tf/train/list_variables", "k": [], "r": "r1.4", "t": "tf.train.list_variables"}, {"p": "/versions/r1.4/api_docs/python/tf/train/load_checkpoint", "k": [], "r": "r1.4", "t": "tf.train.load_checkpoint"}, {"p": "/versions/r1.4/api_docs/python/tf/train/load_variable", "k": [], "r": "r1.4", "t": "tf.train.load_variable"}, {"p": "/versions/r1.4/api_docs/python/tf/train/match_filenames_once", "k": [], "r": "r1.4", "t": "tf.train.match_filenames_once"}, {"p": "/versions/r1.4/api_docs/python/tf/train/maybe_batch", "k": [], "r": "r1.4", "t": "tf.train.maybe_batch"}, {"p": "/versions/r1.4/api_docs/python/tf/train/maybe_batch_join", "k": [], "r": "r1.4", "t": "tf.train.maybe_batch_join"}, {"p": "/versions/r1.4/api_docs/python/tf/train/maybe_shuffle_batch", "k": [], "r": "r1.4", "t": "tf.train.maybe_shuffle_batch"}, {"p": "/versions/r1.4/api_docs/python/tf/train/maybe_shuffle_batch_join", "k": [], "r": "r1.4", "t": "tf.train.maybe_shuffle_batch_join"}, {"p": "/versions/r1.4/api_docs/python/tf/train/natural_exp_decay", "k": [], "r": "r1.4", "t": "tf.train.natural_exp_decay"}, {"p": "/versions/r1.4/api_docs/python/tf/train/piecewise_constant", "k": [], "r": "r1.4", "t": "tf.train.piecewise_constant"}, {"p": "/versions/r1.4/api_docs/python/tf/train/polynomial_decay", "k": [], "r": "r1.4", "t": "tf.train.polynomial_decay"}, {"p": "/versions/r1.4/api_docs/python/tf/train/queue_runner", "k": [], "r": "r1.4", "t": "tf.train.queue_runner"}, {"p": "/versions/r1.4/api_docs/python/tf/train/range_input_producer", "k": [], "r": "r1.4", "t": "tf.train.range_input_producer"}, {"p": "/versions/r1.4/api_docs/python/tf/train/replica_device_setter", "k": [], "r": "r1.4", "t": "tf.train.replica_device_setter"}, {"p": "/versions/r1.4/api_docs/python/tf/train/sdca_fprint", "k": [], "r": "r1.4", "t": "tf.train.sdca_fprint"}, {"p": "/versions/r1.4/api_docs/python/tf/train/sdca_optimizer", "k": [], "r": "r1.4", "t": "tf.train.sdca_optimizer"}, {"p": "/versions/r1.4/api_docs/python/tf/train/sdca_shrink_l1", "k": [], "r": "r1.4", "t": "tf.train.sdca_shrink_l1"}, {"p": "/versions/r1.4/api_docs/python/tf/train/shuffle_batch", "k": [], "r": "r1.4", "t": "tf.train.shuffle_batch"}, {"p": "/versions/r1.4/api_docs/python/tf/train/shuffle_batch_join", "k": [], "r": "r1.4", "t": "tf.train.shuffle_batch_join"}, {"p": "/versions/r1.4/api_docs/python/tf/train/slice_input_producer", "k": [], "r": "r1.4", "t": "tf.train.slice_input_producer"}, {"p": "/versions/r1.4/api_docs/python/tf/train/start_queue_runners", "k": [], "r": "r1.4", "t": "tf.train.start_queue_runners"}, {"p": "/versions/r1.4/api_docs/python/tf/train/string_input_producer", "k": [], "r": "r1.4", "t": "tf.train.string_input_producer"}, {"p": "/versions/r1.4/api_docs/python/tf/train/summary_iterator", "k": [], "r": "r1.4", "t": "tf.train.summary_iterator"}, {"p": "/versions/r1.4/api_docs/python/tf/train/update_checkpoint_state", "k": [], "r": "r1.4", "t": "tf.train.update_checkpoint_state"}, {"p": "/versions/r1.4/api_docs/python/tf/train/write_graph", "k": [], "r": "r1.4", "t": "tf.train.write_graph"}, {"p": "/versions/r1.4/api_docs/python/tf/trainable_variables", "k": [], "r": "r1.4", "t": "tf.trainable_variables"}, {"p": "/versions/r1.4/api_docs/python/tf/transpose", "k": [], "r": "r1.4", "t": "tf.transpose"}, {"p": "/versions/r1.4/api_docs/python/tf/truediv", "k": [], "r": "r1.4", "t": "tf.truediv"}, {"p": "/versions/r1.4/api_docs/python/tf/truncated_normal", "k": [], "r": "r1.4", "t": "tf.truncated_normal"}, {"p": "/versions/r1.4/api_docs/python/tf/truncated_normal_initializer", "k": ["__call__", "__init__", "from_config", "get_config"], "r": "r1.4", "t": "tf.truncated_normal_initializer"}, {"p": "/versions/r1.4/api_docs/python/tf/truncatediv", "k": [], "r": "r1.4", "t": "tf.truncatediv"}, {"p": "/versions/r1.4/api_docs/python/tf/truncatemod", "k": [], "r": "r1.4", "t": "tf.truncatemod"}, {"p": "/versions/r1.4/api_docs/python/tf/tuple", "k": [], "r": "r1.4", "t": "tf.tuple"}, {"p": "/versions/r1.4/api_docs/python/tf/uniform_unit_scaling_initializer", "k": ["__call__", "__init__", "from_config", "get_config"], "r": "r1.4", "t": "tf.uniform_unit_scaling_initializer"}, {"p": "/versions/r1.4/api_docs/python/tf/unique", "k": [], "r": "r1.4", "t": "tf.unique"}, {"p": "/versions/r1.4/api_docs/python/tf/unique_with_counts", "k": [], "r": "r1.4", "t": "tf.unique_with_counts"}, {"p": "/versions/r1.4/api_docs/python/tf/unsorted_segment_max", "k": [], "r": "r1.4", "t": "tf.unsorted_segment_max"}, {"p": "/versions/r1.4/api_docs/python/tf/unsorted_segment_sum", "k": [], "r": "r1.4", "t": "tf.unsorted_segment_sum"}, {"p": "/versions/r1.4/api_docs/python/tf/unstack", "k": [], "r": "r1.4", "t": "tf.unstack"}, {"p": "/versions/r1.4/api_docs/python/tf/user_ops", "k": [], "r": "r1.4", "t": "tf.user_ops"}, {"p": "/versions/r1.4/api_docs/python/tf/variable_axis_size_partitioner", "k": [], "r": "r1.4", "t": "tf.variable_axis_size_partitioner"}, {"p": "/versions/r1.4/api_docs/python/tf/variable_op_scope", "k": [], "r": "r1.4", "t": "tf.variable_op_scope"}, {"p": "/versions/r1.4/api_docs/python/tf/variable_scope", "k": ["__enter__", "__exit__", "__init__"], "r": "r1.4", "t": "tf.variable_scope"}, {"p": "/versions/r1.4/api_docs/python/tf/variables_initializer", "k": [], "r": "r1.4", "t": "tf.variables_initializer"}, {"p": "/versions/r1.4/api_docs/python/tf/variance_scaling_initializer", "k": ["__call__", "__init__", "from_config", "get_config"], "r": "r1.4", "t": "tf.variance_scaling_initializer"}, {"p": "/versions/r1.4/api_docs/python/tf/verify_tensor_all_finite", "k": [], "r": "r1.4", "t": "tf.verify_tensor_all_finite"}, {"p": "/versions/r1.4/api_docs/python/tf/where", "k": [], "r": "r1.4", "t": "tf.where"}, {"p": "/versions/r1.4/api_docs/python/tf/while_loop", "k": [], "r": "r1.4", "t": "tf.while_loop"}, {"p": "/versions/r1.4/api_docs/python/tf/write_file", "k": [], "r": "r1.4", "t": "tf.write_file"}, {"p": "/versions/r1.4/api_docs/python/tf/zeros", "k": [], "r": "r1.4", "t": "tf.zeros"}, {"p": "/versions/r1.4/api_docs/python/tf/zeros_initializer", "k": ["__call__", "__init__", "from_config", "get_config"], "r": "r1.4", "t": "tf.zeros_initializer"}, {"p": "/versions/r1.4/api_docs/python/tf/zeros_like", "k": [], "r": "r1.4", "t": "tf.zeros_like"}, {"p": "/versions/r1.4/api_docs/python/tf/zeta", "k": [], "r": "r1.4", "t": "tf.zeta"}, {"p": "/versions/r1.4/api_docs/python/tfdbg", "k": [], "r": "r1.4", "t": "tfdbg"}, {"p": "/versions/r1.4/api_docs/python/tfdbg/DebugDumpDir", "k": ["core_metadata", "dumped_tensor_data", "python_graph", "run_feed_keys_info", "run_fetches_info", "size", "t0", "__init__", "debug_watch_keys", "devices", "find", "find_some_path", "get_dump_sizes_bytes", "get_rel_timestamps", "get_tensor_file_paths", "get_tensors", "loaded_partition_graphs", "node_attributes", "node_device", "node_exists", "node_inputs", "node_op_type", "node_recipients", "node_traceback", "nodes", "partition_graphs", "reconstructed_non_debug_partition_graphs", "set_python_graph", "transitive_inputs", "watch_key_to_data"], "r": "r1.4", "t": "tfdbg.DebugDumpDir"}, {"p": "/versions/r1.4/api_docs/python/tfdbg/DebugTensorDatum", "k": ["debug_op", "device_name", "dump_size_bytes", "extended_timestamp", "file_path", "node_name", "output_slot", "tensor_name", "timestamp", "watch_key", "__init__", "get_tensor"], "r": "r1.4", "t": "tfdbg.DebugTensorDatum"}, {"p": "/versions/r1.4/api_docs/python/tfdbg/DumpingDebugHook", "k": ["__init__", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "r1.4", "t": "tfdbg.DumpingDebugHook"}, {"p": "/versions/r1.4/api_docs/python/tfdbg/DumpingDebugWrapperSession", "k": ["graph", "graph_def", "run_call_count", "sess_str", "session", "__enter__", "__exit__", "__init__", "as_default", "close", "increment_run_call_count", "invoke_node_stepper", "list_devices", "make_callable", "on_run_end", "on_run_start", "on_session_init", "partial_run", "partial_run_setup", "prepare_run_debug_urls", "reset", "run", "should_stop"], "r": "r1.4", "t": "tfdbg.DumpingDebugWrapperSession"}, {"p": "/versions/r1.4/api_docs/python/tfdbg/GradientsDebugger", "k": ["graph", "y_tensor", "__enter__", "__exit__", "__init__", "gradient_tensor", "gradient_tensors", "identify_gradient", "register_gradient_tensor", "watch_gradients_by_tensor_names", "watch_gradients_by_tensors"], "r": "r1.4", "t": "tfdbg.GradientsDebugger"}, {"p": "/versions/r1.4/api_docs/python/tfdbg/GrpcDebugHook", "k": ["__init__", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "r1.4", "t": "tfdbg.GrpcDebugHook"}, {"p": "/versions/r1.4/api_docs/python/tfdbg/GrpcDebugWrapperSession", "k": ["graph", "graph_def", "run_call_count", "sess_str", "session", "__enter__", "__exit__", "__init__", "as_default", "close", "increment_run_call_count", "invoke_node_stepper", "list_devices", "make_callable", "on_run_end", "on_run_start", "on_session_init", "partial_run", "partial_run_setup", "prepare_run_debug_urls", "reset", "run", "should_stop"], "r": "r1.4", "t": "tfdbg.GrpcDebugWrapperSession"}, {"p": "/versions/r1.4/api_docs/python/tfdbg/LocalCLIDebugHook", "k": ["__init__", "add_tensor_filter", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "r1.4", "t": "tfdbg.LocalCLIDebugHook"}, {"p": "/versions/r1.4/api_docs/python/tfdbg/LocalCLIDebugWrapperSession", "k": ["graph", "graph_def", "run_call_count", "sess_str", "session", "__enter__", "__exit__", "__init__", "add_tensor_filter", "as_default", "close", "increment_run_call_count", "invoke_node_stepper", "list_devices", "make_callable", "on_run_end", "on_run_start", "on_session_init", "partial_run", "partial_run_setup", "reset", "run", "should_stop"], "r": "r1.4", "t": "tfdbg.LocalCLIDebugWrapperSession"}, {"p": "/versions/r1.4/api_docs/python/tfdbg/WatchOptions", "k": ["__init__"], "r": "r1.4", "t": "tfdbg.WatchOptions"}, {"p": "/versions/r1.4/api_docs/python/tfdbg/add_debug_tensor_watch", "k": [], "r": "r1.4", "t": "tfdbg.add_debug_tensor_watch"}, {"p": "/versions/r1.4/api_docs/python/tfdbg/has_inf_or_nan", "k": [], "r": "r1.4", "t": "tfdbg.has_inf_or_nan"}, {"p": "/versions/r1.4/api_docs/python/tfdbg/load_tensor_from_event", "k": [], "r": "r1.4", "t": "tfdbg.load_tensor_from_event"}, {"p": "/versions/r1.4/api_docs/python/tfdbg/load_tensor_from_event_file", "k": [], "r": "r1.4", "t": "tfdbg.load_tensor_from_event_file"}, {"p": "/versions/r1.4/api_docs/python/tfdbg/reconstruct_non_debug_graph_def", "k": [], "r": "r1.4", "t": "tfdbg.reconstruct_non_debug_graph_def"}, {"p": "/versions/r1.4/api_docs/python/tfdbg/watch_graph", "k": [], "r": "r1.4", "t": "tfdbg.watch_graph"}, {"p": "/versions/r1.4/api_docs/python/tfdbg/watch_graph_with_blacklists", "k": [], "r": "r1.4", "t": "tfdbg.watch_graph_with_blacklists"}, {"p": "/versions/r1.5/api_docs/python/tf", "k": ["AUTO_REUSE", "COMPILER_VERSION", "CXX11_ABI_FLAG", "GIT_VERSION", "GRAPH_DEF_VERSION", "GRAPH_DEF_VERSION_MIN_CONSUMER", "GRAPH_DEF_VERSION_MIN_PRODUCER", "MONOLITHIC_BUILD", "QUANTIZED_DTYPES", "VERSION", "__compiler_version__", "__cxx11_abi_flag__", "__git_version__", "__monolithic_build__", "__version__", "bfloat16", "bool", "complex128", "complex64", "double", "float16", "float32", "float64", "half", "int16", "int32", "int64", "int8", "newaxis", "qint16", "qint32", "qint8", "quint16", "quint8", "resource", "string", "uint16", "uint32", "uint64", "uint8", "variant"], "r": "r1.5", "t": "tf"}, {"p": "/versions/r1.5/api_docs/python/tf/AggregationMethod", "k": ["ADD_N", "DEFAULT", "EXPERIMENTAL_ACCUMULATE_N", "EXPERIMENTAL_TREE"], "r": "r1.5", "t": "tf.AggregationMethod"}, {"p": "/versions/r1.5/api_docs/python/tf/Assert", "k": [], "r": "r1.5", "t": "tf.Assert"}, {"p": "/versions/r1.5/api_docs/python/tf/AttrValue", "k": ["ListValue"], "r": "r1.5", "t": "tf.AttrValue"}, {"p": "/versions/r1.5/api_docs/python/tf/AttrValue/ListValue", "k": [], "r": "r1.5", "t": "tf.AttrValue.ListValue"}, {"p": "/versions/r1.5/api_docs/python/tf/ConditionalAccumulator", "k": ["accumulator_ref", "dtype", "name", "__init__", "apply_grad", "num_accumulated", "set_global_step", "take_grad"], "r": "r1.5", "t": "tf.ConditionalAccumulator"}, {"p": "/versions/r1.5/api_docs/python/tf/ConditionalAccumulatorBase", "k": ["accumulator_ref", "dtype", "name", "__init__", "num_accumulated", "set_global_step"], "r": "r1.5", "t": "tf.ConditionalAccumulatorBase"}, {"p": "/versions/r1.5/api_docs/python/tf/ConfigProto", "k": ["DeviceCountEntry"], "r": "r1.5", "t": "tf.ConfigProto"}, {"p": "/versions/r1.5/api_docs/python/tf/ConfigProto/DeviceCountEntry", "k": [], "r": "r1.5", "t": "tf.ConfigProto.DeviceCountEntry"}, {"p": "/versions/r1.5/api_docs/python/tf/DType", "k": ["as_datatype_enum", "as_numpy_dtype", "base_dtype", "is_bool", "is_complex", "is_floating", "is_integer", "is_numpy_compatible", "is_quantized", "is_unsigned", "limits", "max", "min", "name", "real_dtype", "size", "__eq__", "__init__", "__int__", "__ne__", "is_compatible_with"], "r": "r1.5", "t": "tf.DType"}, {"p": "/versions/r1.5/api_docs/python/tf/DeviceSpec", "k": ["job", "replica", "task", "__init__", "from_string", "merge_from", "parse_from_string", "to_string"], "r": "r1.5", "t": "tf.DeviceSpec"}, {"p": "/versions/r1.5/api_docs/python/tf/Dimension", "k": ["value", "__add__", "__div__", "__eq__", "__floordiv__", "__ge__", "__gt__", "__index__", "__init__", "__int__", "__le__", "__long__", "__lt__", "__mod__", "__mul__", "__ne__", "__sub__", "assert_is_compatible_with", "is_compatible_with", "merge_with"], "r": "r1.5", "t": "tf.Dimension"}, {"p": "/versions/r1.5/api_docs/python/tf/Event", "k": [], "r": "r1.5", "t": "tf.Event"}, {"p": "/versions/r1.5/api_docs/python/tf/FIFOQueue", "k": ["dtypes", "name", "names", "queue_ref", "shapes", "__init__", "close", "dequeue", "dequeue_many", "dequeue_up_to", "enqueue", "enqueue_many", "from_list", "is_closed", "size"], "r": "r1.5", "t": "tf.FIFOQueue"}, {"p": "/versions/r1.5/api_docs/python/tf/FixedLenFeature", "k": ["default_value", "dtype", "shape", "__new__"], "r": "r1.5", "t": "tf.FixedLenFeature"}, {"p": "/versions/r1.5/api_docs/python/tf/FixedLenSequenceFeature", "k": ["allow_missing", "default_value", "dtype", "shape", "__new__"], "r": "r1.5", "t": "tf.FixedLenSequenceFeature"}, {"p": "/versions/r1.5/api_docs/python/tf/FixedLengthRecordReader", "k": ["reader_ref", "supports_serialize", "__init__", "num_records_produced", "num_work_units_completed", "read", "read_up_to", "reset", "restore_state", "serialize_state"], "r": "r1.5", "t": "tf.FixedLengthRecordReader"}, {"p": "/versions/r1.5/api_docs/python/tf/GPUOptions", "k": [], "r": "r1.5", "t": "tf.GPUOptions"}, {"p": "/versions/r1.5/api_docs/python/tf/Graph", "k": ["building_function", "collections", "finalized", "graph_def_versions", "seed", "version", "__init__", "add_to_collection", "add_to_collections", "as_default", "as_graph_def", "as_graph_element", "clear_collection", "colocate_with", "container", "control_dependencies", "create_op", "device", "finalize", "get_all_collection_keys", "get_collection", "get_collection_ref", "get_name_scope", "get_operation_by_name", "get_operations", "get_tensor_by_name", "gradient_override_map", "is_feedable", "is_fetchable", "name_scope", "prevent_feeding", "prevent_fetching", "unique_name"], "r": "r1.5", "t": "tf.Graph"}, {"p": "/versions/r1.5/api_docs/python/tf/GraphDef", "k": [], "r": "r1.5", "t": "tf.GraphDef"}, {"p": "/versions/r1.5/api_docs/python/tf/GraphKeys", "k": ["ACTIVATIONS", "ASSET_FILEPATHS", "BIASES", "CONCATENATED_VARIABLES", "COND_CONTEXT", "EVAL_STEP", "GLOBAL_STEP", "GLOBAL_VARIABLES", "INIT_OP", "LOCAL_INIT_OP", "LOCAL_RESOURCES", "LOCAL_VARIABLES", "LOSSES", "METRIC_VARIABLES", "MODEL_VARIABLES", "MOVING_AVERAGE_VARIABLES", "QUEUE_RUNNERS", "READY_FOR_LOCAL_INIT_OP", "READY_OP", "REGULARIZATION_LOSSES", "RESOURCES", "SAVEABLE_OBJECTS", "SAVERS", "SUMMARIES", "SUMMARY_OP", "TABLE_INITIALIZERS", "TRAINABLE_RESOURCE_VARIABLES", "TRAINABLE_VARIABLES", "TRAIN_OP", "UPDATE_OPS", "VARIABLES", "WEIGHTS", "WHILE_CONTEXT"], "r": "r1.5", "t": "tf.GraphKeys"}, {"p": "/versions/r1.5/api_docs/python/tf/GraphOptions", "k": [], "r": "r1.5", "t": "tf.GraphOptions"}, {"p": "/versions/r1.5/api_docs/python/tf/HistogramProto", "k": [], "r": "r1.5", "t": "tf.HistogramProto"}, {"p": "/versions/r1.5/api_docs/python/tf/IdentityReader", "k": ["reader_ref", "supports_serialize", "__init__", "num_records_produced", "num_work_units_completed", "read", "read_up_to", "reset", "restore_state", "serialize_state"], "r": "r1.5", "t": "tf.IdentityReader"}, {"p": "/versions/r1.5/api_docs/python/tf/IndexedSlices", "k": ["dense_shape", "device", "dtype", "graph", "indices", "name", "op", "values", "__init__", "__neg__"], "r": "r1.5", "t": "tf.IndexedSlices"}, {"p": "/versions/r1.5/api_docs/python/tf/InteractiveSession", "k": ["graph", "graph_def", "sess_str", "__init__", "as_default", "close", "list_devices", "make_callable", "partial_run", "partial_run_setup", "run"], "r": "r1.5", "t": "tf.InteractiveSession"}, {"p": "/versions/r1.5/api_docs/python/tf/LMDBReader", "k": ["reader_ref", "supports_serialize", "__init__", "num_records_produced", "num_work_units_completed", "read", "read_up_to", "reset", "restore_state", "serialize_state"], "r": "r1.5", "t": "tf.LMDBReader"}, {"p": "/versions/r1.5/api_docs/python/tf/LogMessage", "k": ["DEBUGGING", "ERROR", "FATAL", "INFO", "Level", "UNKNOWN", "WARN"], "r": "r1.5", "t": "tf.LogMessage"}, {"p": "/versions/r1.5/api_docs/python/tf/MetaGraphDef", "k": ["CollectionDefEntry", "MetaInfoDef", "SignatureDefEntry"], "r": "r1.5", "t": "tf.MetaGraphDef"}, {"p": "/versions/r1.5/api_docs/python/tf/MetaGraphDef/CollectionDefEntry", "k": [], "r": "r1.5", "t": "tf.MetaGraphDef.CollectionDefEntry"}, {"p": "/versions/r1.5/api_docs/python/tf/MetaGraphDef/MetaInfoDef", "k": [], "r": "r1.5", "t": "tf.MetaGraphDef.MetaInfoDef"}, {"p": "/versions/r1.5/api_docs/python/tf/MetaGraphDef/SignatureDefEntry", "k": [], "r": "r1.5", "t": "tf.MetaGraphDef.SignatureDefEntry"}, {"p": "/versions/r1.5/api_docs/python/tf/NameAttrList", "k": ["AttrEntry"], "r": "r1.5", "t": "tf.NameAttrList"}, {"p": "/versions/r1.5/api_docs/python/tf/NameAttrList/AttrEntry", "k": [], "r": "r1.5", "t": "tf.NameAttrList.AttrEntry"}, {"p": "/versions/r1.5/api_docs/python/tf/NoGradient", "k": [], "r": "r1.5", "t": "tf.NoGradient"}, {"p": "/versions/r1.5/api_docs/python/tf/NodeDef", "k": ["AttrEntry"], "r": "r1.5", "t": "tf.NodeDef"}, {"p": "/versions/r1.5/api_docs/python/tf/NodeDef/AttrEntry", "k": [], "r": "r1.5", "t": "tf.NodeDef.AttrEntry"}, {"p": "/versions/r1.5/api_docs/python/tf/OpError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "r1.5", "t": "tf.OpError"}, {"p": "/versions/r1.5/api_docs/python/tf/Operation", "k": ["control_inputs", "device", "graph", "inputs", "name", "node_def", "op_def", "outputs", "traceback", "traceback_with_start_lines", "type", "__init__", "colocation_groups", "get_attr", "run", "values"], "r": "r1.5", "t": "tf.Operation"}, {"p": "/versions/r1.5/api_docs/python/tf/OptimizerOptions", "k": ["DEFAULT", "GlobalJitLevel", "L0", "L1", "Level", "OFF", "ON_1", "ON_2"], "r": "r1.5", "t": "tf.OptimizerOptions"}, {"p": "/versions/r1.5/api_docs/python/tf/PaddingFIFOQueue", "k": ["dtypes", "name", "names", "queue_ref", "shapes", "__init__", "close", "dequeue", "dequeue_many", "dequeue_up_to", "enqueue", "enqueue_many", "from_list", "is_closed", "size"], "r": "r1.5", "t": "tf.PaddingFIFOQueue"}, {"p": "/versions/r1.5/api_docs/python/tf/Print", "k": [], "r": "r1.5", "t": "tf.Print"}, {"p": "/versions/r1.5/api_docs/python/tf/PriorityQueue", "k": ["dtypes", "name", "names", "queue_ref", "shapes", "__init__", "close", "dequeue", "dequeue_many", "dequeue_up_to", "enqueue", "enqueue_many", "from_list", "is_closed", "size"], "r": "r1.5", "t": "tf.PriorityQueue"}, {"p": "/versions/r1.5/api_docs/python/tf/QueueBase", "k": ["dtypes", "name", "names", "queue_ref", "shapes", "__init__", "close", "dequeue", "dequeue_many", "dequeue_up_to", "enqueue", "enqueue_many", "from_list", "is_closed", "size"], "r": "r1.5", "t": "tf.QueueBase"}, {"p": "/versions/r1.5/api_docs/python/tf/RandomShuffleQueue", "k": ["dtypes", "name", "names", "queue_ref", "shapes", "__init__", "close", "dequeue", "dequeue_many", "dequeue_up_to", "enqueue", "enqueue_many", "from_list", "is_closed", "size"], "r": "r1.5", "t": "tf.RandomShuffleQueue"}, {"p": "/versions/r1.5/api_docs/python/tf/ReaderBase", "k": ["reader_ref", "supports_serialize", "__init__", "num_records_produced", "num_work_units_completed", "read", "read_up_to", "reset", "restore_state", "serialize_state"], "r": "r1.5", "t": "tf.ReaderBase"}, {"p": "/versions/r1.5/api_docs/python/tf/RegisterGradient", "k": ["__call__", "__init__"], "r": "r1.5", "t": "tf.RegisterGradient"}, {"p": "/versions/r1.5/api_docs/python/tf/RunMetadata", "k": [], "r": "r1.5", "t": "tf.RunMetadata"}, {"p": "/versions/r1.5/api_docs/python/tf/RunOptions", "k": ["FULL_TRACE", "HARDWARE_TRACE", "NO_TRACE", "SOFTWARE_TRACE", "TraceLevel"], "r": "r1.5", "t": "tf.RunOptions"}, {"p": "/versions/r1.5/api_docs/python/tf/Session", "k": ["graph", "graph_def", "sess_str", "__enter__", "__exit__", "__init__", "as_default", "close", "list_devices", "make_callable", "partial_run", "partial_run_setup", "reset", "run"], "r": "r1.5", "t": "tf.Session"}, {"p": "/versions/r1.5/api_docs/python/tf/SessionLog", "k": ["CHECKPOINT", "START", "STATUS_UNSPECIFIED", "STOP", "SessionStatus"], "r": "r1.5", "t": "tf.SessionLog"}, {"p": "/versions/r1.5/api_docs/python/tf/SparseConditionalAccumulator", "k": ["accumulator_ref", "dtype", "name", "__init__", "apply_grad", "apply_indexed_slices_grad", "num_accumulated", "set_global_step", "take_grad", "take_indexed_slices_grad"], "r": "r1.5", "t": "tf.SparseConditionalAccumulator"}, {"p": "/versions/r1.5/api_docs/python/tf/SparseFeature", "k": ["already_sorted", "dtype", "index_key", "size", "value_key", "__new__"], "r": "r1.5", "t": "tf.SparseFeature"}, {"p": "/versions/r1.5/api_docs/python/tf/SparseTensor", "k": ["dense_shape", "dtype", "graph", "indices", "op", "values", "__div__", "__init__", "__mul__", "__truediv__", "eval", "from_value", "get_shape"], "r": "r1.5", "t": "tf.SparseTensor"}, {"p": "/versions/r1.5/api_docs/python/tf/SparseTensorValue", "k": ["dense_shape", "indices", "values", "__new__"], "r": "r1.5", "t": "tf.SparseTensorValue"}, {"p": "/versions/r1.5/api_docs/python/tf/Summary", "k": ["Audio", "Image", "Value"], "r": "r1.5", "t": "tf.Summary"}, {"p": "/versions/r1.5/api_docs/python/tf/Summary/Audio", "k": [], "r": "r1.5", "t": "tf.Summary.Audio"}, {"p": "/versions/r1.5/api_docs/python/tf/Summary/Image", "k": [], "r": "r1.5", "t": "tf.Summary.Image"}, {"p": "/versions/r1.5/api_docs/python/tf/Summary/Value", "k": [], "r": "r1.5", "t": "tf.Summary.Value"}, {"p": "/versions/r1.5/api_docs/python/tf/SummaryMetadata", "k": ["PluginData"], "r": "r1.5", "t": "tf.SummaryMetadata"}, {"p": "/versions/r1.5/api_docs/python/tf/SummaryMetadata/PluginData", "k": [], "r": "r1.5", "t": "tf.SummaryMetadata.PluginData"}, {"p": "/versions/r1.5/api_docs/python/tf/TFRecordReader", "k": ["reader_ref", "supports_serialize", "__init__", "num_records_produced", "num_work_units_completed", "read", "read_up_to", "reset", "restore_state", "serialize_state"], "r": "r1.5", "t": "tf.TFRecordReader"}, {"p": "/versions/r1.5/api_docs/python/tf/Tensor", "k": ["device", "dtype", "graph", "name", "op", "shape", "value_index", "__abs__", "__add__", "__and__", "__bool__", "__div__", "__eq__", "__floordiv__", "__ge__", "__getitem__", "__gt__", "__init__", "__invert__", "__iter__", "__le__", "__lt__", "__matmul__", "__mod__", "__mul__", "__neg__", "__nonzero__", "__or__", "__pow__", "__radd__", "__rand__", "__rdiv__", "__rfloordiv__", "__rmatmul__", "__rmod__", "__rmul__", "__ror__", "__rpow__", "__rsub__", "__rtruediv__", "__rxor__", "__sub__", "__truediv__", "__xor__", "consumers", "eval", "get_shape", "set_shape", "OVERLOADABLE_OPERATORS", "__array_priority__"], "r": "r1.5", "t": "tf.Tensor"}, {"p": "/versions/r1.5/api_docs/python/tf/TensorArray", "k": ["dtype", "flow", "handle", "__init__", "close", "concat", "gather", "grad", "identity", "read", "scatter", "size", "split", "stack", "unstack", "write"], "r": "r1.5", "t": "tf.TensorArray"}, {"p": "/versions/r1.5/api_docs/python/tf/TensorInfo", "k": ["CooSparse"], "r": "r1.5", "t": "tf.TensorInfo"}, {"p": "/versions/r1.5/api_docs/python/tf/TensorInfo/CooSparse", "k": [], "r": "r1.5", "t": "tf.TensorInfo.CooSparse"}, {"p": "/versions/r1.5/api_docs/python/tf/TensorShape", "k": ["dims", "ndims", "__bool__", "__eq__", "__getitem__", "__init__", "__iter__", "__len__", "__ne__", "__nonzero__", "as_list", "as_proto", "assert_has_rank", "assert_is_compatible_with", "assert_is_fully_defined", "assert_same_rank", "concatenate", "is_compatible_with", "is_fully_defined", "merge_with", "most_specific_compatible_shape", "num_elements", "with_rank", "with_rank_at_least", "with_rank_at_most"], "r": "r1.5", "t": "tf.TensorShape"}, {"p": "/versions/r1.5/api_docs/python/tf/TextLineReader", "k": ["reader_ref", "supports_serialize", "__init__", "num_records_produced", "num_work_units_completed", "read", "read_up_to", "reset", "restore_state", "serialize_state"], "r": "r1.5", "t": "tf.TextLineReader"}, {"p": "/versions/r1.5/api_docs/python/tf/VarLenFeature", "k": ["dtype", "__new__"], "r": "r1.5", "t": "tf.VarLenFeature"}, {"p": "/versions/r1.5/api_docs/python/tf/Variable", "k": ["SaveSliceInfo", "constraint", "device", "dtype", "graph", "initial_value", "initializer", "name", "op", "shape", "__abs__", "__add__", "__and__", "__div__", "__floordiv__", "__ge__", "__getitem__", "__gt__", "__init__", "__invert__", "__iter__", "__le__", "__lt__", "__matmul__", "__mod__", "__mul__", "__neg__", "__or__", "__pow__", "__radd__", "__rand__", "__rdiv__", "__rfloordiv__", "__rmatmul__", "__rmod__", "__rmul__", "__ror__", "__rpow__", "__rsub__", "__rtruediv__", "__rxor__", "__sub__", "__truediv__", "__xor__", "assign", "assign_add", "assign_sub", "count_up_to", "eval", "from_proto", "get_shape", "initialized_value", "load", "read_value", "scatter_sub", "set_shape", "to_proto", "value", "__array_priority__"], "r": "r1.5", "t": "tf.Variable"}, {"p": "/versions/r1.5/api_docs/python/tf/Variable/SaveSliceInfo", "k": ["spec", "__init__", "to_proto"], "r": "r1.5", "t": "tf.Variable.SaveSliceInfo"}, {"p": "/versions/r1.5/api_docs/python/tf/VariableScope", "k": ["caching_device", "constraint", "custom_getter", "dtype", "initializer", "name", "original_name_scope", "partitioner", "regularizer", "reuse", "use_resource", "__init__", "get_collection", "get_variable", "global_variables", "local_variables", "reuse_variables", "set_caching_device", "set_custom_getter", "set_dtype", "set_initializer", "set_partitioner", "set_regularizer", "set_use_resource", "trainable_variables"], "r": "r1.5", "t": "tf.VariableScope"}, {"p": "/versions/r1.5/api_docs/python/tf/WholeFileReader", "k": ["reader_ref", "supports_serialize", "__init__", "num_records_produced", "num_work_units_completed", "read", "read_up_to", "reset", "restore_state", "serialize_state"], "r": "r1.5", "t": "tf.WholeFileReader"}, {"p": "/versions/r1.5/api_docs/python/tf/abs", "k": [], "r": "r1.5", "t": "tf.abs"}, {"p": "/versions/r1.5/api_docs/python/tf/accumulate_n", "k": [], "r": "r1.5", "t": "tf.accumulate_n"}, {"p": "/versions/r1.5/api_docs/python/tf/acos", "k": [], "r": "r1.5", "t": "tf.acos"}, {"p": "/versions/r1.5/api_docs/python/tf/acosh", "k": [], "r": "r1.5", "t": "tf.acosh"}, {"p": "/versions/r1.5/api_docs/python/tf/add", "k": [], "r": "r1.5", "t": "tf.add"}, {"p": "/versions/r1.5/api_docs/python/tf/add_check_numerics_ops", "k": [], "r": "r1.5", "t": "tf.add_check_numerics_ops"}, {"p": "/versions/r1.5/api_docs/python/tf/add_n", "k": [], "r": "r1.5", "t": "tf.add_n"}, {"p": "/versions/r1.5/api_docs/python/tf/add_to_collection", "k": [], "r": "r1.5", "t": "tf.add_to_collection"}, {"p": "/versions/r1.5/api_docs/python/tf/all_variables", "k": [], "r": "r1.5", "t": "tf.all_variables"}, {"p": "/versions/r1.5/api_docs/python/tf/angle", "k": [], "r": "r1.5", "t": "tf.angle"}, {"p": "/versions/r1.5/api_docs/python/tf/app", "k": [], "r": "r1.5", "t": "tf.app"}, {"p": "/versions/r1.5/api_docs/python/tf/app/run", "k": [], "r": "r1.5", "t": "tf.app.run"}, {"p": "/versions/r1.5/api_docs/python/tf/arg_max", "k": [], "r": "r1.5", "t": "tf.arg_max"}, {"p": "/versions/r1.5/api_docs/python/tf/arg_min", "k": [], "r": "r1.5", "t": "tf.arg_min"}, {"p": "/versions/r1.5/api_docs/python/tf/argmax", "k": [], "r": "r1.5", "t": "tf.argmax"}, {"p": "/versions/r1.5/api_docs/python/tf/argmin", "k": [], "r": "r1.5", "t": "tf.argmin"}, {"p": "/versions/r1.5/api_docs/python/tf/as_dtype", "k": [], "r": "r1.5", "t": "tf.as_dtype"}, {"p": "/versions/r1.5/api_docs/python/tf/as_string", "k": [], "r": "r1.5", "t": "tf.as_string"}, {"p": "/versions/r1.5/api_docs/python/tf/asin", "k": [], "r": "r1.5", "t": "tf.asin"}, {"p": "/versions/r1.5/api_docs/python/tf/asinh", "k": [], "r": "r1.5", "t": "tf.asinh"}, {"p": "/versions/r1.5/api_docs/python/tf/assert_equal", "k": [], "r": "r1.5", "t": "tf.assert_equal"}, {"p": "/versions/r1.5/api_docs/python/tf/assert_greater", "k": [], "r": "r1.5", "t": "tf.assert_greater"}, {"p": "/versions/r1.5/api_docs/python/tf/assert_greater_equal", "k": [], "r": "r1.5", "t": "tf.assert_greater_equal"}, {"p": "/versions/r1.5/api_docs/python/tf/assert_integer", "k": [], "r": "r1.5", "t": "tf.assert_integer"}, {"p": "/versions/r1.5/api_docs/python/tf/assert_less", "k": [], "r": "r1.5", "t": "tf.assert_less"}, {"p": "/versions/r1.5/api_docs/python/tf/assert_less_equal", "k": [], "r": "r1.5", "t": "tf.assert_less_equal"}, {"p": "/versions/r1.5/api_docs/python/tf/assert_negative", "k": [], "r": "r1.5", "t": "tf.assert_negative"}, {"p": "/versions/r1.5/api_docs/python/tf/assert_non_negative", "k": [], "r": "r1.5", "t": "tf.assert_non_negative"}, {"p": "/versions/r1.5/api_docs/python/tf/assert_non_positive", "k": [], "r": "r1.5", "t": "tf.assert_non_positive"}, {"p": "/versions/r1.5/api_docs/python/tf/assert_none_equal", "k": [], "r": "r1.5", "t": "tf.assert_none_equal"}, {"p": "/versions/r1.5/api_docs/python/tf/assert_positive", "k": [], "r": "r1.5", "t": "tf.assert_positive"}, {"p": "/versions/r1.5/api_docs/python/tf/assert_proper_iterable", "k": [], "r": "r1.5", "t": "tf.assert_proper_iterable"}, {"p": "/versions/r1.5/api_docs/python/tf/assert_rank", "k": [], "r": "r1.5", "t": "tf.assert_rank"}, {"p": "/versions/r1.5/api_docs/python/tf/assert_rank_at_least", "k": [], "r": "r1.5", "t": "tf.assert_rank_at_least"}, {"p": "/versions/r1.5/api_docs/python/tf/assert_rank_in", "k": [], "r": "r1.5", "t": "tf.assert_rank_in"}, {"p": "/versions/r1.5/api_docs/python/tf/assert_same_float_dtype", "k": [], "r": "r1.5", "t": "tf.assert_same_float_dtype"}, {"p": "/versions/r1.5/api_docs/python/tf/assert_scalar", "k": [], "r": "r1.5", "t": "tf.assert_scalar"}, {"p": "/versions/r1.5/api_docs/python/tf/assert_type", "k": [], "r": "r1.5", "t": "tf.assert_type"}, {"p": "/versions/r1.5/api_docs/python/tf/assert_variables_initialized", "k": [], "r": "r1.5", "t": "tf.assert_variables_initialized"}, {"p": "/versions/r1.5/api_docs/python/tf/assign", "k": [], "r": "r1.5", "t": "tf.assign"}, {"p": "/versions/r1.5/api_docs/python/tf/assign_add", "k": [], "r": "r1.5", "t": "tf.assign_add"}, {"p": "/versions/r1.5/api_docs/python/tf/assign_sub", "k": [], "r": "r1.5", "t": "tf.assign_sub"}, {"p": "/versions/r1.5/api_docs/python/tf/atan", "k": [], "r": "r1.5", "t": "tf.atan"}, {"p": "/versions/r1.5/api_docs/python/tf/atan2", "k": [], "r": "r1.5", "t": "tf.atan2"}, {"p": "/versions/r1.5/api_docs/python/tf/atanh", "k": [], "r": "r1.5", "t": "tf.atanh"}, {"p": "/versions/r1.5/api_docs/python/tf/batch_to_space", "k": [], "r": "r1.5", "t": "tf.batch_to_space"}, {"p": "/versions/r1.5/api_docs/python/tf/batch_to_space_nd", "k": [], "r": "r1.5", "t": "tf.batch_to_space_nd"}, {"p": "/versions/r1.5/api_docs/python/tf/betainc", "k": [], "r": "r1.5", "t": "tf.betainc"}, {"p": "/versions/r1.5/api_docs/python/tf/bincount", "k": [], "r": "r1.5", "t": "tf.bincount"}, {"p": "/versions/r1.5/api_docs/python/tf/bitcast", "k": [], "r": "r1.5", "t": "tf.bitcast"}, {"p": "/versions/r1.5/api_docs/python/tf/bitwise", "k": [], "r": "r1.5", "t": "tf.bitwise"}, {"p": "/versions/r1.5/api_docs/python/tf/bitwise/bitwise_and", "k": [], "r": "r1.5", "t": "tf.bitwise.bitwise_and"}, {"p": "/versions/r1.5/api_docs/python/tf/bitwise/bitwise_or", "k": [], "r": "r1.5", "t": "tf.bitwise.bitwise_or"}, {"p": "/versions/r1.5/api_docs/python/tf/bitwise/bitwise_xor", "k": [], "r": "r1.5", "t": "tf.bitwise.bitwise_xor"}, {"p": "/versions/r1.5/api_docs/python/tf/bitwise/invert", "k": [], "r": "r1.5", "t": "tf.bitwise.invert"}, {"p": "/versions/r1.5/api_docs/python/tf/bitwise/left_shift", "k": [], "r": "r1.5", "t": "tf.bitwise.left_shift"}, {"p": "/versions/r1.5/api_docs/python/tf/bitwise/right_shift", "k": [], "r": "r1.5", "t": "tf.bitwise.right_shift"}, {"p": "/versions/r1.5/api_docs/python/tf/boolean_mask", "k": [], "r": "r1.5", "t": "tf.boolean_mask"}, {"p": "/versions/r1.5/api_docs/python/tf/broadcast_dynamic_shape", "k": [], "r": "r1.5", "t": "tf.broadcast_dynamic_shape"}, {"p": "/versions/r1.5/api_docs/python/tf/broadcast_static_shape", "k": [], "r": "r1.5", "t": "tf.broadcast_static_shape"}, {"p": "/versions/r1.5/api_docs/python/tf/case", "k": [], "r": "r1.5", "t": "tf.case"}, {"p": "/versions/r1.5/api_docs/python/tf/cast", "k": [], "r": "r1.5", "t": "tf.cast"}, {"p": "/versions/r1.5/api_docs/python/tf/ceil", "k": [], "r": "r1.5", "t": "tf.ceil"}, {"p": "/versions/r1.5/api_docs/python/tf/check_numerics", "k": [], "r": "r1.5", "t": "tf.check_numerics"}, {"p": "/versions/r1.5/api_docs/python/tf/cholesky", "k": [], "r": "r1.5", "t": "tf.cholesky"}, {"p": "/versions/r1.5/api_docs/python/tf/cholesky_solve", "k": [], "r": "r1.5", "t": "tf.cholesky_solve"}, {"p": "/versions/r1.5/api_docs/python/tf/clip_by_average_norm", "k": [], "r": "r1.5", "t": "tf.clip_by_average_norm"}, {"p": "/versions/r1.5/api_docs/python/tf/clip_by_global_norm", "k": [], "r": "r1.5", "t": "tf.clip_by_global_norm"}, {"p": "/versions/r1.5/api_docs/python/tf/clip_by_norm", "k": [], "r": "r1.5", "t": "tf.clip_by_norm"}, {"p": "/versions/r1.5/api_docs/python/tf/clip_by_value", "k": [], "r": "r1.5", "t": "tf.clip_by_value"}, {"p": "/versions/r1.5/api_docs/python/tf/colocate_with", "k": [], "r": "r1.5", "t": "tf.colocate_with"}, {"p": "/versions/r1.5/api_docs/python/tf/compat", "k": ["bytes_or_text_types", "complex_types", "integral_types", "real_types"], "r": "r1.5", "t": "tf.compat"}, {"p": "/versions/r1.5/api_docs/python/tf/compat/as_bytes", "k": [], "r": "r1.5", "t": "tf.compat.as_bytes"}, {"p": "/versions/r1.5/api_docs/python/tf/compat/as_str_any", "k": [], "r": "r1.5", "t": "tf.compat.as_str_any"}, {"p": "/versions/r1.5/api_docs/python/tf/compat/as_text", "k": [], "r": "r1.5", "t": "tf.compat.as_text"}, {"p": "/versions/r1.5/api_docs/python/tf/complex", "k": [], "r": "r1.5", "t": "tf.complex"}, {"p": "/versions/r1.5/api_docs/python/tf/concat", "k": [], "r": "r1.5", "t": "tf.concat"}, {"p": "/versions/r1.5/api_docs/python/tf/cond", "k": [], "r": "r1.5", "t": "tf.cond"}, {"p": "/versions/r1.5/api_docs/python/tf/confusion_matrix", "k": [], "r": "r1.5", "t": "tf.confusion_matrix"}, {"p": "/versions/r1.5/api_docs/python/tf/conj", "k": [], "r": "r1.5", "t": "tf.conj"}, {"p": "/versions/r1.5/api_docs/python/tf/constant", "k": [], "r": "r1.5", "t": "tf.constant"}, {"p": "/versions/r1.5/api_docs/python/tf/constant_initializer", "k": ["__call__", "__init__", "from_config", "get_config"], "r": "r1.5", "t": "tf.constant_initializer"}, {"p": "/versions/r1.5/api_docs/python/tf/container", "k": [], "r": "r1.5", "t": "tf.container"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib", "k": [], "r": "r1.5", "t": "tf.contrib"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/bayesflow", "k": [], "r": "r1.5", "t": "tf.contrib.bayesflow"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/bayesflow/csiszar_divergence", "k": [], "r": "r1.5", "t": "tf.contrib.bayesflow.csiszar_divergence"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/bayesflow/csiszar_divergence/amari_alpha", "k": [], "r": "r1.5", "t": "tf.contrib.bayesflow.csiszar_divergence.amari_alpha"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/bayesflow/csiszar_divergence/arithmetic_geometric", "k": [], "r": "r1.5", "t": "tf.contrib.bayesflow.csiszar_divergence.arithmetic_geometric"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/bayesflow/csiszar_divergence/chi_square", "k": [], "r": "r1.5", "t": "tf.contrib.bayesflow.csiszar_divergence.chi_square"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/bayesflow/csiszar_divergence/csiszar_vimco", "k": [], "r": "r1.5", "t": "tf.contrib.bayesflow.csiszar_divergence.csiszar_vimco"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/bayesflow/csiszar_divergence/dual_csiszar_function", "k": [], "r": "r1.5", "t": "tf.contrib.bayesflow.csiszar_divergence.dual_csiszar_function"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/bayesflow/csiszar_divergence/jeffreys", "k": [], "r": "r1.5", "t": "tf.contrib.bayesflow.csiszar_divergence.jeffreys"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/bayesflow/csiszar_divergence/jensen_shannon", "k": [], "r": "r1.5", "t": "tf.contrib.bayesflow.csiszar_divergence.jensen_shannon"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/bayesflow/csiszar_divergence/kl_forward", "k": [], "r": "r1.5", "t": "tf.contrib.bayesflow.csiszar_divergence.kl_forward"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/bayesflow/csiszar_divergence/kl_reverse", "k": [], "r": "r1.5", "t": "tf.contrib.bayesflow.csiszar_divergence.kl_reverse"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/bayesflow/csiszar_divergence/log1p_abs", "k": [], "r": "r1.5", "t": "tf.contrib.bayesflow.csiszar_divergence.log1p_abs"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/bayesflow/csiszar_divergence/modified_gan", "k": [], "r": "r1.5", "t": "tf.contrib.bayesflow.csiszar_divergence.modified_gan"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/bayesflow/csiszar_divergence/monte_carlo_csiszar_f_divergence", "k": [], "r": "r1.5", "t": "tf.contrib.bayesflow.csiszar_divergence.monte_carlo_csiszar_f_divergence"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/bayesflow/csiszar_divergence/pearson", "k": [], "r": "r1.5", "t": "tf.contrib.bayesflow.csiszar_divergence.pearson"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/bayesflow/csiszar_divergence/squared_hellinger", "k": [], "r": "r1.5", "t": "tf.contrib.bayesflow.csiszar_divergence.squared_hellinger"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/bayesflow/csiszar_divergence/symmetrized_csiszar_function", "k": [], "r": "r1.5", "t": "tf.contrib.bayesflow.csiszar_divergence.symmetrized_csiszar_function"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/bayesflow/csiszar_divergence/t_power", "k": [], "r": "r1.5", "t": "tf.contrib.bayesflow.csiszar_divergence.t_power"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/bayesflow/csiszar_divergence/total_variation", "k": [], "r": "r1.5", "t": "tf.contrib.bayesflow.csiszar_divergence.total_variation"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/bayesflow/csiszar_divergence/triangular", "k": [], "r": "r1.5", "t": "tf.contrib.bayesflow.csiszar_divergence.triangular"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/bayesflow/custom_grad", "k": [], "r": "r1.5", "t": "tf.contrib.bayesflow.custom_grad"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/bayesflow/custom_grad/custom_gradient", "k": [], "r": "r1.5", "t": "tf.contrib.bayesflow.custom_grad.custom_gradient"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/bayesflow/halton_sequence", "k": [], "r": "r1.5", "t": "tf.contrib.bayesflow.halton_sequence"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/bayesflow/halton_sequence/sample", "k": [], "r": "r1.5", "t": "tf.contrib.bayesflow.halton_sequence.sample"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/bayesflow/hmc", "k": [], "r": "r1.5", "t": "tf.contrib.bayesflow.hmc"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/bayesflow/hmc/ais_chain", "k": [], "r": "r1.5", "t": "tf.contrib.bayesflow.hmc.ais_chain"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/bayesflow/hmc/chain", "k": [], "r": "r1.5", "t": "tf.contrib.bayesflow.hmc.chain"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/bayesflow/hmc/kernel", "k": [], "r": "r1.5", "t": "tf.contrib.bayesflow.hmc.kernel"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/bayesflow/hmc/leapfrog_integrator", "k": [], "r": "r1.5", "t": "tf.contrib.bayesflow.hmc.leapfrog_integrator"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/bayesflow/hmc/leapfrog_step", "k": [], "r": "r1.5", "t": "tf.contrib.bayesflow.hmc.leapfrog_step"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/bayesflow/layers", "k": [], "r": "r1.5", "t": "tf.contrib.bayesflow.layers"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/bayesflow/layers/DenseVariational", "k": ["activation", "activity_regularizer", "bias", "dtype", "graph", "input", "input_shape", "input_spec", "kernel", "kernel_use_local_reparameterization", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "units", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "r1.5", "t": "tf.contrib.bayesflow.layers.DenseVariational"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/bayesflow/layers/default_loc_scale_fn", "k": [], "r": "r1.5", "t": "tf.contrib.bayesflow.layers.default_loc_scale_fn"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/bayesflow/layers/default_mean_field_normal_fn", "k": [], "r": "r1.5", "t": "tf.contrib.bayesflow.layers.default_mean_field_normal_fn"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/bayesflow/layers/dense_variational", "k": [], "r": "r1.5", "t": "tf.contrib.bayesflow.layers.dense_variational"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/bayesflow/metropolis_hastings", "k": [], "r": "r1.5", "t": "tf.contrib.bayesflow.metropolis_hastings"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/bayesflow/metropolis_hastings/evolve", "k": [], "r": "r1.5", "t": "tf.contrib.bayesflow.metropolis_hastings.evolve"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/bayesflow/metropolis_hastings/normal_random_proposal", "k": [], "r": "r1.5", "t": "tf.contrib.bayesflow.metropolis_hastings.normal_random_proposal"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/bayesflow/metropolis_hastings/uniform_random_proposal", "k": [], "r": "r1.5", "t": "tf.contrib.bayesflow.metropolis_hastings.uniform_random_proposal"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/bayesflow/monte_carlo", "k": [], "r": "r1.5", "t": "tf.contrib.bayesflow.monte_carlo"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/bayesflow/monte_carlo/expectation", "k": [], "r": "r1.5", "t": "tf.contrib.bayesflow.monte_carlo.expectation"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/bayesflow/monte_carlo/expectation_importance_sampler", "k": [], "r": "r1.5", "t": "tf.contrib.bayesflow.monte_carlo.expectation_importance_sampler"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/bayesflow/monte_carlo/expectation_importance_sampler_logspace", "k": [], "r": "r1.5", "t": "tf.contrib.bayesflow.monte_carlo.expectation_importance_sampler_logspace"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/bayesflow/optimizers", "k": [], "r": "r1.5", "t": "tf.contrib.bayesflow.optimizers"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/bayesflow/optimizers/SGLDOptimizer", "k": ["variable_scope", "__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.5", "t": "tf.contrib.bayesflow.optimizers.SGLDOptimizer"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/cloud", "k": [], "r": "r1.5", "t": "tf.contrib.cloud"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/cloud/BigQueryReader", "k": ["reader_ref", "supports_serialize", "__init__", "num_records_produced", "num_work_units_completed", "partitions", "read", "read_up_to", "reset", "restore_state", "serialize_state"], "r": "r1.5", "t": "tf.contrib.cloud.BigQueryReader"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/cluster_resolver", "k": [], "r": "r1.5", "t": "tf.contrib.cluster_resolver"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/compiler", "k": [], "r": "r1.5", "t": "tf.contrib.compiler"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/copy_graph", "k": [], "r": "r1.5", "t": "tf.contrib.copy_graph"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/copy_graph/copy_op_to_graph", "k": [], "r": "r1.5", "t": "tf.contrib.copy_graph.copy_op_to_graph"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/copy_graph/copy_variable_to_graph", "k": [], "r": "r1.5", "t": "tf.contrib.copy_graph.copy_variable_to_graph"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/copy_graph/get_copied_op", "k": [], "r": "r1.5", "t": "tf.contrib.copy_graph.get_copied_op"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/crf", "k": [], "r": "r1.5", "t": "tf.contrib.crf"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/crf/CrfDecodeBackwardRnnCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.5", "t": "tf.contrib.crf.CrfDecodeBackwardRnnCell"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/crf/CrfDecodeForwardRnnCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.5", "t": "tf.contrib.crf.CrfDecodeForwardRnnCell"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/crf/CrfForwardRnnCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.5", "t": "tf.contrib.crf.CrfForwardRnnCell"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/crf/crf_binary_score", "k": [], "r": "r1.5", "t": "tf.contrib.crf.crf_binary_score"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/crf/crf_decode", "k": [], "r": "r1.5", "t": "tf.contrib.crf.crf_decode"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/crf/crf_log_likelihood", "k": [], "r": "r1.5", "t": "tf.contrib.crf.crf_log_likelihood"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/crf/crf_log_norm", "k": [], "r": "r1.5", "t": "tf.contrib.crf.crf_log_norm"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/crf/crf_sequence_score", "k": [], "r": "r1.5", "t": "tf.contrib.crf.crf_sequence_score"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/crf/crf_unary_score", "k": [], "r": "r1.5", "t": "tf.contrib.crf.crf_unary_score"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/crf/viterbi_decode", "k": [], "r": "r1.5", "t": "tf.contrib.crf.viterbi_decode"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/cudnn_rnn", "k": [], "r": "r1.5", "t": "tf.contrib.cudnn_rnn"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/cudnn_rnn/CudnnCompatibleGRUCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.5", "t": "tf.contrib.cudnn_rnn.CudnnCompatibleGRUCell"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/cudnn_rnn/CudnnCompatibleLSTMCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.5", "t": "tf.contrib.cudnn_rnn.CudnnCompatibleLSTMCell"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/cudnn_rnn/CudnnGRU", "k": ["activity_regularizer", "canonical_bias_shapes", "canonical_weight_shapes", "direction", "dtype", "graph", "input", "input_mode", "input_shape", "input_size", "losses", "name", "non_trainable_variables", "non_trainable_weights", "num_dirs", "num_layers", "num_units", "output", "output_shape", "rnn_mode", "saveable", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "state_shape"], "r": "r1.5", "t": "tf.contrib.cudnn_rnn.CudnnGRU"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/cudnn_rnn/CudnnGRUSaveable", "k": ["__init__", "restore"], "r": "r1.5", "t": "tf.contrib.cudnn_rnn.CudnnGRUSaveable"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/cudnn_rnn/CudnnLSTM", "k": ["activity_regularizer", "canonical_bias_shapes", "canonical_weight_shapes", "direction", "dtype", "graph", "input", "input_mode", "input_shape", "input_size", "losses", "name", "non_trainable_variables", "non_trainable_weights", "num_dirs", "num_layers", "num_units", "output", "output_shape", "rnn_mode", "saveable", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "state_shape"], "r": "r1.5", "t": "tf.contrib.cudnn_rnn.CudnnLSTM"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/cudnn_rnn/CudnnLSTMSaveable", "k": ["__init__", "restore"], "r": "r1.5", "t": "tf.contrib.cudnn_rnn.CudnnLSTMSaveable"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/cudnn_rnn/CudnnRNNRelu", "k": ["activity_regularizer", "canonical_bias_shapes", "canonical_weight_shapes", "direction", "dtype", "graph", "input", "input_mode", "input_shape", "input_size", "losses", "name", "non_trainable_variables", "non_trainable_weights", "num_dirs", "num_layers", "num_units", "output", "output_shape", "rnn_mode", "saveable", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "state_shape"], "r": "r1.5", "t": "tf.contrib.cudnn_rnn.CudnnRNNRelu"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/cudnn_rnn/CudnnRNNReluSaveable", "k": ["__init__", "restore"], "r": "r1.5", "t": "tf.contrib.cudnn_rnn.CudnnRNNReluSaveable"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/cudnn_rnn/CudnnRNNTanh", "k": ["activity_regularizer", "canonical_bias_shapes", "canonical_weight_shapes", "direction", "dtype", "graph", "input", "input_mode", "input_shape", "input_size", "losses", "name", "non_trainable_variables", "non_trainable_weights", "num_dirs", "num_layers", "num_units", "output", "output_shape", "rnn_mode", "saveable", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "state_shape"], "r": "r1.5", "t": "tf.contrib.cudnn_rnn.CudnnRNNTanh"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/cudnn_rnn/CudnnRNNTanhSaveable", "k": ["__init__", "restore"], "r": "r1.5", "t": "tf.contrib.cudnn_rnn.CudnnRNNTanhSaveable"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/data", "k": [], "r": "r1.5", "t": "tf.contrib.data"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/data/Counter", "k": [], "r": "r1.5", "t": "tf.contrib.data.Counter"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/data/Dataset", "k": ["output_classes", "output_shapes", "output_types", "__init__", "apply", "batch", "cache", "concatenate", "dense_to_sparse_batch", "enumerate", "filter", "flat_map", "from_generator", "from_sparse_tensor_slices", "from_tensor_slices", "from_tensors", "group_by_window", "ignore_errors", "interleave", "list_files", "make_dataset_resource", "make_initializable_iterator", "make_one_shot_iterator", "map", "padded_batch", "prefetch", "range", "repeat", "shard", "shuffle", "skip", "take", "unbatch", "zip"], "r": "r1.5", "t": "tf.contrib.data.Dataset"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/data/FixedLengthRecordDataset", "k": ["output_classes", "output_shapes", "output_types", "__init__", "apply", "batch", "cache", "concatenate", "dense_to_sparse_batch", "enumerate", "filter", "flat_map", "from_generator", "from_sparse_tensor_slices", "from_tensor_slices", "from_tensors", "group_by_window", "ignore_errors", "interleave", "list_files", "make_dataset_resource", "make_initializable_iterator", "make_one_shot_iterator", "map", "padded_batch", "prefetch", "range", "repeat", "shard", "shuffle", "skip", "take", "unbatch", "zip"], "r": "r1.5", "t": "tf.contrib.data.FixedLengthRecordDataset"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/data/TFRecordDataset", "k": ["output_classes", "output_shapes", "output_types", "__init__", "apply", "batch", "cache", "concatenate", "dense_to_sparse_batch", "enumerate", "filter", "flat_map", "from_generator", "from_sparse_tensor_slices", "from_tensor_slices", "from_tensors", "group_by_window", "ignore_errors", "interleave", "list_files", "make_dataset_resource", "make_initializable_iterator", "make_one_shot_iterator", "map", "padded_batch", "prefetch", "range", "repeat", "shard", "shuffle", "skip", "take", "unbatch", "zip"], "r": "r1.5", "t": "tf.contrib.data.TFRecordDataset"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/data/TextLineDataset", "k": ["output_classes", "output_shapes", "output_types", "__init__", "apply", "batch", "cache", "concatenate", "dense_to_sparse_batch", "enumerate", "filter", "flat_map", "from_generator", "from_sparse_tensor_slices", "from_tensor_slices", "from_tensors", "group_by_window", "ignore_errors", "interleave", "list_files", "make_dataset_resource", "make_initializable_iterator", "make_one_shot_iterator", "map", "padded_batch", "prefetch", "range", "repeat", "shard", "shuffle", "skip", "take", "unbatch", "zip"], "r": "r1.5", "t": "tf.contrib.data.TextLineDataset"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/data/batch_and_drop_remainder", "k": [], "r": "r1.5", "t": "tf.contrib.data.batch_and_drop_remainder"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/data/dense_to_sparse_batch", "k": [], "r": "r1.5", "t": "tf.contrib.data.dense_to_sparse_batch"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/data/enumerate_dataset", "k": [], "r": "r1.5", "t": "tf.contrib.data.enumerate_dataset"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/data/get_single_element", "k": [], "r": "r1.5", "t": "tf.contrib.data.get_single_element"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/data/group_by_window", "k": [], "r": "r1.5", "t": "tf.contrib.data.group_by_window"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/data/ignore_errors", "k": [], "r": "r1.5", "t": "tf.contrib.data.ignore_errors"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/data/make_saveable_from_iterator", "k": [], "r": "r1.5", "t": "tf.contrib.data.make_saveable_from_iterator"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/data/padded_batch_and_drop_remainder", "k": [], "r": "r1.5", "t": "tf.contrib.data.padded_batch_and_drop_remainder"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/data/parallel_interleave", "k": [], "r": "r1.5", "t": "tf.contrib.data.parallel_interleave"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/data/read_batch_features", "k": [], "r": "r1.5", "t": "tf.contrib.data.read_batch_features"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/data/rejection_resample", "k": [], "r": "r1.5", "t": "tf.contrib.data.rejection_resample"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/data/scan", "k": [], "r": "r1.5", "t": "tf.contrib.data.scan"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/data/sloppy_interleave", "k": [], "r": "r1.5", "t": "tf.contrib.data.sloppy_interleave"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/data/unbatch", "k": [], "r": "r1.5", "t": "tf.contrib.data.unbatch"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/decision_trees", "k": [], "r": "r1.5", "t": "tf.contrib.decision_trees"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/deprecated", "k": [], "r": "r1.5", "t": "tf.contrib.deprecated"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/deprecated/audio_summary", "k": [], "r": "r1.5", "t": "tf.contrib.deprecated.audio_summary"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/deprecated/histogram_summary", "k": [], "r": "r1.5", "t": "tf.contrib.deprecated.histogram_summary"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/deprecated/image_summary", "k": [], "r": "r1.5", "t": "tf.contrib.deprecated.image_summary"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/deprecated/merge_all_summaries", "k": [], "r": "r1.5", "t": "tf.contrib.deprecated.merge_all_summaries"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/deprecated/merge_summary", "k": [], "r": "r1.5", "t": "tf.contrib.deprecated.merge_summary"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/deprecated/scalar_summary", "k": [], "r": "r1.5", "t": "tf.contrib.deprecated.scalar_summary"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/distributions", "k": ["FULLY_REPARAMETERIZED", "NOT_REPARAMETERIZED"], "r": "r1.5", "t": "tf.contrib.distributions"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/distributions/BernoulliWithSigmoidProbs", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "logits", "name", "parameters", "probs", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.5", "t": "tf.contrib.distributions.BernoulliWithSigmoidProbs"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/distributions/BetaWithSoftplusConcentration", "k": ["allow_nan_stats", "batch_shape", "concentration0", "concentration1", "dtype", "event_shape", "name", "parameters", "reparameterization_type", "total_concentration", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.5", "t": "tf.contrib.distributions.BetaWithSoftplusConcentration"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/distributions/Binomial", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "logits", "name", "parameters", "probs", "reparameterization_type", "total_count", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.5", "t": "tf.contrib.distributions.Binomial"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/distributions/Cauchy", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.5", "t": "tf.contrib.distributions.Cauchy"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/distributions/Chi2", "k": ["allow_nan_stats", "batch_shape", "concentration", "df", "dtype", "event_shape", "name", "parameters", "rate", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.5", "t": "tf.contrib.distributions.Chi2"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/distributions/Chi2WithAbsDf", "k": ["allow_nan_stats", "batch_shape", "concentration", "df", "dtype", "event_shape", "name", "parameters", "rate", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.5", "t": "tf.contrib.distributions.Chi2WithAbsDf"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/distributions/ConditionalDistribution", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "name", "parameters", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.5", "t": "tf.contrib.distributions.ConditionalDistribution"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/distributions/ConditionalTransformedDistribution", "k": ["allow_nan_stats", "batch_shape", "bijector", "distribution", "dtype", "event_shape", "name", "parameters", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.5", "t": "tf.contrib.distributions.ConditionalTransformedDistribution"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/distributions/Deterministic", "k": ["allow_nan_stats", "atol", "batch_shape", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "rtol", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.5", "t": "tf.contrib.distributions.Deterministic"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/distributions/ExpRelaxedOneHotCategorical", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "event_size", "logits", "name", "parameters", "probs", "reparameterization_type", "temperature", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.5", "t": "tf.contrib.distributions.ExpRelaxedOneHotCategorical"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/distributions/ExponentialWithSoftplusRate", "k": ["allow_nan_stats", "batch_shape", "concentration", "dtype", "event_shape", "name", "parameters", "rate", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.5", "t": "tf.contrib.distributions.ExponentialWithSoftplusRate"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/distributions/GammaWithSoftplusConcentrationRate", "k": ["allow_nan_stats", "batch_shape", "concentration", "dtype", "event_shape", "name", "parameters", "rate", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.5", "t": "tf.contrib.distributions.GammaWithSoftplusConcentrationRate"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/distributions/Geometric", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "logits", "name", "parameters", "probs", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.5", "t": "tf.contrib.distributions.Geometric"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/distributions/HalfNormal", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "name", "parameters", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.5", "t": "tf.contrib.distributions.HalfNormal"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/distributions/Independent", "k": ["allow_nan_stats", "batch_shape", "distribution", "dtype", "event_shape", "name", "parameters", "reinterpreted_batch_ndims", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.5", "t": "tf.contrib.distributions.Independent"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/distributions/InverseGamma", "k": ["allow_nan_stats", "batch_shape", "concentration", "dtype", "event_shape", "name", "parameters", "rate", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.5", "t": "tf.contrib.distributions.InverseGamma"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/distributions/InverseGammaWithSoftplusConcentrationRate", "k": ["allow_nan_stats", "batch_shape", "concentration", "dtype", "event_shape", "name", "parameters", "rate", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.5", "t": "tf.contrib.distributions.InverseGammaWithSoftplusConcentrationRate"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/distributions/LaplaceWithSoftplusScale", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.5", "t": "tf.contrib.distributions.LaplaceWithSoftplusScale"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/distributions/Logistic", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.5", "t": "tf.contrib.distributions.Logistic"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/distributions/Mixture", "k": ["allow_nan_stats", "batch_shape", "cat", "components", "dtype", "event_shape", "name", "num_components", "parameters", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "entropy_lower_bound", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.5", "t": "tf.contrib.distributions.Mixture"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/distributions/MixtureSameFamily", "k": ["allow_nan_stats", "batch_shape", "components_distribution", "dtype", "event_shape", "mixture_distribution", "name", "parameters", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.5", "t": "tf.contrib.distributions.MixtureSameFamily"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/distributions/MultivariateNormalDiag", "k": ["allow_nan_stats", "batch_shape", "bijector", "distribution", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.5", "t": "tf.contrib.distributions.MultivariateNormalDiag"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/distributions/MultivariateNormalDiagPlusLowRank", "k": ["allow_nan_stats", "batch_shape", "bijector", "distribution", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.5", "t": "tf.contrib.distributions.MultivariateNormalDiagPlusLowRank"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/distributions/MultivariateNormalDiagWithSoftplusScale", "k": ["allow_nan_stats", "batch_shape", "bijector", "distribution", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.5", "t": "tf.contrib.distributions.MultivariateNormalDiagWithSoftplusScale"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/distributions/MultivariateNormalFullCovariance", "k": ["allow_nan_stats", "batch_shape", "bijector", "distribution", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.5", "t": "tf.contrib.distributions.MultivariateNormalFullCovariance"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/distributions/MultivariateNormalTriL", "k": ["allow_nan_stats", "batch_shape", "bijector", "distribution", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.5", "t": "tf.contrib.distributions.MultivariateNormalTriL"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/distributions/NegativeBinomial", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "logits", "name", "parameters", "probs", "reparameterization_type", "total_count", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.5", "t": "tf.contrib.distributions.NegativeBinomial"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/distributions/NormalWithSoftplusScale", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.5", "t": "tf.contrib.distributions.NormalWithSoftplusScale"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/distributions/OneHotCategorical", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "event_size", "logits", "name", "parameters", "probs", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.5", "t": "tf.contrib.distributions.OneHotCategorical"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/distributions/Poisson", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "log_rate", "name", "parameters", "rate", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.5", "t": "tf.contrib.distributions.Poisson"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/distributions/PoissonLogNormalQuadratureCompound", "k": ["allow_nan_stats", "batch_shape", "distribution", "dtype", "event_shape", "loc", "mixture_distribution", "name", "parameters", "quadrature_grid", "quadrature_probs", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.5", "t": "tf.contrib.distributions.PoissonLogNormalQuadratureCompound"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/distributions/QuantizedDistribution", "k": ["allow_nan_stats", "batch_shape", "distribution", "dtype", "event_shape", "name", "parameters", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.5", "t": "tf.contrib.distributions.QuantizedDistribution"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/distributions/RelaxedBernoulli", "k": ["allow_nan_stats", "batch_shape", "bijector", "distribution", "dtype", "event_shape", "logits", "name", "parameters", "probs", "reparameterization_type", "temperature", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.5", "t": "tf.contrib.distributions.RelaxedBernoulli"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/distributions/RelaxedOneHotCategorical", "k": ["allow_nan_stats", "batch_shape", "bijector", "distribution", "dtype", "event_shape", "name", "parameters", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.5", "t": "tf.contrib.distributions.RelaxedOneHotCategorical"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/distributions/SinhArcsinh", "k": ["allow_nan_stats", "batch_shape", "bijector", "distribution", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "skewness", "tailweight", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.5", "t": "tf.contrib.distributions.SinhArcsinh"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/distributions/StudentTWithAbsDfSoftplusScale", "k": ["allow_nan_stats", "batch_shape", "df", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.5", "t": "tf.contrib.distributions.StudentTWithAbsDfSoftplusScale"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/distributions/TransformedDistribution", "k": ["allow_nan_stats", "batch_shape", "bijector", "distribution", "dtype", "event_shape", "name", "parameters", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.5", "t": "tf.contrib.distributions.TransformedDistribution"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/distributions/VectorDeterministic", "k": ["allow_nan_stats", "atol", "batch_shape", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "rtol", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.5", "t": "tf.contrib.distributions.VectorDeterministic"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/distributions/VectorDiffeomixture", "k": ["allow_nan_stats", "batch_shape", "distribution", "dtype", "endpoint_affine", "event_shape", "interpolate_weight", "interpolated_affine", "mixture_distribution", "name", "parameters", "quadrature_grid", "quadrature_probs", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.5", "t": "tf.contrib.distributions.VectorDiffeomixture"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/distributions/VectorExponentialDiag", "k": ["allow_nan_stats", "batch_shape", "bijector", "distribution", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.5", "t": "tf.contrib.distributions.VectorExponentialDiag"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/distributions/VectorLaplaceDiag", "k": ["allow_nan_stats", "batch_shape", "bijector", "distribution", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.5", "t": "tf.contrib.distributions.VectorLaplaceDiag"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/distributions/VectorSinhArcsinhDiag", "k": ["allow_nan_stats", "batch_shape", "bijector", "distribution", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "skewness", "tailweight", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.5", "t": "tf.contrib.distributions.VectorSinhArcsinhDiag"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/distributions/WishartCholesky", "k": ["allow_nan_stats", "batch_shape", "cholesky_input_output_matrices", "df", "dimension", "dtype", "event_shape", "name", "parameters", "reparameterization_type", "scale_operator", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_normalization", "log_prob", "log_survival_function", "mean", "mean_log_det", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "scale", "stddev", "survival_function", "variance"], "r": "r1.5", "t": "tf.contrib.distributions.WishartCholesky"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/distributions/WishartFull", "k": ["allow_nan_stats", "batch_shape", "cholesky_input_output_matrices", "df", "dimension", "dtype", "event_shape", "name", "parameters", "reparameterization_type", "scale_operator", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_normalization", "log_prob", "log_survival_function", "mean", "mean_log_det", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "scale", "stddev", "survival_function", "variance"], "r": "r1.5", "t": "tf.contrib.distributions.WishartFull"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/distributions/assign_log_moving_mean_exp", "k": [], "r": "r1.5", "t": "tf.contrib.distributions.assign_log_moving_mean_exp"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/distributions/assign_moving_mean_variance", "k": [], "r": "r1.5", "t": "tf.contrib.distributions.assign_moving_mean_variance"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/distributions/bijectors", "k": [], "r": "r1.5", "t": "tf.contrib.distributions.bijectors"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/distributions/bijectors/AbsoluteValue", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.5", "t": "tf.contrib.distributions.bijectors.AbsoluteValue"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/distributions/bijectors/Affine", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "scale", "shift", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.5", "t": "tf.contrib.distributions.bijectors.Affine"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/distributions/bijectors/AffineLinearOperator", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "scale", "shift", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.5", "t": "tf.contrib.distributions.bijectors.AffineLinearOperator"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/distributions/bijectors/Chain", "k": ["bijectors", "dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.5", "t": "tf.contrib.distributions.bijectors.Chain"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/distributions/bijectors/CholeskyOuterProduct", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.5", "t": "tf.contrib.distributions.bijectors.CholeskyOuterProduct"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/distributions/bijectors/ConditionalBijector", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.5", "t": "tf.contrib.distributions.bijectors.ConditionalBijector"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/distributions/bijectors/Exp", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "power", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.5", "t": "tf.contrib.distributions.bijectors.Exp"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/distributions/bijectors/Gumbel", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "loc", "name", "scale", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.5", "t": "tf.contrib.distributions.bijectors.Gumbel"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/distributions/bijectors/Inline", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.5", "t": "tf.contrib.distributions.bijectors.Inline"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/distributions/bijectors/Invert", "k": ["bijector", "dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.5", "t": "tf.contrib.distributions.bijectors.Invert"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/distributions/bijectors/MaskedAutoregressiveFlow", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.5", "t": "tf.contrib.distributions.bijectors.MaskedAutoregressiveFlow"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/distributions/bijectors/Permute", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "permutation", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.5", "t": "tf.contrib.distributions.bijectors.Permute"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/distributions/bijectors/PowerTransform", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "power", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.5", "t": "tf.contrib.distributions.bijectors.PowerTransform"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/distributions/bijectors/Reshape", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.5", "t": "tf.contrib.distributions.bijectors.Reshape"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/distributions/bijectors/Sigmoid", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.5", "t": "tf.contrib.distributions.bijectors.Sigmoid"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/distributions/bijectors/SigmoidCentered", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.5", "t": "tf.contrib.distributions.bijectors.SigmoidCentered"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/distributions/bijectors/SinhArcsinh", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "skewness", "tailweight", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.5", "t": "tf.contrib.distributions.bijectors.SinhArcsinh"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/distributions/bijectors/SoftmaxCentered", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.5", "t": "tf.contrib.distributions.bijectors.SoftmaxCentered"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/distributions/bijectors/Softplus", "k": ["dtype", "event_ndims", "graph_parents", "hinge_softness", "is_constant_jacobian", "name", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.5", "t": "tf.contrib.distributions.bijectors.Softplus"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/distributions/bijectors/masked_autoregressive_default_template", "k": [], "r": "r1.5", "t": "tf.contrib.distributions.bijectors.masked_autoregressive_default_template"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/distributions/bijectors/masked_dense", "k": [], "r": "r1.5", "t": "tf.contrib.distributions.bijectors.masked_dense"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/distributions/estimator_head_distribution_regression", "k": [], "r": "r1.5", "t": "tf.contrib.distributions.estimator_head_distribution_regression"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/distributions/fill_triangular", "k": [], "r": "r1.5", "t": "tf.contrib.distributions.fill_triangular"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/distributions/matrix_diag_transform", "k": [], "r": "r1.5", "t": "tf.contrib.distributions.matrix_diag_transform"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/distributions/moving_mean_variance", "k": [], "r": "r1.5", "t": "tf.contrib.distributions.moving_mean_variance"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/distributions/normal_conjugates_known_scale_posterior", "k": [], "r": "r1.5", "t": "tf.contrib.distributions.normal_conjugates_known_scale_posterior"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/distributions/normal_conjugates_known_scale_predictive", "k": [], "r": "r1.5", "t": "tf.contrib.distributions.normal_conjugates_known_scale_predictive"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/distributions/percentile", "k": [], "r": "r1.5", "t": "tf.contrib.distributions.percentile"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/distributions/reduce_weighted_logsumexp", "k": [], "r": "r1.5", "t": "tf.contrib.distributions.reduce_weighted_logsumexp"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/distributions/softplus_inverse", "k": [], "r": "r1.5", "t": "tf.contrib.distributions.softplus_inverse"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/distributions/tridiag", "k": [], "r": "r1.5", "t": "tf.contrib.distributions.tridiag"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/eager", "k": ["DEVICE_PLACEMENT_EXPLICIT", "DEVICE_PLACEMENT_SILENT", "DEVICE_PLACEMENT_WARN"], "r": "r1.5", "t": "tf.contrib.eager"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/eager/EagerVariableStore", "k": ["__init__", "as_default", "non_trainable_variables", "trainable_variables", "variables"], "r": "r1.5", "t": "tf.contrib.eager.EagerVariableStore"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/eager/GradientTape", "k": ["__enter__", "__exit__", "__init__", "gradient", "watch"], "r": "r1.5", "t": "tf.contrib.eager.GradientTape"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/eager/IsolateTest", "k": ["__enter__", "__exit__", "__init__"], "r": "r1.5", "t": "tf.contrib.eager.IsolateTest"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/eager/Iterator", "k": ["__init__", "__iter__", "__next__", "next"], "r": "r1.5", "t": "tf.contrib.eager.Iterator"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/eager/Network", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "layers", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_layer", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "track_layer"], "r": "r1.5", "t": "tf.contrib.eager.Network"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/eager/Saver", "k": ["__init__", "restore", "save"], "r": "r1.5", "t": "tf.contrib.eager.Saver"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/eager/Variable", "k": ["SaveSliceInfo", "constraint", "create", "device", "dtype", "graph", "handle", "initial_value", "initializer", "name", "op", "shape", "__abs__", "__add__", "__and__", "__bool__", "__div__", "__floordiv__", "__ge__", "__getitem__", "__gt__", "__iadd__", "__idiv__", "__imul__", "__init__", "__invert__", "__ipow__", "__irealdiv__", "__isub__", "__iter__", "__itruediv__", "__le__", "__lt__", "__matmul__", "__mod__", "__mul__", "__neg__", "__nonzero__", "__or__", "__pow__", "__radd__", "__rand__", "__rdiv__", "__rfloordiv__", "__rmatmul__", "__rmod__", "__rmul__", "__ror__", "__rpow__", "__rsub__", "__rtruediv__", "__rxor__", "__sub__", "__truediv__", "__xor__", "assign", "assign_add", "assign_sub", "count_up_to", "eval", "from_proto", "get_shape", "initialized_value", "load", "numpy", "read_value", "scatter_sub", "set_shape", "sparse_read", "to_proto", "value", "__array_priority__"], "r": "r1.5", "t": "tf.contrib.eager.Variable"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/eager/add_execution_callback", "k": [], "r": "r1.5", "t": "tf.contrib.eager.add_execution_callback"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/eager/clear_execution_callbacks", "k": [], "r": "r1.5", "t": "tf.contrib.eager.clear_execution_callbacks"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/eager/custom_gradient", "k": [], "r": "r1.5", "t": "tf.contrib.eager.custom_gradient"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/eager/defun", "k": [], "r": "r1.5", "t": "tf.contrib.eager.defun"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/eager/enable_eager_execution", "k": [], "r": "r1.5", "t": "tf.contrib.eager.enable_eager_execution"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/eager/get_optimizer_variables", "k": [], "r": "r1.5", "t": "tf.contrib.eager.get_optimizer_variables"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/eager/gradients_function", "k": [], "r": "r1.5", "t": "tf.contrib.eager.gradients_function"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/eager/implicit_gradients", "k": [], "r": "r1.5", "t": "tf.contrib.eager.implicit_gradients"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/eager/implicit_value_and_gradients", "k": [], "r": "r1.5", "t": "tf.contrib.eager.implicit_value_and_gradients"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/eager/in_eager_mode", "k": [], "r": "r1.5", "t": "tf.contrib.eager.in_eager_mode"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/eager/in_graph_mode", "k": [], "r": "r1.5", "t": "tf.contrib.eager.in_graph_mode"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/eager/inf_callback", "k": [], "r": "r1.5", "t": "tf.contrib.eager.inf_callback"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/eager/inf_nan_callback", "k": [], "r": "r1.5", "t": "tf.contrib.eager.inf_nan_callback"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/eager/list_devices", "k": [], "r": "r1.5", "t": "tf.contrib.eager.list_devices"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/eager/metrics", "k": [], "r": "r1.5", "t": "tf.contrib.eager.metrics"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/eager/metrics/Accuracy", "k": ["name", "variables", "__call__", "__init__", "add_variable", "aggregate", "build", "call", "init_variables", "result"], "r": "r1.5", "t": "tf.contrib.eager.metrics.Accuracy"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/eager/metrics/Mean", "k": ["name", "variables", "__call__", "__init__", "add_variable", "aggregate", "build", "call", "init_variables", "result"], "r": "r1.5", "t": "tf.contrib.eager.metrics.Mean"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/eager/metrics/Metric", "k": ["name", "variables", "__call__", "__init__", "add_variable", "aggregate", "build", "call", "init_variables", "result"], "r": "r1.5", "t": "tf.contrib.eager.metrics.Metric"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/eager/nan_callback", "k": [], "r": "r1.5", "t": "tf.contrib.eager.nan_callback"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/eager/num_gpus", "k": [], "r": "r1.5", "t": "tf.contrib.eager.num_gpus"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/eager/py_func", "k": [], "r": "r1.5", "t": "tf.contrib.eager.py_func"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/eager/restore_network_checkpoint", "k": [], "r": "r1.5", "t": "tf.contrib.eager.restore_network_checkpoint"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/eager/restore_variables_on_create", "k": [], "r": "r1.5", "t": "tf.contrib.eager.restore_variables_on_create"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/eager/run", "k": [], "r": "r1.5", "t": "tf.contrib.eager.run"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/eager/run_test_in_graph_and_eager_modes", "k": [], "r": "r1.5", "t": "tf.contrib.eager.run_test_in_graph_and_eager_modes"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/eager/save_network_checkpoint", "k": [], "r": "r1.5", "t": "tf.contrib.eager.save_network_checkpoint"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/eager/seterr", "k": [], "r": "r1.5", "t": "tf.contrib.eager.seterr"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/eager/value_and_gradients_function", "k": [], "r": "r1.5", "t": "tf.contrib.eager.value_and_gradients_function"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/estimator", "k": [], "r": "r1.5", "t": "tf.contrib.estimator"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/estimator/DNNEstimator", "k": ["config", "model_dir", "model_fn", "params", "__init__", "evaluate", "export_savedmodel", "get_variable_names", "get_variable_value", "latest_checkpoint", "predict", "train"], "r": "r1.5", "t": "tf.contrib.estimator.DNNEstimator"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/estimator/DNNLinearCombinedEstimator", "k": ["config", "model_dir", "model_fn", "params", "__init__", "evaluate", "export_savedmodel", "get_variable_names", "get_variable_value", "latest_checkpoint", "predict", "train"], "r": "r1.5", "t": "tf.contrib.estimator.DNNLinearCombinedEstimator"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/estimator/LinearEstimator", "k": ["config", "model_dir", "model_fn", "params", "__init__", "evaluate", "export_savedmodel", "get_variable_names", "get_variable_value", "latest_checkpoint", "predict", "train"], "r": "r1.5", "t": "tf.contrib.estimator.LinearEstimator"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/estimator/add_metrics", "k": [], "r": "r1.5", "t": "tf.contrib.estimator.add_metrics"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/estimator/binary_classification_head", "k": [], "r": "r1.5", "t": "tf.contrib.estimator.binary_classification_head"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/estimator/call_logit_fn", "k": [], "r": "r1.5", "t": "tf.contrib.estimator.call_logit_fn"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/estimator/clip_gradients_by_norm", "k": [], "r": "r1.5", "t": "tf.contrib.estimator.clip_gradients_by_norm"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/estimator/dnn_logit_fn_builder", "k": [], "r": "r1.5", "t": "tf.contrib.estimator.dnn_logit_fn_builder"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/estimator/forward_features", "k": [], "r": "r1.5", "t": "tf.contrib.estimator.forward_features"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/estimator/linear_logit_fn_builder", "k": [], "r": "r1.5", "t": "tf.contrib.estimator.linear_logit_fn_builder"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/estimator/multi_class_head", "k": [], "r": "r1.5", "t": "tf.contrib.estimator.multi_class_head"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/estimator/multi_head", "k": [], "r": "r1.5", "t": "tf.contrib.estimator.multi_head"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/estimator/multi_label_head", "k": [], "r": "r1.5", "t": "tf.contrib.estimator.multi_label_head"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/estimator/regression_head", "k": [], "r": "r1.5", "t": "tf.contrib.estimator.regression_head"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/estimator/replicate_model_fn", "k": [], "r": "r1.5", "t": "tf.contrib.estimator.replicate_model_fn"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/factorization", "k": ["COSINE_DISTANCE", "KMEANS_PLUS_PLUS_INIT", "RANDOM_INIT", "SQUARED_EUCLIDEAN_DISTANCE"], "r": "r1.5", "t": "tf.contrib.factorization"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/factorization/GMM", "k": ["config", "model_dir", "__init__", "clusters", "covariances", "evaluate", "export", "export_savedmodel", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "predict_assignments", "score", "set_params", "weights", "ALL_SCORES", "ASSIGNMENTS", "SCORES"], "r": "r1.5", "t": "tf.contrib.factorization.GMM"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/factorization/GmmAlgorithm", "k": ["__init__", "alphas", "assignments", "clusters", "covariances", "init_ops", "is_initialized", "scores", "training_ops", "CLUSTERS_COVS_VARIABLE", "CLUSTERS_VARIABLE", "CLUSTERS_WEIGHT"], "r": "r1.5", "t": "tf.contrib.factorization.GmmAlgorithm"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/factorization/KMeans", "k": ["__init__", "training_graph"], "r": "r1.5", "t": "tf.contrib.factorization.KMeans"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/factorization/KMeansClustering", "k": ["config", "model_dir", "model_fn", "params", "__init__", "cluster_centers", "evaluate", "export_savedmodel", "get_variable_names", "get_variable_value", "latest_checkpoint", "predict", "predict_cluster_index", "score", "train", "transform", "ALL_DISTANCES", "CLUSTER_INDEX", "COSINE_DISTANCE", "KMEANS_PLUS_PLUS_INIT", "RANDOM_INIT", "SCORE", "SQUARED_EUCLIDEAN_DISTANCE"], "r": "r1.5", "t": "tf.contrib.factorization.KMeansClustering"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/factorization/WALSMatrixFactorization", "k": ["config", "model_dir", "__init__", "evaluate", "export", "export_savedmodel", "fit", "get_col_factors", "get_params", "get_projections", "get_row_factors", "get_variable_names", "get_variable_value", "partial_fit", "predict", "set_params", "COMPLETED_SWEEPS", "INPUT_COLS", "INPUT_ROWS", "LOSS", "PROJECTION_RESULT", "PROJECTION_WEIGHTS", "PROJECT_ROW", "RWSE"], "r": "r1.5", "t": "tf.contrib.factorization.WALSMatrixFactorization"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/factorization/WALSModel", "k": ["col_factors", "col_update_prep_gramian_op", "col_weights", "initialize_col_update_op", "initialize_op", "initialize_row_update_op", "row_factors", "row_update_prep_gramian_op", "row_weights", "worker_init", "__init__", "project_col_factors", "project_row_factors", "scatter_update", "update_col_factors", "update_row_factors"], "r": "r1.5", "t": "tf.contrib.factorization.WALSModel"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/factorization/gmm", "k": [], "r": "r1.5", "t": "tf.contrib.factorization.gmm"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/ffmpeg", "k": [], "r": "r1.5", "t": "tf.contrib.ffmpeg"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/ffmpeg/decode_audio", "k": [], "r": "r1.5", "t": "tf.contrib.ffmpeg.decode_audio"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/ffmpeg/decode_video", "k": [], "r": "r1.5", "t": "tf.contrib.ffmpeg.decode_video"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/ffmpeg/encode_audio", "k": [], "r": "r1.5", "t": "tf.contrib.ffmpeg.encode_audio"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/framework", "k": [], "r": "r1.5", "t": "tf.contrib.framework"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/framework/VariableDeviceChooser", "k": ["__call__", "__init__"], "r": "r1.5", "t": "tf.contrib.framework.VariableDeviceChooser"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/framework/add_arg_scope", "k": [], "r": "r1.5", "t": "tf.contrib.framework.add_arg_scope"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/framework/add_model_variable", "k": [], "r": "r1.5", "t": "tf.contrib.framework.add_model_variable"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/framework/arg_scope", "k": [], "r": "r1.5", "t": "tf.contrib.framework.arg_scope"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/framework/arg_scoped_arguments", "k": [], "r": "r1.5", "t": "tf.contrib.framework.arg_scoped_arguments"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/framework/assert_global_step", "k": [], "r": "r1.5", "t": "tf.contrib.framework.assert_global_step"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/framework/assert_or_get_global_step", "k": [], "r": "r1.5", "t": "tf.contrib.framework.assert_or_get_global_step"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/framework/assert_scalar_int", "k": [], "r": "r1.5", "t": "tf.contrib.framework.assert_scalar_int"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/framework/assign_from_checkpoint", "k": [], "r": "r1.5", "t": "tf.contrib.framework.assign_from_checkpoint"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/framework/assign_from_checkpoint_fn", "k": [], "r": "r1.5", "t": "tf.contrib.framework.assign_from_checkpoint_fn"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/framework/assign_from_values", "k": [], "r": "r1.5", "t": "tf.contrib.framework.assign_from_values"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/framework/assign_from_values_fn", "k": [], "r": "r1.5", "t": "tf.contrib.framework.assign_from_values_fn"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/framework/create_global_step", "k": [], "r": "r1.5", "t": "tf.contrib.framework.create_global_step"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/framework/current_arg_scope", "k": [], "r": "r1.5", "t": "tf.contrib.framework.current_arg_scope"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/framework/deprecated", "k": [], "r": "r1.5", "t": "tf.contrib.framework.deprecated"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/framework/deprecated_arg_values", "k": [], "r": "r1.5", "t": "tf.contrib.framework.deprecated_arg_values"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/framework/deprecated_args", "k": [], "r": "r1.5", "t": "tf.contrib.framework.deprecated_args"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/framework/filter_variables", "k": [], "r": "r1.5", "t": "tf.contrib.framework.filter_variables"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/framework/get_global_step", "k": [], "r": "r1.5", "t": "tf.contrib.framework.get_global_step"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/framework/get_graph_from_inputs", "k": [], "r": "r1.5", "t": "tf.contrib.framework.get_graph_from_inputs"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/framework/get_local_variables", "k": [], "r": "r1.5", "t": "tf.contrib.framework.get_local_variables"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/framework/get_model_variables", "k": [], "r": "r1.5", "t": "tf.contrib.framework.get_model_variables"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/framework/get_name_scope", "k": [], "r": "r1.5", "t": "tf.contrib.framework.get_name_scope"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/framework/get_or_create_global_step", "k": [], "r": "r1.5", "t": "tf.contrib.framework.get_or_create_global_step"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/framework/get_trainable_variables", "k": [], "r": "r1.5", "t": "tf.contrib.framework.get_trainable_variables"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/framework/get_unique_variable", "k": [], "r": "r1.5", "t": "tf.contrib.framework.get_unique_variable"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/framework/get_variable_full_name", "k": [], "r": "r1.5", "t": "tf.contrib.framework.get_variable_full_name"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/framework/get_variables", "k": [], "r": "r1.5", "t": "tf.contrib.framework.get_variables"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/framework/get_variables_by_name", "k": [], "r": "r1.5", "t": "tf.contrib.framework.get_variables_by_name"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/framework/get_variables_by_suffix", "k": [], "r": "r1.5", "t": "tf.contrib.framework.get_variables_by_suffix"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/framework/get_variables_to_restore", "k": [], "r": "r1.5", "t": "tf.contrib.framework.get_variables_to_restore"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/framework/global_variable", "k": [], "r": "r1.5", "t": "tf.contrib.framework.global_variable"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/framework/has_arg_scope", "k": [], "r": "r1.5", "t": "tf.contrib.framework.has_arg_scope"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/framework/init_from_checkpoint", "k": [], "r": "r1.5", "t": "tf.contrib.framework.init_from_checkpoint"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/framework/is_tensor", "k": [], "r": "r1.5", "t": "tf.contrib.framework.is_tensor"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/framework/list_variables", "k": [], "r": "r1.5", "t": "tf.contrib.framework.list_variables"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/framework/load_and_remap_matrix_initializer", "k": [], "r": "r1.5", "t": "tf.contrib.framework.load_and_remap_matrix_initializer"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/framework/load_checkpoint", "k": [], "r": "r1.5", "t": "tf.contrib.framework.load_checkpoint"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/framework/load_embedding_initializer", "k": [], "r": "r1.5", "t": "tf.contrib.framework.load_embedding_initializer"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/framework/load_linear_multiclass_bias_initializer", "k": [], "r": "r1.5", "t": "tf.contrib.framework.load_linear_multiclass_bias_initializer"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/framework/load_variable", "k": [], "r": "r1.5", "t": "tf.contrib.framework.load_variable"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/framework/load_variable_slot_initializer", "k": [], "r": "r1.5", "t": "tf.contrib.framework.load_variable_slot_initializer"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/framework/local_variable", "k": [], "r": "r1.5", "t": "tf.contrib.framework.local_variable"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/framework/model_variable", "k": [], "r": "r1.5", "t": "tf.contrib.framework.model_variable"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/framework/nest", "k": [], "r": "r1.5", "t": "tf.contrib.framework.nest"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/framework/nest/assert_same_structure", "k": [], "r": "r1.5", "t": "tf.contrib.framework.nest.assert_same_structure"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/framework/nest/assert_shallow_structure", "k": [], "r": "r1.5", "t": "tf.contrib.framework.nest.assert_shallow_structure"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/framework/nest/flatten", "k": [], "r": "r1.5", "t": "tf.contrib.framework.nest.flatten"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/framework/nest/flatten_dict_items", "k": [], "r": "r1.5", "t": "tf.contrib.framework.nest.flatten_dict_items"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/framework/nest/flatten_up_to", "k": [], "r": "r1.5", "t": "tf.contrib.framework.nest.flatten_up_to"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/framework/nest/get_traverse_shallow_structure", "k": [], "r": "r1.5", "t": "tf.contrib.framework.nest.get_traverse_shallow_structure"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/framework/nest/is_sequence", "k": [], "r": "r1.5", "t": "tf.contrib.framework.nest.is_sequence"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/framework/nest/map_structure", "k": [], "r": "r1.5", "t": "tf.contrib.framework.nest.map_structure"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/framework/nest/map_structure_up_to", "k": [], "r": "r1.5", "t": "tf.contrib.framework.nest.map_structure_up_to"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/framework/nest/pack_sequence_as", "k": [], "r": "r1.5", "t": "tf.contrib.framework.nest.pack_sequence_as"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/framework/prepend_name_scope", "k": [], "r": "r1.5", "t": "tf.contrib.framework.prepend_name_scope"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/framework/reduce_sum_n", "k": [], "r": "r1.5", "t": "tf.contrib.framework.reduce_sum_n"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/framework/remove_squeezable_dimensions", "k": [], "r": "r1.5", "t": "tf.contrib.framework.remove_squeezable_dimensions"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/framework/sort", "k": [], "r": "r1.5", "t": "tf.contrib.framework.sort"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/framework/strip_name_scope", "k": [], "r": "r1.5", "t": "tf.contrib.framework.strip_name_scope"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/framework/variable", "k": [], "r": "r1.5", "t": "tf.contrib.framework.variable"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/framework/with_same_shape", "k": [], "r": "r1.5", "t": "tf.contrib.framework.with_same_shape"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/framework/with_shape", "k": [], "r": "r1.5", "t": "tf.contrib.framework.with_shape"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/framework/zero_initializer", "k": [], "r": "r1.5", "t": "tf.contrib.framework.zero_initializer"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/gan", "k": [], "r": "r1.5", "t": "tf.contrib.gan"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/gan/ACGANModel", "k": ["discriminator_fn", "discriminator_gen_classification_logits", "discriminator_gen_outputs", "discriminator_real_classification_logits", "discriminator_real_outputs", "discriminator_scope", "discriminator_variables", "generated_data", "generator_fn", "generator_inputs", "generator_scope", "generator_variables", "one_hot_labels", "real_data", "__new__"], "r": "r1.5", "t": "tf.contrib.gan.ACGANModel"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/gan/GANLoss", "k": ["discriminator_loss", "generator_loss", "__new__"], "r": "r1.5", "t": "tf.contrib.gan.GANLoss"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/gan/GANModel", "k": ["discriminator_fn", "discriminator_gen_outputs", "discriminator_real_outputs", "discriminator_scope", "discriminator_variables", "generated_data", "generator_fn", "generator_inputs", "generator_scope", "generator_variables", "real_data", "__new__"], "r": "r1.5", "t": "tf.contrib.gan.GANModel"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/gan/GANTrainOps", "k": ["discriminator_train_op", "generator_train_op", "global_step_inc_op", "__new__"], "r": "r1.5", "t": "tf.contrib.gan.GANTrainOps"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/gan/GANTrainSteps", "k": ["discriminator_train_steps", "generator_train_steps", "__new__"], "r": "r1.5", "t": "tf.contrib.gan.GANTrainSteps"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/gan/InfoGANModel", "k": ["discriminator_and_aux_fn", "discriminator_fn", "discriminator_gen_outputs", "discriminator_real_outputs", "discriminator_scope", "discriminator_variables", "generated_data", "generator_fn", "generator_inputs", "generator_scope", "generator_variables", "predicted_distributions", "real_data", "structured_generator_inputs", "__new__"], "r": "r1.5", "t": "tf.contrib.gan.InfoGANModel"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/gan/RunTrainOpsHook", "k": ["__init__", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "r1.5", "t": "tf.contrib.gan.RunTrainOpsHook"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/gan/acgan_model", "k": [], "r": "r1.5", "t": "tf.contrib.gan.acgan_model"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/gan/estimator", "k": [], "r": "r1.5", "t": "tf.contrib.gan.estimator"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/gan/estimator/GANEstimator", "k": ["config", "model_dir", "model_fn", "params", "__init__", "evaluate", "export_savedmodel", "get_variable_names", "get_variable_value", "latest_checkpoint", "predict", "train"], "r": "r1.5", "t": "tf.contrib.gan.estimator.GANEstimator"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/gan/estimator/GANHead", "k": ["logits_dimension", "name", "__init__", "create_estimator_spec", "create_loss"], "r": "r1.5", "t": "tf.contrib.gan.estimator.GANHead"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/gan/estimator/SummaryType", "k": ["IMAGES", "IMAGE_COMPARISON", "NONE", "VARIABLES", "__members__"], "r": "r1.5", "t": "tf.contrib.gan.estimator.SummaryType"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/gan/estimator/gan_estimator", "k": ["__all__"], "r": "r1.5", "t": "tf.contrib.gan.estimator.gan_estimator"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/gan/estimator/gan_head", "k": [], "r": "r1.5", "t": "tf.contrib.gan.estimator.gan_head"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/gan/estimator/head", "k": ["__all__"], "r": "r1.5", "t": "tf.contrib.gan.estimator.head"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/gan/eval", "k": ["INCEPTION_DEFAULT_IMAGE_SIZE", "frechet_inception_distance", "inception_score"], "r": "r1.5", "t": "tf.contrib.gan.eval"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/gan/eval/add_gan_model_image_summaries", "k": [], "r": "r1.5", "t": "tf.contrib.gan.eval.add_gan_model_image_summaries"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/gan/eval/add_gan_model_summaries", "k": [], "r": "r1.5", "t": "tf.contrib.gan.eval.add_gan_model_summaries"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/gan/eval/add_image_comparison_summaries", "k": [], "r": "r1.5", "t": "tf.contrib.gan.eval.add_image_comparison_summaries"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/gan/eval/add_regularization_loss_summaries", "k": [], "r": "r1.5", "t": "tf.contrib.gan.eval.add_regularization_loss_summaries"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/gan/eval/classifier_metrics", "k": ["INCEPTION_DEFAULT_IMAGE_SIZE", "__all__", "frechet_inception_distance", "inception_score"], "r": "r1.5", "t": "tf.contrib.gan.eval.classifier_metrics"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/gan/eval/classifier_score", "k": [], "r": "r1.5", "t": "tf.contrib.gan.eval.classifier_score"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/gan/eval/classifier_score_from_logits", "k": [], "r": "r1.5", "t": "tf.contrib.gan.eval.classifier_score_from_logits"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/gan/eval/eval_utils", "k": ["__all__"], "r": "r1.5", "t": "tf.contrib.gan.eval.eval_utils"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/gan/eval/frechet_classifier_distance", "k": [], "r": "r1.5", "t": "tf.contrib.gan.eval.frechet_classifier_distance"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/gan/eval/frechet_classifier_distance_from_activations", "k": [], "r": "r1.5", "t": "tf.contrib.gan.eval.frechet_classifier_distance_from_activations"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/gan/eval/get_graph_def_from_disk", "k": [], "r": "r1.5", "t": "tf.contrib.gan.eval.get_graph_def_from_disk"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/gan/eval/get_graph_def_from_resource", "k": [], "r": "r1.5", "t": "tf.contrib.gan.eval.get_graph_def_from_resource"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/gan/eval/get_graph_def_from_url_tarball", "k": [], "r": "r1.5", "t": "tf.contrib.gan.eval.get_graph_def_from_url_tarball"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/gan/eval/image_grid", "k": [], "r": "r1.5", "t": "tf.contrib.gan.eval.image_grid"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/gan/eval/image_reshaper", "k": [], "r": "r1.5", "t": "tf.contrib.gan.eval.image_reshaper"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/gan/eval/preprocess_image", "k": [], "r": "r1.5", "t": "tf.contrib.gan.eval.preprocess_image"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/gan/eval/run_image_classifier", "k": [], "r": "r1.5", "t": "tf.contrib.gan.eval.run_image_classifier"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/gan/eval/run_inception", "k": [], "r": "r1.5", "t": "tf.contrib.gan.eval.run_inception"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/gan/eval/sliced_wasserstein_distance", "k": [], "r": "r1.5", "t": "tf.contrib.gan.eval.sliced_wasserstein_distance"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/gan/eval/summaries", "k": ["__all__"], "r": "r1.5", "t": "tf.contrib.gan.eval.summaries"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/gan/features", "k": [], "r": "r1.5", "t": "tf.contrib.gan.features"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/gan/features/VBN", "k": ["__call__", "__init__", "reference_batch_normalization"], "r": "r1.5", "t": "tf.contrib.gan.features.VBN"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/gan/features/clip_discriminator_weights", "k": [], "r": "r1.5", "t": "tf.contrib.gan.features.clip_discriminator_weights"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/gan/features/clip_variables", "k": [], "r": "r1.5", "t": "tf.contrib.gan.features.clip_variables"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/gan/features/condition_tensor", "k": [], "r": "r1.5", "t": "tf.contrib.gan.features.condition_tensor"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/gan/features/condition_tensor_from_onehot", "k": [], "r": "r1.5", "t": "tf.contrib.gan.features.condition_tensor_from_onehot"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/gan/features/tensor_pool", "k": [], "r": "r1.5", "t": "tf.contrib.gan.features.tensor_pool"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/gan/gan_loss", "k": [], "r": "r1.5", "t": "tf.contrib.gan.gan_loss"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/gan/gan_model", "k": [], "r": "r1.5", "t": "tf.contrib.gan.gan_model"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/gan/gan_train", "k": [], "r": "r1.5", "t": "tf.contrib.gan.gan_train"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/gan/gan_train_ops", "k": [], "r": "r1.5", "t": "tf.contrib.gan.gan_train_ops"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/gan/get_joint_train_hooks", "k": [], "r": "r1.5", "t": "tf.contrib.gan.get_joint_train_hooks"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/gan/get_sequential_train_hooks", "k": [], "r": "r1.5", "t": "tf.contrib.gan.get_sequential_train_hooks"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/gan/get_sequential_train_steps", "k": [], "r": "r1.5", "t": "tf.contrib.gan.get_sequential_train_steps"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/gan/infogan_model", "k": [], "r": "r1.5", "t": "tf.contrib.gan.infogan_model"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/gan/losses", "k": [], "r": "r1.5", "t": "tf.contrib.gan.losses"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/gan/losses/acgan_discriminator_loss", "k": [], "r": "r1.5", "t": "tf.contrib.gan.losses.acgan_discriminator_loss"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/gan/losses/acgan_generator_loss", "k": [], "r": "r1.5", "t": "tf.contrib.gan.losses.acgan_generator_loss"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/gan/losses/combine_adversarial_loss", "k": [], "r": "r1.5", "t": "tf.contrib.gan.losses.combine_adversarial_loss"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/gan/losses/least_squares_discriminator_loss", "k": [], "r": "r1.5", "t": "tf.contrib.gan.losses.least_squares_discriminator_loss"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/gan/losses/least_squares_generator_loss", "k": [], "r": "r1.5", "t": "tf.contrib.gan.losses.least_squares_generator_loss"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/gan/losses/minimax_discriminator_loss", "k": [], "r": "r1.5", "t": "tf.contrib.gan.losses.minimax_discriminator_loss"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/gan/losses/minimax_generator_loss", "k": [], "r": "r1.5", "t": "tf.contrib.gan.losses.minimax_generator_loss"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/gan/losses/modified_discriminator_loss", "k": [], "r": "r1.5", "t": "tf.contrib.gan.losses.modified_discriminator_loss"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/gan/losses/modified_generator_loss", "k": [], "r": "r1.5", "t": "tf.contrib.gan.losses.modified_generator_loss"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/gan/losses/mutual_information_penalty", "k": [], "r": "r1.5", "t": "tf.contrib.gan.losses.mutual_information_penalty"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/gan/losses/wargs", "k": [], "r": "r1.5", "t": "tf.contrib.gan.losses.wargs"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/gan/losses/wargs/acgan_discriminator_loss", "k": [], "r": "r1.5", "t": "tf.contrib.gan.losses.wargs.acgan_discriminator_loss"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/gan/losses/wargs/acgan_generator_loss", "k": [], "r": "r1.5", "t": "tf.contrib.gan.losses.wargs.acgan_generator_loss"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/gan/losses/wargs/combine_adversarial_loss", "k": [], "r": "r1.5", "t": "tf.contrib.gan.losses.wargs.combine_adversarial_loss"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/gan/losses/wargs/least_squares_discriminator_loss", "k": [], "r": "r1.5", "t": "tf.contrib.gan.losses.wargs.least_squares_discriminator_loss"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/gan/losses/wargs/least_squares_generator_loss", "k": [], "r": "r1.5", "t": "tf.contrib.gan.losses.wargs.least_squares_generator_loss"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/gan/losses/wargs/minimax_discriminator_loss", "k": [], "r": "r1.5", "t": "tf.contrib.gan.losses.wargs.minimax_discriminator_loss"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/gan/losses/wargs/minimax_generator_loss", "k": [], "r": "r1.5", "t": "tf.contrib.gan.losses.wargs.minimax_generator_loss"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/gan/losses/wargs/modified_discriminator_loss", "k": [], "r": "r1.5", "t": "tf.contrib.gan.losses.wargs.modified_discriminator_loss"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/gan/losses/wargs/modified_generator_loss", "k": [], "r": "r1.5", "t": "tf.contrib.gan.losses.wargs.modified_generator_loss"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/gan/losses/wargs/mutual_information_penalty", "k": [], "r": "r1.5", "t": "tf.contrib.gan.losses.wargs.mutual_information_penalty"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/gan/losses/wargs/wasserstein_discriminator_loss", "k": [], "r": "r1.5", "t": "tf.contrib.gan.losses.wargs.wasserstein_discriminator_loss"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/gan/losses/wargs/wasserstein_generator_loss", "k": [], "r": "r1.5", "t": "tf.contrib.gan.losses.wargs.wasserstein_generator_loss"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/gan/losses/wargs/wasserstein_gradient_penalty", "k": [], "r": "r1.5", "t": "tf.contrib.gan.losses.wargs.wasserstein_gradient_penalty"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/gan/losses/wasserstein_discriminator_loss", "k": [], "r": "r1.5", "t": "tf.contrib.gan.losses.wasserstein_discriminator_loss"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/gan/losses/wasserstein_generator_loss", "k": [], "r": "r1.5", "t": "tf.contrib.gan.losses.wasserstein_generator_loss"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/gan/losses/wasserstein_gradient_penalty", "k": [], "r": "r1.5", "t": "tf.contrib.gan.losses.wasserstein_gradient_penalty"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/graph_editor", "k": [], "r": "r1.5", "t": "tf.contrib.graph_editor"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/graph_editor/ControlOutputs", "k": ["graph", "__init__", "get", "get_all", "update"], "r": "r1.5", "t": "tf.contrib.graph_editor.ControlOutputs"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/graph_editor/SubGraphView", "k": ["connected_inputs", "connected_outputs", "graph", "inputs", "ops", "outputs", "passthroughs", "__bool__", "__copy__", "__enter__", "__exit__", "__init__", "__nonzero__", "consumers", "copy", "find_op_by_name", "input_index", "is_passthrough", "op", "output_index", "remap", "remap_default", "remap_inputs", "remap_outputs", "remap_outputs_make_unique", "remap_outputs_to_consumers", "remove_unused_ops"], "r": "r1.5", "t": "tf.contrib.graph_editor.SubGraphView"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/graph_editor/Transformer", "k": ["__call__", "__init__"], "r": "r1.5", "t": "tf.contrib.graph_editor.Transformer"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/graph_editor/TransformerInfo", "k": ["__init__", "original", "transformed"], "r": "r1.5", "t": "tf.contrib.graph_editor.TransformerInfo"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/graph_editor/add_control_inputs", "k": [], "r": "r1.5", "t": "tf.contrib.graph_editor.add_control_inputs"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/graph_editor/assign_renamed_collections_handler", "k": [], "r": "r1.5", "t": "tf.contrib.graph_editor.assign_renamed_collections_handler"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/graph_editor/bypass", "k": [], "r": "r1.5", "t": "tf.contrib.graph_editor.bypass"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/graph_editor/can_be_regex", "k": [], "r": "r1.5", "t": "tf.contrib.graph_editor.can_be_regex"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/graph_editor/check_cios", "k": [], "r": "r1.5", "t": "tf.contrib.graph_editor.check_cios"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/graph_editor/compute_boundary_ts", "k": [], "r": "r1.5", "t": "tf.contrib.graph_editor.compute_boundary_ts"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/graph_editor/connect", "k": [], "r": "r1.5", "t": "tf.contrib.graph_editor.connect"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/graph_editor/copy", "k": [], "r": "r1.5", "t": "tf.contrib.graph_editor.copy"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/graph_editor/copy_op_handler", "k": [], "r": "r1.5", "t": "tf.contrib.graph_editor.copy_op_handler"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/graph_editor/copy_with_input_replacements", "k": [], "r": "r1.5", "t": "tf.contrib.graph_editor.copy_with_input_replacements"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/graph_editor/detach", "k": [], "r": "r1.5", "t": "tf.contrib.graph_editor.detach"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/graph_editor/detach_control_inputs", "k": [], "r": "r1.5", "t": "tf.contrib.graph_editor.detach_control_inputs"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/graph_editor/detach_control_outputs", "k": [], "r": "r1.5", "t": "tf.contrib.graph_editor.detach_control_outputs"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/graph_editor/detach_inputs", "k": [], "r": "r1.5", "t": "tf.contrib.graph_editor.detach_inputs"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/graph_editor/detach_outputs", "k": [], "r": "r1.5", "t": "tf.contrib.graph_editor.detach_outputs"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/graph_editor/edit", "k": [], "r": "r1.5", "t": "tf.contrib.graph_editor.edit"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/graph_editor/filter_ops", "k": [], "r": "r1.5", "t": "tf.contrib.graph_editor.filter_ops"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/graph_editor/filter_ops_from_regex", "k": [], "r": "r1.5", "t": "tf.contrib.graph_editor.filter_ops_from_regex"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/graph_editor/filter_ts", "k": [], "r": "r1.5", "t": "tf.contrib.graph_editor.filter_ts"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/graph_editor/filter_ts_from_regex", "k": [], "r": "r1.5", "t": "tf.contrib.graph_editor.filter_ts_from_regex"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/graph_editor/get_backward_walk_ops", "k": [], "r": "r1.5", "t": "tf.contrib.graph_editor.get_backward_walk_ops"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/graph_editor/get_consuming_ops", "k": [], "r": "r1.5", "t": "tf.contrib.graph_editor.get_consuming_ops"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/graph_editor/get_forward_walk_ops", "k": [], "r": "r1.5", "t": "tf.contrib.graph_editor.get_forward_walk_ops"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/graph_editor/get_generating_ops", "k": [], "r": "r1.5", "t": "tf.contrib.graph_editor.get_generating_ops"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/graph_editor/get_name_scope_ops", "k": [], "r": "r1.5", "t": "tf.contrib.graph_editor.get_name_scope_ops"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/graph_editor/get_ops_ios", "k": [], "r": "r1.5", "t": "tf.contrib.graph_editor.get_ops_ios"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/graph_editor/get_tensors", "k": [], "r": "r1.5", "t": "tf.contrib.graph_editor.get_tensors"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/graph_editor/get_walks_intersection_ops", "k": [], "r": "r1.5", "t": "tf.contrib.graph_editor.get_walks_intersection_ops"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/graph_editor/get_walks_union_ops", "k": [], "r": "r1.5", "t": "tf.contrib.graph_editor.get_walks_union_ops"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/graph_editor/get_within_boundary_ops", "k": [], "r": "r1.5", "t": "tf.contrib.graph_editor.get_within_boundary_ops"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/graph_editor/graph_replace", "k": [], "r": "r1.5", "t": "tf.contrib.graph_editor.graph_replace"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/graph_editor/keep_t_if_possible_handler", "k": [], "r": "r1.5", "t": "tf.contrib.graph_editor.keep_t_if_possible_handler"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/graph_editor/make_list_of_op", "k": [], "r": "r1.5", "t": "tf.contrib.graph_editor.make_list_of_op"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/graph_editor/make_list_of_t", "k": [], "r": "r1.5", "t": "tf.contrib.graph_editor.make_list_of_t"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/graph_editor/make_placeholder_from_dtype_and_shape", "k": [], "r": "r1.5", "t": "tf.contrib.graph_editor.make_placeholder_from_dtype_and_shape"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/graph_editor/make_placeholder_from_tensor", "k": [], "r": "r1.5", "t": "tf.contrib.graph_editor.make_placeholder_from_tensor"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/graph_editor/make_regex", "k": [], "r": "r1.5", "t": "tf.contrib.graph_editor.make_regex"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/graph_editor/make_view", "k": [], "r": "r1.5", "t": "tf.contrib.graph_editor.make_view"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/graph_editor/make_view_from_scope", "k": [], "r": "r1.5", "t": "tf.contrib.graph_editor.make_view_from_scope"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/graph_editor/placeholder_name", "k": [], "r": "r1.5", "t": "tf.contrib.graph_editor.placeholder_name"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/graph_editor/remove_control_inputs", "k": [], "r": "r1.5", "t": "tf.contrib.graph_editor.remove_control_inputs"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/graph_editor/replace_t_with_placeholder_handler", "k": [], "r": "r1.5", "t": "tf.contrib.graph_editor.replace_t_with_placeholder_handler"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/graph_editor/reroute", "k": [], "r": "r1.5", "t": "tf.contrib.graph_editor.reroute"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/graph_editor/reroute_inputs", "k": [], "r": "r1.5", "t": "tf.contrib.graph_editor.reroute_inputs"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/graph_editor/reroute_ios", "k": [], "r": "r1.5", "t": "tf.contrib.graph_editor.reroute_ios"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/graph_editor/reroute_outputs", "k": [], "r": "r1.5", "t": "tf.contrib.graph_editor.reroute_outputs"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/graph_editor/reroute_ts", "k": [], "r": "r1.5", "t": "tf.contrib.graph_editor.reroute_ts"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/graph_editor/select", "k": [], "r": "r1.5", "t": "tf.contrib.graph_editor.select"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/graph_editor/select_ops", "k": [], "r": "r1.5", "t": "tf.contrib.graph_editor.select_ops"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/graph_editor/select_ops_and_ts", "k": [], "r": "r1.5", "t": "tf.contrib.graph_editor.select_ops_and_ts"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/graph_editor/select_ts", "k": [], "r": "r1.5", "t": "tf.contrib.graph_editor.select_ts"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/graph_editor/subgraph", "k": [], "r": "r1.5", "t": "tf.contrib.graph_editor.subgraph"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/graph_editor/swap_inputs", "k": [], "r": "r1.5", "t": "tf.contrib.graph_editor.swap_inputs"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/graph_editor/swap_ios", "k": [], "r": "r1.5", "t": "tf.contrib.graph_editor.swap_ios"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/graph_editor/swap_outputs", "k": [], "r": "r1.5", "t": "tf.contrib.graph_editor.swap_outputs"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/graph_editor/swap_ts", "k": [], "r": "r1.5", "t": "tf.contrib.graph_editor.swap_ts"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/graph_editor/transform", "k": [], "r": "r1.5", "t": "tf.contrib.graph_editor.transform"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/graph_editor/transform_op_if_inside_handler", "k": [], "r": "r1.5", "t": "tf.contrib.graph_editor.transform_op_if_inside_handler"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/graph_editor/util", "k": [], "r": "r1.5", "t": "tf.contrib.graph_editor.util"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/grid_rnn", "k": [], "r": "r1.5", "t": "tf.contrib.grid_rnn"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/image", "k": [], "r": "r1.5", "t": "tf.contrib.image"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/image/angles_to_projective_transforms", "k": [], "r": "r1.5", "t": "tf.contrib.image.angles_to_projective_transforms"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/image/compose_transforms", "k": [], "r": "r1.5", "t": "tf.contrib.image.compose_transforms"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/image/rotate", "k": [], "r": "r1.5", "t": "tf.contrib.image.rotate"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/image/single_image_random_dot_stereograms", "k": [], "r": "r1.5", "t": "tf.contrib.image.single_image_random_dot_stereograms"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/image/transform", "k": [], "r": "r1.5", "t": "tf.contrib.image.transform"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/image/translate", "k": [], "r": "r1.5", "t": "tf.contrib.image.translate"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/image/translations_to_projective_transforms", "k": [], "r": "r1.5", "t": "tf.contrib.image.translations_to_projective_transforms"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/input_pipeline", "k": [], "r": "r1.5", "t": "tf.contrib.input_pipeline"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/input_pipeline/obtain_next", "k": [], "r": "r1.5", "t": "tf.contrib.input_pipeline.obtain_next"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/integrate", "k": [], "r": "r1.5", "t": "tf.contrib.integrate"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/integrate/odeint", "k": [], "r": "r1.5", "t": "tf.contrib.integrate.odeint"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/keras", "k": [], "r": "r1.5", "t": "tf.contrib.keras"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/kernel_methods", "k": [], "r": "r1.5", "t": "tf.contrib.kernel_methods"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/kernel_methods/KernelLinearClassifier", "k": ["config", "model_dir", "__init__", "evaluate", "export", "export_savedmodel", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "predict_classes", "predict_proba", "set_params"], "r": "r1.5", "t": "tf.contrib.kernel_methods.KernelLinearClassifier"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/kernel_methods/RandomFourierFeatureMapper", "k": ["input_dim", "name", "output_dim", "__init__", "map"], "r": "r1.5", "t": "tf.contrib.kernel_methods.RandomFourierFeatureMapper"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/kernel_methods/sparse_multiclass_hinge_loss", "k": [], "r": "r1.5", "t": "tf.contrib.kernel_methods.sparse_multiclass_hinge_loss"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/kfac", "k": [], "r": "r1.5", "t": "tf.contrib.kfac"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/kfac/curvature_matrix_vector_products", "k": [], "r": "r1.5", "t": "tf.contrib.kfac.curvature_matrix_vector_products"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/kfac/curvature_matrix_vector_products/CurvatureMatrixVectorProductComputer", "k": ["fisher_factor_inner_shapes", "generalized_gauss_newton_factor_inner_shapes", "__init__", "multiply_fisher", "multiply_fisher_factor", "multiply_fisher_factor_transpose", "multiply_generalized_gauss_newton", "multiply_generalized_gauss_newton_factor", "multiply_generalized_gauss_newton_factor_transpose", "multiply_hessian"], "r": "r1.5", "t": "tf.contrib.kfac.curvature_matrix_vector_products.CurvatureMatrixVectorProductComputer"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/kfac/estimator", "k": [], "r": "r1.5", "t": "tf.contrib.kfac.estimator"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/kfac/estimator/FisherEstimator", "k": ["damping", "variables", "__init__", "multiply", "multiply_inverse"], "r": "r1.5", "t": "tf.contrib.kfac.estimator.FisherEstimator"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/kfac/fisher_blocks", "k": [], "r": "r1.5", "t": "tf.contrib.kfac.fisher_blocks"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/kfac/fisher_blocks/ConvDiagonalFB", "k": ["num_registered_minibatches", "__init__", "instantiate_factors", "multiply", "multiply_inverse", "register_additional_minibatch", "tensors_to_compute_grads"], "r": "r1.5", "t": "tf.contrib.kfac.fisher_blocks.ConvDiagonalFB"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/kfac/fisher_blocks/ConvKFCBasicFB", "k": ["num_registered_minibatches", "__init__", "full_fisher_block", "instantiate_factors", "multiply", "multiply_inverse", "register_additional_minibatch", "tensors_to_compute_grads"], "r": "r1.5", "t": "tf.contrib.kfac.fisher_blocks.ConvKFCBasicFB"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/kfac/fisher_blocks/FisherBlock", "k": ["num_registered_minibatches", "__init__", "instantiate_factors", "multiply", "multiply_inverse", "tensors_to_compute_grads"], "r": "r1.5", "t": "tf.contrib.kfac.fisher_blocks.FisherBlock"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/kfac/fisher_blocks/FullFB", "k": ["num_registered_minibatches", "__init__", "full_fisher_block", "instantiate_factors", "multiply", "multiply_inverse", "register_additional_minibatch", "tensors_to_compute_grads"], "r": "r1.5", "t": "tf.contrib.kfac.fisher_blocks.FullFB"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/kfac/fisher_blocks/FullyConnectedDiagonalFB", "k": ["num_registered_minibatches", "__init__", "instantiate_factors", "multiply", "multiply_inverse", "register_additional_minibatch", "tensors_to_compute_grads"], "r": "r1.5", "t": "tf.contrib.kfac.fisher_blocks.FullyConnectedDiagonalFB"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/kfac/fisher_blocks/FullyConnectedKFACBasicFB", "k": ["num_registered_minibatches", "__init__", "full_fisher_block", "instantiate_factors", "multiply", "multiply_inverse", "register_additional_minibatch", "tensors_to_compute_grads"], "r": "r1.5", "t": "tf.contrib.kfac.fisher_blocks.FullyConnectedKFACBasicFB"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/kfac/fisher_blocks/KroneckerProductFB", "k": ["num_registered_minibatches", "__init__", "full_fisher_block", "instantiate_factors", "multiply", "multiply_inverse", "tensors_to_compute_grads"], "r": "r1.5", "t": "tf.contrib.kfac.fisher_blocks.KroneckerProductFB"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/kfac/fisher_blocks/NaiveDiagonalFB", "k": ["num_registered_minibatches", "__init__", "full_fisher_block", "instantiate_factors", "multiply", "multiply_inverse", "register_additional_minibatch", "tensors_to_compute_grads"], "r": "r1.5", "t": "tf.contrib.kfac.fisher_blocks.NaiveDiagonalFB"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/kfac/fisher_blocks/set_global_constants", "k": [], "r": "r1.5", "t": "tf.contrib.kfac.fisher_blocks.set_global_constants"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/kfac/fisher_factors", "k": [], "r": "r1.5", "t": "tf.contrib.kfac.fisher_factors"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/kfac/fisher_factors/ConvDiagonalFactor", "k": ["__init__", "get_cov", "instantiate_covariance", "make_covariance_update_op", "make_inverse_update_ops"], "r": "r1.5", "t": "tf.contrib.kfac.fisher_factors.ConvDiagonalFactor"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/kfac/fisher_factors/ConvInputKroneckerFactor", "k": ["__init__", "get_cov", "get_damped_inverse", "get_eigendecomp", "get_matpower", "instantiate_covariance", "make_covariance_update_op", "make_inverse_update_ops", "register_damped_inverse", "register_eigendecomp", "register_matpower"], "r": "r1.5", "t": "tf.contrib.kfac.fisher_factors.ConvInputKroneckerFactor"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/kfac/fisher_factors/ConvOutputKroneckerFactor", "k": ["__init__", "get_cov", "get_damped_inverse", "get_eigendecomp", "get_matpower", "instantiate_covariance", "make_covariance_update_op", "make_inverse_update_ops", "register_damped_inverse", "register_eigendecomp", "register_matpower"], "r": "r1.5", "t": "tf.contrib.kfac.fisher_factors.ConvOutputKroneckerFactor"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/kfac/fisher_factors/DiagonalFactor", "k": ["__init__", "get_cov", "instantiate_covariance", "make_covariance_update_op", "make_inverse_update_ops"], "r": "r1.5", "t": "tf.contrib.kfac.fisher_factors.DiagonalFactor"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/kfac/fisher_factors/FisherFactor", "k": ["__init__", "get_cov", "instantiate_covariance", "make_covariance_update_op", "make_inverse_update_ops"], "r": "r1.5", "t": "tf.contrib.kfac.fisher_factors.FisherFactor"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/kfac/fisher_factors/FullFactor", "k": ["__init__", "get_cov", "get_damped_inverse", "get_eigendecomp", "get_matpower", "instantiate_covariance", "make_covariance_update_op", "make_inverse_update_ops", "register_damped_inverse", "register_eigendecomp", "register_matpower"], "r": "r1.5", "t": "tf.contrib.kfac.fisher_factors.FullFactor"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/kfac/fisher_factors/FullyConnectedDiagonalFactor", "k": ["__init__", "get_cov", "instantiate_covariance", "make_covariance_update_op", "make_inverse_update_ops"], "r": "r1.5", "t": "tf.contrib.kfac.fisher_factors.FullyConnectedDiagonalFactor"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/kfac/fisher_factors/FullyConnectedKroneckerFactor", "k": ["__init__", "get_cov", "get_damped_inverse", "get_eigendecomp", "get_matpower", "instantiate_covariance", "make_covariance_update_op", "make_inverse_update_ops", "register_damped_inverse", "register_eigendecomp", "register_matpower"], "r": "r1.5", "t": "tf.contrib.kfac.fisher_factors.FullyConnectedKroneckerFactor"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/kfac/fisher_factors/InverseProvidingFactor", "k": ["__init__", "get_cov", "get_damped_inverse", "get_eigendecomp", "get_matpower", "instantiate_covariance", "make_covariance_update_op", "make_inverse_update_ops", "register_damped_inverse", "register_eigendecomp", "register_matpower"], "r": "r1.5", "t": "tf.contrib.kfac.fisher_factors.InverseProvidingFactor"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/kfac/fisher_factors/NaiveDiagonalFactor", "k": ["__init__", "get_cov", "instantiate_covariance", "make_covariance_update_op", "make_inverse_update_ops"], "r": "r1.5", "t": "tf.contrib.kfac.fisher_factors.NaiveDiagonalFactor"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/kfac/fisher_factors/covariance_initializer", "k": [], "r": "r1.5", "t": "tf.contrib.kfac.fisher_factors.covariance_initializer"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/kfac/fisher_factors/diagonal_covariance_initializer", "k": [], "r": "r1.5", "t": "tf.contrib.kfac.fisher_factors.diagonal_covariance_initializer"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/kfac/fisher_factors/inverse_initializer", "k": [], "r": "r1.5", "t": "tf.contrib.kfac.fisher_factors.inverse_initializer"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/kfac/fisher_factors/scalar_or_tensor_to_string", "k": [], "r": "r1.5", "t": "tf.contrib.kfac.fisher_factors.scalar_or_tensor_to_string"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/kfac/fisher_factors/scope_string_from_name", "k": [], "r": "r1.5", "t": "tf.contrib.kfac.fisher_factors.scope_string_from_name"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/kfac/fisher_factors/scope_string_from_params", "k": [], "r": "r1.5", "t": "tf.contrib.kfac.fisher_factors.scope_string_from_params"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/kfac/fisher_factors/set_global_constants", "k": [], "r": "r1.5", "t": "tf.contrib.kfac.fisher_factors.set_global_constants"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/kfac/layer_collection", "k": ["APPROX_DIAGONAL_NAME", "APPROX_FULL_NAME", "APPROX_KRONECKER_NAME", "VARIABLE_SCOPE"], "r": "r1.5", "t": "tf.contrib.kfac.layer_collection"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/kfac/layer_collection/LayerCollection", "k": ["default_conv2d_approximation", "default_fully_connected_approximation", "default_fully_connected_multi_approximation", "default_generic_approximation", "graph", "linked_parameters", "losses", "registered_variables", "subgraph", "__init__", "check_registration", "create_subgraph", "define_linked_parameters", "get_blocks", "get_factors", "get_use_count_map", "make_or_get_factor", "register_block", "register_categorical_predictive_distribution", "register_conv2d", "register_fully_connected", "register_fully_connected_multi", "register_generic", "register_multi_bernoulli_predictive_distribution", "register_normal_predictive_distribution", "set_default_conv2d_approximation", "set_default_fully_connected_approximation", "set_default_fully_connected_multi_approximation", "set_default_generic_approximation", "total_loss", "total_sampled_loss"], "r": "r1.5", "t": "tf.contrib.kfac.layer_collection.LayerCollection"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/kfac/layer_collection/LayerParametersDict", "k": ["__contains__", "__delitem__", "__eq__", "__getitem__", "__init__", "__iter__", "__ne__", "__reduce__", "__repr__", "__reversed__", "__setitem__", "clear", "copy", "fromkeys", "items", "iteritems", "iterkeys", "itervalues", "keys", "pop", "popitem", "setdefault", "update", "values", "viewitems", "viewkeys", "viewvalues", "__hash__"], "r": "r1.5", "t": "tf.contrib.kfac.layer_collection.LayerParametersDict"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/kfac/loss_functions", "k": [], "r": "r1.5", "t": "tf.contrib.kfac.loss_functions"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/kfac/loss_functions/CategoricalLogitsNegativeLogProbLoss", "k": ["dist", "fisher_factor_inner_shape", "fisher_factor_inner_static_shape", "hessian_factor_inner_shape", "hessian_factor_inner_static_shape", "input_minibatches", "inputs", "num_registered_minibatches", "params", "targets", "__init__", "evaluate", "evaluate_on_sample", "multiply_fisher", "multiply_fisher_factor", "multiply_fisher_factor_replicated_one_hot", "multiply_fisher_factor_transpose", "multiply_hessian", "multiply_hessian_factor", "multiply_hessian_factor_replicated_one_hot", "multiply_hessian_factor_transpose", "register_additional_minibatch", "sample"], "r": "r1.5", "t": "tf.contrib.kfac.loss_functions.CategoricalLogitsNegativeLogProbLoss"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/kfac/loss_functions/DistributionNegativeLogProbLoss", "k": ["dist", "fisher_factor_inner_shape", "fisher_factor_inner_static_shape", "hessian_factor_inner_shape", "hessian_factor_inner_static_shape", "input_minibatches", "inputs", "num_registered_minibatches", "params", "targets", "__init__", "evaluate", "evaluate_on_sample", "multiply_fisher", "multiply_fisher_factor", "multiply_fisher_factor_replicated_one_hot", "multiply_fisher_factor_transpose", "multiply_hessian", "multiply_hessian_factor", "multiply_hessian_factor_replicated_one_hot", "multiply_hessian_factor_transpose", "sample"], "r": "r1.5", "t": "tf.contrib.kfac.loss_functions.DistributionNegativeLogProbLoss"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/kfac/loss_functions/LossFunction", "k": ["hessian_factor_inner_shape", "hessian_factor_inner_static_shape", "input_minibatches", "inputs", "num_registered_minibatches", "targets", "evaluate", "multiply_hessian", "multiply_hessian_factor", "multiply_hessian_factor_replicated_one_hot", "multiply_hessian_factor_transpose"], "r": "r1.5", "t": "tf.contrib.kfac.loss_functions.LossFunction"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/kfac/loss_functions/MultiBernoulliNegativeLogProbLoss", "k": ["dist", "fisher_factor_inner_shape", "fisher_factor_inner_static_shape", "hessian_factor_inner_shape", "hessian_factor_inner_static_shape", "input_minibatches", "inputs", "num_registered_minibatches", "params", "targets", "__init__", "evaluate", "evaluate_on_sample", "multiply_fisher", "multiply_fisher_factor", "multiply_fisher_factor_replicated_one_hot", "multiply_fisher_factor_transpose", "multiply_hessian", "multiply_hessian_factor", "multiply_hessian_factor_replicated_one_hot", "multiply_hessian_factor_transpose", "sample"], "r": "r1.5", "t": "tf.contrib.kfac.loss_functions.MultiBernoulliNegativeLogProbLoss"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/kfac/loss_functions/NaturalParamsNegativeLogProbLoss", "k": ["fisher_factor_inner_shape", "fisher_factor_inner_static_shape", "hessian_factor_inner_shape", "hessian_factor_inner_static_shape", "input_minibatches", "inputs", "num_registered_minibatches", "params", "targets", "__init__", "evaluate", "evaluate_on_sample", "multiply_fisher", "multiply_fisher_factor", "multiply_fisher_factor_replicated_one_hot", "multiply_fisher_factor_transpose", "multiply_hessian", "multiply_hessian_factor", "multiply_hessian_factor_replicated_one_hot", "multiply_hessian_factor_transpose", "sample"], "r": "r1.5", "t": "tf.contrib.kfac.loss_functions.NaturalParamsNegativeLogProbLoss"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/kfac/loss_functions/NegativeLogProbLoss", "k": ["fisher_factor_inner_shape", "fisher_factor_inner_static_shape", "hessian_factor_inner_shape", "hessian_factor_inner_static_shape", "input_minibatches", "inputs", "num_registered_minibatches", "params", "targets", "__init__", "evaluate", "evaluate_on_sample", "multiply_fisher", "multiply_fisher_factor", "multiply_fisher_factor_replicated_one_hot", "multiply_fisher_factor_transpose", "multiply_hessian", "multiply_hessian_factor", "multiply_hessian_factor_replicated_one_hot", "multiply_hessian_factor_transpose", "sample"], "r": "r1.5", "t": "tf.contrib.kfac.loss_functions.NegativeLogProbLoss"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/kfac/loss_functions/NormalMeanNegativeLogProbLoss", "k": ["dist", "fisher_factor_inner_shape", "fisher_factor_inner_static_shape", "hessian_factor_inner_shape", "hessian_factor_inner_static_shape", "input_minibatches", "inputs", "num_registered_minibatches", "params", "targets", "__init__", "evaluate", "evaluate_on_sample", "multiply_fisher", "multiply_fisher_factor", "multiply_fisher_factor_replicated_one_hot", "multiply_fisher_factor_transpose", "multiply_hessian", "multiply_hessian_factor", "multiply_hessian_factor_replicated_one_hot", "multiply_hessian_factor_transpose", "sample"], "r": "r1.5", "t": "tf.contrib.kfac.loss_functions.NormalMeanNegativeLogProbLoss"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/kfac/loss_functions/NormalMeanVarianceNegativeLogProbLoss", "k": ["dist", "fisher_factor_inner_shape", "fisher_factor_inner_static_shape", "hessian_factor_inner_shape", "hessian_factor_inner_static_shape", "input_minibatches", "inputs", "num_registered_minibatches", "params", "targets", "__init__", "evaluate", "evaluate_on_sample", "multiply_fisher", "multiply_fisher_factor", "multiply_fisher_factor_replicated_one_hot", "multiply_fisher_factor_transpose", "multiply_hessian", "multiply_hessian_factor", "multiply_hessian_factor_replicated_one_hot", "multiply_hessian_factor_transpose", "sample"], "r": "r1.5", "t": "tf.contrib.kfac.loss_functions.NormalMeanVarianceNegativeLogProbLoss"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/kfac/loss_functions/insert_slice_in_zeros", "k": [], "r": "r1.5", "t": "tf.contrib.kfac.loss_functions.insert_slice_in_zeros"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/kfac/op_queue", "k": [], "r": "r1.5", "t": "tf.contrib.kfac.op_queue"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/kfac/op_queue/OpQueue", "k": ["ops", "__init__", "next_op"], "r": "r1.5", "t": "tf.contrib.kfac.op_queue.OpQueue"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/kfac/optimizer", "k": [], "r": "r1.5", "t": "tf.contrib.kfac.optimizer"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/kfac/optimizer/KfacOptimizer", "k": ["damping", "variables", "__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.5", "t": "tf.contrib.kfac.optimizer.KfacOptimizer"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/kfac/utils", "k": [], "r": "r1.5", "t": "tf.contrib.kfac.utils"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/kfac/utils/SequenceDict", "k": ["__getitem__", "__init__", "__setitem__", "items"], "r": "r1.5", "t": "tf.contrib.kfac.utils.SequenceDict"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/kfac/utils/SubGraph", "k": ["__init__", "filter_list", "is_member", "variable_uses"], "r": "r1.5", "t": "tf.contrib.kfac.utils.SubGraph"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/kfac/utils/column_to_tensors", "k": [], "r": "r1.5", "t": "tf.contrib.kfac.utils.column_to_tensors"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/kfac/utils/fwd_gradients", "k": [], "r": "r1.5", "t": "tf.contrib.kfac.utils.fwd_gradients"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/kfac/utils/generate_random_signs", "k": [], "r": "r1.5", "t": "tf.contrib.kfac.utils.generate_random_signs"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/kfac/utils/kronecker_product", "k": [], "r": "r1.5", "t": "tf.contrib.kfac.utils.kronecker_product"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/kfac/utils/layer_params_to_mat2d", "k": [], "r": "r1.5", "t": "tf.contrib.kfac.utils.layer_params_to_mat2d"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/kfac/utils/mat2d_to_layer_params", "k": [], "r": "r1.5", "t": "tf.contrib.kfac.utils.mat2d_to_layer_params"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/kfac/utils/posdef_inv", "k": [], "r": "r1.5", "t": "tf.contrib.kfac.utils.posdef_inv"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/kfac/utils/posdef_inv_cholesky", "k": [], "r": "r1.5", "t": "tf.contrib.kfac.utils.posdef_inv_cholesky"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/kfac/utils/posdef_inv_matrix_inverse", "k": [], "r": "r1.5", "t": "tf.contrib.kfac.utils.posdef_inv_matrix_inverse"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/kfac/utils/tensors_to_column", "k": [], "r": "r1.5", "t": "tf.contrib.kfac.utils.tensors_to_column"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/labeled_tensor", "k": [], "r": "r1.5", "t": "tf.contrib.labeled_tensor"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/layers", "k": ["OPTIMIZER_CLS_NAMES", "OPTIMIZER_SUMMARIES", "SPARSE_FEATURE_CROSS_DEFAULT_HASH_KEY", "elu", "legacy_linear", "legacy_relu", "linear", "relu", "relu6", "scale_gradient"], "r": "r1.5", "t": "tf.contrib.layers"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/layers/GDN", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "r1.5", "t": "tf.contrib.layers.GDN"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/layers/RevBlock", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "backward", "build", "call", "count_params", "forward", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "r1.5", "t": "tf.contrib.layers.RevBlock"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/layers/apply_regularization", "k": [], "r": "r1.5", "t": "tf.contrib.layers.apply_regularization"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/layers/avg_pool2d", "k": [], "r": "r1.5", "t": "tf.contrib.layers.avg_pool2d"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/layers/avg_pool3d", "k": [], "r": "r1.5", "t": "tf.contrib.layers.avg_pool3d"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/layers/batch_norm", "k": [], "r": "r1.5", "t": "tf.contrib.layers.batch_norm"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/layers/bias_add", "k": [], "r": "r1.5", "t": "tf.contrib.layers.bias_add"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/layers/bow_encoder", "k": [], "r": "r1.5", "t": "tf.contrib.layers.bow_encoder"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/layers/bucketized_column", "k": [], "r": "r1.5", "t": "tf.contrib.layers.bucketized_column"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/layers/check_feature_columns", "k": [], "r": "r1.5", "t": "tf.contrib.layers.check_feature_columns"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/layers/conv2d", "k": [], "r": "r1.5", "t": "tf.contrib.layers.conv2d"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/layers/conv2d_in_plane", "k": [], "r": "r1.5", "t": "tf.contrib.layers.conv2d_in_plane"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/layers/conv2d_transpose", "k": [], "r": "r1.5", "t": "tf.contrib.layers.conv2d_transpose"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/layers/conv3d_transpose", "k": [], "r": "r1.5", "t": "tf.contrib.layers.conv3d_transpose"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/layers/create_feature_spec_for_parsing", "k": [], "r": "r1.5", "t": "tf.contrib.layers.create_feature_spec_for_parsing"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/layers/crossed_column", "k": [], "r": "r1.5", "t": "tf.contrib.layers.crossed_column"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/layers/dropout", "k": [], "r": "r1.5", "t": "tf.contrib.layers.dropout"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/layers/embed_sequence", "k": [], "r": "r1.5", "t": "tf.contrib.layers.embed_sequence"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/layers/embedding_column", "k": [], "r": "r1.5", "t": "tf.contrib.layers.embedding_column"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/layers/embedding_lookup_unique", "k": [], "r": "r1.5", "t": "tf.contrib.layers.embedding_lookup_unique"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/layers/feature_column", "k": [], "r": "r1.5", "t": "tf.contrib.layers.feature_column"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/layers/flatten", "k": [], "r": "r1.5", "t": "tf.contrib.layers.flatten"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/layers/fully_connected", "k": [], "r": "r1.5", "t": "tf.contrib.layers.fully_connected"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/layers/gdn", "k": [], "r": "r1.5", "t": "tf.contrib.layers.gdn"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/layers/infer_real_valued_columns", "k": [], "r": "r1.5", "t": "tf.contrib.layers.infer_real_valued_columns"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/layers/input_from_feature_columns", "k": [], "r": "r1.5", "t": "tf.contrib.layers.input_from_feature_columns"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/layers/instance_norm", "k": [], "r": "r1.5", "t": "tf.contrib.layers.instance_norm"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/layers/joint_weighted_sum_from_feature_columns", "k": [], "r": "r1.5", "t": "tf.contrib.layers.joint_weighted_sum_from_feature_columns"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/layers/l1_l2_regularizer", "k": [], "r": "r1.5", "t": "tf.contrib.layers.l1_l2_regularizer"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/layers/l1_regularizer", "k": [], "r": "r1.5", "t": "tf.contrib.layers.l1_regularizer"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/layers/l2_regularizer", "k": [], "r": "r1.5", "t": "tf.contrib.layers.l2_regularizer"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/layers/layer_norm", "k": [], "r": "r1.5", "t": "tf.contrib.layers.layer_norm"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/layers/legacy_fully_connected", "k": [], "r": "r1.5", "t": "tf.contrib.layers.legacy_fully_connected"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/layers/make_place_holder_tensors_for_base_features", "k": [], "r": "r1.5", "t": "tf.contrib.layers.make_place_holder_tensors_for_base_features"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/layers/max_pool2d", "k": [], "r": "r1.5", "t": "tf.contrib.layers.max_pool2d"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/layers/max_pool3d", "k": [], "r": "r1.5", "t": "tf.contrib.layers.max_pool3d"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/layers/maxout", "k": [], "r": "r1.5", "t": "tf.contrib.layers.maxout"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/layers/multi_class_target", "k": [], "r": "r1.5", "t": "tf.contrib.layers.multi_class_target"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/layers/one_hot_column", "k": [], "r": "r1.5", "t": "tf.contrib.layers.one_hot_column"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/layers/one_hot_encoding", "k": [], "r": "r1.5", "t": "tf.contrib.layers.one_hot_encoding"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/layers/optimize_loss", "k": [], "r": "r1.5", "t": "tf.contrib.layers.optimize_loss"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/layers/parse_feature_columns_from_examples", "k": [], "r": "r1.5", "t": "tf.contrib.layers.parse_feature_columns_from_examples"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/layers/parse_feature_columns_from_sequence_examples", "k": [], "r": "r1.5", "t": "tf.contrib.layers.parse_feature_columns_from_sequence_examples"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/layers/real_valued_column", "k": [], "r": "r1.5", "t": "tf.contrib.layers.real_valued_column"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/layers/recompute_grad", "k": [], "r": "r1.5", "t": "tf.contrib.layers.recompute_grad"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/layers/regression_target", "k": [], "r": "r1.5", "t": "tf.contrib.layers.regression_target"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/layers/repeat", "k": [], "r": "r1.5", "t": "tf.contrib.layers.repeat"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/layers/rev_block", "k": [], "r": "r1.5", "t": "tf.contrib.layers.rev_block"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/layers/safe_embedding_lookup_sparse", "k": [], "r": "r1.5", "t": "tf.contrib.layers.safe_embedding_lookup_sparse"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/layers/scattered_embedding_column", "k": [], "r": "r1.5", "t": "tf.contrib.layers.scattered_embedding_column"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/layers/separable_conv2d", "k": [], "r": "r1.5", "t": "tf.contrib.layers.separable_conv2d"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/layers/sequence_input_from_feature_columns", "k": [], "r": "r1.5", "t": "tf.contrib.layers.sequence_input_from_feature_columns"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/layers/shared_embedding_columns", "k": [], "r": "r1.5", "t": "tf.contrib.layers.shared_embedding_columns"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/layers/softmax", "k": [], "r": "r1.5", "t": "tf.contrib.layers.softmax"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/layers/sparse_column_with_hash_bucket", "k": [], "r": "r1.5", "t": "tf.contrib.layers.sparse_column_with_hash_bucket"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/layers/sparse_column_with_integerized_feature", "k": [], "r": "r1.5", "t": "tf.contrib.layers.sparse_column_with_integerized_feature"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/layers/sparse_column_with_keys", "k": [], "r": "r1.5", "t": "tf.contrib.layers.sparse_column_with_keys"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/layers/sparse_column_with_vocabulary_file", "k": [], "r": "r1.5", "t": "tf.contrib.layers.sparse_column_with_vocabulary_file"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/layers/spatial_softmax", "k": [], "r": "r1.5", "t": "tf.contrib.layers.spatial_softmax"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/layers/stack", "k": [], "r": "r1.5", "t": "tf.contrib.layers.stack"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/layers/sum_regularizer", "k": [], "r": "r1.5", "t": "tf.contrib.layers.sum_regularizer"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/layers/summaries", "k": [], "r": "r1.5", "t": "tf.contrib.layers.summaries"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/layers/summarize_activation", "k": [], "r": "r1.5", "t": "tf.contrib.layers.summarize_activation"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/layers/summarize_activations", "k": [], "r": "r1.5", "t": "tf.contrib.layers.summarize_activations"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/layers/summarize_collection", "k": [], "r": "r1.5", "t": "tf.contrib.layers.summarize_collection"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/layers/summarize_tensor", "k": [], "r": "r1.5", "t": "tf.contrib.layers.summarize_tensor"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/layers/summarize_tensors", "k": [], "r": "r1.5", "t": "tf.contrib.layers.summarize_tensors"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/layers/transform_features", "k": [], "r": "r1.5", "t": "tf.contrib.layers.transform_features"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/layers/unit_norm", "k": [], "r": "r1.5", "t": "tf.contrib.layers.unit_norm"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/layers/variance_scaling_initializer", "k": [], "r": "r1.5", "t": "tf.contrib.layers.variance_scaling_initializer"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/layers/weighted_sparse_column", "k": [], "r": "r1.5", "t": "tf.contrib.layers.weighted_sparse_column"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/layers/weighted_sum_from_feature_columns", "k": [], "r": "r1.5", "t": "tf.contrib.layers.weighted_sum_from_feature_columns"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/layers/xavier_initializer", "k": [], "r": "r1.5", "t": "tf.contrib.layers.xavier_initializer"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/learn", "k": [], "r": "r1.5", "t": "tf.contrib.learn"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/learn/BaseEstimator", "k": ["config", "model_dir", "__init__", "evaluate", "export", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "set_params"], "r": "r1.5", "t": "tf.contrib.learn.BaseEstimator"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/learn/DNNClassifier", "k": ["config", "model_dir", "__init__", "evaluate", "export", "export_savedmodel", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "predict_classes", "predict_proba", "set_params"], "r": "r1.5", "t": "tf.contrib.learn.DNNClassifier"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/learn/DNNEstimator", "k": ["config", "model_dir", "__init__", "evaluate", "export", "export_savedmodel", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "set_params"], "r": "r1.5", "t": "tf.contrib.learn.DNNEstimator"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/learn/DNNLinearCombinedClassifier", "k": ["config", "model_dir", "__init__", "evaluate", "export", "export_savedmodel", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "predict_classes", "predict_proba", "set_params"], "r": "r1.5", "t": "tf.contrib.learn.DNNLinearCombinedClassifier"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/learn/DNNLinearCombinedEstimator", "k": ["config", "model_dir", "__init__", "evaluate", "export", "export_savedmodel", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "set_params"], "r": "r1.5", "t": "tf.contrib.learn.DNNLinearCombinedEstimator"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/learn/DNNLinearCombinedRegressor", "k": ["config", "model_dir", "__init__", "evaluate", "export", "export_savedmodel", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "predict_scores", "set_params"], "r": "r1.5", "t": "tf.contrib.learn.DNNLinearCombinedRegressor"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/learn/DNNRegressor", "k": ["config", "model_dir", "__init__", "evaluate", "export", "export_savedmodel", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "predict_scores", "set_params"], "r": "r1.5", "t": "tf.contrib.learn.DNNRegressor"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/learn/DynamicRnnEstimator", "k": ["config", "model_dir", "__init__", "evaluate", "export", "export_savedmodel", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "set_params"], "r": "r1.5", "t": "tf.contrib.learn.DynamicRnnEstimator"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/learn/Estimator", "k": ["config", "model_dir", "__init__", "evaluate", "export", "export_savedmodel", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "set_params"], "r": "r1.5", "t": "tf.contrib.learn.Estimator"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/learn/Evaluable", "k": ["model_dir", "evaluate"], "r": "r1.5", "t": "tf.contrib.learn.Evaluable"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/learn/Experiment", "k": ["estimator", "eval_metrics", "eval_steps", "train_steps", "__init__", "continuous_eval", "continuous_eval_on_train_data", "continuous_train_and_eval", "evaluate", "extend_train_hooks", "local_run", "reset_export_strategies", "run_std_server", "test", "train", "train_and_evaluate"], "r": "r1.5", "t": "tf.contrib.learn.Experiment"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/learn/ExportStrategy", "k": ["export_fn", "name", "__new__", "export"], "r": "r1.5", "t": "tf.contrib.learn.ExportStrategy"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/learn/Head", "k": ["logits_dimension", "create_model_fn_ops"], "r": "r1.5", "t": "tf.contrib.learn.Head"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/learn/InputFnOps", "k": ["default_inputs", "features", "labels", "__new__"], "r": "r1.5", "t": "tf.contrib.learn.InputFnOps"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/learn/KMeansClustering", "k": ["config", "model_dir", "__init__", "clusters", "evaluate", "export", "export_savedmodel", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "predict_cluster_idx", "score", "set_params", "transform", "ALL_SCORES", "CLUSTERS", "CLUSTER_IDX", "COSINE_DISTANCE", "KMEANS_PLUS_PLUS_INIT", "LOSS_OP_NAME", "RANDOM_INIT", "SCORES", "SQUARED_EUCLIDEAN_DISTANCE"], "r": "r1.5", "t": "tf.contrib.learn.KMeansClustering"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/learn/LinearClassifier", "k": ["config", "model_dir", "__init__", "evaluate", "export", "export_savedmodel", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "predict_classes", "predict_proba", "set_params"], "r": "r1.5", "t": "tf.contrib.learn.LinearClassifier"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/learn/LinearEstimator", "k": ["config", "model_dir", "__init__", "evaluate", "export", "export_savedmodel", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "set_params"], "r": "r1.5", "t": "tf.contrib.learn.LinearEstimator"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/learn/LinearRegressor", "k": ["config", "model_dir", "__init__", "evaluate", "export", "export_savedmodel", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "predict_scores", "set_params"], "r": "r1.5", "t": "tf.contrib.learn.LinearRegressor"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/learn/LogisticRegressor", "k": [], "r": "r1.5", "t": "tf.contrib.learn.LogisticRegressor"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/learn/MetricSpec", "k": ["label_key", "metric_fn", "prediction_key", "weight_key", "__init__", "create_metric_ops"], "r": "r1.5", "t": "tf.contrib.learn.MetricSpec"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/learn/ModeKeys", "k": ["validate", "EVAL", "INFER", "TRAIN"], "r": "r1.5", "t": "tf.contrib.learn.ModeKeys"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/learn/ModelFnOps", "k": ["eval_metric_ops", "loss", "mode", "output_alternatives", "predictions", "scaffold", "train_op", "training_chief_hooks", "training_hooks", "__new__", "estimator_spec"], "r": "r1.5", "t": "tf.contrib.learn.ModelFnOps"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/learn/NanLossDuringTrainingError", "k": [], "r": "r1.5", "t": "tf.contrib.learn.NanLossDuringTrainingError"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/learn/NotFittedError", "k": [], "r": "r1.5", "t": "tf.contrib.learn.NotFittedError"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/learn/PredictionKey", "k": ["CLASSES", "GENERIC", "LOGISTIC", "LOGITS", "PROBABILITIES", "SCORES", "TOP_K"], "r": "r1.5", "t": "tf.contrib.learn.PredictionKey"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/learn/ProblemType", "k": ["CLASSIFICATION", "LINEAR_REGRESSION", "LOGISTIC_REGRESSION", "UNSPECIFIED"], "r": "r1.5", "t": "tf.contrib.learn.ProblemType"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/learn/RunConfig", "k": ["cluster_spec", "environment", "evaluation_master", "is_chief", "keep_checkpoint_every_n_hours", "keep_checkpoint_max", "log_step_count_steps", "master", "model_dir", "num_ps_replicas", "num_worker_replicas", "save_checkpoints_secs", "save_checkpoints_steps", "save_summary_steps", "service", "session_config", "task_id", "task_type", "tf_config", "tf_random_seed", "__init__", "get_task_id", "replace", "uid"], "r": "r1.5", "t": "tf.contrib.learn.RunConfig"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/learn/SKCompat", "k": ["__init__", "fit", "get_params", "predict", "score", "set_params"], "r": "r1.5", "t": "tf.contrib.learn.SKCompat"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/learn/SVM", "k": ["config", "model_dir", "__init__", "evaluate", "export", "export_savedmodel", "export_with_defaults", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "predict_classes", "predict_proba", "set_params"], "r": "r1.5", "t": "tf.contrib.learn.SVM"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/learn/TaskType", "k": ["MASTER", "PS", "WORKER"], "r": "r1.5", "t": "tf.contrib.learn.TaskType"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/learn/Trainable", "k": ["fit"], "r": "r1.5", "t": "tf.contrib.learn.Trainable"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/learn/binary_svm_head", "k": [], "r": "r1.5", "t": "tf.contrib.learn.binary_svm_head"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/learn/build_parsing_serving_input_fn", "k": [], "r": "r1.5", "t": "tf.contrib.learn.build_parsing_serving_input_fn"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/learn/datasets", "k": [], "r": "r1.5", "t": "tf.contrib.learn.datasets"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/learn/evaluate", "k": [], "r": "r1.5", "t": "tf.contrib.learn.evaluate"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/learn/extract_dask_data", "k": [], "r": "r1.5", "t": "tf.contrib.learn.extract_dask_data"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/learn/extract_dask_labels", "k": [], "r": "r1.5", "t": "tf.contrib.learn.extract_dask_labels"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/learn/extract_pandas_data", "k": [], "r": "r1.5", "t": "tf.contrib.learn.extract_pandas_data"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/learn/extract_pandas_labels", "k": [], "r": "r1.5", "t": "tf.contrib.learn.extract_pandas_labels"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/learn/extract_pandas_matrix", "k": [], "r": "r1.5", "t": "tf.contrib.learn.extract_pandas_matrix"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/learn/graph_actions", "k": [], "r": "r1.5", "t": "tf.contrib.learn.graph_actions"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/learn/head", "k": [], "r": "r1.5", "t": "tf.contrib.learn.head"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/learn/infer", "k": [], "r": "r1.5", "t": "tf.contrib.learn.infer"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/learn/infer_real_valued_columns_from_input", "k": [], "r": "r1.5", "t": "tf.contrib.learn.infer_real_valued_columns_from_input"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/learn/infer_real_valued_columns_from_input_fn", "k": [], "r": "r1.5", "t": "tf.contrib.learn.infer_real_valued_columns_from_input_fn"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/learn/io", "k": [], "r": "r1.5", "t": "tf.contrib.learn.io"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/learn/learn_runner", "k": [], "r": "r1.5", "t": "tf.contrib.learn.learn_runner"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/learn/learn_runner/run", "k": [], "r": "r1.5", "t": "tf.contrib.learn.learn_runner.run"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/learn/learn_runner/tune", "k": [], "r": "r1.5", "t": "tf.contrib.learn.learn_runner.tune"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/learn/make_export_strategy", "k": [], "r": "r1.5", "t": "tf.contrib.learn.make_export_strategy"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/learn/models", "k": [], "r": "r1.5", "t": "tf.contrib.learn.models"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/learn/monitors", "k": [], "r": "r1.5", "t": "tf.contrib.learn.monitors"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/learn/multi_class_head", "k": [], "r": "r1.5", "t": "tf.contrib.learn.multi_class_head"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/learn/multi_head", "k": [], "r": "r1.5", "t": "tf.contrib.learn.multi_head"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/learn/multi_label_head", "k": [], "r": "r1.5", "t": "tf.contrib.learn.multi_label_head"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/learn/no_op_train_fn", "k": [], "r": "r1.5", "t": "tf.contrib.learn.no_op_train_fn"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/learn/ops", "k": [], "r": "r1.5", "t": "tf.contrib.learn.ops"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/learn/poisson_regression_head", "k": [], "r": "r1.5", "t": "tf.contrib.learn.poisson_regression_head"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/learn/preprocessing", "k": [], "r": "r1.5", "t": "tf.contrib.learn.preprocessing"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/learn/read_batch_examples", "k": [], "r": "r1.5", "t": "tf.contrib.learn.read_batch_examples"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/learn/read_batch_features", "k": [], "r": "r1.5", "t": "tf.contrib.learn.read_batch_features"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/learn/read_batch_record_features", "k": [], "r": "r1.5", "t": "tf.contrib.learn.read_batch_record_features"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/learn/read_keyed_batch_examples", "k": [], "r": "r1.5", "t": "tf.contrib.learn.read_keyed_batch_examples"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/learn/read_keyed_batch_examples_shared_queue", "k": [], "r": "r1.5", "t": "tf.contrib.learn.read_keyed_batch_examples_shared_queue"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/learn/read_keyed_batch_features", "k": [], "r": "r1.5", "t": "tf.contrib.learn.read_keyed_batch_features"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/learn/read_keyed_batch_features_shared_queue", "k": [], "r": "r1.5", "t": "tf.contrib.learn.read_keyed_batch_features_shared_queue"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/learn/regression_head", "k": [], "r": "r1.5", "t": "tf.contrib.learn.regression_head"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/learn/run_feeds", "k": [], "r": "r1.5", "t": "tf.contrib.learn.run_feeds"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/learn/run_n", "k": [], "r": "r1.5", "t": "tf.contrib.learn.run_n"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/learn/train", "k": [], "r": "r1.5", "t": "tf.contrib.learn.train"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/learn/utils", "k": [], "r": "r1.5", "t": "tf.contrib.learn.utils"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/legacy_seq2seq", "k": [], "r": "r1.5", "t": "tf.contrib.legacy_seq2seq"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/legacy_seq2seq/attention_decoder", "k": [], "r": "r1.5", "t": "tf.contrib.legacy_seq2seq.attention_decoder"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/legacy_seq2seq/basic_rnn_seq2seq", "k": [], "r": "r1.5", "t": "tf.contrib.legacy_seq2seq.basic_rnn_seq2seq"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/legacy_seq2seq/embedding_attention_decoder", "k": [], "r": "r1.5", "t": "tf.contrib.legacy_seq2seq.embedding_attention_decoder"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/legacy_seq2seq/embedding_attention_seq2seq", "k": [], "r": "r1.5", "t": "tf.contrib.legacy_seq2seq.embedding_attention_seq2seq"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/legacy_seq2seq/embedding_rnn_decoder", "k": [], "r": "r1.5", "t": "tf.contrib.legacy_seq2seq.embedding_rnn_decoder"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/legacy_seq2seq/embedding_rnn_seq2seq", "k": [], "r": "r1.5", "t": "tf.contrib.legacy_seq2seq.embedding_rnn_seq2seq"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/legacy_seq2seq/embedding_tied_rnn_seq2seq", "k": [], "r": "r1.5", "t": "tf.contrib.legacy_seq2seq.embedding_tied_rnn_seq2seq"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/legacy_seq2seq/model_with_buckets", "k": [], "r": "r1.5", "t": "tf.contrib.legacy_seq2seq.model_with_buckets"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/legacy_seq2seq/one2many_rnn_seq2seq", "k": [], "r": "r1.5", "t": "tf.contrib.legacy_seq2seq.one2many_rnn_seq2seq"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/legacy_seq2seq/rnn_decoder", "k": [], "r": "r1.5", "t": "tf.contrib.legacy_seq2seq.rnn_decoder"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/legacy_seq2seq/sequence_loss", "k": [], "r": "r1.5", "t": "tf.contrib.legacy_seq2seq.sequence_loss"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/legacy_seq2seq/sequence_loss_by_example", "k": [], "r": "r1.5", "t": "tf.contrib.legacy_seq2seq.sequence_loss_by_example"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/legacy_seq2seq/tied_rnn_seq2seq", "k": [], "r": "r1.5", "t": "tf.contrib.legacy_seq2seq.tied_rnn_seq2seq"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/linalg", "k": [], "r": "r1.5", "t": "tf.contrib.linalg"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/linear_optimizer", "k": [], "r": "r1.5", "t": "tf.contrib.linear_optimizer"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/linear_optimizer/SDCAOptimizer", "k": ["example_id_column", "num_loss_partitions", "num_table_shards", "symmetric_l1_regularization", "symmetric_l2_regularization", "__init__", "get_name", "get_train_step"], "r": "r1.5", "t": "tf.contrib.linear_optimizer.SDCAOptimizer"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/linear_optimizer/SdcaModel", "k": ["__init__", "approximate_duality_gap", "minimize", "predictions", "regularized_loss", "unregularized_loss", "update_weights"], "r": "r1.5", "t": "tf.contrib.linear_optimizer.SdcaModel"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/linear_optimizer/SparseFeatureColumn", "k": ["example_indices", "feature_indices", "feature_values", "__init__"], "r": "r1.5", "t": "tf.contrib.linear_optimizer.SparseFeatureColumn"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/lite", "k": ["EXPERIMENTAL_USE_TOCO_API_DIRECTLY", "FLOAT", "GRAPHVIZ_DOT", "INT32", "INT64", "QUANTIZED_UINT8", "STRING", "TENSORFLOW_GRAPHDEF", "TFLITE"], "r": "r1.5", "t": "tf.contrib.lite"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/lite/toco_convert", "k": [], "r": "r1.5", "t": "tf.contrib.lite.toco_convert"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/lite/toco_convert_protos", "k": [], "r": "r1.5", "t": "tf.contrib.lite.toco_convert_protos"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/lookup", "k": ["FastHashSpec"], "r": "r1.5", "t": "tf.contrib.lookup"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/lookup/HashTable", "k": ["default_value", "init", "key_dtype", "name", "table_ref", "value_dtype", "__init__", "lookup", "size"], "r": "r1.5", "t": "tf.contrib.lookup.HashTable"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/lookup/HasherSpec", "k": ["hasher", "key", "__new__"], "r": "r1.5", "t": "tf.contrib.lookup.HasherSpec"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/lookup/IdTableWithHashBuckets", "k": ["init", "key_dtype", "name", "table_ref", "value_dtype", "__init__", "lookup", "size"], "r": "r1.5", "t": "tf.contrib.lookup.IdTableWithHashBuckets"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/lookup/InitializableLookupTableBase", "k": ["default_value", "init", "key_dtype", "name", "table_ref", "value_dtype", "__init__", "lookup", "size"], "r": "r1.5", "t": "tf.contrib.lookup.InitializableLookupTableBase"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/lookup/KeyValueTensorInitializer", "k": ["key_dtype", "value_dtype", "__init__", "initialize"], "r": "r1.5", "t": "tf.contrib.lookup.KeyValueTensorInitializer"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/lookup/LookupInterface", "k": ["init", "key_dtype", "name", "value_dtype", "__init__", "lookup", "size"], "r": "r1.5", "t": "tf.contrib.lookup.LookupInterface"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/lookup/MutableDenseHashTable", "k": ["init", "key_dtype", "name", "value_dtype", "__init__", "export", "insert", "lookup", "size"], "r": "r1.5", "t": "tf.contrib.lookup.MutableDenseHashTable"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/lookup/MutableHashTable", "k": ["init", "key_dtype", "name", "value_dtype", "__init__", "export", "insert", "lookup", "size"], "r": "r1.5", "t": "tf.contrib.lookup.MutableHashTable"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/lookup/StrongHashSpec", "k": ["hasher", "key", "__new__"], "r": "r1.5", "t": "tf.contrib.lookup.StrongHashSpec"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/lookup/TableInitializerBase", "k": ["key_dtype", "value_dtype", "__init__", "initialize"], "r": "r1.5", "t": "tf.contrib.lookup.TableInitializerBase"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/lookup/TextFileIdTableInitializer", "k": ["key_dtype", "value_dtype", "__init__", "initialize"], "r": "r1.5", "t": "tf.contrib.lookup.TextFileIdTableInitializer"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/lookup/TextFileIndex", "k": ["LINE_NUMBER", "WHOLE_LINE"], "r": "r1.5", "t": "tf.contrib.lookup.TextFileIndex"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/lookup/TextFileInitializer", "k": ["key_dtype", "value_dtype", "__init__", "initialize"], "r": "r1.5", "t": "tf.contrib.lookup.TextFileInitializer"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/lookup/TextFileStringTableInitializer", "k": ["key_dtype", "value_dtype", "__init__", "initialize"], "r": "r1.5", "t": "tf.contrib.lookup.TextFileStringTableInitializer"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/lookup/index_table_from_file", "k": [], "r": "r1.5", "t": "tf.contrib.lookup.index_table_from_file"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/lookup/index_table_from_tensor", "k": [], "r": "r1.5", "t": "tf.contrib.lookup.index_table_from_tensor"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/lookup/index_to_string", "k": [], "r": "r1.5", "t": "tf.contrib.lookup.index_to_string"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/lookup/index_to_string_table_from_file", "k": [], "r": "r1.5", "t": "tf.contrib.lookup.index_to_string_table_from_file"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/lookup/index_to_string_table_from_tensor", "k": [], "r": "r1.5", "t": "tf.contrib.lookup.index_to_string_table_from_tensor"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/lookup/string_to_index", "k": [], "r": "r1.5", "t": "tf.contrib.lookup.string_to_index"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/lookup/string_to_index_table_from_file", "k": [], "r": "r1.5", "t": "tf.contrib.lookup.string_to_index_table_from_file"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/lookup/string_to_index_table_from_tensor", "k": [], "r": "r1.5", "t": "tf.contrib.lookup.string_to_index_table_from_tensor"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/losses", "k": [], "r": "r1.5", "t": "tf.contrib.losses"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/losses/absolute_difference", "k": [], "r": "r1.5", "t": "tf.contrib.losses.absolute_difference"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/losses/add_loss", "k": [], "r": "r1.5", "t": "tf.contrib.losses.add_loss"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/losses/compute_weighted_loss", "k": [], "r": "r1.5", "t": "tf.contrib.losses.compute_weighted_loss"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/losses/cosine_distance", "k": [], "r": "r1.5", "t": "tf.contrib.losses.cosine_distance"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/losses/get_losses", "k": [], "r": "r1.5", "t": "tf.contrib.losses.get_losses"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/losses/get_regularization_losses", "k": [], "r": "r1.5", "t": "tf.contrib.losses.get_regularization_losses"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/losses/get_total_loss", "k": [], "r": "r1.5", "t": "tf.contrib.losses.get_total_loss"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/losses/hinge_loss", "k": [], "r": "r1.5", "t": "tf.contrib.losses.hinge_loss"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/losses/log_loss", "k": [], "r": "r1.5", "t": "tf.contrib.losses.log_loss"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/losses/mean_pairwise_squared_error", "k": [], "r": "r1.5", "t": "tf.contrib.losses.mean_pairwise_squared_error"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/losses/mean_squared_error", "k": [], "r": "r1.5", "t": "tf.contrib.losses.mean_squared_error"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/losses/metric_learning", "k": [], "r": "r1.5", "t": "tf.contrib.losses.metric_learning"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/losses/metric_learning/cluster_loss", "k": [], "r": "r1.5", "t": "tf.contrib.losses.metric_learning.cluster_loss"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/losses/metric_learning/contrastive_loss", "k": [], "r": "r1.5", "t": "tf.contrib.losses.metric_learning.contrastive_loss"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/losses/metric_learning/lifted_struct_loss", "k": [], "r": "r1.5", "t": "tf.contrib.losses.metric_learning.lifted_struct_loss"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/losses/metric_learning/npairs_loss", "k": [], "r": "r1.5", "t": "tf.contrib.losses.metric_learning.npairs_loss"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/losses/metric_learning/npairs_loss_multilabel", "k": [], "r": "r1.5", "t": "tf.contrib.losses.metric_learning.npairs_loss_multilabel"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/losses/metric_learning/triplet_semihard_loss", "k": [], "r": "r1.5", "t": "tf.contrib.losses.metric_learning.triplet_semihard_loss"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/losses/sigmoid_cross_entropy", "k": [], "r": "r1.5", "t": "tf.contrib.losses.sigmoid_cross_entropy"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/losses/softmax_cross_entropy", "k": [], "r": "r1.5", "t": "tf.contrib.losses.softmax_cross_entropy"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/losses/sparse_softmax_cross_entropy", "k": [], "r": "r1.5", "t": "tf.contrib.losses.sparse_softmax_cross_entropy"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/memory_stats", "k": [], "r": "r1.5", "t": "tf.contrib.memory_stats"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/memory_stats/BytesInUse", "k": [], "r": "r1.5", "t": "tf.contrib.memory_stats.BytesInUse"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/memory_stats/BytesLimit", "k": [], "r": "r1.5", "t": "tf.contrib.memory_stats.BytesLimit"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/memory_stats/MaxBytesInUse", "k": [], "r": "r1.5", "t": "tf.contrib.memory_stats.MaxBytesInUse"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/meta_graph_transform", "k": [], "r": "r1.5", "t": "tf.contrib.meta_graph_transform"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/meta_graph_transform/meta_graph_transform", "k": ["absolute_import", "division", "print_function"], "r": "r1.5", "t": "tf.contrib.meta_graph_transform.meta_graph_transform"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/meta_graph_transform/meta_graph_transform/meta_graph_transform", "k": [], "r": "r1.5", "t": "tf.contrib.meta_graph_transform.meta_graph_transform.meta_graph_transform"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/metrics", "k": [], "r": "r1.5", "t": "tf.contrib.metrics"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/metrics/accuracy", "k": [], "r": "r1.5", "t": "tf.contrib.metrics.accuracy"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/metrics/aggregate_metric_map", "k": [], "r": "r1.5", "t": "tf.contrib.metrics.aggregate_metric_map"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/metrics/aggregate_metrics", "k": [], "r": "r1.5", "t": "tf.contrib.metrics.aggregate_metrics"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/metrics/auc_using_histogram", "k": [], "r": "r1.5", "t": "tf.contrib.metrics.auc_using_histogram"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/metrics/confusion_matrix", "k": [], "r": "r1.5", "t": "tf.contrib.metrics.confusion_matrix"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/metrics/count", "k": [], "r": "r1.5", "t": "tf.contrib.metrics.count"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/metrics/precision_recall_at_equal_thresholds", "k": [], "r": "r1.5", "t": "tf.contrib.metrics.precision_recall_at_equal_thresholds"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/metrics/recall_at_precision", "k": [], "r": "r1.5", "t": "tf.contrib.metrics.recall_at_precision"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/metrics/sparse_recall_at_top_k", "k": [], "r": "r1.5", "t": "tf.contrib.metrics.sparse_recall_at_top_k"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/metrics/streaming_accuracy", "k": [], "r": "r1.5", "t": "tf.contrib.metrics.streaming_accuracy"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/metrics/streaming_auc", "k": [], "r": "r1.5", "t": "tf.contrib.metrics.streaming_auc"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/metrics/streaming_concat", "k": [], "r": "r1.5", "t": "tf.contrib.metrics.streaming_concat"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/metrics/streaming_covariance", "k": [], "r": "r1.5", "t": "tf.contrib.metrics.streaming_covariance"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/metrics/streaming_curve_points", "k": [], "r": "r1.5", "t": "tf.contrib.metrics.streaming_curve_points"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/metrics/streaming_dynamic_auc", "k": [], "r": "r1.5", "t": "tf.contrib.metrics.streaming_dynamic_auc"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/metrics/streaming_false_negative_rate", "k": [], "r": "r1.5", "t": "tf.contrib.metrics.streaming_false_negative_rate"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/metrics/streaming_false_negative_rate_at_thresholds", "k": [], "r": "r1.5", "t": "tf.contrib.metrics.streaming_false_negative_rate_at_thresholds"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/metrics/streaming_false_negatives", "k": [], "r": "r1.5", "t": "tf.contrib.metrics.streaming_false_negatives"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/metrics/streaming_false_negatives_at_thresholds", "k": [], "r": "r1.5", "t": "tf.contrib.metrics.streaming_false_negatives_at_thresholds"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/metrics/streaming_false_positive_rate", "k": [], "r": "r1.5", "t": "tf.contrib.metrics.streaming_false_positive_rate"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/metrics/streaming_false_positive_rate_at_thresholds", "k": [], "r": "r1.5", "t": "tf.contrib.metrics.streaming_false_positive_rate_at_thresholds"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/metrics/streaming_false_positives", "k": [], "r": "r1.5", "t": "tf.contrib.metrics.streaming_false_positives"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/metrics/streaming_false_positives_at_thresholds", "k": [], "r": "r1.5", "t": "tf.contrib.metrics.streaming_false_positives_at_thresholds"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/metrics/streaming_mean", "k": [], "r": "r1.5", "t": "tf.contrib.metrics.streaming_mean"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/metrics/streaming_mean_absolute_error", "k": [], "r": "r1.5", "t": "tf.contrib.metrics.streaming_mean_absolute_error"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/metrics/streaming_mean_cosine_distance", "k": [], "r": "r1.5", "t": "tf.contrib.metrics.streaming_mean_cosine_distance"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/metrics/streaming_mean_iou", "k": [], "r": "r1.5", "t": "tf.contrib.metrics.streaming_mean_iou"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/metrics/streaming_mean_relative_error", "k": [], "r": "r1.5", "t": "tf.contrib.metrics.streaming_mean_relative_error"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/metrics/streaming_mean_squared_error", "k": [], "r": "r1.5", "t": "tf.contrib.metrics.streaming_mean_squared_error"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/metrics/streaming_mean_tensor", "k": [], "r": "r1.5", "t": "tf.contrib.metrics.streaming_mean_tensor"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/metrics/streaming_pearson_correlation", "k": [], "r": "r1.5", "t": "tf.contrib.metrics.streaming_pearson_correlation"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/metrics/streaming_percentage_less", "k": [], "r": "r1.5", "t": "tf.contrib.metrics.streaming_percentage_less"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/metrics/streaming_precision", "k": [], "r": "r1.5", "t": "tf.contrib.metrics.streaming_precision"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/metrics/streaming_precision_at_thresholds", "k": [], "r": "r1.5", "t": "tf.contrib.metrics.streaming_precision_at_thresholds"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/metrics/streaming_recall", "k": [], "r": "r1.5", "t": "tf.contrib.metrics.streaming_recall"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/metrics/streaming_recall_at_k", "k": [], "r": "r1.5", "t": "tf.contrib.metrics.streaming_recall_at_k"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/metrics/streaming_recall_at_thresholds", "k": [], "r": "r1.5", "t": "tf.contrib.metrics.streaming_recall_at_thresholds"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/metrics/streaming_root_mean_squared_error", "k": [], "r": "r1.5", "t": "tf.contrib.metrics.streaming_root_mean_squared_error"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/metrics/streaming_sensitivity_at_specificity", "k": [], "r": "r1.5", "t": "tf.contrib.metrics.streaming_sensitivity_at_specificity"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/metrics/streaming_sparse_average_precision_at_k", "k": [], "r": "r1.5", "t": "tf.contrib.metrics.streaming_sparse_average_precision_at_k"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/metrics/streaming_sparse_average_precision_at_top_k", "k": [], "r": "r1.5", "t": "tf.contrib.metrics.streaming_sparse_average_precision_at_top_k"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/metrics/streaming_sparse_precision_at_k", "k": [], "r": "r1.5", "t": "tf.contrib.metrics.streaming_sparse_precision_at_k"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/metrics/streaming_sparse_precision_at_top_k", "k": [], "r": "r1.5", "t": "tf.contrib.metrics.streaming_sparse_precision_at_top_k"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/metrics/streaming_sparse_recall_at_k", "k": [], "r": "r1.5", "t": "tf.contrib.metrics.streaming_sparse_recall_at_k"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/metrics/streaming_specificity_at_sensitivity", "k": [], "r": "r1.5", "t": "tf.contrib.metrics.streaming_specificity_at_sensitivity"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/metrics/streaming_true_negatives", "k": [], "r": "r1.5", "t": "tf.contrib.metrics.streaming_true_negatives"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/metrics/streaming_true_negatives_at_thresholds", "k": [], "r": "r1.5", "t": "tf.contrib.metrics.streaming_true_negatives_at_thresholds"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/metrics/streaming_true_positives", "k": [], "r": "r1.5", "t": "tf.contrib.metrics.streaming_true_positives"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/metrics/streaming_true_positives_at_thresholds", "k": [], "r": "r1.5", "t": "tf.contrib.metrics.streaming_true_positives_at_thresholds"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/model_pruning", "k": [], "r": "r1.5", "t": "tf.contrib.model_pruning"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/model_pruning/MaskedBasicLSTMCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.5", "t": "tf.contrib.model_pruning.MaskedBasicLSTMCell"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/model_pruning/MaskedLSTMCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.5", "t": "tf.contrib.model_pruning.MaskedLSTMCell"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/model_pruning/Pruning", "k": ["__init__", "add_pruning_summaries", "conditional_mask_update_op", "mask_update_op", "print_hparams"], "r": "r1.5", "t": "tf.contrib.model_pruning.Pruning"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/model_pruning/apply_mask", "k": [], "r": "r1.5", "t": "tf.contrib.model_pruning.apply_mask"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/model_pruning/get_masked_weights", "k": [], "r": "r1.5", "t": "tf.contrib.model_pruning.get_masked_weights"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/model_pruning/get_masks", "k": [], "r": "r1.5", "t": "tf.contrib.model_pruning.get_masks"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/model_pruning/get_pruning_hparams", "k": [], "r": "r1.5", "t": "tf.contrib.model_pruning.get_pruning_hparams"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/model_pruning/get_thresholds", "k": [], "r": "r1.5", "t": "tf.contrib.model_pruning.get_thresholds"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/model_pruning/get_weight_sparsity", "k": [], "r": "r1.5", "t": "tf.contrib.model_pruning.get_weight_sparsity"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/model_pruning/get_weights", "k": [], "r": "r1.5", "t": "tf.contrib.model_pruning.get_weights"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/model_pruning/masked_conv2d", "k": [], "r": "r1.5", "t": "tf.contrib.model_pruning.masked_conv2d"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/model_pruning/masked_fully_connected", "k": [], "r": "r1.5", "t": "tf.contrib.model_pruning.masked_fully_connected"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/model_pruning/train", "k": [], "r": "r1.5", "t": "tf.contrib.model_pruning.train"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/nccl", "k": [], "r": "r1.5", "t": "tf.contrib.nccl"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/nccl/all_max", "k": [], "r": "r1.5", "t": "tf.contrib.nccl.all_max"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/nccl/all_min", "k": [], "r": "r1.5", "t": "tf.contrib.nccl.all_min"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/nccl/all_prod", "k": [], "r": "r1.5", "t": "tf.contrib.nccl.all_prod"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/nccl/all_sum", "k": [], "r": "r1.5", "t": "tf.contrib.nccl.all_sum"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/nccl/broadcast", "k": [], "r": "r1.5", "t": "tf.contrib.nccl.broadcast"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/nccl/reduce_sum", "k": [], "r": "r1.5", "t": "tf.contrib.nccl.reduce_sum"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/ndlstm", "k": [], "r": "r1.5", "t": "tf.contrib.ndlstm"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/nn", "k": [], "r": "r1.5", "t": "tf.contrib.nn"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/nn/alpha_dropout", "k": [], "r": "r1.5", "t": "tf.contrib.nn.alpha_dropout"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/nn/conv1d_transpose", "k": [], "r": "r1.5", "t": "tf.contrib.nn.conv1d_transpose"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/nn/deprecated_flipped_sigmoid_cross_entropy_with_logits", "k": [], "r": "r1.5", "t": "tf.contrib.nn.deprecated_flipped_sigmoid_cross_entropy_with_logits"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/nn/deprecated_flipped_softmax_cross_entropy_with_logits", "k": [], "r": "r1.5", "t": "tf.contrib.nn.deprecated_flipped_softmax_cross_entropy_with_logits"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/nn/deprecated_flipped_sparse_softmax_cross_entropy_with_logits", "k": [], "r": "r1.5", "t": "tf.contrib.nn.deprecated_flipped_sparse_softmax_cross_entropy_with_logits"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/nn/nth_element", "k": [], "r": "r1.5", "t": "tf.contrib.nn.nth_element"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/nn/rank_sampled_softmax_loss", "k": [], "r": "r1.5", "t": "tf.contrib.nn.rank_sampled_softmax_loss"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/nn/sampled_sparse_softmax_loss", "k": [], "r": "r1.5", "t": "tf.contrib.nn.sampled_sparse_softmax_loss"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/nn/scaled_softplus", "k": [], "r": "r1.5", "t": "tf.contrib.nn.scaled_softplus"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/opt", "k": [], "r": "r1.5", "t": "tf.contrib.opt"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/opt/DropStaleGradientOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.5", "t": "tf.contrib.opt.DropStaleGradientOptimizer"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/opt/ElasticAverageCustomGetter", "k": ["__call__", "__init__"], "r": "r1.5", "t": "tf.contrib.opt.ElasticAverageCustomGetter"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/opt/ElasticAverageOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_init_op", "get_name", "get_slot", "get_slot_names", "make_session_run_hook", "minimize", "variables", "BETA", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.5", "t": "tf.contrib.opt.ElasticAverageOptimizer"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/opt/ExternalOptimizerInterface", "k": ["__init__", "minimize"], "r": "r1.5", "t": "tf.contrib.opt.ExternalOptimizerInterface"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/opt/LazyAdamOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.5", "t": "tf.contrib.opt.LazyAdamOptimizer"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/opt/MovingAverageOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "swapping_saver", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.5", "t": "tf.contrib.opt.MovingAverageOptimizer"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/opt/MultitaskOptimizerWrapper", "k": ["__getattr__", "__init__"], "r": "r1.5", "t": "tf.contrib.opt.MultitaskOptimizerWrapper"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/opt/NadamOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.5", "t": "tf.contrib.opt.NadamOptimizer"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/opt/PowerSignOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.5", "t": "tf.contrib.opt.PowerSignOptimizer"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/opt/ScipyOptimizerInterface", "k": ["__init__", "minimize"], "r": "r1.5", "t": "tf.contrib.opt.ScipyOptimizerInterface"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/opt/VariableClippingOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.5", "t": "tf.contrib.opt.VariableClippingOptimizer"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/opt/clip_gradients_by_global_norm", "k": [], "r": "r1.5", "t": "tf.contrib.opt.clip_gradients_by_global_norm"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/periodic_resample", "k": [], "r": "r1.5", "t": "tf.contrib.periodic_resample"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/periodic_resample/periodic_resample", "k": [], "r": "r1.5", "t": "tf.contrib.periodic_resample.periodic_resample"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/predictor", "k": [], "r": "r1.5", "t": "tf.contrib.predictor"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/predictor/from_contrib_estimator", "k": [], "r": "r1.5", "t": "tf.contrib.predictor.from_contrib_estimator"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/predictor/from_estimator", "k": [], "r": "r1.5", "t": "tf.contrib.predictor.from_estimator"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/predictor/from_saved_model", "k": [], "r": "r1.5", "t": "tf.contrib.predictor.from_saved_model"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/quantization", "k": [], "r": "r1.5", "t": "tf.contrib.quantization"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/quantize", "k": [], "r": "r1.5", "t": "tf.contrib.quantize"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/quantize/create_eval_graph", "k": [], "r": "r1.5", "t": "tf.contrib.quantize.create_eval_graph"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/quantize/create_training_graph", "k": [], "r": "r1.5", "t": "tf.contrib.quantize.create_training_graph"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/reduce_slice_ops", "k": ["absolute_import", "division", "print_function"], "r": "r1.5", "t": "tf.contrib.reduce_slice_ops"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/reduce_slice_ops/python", "k": [], "r": "r1.5", "t": "tf.contrib.reduce_slice_ops.python"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/reduce_slice_ops/python/ops", "k": [], "r": "r1.5", "t": "tf.contrib.reduce_slice_ops.python.ops"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/remote_fused_graph", "k": [], "r": "r1.5", "t": "tf.contrib.remote_fused_graph"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/remote_fused_graph/remote_fused_graph_execute", "k": [], "r": "r1.5", "t": "tf.contrib.remote_fused_graph.remote_fused_graph_execute"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/resampler", "k": [], "r": "r1.5", "t": "tf.contrib.resampler"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/resampler/resampler", "k": [], "r": "r1.5", "t": "tf.contrib.resampler.resampler"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/rnn", "k": [], "r": "r1.5", "t": "tf.contrib.rnn"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/rnn/AttentionCellWrapper", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.5", "t": "tf.contrib.rnn.AttentionCellWrapper"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/rnn/BasicLSTMCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.5", "t": "tf.contrib.rnn.BasicLSTMCell"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/rnn/BasicRNNCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.5", "t": "tf.contrib.rnn.BasicRNNCell"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/rnn/BidirectionalGridLSTMCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "state_tuple_type", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.5", "t": "tf.contrib.rnn.BidirectionalGridLSTMCell"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/rnn/CompiledWrapper", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.5", "t": "tf.contrib.rnn.CompiledWrapper"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/rnn/Conv1DLSTMCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.5", "t": "tf.contrib.rnn.Conv1DLSTMCell"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/rnn/Conv2DLSTMCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.5", "t": "tf.contrib.rnn.Conv2DLSTMCell"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/rnn/Conv3DLSTMCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.5", "t": "tf.contrib.rnn.Conv3DLSTMCell"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/rnn/ConvLSTMCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.5", "t": "tf.contrib.rnn.ConvLSTMCell"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/rnn/CoupledInputForgetGateLSTMCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.5", "t": "tf.contrib.rnn.CoupledInputForgetGateLSTMCell"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/rnn/DeviceWrapper", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.5", "t": "tf.contrib.rnn.DeviceWrapper"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/rnn/DropoutWrapper", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.5", "t": "tf.contrib.rnn.DropoutWrapper"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/rnn/EmbeddingWrapper", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.5", "t": "tf.contrib.rnn.EmbeddingWrapper"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/rnn/FusedRNNCell", "k": ["__call__"], "r": "r1.5", "t": "tf.contrib.rnn.FusedRNNCell"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/rnn/FusedRNNCellAdaptor", "k": ["__call__", "__init__"], "r": "r1.5", "t": "tf.contrib.rnn.FusedRNNCellAdaptor"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/rnn/GLSTMCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.5", "t": "tf.contrib.rnn.GLSTMCell"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/rnn/GRUBlockCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.5", "t": "tf.contrib.rnn.GRUBlockCell"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/rnn/GRUBlockCellV2", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.5", "t": "tf.contrib.rnn.GRUBlockCellV2"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/rnn/GRUCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.5", "t": "tf.contrib.rnn.GRUCell"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/rnn/GridLSTMCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "state_tuple_type", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.5", "t": "tf.contrib.rnn.GridLSTMCell"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/rnn/HighwayWrapper", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.5", "t": "tf.contrib.rnn.HighwayWrapper"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/rnn/InputProjectionWrapper", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.5", "t": "tf.contrib.rnn.InputProjectionWrapper"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/rnn/IntersectionRNNCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.5", "t": "tf.contrib.rnn.IntersectionRNNCell"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/rnn/LSTMBlockCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.5", "t": "tf.contrib.rnn.LSTMBlockCell"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/rnn/LSTMBlockFusedCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "num_units", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "r1.5", "t": "tf.contrib.rnn.LSTMBlockFusedCell"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/rnn/LSTMBlockWrapper", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "num_units", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "r1.5", "t": "tf.contrib.rnn.LSTMBlockWrapper"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/rnn/LSTMCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.5", "t": "tf.contrib.rnn.LSTMCell"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/rnn/LSTMStateTuple", "k": ["c", "dtype", "h", "__new__"], "r": "r1.5", "t": "tf.contrib.rnn.LSTMStateTuple"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/rnn/LayerNormBasicLSTMCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.5", "t": "tf.contrib.rnn.LayerNormBasicLSTMCell"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/rnn/MultiRNNCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.5", "t": "tf.contrib.rnn.MultiRNNCell"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/rnn/NASCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.5", "t": "tf.contrib.rnn.NASCell"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/rnn/OutputProjectionWrapper", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.5", "t": "tf.contrib.rnn.OutputProjectionWrapper"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/rnn/PhasedLSTMCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.5", "t": "tf.contrib.rnn.PhasedLSTMCell"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/rnn/RNNCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.5", "t": "tf.contrib.rnn.RNNCell"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/rnn/ResidualWrapper", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.5", "t": "tf.contrib.rnn.ResidualWrapper"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/rnn/TimeFreqLSTMCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.5", "t": "tf.contrib.rnn.TimeFreqLSTMCell"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/rnn/TimeReversedFusedRNN", "k": ["__call__", "__init__"], "r": "r1.5", "t": "tf.contrib.rnn.TimeReversedFusedRNN"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/rnn/UGRNNCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.5", "t": "tf.contrib.rnn.UGRNNCell"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/rnn/stack_bidirectional_dynamic_rnn", "k": [], "r": "r1.5", "t": "tf.contrib.rnn.stack_bidirectional_dynamic_rnn"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/rnn/stack_bidirectional_rnn", "k": [], "r": "r1.5", "t": "tf.contrib.rnn.stack_bidirectional_rnn"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/saved_model", "k": [], "r": "r1.5", "t": "tf.contrib.saved_model"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/saved_model/get_signature_def_by_key", "k": [], "r": "r1.5", "t": "tf.contrib.saved_model.get_signature_def_by_key"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/seq2seq", "k": [], "r": "r1.5", "t": "tf.contrib.seq2seq"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/seq2seq/AttentionMechanism", "k": [], "r": "r1.5", "t": "tf.contrib.seq2seq.AttentionMechanism"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/seq2seq/AttentionWrapper", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.5", "t": "tf.contrib.seq2seq.AttentionWrapper"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/seq2seq/AttentionWrapperState", "k": ["alignment_history", "alignments", "attention", "cell_state", "time", "__new__", "clone"], "r": "r1.5", "t": "tf.contrib.seq2seq.AttentionWrapperState"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/seq2seq/BahdanauAttention", "k": ["alignments_size", "batch_size", "keys", "memory_layer", "query_layer", "values", "__call__", "__init__", "initial_alignments"], "r": "r1.5", "t": "tf.contrib.seq2seq.BahdanauAttention"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/seq2seq/BahdanauMonotonicAttention", "k": ["alignments_size", "batch_size", "keys", "memory_layer", "query_layer", "values", "__call__", "__init__", "initial_alignments"], "r": "r1.5", "t": "tf.contrib.seq2seq.BahdanauMonotonicAttention"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/seq2seq/BasicDecoder", "k": ["batch_size", "output_dtype", "output_size", "tracks_own_finished", "__init__", "finalize", "initialize", "step"], "r": "r1.5", "t": "tf.contrib.seq2seq.BasicDecoder"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/seq2seq/BasicDecoderOutput", "k": ["rnn_output", "sample_id", "__new__"], "r": "r1.5", "t": "tf.contrib.seq2seq.BasicDecoderOutput"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/seq2seq/BeamSearchDecoder", "k": ["batch_size", "output_dtype", "output_size", "tracks_own_finished", "__init__", "finalize", "initialize", "step"], "r": "r1.5", "t": "tf.contrib.seq2seq.BeamSearchDecoder"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/seq2seq/BeamSearchDecoderOutput", "k": ["parent_ids", "predicted_ids", "scores", "__new__"], "r": "r1.5", "t": "tf.contrib.seq2seq.BeamSearchDecoderOutput"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/seq2seq/BeamSearchDecoderState", "k": ["cell_state", "finished", "lengths", "log_probs", "__new__"], "r": "r1.5", "t": "tf.contrib.seq2seq.BeamSearchDecoderState"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/seq2seq/CustomHelper", "k": ["batch_size", "sample_ids_dtype", "sample_ids_shape", "__init__", "initialize", "next_inputs", "sample"], "r": "r1.5", "t": "tf.contrib.seq2seq.CustomHelper"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/seq2seq/Decoder", "k": ["batch_size", "output_dtype", "output_size", "tracks_own_finished", "finalize", "initialize", "step"], "r": "r1.5", "t": "tf.contrib.seq2seq.Decoder"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/seq2seq/FinalBeamSearchDecoderOutput", "k": ["beam_search_decoder_output", "predicted_ids", "__new__"], "r": "r1.5", "t": "tf.contrib.seq2seq.FinalBeamSearchDecoderOutput"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/seq2seq/GreedyEmbeddingHelper", "k": ["batch_size", "sample_ids_dtype", "sample_ids_shape", "__init__", "initialize", "next_inputs", "sample"], "r": "r1.5", "t": "tf.contrib.seq2seq.GreedyEmbeddingHelper"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/seq2seq/Helper", "k": ["batch_size", "sample_ids_dtype", "sample_ids_shape", "initialize", "next_inputs", "sample"], "r": "r1.5", "t": "tf.contrib.seq2seq.Helper"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/seq2seq/InferenceHelper", "k": ["batch_size", "sample_ids_dtype", "sample_ids_shape", "__init__", "initialize", "next_inputs", "sample"], "r": "r1.5", "t": "tf.contrib.seq2seq.InferenceHelper"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/seq2seq/LuongAttention", "k": ["alignments_size", "batch_size", "keys", "memory_layer", "query_layer", "values", "__call__", "__init__", "initial_alignments"], "r": "r1.5", "t": "tf.contrib.seq2seq.LuongAttention"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/seq2seq/LuongMonotonicAttention", "k": ["alignments_size", "batch_size", "keys", "memory_layer", "query_layer", "values", "__call__", "__init__", "initial_alignments"], "r": "r1.5", "t": "tf.contrib.seq2seq.LuongMonotonicAttention"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/seq2seq/SampleEmbeddingHelper", "k": ["batch_size", "sample_ids_dtype", "sample_ids_shape", "__init__", "initialize", "next_inputs", "sample"], "r": "r1.5", "t": "tf.contrib.seq2seq.SampleEmbeddingHelper"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/seq2seq/ScheduledEmbeddingTrainingHelper", "k": ["batch_size", "sample_ids_dtype", "sample_ids_shape", "__init__", "initialize", "next_inputs", "sample"], "r": "r1.5", "t": "tf.contrib.seq2seq.ScheduledEmbeddingTrainingHelper"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/seq2seq/ScheduledOutputTrainingHelper", "k": ["batch_size", "sample_ids_dtype", "sample_ids_shape", "__init__", "initialize", "next_inputs", "sample"], "r": "r1.5", "t": "tf.contrib.seq2seq.ScheduledOutputTrainingHelper"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/seq2seq/TrainingHelper", "k": ["batch_size", "sample_ids_dtype", "sample_ids_shape", "__init__", "initialize", "next_inputs", "sample"], "r": "r1.5", "t": "tf.contrib.seq2seq.TrainingHelper"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/seq2seq/dynamic_decode", "k": [], "r": "r1.5", "t": "tf.contrib.seq2seq.dynamic_decode"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/seq2seq/gather_tree", "k": [], "r": "r1.5", "t": "tf.contrib.seq2seq.gather_tree"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/seq2seq/hardmax", "k": [], "r": "r1.5", "t": "tf.contrib.seq2seq.hardmax"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/seq2seq/monotonic_attention", "k": [], "r": "r1.5", "t": "tf.contrib.seq2seq.monotonic_attention"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/seq2seq/safe_cumprod", "k": [], "r": "r1.5", "t": "tf.contrib.seq2seq.safe_cumprod"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/seq2seq/sequence_loss", "k": [], "r": "r1.5", "t": "tf.contrib.seq2seq.sequence_loss"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/seq2seq/tile_batch", "k": [], "r": "r1.5", "t": "tf.contrib.seq2seq.tile_batch"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/session_bundle", "k": [], "r": "r1.5", "t": "tf.contrib.session_bundle"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/signal", "k": [], "r": "r1.5", "t": "tf.contrib.signal"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/signal/frame", "k": [], "r": "r1.5", "t": "tf.contrib.signal.frame"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/signal/hamming_window", "k": [], "r": "r1.5", "t": "tf.contrib.signal.hamming_window"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/signal/hann_window", "k": [], "r": "r1.5", "t": "tf.contrib.signal.hann_window"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/signal/inverse_stft", "k": [], "r": "r1.5", "t": "tf.contrib.signal.inverse_stft"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/signal/inverse_stft_window_fn", "k": [], "r": "r1.5", "t": "tf.contrib.signal.inverse_stft_window_fn"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/signal/linear_to_mel_weight_matrix", "k": [], "r": "r1.5", "t": "tf.contrib.signal.linear_to_mel_weight_matrix"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/signal/mfccs_from_log_mel_spectrograms", "k": [], "r": "r1.5", "t": "tf.contrib.signal.mfccs_from_log_mel_spectrograms"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/signal/overlap_and_add", "k": [], "r": "r1.5", "t": "tf.contrib.signal.overlap_and_add"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/signal/stft", "k": [], "r": "r1.5", "t": "tf.contrib.signal.stft"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/slim", "k": [], "r": "r1.5", "t": "tf.contrib.slim"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/solvers", "k": [], "r": "r1.5", "t": "tf.contrib.solvers"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/sparsemax", "k": [], "r": "r1.5", "t": "tf.contrib.sparsemax"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/sparsemax/sparsemax", "k": [], "r": "r1.5", "t": "tf.contrib.sparsemax.sparsemax"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/sparsemax/sparsemax_loss", "k": [], "r": "r1.5", "t": "tf.contrib.sparsemax.sparsemax_loss"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/specs", "k": [], "r": "r1.5", "t": "tf.contrib.specs"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/staging", "k": ["absolute_import", "division", "print_function"], "r": "r1.5", "t": "tf.contrib.staging"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/staging/StagingArea", "k": ["capacity", "dtypes", "memory_limit", "name", "names", "shapes", "__init__", "clear", "get", "peek", "put", "size"], "r": "r1.5", "t": "tf.contrib.staging.StagingArea"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/stat_summarizer", "k": [], "r": "r1.5", "t": "tf.contrib.stat_summarizer"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/stat_summarizer/DeleteStatSummarizer", "k": [], "r": "r1.5", "t": "tf.contrib.stat_summarizer.DeleteStatSummarizer"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/stat_summarizer/NewStatSummarizer", "k": [], "r": "r1.5", "t": "tf.contrib.stat_summarizer.NewStatSummarizer"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/stat_summarizer/StatSummarizer", "k": ["GetOutputString", "PrintStepStats", "ProcessStepStats", "ProcessStepStatsStr", "__getattr__", "__init__", "__setattr__", "__swig_getmethods__", "__swig_setmethods__"], "r": "r1.5", "t": "tf.contrib.stat_summarizer.StatSummarizer"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/stateless", "k": [], "r": "r1.5", "t": "tf.contrib.stateless"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/stateless/stateless_random_normal", "k": [], "r": "r1.5", "t": "tf.contrib.stateless.stateless_random_normal"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/stateless/stateless_random_uniform", "k": [], "r": "r1.5", "t": "tf.contrib.stateless.stateless_random_uniform"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/stateless/stateless_truncated_normal", "k": [], "r": "r1.5", "t": "tf.contrib.stateless.stateless_truncated_normal"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/summary", "k": ["absolute_import", "division", "print_function"], "r": "r1.5", "t": "tf.contrib.summary"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/summary/SummaryWriter", "k": ["__init__", "as_default", "set_as_default"], "r": "r1.5", "t": "tf.contrib.summary.SummaryWriter"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/summary/all_summary_ops", "k": [], "r": "r1.5", "t": "tf.contrib.summary.all_summary_ops"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/summary/always_record_summaries", "k": [], "r": "r1.5", "t": "tf.contrib.summary.always_record_summaries"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/summary/audio", "k": [], "r": "r1.5", "t": "tf.contrib.summary.audio"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/summary/create_db_writer", "k": [], "r": "r1.5", "t": "tf.contrib.summary.create_db_writer"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/summary/create_file_writer", "k": [], "r": "r1.5", "t": "tf.contrib.summary.create_file_writer"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/summary/create_summary_file_writer", "k": [], "r": "r1.5", "t": "tf.contrib.summary.create_summary_file_writer"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/summary/eval_dir", "k": [], "r": "r1.5", "t": "tf.contrib.summary.eval_dir"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/summary/flush", "k": [], "r": "r1.5", "t": "tf.contrib.summary.flush"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/summary/generic", "k": [], "r": "r1.5", "t": "tf.contrib.summary.generic"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/summary/graph", "k": [], "r": "r1.5", "t": "tf.contrib.summary.graph"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/summary/histogram", "k": [], "r": "r1.5", "t": "tf.contrib.summary.histogram"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/summary/image", "k": [], "r": "r1.5", "t": "tf.contrib.summary.image"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/summary/import_event", "k": [], "r": "r1.5", "t": "tf.contrib.summary.import_event"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/summary/initialize", "k": [], "r": "r1.5", "t": "tf.contrib.summary.initialize"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/summary/never_record_summaries", "k": [], "r": "r1.5", "t": "tf.contrib.summary.never_record_summaries"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/summary/record_summaries_every_n_global_steps", "k": [], "r": "r1.5", "t": "tf.contrib.summary.record_summaries_every_n_global_steps"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/summary/scalar", "k": [], "r": "r1.5", "t": "tf.contrib.summary.scalar"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/summary/should_record_summaries", "k": [], "r": "r1.5", "t": "tf.contrib.summary.should_record_summaries"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/summary/summary_writer_initializer_op", "k": [], "r": "r1.5", "t": "tf.contrib.summary.summary_writer_initializer_op"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/tensor_forest", "k": [], "r": "r1.5", "t": "tf.contrib.tensor_forest"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/tensorboard", "k": [], "r": "r1.5", "t": "tf.contrib.tensorboard"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/testing", "k": [], "r": "r1.5", "t": "tf.contrib.testing"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/tfprof", "k": [], "r": "r1.5", "t": "tf.contrib.tfprof"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/timeseries", "k": [], "r": "r1.5", "t": "tf.contrib.timeseries"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/timeseries/ARModel", "k": ["__init__", "define_loss", "generate", "get_batch_loss", "get_start_state", "initialize_graph", "loss_op", "predict", "prediction_ops", "random_model_parameters", "NORMAL_LIKELIHOOD_LOSS", "SQUARED_LOSS"], "r": "r1.5", "t": "tf.contrib.timeseries.ARModel"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/timeseries/ARRegressor", "k": ["config", "model_dir", "model_fn", "params", "__init__", "build_raw_serving_input_receiver_fn", "evaluate", "export_savedmodel", "get_variable_names", "get_variable_value", "latest_checkpoint", "predict", "train"], "r": "r1.5", "t": "tf.contrib.timeseries.ARRegressor"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/timeseries/CSVReader", "k": ["__init__", "check_dataset_size", "read", "read_full"], "r": "r1.5", "t": "tf.contrib.timeseries.CSVReader"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/timeseries/FilteringResults", "k": ["STATE_PREFIX", "STATE_TUPLE", "TIMES"], "r": "r1.5", "t": "tf.contrib.timeseries.FilteringResults"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/timeseries/NumpyReader", "k": ["__init__", "check_dataset_size", "read", "read_full"], "r": "r1.5", "t": "tf.contrib.timeseries.NumpyReader"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/timeseries/RandomWindowInputFn", "k": ["__call__", "__init__", "create_batch"], "r": "r1.5", "t": "tf.contrib.timeseries.RandomWindowInputFn"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/timeseries/StructuralEnsembleRegressor", "k": ["config", "model_dir", "model_fn", "params", "__init__", "build_raw_serving_input_receiver_fn", "evaluate", "export_savedmodel", "get_variable_names", "get_variable_value", "latest_checkpoint", "predict", "train"], "r": "r1.5", "t": "tf.contrib.timeseries.StructuralEnsembleRegressor"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/timeseries/TrainEvalFeatures", "k": ["TIMES", "VALUES"], "r": "r1.5", "t": "tf.contrib.timeseries.TrainEvalFeatures"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/timeseries/WholeDatasetInputFn", "k": ["__call__", "__init__", "create_batch"], "r": "r1.5", "t": "tf.contrib.timeseries.WholeDatasetInputFn"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/timeseries/predict_continuation_input_fn", "k": [], "r": "r1.5", "t": "tf.contrib.timeseries.predict_continuation_input_fn"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/timeseries/saved_model_utils", "k": [], "r": "r1.5", "t": "tf.contrib.timeseries.saved_model_utils"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/timeseries/saved_model_utils/filter_continuation", "k": [], "r": "r1.5", "t": "tf.contrib.timeseries.saved_model_utils.filter_continuation"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/timeseries/saved_model_utils/predict_continuation", "k": [], "r": "r1.5", "t": "tf.contrib.timeseries.saved_model_utils.predict_continuation"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/tpu", "k": [], "r": "r1.5", "t": "tf.contrib.tpu"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/tpu/CrossShardOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.5", "t": "tf.contrib.tpu.CrossShardOptimizer"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/tpu/DeviceAssignment", "k": ["computation_shape", "core_assignment", "num_replicas", "topology", "__init__", "host_device", "tpu_device", "tpu_ordinal"], "r": "r1.5", "t": "tf.contrib.tpu.DeviceAssignment"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/tpu/InfeedQueue", "k": ["number_of_shards", "number_of_tuple_elements", "shard_dimensions", "sharding_policies", "tuple_shapes", "tuple_types", "__init__", "freeze", "generate_dequeue_op", "generate_enqueue_ops", "set_configuration_from_input_tensors", "set_configuration_from_sharded_input_tensors", "set_number_of_shards", "set_shard_dimensions", "set_tuple_shapes", "set_tuple_types", "split_inputs_and_generate_enqueue_ops"], "r": "r1.5", "t": "tf.contrib.tpu.InfeedQueue"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/tpu/RunConfig", "k": ["cluster_spec", "evaluation_master", "is_chief", "keep_checkpoint_every_n_hours", "keep_checkpoint_max", "log_step_count_steps", "master", "model_dir", "num_ps_replicas", "num_worker_replicas", "save_checkpoints_secs", "save_checkpoints_steps", "save_summary_steps", "service", "session_config", "task_id", "task_type", "tf_random_seed", "tpu_config", "__init__", "replace"], "r": "r1.5", "t": "tf.contrib.tpu.RunConfig"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/tpu/TPUConfig", "k": ["iterations_per_loop", "num_shards", "per_host_input_for_training", "tpu_job_name", "__new__"], "r": "r1.5", "t": "tf.contrib.tpu.TPUConfig"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/tpu/TPUEstimator", "k": ["config", "model_dir", "model_fn", "params", "__init__", "evaluate", "export_savedmodel", "get_variable_names", "get_variable_value", "latest_checkpoint", "predict", "train"], "r": "r1.5", "t": "tf.contrib.tpu.TPUEstimator"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/tpu/TPUEstimatorSpec", "k": ["eval_metrics", "export_outputs", "loss", "mode", "predictions", "train_op", "__new__", "as_estimator_spec"], "r": "r1.5", "t": "tf.contrib.tpu.TPUEstimatorSpec"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/tpu/Topology", "k": ["device_coordinates", "mesh_shape", "__init__", "serialized"], "r": "r1.5", "t": "tf.contrib.tpu.Topology"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/tpu/batch_parallel", "k": [], "r": "r1.5", "t": "tf.contrib.tpu.batch_parallel"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/tpu/core", "k": [], "r": "r1.5", "t": "tf.contrib.tpu.core"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/tpu/cross_replica_sum", "k": [], "r": "r1.5", "t": "tf.contrib.tpu.cross_replica_sum"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/tpu/device_assignment", "k": [], "r": "r1.5", "t": "tf.contrib.tpu.device_assignment"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/tpu/infeed_dequeue", "k": [], "r": "r1.5", "t": "tf.contrib.tpu.infeed_dequeue"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/tpu/infeed_dequeue_tuple", "k": [], "r": "r1.5", "t": "tf.contrib.tpu.infeed_dequeue_tuple"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/tpu/initialize_system", "k": [], "r": "r1.5", "t": "tf.contrib.tpu.initialize_system"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/tpu/outfeed_enqueue", "k": [], "r": "r1.5", "t": "tf.contrib.tpu.outfeed_enqueue"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/tpu/outfeed_enqueue_tuple", "k": [], "r": "r1.5", "t": "tf.contrib.tpu.outfeed_enqueue_tuple"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/tpu/profiler", "k": [], "r": "r1.5", "t": "tf.contrib.tpu.profiler"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/tpu/profiler/Device", "k": ["ResourcesEntry"], "r": "r1.5", "t": "tf.contrib.tpu.profiler.Device"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/tpu/profiler/Device/ResourcesEntry", "k": [], "r": "r1.5", "t": "tf.contrib.tpu.profiler.Device.ResourcesEntry"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/tpu/profiler/Resource", "k": [], "r": "r1.5", "t": "tf.contrib.tpu.profiler.Resource"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/tpu/profiler/Trace", "k": ["DevicesEntry"], "r": "r1.5", "t": "tf.contrib.tpu.profiler.Trace"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/tpu/profiler/Trace/DevicesEntry", "k": [], "r": "r1.5", "t": "tf.contrib.tpu.profiler.Trace.DevicesEntry"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/tpu/profiler/TraceEvent", "k": [], "r": "r1.5", "t": "tf.contrib.tpu.profiler.TraceEvent"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/tpu/repeat", "k": [], "r": "r1.5", "t": "tf.contrib.tpu.repeat"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/tpu/replicate", "k": [], "r": "r1.5", "t": "tf.contrib.tpu.replicate"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/tpu/rewrite", "k": [], "r": "r1.5", "t": "tf.contrib.tpu.rewrite"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/tpu/shard", "k": [], "r": "r1.5", "t": "tf.contrib.tpu.shard"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/tpu/shutdown_system", "k": [], "r": "r1.5", "t": "tf.contrib.tpu.shutdown_system"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/tpu/while_loop", "k": [], "r": "r1.5", "t": "tf.contrib.tpu.while_loop"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/training", "k": [], "r": "r1.5", "t": "tf.contrib.training"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/training/FeedingQueueRunner", "k": ["cancel_op", "close_op", "enqueue_ops", "exceptions_raised", "name", "queue", "queue_closed_exception_types", "__init__", "create_threads", "from_proto", "to_proto"], "r": "r1.5", "t": "tf.contrib.training.FeedingQueueRunner"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/training/GreedyLoadBalancingStrategy", "k": ["__call__", "__init__"], "r": "r1.5", "t": "tf.contrib.training.GreedyLoadBalancingStrategy"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/training/HParams", "k": ["__contains__", "__init__", "add_hparam", "from_proto", "get", "get_model_structure", "override_from_dict", "parse", "parse_json", "set_from_map", "set_hparam", "set_model_structure", "to_json", "to_proto", "values"], "r": "r1.5", "t": "tf.contrib.training.HParams"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/training/NextQueuedSequenceBatch", "k": ["batch_size", "context", "insertion_index", "key", "length", "next_key", "sequence", "sequence_count", "sequences", "total_length", "__init__", "save_state", "state"], "r": "r1.5", "t": "tf.contrib.training.NextQueuedSequenceBatch"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/training/RandomStrategy", "k": ["__call__", "__init__"], "r": "r1.5", "t": "tf.contrib.training.RandomStrategy"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/training/SequenceQueueingStateSaver", "k": ["barrier", "batch_size", "name", "next_batch", "num_unroll", "prefetch_op", "__init__", "close"], "r": "r1.5", "t": "tf.contrib.training.SequenceQueueingStateSaver"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/training/StopAfterNEvalsHook", "k": ["__init__", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "r1.5", "t": "tf.contrib.training.StopAfterNEvalsHook"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/training/SummaryAtEndHook", "k": ["__init__", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "r1.5", "t": "tf.contrib.training.SummaryAtEndHook"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/training/add_gradients_summaries", "k": [], "r": "r1.5", "t": "tf.contrib.training.add_gradients_summaries"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/training/batch_sequences_with_states", "k": [], "r": "r1.5", "t": "tf.contrib.training.batch_sequences_with_states"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/training/bucket", "k": [], "r": "r1.5", "t": "tf.contrib.training.bucket"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/training/bucket_by_sequence_length", "k": [], "r": "r1.5", "t": "tf.contrib.training.bucket_by_sequence_length"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/training/byte_size_load_fn", "k": [], "r": "r1.5", "t": "tf.contrib.training.byte_size_load_fn"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/training/checkpoints_iterator", "k": [], "r": "r1.5", "t": "tf.contrib.training.checkpoints_iterator"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/training/clip_gradient_norms", "k": [], "r": "r1.5", "t": "tf.contrib.training.clip_gradient_norms"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/training/clip_gradient_norms_fn", "k": [], "r": "r1.5", "t": "tf.contrib.training.clip_gradient_norms_fn"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/training/create_train_op", "k": [], "r": "r1.5", "t": "tf.contrib.training.create_train_op"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/training/evaluate_once", "k": [], "r": "r1.5", "t": "tf.contrib.training.evaluate_once"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/training/evaluate_repeatedly", "k": [], "r": "r1.5", "t": "tf.contrib.training.evaluate_repeatedly"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/training/get_or_create_eval_step", "k": [], "r": "r1.5", "t": "tf.contrib.training.get_or_create_eval_step"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/training/multiply_gradients", "k": [], "r": "r1.5", "t": "tf.contrib.training.multiply_gradients"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/training/parse_values", "k": [], "r": "r1.5", "t": "tf.contrib.training.parse_values"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/training/rejection_sample", "k": [], "r": "r1.5", "t": "tf.contrib.training.rejection_sample"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/training/resample_at_rate", "k": [], "r": "r1.5", "t": "tf.contrib.training.resample_at_rate"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/training/stratified_sample", "k": [], "r": "r1.5", "t": "tf.contrib.training.stratified_sample"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/training/train", "k": [], "r": "r1.5", "t": "tf.contrib.training.train"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/training/wait_for_new_checkpoint", "k": [], "r": "r1.5", "t": "tf.contrib.training.wait_for_new_checkpoint"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/training/weighted_resample", "k": [], "r": "r1.5", "t": "tf.contrib.training.weighted_resample"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/util", "k": [], "r": "r1.5", "t": "tf.contrib.util"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/util/constant_value", "k": [], "r": "r1.5", "t": "tf.contrib.util.constant_value"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/util/loader", "k": [], "r": "r1.5", "t": "tf.contrib.util.loader"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/util/ops_used_by_graph_def", "k": [], "r": "r1.5", "t": "tf.contrib.util.ops_used_by_graph_def"}, {"p": "/versions/r1.5/api_docs/python/tf/contrib/util/stripped_op_list_for_graph", "k": [], "r": "r1.5", "t": "tf.contrib.util.stripped_op_list_for_graph"}, {"p": "/versions/r1.5/api_docs/python/tf/control_dependencies", "k": [], "r": "r1.5", "t": "tf.control_dependencies"}, {"p": "/versions/r1.5/api_docs/python/tf/convert_to_tensor", "k": [], "r": "r1.5", "t": "tf.convert_to_tensor"}, {"p": "/versions/r1.5/api_docs/python/tf/convert_to_tensor_or_indexed_slices", "k": [], "r": "r1.5", "t": "tf.convert_to_tensor_or_indexed_slices"}, {"p": "/versions/r1.5/api_docs/python/tf/convert_to_tensor_or_sparse_tensor", "k": [], "r": "r1.5", "t": "tf.convert_to_tensor_or_sparse_tensor"}, {"p": "/versions/r1.5/api_docs/python/tf/cos", "k": [], "r": "r1.5", "t": "tf.cos"}, {"p": "/versions/r1.5/api_docs/python/tf/cosh", "k": [], "r": "r1.5", "t": "tf.cosh"}, {"p": "/versions/r1.5/api_docs/python/tf/count_nonzero", "k": [], "r": "r1.5", "t": "tf.count_nonzero"}, {"p": "/versions/r1.5/api_docs/python/tf/count_up_to", "k": [], "r": "r1.5", "t": "tf.count_up_to"}, {"p": "/versions/r1.5/api_docs/python/tf/create_partitioned_variables", "k": [], "r": "r1.5", "t": "tf.create_partitioned_variables"}, {"p": "/versions/r1.5/api_docs/python/tf/cross", "k": [], "r": "r1.5", "t": "tf.cross"}, {"p": "/versions/r1.5/api_docs/python/tf/cumprod", "k": [], "r": "r1.5", "t": "tf.cumprod"}, {"p": "/versions/r1.5/api_docs/python/tf/cumsum", "k": [], "r": "r1.5", "t": "tf.cumsum"}, {"p": "/versions/r1.5/api_docs/python/tf/data", "k": [], "r": "r1.5", "t": "tf.data"}, {"p": "/versions/r1.5/api_docs/python/tf/data/Dataset", "k": ["output_classes", "output_shapes", "output_types", "__init__", "apply", "batch", "cache", "concatenate", "filter", "flat_map", "from_generator", "from_sparse_tensor_slices", "from_tensor_slices", "from_tensors", "interleave", "list_files", "make_initializable_iterator", "make_one_shot_iterator", "map", "padded_batch", "prefetch", "range", "repeat", "shard", "shuffle", "skip", "take", "zip"], "r": "r1.5", "t": "tf.data.Dataset"}, {"p": "/versions/r1.5/api_docs/python/tf/data/FixedLengthRecordDataset", "k": ["output_classes", "output_shapes", "output_types", "__init__", "apply", "batch", "cache", "concatenate", "filter", "flat_map", "from_generator", "from_sparse_tensor_slices", "from_tensor_slices", "from_tensors", "interleave", "list_files", "make_initializable_iterator", "make_one_shot_iterator", "map", "padded_batch", "prefetch", "range", "repeat", "shard", "shuffle", "skip", "take", "zip"], "r": "r1.5", "t": "tf.data.FixedLengthRecordDataset"}, {"p": "/versions/r1.5/api_docs/python/tf/data/Iterator", "k": ["initializer", "output_classes", "output_shapes", "output_types", "__init__", "from_string_handle", "from_structure", "get_next", "make_initializer", "string_handle"], "r": "r1.5", "t": "tf.data.Iterator"}, {"p": "/versions/r1.5/api_docs/python/tf/data/TFRecordDataset", "k": ["output_classes", "output_shapes", "output_types", "__init__", "apply", "batch", "cache", "concatenate", "filter", "flat_map", "from_generator", "from_sparse_tensor_slices", "from_tensor_slices", "from_tensors", "interleave", "list_files", "make_initializable_iterator", "make_one_shot_iterator", "map", "padded_batch", "prefetch", "range", "repeat", "shard", "shuffle", "skip", "take", "zip"], "r": "r1.5", "t": "tf.data.TFRecordDataset"}, {"p": "/versions/r1.5/api_docs/python/tf/data/TextLineDataset", "k": ["output_classes", "output_shapes", "output_types", "__init__", "apply", "batch", "cache", "concatenate", "filter", "flat_map", "from_generator", "from_sparse_tensor_slices", "from_tensor_slices", "from_tensors", "interleave", "list_files", "make_initializable_iterator", "make_one_shot_iterator", "map", "padded_batch", "prefetch", "range", "repeat", "shard", "shuffle", "skip", "take", "zip"], "r": "r1.5", "t": "tf.data.TextLineDataset"}, {"p": "/versions/r1.5/api_docs/python/tf/decode_base64", "k": [], "r": "r1.5", "t": "tf.decode_base64"}, {"p": "/versions/r1.5/api_docs/python/tf/decode_csv", "k": [], "r": "r1.5", "t": "tf.decode_csv"}, {"p": "/versions/r1.5/api_docs/python/tf/decode_json_example", "k": [], "r": "r1.5", "t": "tf.decode_json_example"}, {"p": "/versions/r1.5/api_docs/python/tf/decode_raw", "k": [], "r": "r1.5", "t": "tf.decode_raw"}, {"p": "/versions/r1.5/api_docs/python/tf/delete_session_tensor", "k": [], "r": "r1.5", "t": "tf.delete_session_tensor"}, {"p": "/versions/r1.5/api_docs/python/tf/depth_to_space", "k": [], "r": "r1.5", "t": "tf.depth_to_space"}, {"p": "/versions/r1.5/api_docs/python/tf/dequantize", "k": [], "r": "r1.5", "t": "tf.dequantize"}, {"p": "/versions/r1.5/api_docs/python/tf/deserialize_many_sparse", "k": [], "r": "r1.5", "t": "tf.deserialize_many_sparse"}, {"p": "/versions/r1.5/api_docs/python/tf/device", "k": [], "r": "r1.5", "t": "tf.device"}, {"p": "/versions/r1.5/api_docs/python/tf/diag", "k": [], "r": "r1.5", "t": "tf.diag"}, {"p": "/versions/r1.5/api_docs/python/tf/diag_part", "k": [], "r": "r1.5", "t": "tf.diag_part"}, {"p": "/versions/r1.5/api_docs/python/tf/digamma", "k": [], "r": "r1.5", "t": "tf.digamma"}, {"p": "/versions/r1.5/api_docs/python/tf/distributions", "k": ["FULLY_REPARAMETERIZED", "NOT_REPARAMETERIZED"], "r": "r1.5", "t": "tf.distributions"}, {"p": "/versions/r1.5/api_docs/python/tf/distributions/Bernoulli", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "logits", "name", "parameters", "probs", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.5", "t": "tf.distributions.Bernoulli"}, {"p": "/versions/r1.5/api_docs/python/tf/distributions/Beta", "k": ["allow_nan_stats", "batch_shape", "concentration0", "concentration1", "dtype", "event_shape", "name", "parameters", "reparameterization_type", "total_concentration", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.5", "t": "tf.distributions.Beta"}, {"p": "/versions/r1.5/api_docs/python/tf/distributions/Categorical", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "event_size", "logits", "name", "parameters", "probs", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.5", "t": "tf.distributions.Categorical"}, {"p": "/versions/r1.5/api_docs/python/tf/distributions/Dirichlet", "k": ["allow_nan_stats", "batch_shape", "concentration", "dtype", "event_shape", "name", "parameters", "reparameterization_type", "total_concentration", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.5", "t": "tf.distributions.Dirichlet"}, {"p": "/versions/r1.5/api_docs/python/tf/distributions/DirichletMultinomial", "k": ["allow_nan_stats", "batch_shape", "concentration", "dtype", "event_shape", "name", "parameters", "reparameterization_type", "total_concentration", "total_count", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.5", "t": "tf.distributions.DirichletMultinomial"}, {"p": "/versions/r1.5/api_docs/python/tf/distributions/Distribution", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "name", "parameters", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.5", "t": "tf.distributions.Distribution"}, {"p": "/versions/r1.5/api_docs/python/tf/distributions/Exponential", "k": ["allow_nan_stats", "batch_shape", "concentration", "dtype", "event_shape", "name", "parameters", "rate", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.5", "t": "tf.distributions.Exponential"}, {"p": "/versions/r1.5/api_docs/python/tf/distributions/Gamma", "k": ["allow_nan_stats", "batch_shape", "concentration", "dtype", "event_shape", "name", "parameters", "rate", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.5", "t": "tf.distributions.Gamma"}, {"p": "/versions/r1.5/api_docs/python/tf/distributions/Laplace", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.5", "t": "tf.distributions.Laplace"}, {"p": "/versions/r1.5/api_docs/python/tf/distributions/Multinomial", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "logits", "name", "parameters", "probs", "reparameterization_type", "total_count", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.5", "t": "tf.distributions.Multinomial"}, {"p": "/versions/r1.5/api_docs/python/tf/distributions/Normal", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.5", "t": "tf.distributions.Normal"}, {"p": "/versions/r1.5/api_docs/python/tf/distributions/RegisterKL", "k": ["__call__", "__init__"], "r": "r1.5", "t": "tf.distributions.RegisterKL"}, {"p": "/versions/r1.5/api_docs/python/tf/distributions/ReparameterizationType", "k": ["__eq__", "__init__"], "r": "r1.5", "t": "tf.distributions.ReparameterizationType"}, {"p": "/versions/r1.5/api_docs/python/tf/distributions/StudentT", "k": ["allow_nan_stats", "batch_shape", "df", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.5", "t": "tf.distributions.StudentT"}, {"p": "/versions/r1.5/api_docs/python/tf/distributions/Uniform", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "high", "low", "name", "parameters", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "range", "sample", "stddev", "survival_function", "variance"], "r": "r1.5", "t": "tf.distributions.Uniform"}, {"p": "/versions/r1.5/api_docs/python/tf/distributions/bijectors", "k": [], "r": "r1.5", "t": "tf.distributions.bijectors"}, {"p": "/versions/r1.5/api_docs/python/tf/distributions/bijectors/Bijector", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.5", "t": "tf.distributions.bijectors.Bijector"}, {"p": "/versions/r1.5/api_docs/python/tf/distributions/bijectors/Identity", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.5", "t": "tf.distributions.bijectors.Identity"}, {"p": "/versions/r1.5/api_docs/python/tf/distributions/kl_divergence", "k": [], "r": "r1.5", "t": "tf.distributions.kl_divergence"}, {"p": "/versions/r1.5/api_docs/python/tf/div", "k": [], "r": "r1.5", "t": "tf.div"}, {"p": "/versions/r1.5/api_docs/python/tf/divide", "k": [], "r": "r1.5", "t": "tf.divide"}, {"p": "/versions/r1.5/api_docs/python/tf/dynamic_partition", "k": [], "r": "r1.5", "t": "tf.dynamic_partition"}, {"p": "/versions/r1.5/api_docs/python/tf/dynamic_stitch", "k": [], "r": "r1.5", "t": "tf.dynamic_stitch"}, {"p": "/versions/r1.5/api_docs/python/tf/edit_distance", "k": [], "r": "r1.5", "t": "tf.edit_distance"}, {"p": "/versions/r1.5/api_docs/python/tf/einsum", "k": [], "r": "r1.5", "t": "tf.einsum"}, {"p": "/versions/r1.5/api_docs/python/tf/encode_base64", "k": [], "r": "r1.5", "t": "tf.encode_base64"}, {"p": "/versions/r1.5/api_docs/python/tf/equal", "k": [], "r": "r1.5", "t": "tf.equal"}, {"p": "/versions/r1.5/api_docs/python/tf/erf", "k": [], "r": "r1.5", "t": "tf.erf"}, {"p": "/versions/r1.5/api_docs/python/tf/erfc", "k": [], "r": "r1.5", "t": "tf.erfc"}, {"p": "/versions/r1.5/api_docs/python/tf/errors", "k": ["ABORTED", "ALREADY_EXISTS", "CANCELLED", "DATA_LOSS", "DEADLINE_EXCEEDED", "FAILED_PRECONDITION", "INTERNAL", "INVALID_ARGUMENT", "NOT_FOUND", "OK", "OUT_OF_RANGE", "PERMISSION_DENIED", "RESOURCE_EXHAUSTED", "UNAUTHENTICATED", "UNAVAILABLE", "UNIMPLEMENTED", "UNKNOWN"], "r": "r1.5", "t": "tf.errors"}, {"p": "/versions/r1.5/api_docs/python/tf/errors/AbortedError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "r1.5", "t": "tf.errors.AbortedError"}, {"p": "/versions/r1.5/api_docs/python/tf/errors/AlreadyExistsError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "r1.5", "t": "tf.errors.AlreadyExistsError"}, {"p": "/versions/r1.5/api_docs/python/tf/errors/CancelledError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "r1.5", "t": "tf.errors.CancelledError"}, {"p": "/versions/r1.5/api_docs/python/tf/errors/DataLossError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "r1.5", "t": "tf.errors.DataLossError"}, {"p": "/versions/r1.5/api_docs/python/tf/errors/DeadlineExceededError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "r1.5", "t": "tf.errors.DeadlineExceededError"}, {"p": "/versions/r1.5/api_docs/python/tf/errors/FailedPreconditionError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "r1.5", "t": "tf.errors.FailedPreconditionError"}, {"p": "/versions/r1.5/api_docs/python/tf/errors/InternalError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "r1.5", "t": "tf.errors.InternalError"}, {"p": "/versions/r1.5/api_docs/python/tf/errors/InvalidArgumentError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "r1.5", "t": "tf.errors.InvalidArgumentError"}, {"p": "/versions/r1.5/api_docs/python/tf/errors/NotFoundError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "r1.5", "t": "tf.errors.NotFoundError"}, {"p": "/versions/r1.5/api_docs/python/tf/errors/OutOfRangeError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "r1.5", "t": "tf.errors.OutOfRangeError"}, {"p": "/versions/r1.5/api_docs/python/tf/errors/PermissionDeniedError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "r1.5", "t": "tf.errors.PermissionDeniedError"}, {"p": "/versions/r1.5/api_docs/python/tf/errors/ResourceExhaustedError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "r1.5", "t": "tf.errors.ResourceExhaustedError"}, {"p": "/versions/r1.5/api_docs/python/tf/errors/UnauthenticatedError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "r1.5", "t": "tf.errors.UnauthenticatedError"}, {"p": "/versions/r1.5/api_docs/python/tf/errors/UnavailableError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "r1.5", "t": "tf.errors.UnavailableError"}, {"p": "/versions/r1.5/api_docs/python/tf/errors/UnimplementedError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "r1.5", "t": "tf.errors.UnimplementedError"}, {"p": "/versions/r1.5/api_docs/python/tf/errors/UnknownError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "r1.5", "t": "tf.errors.UnknownError"}, {"p": "/versions/r1.5/api_docs/python/tf/errors/error_code_from_exception_type", "k": [], "r": "r1.5", "t": "tf.errors.error_code_from_exception_type"}, {"p": "/versions/r1.5/api_docs/python/tf/errors/exception_type_from_error_code", "k": [], "r": "r1.5", "t": "tf.errors.exception_type_from_error_code"}, {"p": "/versions/r1.5/api_docs/python/tf/errors/raise_exception_on_not_ok_status", "k": ["__enter__", "__exit__"], "r": "r1.5", "t": "tf.errors.raise_exception_on_not_ok_status"}, {"p": "/versions/r1.5/api_docs/python/tf/estimator", "k": [], "r": "r1.5", "t": "tf.estimator"}, {"p": "/versions/r1.5/api_docs/python/tf/estimator/BaselineClassifier", "k": ["config", "model_dir", "model_fn", "params", "__init__", "evaluate", "export_savedmodel", "get_variable_names", "get_variable_value", "latest_checkpoint", "predict", "train"], "r": "r1.5", "t": "tf.estimator.BaselineClassifier"}, {"p": "/versions/r1.5/api_docs/python/tf/estimator/BaselineRegressor", "k": ["config", "model_dir", "model_fn", "params", "__init__", "evaluate", "export_savedmodel", "get_variable_names", "get_variable_value", "latest_checkpoint", "predict", "train"], "r": "r1.5", "t": "tf.estimator.BaselineRegressor"}, {"p": "/versions/r1.5/api_docs/python/tf/estimator/DNNClassifier", "k": ["config", "model_dir", "model_fn", "params", "__init__", "evaluate", "export_savedmodel", "get_variable_names", "get_variable_value", "latest_checkpoint", "predict", "train"], "r": "r1.5", "t": "tf.estimator.DNNClassifier"}, {"p": "/versions/r1.5/api_docs/python/tf/estimator/DNNLinearCombinedClassifier", "k": ["config", "model_dir", "model_fn", "params", "__init__", "evaluate", "export_savedmodel", "get_variable_names", "get_variable_value", "latest_checkpoint", "predict", "train"], "r": "r1.5", "t": "tf.estimator.DNNLinearCombinedClassifier"}, {"p": "/versions/r1.5/api_docs/python/tf/estimator/DNNLinearCombinedRegressor", "k": ["config", "model_dir", "model_fn", "params", "__init__", "evaluate", "export_savedmodel", "get_variable_names", "get_variable_value", "latest_checkpoint", "predict", "train"], "r": "r1.5", "t": "tf.estimator.DNNLinearCombinedRegressor"}, {"p": "/versions/r1.5/api_docs/python/tf/estimator/DNNRegressor", "k": ["config", "model_dir", "model_fn", "params", "__init__", "evaluate", "export_savedmodel", "get_variable_names", "get_variable_value", "latest_checkpoint", "predict", "train"], "r": "r1.5", "t": "tf.estimator.DNNRegressor"}, {"p": "/versions/r1.5/api_docs/python/tf/estimator/Estimator", "k": ["config", "model_dir", "model_fn", "params", "__init__", "evaluate", "export_savedmodel", "get_variable_names", "get_variable_value", "latest_checkpoint", "predict", "train"], "r": "r1.5", "t": "tf.estimator.Estimator"}, {"p": "/versions/r1.5/api_docs/python/tf/estimator/EstimatorSpec", "k": ["eval_metric_ops", "evaluation_hooks", "export_outputs", "loss", "mode", "predictions", "scaffold", "train_op", "training_chief_hooks", "training_hooks", "__new__"], "r": "r1.5", "t": "tf.estimator.EstimatorSpec"}, {"p": "/versions/r1.5/api_docs/python/tf/estimator/EvalSpec", "k": ["exporters", "hooks", "input_fn", "name", "start_delay_secs", "steps", "throttle_secs", "__new__"], "r": "r1.5", "t": "tf.estimator.EvalSpec"}, {"p": "/versions/r1.5/api_docs/python/tf/estimator/Exporter", "k": ["name", "export"], "r": "r1.5", "t": "tf.estimator.Exporter"}, {"p": "/versions/r1.5/api_docs/python/tf/estimator/FinalExporter", "k": ["name", "__init__", "export"], "r": "r1.5", "t": "tf.estimator.FinalExporter"}, {"p": "/versions/r1.5/api_docs/python/tf/estimator/LatestExporter", "k": ["name", "__init__", "export"], "r": "r1.5", "t": "tf.estimator.LatestExporter"}, {"p": "/versions/r1.5/api_docs/python/tf/estimator/LinearClassifier", "k": ["config", "model_dir", "model_fn", "params", "__init__", "evaluate", "export_savedmodel", "get_variable_names", "get_variable_value", "latest_checkpoint", "predict", "train"], "r": "r1.5", "t": "tf.estimator.LinearClassifier"}, {"p": "/versions/r1.5/api_docs/python/tf/estimator/LinearRegressor", "k": ["config", "model_dir", "model_fn", "params", "__init__", "evaluate", "export_savedmodel", "get_variable_names", "get_variable_value", "latest_checkpoint", "predict", "train"], "r": "r1.5", "t": "tf.estimator.LinearRegressor"}, {"p": "/versions/r1.5/api_docs/python/tf/estimator/ModeKeys", "k": ["EVAL", "PREDICT", "TRAIN"], "r": "r1.5", "t": "tf.estimator.ModeKeys"}, {"p": "/versions/r1.5/api_docs/python/tf/estimator/RunConfig", "k": ["cluster_spec", "evaluation_master", "is_chief", "keep_checkpoint_every_n_hours", "keep_checkpoint_max", "log_step_count_steps", "master", "model_dir", "num_ps_replicas", "num_worker_replicas", "save_checkpoints_secs", "save_checkpoints_steps", "save_summary_steps", "service", "session_config", "task_id", "task_type", "tf_random_seed", "__init__", "replace"], "r": "r1.5", "t": "tf.estimator.RunConfig"}, {"p": "/versions/r1.5/api_docs/python/tf/estimator/TrainSpec", "k": ["hooks", "input_fn", "max_steps", "__new__"], "r": "r1.5", "t": "tf.estimator.TrainSpec"}, {"p": "/versions/r1.5/api_docs/python/tf/estimator/classifier_parse_example_spec", "k": [], "r": "r1.5", "t": "tf.estimator.classifier_parse_example_spec"}, {"p": "/versions/r1.5/api_docs/python/tf/estimator/export", "k": [], "r": "r1.5", "t": "tf.estimator.export"}, {"p": "/versions/r1.5/api_docs/python/tf/estimator/export/ClassificationOutput", "k": ["classes", "scores", "__init__", "as_signature_def"], "r": "r1.5", "t": "tf.estimator.export.ClassificationOutput"}, {"p": "/versions/r1.5/api_docs/python/tf/estimator/export/ExportOutput", "k": ["as_signature_def"], "r": "r1.5", "t": "tf.estimator.export.ExportOutput"}, {"p": "/versions/r1.5/api_docs/python/tf/estimator/export/PredictOutput", "k": ["outputs", "__init__", "as_signature_def"], "r": "r1.5", "t": "tf.estimator.export.PredictOutput"}, {"p": "/versions/r1.5/api_docs/python/tf/estimator/export/RegressionOutput", "k": ["value", "__init__", "as_signature_def"], "r": "r1.5", "t": "tf.estimator.export.RegressionOutput"}, {"p": "/versions/r1.5/api_docs/python/tf/estimator/export/ServingInputReceiver", "k": ["features", "receiver_tensors", "receiver_tensors_alternatives", "__new__"], "r": "r1.5", "t": "tf.estimator.export.ServingInputReceiver"}, {"p": "/versions/r1.5/api_docs/python/tf/estimator/export/build_parsing_serving_input_receiver_fn", "k": [], "r": "r1.5", "t": "tf.estimator.export.build_parsing_serving_input_receiver_fn"}, {"p": "/versions/r1.5/api_docs/python/tf/estimator/export/build_raw_serving_input_receiver_fn", "k": [], "r": "r1.5", "t": "tf.estimator.export.build_raw_serving_input_receiver_fn"}, {"p": "/versions/r1.5/api_docs/python/tf/estimator/inputs", "k": [], "r": "r1.5", "t": "tf.estimator.inputs"}, {"p": "/versions/r1.5/api_docs/python/tf/estimator/inputs/numpy_input_fn", "k": [], "r": "r1.5", "t": "tf.estimator.inputs.numpy_input_fn"}, {"p": "/versions/r1.5/api_docs/python/tf/estimator/inputs/pandas_input_fn", "k": [], "r": "r1.5", "t": "tf.estimator.inputs.pandas_input_fn"}, {"p": "/versions/r1.5/api_docs/python/tf/estimator/regressor_parse_example_spec", "k": [], "r": "r1.5", "t": "tf.estimator.regressor_parse_example_spec"}, {"p": "/versions/r1.5/api_docs/python/tf/estimator/train_and_evaluate", "k": [], "r": "r1.5", "t": "tf.estimator.train_and_evaluate"}, {"p": "/versions/r1.5/api_docs/python/tf/exp", "k": [], "r": "r1.5", "t": "tf.exp"}, {"p": "/versions/r1.5/api_docs/python/tf/expand_dims", "k": [], "r": "r1.5", "t": "tf.expand_dims"}, {"p": "/versions/r1.5/api_docs/python/tf/expm1", "k": [], "r": "r1.5", "t": "tf.expm1"}, {"p": "/versions/r1.5/api_docs/python/tf/extract_image_patches", "k": [], "r": "r1.5", "t": "tf.extract_image_patches"}, {"p": "/versions/r1.5/api_docs/python/tf/eye", "k": [], "r": "r1.5", "t": "tf.eye"}, {"p": "/versions/r1.5/api_docs/python/tf/fake_quant_with_min_max_args", "k": [], "r": "r1.5", "t": "tf.fake_quant_with_min_max_args"}, {"p": "/versions/r1.5/api_docs/python/tf/fake_quant_with_min_max_args_gradient", "k": [], "r": "r1.5", "t": "tf.fake_quant_with_min_max_args_gradient"}, {"p": "/versions/r1.5/api_docs/python/tf/fake_quant_with_min_max_vars", "k": [], "r": "r1.5", "t": "tf.fake_quant_with_min_max_vars"}, {"p": "/versions/r1.5/api_docs/python/tf/fake_quant_with_min_max_vars_gradient", "k": [], "r": "r1.5", "t": "tf.fake_quant_with_min_max_vars_gradient"}, {"p": "/versions/r1.5/api_docs/python/tf/fake_quant_with_min_max_vars_per_channel", "k": [], "r": "r1.5", "t": "tf.fake_quant_with_min_max_vars_per_channel"}, {"p": "/versions/r1.5/api_docs/python/tf/fake_quant_with_min_max_vars_per_channel_gradient", "k": [], "r": "r1.5", "t": "tf.fake_quant_with_min_max_vars_per_channel_gradient"}, {"p": "/versions/r1.5/api_docs/python/tf/feature_column", "k": [], "r": "r1.5", "t": "tf.feature_column"}, {"p": "/versions/r1.5/api_docs/python/tf/feature_column/bucketized_column", "k": [], "r": "r1.5", "t": "tf.feature_column.bucketized_column"}, {"p": "/versions/r1.5/api_docs/python/tf/feature_column/categorical_column_with_hash_bucket", "k": [], "r": "r1.5", "t": "tf.feature_column.categorical_column_with_hash_bucket"}, {"p": "/versions/r1.5/api_docs/python/tf/feature_column/categorical_column_with_identity", "k": [], "r": "r1.5", "t": "tf.feature_column.categorical_column_with_identity"}, {"p": "/versions/r1.5/api_docs/python/tf/feature_column/categorical_column_with_vocabulary_file", "k": [], "r": "r1.5", "t": "tf.feature_column.categorical_column_with_vocabulary_file"}, {"p": "/versions/r1.5/api_docs/python/tf/feature_column/categorical_column_with_vocabulary_list", "k": [], "r": "r1.5", "t": "tf.feature_column.categorical_column_with_vocabulary_list"}, {"p": "/versions/r1.5/api_docs/python/tf/feature_column/crossed_column", "k": [], "r": "r1.5", "t": "tf.feature_column.crossed_column"}, {"p": "/versions/r1.5/api_docs/python/tf/feature_column/embedding_column", "k": [], "r": "r1.5", "t": "tf.feature_column.embedding_column"}, {"p": "/versions/r1.5/api_docs/python/tf/feature_column/indicator_column", "k": [], "r": "r1.5", "t": "tf.feature_column.indicator_column"}, {"p": "/versions/r1.5/api_docs/python/tf/feature_column/input_layer", "k": [], "r": "r1.5", "t": "tf.feature_column.input_layer"}, {"p": "/versions/r1.5/api_docs/python/tf/feature_column/linear_model", "k": [], "r": "r1.5", "t": "tf.feature_column.linear_model"}, {"p": "/versions/r1.5/api_docs/python/tf/feature_column/make_parse_example_spec", "k": [], "r": "r1.5", "t": "tf.feature_column.make_parse_example_spec"}, {"p": "/versions/r1.5/api_docs/python/tf/feature_column/numeric_column", "k": [], "r": "r1.5", "t": "tf.feature_column.numeric_column"}, {"p": "/versions/r1.5/api_docs/python/tf/feature_column/weighted_categorical_column", "k": [], "r": "r1.5", "t": "tf.feature_column.weighted_categorical_column"}, {"p": "/versions/r1.5/api_docs/python/tf/fft", "k": [], "r": "r1.5", "t": "tf.fft"}, {"p": "/versions/r1.5/api_docs/python/tf/fft2d", "k": [], "r": "r1.5", "t": "tf.fft2d"}, {"p": "/versions/r1.5/api_docs/python/tf/fft3d", "k": [], "r": "r1.5", "t": "tf.fft3d"}, {"p": "/versions/r1.5/api_docs/python/tf/fill", "k": [], "r": "r1.5", "t": "tf.fill"}, {"p": "/versions/r1.5/api_docs/python/tf/fixed_size_partitioner", "k": [], "r": "r1.5", "t": "tf.fixed_size_partitioner"}, {"p": "/versions/r1.5/api_docs/python/tf/flags", "k": [], "r": "r1.5", "t": "tf.flags"}, {"p": "/versions/r1.5/api_docs/python/tf/floor", "k": [], "r": "r1.5", "t": "tf.floor"}, {"p": "/versions/r1.5/api_docs/python/tf/floor_div", "k": [], "r": "r1.5", "t": "tf.floor_div"}, {"p": "/versions/r1.5/api_docs/python/tf/floordiv", "k": [], "r": "r1.5", "t": "tf.floordiv"}, {"p": "/versions/r1.5/api_docs/python/tf/floormod", "k": [], "r": "r1.5", "t": "tf.floormod"}, {"p": "/versions/r1.5/api_docs/python/tf/foldl", "k": [], "r": "r1.5", "t": "tf.foldl"}, {"p": "/versions/r1.5/api_docs/python/tf/foldr", "k": [], "r": "r1.5", "t": "tf.foldr"}, {"p": "/versions/r1.5/api_docs/python/tf/gather", "k": [], "r": "r1.5", "t": "tf.gather"}, {"p": "/versions/r1.5/api_docs/python/tf/gather_nd", "k": [], "r": "r1.5", "t": "tf.gather_nd"}, {"p": "/versions/r1.5/api_docs/python/tf/get_collection", "k": [], "r": "r1.5", "t": "tf.get_collection"}, {"p": "/versions/r1.5/api_docs/python/tf/get_collection_ref", "k": [], "r": "r1.5", "t": "tf.get_collection_ref"}, {"p": "/versions/r1.5/api_docs/python/tf/get_default_graph", "k": [], "r": "r1.5", "t": "tf.get_default_graph"}, {"p": "/versions/r1.5/api_docs/python/tf/get_default_session", "k": [], "r": "r1.5", "t": "tf.get_default_session"}, {"p": "/versions/r1.5/api_docs/python/tf/get_local_variable", "k": [], "r": "r1.5", "t": "tf.get_local_variable"}, {"p": "/versions/r1.5/api_docs/python/tf/get_seed", "k": [], "r": "r1.5", "t": "tf.get_seed"}, {"p": "/versions/r1.5/api_docs/python/tf/get_session_handle", "k": [], "r": "r1.5", "t": "tf.get_session_handle"}, {"p": "/versions/r1.5/api_docs/python/tf/get_session_tensor", "k": [], "r": "r1.5", "t": "tf.get_session_tensor"}, {"p": "/versions/r1.5/api_docs/python/tf/get_variable", "k": [], "r": "r1.5", "t": "tf.get_variable"}, {"p": "/versions/r1.5/api_docs/python/tf/get_variable_scope", "k": [], "r": "r1.5", "t": "tf.get_variable_scope"}, {"p": "/versions/r1.5/api_docs/python/tf/gfile", "k": [], "r": "r1.5", "t": "tf.gfile"}, {"p": "/versions/r1.5/api_docs/python/tf/gfile/Copy", "k": [], "r": "r1.5", "t": "tf.gfile.Copy"}, {"p": "/versions/r1.5/api_docs/python/tf/gfile/DeleteRecursively", "k": [], "r": "r1.5", "t": "tf.gfile.DeleteRecursively"}, {"p": "/versions/r1.5/api_docs/python/tf/gfile/Exists", "k": [], "r": "r1.5", "t": "tf.gfile.Exists"}, {"p": "/versions/r1.5/api_docs/python/tf/gfile/FastGFile", "k": ["mode", "name", "__enter__", "__exit__", "__init__", "__iter__", "__next__", "close", "flush", "next", "read", "readline", "readlines", "seek", "size", "tell", "write"], "r": "r1.5", "t": "tf.gfile.FastGFile"}, {"p": "/versions/r1.5/api_docs/python/tf/gfile/GFile", "k": ["mode", "name", "__enter__", "__exit__", "__init__", "__iter__", "__next__", "close", "flush", "next", "read", "readline", "readlines", "seek", "size", "tell", "write"], "r": "r1.5", "t": "tf.gfile.GFile"}, {"p": "/versions/r1.5/api_docs/python/tf/gfile/Glob", "k": [], "r": "r1.5", "t": "tf.gfile.Glob"}, {"p": "/versions/r1.5/api_docs/python/tf/gfile/IsDirectory", "k": [], "r": "r1.5", "t": "tf.gfile.IsDirectory"}, {"p": "/versions/r1.5/api_docs/python/tf/gfile/ListDirectory", "k": [], "r": "r1.5", "t": "tf.gfile.ListDirectory"}, {"p": "/versions/r1.5/api_docs/python/tf/gfile/MakeDirs", "k": [], "r": "r1.5", "t": "tf.gfile.MakeDirs"}, {"p": "/versions/r1.5/api_docs/python/tf/gfile/MkDir", "k": [], "r": "r1.5", "t": "tf.gfile.MkDir"}, {"p": "/versions/r1.5/api_docs/python/tf/gfile/Remove", "k": [], "r": "r1.5", "t": "tf.gfile.Remove"}, {"p": "/versions/r1.5/api_docs/python/tf/gfile/Rename", "k": [], "r": "r1.5", "t": "tf.gfile.Rename"}, {"p": "/versions/r1.5/api_docs/python/tf/gfile/Stat", "k": [], "r": "r1.5", "t": "tf.gfile.Stat"}, {"p": "/versions/r1.5/api_docs/python/tf/gfile/Walk", "k": [], "r": "r1.5", "t": "tf.gfile.Walk"}, {"p": "/versions/r1.5/api_docs/python/tf/global_norm", "k": [], "r": "r1.5", "t": "tf.global_norm"}, {"p": "/versions/r1.5/api_docs/python/tf/global_variables", "k": [], "r": "r1.5", "t": "tf.global_variables"}, {"p": "/versions/r1.5/api_docs/python/tf/global_variables_initializer", "k": [], "r": "r1.5", "t": "tf.global_variables_initializer"}, {"p": "/versions/r1.5/api_docs/python/tf/glorot_normal_initializer", "k": [], "r": "r1.5", "t": "tf.glorot_normal_initializer"}, {"p": "/versions/r1.5/api_docs/python/tf/glorot_uniform_initializer", "k": [], "r": "r1.5", "t": "tf.glorot_uniform_initializer"}, {"p": "/versions/r1.5/api_docs/python/tf/gradients", "k": [], "r": "r1.5", "t": "tf.gradients"}, {"p": "/versions/r1.5/api_docs/python/tf/graph_util", "k": [], "r": "r1.5", "t": "tf.graph_util"}, {"p": "/versions/r1.5/api_docs/python/tf/graph_util/convert_variables_to_constants", "k": [], "r": "r1.5", "t": "tf.graph_util.convert_variables_to_constants"}, {"p": "/versions/r1.5/api_docs/python/tf/graph_util/extract_sub_graph", "k": [], "r": "r1.5", "t": "tf.graph_util.extract_sub_graph"}, {"p": "/versions/r1.5/api_docs/python/tf/graph_util/must_run_on_cpu", "k": [], "r": "r1.5", "t": "tf.graph_util.must_run_on_cpu"}, {"p": "/versions/r1.5/api_docs/python/tf/graph_util/remove_training_nodes", "k": [], "r": "r1.5", "t": "tf.graph_util.remove_training_nodes"}, {"p": "/versions/r1.5/api_docs/python/tf/graph_util/tensor_shape_from_node_def_name", "k": [], "r": "r1.5", "t": "tf.graph_util.tensor_shape_from_node_def_name"}, {"p": "/versions/r1.5/api_docs/python/tf/greater", "k": [], "r": "r1.5", "t": "tf.greater"}, {"p": "/versions/r1.5/api_docs/python/tf/greater_equal", "k": [], "r": "r1.5", "t": "tf.greater_equal"}, {"p": "/versions/r1.5/api_docs/python/tf/group", "k": [], "r": "r1.5", "t": "tf.group"}, {"p": "/versions/r1.5/api_docs/python/tf/guarantee_const", "k": [], "r": "r1.5", "t": "tf.guarantee_const"}, {"p": "/versions/r1.5/api_docs/python/tf/hessians", "k": [], "r": "r1.5", "t": "tf.hessians"}, {"p": "/versions/r1.5/api_docs/python/tf/histogram_fixed_width", "k": [], "r": "r1.5", "t": "tf.histogram_fixed_width"}, {"p": "/versions/r1.5/api_docs/python/tf/identity", "k": [], "r": "r1.5", "t": "tf.identity"}, {"p": "/versions/r1.5/api_docs/python/tf/identity_n", "k": [], "r": "r1.5", "t": "tf.identity_n"}, {"p": "/versions/r1.5/api_docs/python/tf/ifft", "k": [], "r": "r1.5", "t": "tf.ifft"}, {"p": "/versions/r1.5/api_docs/python/tf/ifft2d", "k": [], "r": "r1.5", "t": "tf.ifft2d"}, {"p": "/versions/r1.5/api_docs/python/tf/ifft3d", "k": [], "r": "r1.5", "t": "tf.ifft3d"}, {"p": "/versions/r1.5/api_docs/python/tf/igamma", "k": [], "r": "r1.5", "t": "tf.igamma"}, {"p": "/versions/r1.5/api_docs/python/tf/igammac", "k": [], "r": "r1.5", "t": "tf.igammac"}, {"p": "/versions/r1.5/api_docs/python/tf/imag", "k": [], "r": "r1.5", "t": "tf.imag"}, {"p": "/versions/r1.5/api_docs/python/tf/image", "k": [], "r": "r1.5", "t": "tf.image"}, {"p": "/versions/r1.5/api_docs/python/tf/image/ResizeMethod", "k": ["AREA", "BICUBIC", "BILINEAR", "NEAREST_NEIGHBOR"], "r": "r1.5", "t": "tf.image.ResizeMethod"}, {"p": "/versions/r1.5/api_docs/python/tf/image/adjust_brightness", "k": [], "r": "r1.5", "t": "tf.image.adjust_brightness"}, {"p": "/versions/r1.5/api_docs/python/tf/image/adjust_contrast", "k": [], "r": "r1.5", "t": "tf.image.adjust_contrast"}, {"p": "/versions/r1.5/api_docs/python/tf/image/adjust_gamma", "k": [], "r": "r1.5", "t": "tf.image.adjust_gamma"}, {"p": "/versions/r1.5/api_docs/python/tf/image/adjust_hue", "k": [], "r": "r1.5", "t": "tf.image.adjust_hue"}, {"p": "/versions/r1.5/api_docs/python/tf/image/adjust_saturation", "k": [], "r": "r1.5", "t": "tf.image.adjust_saturation"}, {"p": "/versions/r1.5/api_docs/python/tf/image/central_crop", "k": [], "r": "r1.5", "t": "tf.image.central_crop"}, {"p": "/versions/r1.5/api_docs/python/tf/image/convert_image_dtype", "k": [], "r": "r1.5", "t": "tf.image.convert_image_dtype"}, {"p": "/versions/r1.5/api_docs/python/tf/image/crop_and_resize", "k": [], "r": "r1.5", "t": "tf.image.crop_and_resize"}, {"p": "/versions/r1.5/api_docs/python/tf/image/crop_to_bounding_box", "k": [], "r": "r1.5", "t": "tf.image.crop_to_bounding_box"}, {"p": "/versions/r1.5/api_docs/python/tf/image/decode_and_crop_jpeg", "k": [], "r": "r1.5", "t": "tf.image.decode_and_crop_jpeg"}, {"p": "/versions/r1.5/api_docs/python/tf/image/decode_bmp", "k": [], "r": "r1.5", "t": "tf.image.decode_bmp"}, {"p": "/versions/r1.5/api_docs/python/tf/image/decode_gif", "k": [], "r": "r1.5", "t": "tf.image.decode_gif"}, {"p": "/versions/r1.5/api_docs/python/tf/image/decode_image", "k": [], "r": "r1.5", "t": "tf.image.decode_image"}, {"p": "/versions/r1.5/api_docs/python/tf/image/decode_jpeg", "k": [], "r": "r1.5", "t": "tf.image.decode_jpeg"}, {"p": "/versions/r1.5/api_docs/python/tf/image/decode_png", "k": [], "r": "r1.5", "t": "tf.image.decode_png"}, {"p": "/versions/r1.5/api_docs/python/tf/image/draw_bounding_boxes", "k": [], "r": "r1.5", "t": "tf.image.draw_bounding_boxes"}, {"p": "/versions/r1.5/api_docs/python/tf/image/encode_jpeg", "k": [], "r": "r1.5", "t": "tf.image.encode_jpeg"}, {"p": "/versions/r1.5/api_docs/python/tf/image/encode_png", "k": [], "r": "r1.5", "t": "tf.image.encode_png"}, {"p": "/versions/r1.5/api_docs/python/tf/image/extract_glimpse", "k": [], "r": "r1.5", "t": "tf.image.extract_glimpse"}, {"p": "/versions/r1.5/api_docs/python/tf/image/extract_jpeg_shape", "k": [], "r": "r1.5", "t": "tf.image.extract_jpeg_shape"}, {"p": "/versions/r1.5/api_docs/python/tf/image/flip_left_right", "k": [], "r": "r1.5", "t": "tf.image.flip_left_right"}, {"p": "/versions/r1.5/api_docs/python/tf/image/flip_up_down", "k": [], "r": "r1.5", "t": "tf.image.flip_up_down"}, {"p": "/versions/r1.5/api_docs/python/tf/image/grayscale_to_rgb", "k": [], "r": "r1.5", "t": "tf.image.grayscale_to_rgb"}, {"p": "/versions/r1.5/api_docs/python/tf/image/hsv_to_rgb", "k": [], "r": "r1.5", "t": "tf.image.hsv_to_rgb"}, {"p": "/versions/r1.5/api_docs/python/tf/image/non_max_suppression", "k": [], "r": "r1.5", "t": "tf.image.non_max_suppression"}, {"p": "/versions/r1.5/api_docs/python/tf/image/pad_to_bounding_box", "k": [], "r": "r1.5", "t": "tf.image.pad_to_bounding_box"}, {"p": "/versions/r1.5/api_docs/python/tf/image/per_image_standardization", "k": [], "r": "r1.5", "t": "tf.image.per_image_standardization"}, {"p": "/versions/r1.5/api_docs/python/tf/image/random_brightness", "k": [], "r": "r1.5", "t": "tf.image.random_brightness"}, {"p": "/versions/r1.5/api_docs/python/tf/image/random_contrast", "k": [], "r": "r1.5", "t": "tf.image.random_contrast"}, {"p": "/versions/r1.5/api_docs/python/tf/image/random_flip_left_right", "k": [], "r": "r1.5", "t": "tf.image.random_flip_left_right"}, {"p": "/versions/r1.5/api_docs/python/tf/image/random_flip_up_down", "k": [], "r": "r1.5", "t": "tf.image.random_flip_up_down"}, {"p": "/versions/r1.5/api_docs/python/tf/image/random_hue", "k": [], "r": "r1.5", "t": "tf.image.random_hue"}, {"p": "/versions/r1.5/api_docs/python/tf/image/random_saturation", "k": [], "r": "r1.5", "t": "tf.image.random_saturation"}, {"p": "/versions/r1.5/api_docs/python/tf/image/resize_area", "k": [], "r": "r1.5", "t": "tf.image.resize_area"}, {"p": "/versions/r1.5/api_docs/python/tf/image/resize_bicubic", "k": [], "r": "r1.5", "t": "tf.image.resize_bicubic"}, {"p": "/versions/r1.5/api_docs/python/tf/image/resize_bilinear", "k": [], "r": "r1.5", "t": "tf.image.resize_bilinear"}, {"p": "/versions/r1.5/api_docs/python/tf/image/resize_image_with_crop_or_pad", "k": [], "r": "r1.5", "t": "tf.image.resize_image_with_crop_or_pad"}, {"p": "/versions/r1.5/api_docs/python/tf/image/resize_images", "k": [], "r": "r1.5", "t": "tf.image.resize_images"}, {"p": "/versions/r1.5/api_docs/python/tf/image/resize_nearest_neighbor", "k": [], "r": "r1.5", "t": "tf.image.resize_nearest_neighbor"}, {"p": "/versions/r1.5/api_docs/python/tf/image/rgb_to_grayscale", "k": [], "r": "r1.5", "t": "tf.image.rgb_to_grayscale"}, {"p": "/versions/r1.5/api_docs/python/tf/image/rgb_to_hsv", "k": [], "r": "r1.5", "t": "tf.image.rgb_to_hsv"}, {"p": "/versions/r1.5/api_docs/python/tf/image/rot90", "k": [], "r": "r1.5", "t": "tf.image.rot90"}, {"p": "/versions/r1.5/api_docs/python/tf/image/sample_distorted_bounding_box", "k": [], "r": "r1.5", "t": "tf.image.sample_distorted_bounding_box"}, {"p": "/versions/r1.5/api_docs/python/tf/image/total_variation", "k": [], "r": "r1.5", "t": "tf.image.total_variation"}, {"p": "/versions/r1.5/api_docs/python/tf/image/transpose_image", "k": [], "r": "r1.5", "t": "tf.image.transpose_image"}, {"p": "/versions/r1.5/api_docs/python/tf/import_graph_def", "k": [], "r": "r1.5", "t": "tf.import_graph_def"}, {"p": "/versions/r1.5/api_docs/python/tf/initialize_all_tables", "k": [], "r": "r1.5", "t": "tf.initialize_all_tables"}, {"p": "/versions/r1.5/api_docs/python/tf/initialize_all_variables", "k": [], "r": "r1.5", "t": "tf.initialize_all_variables"}, {"p": "/versions/r1.5/api_docs/python/tf/initialize_local_variables", "k": [], "r": "r1.5", "t": "tf.initialize_local_variables"}, {"p": "/versions/r1.5/api_docs/python/tf/initialize_variables", "k": [], "r": "r1.5", "t": "tf.initialize_variables"}, {"p": "/versions/r1.5/api_docs/python/tf/initializers", "k": ["absolute_import", "division", "print_function"], "r": "r1.5", "t": "tf.initializers"}, {"p": "/versions/r1.5/api_docs/python/tf/initializers/identity", "k": ["__call__", "__init__", "from_config", "get_config"], "r": "r1.5", "t": "tf.initializers.identity"}, {"p": "/versions/r1.5/api_docs/python/tf/invert_permutation", "k": [], "r": "r1.5", "t": "tf.invert_permutation"}, {"p": "/versions/r1.5/api_docs/python/tf/is_finite", "k": [], "r": "r1.5", "t": "tf.is_finite"}, {"p": "/versions/r1.5/api_docs/python/tf/is_inf", "k": [], "r": "r1.5", "t": "tf.is_inf"}, {"p": "/versions/r1.5/api_docs/python/tf/is_nan", "k": [], "r": "r1.5", "t": "tf.is_nan"}, {"p": "/versions/r1.5/api_docs/python/tf/is_non_decreasing", "k": [], "r": "r1.5", "t": "tf.is_non_decreasing"}, {"p": "/versions/r1.5/api_docs/python/tf/is_numeric_tensor", "k": [], "r": "r1.5", "t": "tf.is_numeric_tensor"}, {"p": "/versions/r1.5/api_docs/python/tf/is_strictly_increasing", "k": [], "r": "r1.5", "t": "tf.is_strictly_increasing"}, {"p": "/versions/r1.5/api_docs/python/tf/is_variable_initialized", "k": [], "r": "r1.5", "t": "tf.is_variable_initialized"}, {"p": "/versions/r1.5/api_docs/python/tf/keras", "k": ["__version__"], "r": "r1.5", "t": "tf.keras"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/Input", "k": [], "r": "r1.5", "t": "tf.keras.Input"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/Model", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "input_spec", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "state_updates", "stateful", "trainable_variables", "trainable_weights", "updates", "uses_learning_phase", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compile", "compute_mask", "count_params", "evaluate", "evaluate_generator", "fit", "fit_generator", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_layer", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "load_weights", "predict", "predict_generator", "predict_on_batch", "reset_states", "save", "save_weights", "set_weights", "summary", "test_on_batch", "to_json", "to_yaml", "train_on_batch"], "r": "r1.5", "t": "tf.keras.Model"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/Sequential", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "input_spec", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "regularizers", "scope_name", "state_updates", "stateful", "trainable", "trainable_variables", "trainable_weights", "updates", "uses_learning_phase", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compile", "compute_mask", "count_params", "evaluate", "evaluate_generator", "fit", "fit_generator", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_layer", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "load_weights", "pop", "predict", "predict_classes", "predict_generator", "predict_on_batch", "predict_proba", "reset_states", "save", "save_weights", "set_weights", "summary", "test_on_batch", "to_json", "to_yaml", "train_on_batch"], "r": "r1.5", "t": "tf.keras.Sequential"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/activations", "k": [], "r": "r1.5", "t": "tf.keras.activations"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/activations/deserialize", "k": [], "r": "r1.5", "t": "tf.keras.activations.deserialize"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/activations/elu", "k": [], "r": "r1.5", "t": "tf.keras.activations.elu"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/activations/get", "k": [], "r": "r1.5", "t": "tf.keras.activations.get"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/activations/hard_sigmoid", "k": [], "r": "r1.5", "t": "tf.keras.activations.hard_sigmoid"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/activations/linear", "k": [], "r": "r1.5", "t": "tf.keras.activations.linear"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/activations/relu", "k": [], "r": "r1.5", "t": "tf.keras.activations.relu"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/activations/selu", "k": [], "r": "r1.5", "t": "tf.keras.activations.selu"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/activations/serialize", "k": [], "r": "r1.5", "t": "tf.keras.activations.serialize"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/activations/sigmoid", "k": [], "r": "r1.5", "t": "tf.keras.activations.sigmoid"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/activations/softmax", "k": [], "r": "r1.5", "t": "tf.keras.activations.softmax"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/activations/softplus", "k": [], "r": "r1.5", "t": "tf.keras.activations.softplus"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/activations/softsign", "k": [], "r": "r1.5", "t": "tf.keras.activations.softsign"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/activations/tanh", "k": [], "r": "r1.5", "t": "tf.keras.activations.tanh"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/applications", "k": [], "r": "r1.5", "t": "tf.keras.applications"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/applications/InceptionResNetV2", "k": [], "r": "r1.5", "t": "tf.keras.applications.InceptionResNetV2"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/applications/InceptionV3", "k": [], "r": "r1.5", "t": "tf.keras.applications.InceptionV3"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/applications/MobileNet", "k": [], "r": "r1.5", "t": "tf.keras.applications.MobileNet"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/applications/ResNet50", "k": [], "r": "r1.5", "t": "tf.keras.applications.ResNet50"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/applications/VGG16", "k": [], "r": "r1.5", "t": "tf.keras.applications.VGG16"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/applications/VGG19", "k": [], "r": "r1.5", "t": "tf.keras.applications.VGG19"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/applications/Xception", "k": [], "r": "r1.5", "t": "tf.keras.applications.Xception"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/applications/inception_resnet_v2", "k": [], "r": "r1.5", "t": "tf.keras.applications.inception_resnet_v2"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/applications/inception_resnet_v2/decode_predictions", "k": [], "r": "r1.5", "t": "tf.keras.applications.inception_resnet_v2.decode_predictions"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/applications/inception_resnet_v2/preprocess_input", "k": [], "r": "r1.5", "t": "tf.keras.applications.inception_resnet_v2.preprocess_input"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/applications/inception_v3", "k": [], "r": "r1.5", "t": "tf.keras.applications.inception_v3"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/applications/inception_v3/preprocess_input", "k": [], "r": "r1.5", "t": "tf.keras.applications.inception_v3.preprocess_input"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/applications/mobilenet", "k": [], "r": "r1.5", "t": "tf.keras.applications.mobilenet"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/applications/mobilenet/preprocess_input", "k": [], "r": "r1.5", "t": "tf.keras.applications.mobilenet.preprocess_input"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/applications/resnet50", "k": [], "r": "r1.5", "t": "tf.keras.applications.resnet50"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/applications/resnet50/preprocess_input", "k": [], "r": "r1.5", "t": "tf.keras.applications.resnet50.preprocess_input"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/applications/vgg16", "k": [], "r": "r1.5", "t": "tf.keras.applications.vgg16"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/applications/vgg19", "k": [], "r": "r1.5", "t": "tf.keras.applications.vgg19"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/applications/xception", "k": [], "r": "r1.5", "t": "tf.keras.applications.xception"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/applications/xception/preprocess_input", "k": [], "r": "r1.5", "t": "tf.keras.applications.xception.preprocess_input"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend", "k": [], "r": "r1.5", "t": "tf.keras.backend"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/abs", "k": [], "r": "r1.5", "t": "tf.keras.backend.abs"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/all", "k": [], "r": "r1.5", "t": "tf.keras.backend.all"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/any", "k": [], "r": "r1.5", "t": "tf.keras.backend.any"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/arange", "k": [], "r": "r1.5", "t": "tf.keras.backend.arange"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/argmax", "k": [], "r": "r1.5", "t": "tf.keras.backend.argmax"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/argmin", "k": [], "r": "r1.5", "t": "tf.keras.backend.argmin"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/backend", "k": [], "r": "r1.5", "t": "tf.keras.backend.backend"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/batch_dot", "k": [], "r": "r1.5", "t": "tf.keras.backend.batch_dot"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/batch_flatten", "k": [], "r": "r1.5", "t": "tf.keras.backend.batch_flatten"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/batch_get_value", "k": [], "r": "r1.5", "t": "tf.keras.backend.batch_get_value"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/batch_normalization", "k": [], "r": "r1.5", "t": "tf.keras.backend.batch_normalization"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/batch_set_value", "k": [], "r": "r1.5", "t": "tf.keras.backend.batch_set_value"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/bias_add", "k": [], "r": "r1.5", "t": "tf.keras.backend.bias_add"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/binary_crossentropy", "k": [], "r": "r1.5", "t": "tf.keras.backend.binary_crossentropy"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/cast", "k": [], "r": "r1.5", "t": "tf.keras.backend.cast"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/cast_to_floatx", "k": [], "r": "r1.5", "t": "tf.keras.backend.cast_to_floatx"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/categorical_crossentropy", "k": [], "r": "r1.5", "t": "tf.keras.backend.categorical_crossentropy"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/clear_session", "k": [], "r": "r1.5", "t": "tf.keras.backend.clear_session"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/clip", "k": [], "r": "r1.5", "t": "tf.keras.backend.clip"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/concatenate", "k": [], "r": "r1.5", "t": "tf.keras.backend.concatenate"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/constant", "k": [], "r": "r1.5", "t": "tf.keras.backend.constant"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/conv1d", "k": [], "r": "r1.5", "t": "tf.keras.backend.conv1d"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/conv2d", "k": [], "r": "r1.5", "t": "tf.keras.backend.conv2d"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/conv2d_transpose", "k": [], "r": "r1.5", "t": "tf.keras.backend.conv2d_transpose"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/conv3d", "k": [], "r": "r1.5", "t": "tf.keras.backend.conv3d"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/cos", "k": [], "r": "r1.5", "t": "tf.keras.backend.cos"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/count_params", "k": [], "r": "r1.5", "t": "tf.keras.backend.count_params"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/ctc_batch_cost", "k": [], "r": "r1.5", "t": "tf.keras.backend.ctc_batch_cost"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/ctc_decode", "k": [], "r": "r1.5", "t": "tf.keras.backend.ctc_decode"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/ctc_label_dense_to_sparse", "k": [], "r": "r1.5", "t": "tf.keras.backend.ctc_label_dense_to_sparse"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/dot", "k": [], "r": "r1.5", "t": "tf.keras.backend.dot"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/dropout", "k": [], "r": "r1.5", "t": "tf.keras.backend.dropout"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/dtype", "k": [], "r": "r1.5", "t": "tf.keras.backend.dtype"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/elu", "k": [], "r": "r1.5", "t": "tf.keras.backend.elu"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/epsilon", "k": [], "r": "r1.5", "t": "tf.keras.backend.epsilon"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/equal", "k": [], "r": "r1.5", "t": "tf.keras.backend.equal"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/eval", "k": [], "r": "r1.5", "t": "tf.keras.backend.eval"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/exp", "k": [], "r": "r1.5", "t": "tf.keras.backend.exp"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/expand_dims", "k": [], "r": "r1.5", "t": "tf.keras.backend.expand_dims"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/eye", "k": [], "r": "r1.5", "t": "tf.keras.backend.eye"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/flatten", "k": [], "r": "r1.5", "t": "tf.keras.backend.flatten"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/floatx", "k": [], "r": "r1.5", "t": "tf.keras.backend.floatx"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/foldl", "k": [], "r": "r1.5", "t": "tf.keras.backend.foldl"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/foldr", "k": [], "r": "r1.5", "t": "tf.keras.backend.foldr"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/function", "k": [], "r": "r1.5", "t": "tf.keras.backend.function"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/gather", "k": [], "r": "r1.5", "t": "tf.keras.backend.gather"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/get_session", "k": [], "r": "r1.5", "t": "tf.keras.backend.get_session"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/get_uid", "k": [], "r": "r1.5", "t": "tf.keras.backend.get_uid"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/get_value", "k": [], "r": "r1.5", "t": "tf.keras.backend.get_value"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/gradients", "k": [], "r": "r1.5", "t": "tf.keras.backend.gradients"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/greater", "k": [], "r": "r1.5", "t": "tf.keras.backend.greater"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/greater_equal", "k": [], "r": "r1.5", "t": "tf.keras.backend.greater_equal"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/hard_sigmoid", "k": [], "r": "r1.5", "t": "tf.keras.backend.hard_sigmoid"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/image_data_format", "k": [], "r": "r1.5", "t": "tf.keras.backend.image_data_format"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/in_test_phase", "k": [], "r": "r1.5", "t": "tf.keras.backend.in_test_phase"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/in_top_k", "k": [], "r": "r1.5", "t": "tf.keras.backend.in_top_k"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/in_train_phase", "k": [], "r": "r1.5", "t": "tf.keras.backend.in_train_phase"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/int_shape", "k": [], "r": "r1.5", "t": "tf.keras.backend.int_shape"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/is_sparse", "k": [], "r": "r1.5", "t": "tf.keras.backend.is_sparse"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/l2_normalize", "k": [], "r": "r1.5", "t": "tf.keras.backend.l2_normalize"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/learning_phase", "k": [], "r": "r1.5", "t": "tf.keras.backend.learning_phase"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/less", "k": [], "r": "r1.5", "t": "tf.keras.backend.less"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/less_equal", "k": [], "r": "r1.5", "t": "tf.keras.backend.less_equal"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/log", "k": [], "r": "r1.5", "t": "tf.keras.backend.log"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/manual_variable_initialization", "k": [], "r": "r1.5", "t": "tf.keras.backend.manual_variable_initialization"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/map_fn", "k": [], "r": "r1.5", "t": "tf.keras.backend.map_fn"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/max", "k": [], "r": "r1.5", "t": "tf.keras.backend.max"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/maximum", "k": [], "r": "r1.5", "t": "tf.keras.backend.maximum"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/mean", "k": [], "r": "r1.5", "t": "tf.keras.backend.mean"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/min", "k": [], "r": "r1.5", "t": "tf.keras.backend.min"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/minimum", "k": [], "r": "r1.5", "t": "tf.keras.backend.minimum"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/moving_average_update", "k": [], "r": "r1.5", "t": "tf.keras.backend.moving_average_update"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/ndim", "k": [], "r": "r1.5", "t": "tf.keras.backend.ndim"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/normalize_batch_in_training", "k": [], "r": "r1.5", "t": "tf.keras.backend.normalize_batch_in_training"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/not_equal", "k": [], "r": "r1.5", "t": "tf.keras.backend.not_equal"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/one_hot", "k": [], "r": "r1.5", "t": "tf.keras.backend.one_hot"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/ones", "k": [], "r": "r1.5", "t": "tf.keras.backend.ones"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/ones_like", "k": [], "r": "r1.5", "t": "tf.keras.backend.ones_like"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/permute_dimensions", "k": [], "r": "r1.5", "t": "tf.keras.backend.permute_dimensions"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/placeholder", "k": [], "r": "r1.5", "t": "tf.keras.backend.placeholder"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/pool2d", "k": [], "r": "r1.5", "t": "tf.keras.backend.pool2d"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/pool3d", "k": [], "r": "r1.5", "t": "tf.keras.backend.pool3d"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/pow", "k": [], "r": "r1.5", "t": "tf.keras.backend.pow"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/print_tensor", "k": [], "r": "r1.5", "t": "tf.keras.backend.print_tensor"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/prod", "k": [], "r": "r1.5", "t": "tf.keras.backend.prod"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/random_binomial", "k": [], "r": "r1.5", "t": "tf.keras.backend.random_binomial"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/random_normal", "k": [], "r": "r1.5", "t": "tf.keras.backend.random_normal"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/random_normal_variable", "k": [], "r": "r1.5", "t": "tf.keras.backend.random_normal_variable"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/random_uniform", "k": [], "r": "r1.5", "t": "tf.keras.backend.random_uniform"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/random_uniform_variable", "k": [], "r": "r1.5", "t": "tf.keras.backend.random_uniform_variable"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/relu", "k": [], "r": "r1.5", "t": "tf.keras.backend.relu"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/repeat", "k": [], "r": "r1.5", "t": "tf.keras.backend.repeat"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/repeat_elements", "k": [], "r": "r1.5", "t": "tf.keras.backend.repeat_elements"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/reset_uids", "k": [], "r": "r1.5", "t": "tf.keras.backend.reset_uids"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/reshape", "k": [], "r": "r1.5", "t": "tf.keras.backend.reshape"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/resize_images", "k": [], "r": "r1.5", "t": "tf.keras.backend.resize_images"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/resize_volumes", "k": [], "r": "r1.5", "t": "tf.keras.backend.resize_volumes"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/reverse", "k": [], "r": "r1.5", "t": "tf.keras.backend.reverse"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/rnn", "k": [], "r": "r1.5", "t": "tf.keras.backend.rnn"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/round", "k": [], "r": "r1.5", "t": "tf.keras.backend.round"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/separable_conv2d", "k": [], "r": "r1.5", "t": "tf.keras.backend.separable_conv2d"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/set_epsilon", "k": [], "r": "r1.5", "t": "tf.keras.backend.set_epsilon"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/set_floatx", "k": [], "r": "r1.5", "t": "tf.keras.backend.set_floatx"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/set_image_data_format", "k": [], "r": "r1.5", "t": "tf.keras.backend.set_image_data_format"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/set_learning_phase", "k": [], "r": "r1.5", "t": "tf.keras.backend.set_learning_phase"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/set_session", "k": [], "r": "r1.5", "t": "tf.keras.backend.set_session"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/set_value", "k": [], "r": "r1.5", "t": "tf.keras.backend.set_value"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/shape", "k": [], "r": "r1.5", "t": "tf.keras.backend.shape"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/sigmoid", "k": [], "r": "r1.5", "t": "tf.keras.backend.sigmoid"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/sign", "k": [], "r": "r1.5", "t": "tf.keras.backend.sign"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/sin", "k": [], "r": "r1.5", "t": "tf.keras.backend.sin"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/softmax", "k": [], "r": "r1.5", "t": "tf.keras.backend.softmax"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/softplus", "k": [], "r": "r1.5", "t": "tf.keras.backend.softplus"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/softsign", "k": [], "r": "r1.5", "t": "tf.keras.backend.softsign"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/sparse_categorical_crossentropy", "k": [], "r": "r1.5", "t": "tf.keras.backend.sparse_categorical_crossentropy"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/spatial_2d_padding", "k": [], "r": "r1.5", "t": "tf.keras.backend.spatial_2d_padding"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/spatial_3d_padding", "k": [], "r": "r1.5", "t": "tf.keras.backend.spatial_3d_padding"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/sqrt", "k": [], "r": "r1.5", "t": "tf.keras.backend.sqrt"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/square", "k": [], "r": "r1.5", "t": "tf.keras.backend.square"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/squeeze", "k": [], "r": "r1.5", "t": "tf.keras.backend.squeeze"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/stack", "k": [], "r": "r1.5", "t": "tf.keras.backend.stack"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/std", "k": [], "r": "r1.5", "t": "tf.keras.backend.std"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/stop_gradient", "k": [], "r": "r1.5", "t": "tf.keras.backend.stop_gradient"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/sum", "k": [], "r": "r1.5", "t": "tf.keras.backend.sum"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/switch", "k": [], "r": "r1.5", "t": "tf.keras.backend.switch"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/tanh", "k": [], "r": "r1.5", "t": "tf.keras.backend.tanh"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/temporal_padding", "k": [], "r": "r1.5", "t": "tf.keras.backend.temporal_padding"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/to_dense", "k": [], "r": "r1.5", "t": "tf.keras.backend.to_dense"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/transpose", "k": [], "r": "r1.5", "t": "tf.keras.backend.transpose"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/truncated_normal", "k": [], "r": "r1.5", "t": "tf.keras.backend.truncated_normal"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/update", "k": [], "r": "r1.5", "t": "tf.keras.backend.update"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/update_add", "k": [], "r": "r1.5", "t": "tf.keras.backend.update_add"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/update_sub", "k": [], "r": "r1.5", "t": "tf.keras.backend.update_sub"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/var", "k": [], "r": "r1.5", "t": "tf.keras.backend.var"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/variable", "k": [], "r": "r1.5", "t": "tf.keras.backend.variable"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/zeros", "k": [], "r": "r1.5", "t": "tf.keras.backend.zeros"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/backend/zeros_like", "k": [], "r": "r1.5", "t": "tf.keras.backend.zeros_like"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/callbacks", "k": [], "r": "r1.5", "t": "tf.keras.callbacks"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/callbacks/BaseLogger", "k": ["__init__", "on_batch_begin", "on_batch_end", "on_epoch_begin", "on_epoch_end", "on_train_begin", "on_train_end", "set_model", "set_params"], "r": "r1.5", "t": "tf.keras.callbacks.BaseLogger"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/callbacks/CSVLogger", "k": ["__init__", "on_batch_begin", "on_batch_end", "on_epoch_begin", "on_epoch_end", "on_train_begin", "on_train_end", "set_model", "set_params"], "r": "r1.5", "t": "tf.keras.callbacks.CSVLogger"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/callbacks/Callback", "k": ["__init__", "on_batch_begin", "on_batch_end", "on_epoch_begin", "on_epoch_end", "on_train_begin", "on_train_end", "set_model", "set_params"], "r": "r1.5", "t": "tf.keras.callbacks.Callback"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/callbacks/EarlyStopping", "k": ["__init__", "on_batch_begin", "on_batch_end", "on_epoch_begin", "on_epoch_end", "on_train_begin", "on_train_end", "set_model", "set_params"], "r": "r1.5", "t": "tf.keras.callbacks.EarlyStopping"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/callbacks/History", "k": ["__init__", "on_batch_begin", "on_batch_end", "on_epoch_begin", "on_epoch_end", "on_train_begin", "on_train_end", "set_model", "set_params"], "r": "r1.5", "t": "tf.keras.callbacks.History"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/callbacks/LambdaCallback", "k": ["__init__", "on_batch_begin", "on_batch_end", "on_epoch_begin", "on_epoch_end", "on_train_begin", "on_train_end", "set_model", "set_params"], "r": "r1.5", "t": "tf.keras.callbacks.LambdaCallback"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/callbacks/LearningRateScheduler", "k": ["__init__", "on_batch_begin", "on_batch_end", "on_epoch_begin", "on_epoch_end", "on_train_begin", "on_train_end", "set_model", "set_params"], "r": "r1.5", "t": "tf.keras.callbacks.LearningRateScheduler"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/callbacks/ModelCheckpoint", "k": ["__init__", "on_batch_begin", "on_batch_end", "on_epoch_begin", "on_epoch_end", "on_train_begin", "on_train_end", "set_model", "set_params"], "r": "r1.5", "t": "tf.keras.callbacks.ModelCheckpoint"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/callbacks/ProgbarLogger", "k": ["__init__", "on_batch_begin", "on_batch_end", "on_epoch_begin", "on_epoch_end", "on_train_begin", "on_train_end", "set_model", "set_params"], "r": "r1.5", "t": "tf.keras.callbacks.ProgbarLogger"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/callbacks/ReduceLROnPlateau", "k": ["__init__", "in_cooldown", "on_batch_begin", "on_batch_end", "on_epoch_begin", "on_epoch_end", "on_train_begin", "on_train_end", "set_model", "set_params"], "r": "r1.5", "t": "tf.keras.callbacks.ReduceLROnPlateau"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/callbacks/RemoteMonitor", "k": ["__init__", "on_batch_begin", "on_batch_end", "on_epoch_begin", "on_epoch_end", "on_train_begin", "on_train_end", "set_model", "set_params"], "r": "r1.5", "t": "tf.keras.callbacks.RemoteMonitor"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/callbacks/TensorBoard", "k": ["__init__", "on_batch_begin", "on_batch_end", "on_epoch_begin", "on_epoch_end", "on_train_begin", "on_train_end", "set_model", "set_params"], "r": "r1.5", "t": "tf.keras.callbacks.TensorBoard"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/callbacks/TerminateOnNaN", "k": ["__init__", "on_batch_begin", "on_batch_end", "on_epoch_begin", "on_epoch_end", "on_train_begin", "on_train_end", "set_model", "set_params"], "r": "r1.5", "t": "tf.keras.callbacks.TerminateOnNaN"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/constraints", "k": [], "r": "r1.5", "t": "tf.keras.constraints"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/constraints/Constraint", "k": ["__call__", "get_config"], "r": "r1.5", "t": "tf.keras.constraints.Constraint"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/constraints/MaxNorm", "k": ["__call__", "__init__", "get_config"], "r": "r1.5", "t": "tf.keras.constraints.MaxNorm"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/constraints/MinMaxNorm", "k": ["__call__", "__init__", "get_config"], "r": "r1.5", "t": "tf.keras.constraints.MinMaxNorm"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/constraints/NonNeg", "k": ["__call__", "get_config"], "r": "r1.5", "t": "tf.keras.constraints.NonNeg"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/constraints/UnitNorm", "k": ["__call__", "__init__", "get_config"], "r": "r1.5", "t": "tf.keras.constraints.UnitNorm"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/constraints/deserialize", "k": [], "r": "r1.5", "t": "tf.keras.constraints.deserialize"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/constraints/get", "k": [], "r": "r1.5", "t": "tf.keras.constraints.get"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/constraints/serialize", "k": [], "r": "r1.5", "t": "tf.keras.constraints.serialize"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/datasets", "k": [], "r": "r1.5", "t": "tf.keras.datasets"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/datasets/boston_housing", "k": [], "r": "r1.5", "t": "tf.keras.datasets.boston_housing"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/datasets/boston_housing/load_data", "k": [], "r": "r1.5", "t": "tf.keras.datasets.boston_housing.load_data"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/datasets/cifar10", "k": [], "r": "r1.5", "t": "tf.keras.datasets.cifar10"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/datasets/cifar10/load_data", "k": [], "r": "r1.5", "t": "tf.keras.datasets.cifar10.load_data"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/datasets/cifar100", "k": [], "r": "r1.5", "t": "tf.keras.datasets.cifar100"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/datasets/cifar100/load_data", "k": [], "r": "r1.5", "t": "tf.keras.datasets.cifar100.load_data"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/datasets/fashion_mnist", "k": [], "r": "r1.5", "t": "tf.keras.datasets.fashion_mnist"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/datasets/imdb", "k": [], "r": "r1.5", "t": "tf.keras.datasets.imdb"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/datasets/imdb/get_word_index", "k": [], "r": "r1.5", "t": "tf.keras.datasets.imdb.get_word_index"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/datasets/imdb/load_data", "k": [], "r": "r1.5", "t": "tf.keras.datasets.imdb.load_data"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/datasets/mnist", "k": [], "r": "r1.5", "t": "tf.keras.datasets.mnist"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/datasets/mnist/load_data", "k": [], "r": "r1.5", "t": "tf.keras.datasets.mnist.load_data"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/datasets/reuters", "k": [], "r": "r1.5", "t": "tf.keras.datasets.reuters"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/datasets/reuters/get_word_index", "k": [], "r": "r1.5", "t": "tf.keras.datasets.reuters.get_word_index"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/datasets/reuters/load_data", "k": [], "r": "r1.5", "t": "tf.keras.datasets.reuters.load_data"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/estimator", "k": [], "r": "r1.5", "t": "tf.keras.estimator"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/estimator/model_to_estimator", "k": [], "r": "r1.5", "t": "tf.keras.estimator.model_to_estimator"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/initializers", "k": [], "r": "r1.5", "t": "tf.keras.initializers"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/initializers/Initializer", "k": ["__call__", "from_config", "get_config"], "r": "r1.5", "t": "tf.keras.initializers.Initializer"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/initializers/deserialize", "k": [], "r": "r1.5", "t": "tf.keras.initializers.deserialize"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/initializers/get", "k": [], "r": "r1.5", "t": "tf.keras.initializers.get"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/initializers/glorot_normal", "k": [], "r": "r1.5", "t": "tf.keras.initializers.glorot_normal"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/initializers/glorot_uniform", "k": [], "r": "r1.5", "t": "tf.keras.initializers.glorot_uniform"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/initializers/he_normal", "k": [], "r": "r1.5", "t": "tf.keras.initializers.he_normal"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/initializers/he_uniform", "k": [], "r": "r1.5", "t": "tf.keras.initializers.he_uniform"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/initializers/lecun_normal", "k": [], "r": "r1.5", "t": "tf.keras.initializers.lecun_normal"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/initializers/lecun_uniform", "k": [], "r": "r1.5", "t": "tf.keras.initializers.lecun_uniform"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/initializers/serialize", "k": [], "r": "r1.5", "t": "tf.keras.initializers.serialize"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/layers", "k": [], "r": "r1.5", "t": "tf.keras.layers"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/layers/Activation", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.5", "t": "tf.keras.layers.Activation"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/layers/ActivityRegularization", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.5", "t": "tf.keras.layers.ActivityRegularization"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/layers/Add", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.5", "t": "tf.keras.layers.Add"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/layers/AlphaDropout", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.5", "t": "tf.keras.layers.AlphaDropout"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/layers/Average", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.5", "t": "tf.keras.layers.Average"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/layers/AveragePooling1D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.5", "t": "tf.keras.layers.AveragePooling1D"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/layers/AveragePooling2D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.5", "t": "tf.keras.layers.AveragePooling2D"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/layers/AveragePooling3D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.5", "t": "tf.keras.layers.AveragePooling3D"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/layers/BatchNormalization", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.5", "t": "tf.keras.layers.BatchNormalization"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/layers/Bidirectional", "k": ["activity_regularizer", "constraints", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "reset_states", "set_weights"], "r": "r1.5", "t": "tf.keras.layers.Bidirectional"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/layers/Concatenate", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.5", "t": "tf.keras.layers.Concatenate"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/layers/Conv1D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.5", "t": "tf.keras.layers.Conv1D"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/layers/Conv2D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.5", "t": "tf.keras.layers.Conv2D"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/layers/Conv2DTranspose", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.5", "t": "tf.keras.layers.Conv2DTranspose"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/layers/Conv3D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.5", "t": "tf.keras.layers.Conv3D"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/layers/Conv3DTranspose", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.5", "t": "tf.keras.layers.Conv3DTranspose"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/layers/ConvLSTM2D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_constants", "get_initial_state", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "input_conv", "preprocess_input", "recurrent_conv", "reset_states", "set_weights", "step"], "r": "r1.5", "t": "tf.keras.layers.ConvLSTM2D"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/layers/Cropping1D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.5", "t": "tf.keras.layers.Cropping1D"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/layers/Cropping2D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.5", "t": "tf.keras.layers.Cropping2D"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/layers/Cropping3D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.5", "t": "tf.keras.layers.Cropping3D"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/layers/Dense", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.5", "t": "tf.keras.layers.Dense"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/layers/Dot", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.5", "t": "tf.keras.layers.Dot"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/layers/Dropout", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.5", "t": "tf.keras.layers.Dropout"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/layers/ELU", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.5", "t": "tf.keras.layers.ELU"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/layers/Embedding", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.5", "t": "tf.keras.layers.Embedding"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/layers/Flatten", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.5", "t": "tf.keras.layers.Flatten"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/layers/GRU", "k": ["activation", "activity_regularizer", "bias_constraint", "bias_initializer", "bias_regularizer", "dropout", "dtype", "graph", "implementation", "input", "input_mask", "input_shape", "kernel_constraint", "kernel_initializer", "kernel_regularizer", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "recurrent_activation", "recurrent_constraint", "recurrent_dropout", "recurrent_initializer", "recurrent_regularizer", "scope_name", "states", "trainable_variables", "trainable_weights", "units", "updates", "use_bias", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_initial_state", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "reset_states", "set_weights"], "r": "r1.5", "t": "tf.keras.layers.GRU"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/layers/GRUCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.5", "t": "tf.keras.layers.GRUCell"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/layers/GaussianDropout", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.5", "t": "tf.keras.layers.GaussianDropout"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/layers/GaussianNoise", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.5", "t": "tf.keras.layers.GaussianNoise"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/layers/GlobalAveragePooling1D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.5", "t": "tf.keras.layers.GlobalAveragePooling1D"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/layers/GlobalAveragePooling2D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.5", "t": "tf.keras.layers.GlobalAveragePooling2D"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/layers/GlobalAveragePooling3D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.5", "t": "tf.keras.layers.GlobalAveragePooling3D"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/layers/GlobalMaxPool1D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.5", "t": "tf.keras.layers.GlobalMaxPool1D"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/layers/GlobalMaxPool2D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.5", "t": "tf.keras.layers.GlobalMaxPool2D"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/layers/GlobalMaxPool3D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.5", "t": "tf.keras.layers.GlobalMaxPool3D"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/layers/InputLayer", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.5", "t": "tf.keras.layers.InputLayer"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/layers/LSTM", "k": ["activation", "activity_regularizer", "bias_constraint", "bias_initializer", "bias_regularizer", "dropout", "dtype", "graph", "implementation", "input", "input_mask", "input_shape", "kernel_constraint", "kernel_initializer", "kernel_regularizer", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "recurrent_activation", "recurrent_constraint", "recurrent_dropout", "recurrent_initializer", "recurrent_regularizer", "scope_name", "states", "trainable_variables", "trainable_weights", "unit_forget_bias", "units", "updates", "use_bias", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_initial_state", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "reset_states", "set_weights"], "r": "r1.5", "t": "tf.keras.layers.LSTM"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/layers/LSTMCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.5", "t": "tf.keras.layers.LSTMCell"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/layers/Lambda", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.5", "t": "tf.keras.layers.Lambda"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/layers/Layer", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.5", "t": "tf.keras.layers.Layer"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/layers/LeakyReLU", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.5", "t": "tf.keras.layers.LeakyReLU"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/layers/LocallyConnected1D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.5", "t": "tf.keras.layers.LocallyConnected1D"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/layers/LocallyConnected2D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.5", "t": "tf.keras.layers.LocallyConnected2D"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/layers/Masking", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.5", "t": "tf.keras.layers.Masking"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/layers/MaxPool1D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.5", "t": "tf.keras.layers.MaxPool1D"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/layers/MaxPool2D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.5", "t": "tf.keras.layers.MaxPool2D"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/layers/MaxPool3D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.5", "t": "tf.keras.layers.MaxPool3D"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/layers/Maximum", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.5", "t": "tf.keras.layers.Maximum"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/layers/Multiply", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.5", "t": "tf.keras.layers.Multiply"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/layers/PReLU", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.5", "t": "tf.keras.layers.PReLU"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/layers/Permute", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.5", "t": "tf.keras.layers.Permute"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/layers/RNN", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "states", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_initial_state", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "reset_states", "set_weights"], "r": "r1.5", "t": "tf.keras.layers.RNN"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/layers/RepeatVector", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.5", "t": "tf.keras.layers.RepeatVector"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/layers/Reshape", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.5", "t": "tf.keras.layers.Reshape"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/layers/SeparableConv2D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.5", "t": "tf.keras.layers.SeparableConv2D"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/layers/SimpleRNN", "k": ["activation", "activity_regularizer", "bias_constraint", "bias_initializer", "bias_regularizer", "dropout", "dtype", "graph", "input", "input_mask", "input_shape", "kernel_constraint", "kernel_initializer", "kernel_regularizer", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "recurrent_constraint", "recurrent_dropout", "recurrent_initializer", "recurrent_regularizer", "scope_name", "states", "trainable_variables", "trainable_weights", "units", "updates", "use_bias", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_initial_state", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "reset_states", "set_weights"], "r": "r1.5", "t": "tf.keras.layers.SimpleRNN"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/layers/SimpleRNNCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.5", "t": "tf.keras.layers.SimpleRNNCell"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/layers/SpatialDropout1D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.5", "t": "tf.keras.layers.SpatialDropout1D"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/layers/SpatialDropout2D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.5", "t": "tf.keras.layers.SpatialDropout2D"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/layers/SpatialDropout3D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.5", "t": "tf.keras.layers.SpatialDropout3D"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/layers/StackedRNNCells", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.5", "t": "tf.keras.layers.StackedRNNCells"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/layers/ThresholdedReLU", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.5", "t": "tf.keras.layers.ThresholdedReLU"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/layers/TimeDistributed", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.5", "t": "tf.keras.layers.TimeDistributed"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/layers/UpSampling1D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.5", "t": "tf.keras.layers.UpSampling1D"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/layers/UpSampling2D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.5", "t": "tf.keras.layers.UpSampling2D"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/layers/UpSampling3D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.5", "t": "tf.keras.layers.UpSampling3D"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/layers/Wrapper", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.5", "t": "tf.keras.layers.Wrapper"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/layers/ZeroPadding1D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.5", "t": "tf.keras.layers.ZeroPadding1D"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/layers/ZeroPadding2D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.5", "t": "tf.keras.layers.ZeroPadding2D"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/layers/ZeroPadding3D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.5", "t": "tf.keras.layers.ZeroPadding3D"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/layers/add", "k": [], "r": "r1.5", "t": "tf.keras.layers.add"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/layers/average", "k": [], "r": "r1.5", "t": "tf.keras.layers.average"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/layers/concatenate", "k": [], "r": "r1.5", "t": "tf.keras.layers.concatenate"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/layers/dot", "k": [], "r": "r1.5", "t": "tf.keras.layers.dot"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/layers/maximum", "k": [], "r": "r1.5", "t": "tf.keras.layers.maximum"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/layers/multiply", "k": [], "r": "r1.5", "t": "tf.keras.layers.multiply"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/losses", "k": [], "r": "r1.5", "t": "tf.keras.losses"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/losses/binary_crossentropy", "k": [], "r": "r1.5", "t": "tf.keras.losses.binary_crossentropy"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/losses/categorical_crossentropy", "k": [], "r": "r1.5", "t": "tf.keras.losses.categorical_crossentropy"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/losses/categorical_hinge", "k": [], "r": "r1.5", "t": "tf.keras.losses.categorical_hinge"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/losses/cosine_proximity", "k": [], "r": "r1.5", "t": "tf.keras.losses.cosine_proximity"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/losses/deserialize", "k": [], "r": "r1.5", "t": "tf.keras.losses.deserialize"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/losses/get", "k": [], "r": "r1.5", "t": "tf.keras.losses.get"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/losses/hinge", "k": [], "r": "r1.5", "t": "tf.keras.losses.hinge"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/losses/kullback_leibler_divergence", "k": [], "r": "r1.5", "t": "tf.keras.losses.kullback_leibler_divergence"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/losses/logcosh", "k": [], "r": "r1.5", "t": "tf.keras.losses.logcosh"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/losses/mean_absolute_error", "k": [], "r": "r1.5", "t": "tf.keras.losses.mean_absolute_error"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/losses/mean_absolute_percentage_error", "k": [], "r": "r1.5", "t": "tf.keras.losses.mean_absolute_percentage_error"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/losses/mean_squared_error", "k": [], "r": "r1.5", "t": "tf.keras.losses.mean_squared_error"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/losses/mean_squared_logarithmic_error", "k": [], "r": "r1.5", "t": "tf.keras.losses.mean_squared_logarithmic_error"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/losses/poisson", "k": [], "r": "r1.5", "t": "tf.keras.losses.poisson"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/losses/serialize", "k": [], "r": "r1.5", "t": "tf.keras.losses.serialize"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/losses/sparse_categorical_crossentropy", "k": [], "r": "r1.5", "t": "tf.keras.losses.sparse_categorical_crossentropy"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/losses/squared_hinge", "k": [], "r": "r1.5", "t": "tf.keras.losses.squared_hinge"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/metrics", "k": [], "r": "r1.5", "t": "tf.keras.metrics"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/metrics/binary_accuracy", "k": [], "r": "r1.5", "t": "tf.keras.metrics.binary_accuracy"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/metrics/categorical_accuracy", "k": [], "r": "r1.5", "t": "tf.keras.metrics.categorical_accuracy"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/metrics/deserialize", "k": [], "r": "r1.5", "t": "tf.keras.metrics.deserialize"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/metrics/get", "k": [], "r": "r1.5", "t": "tf.keras.metrics.get"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/metrics/serialize", "k": [], "r": "r1.5", "t": "tf.keras.metrics.serialize"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/metrics/sparse_top_k_categorical_accuracy", "k": [], "r": "r1.5", "t": "tf.keras.metrics.sparse_top_k_categorical_accuracy"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/metrics/top_k_categorical_accuracy", "k": [], "r": "r1.5", "t": "tf.keras.metrics.top_k_categorical_accuracy"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/models", "k": [], "r": "r1.5", "t": "tf.keras.models"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/models/load_model", "k": [], "r": "r1.5", "t": "tf.keras.models.load_model"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/models/model_from_config", "k": [], "r": "r1.5", "t": "tf.keras.models.model_from_config"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/models/model_from_json", "k": [], "r": "r1.5", "t": "tf.keras.models.model_from_json"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/models/model_from_yaml", "k": [], "r": "r1.5", "t": "tf.keras.models.model_from_yaml"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/models/save_model", "k": [], "r": "r1.5", "t": "tf.keras.models.save_model"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/optimizers", "k": [], "r": "r1.5", "t": "tf.keras.optimizers"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/optimizers/Adadelta", "k": ["__init__", "from_config", "get_config", "get_gradients", "get_updates", "get_weights", "set_weights"], "r": "r1.5", "t": "tf.keras.optimizers.Adadelta"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/optimizers/Adagrad", "k": ["__init__", "from_config", "get_config", "get_gradients", "get_updates", "get_weights", "set_weights"], "r": "r1.5", "t": "tf.keras.optimizers.Adagrad"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/optimizers/Adam", "k": ["__init__", "from_config", "get_config", "get_gradients", "get_updates", "get_weights", "set_weights"], "r": "r1.5", "t": "tf.keras.optimizers.Adam"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/optimizers/Adamax", "k": ["__init__", "from_config", "get_config", "get_gradients", "get_updates", "get_weights", "set_weights"], "r": "r1.5", "t": "tf.keras.optimizers.Adamax"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/optimizers/Nadam", "k": ["__init__", "from_config", "get_config", "get_gradients", "get_updates", "get_weights", "set_weights"], "r": "r1.5", "t": "tf.keras.optimizers.Nadam"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/optimizers/Optimizer", "k": ["__init__", "from_config", "get_config", "get_gradients", "get_updates", "get_weights", "set_weights"], "r": "r1.5", "t": "tf.keras.optimizers.Optimizer"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/optimizers/RMSprop", "k": ["__init__", "from_config", "get_config", "get_gradients", "get_updates", "get_weights", "set_weights"], "r": "r1.5", "t": "tf.keras.optimizers.RMSprop"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/optimizers/SGD", "k": ["__init__", "from_config", "get_config", "get_gradients", "get_updates", "get_weights", "set_weights"], "r": "r1.5", "t": "tf.keras.optimizers.SGD"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/optimizers/deserialize", "k": [], "r": "r1.5", "t": "tf.keras.optimizers.deserialize"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/optimizers/get", "k": [], "r": "r1.5", "t": "tf.keras.optimizers.get"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/optimizers/serialize", "k": [], "r": "r1.5", "t": "tf.keras.optimizers.serialize"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/preprocessing", "k": [], "r": "r1.5", "t": "tf.keras.preprocessing"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/preprocessing/image", "k": [], "r": "r1.5", "t": "tf.keras.preprocessing.image"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/preprocessing/image/DirectoryIterator", "k": ["__getitem__", "__init__", "__iter__", "__len__", "__next__", "next", "on_epoch_end", "reset"], "r": "r1.5", "t": "tf.keras.preprocessing.image.DirectoryIterator"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/preprocessing/image/ImageDataGenerator", "k": ["__init__", "fit", "flow", "flow_from_directory", "random_transform", "standardize"], "r": "r1.5", "t": "tf.keras.preprocessing.image.ImageDataGenerator"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/preprocessing/image/Iterator", "k": ["__getitem__", "__init__", "__iter__", "__len__", "__next__", "on_epoch_end", "reset"], "r": "r1.5", "t": "tf.keras.preprocessing.image.Iterator"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/preprocessing/image/NumpyArrayIterator", "k": ["__getitem__", "__init__", "__iter__", "__len__", "__next__", "next", "on_epoch_end", "reset"], "r": "r1.5", "t": "tf.keras.preprocessing.image.NumpyArrayIterator"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/preprocessing/image/apply_transform", "k": [], "r": "r1.5", "t": "tf.keras.preprocessing.image.apply_transform"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/preprocessing/image/array_to_img", "k": [], "r": "r1.5", "t": "tf.keras.preprocessing.image.array_to_img"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/preprocessing/image/flip_axis", "k": [], "r": "r1.5", "t": "tf.keras.preprocessing.image.flip_axis"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/preprocessing/image/img_to_array", "k": [], "r": "r1.5", "t": "tf.keras.preprocessing.image.img_to_array"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/preprocessing/image/load_img", "k": [], "r": "r1.5", "t": "tf.keras.preprocessing.image.load_img"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/preprocessing/image/random_channel_shift", "k": [], "r": "r1.5", "t": "tf.keras.preprocessing.image.random_channel_shift"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/preprocessing/image/random_rotation", "k": [], "r": "r1.5", "t": "tf.keras.preprocessing.image.random_rotation"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/preprocessing/image/random_shear", "k": [], "r": "r1.5", "t": "tf.keras.preprocessing.image.random_shear"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/preprocessing/image/random_shift", "k": [], "r": "r1.5", "t": "tf.keras.preprocessing.image.random_shift"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/preprocessing/image/random_zoom", "k": [], "r": "r1.5", "t": "tf.keras.preprocessing.image.random_zoom"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/preprocessing/sequence", "k": [], "r": "r1.5", "t": "tf.keras.preprocessing.sequence"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/preprocessing/sequence/make_sampling_table", "k": [], "r": "r1.5", "t": "tf.keras.preprocessing.sequence.make_sampling_table"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/preprocessing/sequence/pad_sequences", "k": [], "r": "r1.5", "t": "tf.keras.preprocessing.sequence.pad_sequences"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/preprocessing/sequence/skipgrams", "k": [], "r": "r1.5", "t": "tf.keras.preprocessing.sequence.skipgrams"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/preprocessing/text", "k": [], "r": "r1.5", "t": "tf.keras.preprocessing.text"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/preprocessing/text/Tokenizer", "k": ["__init__", "fit_on_sequences", "fit_on_texts", "sequences_to_matrix", "texts_to_matrix", "texts_to_sequences", "texts_to_sequences_generator"], "r": "r1.5", "t": "tf.keras.preprocessing.text.Tokenizer"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/preprocessing/text/one_hot", "k": [], "r": "r1.5", "t": "tf.keras.preprocessing.text.one_hot"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/preprocessing/text/text_to_word_sequence", "k": [], "r": "r1.5", "t": "tf.keras.preprocessing.text.text_to_word_sequence"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/regularizers", "k": [], "r": "r1.5", "t": "tf.keras.regularizers"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/regularizers/L1L2", "k": ["__call__", "__init__", "from_config", "get_config"], "r": "r1.5", "t": "tf.keras.regularizers.L1L2"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/regularizers/Regularizer", "k": ["__call__", "from_config"], "r": "r1.5", "t": "tf.keras.regularizers.Regularizer"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/regularizers/deserialize", "k": [], "r": "r1.5", "t": "tf.keras.regularizers.deserialize"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/regularizers/get", "k": [], "r": "r1.5", "t": "tf.keras.regularizers.get"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/regularizers/l1", "k": [], "r": "r1.5", "t": "tf.keras.regularizers.l1"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/regularizers/l1_l2", "k": [], "r": "r1.5", "t": "tf.keras.regularizers.l1_l2"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/regularizers/l2", "k": [], "r": "r1.5", "t": "tf.keras.regularizers.l2"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/regularizers/serialize", "k": [], "r": "r1.5", "t": "tf.keras.regularizers.serialize"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/utils", "k": [], "r": "r1.5", "t": "tf.keras.utils"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/utils/CustomObjectScope", "k": ["__enter__", "__exit__", "__init__"], "r": "r1.5", "t": "tf.keras.utils.CustomObjectScope"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/utils/GeneratorEnqueuer", "k": ["__init__", "get", "is_running", "start", "stop"], "r": "r1.5", "t": "tf.keras.utils.GeneratorEnqueuer"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/utils/HDF5Matrix", "k": ["dtype", "ndim", "shape", "size", "__getitem__", "__init__", "__len__", "refs"], "r": "r1.5", "t": "tf.keras.utils.HDF5Matrix"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/utils/Progbar", "k": ["__init__", "add", "update"], "r": "r1.5", "t": "tf.keras.utils.Progbar"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/utils/Sequence", "k": ["__getitem__", "__len__", "on_epoch_end"], "r": "r1.5", "t": "tf.keras.utils.Sequence"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/utils/SequenceEnqueuer", "k": ["get", "is_running", "start", "stop"], "r": "r1.5", "t": "tf.keras.utils.SequenceEnqueuer"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/utils/convert_all_kernels_in_model", "k": [], "r": "r1.5", "t": "tf.keras.utils.convert_all_kernels_in_model"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/utils/custom_object_scope", "k": [], "r": "r1.5", "t": "tf.keras.utils.custom_object_scope"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/utils/deserialize_keras_object", "k": [], "r": "r1.5", "t": "tf.keras.utils.deserialize_keras_object"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/utils/get_custom_objects", "k": [], "r": "r1.5", "t": "tf.keras.utils.get_custom_objects"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/utils/get_file", "k": [], "r": "r1.5", "t": "tf.keras.utils.get_file"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/utils/multi_gpu_model", "k": [], "r": "r1.5", "t": "tf.keras.utils.multi_gpu_model"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/utils/normalize", "k": [], "r": "r1.5", "t": "tf.keras.utils.normalize"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/utils/plot_model", "k": [], "r": "r1.5", "t": "tf.keras.utils.plot_model"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/utils/serialize_keras_object", "k": [], "r": "r1.5", "t": "tf.keras.utils.serialize_keras_object"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/utils/to_categorical", "k": [], "r": "r1.5", "t": "tf.keras.utils.to_categorical"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/wrappers", "k": [], "r": "r1.5", "t": "tf.keras.wrappers"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/wrappers/scikit_learn", "k": [], "r": "r1.5", "t": "tf.keras.wrappers.scikit_learn"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/wrappers/scikit_learn/KerasClassifier", "k": ["__init__", "check_params", "filter_sk_params", "fit", "get_params", "predict", "predict_proba", "score", "set_params"], "r": "r1.5", "t": "tf.keras.wrappers.scikit_learn.KerasClassifier"}, {"p": "/versions/r1.5/api_docs/python/tf/keras/wrappers/scikit_learn/KerasRegressor", "k": ["__init__", "check_params", "filter_sk_params", "fit", "get_params", "predict", "score", "set_params"], "r": "r1.5", "t": "tf.keras.wrappers.scikit_learn.KerasRegressor"}, {"p": "/versions/r1.5/api_docs/python/tf/layers", "k": [], "r": "r1.5", "t": "tf.layers"}, {"p": "/versions/r1.5/api_docs/python/tf/layers/AveragePooling1D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "r1.5", "t": "tf.layers.AveragePooling1D"}, {"p": "/versions/r1.5/api_docs/python/tf/layers/AveragePooling2D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "r1.5", "t": "tf.layers.AveragePooling2D"}, {"p": "/versions/r1.5/api_docs/python/tf/layers/AveragePooling3D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "r1.5", "t": "tf.layers.AveragePooling3D"}, {"p": "/versions/r1.5/api_docs/python/tf/layers/BatchNormalization", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "r1.5", "t": "tf.layers.BatchNormalization"}, {"p": "/versions/r1.5/api_docs/python/tf/layers/Conv1D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "r1.5", "t": "tf.layers.Conv1D"}, {"p": "/versions/r1.5/api_docs/python/tf/layers/Conv2D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "r1.5", "t": "tf.layers.Conv2D"}, {"p": "/versions/r1.5/api_docs/python/tf/layers/Conv2DTranspose", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "r1.5", "t": "tf.layers.Conv2DTranspose"}, {"p": "/versions/r1.5/api_docs/python/tf/layers/Conv3D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "r1.5", "t": "tf.layers.Conv3D"}, {"p": "/versions/r1.5/api_docs/python/tf/layers/Conv3DTranspose", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "r1.5", "t": "tf.layers.Conv3DTranspose"}, {"p": "/versions/r1.5/api_docs/python/tf/layers/Dense", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "r1.5", "t": "tf.layers.Dense"}, {"p": "/versions/r1.5/api_docs/python/tf/layers/Dropout", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "r1.5", "t": "tf.layers.Dropout"}, {"p": "/versions/r1.5/api_docs/python/tf/layers/Flatten", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "r1.5", "t": "tf.layers.Flatten"}, {"p": "/versions/r1.5/api_docs/python/tf/layers/Input", "k": [], "r": "r1.5", "t": "tf.layers.Input"}, {"p": "/versions/r1.5/api_docs/python/tf/layers/InputSpec", "k": ["__init__"], "r": "r1.5", "t": "tf.layers.InputSpec"}, {"p": "/versions/r1.5/api_docs/python/tf/layers/Layer", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "r1.5", "t": "tf.layers.Layer"}, {"p": "/versions/r1.5/api_docs/python/tf/layers/MaxPooling1D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "r1.5", "t": "tf.layers.MaxPooling1D"}, {"p": "/versions/r1.5/api_docs/python/tf/layers/MaxPooling2D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "r1.5", "t": "tf.layers.MaxPooling2D"}, {"p": "/versions/r1.5/api_docs/python/tf/layers/MaxPooling3D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "r1.5", "t": "tf.layers.MaxPooling3D"}, {"p": "/versions/r1.5/api_docs/python/tf/layers/SeparableConv2D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "r1.5", "t": "tf.layers.SeparableConv2D"}, {"p": "/versions/r1.5/api_docs/python/tf/layers/average_pooling1d", "k": [], "r": "r1.5", "t": "tf.layers.average_pooling1d"}, {"p": "/versions/r1.5/api_docs/python/tf/layers/average_pooling2d", "k": [], "r": "r1.5", "t": "tf.layers.average_pooling2d"}, {"p": "/versions/r1.5/api_docs/python/tf/layers/average_pooling3d", "k": [], "r": "r1.5", "t": "tf.layers.average_pooling3d"}, {"p": "/versions/r1.5/api_docs/python/tf/layers/batch_normalization", "k": [], "r": "r1.5", "t": "tf.layers.batch_normalization"}, {"p": "/versions/r1.5/api_docs/python/tf/layers/conv1d", "k": [], "r": "r1.5", "t": "tf.layers.conv1d"}, {"p": "/versions/r1.5/api_docs/python/tf/layers/conv2d", "k": [], "r": "r1.5", "t": "tf.layers.conv2d"}, {"p": "/versions/r1.5/api_docs/python/tf/layers/conv2d_transpose", "k": [], "r": "r1.5", "t": "tf.layers.conv2d_transpose"}, {"p": "/versions/r1.5/api_docs/python/tf/layers/conv3d", "k": [], "r": "r1.5", "t": "tf.layers.conv3d"}, {"p": "/versions/r1.5/api_docs/python/tf/layers/conv3d_transpose", "k": [], "r": "r1.5", "t": "tf.layers.conv3d_transpose"}, {"p": "/versions/r1.5/api_docs/python/tf/layers/dense", "k": [], "r": "r1.5", "t": "tf.layers.dense"}, {"p": "/versions/r1.5/api_docs/python/tf/layers/dropout", "k": [], "r": "r1.5", "t": "tf.layers.dropout"}, {"p": "/versions/r1.5/api_docs/python/tf/layers/flatten", "k": [], "r": "r1.5", "t": "tf.layers.flatten"}, {"p": "/versions/r1.5/api_docs/python/tf/layers/max_pooling1d", "k": [], "r": "r1.5", "t": "tf.layers.max_pooling1d"}, {"p": "/versions/r1.5/api_docs/python/tf/layers/max_pooling2d", "k": [], "r": "r1.5", "t": "tf.layers.max_pooling2d"}, {"p": "/versions/r1.5/api_docs/python/tf/layers/max_pooling3d", "k": [], "r": "r1.5", "t": "tf.layers.max_pooling3d"}, {"p": "/versions/r1.5/api_docs/python/tf/layers/separable_conv2d", "k": [], "r": "r1.5", "t": "tf.layers.separable_conv2d"}, {"p": "/versions/r1.5/api_docs/python/tf/lbeta", "k": [], "r": "r1.5", "t": "tf.lbeta"}, {"p": "/versions/r1.5/api_docs/python/tf/less", "k": [], "r": "r1.5", "t": "tf.less"}, {"p": "/versions/r1.5/api_docs/python/tf/less_equal", "k": [], "r": "r1.5", "t": "tf.less_equal"}, {"p": "/versions/r1.5/api_docs/python/tf/lgamma", "k": [], "r": "r1.5", "t": "tf.lgamma"}, {"p": "/versions/r1.5/api_docs/python/tf/lin_space", "k": [], "r": "r1.5", "t": "tf.lin_space"}, {"p": "/versions/r1.5/api_docs/python/tf/linalg", "k": [], "r": "r1.5", "t": "tf.linalg"}, {"p": "/versions/r1.5/api_docs/python/tf/linalg/LinearOperator", "k": ["batch_shape", "domain_dimension", "dtype", "graph_parents", "is_non_singular", "is_positive_definite", "is_self_adjoint", "is_square", "name", "range_dimension", "shape", "tensor_rank", "__init__", "add_to_tensor", "assert_non_singular", "assert_positive_definite", "assert_self_adjoint", "batch_shape_tensor", "determinant", "diag_part", "domain_dimension_tensor", "log_abs_determinant", "matmul", "matvec", "range_dimension_tensor", "shape_tensor", "solve", "solvevec", "tensor_rank_tensor", "to_dense", "trace"], "r": "r1.5", "t": "tf.linalg.LinearOperator"}, {"p": "/versions/r1.5/api_docs/python/tf/linalg/LinearOperatorComposition", "k": ["batch_shape", "domain_dimension", "dtype", "graph_parents", "is_non_singular", "is_positive_definite", "is_self_adjoint", "is_square", "name", "operators", "range_dimension", "shape", "tensor_rank", "__init__", "add_to_tensor", "assert_non_singular", "assert_positive_definite", "assert_self_adjoint", "batch_shape_tensor", "determinant", "diag_part", "domain_dimension_tensor", "log_abs_determinant", "matmul", "matvec", "range_dimension_tensor", "shape_tensor", "solve", "solvevec", "tensor_rank_tensor", "to_dense", "trace"], "r": "r1.5", "t": "tf.linalg.LinearOperatorComposition"}, {"p": "/versions/r1.5/api_docs/python/tf/linalg/LinearOperatorDiag", "k": ["batch_shape", "diag", "domain_dimension", "dtype", "graph_parents", "is_non_singular", "is_positive_definite", "is_self_adjoint", "is_square", "name", "range_dimension", "shape", "tensor_rank", "__init__", "add_to_tensor", "assert_non_singular", "assert_positive_definite", "assert_self_adjoint", "batch_shape_tensor", "determinant", "diag_part", "domain_dimension_tensor", "log_abs_determinant", "matmul", "matvec", "range_dimension_tensor", "shape_tensor", "solve", "solvevec", "tensor_rank_tensor", "to_dense", "trace"], "r": "r1.5", "t": "tf.linalg.LinearOperatorDiag"}, {"p": "/versions/r1.5/api_docs/python/tf/linalg/LinearOperatorFullMatrix", "k": ["batch_shape", "domain_dimension", "dtype", "graph_parents", "is_non_singular", "is_positive_definite", "is_self_adjoint", "is_square", "name", "range_dimension", "shape", "tensor_rank", "__init__", "add_to_tensor", "assert_non_singular", "assert_positive_definite", "assert_self_adjoint", "batch_shape_tensor", "determinant", "diag_part", "domain_dimension_tensor", "log_abs_determinant", "matmul", "matvec", "range_dimension_tensor", "shape_tensor", "solve", "solvevec", "tensor_rank_tensor", "to_dense", "trace"], "r": "r1.5", "t": "tf.linalg.LinearOperatorFullMatrix"}, {"p": "/versions/r1.5/api_docs/python/tf/linalg/LinearOperatorIdentity", "k": ["batch_shape", "domain_dimension", "dtype", "graph_parents", "is_non_singular", "is_positive_definite", "is_self_adjoint", "is_square", "name", "range_dimension", "shape", "tensor_rank", "__init__", "add_to_tensor", "assert_non_singular", "assert_positive_definite", "assert_self_adjoint", "batch_shape_tensor", "determinant", "diag_part", "domain_dimension_tensor", "log_abs_determinant", "matmul", "matvec", "range_dimension_tensor", "shape_tensor", "solve", "solvevec", "tensor_rank_tensor", "to_dense", "trace"], "r": "r1.5", "t": "tf.linalg.LinearOperatorIdentity"}, {"p": "/versions/r1.5/api_docs/python/tf/linalg/LinearOperatorLowRankUpdate", "k": ["base_operator", "batch_shape", "diag_operator", "diag_update", "domain_dimension", "dtype", "graph_parents", "is_diag_update_positive", "is_non_singular", "is_positive_definite", "is_self_adjoint", "is_square", "name", "range_dimension", "shape", "tensor_rank", "u", "v", "__init__", "add_to_tensor", "assert_non_singular", "assert_positive_definite", "assert_self_adjoint", "batch_shape_tensor", "determinant", "diag_part", "domain_dimension_tensor", "log_abs_determinant", "matmul", "matvec", "range_dimension_tensor", "shape_tensor", "solve", "solvevec", "tensor_rank_tensor", "to_dense", "trace"], "r": "r1.5", "t": "tf.linalg.LinearOperatorLowRankUpdate"}, {"p": "/versions/r1.5/api_docs/python/tf/linalg/LinearOperatorLowerTriangular", "k": ["batch_shape", "domain_dimension", "dtype", "graph_parents", "is_non_singular", "is_positive_definite", "is_self_adjoint", "is_square", "name", "range_dimension", "shape", "tensor_rank", "__init__", "add_to_tensor", "assert_non_singular", "assert_positive_definite", "assert_self_adjoint", "batch_shape_tensor", "determinant", "diag_part", "domain_dimension_tensor", "log_abs_determinant", "matmul", "matvec", "range_dimension_tensor", "shape_tensor", "solve", "solvevec", "tensor_rank_tensor", "to_dense", "trace"], "r": "r1.5", "t": "tf.linalg.LinearOperatorLowerTriangular"}, {"p": "/versions/r1.5/api_docs/python/tf/linalg/LinearOperatorScaledIdentity", "k": ["batch_shape", "domain_dimension", "dtype", "graph_parents", "is_non_singular", "is_positive_definite", "is_self_adjoint", "is_square", "multiplier", "name", "range_dimension", "shape", "tensor_rank", "__init__", "add_to_tensor", "assert_non_singular", "assert_positive_definite", "assert_self_adjoint", "batch_shape_tensor", "determinant", "diag_part", "domain_dimension_tensor", "log_abs_determinant", "matmul", "matvec", "range_dimension_tensor", "shape_tensor", "solve", "solvevec", "tensor_rank_tensor", "to_dense", "trace"], "r": "r1.5", "t": "tf.linalg.LinearOperatorScaledIdentity"}, {"p": "/versions/r1.5/api_docs/python/tf/linalg/adjoint", "k": [], "r": "r1.5", "t": "tf.linalg.adjoint"}, {"p": "/versions/r1.5/api_docs/python/tf/linalg/expm", "k": [], "r": "r1.5", "t": "tf.linalg.expm"}, {"p": "/versions/r1.5/api_docs/python/tf/linalg/logdet", "k": [], "r": "r1.5", "t": "tf.linalg.logdet"}, {"p": "/versions/r1.5/api_docs/python/tf/linalg/slogdet", "k": [], "r": "r1.5", "t": "tf.linalg.slogdet"}, {"p": "/versions/r1.5/api_docs/python/tf/load_file_system_library", "k": [], "r": "r1.5", "t": "tf.load_file_system_library"}, {"p": "/versions/r1.5/api_docs/python/tf/load_op_library", "k": [], "r": "r1.5", "t": "tf.load_op_library"}, {"p": "/versions/r1.5/api_docs/python/tf/local_variables", "k": [], "r": "r1.5", "t": "tf.local_variables"}, {"p": "/versions/r1.5/api_docs/python/tf/local_variables_initializer", "k": [], "r": "r1.5", "t": "tf.local_variables_initializer"}, {"p": "/versions/r1.5/api_docs/python/tf/log", "k": [], "r": "r1.5", "t": "tf.log"}, {"p": "/versions/r1.5/api_docs/python/tf/log1p", "k": [], "r": "r1.5", "t": "tf.log1p"}, {"p": "/versions/r1.5/api_docs/python/tf/log_sigmoid", "k": [], "r": "r1.5", "t": "tf.log_sigmoid"}, {"p": "/versions/r1.5/api_docs/python/tf/logging", "k": ["DEBUG", "ERROR", "FATAL", "INFO", "WARN"], "r": "r1.5", "t": "tf.logging"}, {"p": "/versions/r1.5/api_docs/python/tf/logging/TaskLevelStatusMessage", "k": [], "r": "r1.5", "t": "tf.logging.TaskLevelStatusMessage"}, {"p": "/versions/r1.5/api_docs/python/tf/logging/debug", "k": [], "r": "r1.5", "t": "tf.logging.debug"}, {"p": "/versions/r1.5/api_docs/python/tf/logging/error", "k": [], "r": "r1.5", "t": "tf.logging.error"}, {"p": "/versions/r1.5/api_docs/python/tf/logging/fatal", "k": [], "r": "r1.5", "t": "tf.logging.fatal"}, {"p": "/versions/r1.5/api_docs/python/tf/logging/flush", "k": [], "r": "r1.5", "t": "tf.logging.flush"}, {"p": "/versions/r1.5/api_docs/python/tf/logging/get_verbosity", "k": [], "r": "r1.5", "t": "tf.logging.get_verbosity"}, {"p": "/versions/r1.5/api_docs/python/tf/logging/info", "k": [], "r": "r1.5", "t": "tf.logging.info"}, {"p": "/versions/r1.5/api_docs/python/tf/logging/log", "k": [], "r": "r1.5", "t": "tf.logging.log"}, {"p": "/versions/r1.5/api_docs/python/tf/logging/log_every_n", "k": [], "r": "r1.5", "t": "tf.logging.log_every_n"}, {"p": "/versions/r1.5/api_docs/python/tf/logging/log_first_n", "k": [], "r": "r1.5", "t": "tf.logging.log_first_n"}, {"p": "/versions/r1.5/api_docs/python/tf/logging/log_if", "k": [], "r": "r1.5", "t": "tf.logging.log_if"}, {"p": "/versions/r1.5/api_docs/python/tf/logging/set_verbosity", "k": [], "r": "r1.5", "t": "tf.logging.set_verbosity"}, {"p": "/versions/r1.5/api_docs/python/tf/logging/vlog", "k": [], "r": "r1.5", "t": "tf.logging.vlog"}, {"p": "/versions/r1.5/api_docs/python/tf/logging/warn", "k": [], "r": "r1.5", "t": "tf.logging.warn"}, {"p": "/versions/r1.5/api_docs/python/tf/logging/warning", "k": [], "r": "r1.5", "t": "tf.logging.warning"}, {"p": "/versions/r1.5/api_docs/python/tf/logical_and", "k": [], "r": "r1.5", "t": "tf.logical_and"}, {"p": "/versions/r1.5/api_docs/python/tf/logical_not", "k": [], "r": "r1.5", "t": "tf.logical_not"}, {"p": "/versions/r1.5/api_docs/python/tf/logical_or", "k": [], "r": "r1.5", "t": "tf.logical_or"}, {"p": "/versions/r1.5/api_docs/python/tf/logical_xor", "k": [], "r": "r1.5", "t": "tf.logical_xor"}, {"p": "/versions/r1.5/api_docs/python/tf/losses", "k": [], "r": "r1.5", "t": "tf.losses"}, {"p": "/versions/r1.5/api_docs/python/tf/losses/Reduction", "k": ["all", "validate", "MEAN", "NONE", "SUM", "SUM_BY_NONZERO_WEIGHTS"], "r": "r1.5", "t": "tf.losses.Reduction"}, {"p": "/versions/r1.5/api_docs/python/tf/losses/absolute_difference", "k": [], "r": "r1.5", "t": "tf.losses.absolute_difference"}, {"p": "/versions/r1.5/api_docs/python/tf/losses/add_loss", "k": [], "r": "r1.5", "t": "tf.losses.add_loss"}, {"p": "/versions/r1.5/api_docs/python/tf/losses/compute_weighted_loss", "k": [], "r": "r1.5", "t": "tf.losses.compute_weighted_loss"}, {"p": "/versions/r1.5/api_docs/python/tf/losses/cosine_distance", "k": [], "r": "r1.5", "t": "tf.losses.cosine_distance"}, {"p": "/versions/r1.5/api_docs/python/tf/losses/get_losses", "k": [], "r": "r1.5", "t": "tf.losses.get_losses"}, {"p": "/versions/r1.5/api_docs/python/tf/losses/get_regularization_loss", "k": [], "r": "r1.5", "t": "tf.losses.get_regularization_loss"}, {"p": "/versions/r1.5/api_docs/python/tf/losses/get_regularization_losses", "k": [], "r": "r1.5", "t": "tf.losses.get_regularization_losses"}, {"p": "/versions/r1.5/api_docs/python/tf/losses/get_total_loss", "k": [], "r": "r1.5", "t": "tf.losses.get_total_loss"}, {"p": "/versions/r1.5/api_docs/python/tf/losses/hinge_loss", "k": [], "r": "r1.5", "t": "tf.losses.hinge_loss"}, {"p": "/versions/r1.5/api_docs/python/tf/losses/huber_loss", "k": [], "r": "r1.5", "t": "tf.losses.huber_loss"}, {"p": "/versions/r1.5/api_docs/python/tf/losses/log_loss", "k": [], "r": "r1.5", "t": "tf.losses.log_loss"}, {"p": "/versions/r1.5/api_docs/python/tf/losses/mean_pairwise_squared_error", "k": [], "r": "r1.5", "t": "tf.losses.mean_pairwise_squared_error"}, {"p": "/versions/r1.5/api_docs/python/tf/losses/mean_squared_error", "k": [], "r": "r1.5", "t": "tf.losses.mean_squared_error"}, {"p": "/versions/r1.5/api_docs/python/tf/losses/sigmoid_cross_entropy", "k": [], "r": "r1.5", "t": "tf.losses.sigmoid_cross_entropy"}, {"p": "/versions/r1.5/api_docs/python/tf/losses/softmax_cross_entropy", "k": [], "r": "r1.5", "t": "tf.losses.softmax_cross_entropy"}, {"p": "/versions/r1.5/api_docs/python/tf/losses/sparse_softmax_cross_entropy", "k": [], "r": "r1.5", "t": "tf.losses.sparse_softmax_cross_entropy"}, {"p": "/versions/r1.5/api_docs/python/tf/make_ndarray", "k": [], "r": "r1.5", "t": "tf.make_ndarray"}, {"p": "/versions/r1.5/api_docs/python/tf/make_template", "k": [], "r": "r1.5", "t": "tf.make_template"}, {"p": "/versions/r1.5/api_docs/python/tf/make_tensor_proto", "k": [], "r": "r1.5", "t": "tf.make_tensor_proto"}, {"p": "/versions/r1.5/api_docs/python/tf/map_fn", "k": [], "r": "r1.5", "t": "tf.map_fn"}, {"p": "/versions/r1.5/api_docs/python/tf/matching_files", "k": [], "r": "r1.5", "t": "tf.matching_files"}, {"p": "/versions/r1.5/api_docs/python/tf/matmul", "k": [], "r": "r1.5", "t": "tf.matmul"}, {"p": "/versions/r1.5/api_docs/python/tf/matrix_band_part", "k": [], "r": "r1.5", "t": "tf.matrix_band_part"}, {"p": "/versions/r1.5/api_docs/python/tf/matrix_determinant", "k": [], "r": "r1.5", "t": "tf.matrix_determinant"}, {"p": "/versions/r1.5/api_docs/python/tf/matrix_diag", "k": [], "r": "r1.5", "t": "tf.matrix_diag"}, {"p": "/versions/r1.5/api_docs/python/tf/matrix_diag_part", "k": [], "r": "r1.5", "t": "tf.matrix_diag_part"}, {"p": "/versions/r1.5/api_docs/python/tf/matrix_inverse", "k": [], "r": "r1.5", "t": "tf.matrix_inverse"}, {"p": "/versions/r1.5/api_docs/python/tf/matrix_set_diag", "k": [], "r": "r1.5", "t": "tf.matrix_set_diag"}, {"p": "/versions/r1.5/api_docs/python/tf/matrix_solve", "k": [], "r": "r1.5", "t": "tf.matrix_solve"}, {"p": "/versions/r1.5/api_docs/python/tf/matrix_solve_ls", "k": [], "r": "r1.5", "t": "tf.matrix_solve_ls"}, {"p": "/versions/r1.5/api_docs/python/tf/matrix_transpose", "k": [], "r": "r1.5", "t": "tf.matrix_transpose"}, {"p": "/versions/r1.5/api_docs/python/tf/matrix_triangular_solve", "k": [], "r": "r1.5", "t": "tf.matrix_triangular_solve"}, {"p": "/versions/r1.5/api_docs/python/tf/maximum", "k": [], "r": "r1.5", "t": "tf.maximum"}, {"p": "/versions/r1.5/api_docs/python/tf/meshgrid", "k": [], "r": "r1.5", "t": "tf.meshgrid"}, {"p": "/versions/r1.5/api_docs/python/tf/metrics", "k": [], "r": "r1.5", "t": "tf.metrics"}, {"p": "/versions/r1.5/api_docs/python/tf/metrics/accuracy", "k": [], "r": "r1.5", "t": "tf.metrics.accuracy"}, {"p": "/versions/r1.5/api_docs/python/tf/metrics/auc", "k": [], "r": "r1.5", "t": "tf.metrics.auc"}, {"p": "/versions/r1.5/api_docs/python/tf/metrics/average_precision_at_k", "k": [], "r": "r1.5", "t": "tf.metrics.average_precision_at_k"}, {"p": "/versions/r1.5/api_docs/python/tf/metrics/false_negatives", "k": [], "r": "r1.5", "t": "tf.metrics.false_negatives"}, {"p": "/versions/r1.5/api_docs/python/tf/metrics/false_negatives_at_thresholds", "k": [], "r": "r1.5", "t": "tf.metrics.false_negatives_at_thresholds"}, {"p": "/versions/r1.5/api_docs/python/tf/metrics/false_positives", "k": [], "r": "r1.5", "t": "tf.metrics.false_positives"}, {"p": "/versions/r1.5/api_docs/python/tf/metrics/false_positives_at_thresholds", "k": [], "r": "r1.5", "t": "tf.metrics.false_positives_at_thresholds"}, {"p": "/versions/r1.5/api_docs/python/tf/metrics/mean", "k": [], "r": "r1.5", "t": "tf.metrics.mean"}, {"p": "/versions/r1.5/api_docs/python/tf/metrics/mean_absolute_error", "k": [], "r": "r1.5", "t": "tf.metrics.mean_absolute_error"}, {"p": "/versions/r1.5/api_docs/python/tf/metrics/mean_cosine_distance", "k": [], "r": "r1.5", "t": "tf.metrics.mean_cosine_distance"}, {"p": "/versions/r1.5/api_docs/python/tf/metrics/mean_iou", "k": [], "r": "r1.5", "t": "tf.metrics.mean_iou"}, {"p": "/versions/r1.5/api_docs/python/tf/metrics/mean_per_class_accuracy", "k": [], "r": "r1.5", "t": "tf.metrics.mean_per_class_accuracy"}, {"p": "/versions/r1.5/api_docs/python/tf/metrics/mean_relative_error", "k": [], "r": "r1.5", "t": "tf.metrics.mean_relative_error"}, {"p": "/versions/r1.5/api_docs/python/tf/metrics/mean_squared_error", "k": [], "r": "r1.5", "t": "tf.metrics.mean_squared_error"}, {"p": "/versions/r1.5/api_docs/python/tf/metrics/mean_tensor", "k": [], "r": "r1.5", "t": "tf.metrics.mean_tensor"}, {"p": "/versions/r1.5/api_docs/python/tf/metrics/percentage_below", "k": [], "r": "r1.5", "t": "tf.metrics.percentage_below"}, {"p": "/versions/r1.5/api_docs/python/tf/metrics/precision", "k": [], "r": "r1.5", "t": "tf.metrics.precision"}, {"p": "/versions/r1.5/api_docs/python/tf/metrics/precision_at_k", "k": [], "r": "r1.5", "t": "tf.metrics.precision_at_k"}, {"p": "/versions/r1.5/api_docs/python/tf/metrics/precision_at_thresholds", "k": [], "r": "r1.5", "t": "tf.metrics.precision_at_thresholds"}, {"p": "/versions/r1.5/api_docs/python/tf/metrics/precision_at_top_k", "k": [], "r": "r1.5", "t": "tf.metrics.precision_at_top_k"}, {"p": "/versions/r1.5/api_docs/python/tf/metrics/recall", "k": [], "r": "r1.5", "t": "tf.metrics.recall"}, {"p": "/versions/r1.5/api_docs/python/tf/metrics/recall_at_k", "k": [], "r": "r1.5", "t": "tf.metrics.recall_at_k"}, {"p": "/versions/r1.5/api_docs/python/tf/metrics/recall_at_thresholds", "k": [], "r": "r1.5", "t": "tf.metrics.recall_at_thresholds"}, {"p": "/versions/r1.5/api_docs/python/tf/metrics/recall_at_top_k", "k": [], "r": "r1.5", "t": "tf.metrics.recall_at_top_k"}, {"p": "/versions/r1.5/api_docs/python/tf/metrics/root_mean_squared_error", "k": [], "r": "r1.5", "t": "tf.metrics.root_mean_squared_error"}, {"p": "/versions/r1.5/api_docs/python/tf/metrics/sensitivity_at_specificity", "k": [], "r": "r1.5", "t": "tf.metrics.sensitivity_at_specificity"}, {"p": "/versions/r1.5/api_docs/python/tf/metrics/sparse_average_precision_at_k", "k": [], "r": "r1.5", "t": "tf.metrics.sparse_average_precision_at_k"}, {"p": "/versions/r1.5/api_docs/python/tf/metrics/sparse_precision_at_k", "k": [], "r": "r1.5", "t": "tf.metrics.sparse_precision_at_k"}, {"p": "/versions/r1.5/api_docs/python/tf/metrics/specificity_at_sensitivity", "k": [], "r": "r1.5", "t": "tf.metrics.specificity_at_sensitivity"}, {"p": "/versions/r1.5/api_docs/python/tf/metrics/true_negatives", "k": [], "r": "r1.5", "t": "tf.metrics.true_negatives"}, {"p": "/versions/r1.5/api_docs/python/tf/metrics/true_negatives_at_thresholds", "k": [], "r": "r1.5", "t": "tf.metrics.true_negatives_at_thresholds"}, {"p": "/versions/r1.5/api_docs/python/tf/metrics/true_positives", "k": [], "r": "r1.5", "t": "tf.metrics.true_positives"}, {"p": "/versions/r1.5/api_docs/python/tf/metrics/true_positives_at_thresholds", "k": [], "r": "r1.5", "t": "tf.metrics.true_positives_at_thresholds"}, {"p": "/versions/r1.5/api_docs/python/tf/min_max_variable_partitioner", "k": [], "r": "r1.5", "t": "tf.min_max_variable_partitioner"}, {"p": "/versions/r1.5/api_docs/python/tf/minimum", "k": [], "r": "r1.5", "t": "tf.minimum"}, {"p": "/versions/r1.5/api_docs/python/tf/model_variables", "k": [], "r": "r1.5", "t": "tf.model_variables"}, {"p": "/versions/r1.5/api_docs/python/tf/moving_average_variables", "k": [], "r": "r1.5", "t": "tf.moving_average_variables"}, {"p": "/versions/r1.5/api_docs/python/tf/multinomial", "k": [], "r": "r1.5", "t": "tf.multinomial"}, {"p": "/versions/r1.5/api_docs/python/tf/multiply", "k": [], "r": "r1.5", "t": "tf.multiply"}, {"p": "/versions/r1.5/api_docs/python/tf/name_scope", "k": ["name", "__enter__", "__exit__", "__init__"], "r": "r1.5", "t": "tf.name_scope"}, {"p": "/versions/r1.5/api_docs/python/tf/negative", "k": [], "r": "r1.5", "t": "tf.negative"}, {"p": "/versions/r1.5/api_docs/python/tf/nn", "k": ["swish"], "r": "r1.5", "t": "tf.nn"}, {"p": "/versions/r1.5/api_docs/python/tf/nn/all_candidate_sampler", "k": [], "r": "r1.5", "t": "tf.nn.all_candidate_sampler"}, {"p": "/versions/r1.5/api_docs/python/tf/nn/atrous_conv2d", "k": [], "r": "r1.5", "t": "tf.nn.atrous_conv2d"}, {"p": "/versions/r1.5/api_docs/python/tf/nn/atrous_conv2d_transpose", "k": [], "r": "r1.5", "t": "tf.nn.atrous_conv2d_transpose"}, {"p": "/versions/r1.5/api_docs/python/tf/nn/avg_pool", "k": [], "r": "r1.5", "t": "tf.nn.avg_pool"}, {"p": "/versions/r1.5/api_docs/python/tf/nn/avg_pool3d", "k": [], "r": "r1.5", "t": "tf.nn.avg_pool3d"}, {"p": "/versions/r1.5/api_docs/python/tf/nn/batch_norm_with_global_normalization", "k": [], "r": "r1.5", "t": "tf.nn.batch_norm_with_global_normalization"}, {"p": "/versions/r1.5/api_docs/python/tf/nn/batch_normalization", "k": [], "r": "r1.5", "t": "tf.nn.batch_normalization"}, {"p": "/versions/r1.5/api_docs/python/tf/nn/bias_add", "k": [], "r": "r1.5", "t": "tf.nn.bias_add"}, {"p": "/versions/r1.5/api_docs/python/tf/nn/bidirectional_dynamic_rnn", "k": [], "r": "r1.5", "t": "tf.nn.bidirectional_dynamic_rnn"}, {"p": "/versions/r1.5/api_docs/python/tf/nn/compute_accidental_hits", "k": [], "r": "r1.5", "t": "tf.nn.compute_accidental_hits"}, {"p": "/versions/r1.5/api_docs/python/tf/nn/conv1d", "k": [], "r": "r1.5", "t": "tf.nn.conv1d"}, {"p": "/versions/r1.5/api_docs/python/tf/nn/conv2d", "k": [], "r": "r1.5", "t": "tf.nn.conv2d"}, {"p": "/versions/r1.5/api_docs/python/tf/nn/conv2d_backprop_filter", "k": [], "r": "r1.5", "t": "tf.nn.conv2d_backprop_filter"}, {"p": "/versions/r1.5/api_docs/python/tf/nn/conv2d_backprop_input", "k": [], "r": "r1.5", "t": "tf.nn.conv2d_backprop_input"}, {"p": "/versions/r1.5/api_docs/python/tf/nn/conv2d_transpose", "k": [], "r": "r1.5", "t": "tf.nn.conv2d_transpose"}, {"p": "/versions/r1.5/api_docs/python/tf/nn/conv3d", "k": [], "r": "r1.5", "t": "tf.nn.conv3d"}, {"p": "/versions/r1.5/api_docs/python/tf/nn/conv3d_backprop_filter_v2", "k": [], "r": "r1.5", "t": "tf.nn.conv3d_backprop_filter_v2"}, {"p": "/versions/r1.5/api_docs/python/tf/nn/conv3d_transpose", "k": [], "r": "r1.5", "t": "tf.nn.conv3d_transpose"}, {"p": "/versions/r1.5/api_docs/python/tf/nn/convolution", "k": [], "r": "r1.5", "t": "tf.nn.convolution"}, {"p": "/versions/r1.5/api_docs/python/tf/nn/crelu", "k": [], "r": "r1.5", "t": "tf.nn.crelu"}, {"p": "/versions/r1.5/api_docs/python/tf/nn/ctc_beam_search_decoder", "k": [], "r": "r1.5", "t": "tf.nn.ctc_beam_search_decoder"}, {"p": "/versions/r1.5/api_docs/python/tf/nn/ctc_greedy_decoder", "k": [], "r": "r1.5", "t": "tf.nn.ctc_greedy_decoder"}, {"p": "/versions/r1.5/api_docs/python/tf/nn/ctc_loss", "k": [], "r": "r1.5", "t": "tf.nn.ctc_loss"}, {"p": "/versions/r1.5/api_docs/python/tf/nn/depthwise_conv2d", "k": [], "r": "r1.5", "t": "tf.nn.depthwise_conv2d"}, {"p": "/versions/r1.5/api_docs/python/tf/nn/depthwise_conv2d_native", "k": [], "r": "r1.5", "t": "tf.nn.depthwise_conv2d_native"}, {"p": "/versions/r1.5/api_docs/python/tf/nn/depthwise_conv2d_native_backprop_filter", "k": [], "r": "r1.5", "t": "tf.nn.depthwise_conv2d_native_backprop_filter"}, {"p": "/versions/r1.5/api_docs/python/tf/nn/depthwise_conv2d_native_backprop_input", "k": [], "r": "r1.5", "t": "tf.nn.depthwise_conv2d_native_backprop_input"}, {"p": "/versions/r1.5/api_docs/python/tf/nn/dilation2d", "k": [], "r": "r1.5", "t": "tf.nn.dilation2d"}, {"p": "/versions/r1.5/api_docs/python/tf/nn/dropout", "k": [], "r": "r1.5", "t": "tf.nn.dropout"}, {"p": "/versions/r1.5/api_docs/python/tf/nn/dynamic_rnn", "k": [], "r": "r1.5", "t": "tf.nn.dynamic_rnn"}, {"p": "/versions/r1.5/api_docs/python/tf/nn/elu", "k": [], "r": "r1.5", "t": "tf.nn.elu"}, {"p": "/versions/r1.5/api_docs/python/tf/nn/embedding_lookup", "k": [], "r": "r1.5", "t": "tf.nn.embedding_lookup"}, {"p": "/versions/r1.5/api_docs/python/tf/nn/embedding_lookup_sparse", "k": [], "r": "r1.5", "t": "tf.nn.embedding_lookup_sparse"}, {"p": "/versions/r1.5/api_docs/python/tf/nn/erosion2d", "k": [], "r": "r1.5", "t": "tf.nn.erosion2d"}, {"p": "/versions/r1.5/api_docs/python/tf/nn/fixed_unigram_candidate_sampler", "k": [], "r": "r1.5", "t": "tf.nn.fixed_unigram_candidate_sampler"}, {"p": "/versions/r1.5/api_docs/python/tf/nn/fractional_avg_pool", "k": [], "r": "r1.5", "t": "tf.nn.fractional_avg_pool"}, {"p": "/versions/r1.5/api_docs/python/tf/nn/fractional_max_pool", "k": [], "r": "r1.5", "t": "tf.nn.fractional_max_pool"}, {"p": "/versions/r1.5/api_docs/python/tf/nn/fused_batch_norm", "k": [], "r": "r1.5", "t": "tf.nn.fused_batch_norm"}, {"p": "/versions/r1.5/api_docs/python/tf/nn/in_top_k", "k": [], "r": "r1.5", "t": "tf.nn.in_top_k"}, {"p": "/versions/r1.5/api_docs/python/tf/nn/l2_loss", "k": [], "r": "r1.5", "t": "tf.nn.l2_loss"}, {"p": "/versions/r1.5/api_docs/python/tf/nn/l2_normalize", "k": [], "r": "r1.5", "t": "tf.nn.l2_normalize"}, {"p": "/versions/r1.5/api_docs/python/tf/nn/leaky_relu", "k": [], "r": "r1.5", "t": "tf.nn.leaky_relu"}, {"p": "/versions/r1.5/api_docs/python/tf/nn/learned_unigram_candidate_sampler", "k": [], "r": "r1.5", "t": "tf.nn.learned_unigram_candidate_sampler"}, {"p": "/versions/r1.5/api_docs/python/tf/nn/local_response_normalization", "k": [], "r": "r1.5", "t": "tf.nn.local_response_normalization"}, {"p": "/versions/r1.5/api_docs/python/tf/nn/log_poisson_loss", "k": [], "r": "r1.5", "t": "tf.nn.log_poisson_loss"}, {"p": "/versions/r1.5/api_docs/python/tf/nn/log_softmax", "k": [], "r": "r1.5", "t": "tf.nn.log_softmax"}, {"p": "/versions/r1.5/api_docs/python/tf/nn/log_uniform_candidate_sampler", "k": [], "r": "r1.5", "t": "tf.nn.log_uniform_candidate_sampler"}, {"p": "/versions/r1.5/api_docs/python/tf/nn/max_pool", "k": [], "r": "r1.5", "t": "tf.nn.max_pool"}, {"p": "/versions/r1.5/api_docs/python/tf/nn/max_pool3d", "k": [], "r": "r1.5", "t": "tf.nn.max_pool3d"}, {"p": "/versions/r1.5/api_docs/python/tf/nn/max_pool_with_argmax", "k": [], "r": "r1.5", "t": "tf.nn.max_pool_with_argmax"}, {"p": "/versions/r1.5/api_docs/python/tf/nn/moments", "k": [], "r": "r1.5", "t": "tf.nn.moments"}, {"p": "/versions/r1.5/api_docs/python/tf/nn/nce_loss", "k": [], "r": "r1.5", "t": "tf.nn.nce_loss"}, {"p": "/versions/r1.5/api_docs/python/tf/nn/normalize_moments", "k": [], "r": "r1.5", "t": "tf.nn.normalize_moments"}, {"p": "/versions/r1.5/api_docs/python/tf/nn/pool", "k": [], "r": "r1.5", "t": "tf.nn.pool"}, {"p": "/versions/r1.5/api_docs/python/tf/nn/quantized_avg_pool", "k": [], "r": "r1.5", "t": "tf.nn.quantized_avg_pool"}, {"p": "/versions/r1.5/api_docs/python/tf/nn/quantized_conv2d", "k": [], "r": "r1.5", "t": "tf.nn.quantized_conv2d"}, {"p": "/versions/r1.5/api_docs/python/tf/nn/quantized_max_pool", "k": [], "r": "r1.5", "t": "tf.nn.quantized_max_pool"}, {"p": "/versions/r1.5/api_docs/python/tf/nn/quantized_relu_x", "k": [], "r": "r1.5", "t": "tf.nn.quantized_relu_x"}, {"p": "/versions/r1.5/api_docs/python/tf/nn/raw_rnn", "k": [], "r": "r1.5", "t": "tf.nn.raw_rnn"}, {"p": "/versions/r1.5/api_docs/python/tf/nn/relu", "k": [], "r": "r1.5", "t": "tf.nn.relu"}, {"p": "/versions/r1.5/api_docs/python/tf/nn/relu6", "k": [], "r": "r1.5", "t": "tf.nn.relu6"}, {"p": "/versions/r1.5/api_docs/python/tf/nn/relu_layer", "k": [], "r": "r1.5", "t": "tf.nn.relu_layer"}, {"p": "/versions/r1.5/api_docs/python/tf/nn/rnn_cell", "k": [], "r": "r1.5", "t": "tf.nn.rnn_cell"}, {"p": "/versions/r1.5/api_docs/python/tf/nn/sampled_softmax_loss", "k": [], "r": "r1.5", "t": "tf.nn.sampled_softmax_loss"}, {"p": "/versions/r1.5/api_docs/python/tf/nn/selu", "k": [], "r": "r1.5", "t": "tf.nn.selu"}, {"p": "/versions/r1.5/api_docs/python/tf/nn/separable_conv2d", "k": [], "r": "r1.5", "t": "tf.nn.separable_conv2d"}, {"p": "/versions/r1.5/api_docs/python/tf/nn/sigmoid_cross_entropy_with_logits", "k": [], "r": "r1.5", "t": "tf.nn.sigmoid_cross_entropy_with_logits"}, {"p": "/versions/r1.5/api_docs/python/tf/nn/softmax", "k": [], "r": "r1.5", "t": "tf.nn.softmax"}, {"p": "/versions/r1.5/api_docs/python/tf/nn/softmax_cross_entropy_with_logits", "k": [], "r": "r1.5", "t": "tf.nn.softmax_cross_entropy_with_logits"}, {"p": "/versions/r1.5/api_docs/python/tf/nn/softmax_cross_entropy_with_logits_v2", "k": [], "r": "r1.5", "t": "tf.nn.softmax_cross_entropy_with_logits_v2"}, {"p": "/versions/r1.5/api_docs/python/tf/nn/softplus", "k": [], "r": "r1.5", "t": "tf.nn.softplus"}, {"p": "/versions/r1.5/api_docs/python/tf/nn/softsign", "k": [], "r": "r1.5", "t": "tf.nn.softsign"}, {"p": "/versions/r1.5/api_docs/python/tf/nn/sparse_softmax_cross_entropy_with_logits", "k": [], "r": "r1.5", "t": "tf.nn.sparse_softmax_cross_entropy_with_logits"}, {"p": "/versions/r1.5/api_docs/python/tf/nn/static_bidirectional_rnn", "k": [], "r": "r1.5", "t": "tf.nn.static_bidirectional_rnn"}, {"p": "/versions/r1.5/api_docs/python/tf/nn/static_rnn", "k": [], "r": "r1.5", "t": "tf.nn.static_rnn"}, {"p": "/versions/r1.5/api_docs/python/tf/nn/static_state_saving_rnn", "k": [], "r": "r1.5", "t": "tf.nn.static_state_saving_rnn"}, {"p": "/versions/r1.5/api_docs/python/tf/nn/sufficient_statistics", "k": [], "r": "r1.5", "t": "tf.nn.sufficient_statistics"}, {"p": "/versions/r1.5/api_docs/python/tf/nn/top_k", "k": [], "r": "r1.5", "t": "tf.nn.top_k"}, {"p": "/versions/r1.5/api_docs/python/tf/nn/uniform_candidate_sampler", "k": [], "r": "r1.5", "t": "tf.nn.uniform_candidate_sampler"}, {"p": "/versions/r1.5/api_docs/python/tf/nn/weighted_cross_entropy_with_logits", "k": [], "r": "r1.5", "t": "tf.nn.weighted_cross_entropy_with_logits"}, {"p": "/versions/r1.5/api_docs/python/tf/nn/weighted_moments", "k": [], "r": "r1.5", "t": "tf.nn.weighted_moments"}, {"p": "/versions/r1.5/api_docs/python/tf/nn/with_space_to_batch", "k": [], "r": "r1.5", "t": "tf.nn.with_space_to_batch"}, {"p": "/versions/r1.5/api_docs/python/tf/nn/xw_plus_b", "k": [], "r": "r1.5", "t": "tf.nn.xw_plus_b"}, {"p": "/versions/r1.5/api_docs/python/tf/nn/zero_fraction", "k": [], "r": "r1.5", "t": "tf.nn.zero_fraction"}, {"p": "/versions/r1.5/api_docs/python/tf/no_op", "k": [], "r": "r1.5", "t": "tf.no_op"}, {"p": "/versions/r1.5/api_docs/python/tf/no_regularizer", "k": [], "r": "r1.5", "t": "tf.no_regularizer"}, {"p": "/versions/r1.5/api_docs/python/tf/norm", "k": [], "r": "r1.5", "t": "tf.norm"}, {"p": "/versions/r1.5/api_docs/python/tf/not_equal", "k": [], "r": "r1.5", "t": "tf.not_equal"}, {"p": "/versions/r1.5/api_docs/python/tf/one_hot", "k": [], "r": "r1.5", "t": "tf.one_hot"}, {"p": "/versions/r1.5/api_docs/python/tf/ones", "k": [], "r": "r1.5", "t": "tf.ones"}, {"p": "/versions/r1.5/api_docs/python/tf/ones_initializer", "k": ["__call__", "__init__", "from_config", "get_config"], "r": "r1.5", "t": "tf.ones_initializer"}, {"p": "/versions/r1.5/api_docs/python/tf/ones_like", "k": [], "r": "r1.5", "t": "tf.ones_like"}, {"p": "/versions/r1.5/api_docs/python/tf/op_scope", "k": [], "r": "r1.5", "t": "tf.op_scope"}, {"p": "/versions/r1.5/api_docs/python/tf/orthogonal_initializer", "k": ["__call__", "__init__", "from_config", "get_config"], "r": "r1.5", "t": "tf.orthogonal_initializer"}, {"p": "/versions/r1.5/api_docs/python/tf/pad", "k": [], "r": "r1.5", "t": "tf.pad"}, {"p": "/versions/r1.5/api_docs/python/tf/parallel_stack", "k": [], "r": "r1.5", "t": "tf.parallel_stack"}, {"p": "/versions/r1.5/api_docs/python/tf/parse_example", "k": [], "r": "r1.5", "t": "tf.parse_example"}, {"p": "/versions/r1.5/api_docs/python/tf/parse_single_example", "k": [], "r": "r1.5", "t": "tf.parse_single_example"}, {"p": "/versions/r1.5/api_docs/python/tf/parse_single_sequence_example", "k": [], "r": "r1.5", "t": "tf.parse_single_sequence_example"}, {"p": "/versions/r1.5/api_docs/python/tf/parse_tensor", "k": [], "r": "r1.5", "t": "tf.parse_tensor"}, {"p": "/versions/r1.5/api_docs/python/tf/placeholder", "k": [], "r": "r1.5", "t": "tf.placeholder"}, {"p": "/versions/r1.5/api_docs/python/tf/placeholder_with_default", "k": [], "r": "r1.5", "t": "tf.placeholder_with_default"}, {"p": "/versions/r1.5/api_docs/python/tf/polygamma", "k": [], "r": "r1.5", "t": "tf.polygamma"}, {"p": "/versions/r1.5/api_docs/python/tf/pow", "k": [], "r": "r1.5", "t": "tf.pow"}, {"p": "/versions/r1.5/api_docs/python/tf/profiler", "k": [], "r": "r1.5", "t": "tf.profiler"}, {"p": "/versions/r1.5/api_docs/python/tf/profiler/AdviceProto", "k": ["Checker", "CheckersEntry"], "r": "r1.5", "t": "tf.profiler.AdviceProto"}, {"p": "/versions/r1.5/api_docs/python/tf/profiler/AdviceProto/Checker", "k": [], "r": "r1.5", "t": "tf.profiler.AdviceProto.Checker"}, {"p": "/versions/r1.5/api_docs/python/tf/profiler/AdviceProto/CheckersEntry", "k": [], "r": "r1.5", "t": "tf.profiler.AdviceProto.CheckersEntry"}, {"p": "/versions/r1.5/api_docs/python/tf/profiler/GraphNodeProto", "k": ["InputShapesEntry"], "r": "r1.5", "t": "tf.profiler.GraphNodeProto"}, {"p": "/versions/r1.5/api_docs/python/tf/profiler/GraphNodeProto/InputShapesEntry", "k": [], "r": "r1.5", "t": "tf.profiler.GraphNodeProto.InputShapesEntry"}, {"p": "/versions/r1.5/api_docs/python/tf/profiler/MultiGraphNodeProto", "k": [], "r": "r1.5", "t": "tf.profiler.MultiGraphNodeProto"}, {"p": "/versions/r1.5/api_docs/python/tf/profiler/OpLogProto", "k": ["IdToStringEntry"], "r": "r1.5", "t": "tf.profiler.OpLogProto"}, {"p": "/versions/r1.5/api_docs/python/tf/profiler/OpLogProto/IdToStringEntry", "k": [], "r": "r1.5", "t": "tf.profiler.OpLogProto.IdToStringEntry"}, {"p": "/versions/r1.5/api_docs/python/tf/profiler/ProfileOptionBuilder", "k": ["__init__", "account_displayed_op_only", "build", "float_operation", "order_by", "select", "time_and_memory", "trainable_variables_parameter", "with_accounted_types", "with_empty_output", "with_file_output", "with_max_depth", "with_min_execution_time", "with_min_float_operations", "with_min_memory", "with_min_occurrence", "with_min_parameters", "with_node_names", "with_pprof_output", "with_stdout_output", "with_step", "with_timeline_output"], "r": "r1.5", "t": "tf.profiler.ProfileOptionBuilder"}, {"p": "/versions/r1.5/api_docs/python/tf/profiler/Profiler", "k": ["__init__", "add_step", "advise", "profile_graph", "profile_name_scope", "profile_operations", "profile_python"], "r": "r1.5", "t": "tf.profiler.Profiler"}, {"p": "/versions/r1.5/api_docs/python/tf/profiler/advise", "k": [], "r": "r1.5", "t": "tf.profiler.advise"}, {"p": "/versions/r1.5/api_docs/python/tf/profiler/profile", "k": [], "r": "r1.5", "t": "tf.profiler.profile"}, {"p": "/versions/r1.5/api_docs/python/tf/profiler/write_op_log", "k": [], "r": "r1.5", "t": "tf.profiler.write_op_log"}, {"p": "/versions/r1.5/api_docs/python/tf/py_func", "k": [], "r": "r1.5", "t": "tf.py_func"}, {"p": "/versions/r1.5/api_docs/python/tf/python_io", "k": [], "r": "r1.5", "t": "tf.python_io"}, {"p": "/versions/r1.5/api_docs/python/tf/python_io/TFRecordCompressionType", "k": ["GZIP", "NONE", "ZLIB"], "r": "r1.5", "t": "tf.python_io.TFRecordCompressionType"}, {"p": "/versions/r1.5/api_docs/python/tf/python_io/TFRecordOptions", "k": ["__init__", "get_compression_type_string", "compression_type_map"], "r": "r1.5", "t": "tf.python_io.TFRecordOptions"}, {"p": "/versions/r1.5/api_docs/python/tf/python_io/TFRecordWriter", "k": ["__enter__", "__exit__", "__init__", "close", "flush", "write"], "r": "r1.5", "t": "tf.python_io.TFRecordWriter"}, {"p": "/versions/r1.5/api_docs/python/tf/python_io/tf_record_iterator", "k": [], "r": "r1.5", "t": "tf.python_io.tf_record_iterator"}, {"p": "/versions/r1.5/api_docs/python/tf/pywrap_tensorflow", "k": [], "r": "r1.5", "t": "tf.pywrap_tensorflow"}, {"p": "/versions/r1.5/api_docs/python/tf/qr", "k": [], "r": "r1.5", "t": "tf.qr"}, {"p": "/versions/r1.5/api_docs/python/tf/quantize", "k": [], "r": "r1.5", "t": "tf.quantize"}, {"p": "/versions/r1.5/api_docs/python/tf/quantize_v2", "k": [], "r": "r1.5", "t": "tf.quantize_v2"}, {"p": "/versions/r1.5/api_docs/python/tf/quantized_concat", "k": [], "r": "r1.5", "t": "tf.quantized_concat"}, {"p": "/versions/r1.5/api_docs/python/tf/random_crop", "k": [], "r": "r1.5", "t": "tf.random_crop"}, {"p": "/versions/r1.5/api_docs/python/tf/random_gamma", "k": [], "r": "r1.5", "t": "tf.random_gamma"}, {"p": "/versions/r1.5/api_docs/python/tf/random_normal", "k": [], "r": "r1.5", "t": "tf.random_normal"}, {"p": "/versions/r1.5/api_docs/python/tf/random_normal_initializer", "k": ["__call__", "__init__", "from_config", "get_config"], "r": "r1.5", "t": "tf.random_normal_initializer"}, {"p": "/versions/r1.5/api_docs/python/tf/random_poisson", "k": [], "r": "r1.5", "t": "tf.random_poisson"}, {"p": "/versions/r1.5/api_docs/python/tf/random_shuffle", "k": [], "r": "r1.5", "t": "tf.random_shuffle"}, {"p": "/versions/r1.5/api_docs/python/tf/random_uniform", "k": [], "r": "r1.5", "t": "tf.random_uniform"}, {"p": "/versions/r1.5/api_docs/python/tf/random_uniform_initializer", "k": ["__call__", "__init__", "from_config", "get_config"], "r": "r1.5", "t": "tf.random_uniform_initializer"}, {"p": "/versions/r1.5/api_docs/python/tf/range", "k": [], "r": "r1.5", "t": "tf.range"}, {"p": "/versions/r1.5/api_docs/python/tf/rank", "k": [], "r": "r1.5", "t": "tf.rank"}, {"p": "/versions/r1.5/api_docs/python/tf/read_file", "k": [], "r": "r1.5", "t": "tf.read_file"}, {"p": "/versions/r1.5/api_docs/python/tf/real", "k": [], "r": "r1.5", "t": "tf.real"}, {"p": "/versions/r1.5/api_docs/python/tf/realdiv", "k": [], "r": "r1.5", "t": "tf.realdiv"}, {"p": "/versions/r1.5/api_docs/python/tf/reciprocal", "k": [], "r": "r1.5", "t": "tf.reciprocal"}, {"p": "/versions/r1.5/api_docs/python/tf/reduce_all", "k": [], "r": "r1.5", "t": "tf.reduce_all"}, {"p": "/versions/r1.5/api_docs/python/tf/reduce_any", "k": [], "r": "r1.5", "t": "tf.reduce_any"}, {"p": "/versions/r1.5/api_docs/python/tf/reduce_join", "k": [], "r": "r1.5", "t": "tf.reduce_join"}, {"p": "/versions/r1.5/api_docs/python/tf/reduce_logsumexp", "k": [], "r": "r1.5", "t": "tf.reduce_logsumexp"}, {"p": "/versions/r1.5/api_docs/python/tf/reduce_max", "k": [], "r": "r1.5", "t": "tf.reduce_max"}, {"p": "/versions/r1.5/api_docs/python/tf/reduce_mean", "k": [], "r": "r1.5", "t": "tf.reduce_mean"}, {"p": "/versions/r1.5/api_docs/python/tf/reduce_min", "k": [], "r": "r1.5", "t": "tf.reduce_min"}, {"p": "/versions/r1.5/api_docs/python/tf/reduce_prod", "k": [], "r": "r1.5", "t": "tf.reduce_prod"}, {"p": "/versions/r1.5/api_docs/python/tf/reduce_sum", "k": [], "r": "r1.5", "t": "tf.reduce_sum"}, {"p": "/versions/r1.5/api_docs/python/tf/register_tensor_conversion_function", "k": [], "r": "r1.5", "t": "tf.register_tensor_conversion_function"}, {"p": "/versions/r1.5/api_docs/python/tf/report_uninitialized_variables", "k": [], "r": "r1.5", "t": "tf.report_uninitialized_variables"}, {"p": "/versions/r1.5/api_docs/python/tf/required_space_to_batch_paddings", "k": [], "r": "r1.5", "t": "tf.required_space_to_batch_paddings"}, {"p": "/versions/r1.5/api_docs/python/tf/reset_default_graph", "k": [], "r": "r1.5", "t": "tf.reset_default_graph"}, {"p": "/versions/r1.5/api_docs/python/tf/reshape", "k": [], "r": "r1.5", "t": "tf.reshape"}, {"p": "/versions/r1.5/api_docs/python/tf/resource_loader", "k": [], "r": "r1.5", "t": "tf.resource_loader"}, {"p": "/versions/r1.5/api_docs/python/tf/resource_loader/get_data_files_path", "k": [], "r": "r1.5", "t": "tf.resource_loader.get_data_files_path"}, {"p": "/versions/r1.5/api_docs/python/tf/resource_loader/get_path_to_datafile", "k": [], "r": "r1.5", "t": "tf.resource_loader.get_path_to_datafile"}, {"p": "/versions/r1.5/api_docs/python/tf/resource_loader/get_root_dir_with_all_resources", "k": [], "r": "r1.5", "t": "tf.resource_loader.get_root_dir_with_all_resources"}, {"p": "/versions/r1.5/api_docs/python/tf/resource_loader/load_resource", "k": [], "r": "r1.5", "t": "tf.resource_loader.load_resource"}, {"p": "/versions/r1.5/api_docs/python/tf/resource_loader/readahead_file_path", "k": [], "r": "r1.5", "t": "tf.resource_loader.readahead_file_path"}, {"p": "/versions/r1.5/api_docs/python/tf/reverse", "k": [], "r": "r1.5", "t": "tf.reverse"}, {"p": "/versions/r1.5/api_docs/python/tf/reverse_sequence", "k": [], "r": "r1.5", "t": "tf.reverse_sequence"}, {"p": "/versions/r1.5/api_docs/python/tf/reverse_v2", "k": [], "r": "r1.5", "t": "tf.reverse_v2"}, {"p": "/versions/r1.5/api_docs/python/tf/rint", "k": [], "r": "r1.5", "t": "tf.rint"}, {"p": "/versions/r1.5/api_docs/python/tf/round", "k": [], "r": "r1.5", "t": "tf.round"}, {"p": "/versions/r1.5/api_docs/python/tf/rsqrt", "k": [], "r": "r1.5", "t": "tf.rsqrt"}, {"p": "/versions/r1.5/api_docs/python/tf/saturate_cast", "k": [], "r": "r1.5", "t": "tf.saturate_cast"}, {"p": "/versions/r1.5/api_docs/python/tf/saved_model", "k": [], "r": "r1.5", "t": "tf.saved_model"}, {"p": "/versions/r1.5/api_docs/python/tf/saved_model/builder", "k": [], "r": "r1.5", "t": "tf.saved_model.builder"}, {"p": "/versions/r1.5/api_docs/python/tf/saved_model/builder/SavedModelBuilder", "k": ["__init__", "add_meta_graph", "add_meta_graph_and_variables", "save"], "r": "r1.5", "t": "tf.saved_model.builder.SavedModelBuilder"}, {"p": "/versions/r1.5/api_docs/python/tf/saved_model/constants", "k": ["ASSETS_DIRECTORY", "ASSETS_KEY", "LEGACY_INIT_OP_KEY", "MAIN_OP_KEY", "SAVED_MODEL_FILENAME_PB", "SAVED_MODEL_FILENAME_PBTXT", "SAVED_MODEL_SCHEMA_VERSION", "VARIABLES_DIRECTORY", "VARIABLES_FILENAME"], "r": "r1.5", "t": "tf.saved_model.constants"}, {"p": "/versions/r1.5/api_docs/python/tf/saved_model/loader", "k": [], "r": "r1.5", "t": "tf.saved_model.loader"}, {"p": "/versions/r1.5/api_docs/python/tf/saved_model/loader/load", "k": [], "r": "r1.5", "t": "tf.saved_model.loader.load"}, {"p": "/versions/r1.5/api_docs/python/tf/saved_model/loader/maybe_saved_model_directory", "k": [], "r": "r1.5", "t": "tf.saved_model.loader.maybe_saved_model_directory"}, {"p": "/versions/r1.5/api_docs/python/tf/saved_model/main_op", "k": [], "r": "r1.5", "t": "tf.saved_model.main_op"}, {"p": "/versions/r1.5/api_docs/python/tf/saved_model/main_op/main_op", "k": [], "r": "r1.5", "t": "tf.saved_model.main_op.main_op"}, {"p": "/versions/r1.5/api_docs/python/tf/saved_model/main_op/main_op_with_restore", "k": [], "r": "r1.5", "t": "tf.saved_model.main_op.main_op_with_restore"}, {"p": "/versions/r1.5/api_docs/python/tf/saved_model/signature_constants", "k": ["CLASSIFY_INPUTS", "CLASSIFY_METHOD_NAME", "CLASSIFY_OUTPUT_CLASSES", "CLASSIFY_OUTPUT_SCORES", "DEFAULT_SERVING_SIGNATURE_DEF_KEY", "PREDICT_INPUTS", "PREDICT_METHOD_NAME", "PREDICT_OUTPUTS", "REGRESS_INPUTS", "REGRESS_METHOD_NAME", "REGRESS_OUTPUTS"], "r": "r1.5", "t": "tf.saved_model.signature_constants"}, {"p": "/versions/r1.5/api_docs/python/tf/saved_model/signature_def_utils", "k": [], "r": "r1.5", "t": "tf.saved_model.signature_def_utils"}, {"p": "/versions/r1.5/api_docs/python/tf/saved_model/signature_def_utils/build_signature_def", "k": [], "r": "r1.5", "t": "tf.saved_model.signature_def_utils.build_signature_def"}, {"p": "/versions/r1.5/api_docs/python/tf/saved_model/signature_def_utils/classification_signature_def", "k": [], "r": "r1.5", "t": "tf.saved_model.signature_def_utils.classification_signature_def"}, {"p": "/versions/r1.5/api_docs/python/tf/saved_model/signature_def_utils/is_valid_signature", "k": [], "r": "r1.5", "t": "tf.saved_model.signature_def_utils.is_valid_signature"}, {"p": "/versions/r1.5/api_docs/python/tf/saved_model/signature_def_utils/predict_signature_def", "k": [], "r": "r1.5", "t": "tf.saved_model.signature_def_utils.predict_signature_def"}, {"p": "/versions/r1.5/api_docs/python/tf/saved_model/signature_def_utils/regression_signature_def", "k": [], "r": "r1.5", "t": "tf.saved_model.signature_def_utils.regression_signature_def"}, {"p": "/versions/r1.5/api_docs/python/tf/saved_model/tag_constants", "k": ["GPU", "SERVING", "TPU", "TRAINING"], "r": "r1.5", "t": "tf.saved_model.tag_constants"}, {"p": "/versions/r1.5/api_docs/python/tf/saved_model/utils", "k": [], "r": "r1.5", "t": "tf.saved_model.utils"}, {"p": "/versions/r1.5/api_docs/python/tf/saved_model/utils/build_tensor_info", "k": [], "r": "r1.5", "t": "tf.saved_model.utils.build_tensor_info"}, {"p": "/versions/r1.5/api_docs/python/tf/saved_model/utils/get_tensor_from_tensor_info", "k": [], "r": "r1.5", "t": "tf.saved_model.utils.get_tensor_from_tensor_info"}, {"p": "/versions/r1.5/api_docs/python/tf/scalar_mul", "k": [], "r": "r1.5", "t": "tf.scalar_mul"}, {"p": "/versions/r1.5/api_docs/python/tf/scan", "k": [], "r": "r1.5", "t": "tf.scan"}, {"p": "/versions/r1.5/api_docs/python/tf/scatter_add", "k": [], "r": "r1.5", "t": "tf.scatter_add"}, {"p": "/versions/r1.5/api_docs/python/tf/scatter_div", "k": [], "r": "r1.5", "t": "tf.scatter_div"}, {"p": "/versions/r1.5/api_docs/python/tf/scatter_mul", "k": [], "r": "r1.5", "t": "tf.scatter_mul"}, {"p": "/versions/r1.5/api_docs/python/tf/scatter_nd", "k": [], "r": "r1.5", "t": "tf.scatter_nd"}, {"p": "/versions/r1.5/api_docs/python/tf/scatter_nd_add", "k": [], "r": "r1.5", "t": "tf.scatter_nd_add"}, {"p": "/versions/r1.5/api_docs/python/tf/scatter_nd_sub", "k": [], "r": "r1.5", "t": "tf.scatter_nd_sub"}, {"p": "/versions/r1.5/api_docs/python/tf/scatter_nd_update", "k": [], "r": "r1.5", "t": "tf.scatter_nd_update"}, {"p": "/versions/r1.5/api_docs/python/tf/scatter_sub", "k": [], "r": "r1.5", "t": "tf.scatter_sub"}, {"p": "/versions/r1.5/api_docs/python/tf/scatter_update", "k": [], "r": "r1.5", "t": "tf.scatter_update"}, {"p": "/versions/r1.5/api_docs/python/tf/segment_max", "k": [], "r": "r1.5", "t": "tf.segment_max"}, {"p": "/versions/r1.5/api_docs/python/tf/segment_mean", "k": [], "r": "r1.5", "t": "tf.segment_mean"}, {"p": "/versions/r1.5/api_docs/python/tf/segment_min", "k": [], "r": "r1.5", "t": "tf.segment_min"}, {"p": "/versions/r1.5/api_docs/python/tf/segment_prod", "k": [], "r": "r1.5", "t": "tf.segment_prod"}, {"p": "/versions/r1.5/api_docs/python/tf/segment_sum", "k": [], "r": "r1.5", "t": "tf.segment_sum"}, {"p": "/versions/r1.5/api_docs/python/tf/self_adjoint_eig", "k": [], "r": "r1.5", "t": "tf.self_adjoint_eig"}, {"p": "/versions/r1.5/api_docs/python/tf/self_adjoint_eigvals", "k": [], "r": "r1.5", "t": "tf.self_adjoint_eigvals"}, {"p": "/versions/r1.5/api_docs/python/tf/sequence_mask", "k": [], "r": "r1.5", "t": "tf.sequence_mask"}, {"p": "/versions/r1.5/api_docs/python/tf/serialize_many_sparse", "k": [], "r": "r1.5", "t": "tf.serialize_many_sparse"}, {"p": "/versions/r1.5/api_docs/python/tf/serialize_sparse", "k": [], "r": "r1.5", "t": "tf.serialize_sparse"}, {"p": "/versions/r1.5/api_docs/python/tf/serialize_tensor", "k": [], "r": "r1.5", "t": "tf.serialize_tensor"}, {"p": "/versions/r1.5/api_docs/python/tf/set_random_seed", "k": [], "r": "r1.5", "t": "tf.set_random_seed"}, {"p": "/versions/r1.5/api_docs/python/tf/setdiff1d", "k": [], "r": "r1.5", "t": "tf.setdiff1d"}, {"p": "/versions/r1.5/api_docs/python/tf/sets", "k": [], "r": "r1.5", "t": "tf.sets"}, {"p": "/versions/r1.5/api_docs/python/tf/sets/set_difference", "k": [], "r": "r1.5", "t": "tf.sets.set_difference"}, {"p": "/versions/r1.5/api_docs/python/tf/sets/set_intersection", "k": [], "r": "r1.5", "t": "tf.sets.set_intersection"}, {"p": "/versions/r1.5/api_docs/python/tf/sets/set_size", "k": [], "r": "r1.5", "t": "tf.sets.set_size"}, {"p": "/versions/r1.5/api_docs/python/tf/sets/set_union", "k": [], "r": "r1.5", "t": "tf.sets.set_union"}, {"p": "/versions/r1.5/api_docs/python/tf/shape", "k": [], "r": "r1.5", "t": "tf.shape"}, {"p": "/versions/r1.5/api_docs/python/tf/shape_n", "k": [], "r": "r1.5", "t": "tf.shape_n"}, {"p": "/versions/r1.5/api_docs/python/tf/sigmoid", "k": [], "r": "r1.5", "t": "tf.sigmoid"}, {"p": "/versions/r1.5/api_docs/python/tf/sign", "k": [], "r": "r1.5", "t": "tf.sign"}, {"p": "/versions/r1.5/api_docs/python/tf/sin", "k": [], "r": "r1.5", "t": "tf.sin"}, {"p": "/versions/r1.5/api_docs/python/tf/sinh", "k": [], "r": "r1.5", "t": "tf.sinh"}, {"p": "/versions/r1.5/api_docs/python/tf/size", "k": [], "r": "r1.5", "t": "tf.size"}, {"p": "/versions/r1.5/api_docs/python/tf/slice", "k": [], "r": "r1.5", "t": "tf.slice"}, {"p": "/versions/r1.5/api_docs/python/tf/space_to_batch", "k": [], "r": "r1.5", "t": "tf.space_to_batch"}, {"p": "/versions/r1.5/api_docs/python/tf/space_to_batch_nd", "k": [], "r": "r1.5", "t": "tf.space_to_batch_nd"}, {"p": "/versions/r1.5/api_docs/python/tf/space_to_depth", "k": [], "r": "r1.5", "t": "tf.space_to_depth"}, {"p": "/versions/r1.5/api_docs/python/tf/sparse_add", "k": [], "r": "r1.5", "t": "tf.sparse_add"}, {"p": "/versions/r1.5/api_docs/python/tf/sparse_concat", "k": [], "r": "r1.5", "t": "tf.sparse_concat"}, {"p": "/versions/r1.5/api_docs/python/tf/sparse_fill_empty_rows", "k": [], "r": "r1.5", "t": "tf.sparse_fill_empty_rows"}, {"p": "/versions/r1.5/api_docs/python/tf/sparse_mask", "k": [], "r": "r1.5", "t": "tf.sparse_mask"}, {"p": "/versions/r1.5/api_docs/python/tf/sparse_matmul", "k": [], "r": "r1.5", "t": "tf.sparse_matmul"}, {"p": "/versions/r1.5/api_docs/python/tf/sparse_maximum", "k": [], "r": "r1.5", "t": "tf.sparse_maximum"}, {"p": "/versions/r1.5/api_docs/python/tf/sparse_merge", "k": [], "r": "r1.5", "t": "tf.sparse_merge"}, {"p": "/versions/r1.5/api_docs/python/tf/sparse_minimum", "k": [], "r": "r1.5", "t": "tf.sparse_minimum"}, {"p": "/versions/r1.5/api_docs/python/tf/sparse_placeholder", "k": [], "r": "r1.5", "t": "tf.sparse_placeholder"}, {"p": "/versions/r1.5/api_docs/python/tf/sparse_reduce_max", "k": [], "r": "r1.5", "t": "tf.sparse_reduce_max"}, {"p": "/versions/r1.5/api_docs/python/tf/sparse_reduce_max_sparse", "k": [], "r": "r1.5", "t": "tf.sparse_reduce_max_sparse"}, {"p": "/versions/r1.5/api_docs/python/tf/sparse_reduce_sum", "k": [], "r": "r1.5", "t": "tf.sparse_reduce_sum"}, {"p": "/versions/r1.5/api_docs/python/tf/sparse_reduce_sum_sparse", "k": [], "r": "r1.5", "t": "tf.sparse_reduce_sum_sparse"}, {"p": "/versions/r1.5/api_docs/python/tf/sparse_reorder", "k": [], "r": "r1.5", "t": "tf.sparse_reorder"}, {"p": "/versions/r1.5/api_docs/python/tf/sparse_reset_shape", "k": [], "r": "r1.5", "t": "tf.sparse_reset_shape"}, {"p": "/versions/r1.5/api_docs/python/tf/sparse_reshape", "k": [], "r": "r1.5", "t": "tf.sparse_reshape"}, {"p": "/versions/r1.5/api_docs/python/tf/sparse_retain", "k": [], "r": "r1.5", "t": "tf.sparse_retain"}, {"p": "/versions/r1.5/api_docs/python/tf/sparse_segment_mean", "k": [], "r": "r1.5", "t": "tf.sparse_segment_mean"}, {"p": "/versions/r1.5/api_docs/python/tf/sparse_segment_sqrt_n", "k": [], "r": "r1.5", "t": "tf.sparse_segment_sqrt_n"}, {"p": "/versions/r1.5/api_docs/python/tf/sparse_segment_sum", "k": [], "r": "r1.5", "t": "tf.sparse_segment_sum"}, {"p": "/versions/r1.5/api_docs/python/tf/sparse_slice", "k": [], "r": "r1.5", "t": "tf.sparse_slice"}, {"p": "/versions/r1.5/api_docs/python/tf/sparse_softmax", "k": [], "r": "r1.5", "t": "tf.sparse_softmax"}, {"p": "/versions/r1.5/api_docs/python/tf/sparse_split", "k": [], "r": "r1.5", "t": "tf.sparse_split"}, {"p": "/versions/r1.5/api_docs/python/tf/sparse_tensor_dense_matmul", "k": [], "r": "r1.5", "t": "tf.sparse_tensor_dense_matmul"}, {"p": "/versions/r1.5/api_docs/python/tf/sparse_tensor_to_dense", "k": [], "r": "r1.5", "t": "tf.sparse_tensor_to_dense"}, {"p": "/versions/r1.5/api_docs/python/tf/sparse_to_dense", "k": [], "r": "r1.5", "t": "tf.sparse_to_dense"}, {"p": "/versions/r1.5/api_docs/python/tf/sparse_to_indicator", "k": [], "r": "r1.5", "t": "tf.sparse_to_indicator"}, {"p": "/versions/r1.5/api_docs/python/tf/sparse_transpose", "k": [], "r": "r1.5", "t": "tf.sparse_transpose"}, {"p": "/versions/r1.5/api_docs/python/tf/spectral", "k": [], "r": "r1.5", "t": "tf.spectral"}, {"p": "/versions/r1.5/api_docs/python/tf/spectral/dct", "k": [], "r": "r1.5", "t": "tf.spectral.dct"}, {"p": "/versions/r1.5/api_docs/python/tf/spectral/irfft", "k": [], "r": "r1.5", "t": "tf.spectral.irfft"}, {"p": "/versions/r1.5/api_docs/python/tf/spectral/irfft2d", "k": [], "r": "r1.5", "t": "tf.spectral.irfft2d"}, {"p": "/versions/r1.5/api_docs/python/tf/spectral/irfft3d", "k": [], "r": "r1.5", "t": "tf.spectral.irfft3d"}, {"p": "/versions/r1.5/api_docs/python/tf/spectral/rfft", "k": [], "r": "r1.5", "t": "tf.spectral.rfft"}, {"p": "/versions/r1.5/api_docs/python/tf/spectral/rfft2d", "k": [], "r": "r1.5", "t": "tf.spectral.rfft2d"}, {"p": "/versions/r1.5/api_docs/python/tf/spectral/rfft3d", "k": [], "r": "r1.5", "t": "tf.spectral.rfft3d"}, {"p": "/versions/r1.5/api_docs/python/tf/split", "k": [], "r": "r1.5", "t": "tf.split"}, {"p": "/versions/r1.5/api_docs/python/tf/sqrt", "k": [], "r": "r1.5", "t": "tf.sqrt"}, {"p": "/versions/r1.5/api_docs/python/tf/square", "k": [], "r": "r1.5", "t": "tf.square"}, {"p": "/versions/r1.5/api_docs/python/tf/squared_difference", "k": [], "r": "r1.5", "t": "tf.squared_difference"}, {"p": "/versions/r1.5/api_docs/python/tf/squeeze", "k": [], "r": "r1.5", "t": "tf.squeeze"}, {"p": "/versions/r1.5/api_docs/python/tf/stack", "k": [], "r": "r1.5", "t": "tf.stack"}, {"p": "/versions/r1.5/api_docs/python/tf/stop_gradient", "k": [], "r": "r1.5", "t": "tf.stop_gradient"}, {"p": "/versions/r1.5/api_docs/python/tf/strided_slice", "k": [], "r": "r1.5", "t": "tf.strided_slice"}, {"p": "/versions/r1.5/api_docs/python/tf/string_join", "k": [], "r": "r1.5", "t": "tf.string_join"}, {"p": "/versions/r1.5/api_docs/python/tf/string_split", "k": [], "r": "r1.5", "t": "tf.string_split"}, {"p": "/versions/r1.5/api_docs/python/tf/string_to_hash_bucket", "k": [], "r": "r1.5", "t": "tf.string_to_hash_bucket"}, {"p": "/versions/r1.5/api_docs/python/tf/string_to_hash_bucket_fast", "k": [], "r": "r1.5", "t": "tf.string_to_hash_bucket_fast"}, {"p": "/versions/r1.5/api_docs/python/tf/string_to_hash_bucket_strong", "k": [], "r": "r1.5", "t": "tf.string_to_hash_bucket_strong"}, {"p": "/versions/r1.5/api_docs/python/tf/string_to_number", "k": [], "r": "r1.5", "t": "tf.string_to_number"}, {"p": "/versions/r1.5/api_docs/python/tf/substr", "k": [], "r": "r1.5", "t": "tf.substr"}, {"p": "/versions/r1.5/api_docs/python/tf/subtract", "k": [], "r": "r1.5", "t": "tf.subtract"}, {"p": "/versions/r1.5/api_docs/python/tf/summary", "k": [], "r": "r1.5", "t": "tf.summary"}, {"p": "/versions/r1.5/api_docs/python/tf/summary/FileWriter", "k": ["__enter__", "__exit__", "__init__", "add_event", "add_graph", "add_meta_graph", "add_run_metadata", "add_session_log", "add_summary", "close", "flush", "get_logdir", "reopen"], "r": "r1.5", "t": "tf.summary.FileWriter"}, {"p": "/versions/r1.5/api_docs/python/tf/summary/FileWriterCache", "k": ["clear", "get"], "r": "r1.5", "t": "tf.summary.FileWriterCache"}, {"p": "/versions/r1.5/api_docs/python/tf/summary/SummaryDescription", "k": [], "r": "r1.5", "t": "tf.summary.SummaryDescription"}, {"p": "/versions/r1.5/api_docs/python/tf/summary/TaggedRunMetadata", "k": [], "r": "r1.5", "t": "tf.summary.TaggedRunMetadata"}, {"p": "/versions/r1.5/api_docs/python/tf/summary/audio", "k": [], "r": "r1.5", "t": "tf.summary.audio"}, {"p": "/versions/r1.5/api_docs/python/tf/summary/get_summary_description", "k": [], "r": "r1.5", "t": "tf.summary.get_summary_description"}, {"p": "/versions/r1.5/api_docs/python/tf/summary/histogram", "k": [], "r": "r1.5", "t": "tf.summary.histogram"}, {"p": "/versions/r1.5/api_docs/python/tf/summary/image", "k": [], "r": "r1.5", "t": "tf.summary.image"}, {"p": "/versions/r1.5/api_docs/python/tf/summary/merge", "k": [], "r": "r1.5", "t": "tf.summary.merge"}, {"p": "/versions/r1.5/api_docs/python/tf/summary/merge_all", "k": [], "r": "r1.5", "t": "tf.summary.merge_all"}, {"p": "/versions/r1.5/api_docs/python/tf/summary/scalar", "k": [], "r": "r1.5", "t": "tf.summary.scalar"}, {"p": "/versions/r1.5/api_docs/python/tf/summary/tensor_summary", "k": [], "r": "r1.5", "t": "tf.summary.tensor_summary"}, {"p": "/versions/r1.5/api_docs/python/tf/summary/text", "k": [], "r": "r1.5", "t": "tf.summary.text"}, {"p": "/versions/r1.5/api_docs/python/tf/svd", "k": [], "r": "r1.5", "t": "tf.svd"}, {"p": "/versions/r1.5/api_docs/python/tf/sysconfig", "k": [], "r": "r1.5", "t": "tf.sysconfig"}, {"p": "/versions/r1.5/api_docs/python/tf/sysconfig/get_compile_flags", "k": [], "r": "r1.5", "t": "tf.sysconfig.get_compile_flags"}, {"p": "/versions/r1.5/api_docs/python/tf/sysconfig/get_include", "k": [], "r": "r1.5", "t": "tf.sysconfig.get_include"}, {"p": "/versions/r1.5/api_docs/python/tf/sysconfig/get_lib", "k": [], "r": "r1.5", "t": "tf.sysconfig.get_lib"}, {"p": "/versions/r1.5/api_docs/python/tf/sysconfig/get_link_flags", "k": [], "r": "r1.5", "t": "tf.sysconfig.get_link_flags"}, {"p": "/versions/r1.5/api_docs/python/tf/tables_initializer", "k": [], "r": "r1.5", "t": "tf.tables_initializer"}, {"p": "/versions/r1.5/api_docs/python/tf/tan", "k": [], "r": "r1.5", "t": "tf.tan"}, {"p": "/versions/r1.5/api_docs/python/tf/tanh", "k": [], "r": "r1.5", "t": "tf.tanh"}, {"p": "/versions/r1.5/api_docs/python/tf/tensordot", "k": [], "r": "r1.5", "t": "tf.tensordot"}, {"p": "/versions/r1.5/api_docs/python/tf/test", "k": [], "r": "r1.5", "t": "tf.test"}, {"p": "/versions/r1.5/api_docs/python/tf/test/Benchmark", "k": ["is_abstract", "report_benchmark", "run_op_benchmark"], "r": "r1.5", "t": "tf.test.Benchmark"}, {"p": "/versions/r1.5/api_docs/python/tf/test/StubOutForTesting", "k": ["CleanUp", "Set", "SmartSet", "SmartUnsetAll", "UnsetAll", "__del__", "__enter__", "__exit__", "__init__"], "r": "r1.5", "t": "tf.test.StubOutForTesting"}, {"p": "/versions/r1.5/api_docs/python/tf/test/TestCase", "k": ["failureException", "__call__", "__eq__", "__init__", "__ne__", "addCleanup", "addTypeEqualityFunc", "assertAllClose", "assertAllCloseAccordingToType", "assertAllEqual", "assertAlmostEqual", "assertAlmostEquals", "assertArrayNear", "assertDeviceEqual", "assertDictContainsSubset", "assertDictEqual", "assertEqual", "assertEquals", "assertFalse", "assertGreater", "assertGreaterEqual", "assertIn", "assertIs", "assertIsInstance", "assertIsNone", "assertIsNot", "assertIsNotNone", "assertItemsEqual", "assertLess", "assertLessEqual", "assertListEqual", "assertMultiLineEqual", "assertNDArrayNear", "assertNear", "assertNotAlmostEqual", "assertNotAlmostEquals", "assertNotEqual", "assertNotEquals", "assertNotIn", "assertNotIsInstance", "assertNotRegexpMatches", "assertProtoEquals", "assertProtoEqualsVersion", "assertRaises", "assertRaisesOpError", "assertRaisesRegexp", "assertRaisesWithPredicateMatch", "assertRegexpMatches", "assertSequenceEqual", "assertSetEqual", "assertShapeEqual", "assertStartsWith", "assertTrue", "assertTupleEqual", "assert_", "checkedThread", "countTestCases", "debug", "defaultTestResult", "doCleanups", "evaluate", "fail", "failIf", "failIfAlmostEqual", "failIfEqual", "failUnless", "failUnlessAlmostEqual", "failUnlessEqual", "failUnlessRaises", "get_temp_dir", "id", "run", "setUp", "setUpClass", "shortDescription", "skipTest", "tearDown", "tearDownClass", "test_session", "longMessage", "maxDiff"], "r": "r1.5", "t": "tf.test.TestCase"}, {"p": "/versions/r1.5/api_docs/python/tf/test/TestCase/failureException", "k": [], "r": "r1.5", "t": "tf.test.TestCase.failureException"}, {"p": "/versions/r1.5/api_docs/python/tf/test/assert_equal_graph_def", "k": [], "r": "r1.5", "t": "tf.test.assert_equal_graph_def"}, {"p": "/versions/r1.5/api_docs/python/tf/test/compute_gradient", "k": [], "r": "r1.5", "t": "tf.test.compute_gradient"}, {"p": "/versions/r1.5/api_docs/python/tf/test/compute_gradient_error", "k": [], "r": "r1.5", "t": "tf.test.compute_gradient_error"}, {"p": "/versions/r1.5/api_docs/python/tf/test/create_local_cluster", "k": [], "r": "r1.5", "t": "tf.test.create_local_cluster"}, {"p": "/versions/r1.5/api_docs/python/tf/test/get_temp_dir", "k": [], "r": "r1.5", "t": "tf.test.get_temp_dir"}, {"p": "/versions/r1.5/api_docs/python/tf/test/gpu_device_name", "k": [], "r": "r1.5", "t": "tf.test.gpu_device_name"}, {"p": "/versions/r1.5/api_docs/python/tf/test/is_built_with_cuda", "k": [], "r": "r1.5", "t": "tf.test.is_built_with_cuda"}, {"p": "/versions/r1.5/api_docs/python/tf/test/is_gpu_available", "k": [], "r": "r1.5", "t": "tf.test.is_gpu_available"}, {"p": "/versions/r1.5/api_docs/python/tf/test/main", "k": [], "r": "r1.5", "t": "tf.test.main"}, {"p": "/versions/r1.5/api_docs/python/tf/test/test_src_dir_path", "k": [], "r": "r1.5", "t": "tf.test.test_src_dir_path"}, {"p": "/versions/r1.5/api_docs/python/tf/tile", "k": [], "r": "r1.5", "t": "tf.tile"}, {"p": "/versions/r1.5/api_docs/python/tf/to_bfloat16", "k": [], "r": "r1.5", "t": "tf.to_bfloat16"}, {"p": "/versions/r1.5/api_docs/python/tf/to_double", "k": [], "r": "r1.5", "t": "tf.to_double"}, {"p": "/versions/r1.5/api_docs/python/tf/to_float", "k": [], "r": "r1.5", "t": "tf.to_float"}, {"p": "/versions/r1.5/api_docs/python/tf/to_int32", "k": [], "r": "r1.5", "t": "tf.to_int32"}, {"p": "/versions/r1.5/api_docs/python/tf/to_int64", "k": [], "r": "r1.5", "t": "tf.to_int64"}, {"p": "/versions/r1.5/api_docs/python/tf/tools", "k": [], "r": "r1.5", "t": "tf.tools"}, {"p": "/versions/r1.5/api_docs/python/tf/trace", "k": [], "r": "r1.5", "t": "tf.trace"}, {"p": "/versions/r1.5/api_docs/python/tf/train", "k": [], "r": "r1.5", "t": "tf.train"}, {"p": "/versions/r1.5/api_docs/python/tf/train/AdadeltaOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.5", "t": "tf.train.AdadeltaOptimizer"}, {"p": "/versions/r1.5/api_docs/python/tf/train/AdagradDAOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.5", "t": "tf.train.AdagradDAOptimizer"}, {"p": "/versions/r1.5/api_docs/python/tf/train/AdagradOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.5", "t": "tf.train.AdagradOptimizer"}, {"p": "/versions/r1.5/api_docs/python/tf/train/AdamOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.5", "t": "tf.train.AdamOptimizer"}, {"p": "/versions/r1.5/api_docs/python/tf/train/BytesList", "k": [], "r": "r1.5", "t": "tf.train.BytesList"}, {"p": "/versions/r1.5/api_docs/python/tf/train/CheckpointSaverHook", "k": ["__init__", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "r1.5", "t": "tf.train.CheckpointSaverHook"}, {"p": "/versions/r1.5/api_docs/python/tf/train/CheckpointSaverListener", "k": ["after_save", "before_save", "begin", "end"], "r": "r1.5", "t": "tf.train.CheckpointSaverListener"}, {"p": "/versions/r1.5/api_docs/python/tf/train/ChiefSessionCreator", "k": ["__init__", "create_session"], "r": "r1.5", "t": "tf.train.ChiefSessionCreator"}, {"p": "/versions/r1.5/api_docs/python/tf/train/ClusterDef", "k": [], "r": "r1.5", "t": "tf.train.ClusterDef"}, {"p": "/versions/r1.5/api_docs/python/tf/train/ClusterSpec", "k": ["jobs", "__bool__", "__eq__", "__init__", "__ne__", "__nonzero__", "as_cluster_def", "as_dict", "job_tasks", "num_tasks", "task_address", "task_indices"], "r": "r1.5", "t": "tf.train.ClusterSpec"}, {"p": "/versions/r1.5/api_docs/python/tf/train/Coordinator", "k": ["joined", "__init__", "clear_stop", "join", "raise_requested_exception", "register_thread", "request_stop", "should_stop", "stop_on_exception", "wait_for_stop"], "r": "r1.5", "t": "tf.train.Coordinator"}, {"p": "/versions/r1.5/api_docs/python/tf/train/Example", "k": [], "r": "r1.5", "t": "tf.train.Example"}, {"p": "/versions/r1.5/api_docs/python/tf/train/ExponentialMovingAverage", "k": ["__init__", "apply", "average", "average_name", "variables_to_restore"], "r": "r1.5", "t": "tf.train.ExponentialMovingAverage"}, {"p": "/versions/r1.5/api_docs/python/tf/train/Feature", "k": [], "r": "r1.5", "t": "tf.train.Feature"}, {"p": "/versions/r1.5/api_docs/python/tf/train/FeatureList", "k": [], "r": "r1.5", "t": "tf.train.FeatureList"}, {"p": "/versions/r1.5/api_docs/python/tf/train/FeatureLists", "k": ["FeatureListEntry"], "r": "r1.5", "t": "tf.train.FeatureLists"}, {"p": "/versions/r1.5/api_docs/python/tf/train/FeatureLists/FeatureListEntry", "k": [], "r": "r1.5", "t": "tf.train.FeatureLists.FeatureListEntry"}, {"p": "/versions/r1.5/api_docs/python/tf/train/Features", "k": ["FeatureEntry"], "r": "r1.5", "t": "tf.train.Features"}, {"p": "/versions/r1.5/api_docs/python/tf/train/Features/FeatureEntry", "k": [], "r": "r1.5", "t": "tf.train.Features.FeatureEntry"}, {"p": "/versions/r1.5/api_docs/python/tf/train/FeedFnHook", "k": ["__init__", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "r1.5", "t": "tf.train.FeedFnHook"}, {"p": "/versions/r1.5/api_docs/python/tf/train/FinalOpsHook", "k": ["final_ops_values", "__init__", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "r1.5", "t": "tf.train.FinalOpsHook"}, {"p": "/versions/r1.5/api_docs/python/tf/train/FloatList", "k": [], "r": "r1.5", "t": "tf.train.FloatList"}, {"p": "/versions/r1.5/api_docs/python/tf/train/FtrlOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.5", "t": "tf.train.FtrlOptimizer"}, {"p": "/versions/r1.5/api_docs/python/tf/train/GlobalStepWaiterHook", "k": ["__init__", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "r1.5", "t": "tf.train.GlobalStepWaiterHook"}, {"p": "/versions/r1.5/api_docs/python/tf/train/GradientDescentOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.5", "t": "tf.train.GradientDescentOptimizer"}, {"p": "/versions/r1.5/api_docs/python/tf/train/Int64List", "k": [], "r": "r1.5", "t": "tf.train.Int64List"}, {"p": "/versions/r1.5/api_docs/python/tf/train/JobDef", "k": ["TasksEntry"], "r": "r1.5", "t": "tf.train.JobDef"}, {"p": "/versions/r1.5/api_docs/python/tf/train/JobDef/TasksEntry", "k": [], "r": "r1.5", "t": "tf.train.JobDef.TasksEntry"}, {"p": "/versions/r1.5/api_docs/python/tf/train/LoggingTensorHook", "k": ["__init__", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "r1.5", "t": "tf.train.LoggingTensorHook"}, {"p": "/versions/r1.5/api_docs/python/tf/train/LooperThread", "k": ["daemon", "ident", "name", "__init__", "getName", "isAlive", "isDaemon", "is_alive", "join", "loop", "run", "run_loop", "setDaemon", "setName", "start", "start_loop", "stop_loop"], "r": "r1.5", "t": "tf.train.LooperThread"}, {"p": "/versions/r1.5/api_docs/python/tf/train/MomentumOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.5", "t": "tf.train.MomentumOptimizer"}, {"p": "/versions/r1.5/api_docs/python/tf/train/MonitoredSession", "k": ["StepContext", "graph", "__enter__", "__exit__", "__init__", "close", "run", "run_step_fn", "should_stop"], "r": "r1.5", "t": "tf.train.MonitoredSession"}, {"p": "/versions/r1.5/api_docs/python/tf/train/MonitoredSession/StepContext", "k": ["session", "__init__", "request_stop", "run_with_hooks"], "r": "r1.5", "t": "tf.train.MonitoredSession.StepContext"}, {"p": "/versions/r1.5/api_docs/python/tf/train/MonitoredTrainingSession", "k": [], "r": "r1.5", "t": "tf.train.MonitoredTrainingSession"}, {"p": "/versions/r1.5/api_docs/python/tf/train/NanLossDuringTrainingError", "k": [], "r": "r1.5", "t": "tf.train.NanLossDuringTrainingError"}, {"p": "/versions/r1.5/api_docs/python/tf/train/NanTensorHook", "k": ["__init__", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "r1.5", "t": "tf.train.NanTensorHook"}, {"p": "/versions/r1.5/api_docs/python/tf/train/NewCheckpointReader", "k": [], "r": "r1.5", "t": "tf.train.NewCheckpointReader"}, {"p": "/versions/r1.5/api_docs/python/tf/train/Optimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.5", "t": "tf.train.Optimizer"}, {"p": "/versions/r1.5/api_docs/python/tf/train/ProfilerHook", "k": ["__init__", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "r1.5", "t": "tf.train.ProfilerHook"}, {"p": "/versions/r1.5/api_docs/python/tf/train/ProximalAdagradOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.5", "t": "tf.train.ProximalAdagradOptimizer"}, {"p": "/versions/r1.5/api_docs/python/tf/train/ProximalGradientDescentOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.5", "t": "tf.train.ProximalGradientDescentOptimizer"}, {"p": "/versions/r1.5/api_docs/python/tf/train/QueueRunner", "k": ["cancel_op", "close_op", "enqueue_ops", "exceptions_raised", "name", "queue", "queue_closed_exception_types", "__init__", "create_threads", "from_proto", "to_proto"], "r": "r1.5", "t": "tf.train.QueueRunner"}, {"p": "/versions/r1.5/api_docs/python/tf/train/RMSPropOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.5", "t": "tf.train.RMSPropOptimizer"}, {"p": "/versions/r1.5/api_docs/python/tf/train/Saver", "k": ["last_checkpoints", "__init__", "as_saver_def", "build", "export_meta_graph", "from_proto", "recover_last_checkpoints", "restore", "save", "set_last_checkpoints", "set_last_checkpoints_with_time", "to_proto"], "r": "r1.5", "t": "tf.train.Saver"}, {"p": "/versions/r1.5/api_docs/python/tf/train/SaverDef", "k": ["CheckpointFormatVersion", "LEGACY", "V1", "V2"], "r": "r1.5", "t": "tf.train.SaverDef"}, {"p": "/versions/r1.5/api_docs/python/tf/train/Scaffold", "k": ["init_feed_dict", "init_fn", "init_op", "local_init_op", "ready_for_local_init_op", "ready_op", "saver", "summary_op", "__init__", "finalize", "get_or_default"], "r": "r1.5", "t": "tf.train.Scaffold"}, {"p": "/versions/r1.5/api_docs/python/tf/train/SecondOrStepTimer", "k": ["__init__", "last_triggered_step", "reset", "should_trigger_for_step", "update_last_triggered_step"], "r": "r1.5", "t": "tf.train.SecondOrStepTimer"}, {"p": "/versions/r1.5/api_docs/python/tf/train/SequenceExample", "k": [], "r": "r1.5", "t": "tf.train.SequenceExample"}, {"p": "/versions/r1.5/api_docs/python/tf/train/Server", "k": ["server_def", "target", "__init__", "create_local_server", "join", "start"], "r": "r1.5", "t": "tf.train.Server"}, {"p": "/versions/r1.5/api_docs/python/tf/train/ServerDef", "k": [], "r": "r1.5", "t": "tf.train.ServerDef"}, {"p": "/versions/r1.5/api_docs/python/tf/train/SessionCreator", "k": ["create_session"], "r": "r1.5", "t": "tf.train.SessionCreator"}, {"p": "/versions/r1.5/api_docs/python/tf/train/SessionManager", "k": ["__init__", "prepare_session", "recover_session", "wait_for_session"], "r": "r1.5", "t": "tf.train.SessionManager"}, {"p": "/versions/r1.5/api_docs/python/tf/train/SessionRunArgs", "k": ["feed_dict", "fetches", "options", "__new__"], "r": "r1.5", "t": "tf.train.SessionRunArgs"}, {"p": "/versions/r1.5/api_docs/python/tf/train/SessionRunContext", "k": ["original_args", "session", "stop_requested", "__init__", "request_stop"], "r": "r1.5", "t": "tf.train.SessionRunContext"}, {"p": "/versions/r1.5/api_docs/python/tf/train/SessionRunHook", "k": ["after_create_session", "after_run", "before_run", "begin", "end"], "r": "r1.5", "t": "tf.train.SessionRunHook"}, {"p": "/versions/r1.5/api_docs/python/tf/train/SessionRunValues", "k": ["options", "results", "run_metadata", "__new__"], "r": "r1.5", "t": "tf.train.SessionRunValues"}, {"p": "/versions/r1.5/api_docs/python/tf/train/SingularMonitoredSession", "k": ["StepContext", "graph", "__enter__", "__exit__", "__init__", "close", "raw_session", "run", "run_step_fn", "should_stop"], "r": "r1.5", "t": "tf.train.SingularMonitoredSession"}, {"p": "/versions/r1.5/api_docs/python/tf/train/StepCounterHook", "k": ["__init__", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "r1.5", "t": "tf.train.StepCounterHook"}, {"p": "/versions/r1.5/api_docs/python/tf/train/StopAtStepHook", "k": ["__init__", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "r1.5", "t": "tf.train.StopAtStepHook"}, {"p": "/versions/r1.5/api_docs/python/tf/train/SummarySaverHook", "k": ["__init__", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "r1.5", "t": "tf.train.SummarySaverHook"}, {"p": "/versions/r1.5/api_docs/python/tf/train/Supervisor", "k": ["coord", "global_step", "init_feed_dict", "init_op", "is_chief", "ready_for_local_init_op", "ready_op", "save_model_secs", "save_path", "save_summaries_secs", "saver", "session_manager", "summary_op", "summary_writer", "Loop", "PrepareSession", "RequestStop", "ShouldStop", "StartQueueRunners", "StartStandardServices", "Stop", "StopOnException", "SummaryComputed", "WaitForStop", "__init__", "loop", "managed_session", "prepare_or_wait_for_session", "request_stop", "should_stop", "start_queue_runners", "start_standard_services", "stop", "stop_on_exception", "summary_computed", "wait_for_stop", "USE_DEFAULT"], "r": "r1.5", "t": "tf.train.Supervisor"}, {"p": "/versions/r1.5/api_docs/python/tf/train/SyncReplicasOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_chief_queue_runner", "get_init_tokens_op", "get_name", "get_slot", "get_slot_names", "make_session_run_hook", "minimize", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.5", "t": "tf.train.SyncReplicasOptimizer"}, {"p": "/versions/r1.5/api_docs/python/tf/train/WorkerSessionCreator", "k": ["__init__", "create_session"], "r": "r1.5", "t": "tf.train.WorkerSessionCreator"}, {"p": "/versions/r1.5/api_docs/python/tf/train/add_queue_runner", "k": [], "r": "r1.5", "t": "tf.train.add_queue_runner"}, {"p": "/versions/r1.5/api_docs/python/tf/train/assert_global_step", "k": [], "r": "r1.5", "t": "tf.train.assert_global_step"}, {"p": "/versions/r1.5/api_docs/python/tf/train/basic_train_loop", "k": [], "r": "r1.5", "t": "tf.train.basic_train_loop"}, {"p": "/versions/r1.5/api_docs/python/tf/train/batch", "k": [], "r": "r1.5", "t": "tf.train.batch"}, {"p": "/versions/r1.5/api_docs/python/tf/train/batch_join", "k": [], "r": "r1.5", "t": "tf.train.batch_join"}, {"p": "/versions/r1.5/api_docs/python/tf/train/checkpoint_exists", "k": [], "r": "r1.5", "t": "tf.train.checkpoint_exists"}, {"p": "/versions/r1.5/api_docs/python/tf/train/cosine_decay", "k": [], "r": "r1.5", "t": "tf.train.cosine_decay"}, {"p": "/versions/r1.5/api_docs/python/tf/train/create_global_step", "k": [], "r": "r1.5", "t": "tf.train.create_global_step"}, {"p": "/versions/r1.5/api_docs/python/tf/train/do_quantize_training_on_graphdef", "k": [], "r": "r1.5", "t": "tf.train.do_quantize_training_on_graphdef"}, {"p": "/versions/r1.5/api_docs/python/tf/train/exponential_decay", "k": [], "r": "r1.5", "t": "tf.train.exponential_decay"}, {"p": "/versions/r1.5/api_docs/python/tf/train/export_meta_graph", "k": [], "r": "r1.5", "t": "tf.train.export_meta_graph"}, {"p": "/versions/r1.5/api_docs/python/tf/train/generate_checkpoint_state_proto", "k": [], "r": "r1.5", "t": "tf.train.generate_checkpoint_state_proto"}, {"p": "/versions/r1.5/api_docs/python/tf/train/get_checkpoint_mtimes", "k": [], "r": "r1.5", "t": "tf.train.get_checkpoint_mtimes"}, {"p": "/versions/r1.5/api_docs/python/tf/train/get_checkpoint_state", "k": [], "r": "r1.5", "t": "tf.train.get_checkpoint_state"}, {"p": "/versions/r1.5/api_docs/python/tf/train/get_global_step", "k": [], "r": "r1.5", "t": "tf.train.get_global_step"}, {"p": "/versions/r1.5/api_docs/python/tf/train/get_or_create_global_step", "k": [], "r": "r1.5", "t": "tf.train.get_or_create_global_step"}, {"p": "/versions/r1.5/api_docs/python/tf/train/global_step", "k": [], "r": "r1.5", "t": "tf.train.global_step"}, {"p": "/versions/r1.5/api_docs/python/tf/train/import_meta_graph", "k": [], "r": "r1.5", "t": "tf.train.import_meta_graph"}, {"p": "/versions/r1.5/api_docs/python/tf/train/init_from_checkpoint", "k": [], "r": "r1.5", "t": "tf.train.init_from_checkpoint"}, {"p": "/versions/r1.5/api_docs/python/tf/train/input_producer", "k": [], "r": "r1.5", "t": "tf.train.input_producer"}, {"p": "/versions/r1.5/api_docs/python/tf/train/inverse_time_decay", "k": [], "r": "r1.5", "t": "tf.train.inverse_time_decay"}, {"p": "/versions/r1.5/api_docs/python/tf/train/latest_checkpoint", "k": [], "r": "r1.5", "t": "tf.train.latest_checkpoint"}, {"p": "/versions/r1.5/api_docs/python/tf/train/limit_epochs", "k": [], "r": "r1.5", "t": "tf.train.limit_epochs"}, {"p": "/versions/r1.5/api_docs/python/tf/train/linear_cosine_decay", "k": [], "r": "r1.5", "t": "tf.train.linear_cosine_decay"}, {"p": "/versions/r1.5/api_docs/python/tf/train/list_variables", "k": [], "r": "r1.5", "t": "tf.train.list_variables"}, {"p": "/versions/r1.5/api_docs/python/tf/train/load_checkpoint", "k": [], "r": "r1.5", "t": "tf.train.load_checkpoint"}, {"p": "/versions/r1.5/api_docs/python/tf/train/load_variable", "k": [], "r": "r1.5", "t": "tf.train.load_variable"}, {"p": "/versions/r1.5/api_docs/python/tf/train/match_filenames_once", "k": [], "r": "r1.5", "t": "tf.train.match_filenames_once"}, {"p": "/versions/r1.5/api_docs/python/tf/train/maybe_batch", "k": [], "r": "r1.5", "t": "tf.train.maybe_batch"}, {"p": "/versions/r1.5/api_docs/python/tf/train/maybe_batch_join", "k": [], "r": "r1.5", "t": "tf.train.maybe_batch_join"}, {"p": "/versions/r1.5/api_docs/python/tf/train/maybe_shuffle_batch", "k": [], "r": "r1.5", "t": "tf.train.maybe_shuffle_batch"}, {"p": "/versions/r1.5/api_docs/python/tf/train/maybe_shuffle_batch_join", "k": [], "r": "r1.5", "t": "tf.train.maybe_shuffle_batch_join"}, {"p": "/versions/r1.5/api_docs/python/tf/train/natural_exp_decay", "k": [], "r": "r1.5", "t": "tf.train.natural_exp_decay"}, {"p": "/versions/r1.5/api_docs/python/tf/train/noisy_linear_cosine_decay", "k": [], "r": "r1.5", "t": "tf.train.noisy_linear_cosine_decay"}, {"p": "/versions/r1.5/api_docs/python/tf/train/piecewise_constant", "k": [], "r": "r1.5", "t": "tf.train.piecewise_constant"}, {"p": "/versions/r1.5/api_docs/python/tf/train/polynomial_decay", "k": [], "r": "r1.5", "t": "tf.train.polynomial_decay"}, {"p": "/versions/r1.5/api_docs/python/tf/train/queue_runner", "k": [], "r": "r1.5", "t": "tf.train.queue_runner"}, {"p": "/versions/r1.5/api_docs/python/tf/train/range_input_producer", "k": [], "r": "r1.5", "t": "tf.train.range_input_producer"}, {"p": "/versions/r1.5/api_docs/python/tf/train/replica_device_setter", "k": [], "r": "r1.5", "t": "tf.train.replica_device_setter"}, {"p": "/versions/r1.5/api_docs/python/tf/train/sdca_fprint", "k": [], "r": "r1.5", "t": "tf.train.sdca_fprint"}, {"p": "/versions/r1.5/api_docs/python/tf/train/sdca_optimizer", "k": [], "r": "r1.5", "t": "tf.train.sdca_optimizer"}, {"p": "/versions/r1.5/api_docs/python/tf/train/sdca_shrink_l1", "k": [], "r": "r1.5", "t": "tf.train.sdca_shrink_l1"}, {"p": "/versions/r1.5/api_docs/python/tf/train/shuffle_batch", "k": [], "r": "r1.5", "t": "tf.train.shuffle_batch"}, {"p": "/versions/r1.5/api_docs/python/tf/train/shuffle_batch_join", "k": [], "r": "r1.5", "t": "tf.train.shuffle_batch_join"}, {"p": "/versions/r1.5/api_docs/python/tf/train/slice_input_producer", "k": [], "r": "r1.5", "t": "tf.train.slice_input_producer"}, {"p": "/versions/r1.5/api_docs/python/tf/train/start_queue_runners", "k": [], "r": "r1.5", "t": "tf.train.start_queue_runners"}, {"p": "/versions/r1.5/api_docs/python/tf/train/string_input_producer", "k": [], "r": "r1.5", "t": "tf.train.string_input_producer"}, {"p": "/versions/r1.5/api_docs/python/tf/train/summary_iterator", "k": [], "r": "r1.5", "t": "tf.train.summary_iterator"}, {"p": "/versions/r1.5/api_docs/python/tf/train/update_checkpoint_state", "k": [], "r": "r1.5", "t": "tf.train.update_checkpoint_state"}, {"p": "/versions/r1.5/api_docs/python/tf/train/write_graph", "k": [], "r": "r1.5", "t": "tf.train.write_graph"}, {"p": "/versions/r1.5/api_docs/python/tf/trainable_variables", "k": [], "r": "r1.5", "t": "tf.trainable_variables"}, {"p": "/versions/r1.5/api_docs/python/tf/transpose", "k": [], "r": "r1.5", "t": "tf.transpose"}, {"p": "/versions/r1.5/api_docs/python/tf/truediv", "k": [], "r": "r1.5", "t": "tf.truediv"}, {"p": "/versions/r1.5/api_docs/python/tf/truncated_normal", "k": [], "r": "r1.5", "t": "tf.truncated_normal"}, {"p": "/versions/r1.5/api_docs/python/tf/truncated_normal_initializer", "k": ["__call__", "__init__", "from_config", "get_config"], "r": "r1.5", "t": "tf.truncated_normal_initializer"}, {"p": "/versions/r1.5/api_docs/python/tf/truncatediv", "k": [], "r": "r1.5", "t": "tf.truncatediv"}, {"p": "/versions/r1.5/api_docs/python/tf/truncatemod", "k": [], "r": "r1.5", "t": "tf.truncatemod"}, {"p": "/versions/r1.5/api_docs/python/tf/tuple", "k": [], "r": "r1.5", "t": "tf.tuple"}, {"p": "/versions/r1.5/api_docs/python/tf/uniform_unit_scaling_initializer", "k": ["__call__", "__init__", "from_config", "get_config"], "r": "r1.5", "t": "tf.uniform_unit_scaling_initializer"}, {"p": "/versions/r1.5/api_docs/python/tf/unique", "k": [], "r": "r1.5", "t": "tf.unique"}, {"p": "/versions/r1.5/api_docs/python/tf/unique_with_counts", "k": [], "r": "r1.5", "t": "tf.unique_with_counts"}, {"p": "/versions/r1.5/api_docs/python/tf/unsorted_segment_max", "k": [], "r": "r1.5", "t": "tf.unsorted_segment_max"}, {"p": "/versions/r1.5/api_docs/python/tf/unsorted_segment_sum", "k": [], "r": "r1.5", "t": "tf.unsorted_segment_sum"}, {"p": "/versions/r1.5/api_docs/python/tf/unstack", "k": [], "r": "r1.5", "t": "tf.unstack"}, {"p": "/versions/r1.5/api_docs/python/tf/user_ops", "k": [], "r": "r1.5", "t": "tf.user_ops"}, {"p": "/versions/r1.5/api_docs/python/tf/variable_axis_size_partitioner", "k": [], "r": "r1.5", "t": "tf.variable_axis_size_partitioner"}, {"p": "/versions/r1.5/api_docs/python/tf/variable_op_scope", "k": [], "r": "r1.5", "t": "tf.variable_op_scope"}, {"p": "/versions/r1.5/api_docs/python/tf/variable_scope", "k": ["__enter__", "__exit__", "__init__"], "r": "r1.5", "t": "tf.variable_scope"}, {"p": "/versions/r1.5/api_docs/python/tf/variables_initializer", "k": [], "r": "r1.5", "t": "tf.variables_initializer"}, {"p": "/versions/r1.5/api_docs/python/tf/variance_scaling_initializer", "k": ["__call__", "__init__", "from_config", "get_config"], "r": "r1.5", "t": "tf.variance_scaling_initializer"}, {"p": "/versions/r1.5/api_docs/python/tf/verify_tensor_all_finite", "k": [], "r": "r1.5", "t": "tf.verify_tensor_all_finite"}, {"p": "/versions/r1.5/api_docs/python/tf/where", "k": [], "r": "r1.5", "t": "tf.where"}, {"p": "/versions/r1.5/api_docs/python/tf/while_loop", "k": [], "r": "r1.5", "t": "tf.while_loop"}, {"p": "/versions/r1.5/api_docs/python/tf/write_file", "k": [], "r": "r1.5", "t": "tf.write_file"}, {"p": "/versions/r1.5/api_docs/python/tf/zeros", "k": [], "r": "r1.5", "t": "tf.zeros"}, {"p": "/versions/r1.5/api_docs/python/tf/zeros_initializer", "k": ["__call__", "__init__", "from_config", "get_config"], "r": "r1.5", "t": "tf.zeros_initializer"}, {"p": "/versions/r1.5/api_docs/python/tf/zeros_like", "k": [], "r": "r1.5", "t": "tf.zeros_like"}, {"p": "/versions/r1.5/api_docs/python/tf/zeta", "k": [], "r": "r1.5", "t": "tf.zeta"}, {"p": "/versions/r1.5/api_docs/python/tfdbg", "k": [], "r": "r1.5", "t": "tfdbg"}, {"p": "/versions/r1.5/api_docs/python/tfdbg/DebugDumpDir", "k": ["core_metadata", "dumped_tensor_data", "python_graph", "run_feed_keys_info", "run_fetches_info", "size", "t0", "__init__", "debug_watch_keys", "devices", "find", "find_some_path", "get_dump_sizes_bytes", "get_rel_timestamps", "get_tensor_file_paths", "get_tensors", "loaded_partition_graphs", "node_attributes", "node_device", "node_exists", "node_inputs", "node_op_type", "node_recipients", "node_traceback", "nodes", "partition_graphs", "reconstructed_non_debug_partition_graphs", "set_python_graph", "transitive_inputs", "watch_key_to_data"], "r": "r1.5", "t": "tfdbg.DebugDumpDir"}, {"p": "/versions/r1.5/api_docs/python/tfdbg/DebugTensorDatum", "k": ["debug_op", "device_name", "dump_size_bytes", "extended_timestamp", "file_path", "node_name", "output_slot", "tensor_name", "timestamp", "watch_key", "__init__", "get_tensor"], "r": "r1.5", "t": "tfdbg.DebugTensorDatum"}, {"p": "/versions/r1.5/api_docs/python/tfdbg/DumpingDebugHook", "k": ["__init__", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "r1.5", "t": "tfdbg.DumpingDebugHook"}, {"p": "/versions/r1.5/api_docs/python/tfdbg/DumpingDebugWrapperSession", "k": ["graph", "graph_def", "run_call_count", "sess_str", "session", "__enter__", "__exit__", "__init__", "as_default", "close", "increment_run_call_count", "invoke_node_stepper", "list_devices", "make_callable", "on_run_end", "on_run_start", "on_session_init", "partial_run", "partial_run_setup", "prepare_run_debug_urls", "reset", "run", "run_step_fn", "should_stop"], "r": "r1.5", "t": "tfdbg.DumpingDebugWrapperSession"}, {"p": "/versions/r1.5/api_docs/python/tfdbg/GradientsDebugger", "k": ["graph", "y_tensor", "__enter__", "__exit__", "__init__", "gradient_tensor", "gradient_tensors", "identify_gradient", "register_gradient_tensor", "watch_gradients_by_tensor_names", "watch_gradients_by_tensors"], "r": "r1.5", "t": "tfdbg.GradientsDebugger"}, {"p": "/versions/r1.5/api_docs/python/tfdbg/GrpcDebugHook", "k": ["__init__", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "r1.5", "t": "tfdbg.GrpcDebugHook"}, {"p": "/versions/r1.5/api_docs/python/tfdbg/GrpcDebugWrapperSession", "k": ["graph", "graph_def", "run_call_count", "sess_str", "session", "__enter__", "__exit__", "__init__", "as_default", "close", "increment_run_call_count", "invoke_node_stepper", "list_devices", "make_callable", "on_run_end", "on_run_start", "on_session_init", "partial_run", "partial_run_setup", "prepare_run_debug_urls", "reset", "run", "run_step_fn", "should_stop"], "r": "r1.5", "t": "tfdbg.GrpcDebugWrapperSession"}, {"p": "/versions/r1.5/api_docs/python/tfdbg/LocalCLIDebugHook", "k": ["__init__", "add_tensor_filter", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "r1.5", "t": "tfdbg.LocalCLIDebugHook"}, {"p": "/versions/r1.5/api_docs/python/tfdbg/LocalCLIDebugWrapperSession", "k": ["graph", "graph_def", "run_call_count", "sess_str", "session", "__enter__", "__exit__", "__init__", "add_tensor_filter", "as_default", "close", "increment_run_call_count", "invoke_node_stepper", "list_devices", "make_callable", "on_run_end", "on_run_start", "on_session_init", "partial_run", "partial_run_setup", "reset", "run", "run_step_fn", "should_stop"], "r": "r1.5", "t": "tfdbg.LocalCLIDebugWrapperSession"}, {"p": "/versions/r1.5/api_docs/python/tfdbg/TensorBoardDebugHook", "k": ["__init__", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "r1.5", "t": "tfdbg.TensorBoardDebugHook"}, {"p": "/versions/r1.5/api_docs/python/tfdbg/TensorBoardDebugWrapperSession", "k": ["graph", "graph_def", "run_call_count", "sess_str", "session", "__enter__", "__exit__", "__init__", "as_default", "close", "increment_run_call_count", "invoke_node_stepper", "list_devices", "make_callable", "on_run_end", "on_run_start", "on_session_init", "partial_run", "partial_run_setup", "prepare_run_debug_urls", "reset", "run", "run_step_fn", "should_stop"], "r": "r1.5", "t": "tfdbg.TensorBoardDebugWrapperSession"}, {"p": "/versions/r1.5/api_docs/python/tfdbg/WatchOptions", "k": ["__init__"], "r": "r1.5", "t": "tfdbg.WatchOptions"}, {"p": "/versions/r1.5/api_docs/python/tfdbg/add_debug_tensor_watch", "k": [], "r": "r1.5", "t": "tfdbg.add_debug_tensor_watch"}, {"p": "/versions/r1.5/api_docs/python/tfdbg/has_inf_or_nan", "k": [], "r": "r1.5", "t": "tfdbg.has_inf_or_nan"}, {"p": "/versions/r1.5/api_docs/python/tfdbg/load_tensor_from_event", "k": [], "r": "r1.5", "t": "tfdbg.load_tensor_from_event"}, {"p": "/versions/r1.5/api_docs/python/tfdbg/load_tensor_from_event_file", "k": [], "r": "r1.5", "t": "tfdbg.load_tensor_from_event_file"}, {"p": "/versions/r1.5/api_docs/python/tfdbg/reconstruct_non_debug_graph_def", "k": [], "r": "r1.5", "t": "tfdbg.reconstruct_non_debug_graph_def"}, {"p": "/versions/r1.5/api_docs/python/tfdbg/watch_graph", "k": [], "r": "r1.5", "t": "tfdbg.watch_graph"}, {"p": "/versions/r1.5/api_docs/python/tfdbg/watch_graph_with_blacklists", "k": [], "r": "r1.5", "t": "tfdbg.watch_graph_with_blacklists"}, {"p": "/versions/r1.6/api_docs/python/tf", "k": ["AUTO_REUSE", "COMPILER_VERSION", "CXX11_ABI_FLAG", "GIT_VERSION", "GRAPH_DEF_VERSION", "GRAPH_DEF_VERSION_MIN_CONSUMER", "GRAPH_DEF_VERSION_MIN_PRODUCER", "MONOLITHIC_BUILD", "QUANTIZED_DTYPES", "VERSION", "__compiler_version__", "__cxx11_abi_flag__", "__git_version__", "__monolithic_build__", "__version__", "bfloat16", "bool", "complex128", "complex64", "double", "float16", "float32", "float64", "half", "int16", "int32", "int64", "int8", "newaxis", "qint16", "qint32", "qint8", "quint16", "quint8", "resource", "string", "uint16", "uint32", "uint64", "uint8", "variant"], "r": "r1.6", "t": "tf"}, {"p": "/versions/r1.6/api_docs/python/tf/AggregationMethod", "k": ["ADD_N", "DEFAULT", "EXPERIMENTAL_ACCUMULATE_N", "EXPERIMENTAL_TREE"], "r": "r1.6", "t": "tf.AggregationMethod"}, {"p": "/versions/r1.6/api_docs/python/tf/Assert", "k": [], "r": "r1.6", "t": "tf.Assert"}, {"p": "/versions/r1.6/api_docs/python/tf/AttrValue", "k": ["ListValue"], "r": "r1.6", "t": "tf.AttrValue"}, {"p": "/versions/r1.6/api_docs/python/tf/AttrValue/ListValue", "k": [], "r": "r1.6", "t": "tf.AttrValue.ListValue"}, {"p": "/versions/r1.6/api_docs/python/tf/ConditionalAccumulator", "k": ["accumulator_ref", "dtype", "name", "__init__", "apply_grad", "num_accumulated", "set_global_step", "take_grad"], "r": "r1.6", "t": "tf.ConditionalAccumulator"}, {"p": "/versions/r1.6/api_docs/python/tf/ConditionalAccumulatorBase", "k": ["accumulator_ref", "dtype", "name", "__init__", "num_accumulated", "set_global_step"], "r": "r1.6", "t": "tf.ConditionalAccumulatorBase"}, {"p": "/versions/r1.6/api_docs/python/tf/ConfigProto", "k": ["DeviceCountEntry"], "r": "r1.6", "t": "tf.ConfigProto"}, {"p": "/versions/r1.6/api_docs/python/tf/ConfigProto/DeviceCountEntry", "k": [], "r": "r1.6", "t": "tf.ConfigProto.DeviceCountEntry"}, {"p": "/versions/r1.6/api_docs/python/tf/DType", "k": ["as_datatype_enum", "as_numpy_dtype", "base_dtype", "is_bool", "is_complex", "is_floating", "is_integer", "is_numpy_compatible", "is_quantized", "is_unsigned", "limits", "max", "min", "name", "real_dtype", "size", "__eq__", "__init__", "__int__", "__ne__", "is_compatible_with"], "r": "r1.6", "t": "tf.DType"}, {"p": "/versions/r1.6/api_docs/python/tf/DeviceSpec", "k": ["job", "replica", "task", "__init__", "from_string", "merge_from", "parse_from_string", "to_string"], "r": "r1.6", "t": "tf.DeviceSpec"}, {"p": "/versions/r1.6/api_docs/python/tf/Dimension", "k": ["value", "__add__", "__div__", "__eq__", "__floordiv__", "__ge__", "__gt__", "__index__", "__init__", "__int__", "__le__", "__long__", "__lt__", "__mod__", "__mul__", "__ne__", "__sub__", "assert_is_compatible_with", "is_compatible_with", "merge_with"], "r": "r1.6", "t": "tf.Dimension"}, {"p": "/versions/r1.6/api_docs/python/tf/Event", "k": [], "r": "r1.6", "t": "tf.Event"}, {"p": "/versions/r1.6/api_docs/python/tf/FIFOQueue", "k": ["dtypes", "name", "names", "queue_ref", "shapes", "__init__", "close", "dequeue", "dequeue_many", "dequeue_up_to", "enqueue", "enqueue_many", "from_list", "is_closed", "size"], "r": "r1.6", "t": "tf.FIFOQueue"}, {"p": "/versions/r1.6/api_docs/python/tf/FixedLenFeature", "k": ["default_value", "dtype", "shape", "__new__"], "r": "r1.6", "t": "tf.FixedLenFeature"}, {"p": "/versions/r1.6/api_docs/python/tf/FixedLenSequenceFeature", "k": ["allow_missing", "default_value", "dtype", "shape", "__new__"], "r": "r1.6", "t": "tf.FixedLenSequenceFeature"}, {"p": "/versions/r1.6/api_docs/python/tf/FixedLengthRecordReader", "k": ["reader_ref", "supports_serialize", "__init__", "num_records_produced", "num_work_units_completed", "read", "read_up_to", "reset", "restore_state", "serialize_state"], "r": "r1.6", "t": "tf.FixedLengthRecordReader"}, {"p": "/versions/r1.6/api_docs/python/tf/GPUOptions", "k": ["Experimental"], "r": "r1.6", "t": "tf.GPUOptions"}, {"p": "/versions/r1.6/api_docs/python/tf/GPUOptions/Experimental", "k": ["VirtualDevices"], "r": "r1.6", "t": "tf.GPUOptions.Experimental"}, {"p": "/versions/r1.6/api_docs/python/tf/GPUOptions/Experimental/VirtualDevices", "k": [], "r": "r1.6", "t": "tf.GPUOptions.Experimental.VirtualDevices"}, {"p": "/versions/r1.6/api_docs/python/tf/Graph", "k": ["building_function", "collections", "finalized", "graph_def_versions", "seed", "version", "__init__", "add_to_collection", "add_to_collections", "as_default", "as_graph_def", "as_graph_element", "clear_collection", "colocate_with", "container", "control_dependencies", "create_op", "device", "finalize", "get_all_collection_keys", "get_collection", "get_collection_ref", "get_name_scope", "get_operation_by_name", "get_operations", "get_tensor_by_name", "gradient_override_map", "is_feedable", "is_fetchable", "name_scope", "prevent_feeding", "prevent_fetching", "unique_name"], "r": "r1.6", "t": "tf.Graph"}, {"p": "/versions/r1.6/api_docs/python/tf/GraphDef", "k": [], "r": "r1.6", "t": "tf.GraphDef"}, {"p": "/versions/r1.6/api_docs/python/tf/GraphKeys", "k": ["ACTIVATIONS", "ASSET_FILEPATHS", "BIASES", "CONCATENATED_VARIABLES", "COND_CONTEXT", "EVAL_STEP", "GLOBAL_STEP", "GLOBAL_VARIABLES", "INIT_OP", "LOCAL_INIT_OP", "LOCAL_RESOURCES", "LOCAL_VARIABLES", "LOSSES", "METRIC_VARIABLES", "MODEL_VARIABLES", "MOVING_AVERAGE_VARIABLES", "QUEUE_RUNNERS", "READY_FOR_LOCAL_INIT_OP", "READY_OP", "REGULARIZATION_LOSSES", "RESOURCES", "SAVEABLE_OBJECTS", "SAVERS", "SUMMARIES", "SUMMARY_OP", "TABLE_INITIALIZERS", "TRAINABLE_RESOURCE_VARIABLES", "TRAINABLE_VARIABLES", "TRAIN_OP", "UPDATE_OPS", "VARIABLES", "WEIGHTS", "WHILE_CONTEXT"], "r": "r1.6", "t": "tf.GraphKeys"}, {"p": "/versions/r1.6/api_docs/python/tf/GraphOptions", "k": [], "r": "r1.6", "t": "tf.GraphOptions"}, {"p": "/versions/r1.6/api_docs/python/tf/HistogramProto", "k": [], "r": "r1.6", "t": "tf.HistogramProto"}, {"p": "/versions/r1.6/api_docs/python/tf/IdentityReader", "k": ["reader_ref", "supports_serialize", "__init__", "num_records_produced", "num_work_units_completed", "read", "read_up_to", "reset", "restore_state", "serialize_state"], "r": "r1.6", "t": "tf.IdentityReader"}, {"p": "/versions/r1.6/api_docs/python/tf/IndexedSlices", "k": ["dense_shape", "device", "dtype", "graph", "indices", "name", "op", "values", "__init__", "__neg__"], "r": "r1.6", "t": "tf.IndexedSlices"}, {"p": "/versions/r1.6/api_docs/python/tf/InteractiveSession", "k": ["graph", "graph_def", "sess_str", "__init__", "as_default", "close", "list_devices", "make_callable", "partial_run", "partial_run_setup", "run"], "r": "r1.6", "t": "tf.InteractiveSession"}, {"p": "/versions/r1.6/api_docs/python/tf/LMDBReader", "k": ["reader_ref", "supports_serialize", "__init__", "num_records_produced", "num_work_units_completed", "read", "read_up_to", "reset", "restore_state", "serialize_state"], "r": "r1.6", "t": "tf.LMDBReader"}, {"p": "/versions/r1.6/api_docs/python/tf/LogMessage", "k": ["DEBUGGING", "ERROR", "FATAL", "INFO", "Level", "UNKNOWN", "WARN"], "r": "r1.6", "t": "tf.LogMessage"}, {"p": "/versions/r1.6/api_docs/python/tf/MetaGraphDef", "k": ["CollectionDefEntry", "MetaInfoDef", "SignatureDefEntry"], "r": "r1.6", "t": "tf.MetaGraphDef"}, {"p": "/versions/r1.6/api_docs/python/tf/MetaGraphDef/CollectionDefEntry", "k": [], "r": "r1.6", "t": "tf.MetaGraphDef.CollectionDefEntry"}, {"p": "/versions/r1.6/api_docs/python/tf/MetaGraphDef/MetaInfoDef", "k": [], "r": "r1.6", "t": "tf.MetaGraphDef.MetaInfoDef"}, {"p": "/versions/r1.6/api_docs/python/tf/MetaGraphDef/SignatureDefEntry", "k": [], "r": "r1.6", "t": "tf.MetaGraphDef.SignatureDefEntry"}, {"p": "/versions/r1.6/api_docs/python/tf/NameAttrList", "k": ["AttrEntry"], "r": "r1.6", "t": "tf.NameAttrList"}, {"p": "/versions/r1.6/api_docs/python/tf/NameAttrList/AttrEntry", "k": [], "r": "r1.6", "t": "tf.NameAttrList.AttrEntry"}, {"p": "/versions/r1.6/api_docs/python/tf/NoGradient", "k": [], "r": "r1.6", "t": "tf.NoGradient"}, {"p": "/versions/r1.6/api_docs/python/tf/NodeDef", "k": ["AttrEntry"], "r": "r1.6", "t": "tf.NodeDef"}, {"p": "/versions/r1.6/api_docs/python/tf/NodeDef/AttrEntry", "k": [], "r": "r1.6", "t": "tf.NodeDef.AttrEntry"}, {"p": "/versions/r1.6/api_docs/python/tf/OpError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "r1.6", "t": "tf.OpError"}, {"p": "/versions/r1.6/api_docs/python/tf/Operation", "k": ["control_inputs", "device", "graph", "inputs", "name", "node_def", "op_def", "outputs", "traceback", "traceback_with_start_lines", "type", "__init__", "colocation_groups", "get_attr", "run", "values"], "r": "r1.6", "t": "tf.Operation"}, {"p": "/versions/r1.6/api_docs/python/tf/OptimizerOptions", "k": ["DEFAULT", "GlobalJitLevel", "L0", "L1", "Level", "OFF", "ON_1", "ON_2"], "r": "r1.6", "t": "tf.OptimizerOptions"}, {"p": "/versions/r1.6/api_docs/python/tf/PaddingFIFOQueue", "k": ["dtypes", "name", "names", "queue_ref", "shapes", "__init__", "close", "dequeue", "dequeue_many", "dequeue_up_to", "enqueue", "enqueue_many", "from_list", "is_closed", "size"], "r": "r1.6", "t": "tf.PaddingFIFOQueue"}, {"p": "/versions/r1.6/api_docs/python/tf/Print", "k": [], "r": "r1.6", "t": "tf.Print"}, {"p": "/versions/r1.6/api_docs/python/tf/PriorityQueue", "k": ["dtypes", "name", "names", "queue_ref", "shapes", "__init__", "close", "dequeue", "dequeue_many", "dequeue_up_to", "enqueue", "enqueue_many", "from_list", "is_closed", "size"], "r": "r1.6", "t": "tf.PriorityQueue"}, {"p": "/versions/r1.6/api_docs/python/tf/QueueBase", "k": ["dtypes", "name", "names", "queue_ref", "shapes", "__init__", "close", "dequeue", "dequeue_many", "dequeue_up_to", "enqueue", "enqueue_many", "from_list", "is_closed", "size"], "r": "r1.6", "t": "tf.QueueBase"}, {"p": "/versions/r1.6/api_docs/python/tf/RandomShuffleQueue", "k": ["dtypes", "name", "names", "queue_ref", "shapes", "__init__", "close", "dequeue", "dequeue_many", "dequeue_up_to", "enqueue", "enqueue_many", "from_list", "is_closed", "size"], "r": "r1.6", "t": "tf.RandomShuffleQueue"}, {"p": "/versions/r1.6/api_docs/python/tf/ReaderBase", "k": ["reader_ref", "supports_serialize", "__init__", "num_records_produced", "num_work_units_completed", "read", "read_up_to", "reset", "restore_state", "serialize_state"], "r": "r1.6", "t": "tf.ReaderBase"}, {"p": "/versions/r1.6/api_docs/python/tf/RegisterGradient", "k": ["__call__", "__init__"], "r": "r1.6", "t": "tf.RegisterGradient"}, {"p": "/versions/r1.6/api_docs/python/tf/RunMetadata", "k": [], "r": "r1.6", "t": "tf.RunMetadata"}, {"p": "/versions/r1.6/api_docs/python/tf/RunOptions", "k": ["FULL_TRACE", "HARDWARE_TRACE", "NO_TRACE", "SOFTWARE_TRACE", "TraceLevel"], "r": "r1.6", "t": "tf.RunOptions"}, {"p": "/versions/r1.6/api_docs/python/tf/Session", "k": ["graph", "graph_def", "sess_str", "__enter__", "__exit__", "__init__", "as_default", "close", "list_devices", "make_callable", "partial_run", "partial_run_setup", "reset", "run"], "r": "r1.6", "t": "tf.Session"}, {"p": "/versions/r1.6/api_docs/python/tf/SessionLog", "k": ["CHECKPOINT", "START", "STATUS_UNSPECIFIED", "STOP", "SessionStatus"], "r": "r1.6", "t": "tf.SessionLog"}, {"p": "/versions/r1.6/api_docs/python/tf/SparseConditionalAccumulator", "k": ["accumulator_ref", "dtype", "name", "__init__", "apply_grad", "apply_indexed_slices_grad", "num_accumulated", "set_global_step", "take_grad", "take_indexed_slices_grad"], "r": "r1.6", "t": "tf.SparseConditionalAccumulator"}, {"p": "/versions/r1.6/api_docs/python/tf/SparseFeature", "k": ["already_sorted", "dtype", "index_key", "size", "value_key", "__new__"], "r": "r1.6", "t": "tf.SparseFeature"}, {"p": "/versions/r1.6/api_docs/python/tf/SparseTensor", "k": ["dense_shape", "dtype", "graph", "indices", "op", "values", "__div__", "__init__", "__mul__", "__truediv__", "eval", "from_value", "get_shape"], "r": "r1.6", "t": "tf.SparseTensor"}, {"p": "/versions/r1.6/api_docs/python/tf/SparseTensorValue", "k": ["dense_shape", "indices", "values", "__new__"], "r": "r1.6", "t": "tf.SparseTensorValue"}, {"p": "/versions/r1.6/api_docs/python/tf/Summary", "k": ["Audio", "Image", "Value"], "r": "r1.6", "t": "tf.Summary"}, {"p": "/versions/r1.6/api_docs/python/tf/Summary/Audio", "k": [], "r": "r1.6", "t": "tf.Summary.Audio"}, {"p": "/versions/r1.6/api_docs/python/tf/Summary/Image", "k": [], "r": "r1.6", "t": "tf.Summary.Image"}, {"p": "/versions/r1.6/api_docs/python/tf/Summary/Value", "k": [], "r": "r1.6", "t": "tf.Summary.Value"}, {"p": "/versions/r1.6/api_docs/python/tf/SummaryMetadata", "k": ["PluginData"], "r": "r1.6", "t": "tf.SummaryMetadata"}, {"p": "/versions/r1.6/api_docs/python/tf/SummaryMetadata/PluginData", "k": [], "r": "r1.6", "t": "tf.SummaryMetadata.PluginData"}, {"p": "/versions/r1.6/api_docs/python/tf/TFRecordReader", "k": ["reader_ref", "supports_serialize", "__init__", "num_records_produced", "num_work_units_completed", "read", "read_up_to", "reset", "restore_state", "serialize_state"], "r": "r1.6", "t": "tf.TFRecordReader"}, {"p": "/versions/r1.6/api_docs/python/tf/Tensor", "k": ["device", "dtype", "graph", "name", "op", "shape", "value_index", "__abs__", "__add__", "__and__", "__bool__", "__div__", "__eq__", "__floordiv__", "__ge__", "__getitem__", "__gt__", "__init__", "__invert__", "__iter__", "__le__", "__lt__", "__matmul__", "__mod__", "__mul__", "__neg__", "__nonzero__", "__or__", "__pow__", "__radd__", "__rand__", "__rdiv__", "__rfloordiv__", "__rmatmul__", "__rmod__", "__rmul__", "__ror__", "__rpow__", "__rsub__", "__rtruediv__", "__rxor__", "__sub__", "__truediv__", "__xor__", "consumers", "eval", "get_shape", "set_shape", "OVERLOADABLE_OPERATORS", "__array_priority__"], "r": "r1.6", "t": "tf.Tensor"}, {"p": "/versions/r1.6/api_docs/python/tf/TensorArray", "k": ["dtype", "flow", "handle", "__init__", "close", "concat", "gather", "grad", "identity", "read", "scatter", "size", "split", "stack", "unstack", "write"], "r": "r1.6", "t": "tf.TensorArray"}, {"p": "/versions/r1.6/api_docs/python/tf/TensorInfo", "k": ["CooSparse"], "r": "r1.6", "t": "tf.TensorInfo"}, {"p": "/versions/r1.6/api_docs/python/tf/TensorInfo/CooSparse", "k": [], "r": "r1.6", "t": "tf.TensorInfo.CooSparse"}, {"p": "/versions/r1.6/api_docs/python/tf/TensorShape", "k": ["dims", "ndims", "__bool__", "__eq__", "__getitem__", "__init__", "__iter__", "__len__", "__ne__", "__nonzero__", "as_list", "as_proto", "assert_has_rank", "assert_is_compatible_with", "assert_is_fully_defined", "assert_same_rank", "concatenate", "is_compatible_with", "is_fully_defined", "merge_with", "most_specific_compatible_shape", "num_elements", "with_rank", "with_rank_at_least", "with_rank_at_most"], "r": "r1.6", "t": "tf.TensorShape"}, {"p": "/versions/r1.6/api_docs/python/tf/TextLineReader", "k": ["reader_ref", "supports_serialize", "__init__", "num_records_produced", "num_work_units_completed", "read", "read_up_to", "reset", "restore_state", "serialize_state"], "r": "r1.6", "t": "tf.TextLineReader"}, {"p": "/versions/r1.6/api_docs/python/tf/VarLenFeature", "k": ["dtype", "__new__"], "r": "r1.6", "t": "tf.VarLenFeature"}, {"p": "/versions/r1.6/api_docs/python/tf/Variable", "k": ["SaveSliceInfo", "constraint", "device", "dtype", "graph", "initial_value", "initializer", "name", "op", "shape", "__abs__", "__add__", "__and__", "__div__", "__floordiv__", "__ge__", "__getitem__", "__gt__", "__iadd__", "__idiv__", "__imul__", "__init__", "__invert__", "__ipow__", "__irealdiv__", "__isub__", "__iter__", "__itruediv__", "__le__", "__lt__", "__matmul__", "__mod__", "__mul__", "__neg__", "__or__", "__pow__", "__radd__", "__rand__", "__rdiv__", "__rfloordiv__", "__rmatmul__", "__rmod__", "__rmul__", "__ror__", "__rpow__", "__rsub__", "__rtruediv__", "__rxor__", "__sub__", "__truediv__", "__xor__", "assign", "assign_add", "assign_sub", "count_up_to", "eval", "from_proto", "get_shape", "initialized_value", "load", "read_value", "scatter_sub", "set_shape", "to_proto", "value", "__array_priority__"], "r": "r1.6", "t": "tf.Variable"}, {"p": "/versions/r1.6/api_docs/python/tf/Variable/SaveSliceInfo", "k": ["spec", "__init__", "to_proto"], "r": "r1.6", "t": "tf.Variable.SaveSliceInfo"}, {"p": "/versions/r1.6/api_docs/python/tf/VariableScope", "k": ["caching_device", "constraint", "custom_getter", "dtype", "initializer", "name", "original_name_scope", "partitioner", "regularizer", "reuse", "use_resource", "__init__", "get_collection", "get_variable", "global_variables", "local_variables", "reuse_variables", "set_caching_device", "set_custom_getter", "set_dtype", "set_initializer", "set_partitioner", "set_regularizer", "set_use_resource", "trainable_variables"], "r": "r1.6", "t": "tf.VariableScope"}, {"p": "/versions/r1.6/api_docs/python/tf/WholeFileReader", "k": ["reader_ref", "supports_serialize", "__init__", "num_records_produced", "num_work_units_completed", "read", "read_up_to", "reset", "restore_state", "serialize_state"], "r": "r1.6", "t": "tf.WholeFileReader"}, {"p": "/versions/r1.6/api_docs/python/tf/abs", "k": [], "r": "r1.6", "t": "tf.abs"}, {"p": "/versions/r1.6/api_docs/python/tf/accumulate_n", "k": [], "r": "r1.6", "t": "tf.accumulate_n"}, {"p": "/versions/r1.6/api_docs/python/tf/acos", "k": [], "r": "r1.6", "t": "tf.acos"}, {"p": "/versions/r1.6/api_docs/python/tf/acosh", "k": [], "r": "r1.6", "t": "tf.acosh"}, {"p": "/versions/r1.6/api_docs/python/tf/add", "k": [], "r": "r1.6", "t": "tf.add"}, {"p": "/versions/r1.6/api_docs/python/tf/add_check_numerics_ops", "k": [], "r": "r1.6", "t": "tf.add_check_numerics_ops"}, {"p": "/versions/r1.6/api_docs/python/tf/add_n", "k": [], "r": "r1.6", "t": "tf.add_n"}, {"p": "/versions/r1.6/api_docs/python/tf/add_to_collection", "k": [], "r": "r1.6", "t": "tf.add_to_collection"}, {"p": "/versions/r1.6/api_docs/python/tf/all_variables", "k": [], "r": "r1.6", "t": "tf.all_variables"}, {"p": "/versions/r1.6/api_docs/python/tf/angle", "k": [], "r": "r1.6", "t": "tf.angle"}, {"p": "/versions/r1.6/api_docs/python/tf/app", "k": [], "r": "r1.6", "t": "tf.app"}, {"p": "/versions/r1.6/api_docs/python/tf/app/run", "k": [], "r": "r1.6", "t": "tf.app.run"}, {"p": "/versions/r1.6/api_docs/python/tf/arg_max", "k": [], "r": "r1.6", "t": "tf.arg_max"}, {"p": "/versions/r1.6/api_docs/python/tf/arg_min", "k": [], "r": "r1.6", "t": "tf.arg_min"}, {"p": "/versions/r1.6/api_docs/python/tf/argmax", "k": [], "r": "r1.6", "t": "tf.argmax"}, {"p": "/versions/r1.6/api_docs/python/tf/argmin", "k": [], "r": "r1.6", "t": "tf.argmin"}, {"p": "/versions/r1.6/api_docs/python/tf/as_dtype", "k": [], "r": "r1.6", "t": "tf.as_dtype"}, {"p": "/versions/r1.6/api_docs/python/tf/as_string", "k": [], "r": "r1.6", "t": "tf.as_string"}, {"p": "/versions/r1.6/api_docs/python/tf/asin", "k": [], "r": "r1.6", "t": "tf.asin"}, {"p": "/versions/r1.6/api_docs/python/tf/asinh", "k": [], "r": "r1.6", "t": "tf.asinh"}, {"p": "/versions/r1.6/api_docs/python/tf/assert_equal", "k": [], "r": "r1.6", "t": "tf.assert_equal"}, {"p": "/versions/r1.6/api_docs/python/tf/assert_greater", "k": [], "r": "r1.6", "t": "tf.assert_greater"}, {"p": "/versions/r1.6/api_docs/python/tf/assert_greater_equal", "k": [], "r": "r1.6", "t": "tf.assert_greater_equal"}, {"p": "/versions/r1.6/api_docs/python/tf/assert_integer", "k": [], "r": "r1.6", "t": "tf.assert_integer"}, {"p": "/versions/r1.6/api_docs/python/tf/assert_less", "k": [], "r": "r1.6", "t": "tf.assert_less"}, {"p": "/versions/r1.6/api_docs/python/tf/assert_less_equal", "k": [], "r": "r1.6", "t": "tf.assert_less_equal"}, {"p": "/versions/r1.6/api_docs/python/tf/assert_near", "k": [], "r": "r1.6", "t": "tf.assert_near"}, {"p": "/versions/r1.6/api_docs/python/tf/assert_negative", "k": [], "r": "r1.6", "t": "tf.assert_negative"}, {"p": "/versions/r1.6/api_docs/python/tf/assert_non_negative", "k": [], "r": "r1.6", "t": "tf.assert_non_negative"}, {"p": "/versions/r1.6/api_docs/python/tf/assert_non_positive", "k": [], "r": "r1.6", "t": "tf.assert_non_positive"}, {"p": "/versions/r1.6/api_docs/python/tf/assert_none_equal", "k": [], "r": "r1.6", "t": "tf.assert_none_equal"}, {"p": "/versions/r1.6/api_docs/python/tf/assert_positive", "k": [], "r": "r1.6", "t": "tf.assert_positive"}, {"p": "/versions/r1.6/api_docs/python/tf/assert_proper_iterable", "k": [], "r": "r1.6", "t": "tf.assert_proper_iterable"}, {"p": "/versions/r1.6/api_docs/python/tf/assert_rank", "k": [], "r": "r1.6", "t": "tf.assert_rank"}, {"p": "/versions/r1.6/api_docs/python/tf/assert_rank_at_least", "k": [], "r": "r1.6", "t": "tf.assert_rank_at_least"}, {"p": "/versions/r1.6/api_docs/python/tf/assert_rank_in", "k": [], "r": "r1.6", "t": "tf.assert_rank_in"}, {"p": "/versions/r1.6/api_docs/python/tf/assert_same_float_dtype", "k": [], "r": "r1.6", "t": "tf.assert_same_float_dtype"}, {"p": "/versions/r1.6/api_docs/python/tf/assert_scalar", "k": [], "r": "r1.6", "t": "tf.assert_scalar"}, {"p": "/versions/r1.6/api_docs/python/tf/assert_type", "k": [], "r": "r1.6", "t": "tf.assert_type"}, {"p": "/versions/r1.6/api_docs/python/tf/assert_variables_initialized", "k": [], "r": "r1.6", "t": "tf.assert_variables_initialized"}, {"p": "/versions/r1.6/api_docs/python/tf/assign", "k": [], "r": "r1.6", "t": "tf.assign"}, {"p": "/versions/r1.6/api_docs/python/tf/assign_add", "k": [], "r": "r1.6", "t": "tf.assign_add"}, {"p": "/versions/r1.6/api_docs/python/tf/assign_sub", "k": [], "r": "r1.6", "t": "tf.assign_sub"}, {"p": "/versions/r1.6/api_docs/python/tf/atan", "k": [], "r": "r1.6", "t": "tf.atan"}, {"p": "/versions/r1.6/api_docs/python/tf/atan2", "k": [], "r": "r1.6", "t": "tf.atan2"}, {"p": "/versions/r1.6/api_docs/python/tf/atanh", "k": [], "r": "r1.6", "t": "tf.atanh"}, {"p": "/versions/r1.6/api_docs/python/tf/batch_to_space", "k": [], "r": "r1.6", "t": "tf.batch_to_space"}, {"p": "/versions/r1.6/api_docs/python/tf/batch_to_space_nd", "k": [], "r": "r1.6", "t": "tf.batch_to_space_nd"}, {"p": "/versions/r1.6/api_docs/python/tf/betainc", "k": [], "r": "r1.6", "t": "tf.betainc"}, {"p": "/versions/r1.6/api_docs/python/tf/bincount", "k": [], "r": "r1.6", "t": "tf.bincount"}, {"p": "/versions/r1.6/api_docs/python/tf/bitcast", "k": [], "r": "r1.6", "t": "tf.bitcast"}, {"p": "/versions/r1.6/api_docs/python/tf/bitwise", "k": [], "r": "r1.6", "t": "tf.bitwise"}, {"p": "/versions/r1.6/api_docs/python/tf/bitwise/bitwise_and", "k": [], "r": "r1.6", "t": "tf.bitwise.bitwise_and"}, {"p": "/versions/r1.6/api_docs/python/tf/bitwise/bitwise_or", "k": [], "r": "r1.6", "t": "tf.bitwise.bitwise_or"}, {"p": "/versions/r1.6/api_docs/python/tf/bitwise/bitwise_xor", "k": [], "r": "r1.6", "t": "tf.bitwise.bitwise_xor"}, {"p": "/versions/r1.6/api_docs/python/tf/bitwise/invert", "k": [], "r": "r1.6", "t": "tf.bitwise.invert"}, {"p": "/versions/r1.6/api_docs/python/tf/bitwise/left_shift", "k": [], "r": "r1.6", "t": "tf.bitwise.left_shift"}, {"p": "/versions/r1.6/api_docs/python/tf/bitwise/right_shift", "k": [], "r": "r1.6", "t": "tf.bitwise.right_shift"}, {"p": "/versions/r1.6/api_docs/python/tf/boolean_mask", "k": [], "r": "r1.6", "t": "tf.boolean_mask"}, {"p": "/versions/r1.6/api_docs/python/tf/broadcast_dynamic_shape", "k": [], "r": "r1.6", "t": "tf.broadcast_dynamic_shape"}, {"p": "/versions/r1.6/api_docs/python/tf/broadcast_static_shape", "k": [], "r": "r1.6", "t": "tf.broadcast_static_shape"}, {"p": "/versions/r1.6/api_docs/python/tf/case", "k": [], "r": "r1.6", "t": "tf.case"}, {"p": "/versions/r1.6/api_docs/python/tf/cast", "k": [], "r": "r1.6", "t": "tf.cast"}, {"p": "/versions/r1.6/api_docs/python/tf/ceil", "k": [], "r": "r1.6", "t": "tf.ceil"}, {"p": "/versions/r1.6/api_docs/python/tf/check_numerics", "k": [], "r": "r1.6", "t": "tf.check_numerics"}, {"p": "/versions/r1.6/api_docs/python/tf/cholesky", "k": [], "r": "r1.6", "t": "tf.cholesky"}, {"p": "/versions/r1.6/api_docs/python/tf/cholesky_solve", "k": [], "r": "r1.6", "t": "tf.cholesky_solve"}, {"p": "/versions/r1.6/api_docs/python/tf/clip_by_average_norm", "k": [], "r": "r1.6", "t": "tf.clip_by_average_norm"}, {"p": "/versions/r1.6/api_docs/python/tf/clip_by_global_norm", "k": [], "r": "r1.6", "t": "tf.clip_by_global_norm"}, {"p": "/versions/r1.6/api_docs/python/tf/clip_by_norm", "k": [], "r": "r1.6", "t": "tf.clip_by_norm"}, {"p": "/versions/r1.6/api_docs/python/tf/clip_by_value", "k": [], "r": "r1.6", "t": "tf.clip_by_value"}, {"p": "/versions/r1.6/api_docs/python/tf/colocate_with", "k": [], "r": "r1.6", "t": "tf.colocate_with"}, {"p": "/versions/r1.6/api_docs/python/tf/compat", "k": ["bytes_or_text_types", "complex_types", "integral_types", "real_types"], "r": "r1.6", "t": "tf.compat"}, {"p": "/versions/r1.6/api_docs/python/tf/compat/as_bytes", "k": [], "r": "r1.6", "t": "tf.compat.as_bytes"}, {"p": "/versions/r1.6/api_docs/python/tf/compat/as_str_any", "k": [], "r": "r1.6", "t": "tf.compat.as_str_any"}, {"p": "/versions/r1.6/api_docs/python/tf/compat/as_text", "k": [], "r": "r1.6", "t": "tf.compat.as_text"}, {"p": "/versions/r1.6/api_docs/python/tf/compat/path_to_str", "k": [], "r": "r1.6", "t": "tf.compat.path_to_str"}, {"p": "/versions/r1.6/api_docs/python/tf/complex", "k": [], "r": "r1.6", "t": "tf.complex"}, {"p": "/versions/r1.6/api_docs/python/tf/concat", "k": [], "r": "r1.6", "t": "tf.concat"}, {"p": "/versions/r1.6/api_docs/python/tf/cond", "k": [], "r": "r1.6", "t": "tf.cond"}, {"p": "/versions/r1.6/api_docs/python/tf/confusion_matrix", "k": [], "r": "r1.6", "t": "tf.confusion_matrix"}, {"p": "/versions/r1.6/api_docs/python/tf/conj", "k": [], "r": "r1.6", "t": "tf.conj"}, {"p": "/versions/r1.6/api_docs/python/tf/constant", "k": [], "r": "r1.6", "t": "tf.constant"}, {"p": "/versions/r1.6/api_docs/python/tf/constant_initializer", "k": ["__call__", "__init__", "from_config", "get_config"], "r": "r1.6", "t": "tf.constant_initializer"}, {"p": "/versions/r1.6/api_docs/python/tf/container", "k": [], "r": "r1.6", "t": "tf.container"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib", "k": [], "r": "r1.6", "t": "tf.contrib"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/batching", "k": [], "r": "r1.6", "t": "tf.contrib.batching"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/batching/batch_function", "k": [], "r": "r1.6", "t": "tf.contrib.batching.batch_function"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/bayesflow", "k": [], "r": "r1.6", "t": "tf.contrib.bayesflow"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/bayesflow/csiszar_divergence", "k": [], "r": "r1.6", "t": "tf.contrib.bayesflow.csiszar_divergence"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/bayesflow/csiszar_divergence/amari_alpha", "k": [], "r": "r1.6", "t": "tf.contrib.bayesflow.csiszar_divergence.amari_alpha"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/bayesflow/csiszar_divergence/arithmetic_geometric", "k": [], "r": "r1.6", "t": "tf.contrib.bayesflow.csiszar_divergence.arithmetic_geometric"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/bayesflow/csiszar_divergence/chi_square", "k": [], "r": "r1.6", "t": "tf.contrib.bayesflow.csiszar_divergence.chi_square"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/bayesflow/csiszar_divergence/csiszar_vimco", "k": [], "r": "r1.6", "t": "tf.contrib.bayesflow.csiszar_divergence.csiszar_vimco"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/bayesflow/csiszar_divergence/dual_csiszar_function", "k": [], "r": "r1.6", "t": "tf.contrib.bayesflow.csiszar_divergence.dual_csiszar_function"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/bayesflow/csiszar_divergence/jeffreys", "k": [], "r": "r1.6", "t": "tf.contrib.bayesflow.csiszar_divergence.jeffreys"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/bayesflow/csiszar_divergence/jensen_shannon", "k": [], "r": "r1.6", "t": "tf.contrib.bayesflow.csiszar_divergence.jensen_shannon"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/bayesflow/csiszar_divergence/kl_forward", "k": [], "r": "r1.6", "t": "tf.contrib.bayesflow.csiszar_divergence.kl_forward"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/bayesflow/csiszar_divergence/kl_reverse", "k": [], "r": "r1.6", "t": "tf.contrib.bayesflow.csiszar_divergence.kl_reverse"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/bayesflow/csiszar_divergence/log1p_abs", "k": [], "r": "r1.6", "t": "tf.contrib.bayesflow.csiszar_divergence.log1p_abs"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/bayesflow/csiszar_divergence/modified_gan", "k": [], "r": "r1.6", "t": "tf.contrib.bayesflow.csiszar_divergence.modified_gan"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/bayesflow/csiszar_divergence/monte_carlo_csiszar_f_divergence", "k": [], "r": "r1.6", "t": "tf.contrib.bayesflow.csiszar_divergence.monte_carlo_csiszar_f_divergence"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/bayesflow/csiszar_divergence/pearson", "k": [], "r": "r1.6", "t": "tf.contrib.bayesflow.csiszar_divergence.pearson"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/bayesflow/csiszar_divergence/squared_hellinger", "k": [], "r": "r1.6", "t": "tf.contrib.bayesflow.csiszar_divergence.squared_hellinger"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/bayesflow/csiszar_divergence/symmetrized_csiszar_function", "k": [], "r": "r1.6", "t": "tf.contrib.bayesflow.csiszar_divergence.symmetrized_csiszar_function"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/bayesflow/csiszar_divergence/t_power", "k": [], "r": "r1.6", "t": "tf.contrib.bayesflow.csiszar_divergence.t_power"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/bayesflow/csiszar_divergence/total_variation", "k": [], "r": "r1.6", "t": "tf.contrib.bayesflow.csiszar_divergence.total_variation"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/bayesflow/csiszar_divergence/triangular", "k": [], "r": "r1.6", "t": "tf.contrib.bayesflow.csiszar_divergence.triangular"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/bayesflow/custom_grad", "k": [], "r": "r1.6", "t": "tf.contrib.bayesflow.custom_grad"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/bayesflow/custom_grad/custom_gradient", "k": [], "r": "r1.6", "t": "tf.contrib.bayesflow.custom_grad.custom_gradient"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/bayesflow/halton_sequence", "k": [], "r": "r1.6", "t": "tf.contrib.bayesflow.halton_sequence"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/bayesflow/halton_sequence/sample", "k": [], "r": "r1.6", "t": "tf.contrib.bayesflow.halton_sequence.sample"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/bayesflow/hmc", "k": [], "r": "r1.6", "t": "tf.contrib.bayesflow.hmc"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/bayesflow/hmc/ais_chain", "k": [], "r": "r1.6", "t": "tf.contrib.bayesflow.hmc.ais_chain"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/bayesflow/hmc/chain", "k": [], "r": "r1.6", "t": "tf.contrib.bayesflow.hmc.chain"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/bayesflow/hmc/kernel", "k": [], "r": "r1.6", "t": "tf.contrib.bayesflow.hmc.kernel"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/bayesflow/hmc/leapfrog_integrator", "k": [], "r": "r1.6", "t": "tf.contrib.bayesflow.hmc.leapfrog_integrator"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/bayesflow/hmc/leapfrog_step", "k": [], "r": "r1.6", "t": "tf.contrib.bayesflow.hmc.leapfrog_step"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/bayesflow/layers", "k": [], "r": "r1.6", "t": "tf.contrib.bayesflow.layers"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/bayesflow/layers/Conv1DFlipout", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "r1.6", "t": "tf.contrib.bayesflow.layers.Conv1DFlipout"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/bayesflow/layers/Conv1DReparameterization", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "r1.6", "t": "tf.contrib.bayesflow.layers.Conv1DReparameterization"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/bayesflow/layers/Conv2DFlipout", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "r1.6", "t": "tf.contrib.bayesflow.layers.Conv2DFlipout"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/bayesflow/layers/Conv2DReparameterization", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "r1.6", "t": "tf.contrib.bayesflow.layers.Conv2DReparameterization"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/bayesflow/layers/Conv3DFlipout", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "r1.6", "t": "tf.contrib.bayesflow.layers.Conv3DFlipout"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/bayesflow/layers/Conv3DReparameterization", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "r1.6", "t": "tf.contrib.bayesflow.layers.Conv3DReparameterization"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/bayesflow/layers/DenseFlipout", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "r1.6", "t": "tf.contrib.bayesflow.layers.DenseFlipout"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/bayesflow/layers/DenseLocalReparameterization", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "r1.6", "t": "tf.contrib.bayesflow.layers.DenseLocalReparameterization"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/bayesflow/layers/DenseReparameterization", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "r1.6", "t": "tf.contrib.bayesflow.layers.DenseReparameterization"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/bayesflow/layers/conv1d_flipout", "k": [], "r": "r1.6", "t": "tf.contrib.bayesflow.layers.conv1d_flipout"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/bayesflow/layers/conv1d_reparameterization", "k": [], "r": "r1.6", "t": "tf.contrib.bayesflow.layers.conv1d_reparameterization"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/bayesflow/layers/conv2d_flipout", "k": [], "r": "r1.6", "t": "tf.contrib.bayesflow.layers.conv2d_flipout"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/bayesflow/layers/conv2d_reparameterization", "k": [], "r": "r1.6", "t": "tf.contrib.bayesflow.layers.conv2d_reparameterization"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/bayesflow/layers/conv3d_flipout", "k": [], "r": "r1.6", "t": "tf.contrib.bayesflow.layers.conv3d_flipout"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/bayesflow/layers/conv3d_reparameterization", "k": [], "r": "r1.6", "t": "tf.contrib.bayesflow.layers.conv3d_reparameterization"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/bayesflow/layers/default_loc_scale_fn", "k": [], "r": "r1.6", "t": "tf.contrib.bayesflow.layers.default_loc_scale_fn"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/bayesflow/layers/default_mean_field_normal_fn", "k": [], "r": "r1.6", "t": "tf.contrib.bayesflow.layers.default_mean_field_normal_fn"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/bayesflow/layers/dense_flipout", "k": [], "r": "r1.6", "t": "tf.contrib.bayesflow.layers.dense_flipout"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/bayesflow/layers/dense_local_reparameterization", "k": [], "r": "r1.6", "t": "tf.contrib.bayesflow.layers.dense_local_reparameterization"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/bayesflow/layers/dense_reparameterization", "k": [], "r": "r1.6", "t": "tf.contrib.bayesflow.layers.dense_reparameterization"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/bayesflow/metropolis_hastings", "k": [], "r": "r1.6", "t": "tf.contrib.bayesflow.metropolis_hastings"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/bayesflow/metropolis_hastings/evolve", "k": [], "r": "r1.6", "t": "tf.contrib.bayesflow.metropolis_hastings.evolve"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/bayesflow/metropolis_hastings/normal_random_proposal", "k": [], "r": "r1.6", "t": "tf.contrib.bayesflow.metropolis_hastings.normal_random_proposal"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/bayesflow/metropolis_hastings/uniform_random_proposal", "k": [], "r": "r1.6", "t": "tf.contrib.bayesflow.metropolis_hastings.uniform_random_proposal"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/bayesflow/monte_carlo", "k": [], "r": "r1.6", "t": "tf.contrib.bayesflow.monte_carlo"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/bayesflow/monte_carlo/expectation", "k": [], "r": "r1.6", "t": "tf.contrib.bayesflow.monte_carlo.expectation"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/bayesflow/monte_carlo/expectation_importance_sampler", "k": [], "r": "r1.6", "t": "tf.contrib.bayesflow.monte_carlo.expectation_importance_sampler"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/bayesflow/monte_carlo/expectation_importance_sampler_logspace", "k": [], "r": "r1.6", "t": "tf.contrib.bayesflow.monte_carlo.expectation_importance_sampler_logspace"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/bayesflow/optimizers", "k": [], "r": "r1.6", "t": "tf.contrib.bayesflow.optimizers"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/bayesflow/optimizers/SGLDOptimizer", "k": ["variable_scope", "__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.6", "t": "tf.contrib.bayesflow.optimizers.SGLDOptimizer"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/bayesflow/optimizers/VariationalSGDOptimizer", "k": ["variable_scope", "__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.6", "t": "tf.contrib.bayesflow.optimizers.VariationalSGDOptimizer"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/cloud", "k": [], "r": "r1.6", "t": "tf.contrib.cloud"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/cloud/BigQueryReader", "k": ["reader_ref", "supports_serialize", "__init__", "num_records_produced", "num_work_units_completed", "partitions", "read", "read_up_to", "reset", "restore_state", "serialize_state"], "r": "r1.6", "t": "tf.contrib.cloud.BigQueryReader"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/cluster_resolver", "k": [], "r": "r1.6", "t": "tf.contrib.cluster_resolver"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/cluster_resolver/ClusterResolver", "k": ["cluster_spec"], "r": "r1.6", "t": "tf.contrib.cluster_resolver.ClusterResolver"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/cluster_resolver/GceClusterResolver", "k": ["__init__", "cluster_spec"], "r": "r1.6", "t": "tf.contrib.cluster_resolver.GceClusterResolver"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/cluster_resolver/SimpleClusterResolver", "k": ["__init__", "cluster_spec"], "r": "r1.6", "t": "tf.contrib.cluster_resolver.SimpleClusterResolver"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/cluster_resolver/TPUClusterResolver", "k": ["__init__", "cluster_spec", "get_master"], "r": "r1.6", "t": "tf.contrib.cluster_resolver.TPUClusterResolver"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/cluster_resolver/UnionClusterResolver", "k": ["__init__", "cluster_spec"], "r": "r1.6", "t": "tf.contrib.cluster_resolver.UnionClusterResolver"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/coder", "k": [], "r": "r1.6", "t": "tf.contrib.coder"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/compiler", "k": [], "r": "r1.6", "t": "tf.contrib.compiler"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/copy_graph", "k": [], "r": "r1.6", "t": "tf.contrib.copy_graph"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/copy_graph/copy_op_to_graph", "k": [], "r": "r1.6", "t": "tf.contrib.copy_graph.copy_op_to_graph"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/copy_graph/copy_variable_to_graph", "k": [], "r": "r1.6", "t": "tf.contrib.copy_graph.copy_variable_to_graph"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/copy_graph/get_copied_op", "k": [], "r": "r1.6", "t": "tf.contrib.copy_graph.get_copied_op"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/crf", "k": [], "r": "r1.6", "t": "tf.contrib.crf"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/crf/CrfDecodeBackwardRnnCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.6", "t": "tf.contrib.crf.CrfDecodeBackwardRnnCell"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/crf/CrfDecodeForwardRnnCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.6", "t": "tf.contrib.crf.CrfDecodeForwardRnnCell"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/crf/CrfForwardRnnCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.6", "t": "tf.contrib.crf.CrfForwardRnnCell"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/crf/crf_binary_score", "k": [], "r": "r1.6", "t": "tf.contrib.crf.crf_binary_score"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/crf/crf_decode", "k": [], "r": "r1.6", "t": "tf.contrib.crf.crf_decode"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/crf/crf_log_likelihood", "k": [], "r": "r1.6", "t": "tf.contrib.crf.crf_log_likelihood"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/crf/crf_log_norm", "k": [], "r": "r1.6", "t": "tf.contrib.crf.crf_log_norm"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/crf/crf_sequence_score", "k": [], "r": "r1.6", "t": "tf.contrib.crf.crf_sequence_score"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/crf/crf_unary_score", "k": [], "r": "r1.6", "t": "tf.contrib.crf.crf_unary_score"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/crf/viterbi_decode", "k": [], "r": "r1.6", "t": "tf.contrib.crf.viterbi_decode"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/cudnn_rnn", "k": [], "r": "r1.6", "t": "tf.contrib.cudnn_rnn"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/cudnn_rnn/CudnnCompatibleGRUCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.6", "t": "tf.contrib.cudnn_rnn.CudnnCompatibleGRUCell"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/cudnn_rnn/CudnnCompatibleLSTMCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.6", "t": "tf.contrib.cudnn_rnn.CudnnCompatibleLSTMCell"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/cudnn_rnn/CudnnGRU", "k": ["activity_regularizer", "canonical_bias_shapes", "canonical_weight_shapes", "direction", "dtype", "graph", "input", "input_mode", "input_shape", "input_size", "losses", "name", "non_trainable_variables", "non_trainable_weights", "num_dirs", "num_layers", "num_units", "output", "output_shape", "rnn_mode", "saveable", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "state_shape"], "r": "r1.6", "t": "tf.contrib.cudnn_rnn.CudnnGRU"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/cudnn_rnn/CudnnGRUSaveable", "k": ["__init__", "restore"], "r": "r1.6", "t": "tf.contrib.cudnn_rnn.CudnnGRUSaveable"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/cudnn_rnn/CudnnLSTM", "k": ["activity_regularizer", "canonical_bias_shapes", "canonical_weight_shapes", "direction", "dtype", "graph", "input", "input_mode", "input_shape", "input_size", "losses", "name", "non_trainable_variables", "non_trainable_weights", "num_dirs", "num_layers", "num_units", "output", "output_shape", "rnn_mode", "saveable", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "state_shape"], "r": "r1.6", "t": "tf.contrib.cudnn_rnn.CudnnLSTM"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/cudnn_rnn/CudnnLSTMSaveable", "k": ["__init__", "restore"], "r": "r1.6", "t": "tf.contrib.cudnn_rnn.CudnnLSTMSaveable"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/cudnn_rnn/CudnnRNNRelu", "k": ["activity_regularizer", "canonical_bias_shapes", "canonical_weight_shapes", "direction", "dtype", "graph", "input", "input_mode", "input_shape", "input_size", "losses", "name", "non_trainable_variables", "non_trainable_weights", "num_dirs", "num_layers", "num_units", "output", "output_shape", "rnn_mode", "saveable", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "state_shape"], "r": "r1.6", "t": "tf.contrib.cudnn_rnn.CudnnRNNRelu"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/cudnn_rnn/CudnnRNNReluSaveable", "k": ["__init__", "restore"], "r": "r1.6", "t": "tf.contrib.cudnn_rnn.CudnnRNNReluSaveable"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/cudnn_rnn/CudnnRNNTanh", "k": ["activity_regularizer", "canonical_bias_shapes", "canonical_weight_shapes", "direction", "dtype", "graph", "input", "input_mode", "input_shape", "input_size", "losses", "name", "non_trainable_variables", "non_trainable_weights", "num_dirs", "num_layers", "num_units", "output", "output_shape", "rnn_mode", "saveable", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "state_shape"], "r": "r1.6", "t": "tf.contrib.cudnn_rnn.CudnnRNNTanh"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/cudnn_rnn/CudnnRNNTanhSaveable", "k": ["__init__", "restore"], "r": "r1.6", "t": "tf.contrib.cudnn_rnn.CudnnRNNTanhSaveable"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/data", "k": [], "r": "r1.6", "t": "tf.contrib.data"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/data/Counter", "k": [], "r": "r1.6", "t": "tf.contrib.data.Counter"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/data/Dataset", "k": ["output_classes", "output_shapes", "output_types", "__init__", "apply", "batch", "cache", "concatenate", "dense_to_sparse_batch", "enumerate", "filter", "flat_map", "from_generator", "from_sparse_tensor_slices", "from_tensor_slices", "from_tensors", "group_by_window", "ignore_errors", "interleave", "list_files", "make_dataset_resource", "make_initializable_iterator", "make_one_shot_iterator", "map", "padded_batch", "prefetch", "range", "repeat", "shard", "shuffle", "skip", "take", "unbatch", "zip"], "r": "r1.6", "t": "tf.contrib.data.Dataset"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/data/FixedLengthRecordDataset", "k": ["output_classes", "output_shapes", "output_types", "__init__", "apply", "batch", "cache", "concatenate", "dense_to_sparse_batch", "enumerate", "filter", "flat_map", "from_generator", "from_sparse_tensor_slices", "from_tensor_slices", "from_tensors", "group_by_window", "ignore_errors", "interleave", "list_files", "make_dataset_resource", "make_initializable_iterator", "make_one_shot_iterator", "map", "padded_batch", "prefetch", "range", "repeat", "shard", "shuffle", "skip", "take", "unbatch", "zip"], "r": "r1.6", "t": "tf.contrib.data.FixedLengthRecordDataset"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/data/TFRecordDataset", "k": ["output_classes", "output_shapes", "output_types", "__init__", "apply", "batch", "cache", "concatenate", "dense_to_sparse_batch", "enumerate", "filter", "flat_map", "from_generator", "from_sparse_tensor_slices", "from_tensor_slices", "from_tensors", "group_by_window", "ignore_errors", "interleave", "list_files", "make_dataset_resource", "make_initializable_iterator", "make_one_shot_iterator", "map", "padded_batch", "prefetch", "range", "repeat", "shard", "shuffle", "skip", "take", "unbatch", "zip"], "r": "r1.6", "t": "tf.contrib.data.TFRecordDataset"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/data/TextLineDataset", "k": ["output_classes", "output_shapes", "output_types", "__init__", "apply", "batch", "cache", "concatenate", "dense_to_sparse_batch", "enumerate", "filter", "flat_map", "from_generator", "from_sparse_tensor_slices", "from_tensor_slices", "from_tensors", "group_by_window", "ignore_errors", "interleave", "list_files", "make_dataset_resource", "make_initializable_iterator", "make_one_shot_iterator", "map", "padded_batch", "prefetch", "range", "repeat", "shard", "shuffle", "skip", "take", "unbatch", "zip"], "r": "r1.6", "t": "tf.contrib.data.TextLineDataset"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/data/batch_and_drop_remainder", "k": [], "r": "r1.6", "t": "tf.contrib.data.batch_and_drop_remainder"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/data/dense_to_sparse_batch", "k": [], "r": "r1.6", "t": "tf.contrib.data.dense_to_sparse_batch"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/data/enumerate_dataset", "k": [], "r": "r1.6", "t": "tf.contrib.data.enumerate_dataset"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/data/get_single_element", "k": [], "r": "r1.6", "t": "tf.contrib.data.get_single_element"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/data/group_by_window", "k": [], "r": "r1.6", "t": "tf.contrib.data.group_by_window"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/data/ignore_errors", "k": [], "r": "r1.6", "t": "tf.contrib.data.ignore_errors"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/data/make_saveable_from_iterator", "k": [], "r": "r1.6", "t": "tf.contrib.data.make_saveable_from_iterator"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/data/map_and_batch", "k": [], "r": "r1.6", "t": "tf.contrib.data.map_and_batch"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/data/padded_batch_and_drop_remainder", "k": [], "r": "r1.6", "t": "tf.contrib.data.padded_batch_and_drop_remainder"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/data/parallel_interleave", "k": [], "r": "r1.6", "t": "tf.contrib.data.parallel_interleave"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/data/read_batch_features", "k": [], "r": "r1.6", "t": "tf.contrib.data.read_batch_features"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/data/rejection_resample", "k": [], "r": "r1.6", "t": "tf.contrib.data.rejection_resample"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/data/scan", "k": [], "r": "r1.6", "t": "tf.contrib.data.scan"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/data/shuffle_and_repeat", "k": [], "r": "r1.6", "t": "tf.contrib.data.shuffle_and_repeat"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/data/sloppy_interleave", "k": [], "r": "r1.6", "t": "tf.contrib.data.sloppy_interleave"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/data/unbatch", "k": [], "r": "r1.6", "t": "tf.contrib.data.unbatch"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/decision_trees", "k": [], "r": "r1.6", "t": "tf.contrib.decision_trees"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/deprecated", "k": [], "r": "r1.6", "t": "tf.contrib.deprecated"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/deprecated/audio_summary", "k": [], "r": "r1.6", "t": "tf.contrib.deprecated.audio_summary"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/deprecated/histogram_summary", "k": [], "r": "r1.6", "t": "tf.contrib.deprecated.histogram_summary"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/deprecated/image_summary", "k": [], "r": "r1.6", "t": "tf.contrib.deprecated.image_summary"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/deprecated/merge_all_summaries", "k": [], "r": "r1.6", "t": "tf.contrib.deprecated.merge_all_summaries"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/deprecated/merge_summary", "k": [], "r": "r1.6", "t": "tf.contrib.deprecated.merge_summary"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/deprecated/scalar_summary", "k": [], "r": "r1.6", "t": "tf.contrib.deprecated.scalar_summary"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/distributions", "k": ["FULLY_REPARAMETERIZED", "NOT_REPARAMETERIZED"], "r": "r1.6", "t": "tf.contrib.distributions"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/distributions/Autoregressive", "k": ["allow_nan_stats", "batch_shape", "distribution0", "distribution_fn", "dtype", "event_shape", "name", "num_steps", "parameters", "reparameterization_type", "sample0", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.6", "t": "tf.contrib.distributions.Autoregressive"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/distributions/BernoulliWithSigmoidProbs", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "logits", "name", "parameters", "probs", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.6", "t": "tf.contrib.distributions.BernoulliWithSigmoidProbs"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/distributions/BetaWithSoftplusConcentration", "k": ["allow_nan_stats", "batch_shape", "concentration0", "concentration1", "dtype", "event_shape", "name", "parameters", "reparameterization_type", "total_concentration", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.6", "t": "tf.contrib.distributions.BetaWithSoftplusConcentration"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/distributions/Binomial", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "logits", "name", "parameters", "probs", "reparameterization_type", "total_count", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.6", "t": "tf.contrib.distributions.Binomial"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/distributions/Cauchy", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.6", "t": "tf.contrib.distributions.Cauchy"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/distributions/Chi2", "k": ["allow_nan_stats", "batch_shape", "concentration", "df", "dtype", "event_shape", "name", "parameters", "rate", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.6", "t": "tf.contrib.distributions.Chi2"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/distributions/Chi2WithAbsDf", "k": ["allow_nan_stats", "batch_shape", "concentration", "df", "dtype", "event_shape", "name", "parameters", "rate", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.6", "t": "tf.contrib.distributions.Chi2WithAbsDf"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/distributions/ConditionalDistribution", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "name", "parameters", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.6", "t": "tf.contrib.distributions.ConditionalDistribution"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/distributions/ConditionalTransformedDistribution", "k": ["allow_nan_stats", "batch_shape", "bijector", "distribution", "dtype", "event_shape", "name", "parameters", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.6", "t": "tf.contrib.distributions.ConditionalTransformedDistribution"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/distributions/Deterministic", "k": ["allow_nan_stats", "atol", "batch_shape", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "rtol", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.6", "t": "tf.contrib.distributions.Deterministic"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/distributions/ExpRelaxedOneHotCategorical", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "event_size", "logits", "name", "parameters", "probs", "reparameterization_type", "temperature", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.6", "t": "tf.contrib.distributions.ExpRelaxedOneHotCategorical"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/distributions/ExponentialWithSoftplusRate", "k": ["allow_nan_stats", "batch_shape", "concentration", "dtype", "event_shape", "name", "parameters", "rate", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.6", "t": "tf.contrib.distributions.ExponentialWithSoftplusRate"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/distributions/GammaWithSoftplusConcentrationRate", "k": ["allow_nan_stats", "batch_shape", "concentration", "dtype", "event_shape", "name", "parameters", "rate", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.6", "t": "tf.contrib.distributions.GammaWithSoftplusConcentrationRate"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/distributions/Geometric", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "logits", "name", "parameters", "probs", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.6", "t": "tf.contrib.distributions.Geometric"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/distributions/HalfNormal", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "name", "parameters", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.6", "t": "tf.contrib.distributions.HalfNormal"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/distributions/Independent", "k": ["allow_nan_stats", "batch_shape", "distribution", "dtype", "event_shape", "name", "parameters", "reinterpreted_batch_ndims", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.6", "t": "tf.contrib.distributions.Independent"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/distributions/InverseGamma", "k": ["allow_nan_stats", "batch_shape", "concentration", "dtype", "event_shape", "name", "parameters", "rate", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.6", "t": "tf.contrib.distributions.InverseGamma"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/distributions/InverseGammaWithSoftplusConcentrationRate", "k": ["allow_nan_stats", "batch_shape", "concentration", "dtype", "event_shape", "name", "parameters", "rate", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.6", "t": "tf.contrib.distributions.InverseGammaWithSoftplusConcentrationRate"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/distributions/LaplaceWithSoftplusScale", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.6", "t": "tf.contrib.distributions.LaplaceWithSoftplusScale"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/distributions/Logistic", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.6", "t": "tf.contrib.distributions.Logistic"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/distributions/Mixture", "k": ["allow_nan_stats", "batch_shape", "cat", "components", "dtype", "event_shape", "name", "num_components", "parameters", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "entropy_lower_bound", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.6", "t": "tf.contrib.distributions.Mixture"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/distributions/MixtureSameFamily", "k": ["allow_nan_stats", "batch_shape", "components_distribution", "dtype", "event_shape", "mixture_distribution", "name", "parameters", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.6", "t": "tf.contrib.distributions.MixtureSameFamily"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/distributions/MultivariateNormalDiag", "k": ["allow_nan_stats", "batch_shape", "bijector", "distribution", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.6", "t": "tf.contrib.distributions.MultivariateNormalDiag"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/distributions/MultivariateNormalDiagPlusLowRank", "k": ["allow_nan_stats", "batch_shape", "bijector", "distribution", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.6", "t": "tf.contrib.distributions.MultivariateNormalDiagPlusLowRank"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/distributions/MultivariateNormalDiagWithSoftplusScale", "k": ["allow_nan_stats", "batch_shape", "bijector", "distribution", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.6", "t": "tf.contrib.distributions.MultivariateNormalDiagWithSoftplusScale"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/distributions/MultivariateNormalFullCovariance", "k": ["allow_nan_stats", "batch_shape", "bijector", "distribution", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.6", "t": "tf.contrib.distributions.MultivariateNormalFullCovariance"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/distributions/MultivariateNormalTriL", "k": ["allow_nan_stats", "batch_shape", "bijector", "distribution", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.6", "t": "tf.contrib.distributions.MultivariateNormalTriL"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/distributions/NegativeBinomial", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "logits", "name", "parameters", "probs", "reparameterization_type", "total_count", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.6", "t": "tf.contrib.distributions.NegativeBinomial"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/distributions/NormalWithSoftplusScale", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.6", "t": "tf.contrib.distributions.NormalWithSoftplusScale"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/distributions/OneHotCategorical", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "event_size", "logits", "name", "parameters", "probs", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.6", "t": "tf.contrib.distributions.OneHotCategorical"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/distributions/Poisson", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "log_rate", "name", "parameters", "rate", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.6", "t": "tf.contrib.distributions.Poisson"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/distributions/PoissonLogNormalQuadratureCompound", "k": ["allow_nan_stats", "batch_shape", "distribution", "dtype", "event_shape", "loc", "mixture_distribution", "name", "parameters", "quadrature_size", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.6", "t": "tf.contrib.distributions.PoissonLogNormalQuadratureCompound"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/distributions/QuantizedDistribution", "k": ["allow_nan_stats", "batch_shape", "distribution", "dtype", "event_shape", "name", "parameters", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.6", "t": "tf.contrib.distributions.QuantizedDistribution"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/distributions/RelaxedBernoulli", "k": ["allow_nan_stats", "batch_shape", "bijector", "distribution", "dtype", "event_shape", "logits", "name", "parameters", "probs", "reparameterization_type", "temperature", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.6", "t": "tf.contrib.distributions.RelaxedBernoulli"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/distributions/RelaxedOneHotCategorical", "k": ["allow_nan_stats", "batch_shape", "bijector", "distribution", "dtype", "event_shape", "name", "parameters", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.6", "t": "tf.contrib.distributions.RelaxedOneHotCategorical"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/distributions/SinhArcsinh", "k": ["allow_nan_stats", "batch_shape", "bijector", "distribution", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "skewness", "tailweight", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.6", "t": "tf.contrib.distributions.SinhArcsinh"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/distributions/StudentTWithAbsDfSoftplusScale", "k": ["allow_nan_stats", "batch_shape", "df", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.6", "t": "tf.contrib.distributions.StudentTWithAbsDfSoftplusScale"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/distributions/TransformedDistribution", "k": ["allow_nan_stats", "batch_shape", "bijector", "distribution", "dtype", "event_shape", "name", "parameters", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.6", "t": "tf.contrib.distributions.TransformedDistribution"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/distributions/VectorDeterministic", "k": ["allow_nan_stats", "atol", "batch_shape", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "rtol", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.6", "t": "tf.contrib.distributions.VectorDeterministic"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/distributions/VectorDiffeomixture", "k": ["allow_nan_stats", "batch_shape", "distribution", "dtype", "endpoint_affine", "event_shape", "grid", "interpolated_affine", "mixture_distribution", "name", "parameters", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.6", "t": "tf.contrib.distributions.VectorDiffeomixture"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/distributions/VectorExponentialDiag", "k": ["allow_nan_stats", "batch_shape", "bijector", "distribution", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.6", "t": "tf.contrib.distributions.VectorExponentialDiag"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/distributions/VectorLaplaceDiag", "k": ["allow_nan_stats", "batch_shape", "bijector", "distribution", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.6", "t": "tf.contrib.distributions.VectorLaplaceDiag"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/distributions/VectorSinhArcsinhDiag", "k": ["allow_nan_stats", "batch_shape", "bijector", "distribution", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "skewness", "tailweight", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.6", "t": "tf.contrib.distributions.VectorSinhArcsinhDiag"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/distributions/WishartCholesky", "k": ["allow_nan_stats", "batch_shape", "cholesky_input_output_matrices", "df", "dimension", "dtype", "event_shape", "name", "parameters", "reparameterization_type", "scale_operator", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_normalization", "log_prob", "log_survival_function", "mean", "mean_log_det", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "scale", "stddev", "survival_function", "variance"], "r": "r1.6", "t": "tf.contrib.distributions.WishartCholesky"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/distributions/WishartFull", "k": ["allow_nan_stats", "batch_shape", "cholesky_input_output_matrices", "df", "dimension", "dtype", "event_shape", "name", "parameters", "reparameterization_type", "scale_operator", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_normalization", "log_prob", "log_survival_function", "mean", "mean_log_det", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "scale", "stddev", "survival_function", "variance"], "r": "r1.6", "t": "tf.contrib.distributions.WishartFull"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/distributions/assign_log_moving_mean_exp", "k": [], "r": "r1.6", "t": "tf.contrib.distributions.assign_log_moving_mean_exp"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/distributions/assign_moving_mean_variance", "k": [], "r": "r1.6", "t": "tf.contrib.distributions.assign_moving_mean_variance"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/distributions/auto_correlation", "k": [], "r": "r1.6", "t": "tf.contrib.distributions.auto_correlation"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/distributions/bijectors", "k": [], "r": "r1.6", "t": "tf.contrib.distributions.bijectors"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/distributions/bijectors/AbsoluteValue", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.6", "t": "tf.contrib.distributions.bijectors.AbsoluteValue"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/distributions/bijectors/Affine", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "scale", "shift", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.6", "t": "tf.contrib.distributions.bijectors.Affine"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/distributions/bijectors/AffineLinearOperator", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "scale", "shift", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.6", "t": "tf.contrib.distributions.bijectors.AffineLinearOperator"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/distributions/bijectors/Chain", "k": ["bijectors", "dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.6", "t": "tf.contrib.distributions.bijectors.Chain"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/distributions/bijectors/CholeskyOuterProduct", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.6", "t": "tf.contrib.distributions.bijectors.CholeskyOuterProduct"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/distributions/bijectors/ConditionalBijector", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.6", "t": "tf.contrib.distributions.bijectors.ConditionalBijector"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/distributions/bijectors/Exp", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "power", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.6", "t": "tf.contrib.distributions.bijectors.Exp"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/distributions/bijectors/Gumbel", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "loc", "name", "scale", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.6", "t": "tf.contrib.distributions.bijectors.Gumbel"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/distributions/bijectors/Inline", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.6", "t": "tf.contrib.distributions.bijectors.Inline"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/distributions/bijectors/Invert", "k": ["bijector", "dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.6", "t": "tf.contrib.distributions.bijectors.Invert"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/distributions/bijectors/MaskedAutoregressiveFlow", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.6", "t": "tf.contrib.distributions.bijectors.MaskedAutoregressiveFlow"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/distributions/bijectors/Permute", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "permutation", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.6", "t": "tf.contrib.distributions.bijectors.Permute"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/distributions/bijectors/PowerTransform", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "power", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.6", "t": "tf.contrib.distributions.bijectors.PowerTransform"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/distributions/bijectors/RealNVP", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.6", "t": "tf.contrib.distributions.bijectors.RealNVP"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/distributions/bijectors/Reshape", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.6", "t": "tf.contrib.distributions.bijectors.Reshape"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/distributions/bijectors/Sigmoid", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.6", "t": "tf.contrib.distributions.bijectors.Sigmoid"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/distributions/bijectors/SigmoidCentered", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.6", "t": "tf.contrib.distributions.bijectors.SigmoidCentered"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/distributions/bijectors/SinhArcsinh", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "skewness", "tailweight", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.6", "t": "tf.contrib.distributions.bijectors.SinhArcsinh"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/distributions/bijectors/SoftmaxCentered", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.6", "t": "tf.contrib.distributions.bijectors.SoftmaxCentered"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/distributions/bijectors/Softplus", "k": ["dtype", "event_ndims", "graph_parents", "hinge_softness", "is_constant_jacobian", "name", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.6", "t": "tf.contrib.distributions.bijectors.Softplus"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/distributions/bijectors/masked_autoregressive_default_template", "k": [], "r": "r1.6", "t": "tf.contrib.distributions.bijectors.masked_autoregressive_default_template"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/distributions/bijectors/masked_dense", "k": [], "r": "r1.6", "t": "tf.contrib.distributions.bijectors.masked_dense"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/distributions/bijectors/real_nvp_default_template", "k": [], "r": "r1.6", "t": "tf.contrib.distributions.bijectors.real_nvp_default_template"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/distributions/estimator_head_distribution_regression", "k": [], "r": "r1.6", "t": "tf.contrib.distributions.estimator_head_distribution_regression"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/distributions/fill_triangular", "k": [], "r": "r1.6", "t": "tf.contrib.distributions.fill_triangular"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/distributions/matrix_diag_transform", "k": [], "r": "r1.6", "t": "tf.contrib.distributions.matrix_diag_transform"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/distributions/moving_mean_variance", "k": [], "r": "r1.6", "t": "tf.contrib.distributions.moving_mean_variance"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/distributions/normal_conjugates_known_scale_posterior", "k": [], "r": "r1.6", "t": "tf.contrib.distributions.normal_conjugates_known_scale_posterior"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/distributions/normal_conjugates_known_scale_predictive", "k": [], "r": "r1.6", "t": "tf.contrib.distributions.normal_conjugates_known_scale_predictive"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/distributions/percentile", "k": [], "r": "r1.6", "t": "tf.contrib.distributions.percentile"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/distributions/quadrature_scheme_lognormal_gauss_hermite", "k": [], "r": "r1.6", "t": "tf.contrib.distributions.quadrature_scheme_lognormal_gauss_hermite"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/distributions/quadrature_scheme_lognormal_quantiles", "k": [], "r": "r1.6", "t": "tf.contrib.distributions.quadrature_scheme_lognormal_quantiles"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/distributions/quadrature_scheme_softmaxnormal_gauss_hermite", "k": [], "r": "r1.6", "t": "tf.contrib.distributions.quadrature_scheme_softmaxnormal_gauss_hermite"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/distributions/quadrature_scheme_softmaxnormal_quantiles", "k": [], "r": "r1.6", "t": "tf.contrib.distributions.quadrature_scheme_softmaxnormal_quantiles"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/distributions/reduce_weighted_logsumexp", "k": [], "r": "r1.6", "t": "tf.contrib.distributions.reduce_weighted_logsumexp"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/distributions/softplus_inverse", "k": [], "r": "r1.6", "t": "tf.contrib.distributions.softplus_inverse"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/distributions/tridiag", "k": [], "r": "r1.6", "t": "tf.contrib.distributions.tridiag"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/eager", "k": ["DEVICE_PLACEMENT_EXPLICIT", "DEVICE_PLACEMENT_SILENT", "DEVICE_PLACEMENT_WARN"], "r": "r1.6", "t": "tf.contrib.eager"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/eager/EagerVariableStore", "k": ["__init__", "as_default", "copy", "non_trainable_variables", "trainable_variables", "variables"], "r": "r1.6", "t": "tf.contrib.eager.EagerVariableStore"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/eager/GradientTape", "k": ["__enter__", "__exit__", "__init__", "gradient", "watch"], "r": "r1.6", "t": "tf.contrib.eager.GradientTape"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/eager/IsolateTest", "k": ["__enter__", "__exit__", "__init__"], "r": "r1.6", "t": "tf.contrib.eager.IsolateTest"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/eager/Iterator", "k": ["output_classes", "output_shapes", "output_types", "__init__", "__iter__", "__next__", "get_next", "next"], "r": "r1.6", "t": "tf.contrib.eager.Iterator"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/eager/Network", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "layers", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_layer", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "track_layer"], "r": "r1.6", "t": "tf.contrib.eager.Network"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/eager/Saver", "k": ["__init__", "restore", "save"], "r": "r1.6", "t": "tf.contrib.eager.Saver"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/eager/Sequential", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "layers", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_layer", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "track_layer"], "r": "r1.6", "t": "tf.contrib.eager.Sequential"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/eager/Variable", "k": ["SaveSliceInfo", "constraint", "create", "device", "dtype", "graph", "handle", "initial_value", "initializer", "name", "op", "shape", "__abs__", "__add__", "__and__", "__bool__", "__div__", "__floordiv__", "__ge__", "__getitem__", "__gt__", "__iadd__", "__idiv__", "__imul__", "__init__", "__invert__", "__ipow__", "__irealdiv__", "__isub__", "__iter__", "__itruediv__", "__le__", "__lt__", "__matmul__", "__mod__", "__mul__", "__neg__", "__nonzero__", "__or__", "__pow__", "__radd__", "__rand__", "__rdiv__", "__rfloordiv__", "__rmatmul__", "__rmod__", "__rmul__", "__ror__", "__rpow__", "__rsub__", "__rtruediv__", "__rxor__", "__sub__", "__truediv__", "__xor__", "assign", "assign_add", "assign_sub", "count_up_to", "eval", "from_proto", "get_shape", "initialized_value", "load", "numpy", "read_value", "scatter_sub", "set_shape", "sparse_read", "to_proto", "value", "__array_priority__"], "r": "r1.6", "t": "tf.contrib.eager.Variable"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/eager/add_execution_callback", "k": [], "r": "r1.6", "t": "tf.contrib.eager.add_execution_callback"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/eager/clear_execution_callbacks", "k": [], "r": "r1.6", "t": "tf.contrib.eager.clear_execution_callbacks"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/eager/custom_gradient", "k": [], "r": "r1.6", "t": "tf.contrib.eager.custom_gradient"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/eager/defun", "k": [], "r": "r1.6", "t": "tf.contrib.eager.defun"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/eager/enable_eager_execution", "k": [], "r": "r1.6", "t": "tf.contrib.eager.enable_eager_execution"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/eager/get_optimizer_variables", "k": [], "r": "r1.6", "t": "tf.contrib.eager.get_optimizer_variables"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/eager/gradients_function", "k": [], "r": "r1.6", "t": "tf.contrib.eager.gradients_function"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/eager/implicit_gradients", "k": [], "r": "r1.6", "t": "tf.contrib.eager.implicit_gradients"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/eager/implicit_value_and_gradients", "k": [], "r": "r1.6", "t": "tf.contrib.eager.implicit_value_and_gradients"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/eager/in_eager_mode", "k": [], "r": "r1.6", "t": "tf.contrib.eager.in_eager_mode"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/eager/in_graph_mode", "k": [], "r": "r1.6", "t": "tf.contrib.eager.in_graph_mode"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/eager/inf_callback", "k": [], "r": "r1.6", "t": "tf.contrib.eager.inf_callback"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/eager/inf_nan_callback", "k": [], "r": "r1.6", "t": "tf.contrib.eager.inf_nan_callback"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/eager/list_devices", "k": [], "r": "r1.6", "t": "tf.contrib.eager.list_devices"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/eager/make_template", "k": [], "r": "r1.6", "t": "tf.contrib.eager.make_template"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/eager/metrics", "k": [], "r": "r1.6", "t": "tf.contrib.eager.metrics"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/eager/metrics/Accuracy", "k": ["name", "variables", "__call__", "__init__", "add_variable", "aggregate", "build", "call", "init_variables", "result", "value"], "r": "r1.6", "t": "tf.contrib.eager.metrics.Accuracy"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/eager/metrics/Mean", "k": ["name", "variables", "__call__", "__init__", "add_variable", "aggregate", "build", "call", "init_variables", "result", "value"], "r": "r1.6", "t": "tf.contrib.eager.metrics.Mean"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/eager/metrics/Metric", "k": ["name", "variables", "__call__", "__init__", "add_variable", "aggregate", "build", "call", "init_variables", "result", "value"], "r": "r1.6", "t": "tf.contrib.eager.metrics.Metric"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/eager/nan_callback", "k": [], "r": "r1.6", "t": "tf.contrib.eager.nan_callback"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/eager/num_gpus", "k": [], "r": "r1.6", "t": "tf.contrib.eager.num_gpus"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/eager/py_func", "k": [], "r": "r1.6", "t": "tf.contrib.eager.py_func"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/eager/restore_network_checkpoint", "k": [], "r": "r1.6", "t": "tf.contrib.eager.restore_network_checkpoint"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/eager/restore_variables_on_create", "k": [], "r": "r1.6", "t": "tf.contrib.eager.restore_variables_on_create"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/eager/run", "k": [], "r": "r1.6", "t": "tf.contrib.eager.run"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/eager/run_test_in_graph_and_eager_modes", "k": [], "r": "r1.6", "t": "tf.contrib.eager.run_test_in_graph_and_eager_modes"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/eager/save_network_checkpoint", "k": [], "r": "r1.6", "t": "tf.contrib.eager.save_network_checkpoint"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/eager/seterr", "k": [], "r": "r1.6", "t": "tf.contrib.eager.seterr"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/eager/value_and_gradients_function", "k": [], "r": "r1.6", "t": "tf.contrib.eager.value_and_gradients_function"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/estimator", "k": [], "r": "r1.6", "t": "tf.contrib.estimator"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/estimator/DNNEstimator", "k": ["config", "model_dir", "model_fn", "params", "__init__", "evaluate", "export_savedmodel", "get_variable_names", "get_variable_value", "latest_checkpoint", "predict", "train"], "r": "r1.6", "t": "tf.contrib.estimator.DNNEstimator"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/estimator/DNNLinearCombinedEstimator", "k": ["config", "model_dir", "model_fn", "params", "__init__", "evaluate", "export_savedmodel", "get_variable_names", "get_variable_value", "latest_checkpoint", "predict", "train"], "r": "r1.6", "t": "tf.contrib.estimator.DNNLinearCombinedEstimator"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/estimator/LinearEstimator", "k": ["config", "model_dir", "model_fn", "params", "__init__", "evaluate", "export_savedmodel", "get_variable_names", "get_variable_value", "latest_checkpoint", "predict", "train"], "r": "r1.6", "t": "tf.contrib.estimator.LinearEstimator"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/estimator/TowerOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "has_been_used", "minimize", "variables", "COLLECTION_FOR_GRAPH_STATES", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.6", "t": "tf.contrib.estimator.TowerOptimizer"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/estimator/add_metrics", "k": [], "r": "r1.6", "t": "tf.contrib.estimator.add_metrics"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/estimator/binary_classification_head", "k": [], "r": "r1.6", "t": "tf.contrib.estimator.binary_classification_head"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/estimator/call_logit_fn", "k": [], "r": "r1.6", "t": "tf.contrib.estimator.call_logit_fn"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/estimator/clip_gradients_by_norm", "k": [], "r": "r1.6", "t": "tf.contrib.estimator.clip_gradients_by_norm"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/estimator/dnn_logit_fn_builder", "k": [], "r": "r1.6", "t": "tf.contrib.estimator.dnn_logit_fn_builder"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/estimator/forward_features", "k": [], "r": "r1.6", "t": "tf.contrib.estimator.forward_features"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/estimator/linear_logit_fn_builder", "k": [], "r": "r1.6", "t": "tf.contrib.estimator.linear_logit_fn_builder"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/estimator/multi_class_head", "k": [], "r": "r1.6", "t": "tf.contrib.estimator.multi_class_head"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/estimator/multi_head", "k": [], "r": "r1.6", "t": "tf.contrib.estimator.multi_head"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/estimator/multi_label_head", "k": [], "r": "r1.6", "t": "tf.contrib.estimator.multi_label_head"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/estimator/regression_head", "k": [], "r": "r1.6", "t": "tf.contrib.estimator.regression_head"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/estimator/replicate_model_fn", "k": [], "r": "r1.6", "t": "tf.contrib.estimator.replicate_model_fn"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/factorization", "k": ["COSINE_DISTANCE", "KMEANS_PLUS_PLUS_INIT", "RANDOM_INIT", "SQUARED_EUCLIDEAN_DISTANCE"], "r": "r1.6", "t": "tf.contrib.factorization"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/factorization/GMM", "k": ["config", "model_dir", "__init__", "clusters", "covariances", "evaluate", "export", "export_savedmodel", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "predict_assignments", "score", "set_params", "weights", "ALL_SCORES", "ASSIGNMENTS", "SCORES"], "r": "r1.6", "t": "tf.contrib.factorization.GMM"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/factorization/GmmAlgorithm", "k": ["__init__", "alphas", "assignments", "clusters", "covariances", "init_ops", "is_initialized", "scores", "training_ops", "CLUSTERS_COVS_VARIABLE", "CLUSTERS_VARIABLE", "CLUSTERS_WEIGHT"], "r": "r1.6", "t": "tf.contrib.factorization.GmmAlgorithm"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/factorization/KMeans", "k": ["__init__", "training_graph"], "r": "r1.6", "t": "tf.contrib.factorization.KMeans"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/factorization/KMeansClustering", "k": ["config", "model_dir", "model_fn", "params", "__init__", "cluster_centers", "evaluate", "export_savedmodel", "get_variable_names", "get_variable_value", "latest_checkpoint", "predict", "predict_cluster_index", "score", "train", "transform", "ALL_DISTANCES", "CLUSTER_INDEX", "COSINE_DISTANCE", "KMEANS_PLUS_PLUS_INIT", "RANDOM_INIT", "SCORE", "SQUARED_EUCLIDEAN_DISTANCE"], "r": "r1.6", "t": "tf.contrib.factorization.KMeansClustering"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/factorization/WALSMatrixFactorization", "k": ["config", "model_dir", "__init__", "evaluate", "export", "export_savedmodel", "fit", "get_col_factors", "get_params", "get_projections", "get_row_factors", "get_variable_names", "get_variable_value", "partial_fit", "predict", "set_params", "COMPLETED_SWEEPS", "INPUT_COLS", "INPUT_ROWS", "LOSS", "PROJECTION_RESULT", "PROJECTION_WEIGHTS", "PROJECT_ROW", "RWSE"], "r": "r1.6", "t": "tf.contrib.factorization.WALSMatrixFactorization"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/factorization/WALSModel", "k": ["col_factors", "col_update_prep_gramian_op", "col_weights", "initialize_col_update_op", "initialize_op", "initialize_row_update_op", "row_factors", "row_update_prep_gramian_op", "row_weights", "worker_init", "__init__", "project_col_factors", "project_row_factors", "scatter_update", "update_col_factors", "update_row_factors"], "r": "r1.6", "t": "tf.contrib.factorization.WALSModel"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/factorization/gmm", "k": [], "r": "r1.6", "t": "tf.contrib.factorization.gmm"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/ffmpeg", "k": [], "r": "r1.6", "t": "tf.contrib.ffmpeg"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/ffmpeg/decode_audio", "k": [], "r": "r1.6", "t": "tf.contrib.ffmpeg.decode_audio"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/ffmpeg/decode_video", "k": [], "r": "r1.6", "t": "tf.contrib.ffmpeg.decode_video"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/ffmpeg/encode_audio", "k": [], "r": "r1.6", "t": "tf.contrib.ffmpeg.encode_audio"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/framework", "k": [], "r": "r1.6", "t": "tf.contrib.framework"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/framework/CriticalSection", "k": ["name", "__init__", "execute"], "r": "r1.6", "t": "tf.contrib.framework.CriticalSection"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/framework/VariableDeviceChooser", "k": ["__call__", "__init__"], "r": "r1.6", "t": "tf.contrib.framework.VariableDeviceChooser"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/framework/add_arg_scope", "k": [], "r": "r1.6", "t": "tf.contrib.framework.add_arg_scope"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/framework/add_model_variable", "k": [], "r": "r1.6", "t": "tf.contrib.framework.add_model_variable"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/framework/arg_scope", "k": [], "r": "r1.6", "t": "tf.contrib.framework.arg_scope"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/framework/arg_scoped_arguments", "k": [], "r": "r1.6", "t": "tf.contrib.framework.arg_scoped_arguments"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/framework/assert_global_step", "k": [], "r": "r1.6", "t": "tf.contrib.framework.assert_global_step"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/framework/assert_or_get_global_step", "k": [], "r": "r1.6", "t": "tf.contrib.framework.assert_or_get_global_step"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/framework/assert_scalar_int", "k": [], "r": "r1.6", "t": "tf.contrib.framework.assert_scalar_int"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/framework/assign_from_checkpoint", "k": [], "r": "r1.6", "t": "tf.contrib.framework.assign_from_checkpoint"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/framework/assign_from_checkpoint_fn", "k": [], "r": "r1.6", "t": "tf.contrib.framework.assign_from_checkpoint_fn"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/framework/assign_from_values", "k": [], "r": "r1.6", "t": "tf.contrib.framework.assign_from_values"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/framework/assign_from_values_fn", "k": [], "r": "r1.6", "t": "tf.contrib.framework.assign_from_values_fn"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/framework/create_global_step", "k": [], "r": "r1.6", "t": "tf.contrib.framework.create_global_step"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/framework/current_arg_scope", "k": [], "r": "r1.6", "t": "tf.contrib.framework.current_arg_scope"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/framework/deprecated", "k": [], "r": "r1.6", "t": "tf.contrib.framework.deprecated"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/framework/deprecated_arg_values", "k": [], "r": "r1.6", "t": "tf.contrib.framework.deprecated_arg_values"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/framework/deprecated_args", "k": [], "r": "r1.6", "t": "tf.contrib.framework.deprecated_args"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/framework/filter_variables", "k": [], "r": "r1.6", "t": "tf.contrib.framework.filter_variables"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/framework/fuse_op", "k": [], "r": "r1.6", "t": "tf.contrib.framework.fuse_op"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/framework/get_global_step", "k": [], "r": "r1.6", "t": "tf.contrib.framework.get_global_step"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/framework/get_graph_from_inputs", "k": [], "r": "r1.6", "t": "tf.contrib.framework.get_graph_from_inputs"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/framework/get_local_variables", "k": [], "r": "r1.6", "t": "tf.contrib.framework.get_local_variables"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/framework/get_model_variables", "k": [], "r": "r1.6", "t": "tf.contrib.framework.get_model_variables"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/framework/get_name_scope", "k": [], "r": "r1.6", "t": "tf.contrib.framework.get_name_scope"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/framework/get_or_create_global_step", "k": [], "r": "r1.6", "t": "tf.contrib.framework.get_or_create_global_step"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/framework/get_trainable_variables", "k": [], "r": "r1.6", "t": "tf.contrib.framework.get_trainable_variables"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/framework/get_unique_variable", "k": [], "r": "r1.6", "t": "tf.contrib.framework.get_unique_variable"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/framework/get_variable_full_name", "k": [], "r": "r1.6", "t": "tf.contrib.framework.get_variable_full_name"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/framework/get_variables", "k": [], "r": "r1.6", "t": "tf.contrib.framework.get_variables"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/framework/get_variables_by_name", "k": [], "r": "r1.6", "t": "tf.contrib.framework.get_variables_by_name"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/framework/get_variables_by_suffix", "k": [], "r": "r1.6", "t": "tf.contrib.framework.get_variables_by_suffix"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/framework/get_variables_to_restore", "k": [], "r": "r1.6", "t": "tf.contrib.framework.get_variables_to_restore"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/framework/global_variable", "k": [], "r": "r1.6", "t": "tf.contrib.framework.global_variable"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/framework/has_arg_scope", "k": [], "r": "r1.6", "t": "tf.contrib.framework.has_arg_scope"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/framework/init_from_checkpoint", "k": [], "r": "r1.6", "t": "tf.contrib.framework.init_from_checkpoint"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/framework/is_tensor", "k": [], "r": "r1.6", "t": "tf.contrib.framework.is_tensor"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/framework/list_variables", "k": [], "r": "r1.6", "t": "tf.contrib.framework.list_variables"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/framework/load_and_remap_matrix_initializer", "k": [], "r": "r1.6", "t": "tf.contrib.framework.load_and_remap_matrix_initializer"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/framework/load_checkpoint", "k": [], "r": "r1.6", "t": "tf.contrib.framework.load_checkpoint"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/framework/load_embedding_initializer", "k": [], "r": "r1.6", "t": "tf.contrib.framework.load_embedding_initializer"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/framework/load_linear_multiclass_bias_initializer", "k": [], "r": "r1.6", "t": "tf.contrib.framework.load_linear_multiclass_bias_initializer"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/framework/load_variable", "k": [], "r": "r1.6", "t": "tf.contrib.framework.load_variable"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/framework/load_variable_slot_initializer", "k": [], "r": "r1.6", "t": "tf.contrib.framework.load_variable_slot_initializer"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/framework/local_variable", "k": [], "r": "r1.6", "t": "tf.contrib.framework.local_variable"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/framework/model_variable", "k": [], "r": "r1.6", "t": "tf.contrib.framework.model_variable"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/framework/nest", "k": [], "r": "r1.6", "t": "tf.contrib.framework.nest"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/framework/nest/assert_same_structure", "k": [], "r": "r1.6", "t": "tf.contrib.framework.nest.assert_same_structure"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/framework/nest/assert_shallow_structure", "k": [], "r": "r1.6", "t": "tf.contrib.framework.nest.assert_shallow_structure"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/framework/nest/flatten", "k": [], "r": "r1.6", "t": "tf.contrib.framework.nest.flatten"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/framework/nest/flatten_dict_items", "k": [], "r": "r1.6", "t": "tf.contrib.framework.nest.flatten_dict_items"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/framework/nest/flatten_up_to", "k": [], "r": "r1.6", "t": "tf.contrib.framework.nest.flatten_up_to"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/framework/nest/flatten_with_joined_string_paths", "k": [], "r": "r1.6", "t": "tf.contrib.framework.nest.flatten_with_joined_string_paths"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/framework/nest/get_traverse_shallow_structure", "k": [], "r": "r1.6", "t": "tf.contrib.framework.nest.get_traverse_shallow_structure"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/framework/nest/is_sequence", "k": [], "r": "r1.6", "t": "tf.contrib.framework.nest.is_sequence"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/framework/nest/map_structure", "k": [], "r": "r1.6", "t": "tf.contrib.framework.nest.map_structure"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/framework/nest/map_structure_up_to", "k": [], "r": "r1.6", "t": "tf.contrib.framework.nest.map_structure_up_to"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/framework/nest/pack_sequence_as", "k": [], "r": "r1.6", "t": "tf.contrib.framework.nest.pack_sequence_as"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/framework/nest/yield_flat_paths", "k": [], "r": "r1.6", "t": "tf.contrib.framework.nest.yield_flat_paths"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/framework/prepend_name_scope", "k": [], "r": "r1.6", "t": "tf.contrib.framework.prepend_name_scope"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/framework/py_func", "k": [], "r": "r1.6", "t": "tf.contrib.framework.py_func"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/framework/reduce_sum_n", "k": [], "r": "r1.6", "t": "tf.contrib.framework.reduce_sum_n"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/framework/remove_squeezable_dimensions", "k": [], "r": "r1.6", "t": "tf.contrib.framework.remove_squeezable_dimensions"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/framework/sort", "k": [], "r": "r1.6", "t": "tf.contrib.framework.sort"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/framework/strip_name_scope", "k": [], "r": "r1.6", "t": "tf.contrib.framework.strip_name_scope"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/framework/variable", "k": [], "r": "r1.6", "t": "tf.contrib.framework.variable"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/framework/with_same_shape", "k": [], "r": "r1.6", "t": "tf.contrib.framework.with_same_shape"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/framework/with_shape", "k": [], "r": "r1.6", "t": "tf.contrib.framework.with_shape"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/framework/zero_initializer", "k": [], "r": "r1.6", "t": "tf.contrib.framework.zero_initializer"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/gan", "k": [], "r": "r1.6", "t": "tf.contrib.gan"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/gan/ACGANModel", "k": ["discriminator_fn", "discriminator_gen_classification_logits", "discriminator_gen_outputs", "discriminator_real_classification_logits", "discriminator_real_outputs", "discriminator_scope", "discriminator_variables", "generated_data", "generator_fn", "generator_inputs", "generator_scope", "generator_variables", "one_hot_labels", "real_data", "__new__"], "r": "r1.6", "t": "tf.contrib.gan.ACGANModel"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/gan/CycleGANLoss", "k": ["loss_x2y", "loss_y2x", "__new__"], "r": "r1.6", "t": "tf.contrib.gan.CycleGANLoss"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/gan/CycleGANModel", "k": ["model_x2y", "model_y2x", "reconstructed_x", "reconstructed_y", "__new__"], "r": "r1.6", "t": "tf.contrib.gan.CycleGANModel"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/gan/GANLoss", "k": ["discriminator_loss", "generator_loss", "__new__"], "r": "r1.6", "t": "tf.contrib.gan.GANLoss"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/gan/GANModel", "k": ["discriminator_fn", "discriminator_gen_outputs", "discriminator_real_outputs", "discriminator_scope", "discriminator_variables", "generated_data", "generator_fn", "generator_inputs", "generator_scope", "generator_variables", "real_data", "__new__"], "r": "r1.6", "t": "tf.contrib.gan.GANModel"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/gan/GANTrainOps", "k": ["discriminator_train_op", "generator_train_op", "global_step_inc_op", "__new__"], "r": "r1.6", "t": "tf.contrib.gan.GANTrainOps"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/gan/GANTrainSteps", "k": ["discriminator_train_steps", "generator_train_steps", "__new__"], "r": "r1.6", "t": "tf.contrib.gan.GANTrainSteps"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/gan/InfoGANModel", "k": ["discriminator_and_aux_fn", "discriminator_fn", "discriminator_gen_outputs", "discriminator_real_outputs", "discriminator_scope", "discriminator_variables", "generated_data", "generator_fn", "generator_inputs", "generator_scope", "generator_variables", "predicted_distributions", "real_data", "structured_generator_inputs", "__new__"], "r": "r1.6", "t": "tf.contrib.gan.InfoGANModel"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/gan/RunTrainOpsHook", "k": ["__init__", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "r1.6", "t": "tf.contrib.gan.RunTrainOpsHook"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/gan/acgan_model", "k": [], "r": "r1.6", "t": "tf.contrib.gan.acgan_model"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/gan/cyclegan_loss", "k": [], "r": "r1.6", "t": "tf.contrib.gan.cyclegan_loss"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/gan/cyclegan_model", "k": [], "r": "r1.6", "t": "tf.contrib.gan.cyclegan_model"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/gan/estimator", "k": [], "r": "r1.6", "t": "tf.contrib.gan.estimator"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/gan/estimator/GANEstimator", "k": ["config", "model_dir", "model_fn", "params", "__init__", "evaluate", "export_savedmodel", "get_variable_names", "get_variable_value", "latest_checkpoint", "predict", "train"], "r": "r1.6", "t": "tf.contrib.gan.estimator.GANEstimator"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/gan/estimator/GANHead", "k": ["logits_dimension", "name", "__init__", "create_estimator_spec", "create_loss"], "r": "r1.6", "t": "tf.contrib.gan.estimator.GANHead"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/gan/estimator/SummaryType", "k": ["IMAGES", "IMAGE_COMPARISON", "NONE", "VARIABLES", "__members__"], "r": "r1.6", "t": "tf.contrib.gan.estimator.SummaryType"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/gan/estimator/gan_estimator", "k": ["__all__"], "r": "r1.6", "t": "tf.contrib.gan.estimator.gan_estimator"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/gan/estimator/gan_head", "k": [], "r": "r1.6", "t": "tf.contrib.gan.estimator.gan_head"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/gan/estimator/head", "k": ["__all__"], "r": "r1.6", "t": "tf.contrib.gan.estimator.head"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/gan/eval", "k": ["INCEPTION_DEFAULT_IMAGE_SIZE", "frechet_inception_distance", "inception_score"], "r": "r1.6", "t": "tf.contrib.gan.eval"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/gan/eval/add_gan_model_image_summaries", "k": [], "r": "r1.6", "t": "tf.contrib.gan.eval.add_gan_model_image_summaries"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/gan/eval/add_gan_model_summaries", "k": [], "r": "r1.6", "t": "tf.contrib.gan.eval.add_gan_model_summaries"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/gan/eval/add_image_comparison_summaries", "k": [], "r": "r1.6", "t": "tf.contrib.gan.eval.add_image_comparison_summaries"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/gan/eval/add_regularization_loss_summaries", "k": [], "r": "r1.6", "t": "tf.contrib.gan.eval.add_regularization_loss_summaries"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/gan/eval/classifier_metrics", "k": ["INCEPTION_DEFAULT_IMAGE_SIZE", "__all__", "frechet_inception_distance", "inception_score"], "r": "r1.6", "t": "tf.contrib.gan.eval.classifier_metrics"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/gan/eval/classifier_score", "k": [], "r": "r1.6", "t": "tf.contrib.gan.eval.classifier_score"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/gan/eval/classifier_score_from_logits", "k": [], "r": "r1.6", "t": "tf.contrib.gan.eval.classifier_score_from_logits"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/gan/eval/eval_utils", "k": ["__all__"], "r": "r1.6", "t": "tf.contrib.gan.eval.eval_utils"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/gan/eval/frechet_classifier_distance", "k": [], "r": "r1.6", "t": "tf.contrib.gan.eval.frechet_classifier_distance"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/gan/eval/frechet_classifier_distance_from_activations", "k": [], "r": "r1.6", "t": "tf.contrib.gan.eval.frechet_classifier_distance_from_activations"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/gan/eval/get_graph_def_from_disk", "k": [], "r": "r1.6", "t": "tf.contrib.gan.eval.get_graph_def_from_disk"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/gan/eval/get_graph_def_from_resource", "k": [], "r": "r1.6", "t": "tf.contrib.gan.eval.get_graph_def_from_resource"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/gan/eval/get_graph_def_from_url_tarball", "k": [], "r": "r1.6", "t": "tf.contrib.gan.eval.get_graph_def_from_url_tarball"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/gan/eval/image_grid", "k": [], "r": "r1.6", "t": "tf.contrib.gan.eval.image_grid"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/gan/eval/image_reshaper", "k": [], "r": "r1.6", "t": "tf.contrib.gan.eval.image_reshaper"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/gan/eval/preprocess_image", "k": [], "r": "r1.6", "t": "tf.contrib.gan.eval.preprocess_image"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/gan/eval/run_image_classifier", "k": [], "r": "r1.6", "t": "tf.contrib.gan.eval.run_image_classifier"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/gan/eval/run_inception", "k": [], "r": "r1.6", "t": "tf.contrib.gan.eval.run_inception"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/gan/eval/sliced_wasserstein_distance", "k": [], "r": "r1.6", "t": "tf.contrib.gan.eval.sliced_wasserstein_distance"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/gan/eval/summaries", "k": ["__all__"], "r": "r1.6", "t": "tf.contrib.gan.eval.summaries"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/gan/features", "k": [], "r": "r1.6", "t": "tf.contrib.gan.features"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/gan/features/VBN", "k": ["__call__", "__init__", "reference_batch_normalization"], "r": "r1.6", "t": "tf.contrib.gan.features.VBN"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/gan/features/clip_discriminator_weights", "k": [], "r": "r1.6", "t": "tf.contrib.gan.features.clip_discriminator_weights"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/gan/features/clip_variables", "k": [], "r": "r1.6", "t": "tf.contrib.gan.features.clip_variables"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/gan/features/condition_tensor", "k": [], "r": "r1.6", "t": "tf.contrib.gan.features.condition_tensor"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/gan/features/condition_tensor_from_onehot", "k": [], "r": "r1.6", "t": "tf.contrib.gan.features.condition_tensor_from_onehot"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/gan/features/tensor_pool", "k": [], "r": "r1.6", "t": "tf.contrib.gan.features.tensor_pool"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/gan/gan_loss", "k": [], "r": "r1.6", "t": "tf.contrib.gan.gan_loss"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/gan/gan_model", "k": [], "r": "r1.6", "t": "tf.contrib.gan.gan_model"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/gan/gan_train", "k": [], "r": "r1.6", "t": "tf.contrib.gan.gan_train"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/gan/gan_train_ops", "k": [], "r": "r1.6", "t": "tf.contrib.gan.gan_train_ops"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/gan/get_joint_train_hooks", "k": [], "r": "r1.6", "t": "tf.contrib.gan.get_joint_train_hooks"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/gan/get_sequential_train_hooks", "k": [], "r": "r1.6", "t": "tf.contrib.gan.get_sequential_train_hooks"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/gan/get_sequential_train_steps", "k": [], "r": "r1.6", "t": "tf.contrib.gan.get_sequential_train_steps"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/gan/infogan_model", "k": [], "r": "r1.6", "t": "tf.contrib.gan.infogan_model"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/gan/losses", "k": [], "r": "r1.6", "t": "tf.contrib.gan.losses"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/gan/losses/acgan_discriminator_loss", "k": [], "r": "r1.6", "t": "tf.contrib.gan.losses.acgan_discriminator_loss"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/gan/losses/acgan_generator_loss", "k": [], "r": "r1.6", "t": "tf.contrib.gan.losses.acgan_generator_loss"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/gan/losses/combine_adversarial_loss", "k": [], "r": "r1.6", "t": "tf.contrib.gan.losses.combine_adversarial_loss"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/gan/losses/cycle_consistency_loss", "k": [], "r": "r1.6", "t": "tf.contrib.gan.losses.cycle_consistency_loss"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/gan/losses/least_squares_discriminator_loss", "k": [], "r": "r1.6", "t": "tf.contrib.gan.losses.least_squares_discriminator_loss"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/gan/losses/least_squares_generator_loss", "k": [], "r": "r1.6", "t": "tf.contrib.gan.losses.least_squares_generator_loss"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/gan/losses/minimax_discriminator_loss", "k": [], "r": "r1.6", "t": "tf.contrib.gan.losses.minimax_discriminator_loss"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/gan/losses/minimax_generator_loss", "k": [], "r": "r1.6", "t": "tf.contrib.gan.losses.minimax_generator_loss"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/gan/losses/modified_discriminator_loss", "k": [], "r": "r1.6", "t": "tf.contrib.gan.losses.modified_discriminator_loss"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/gan/losses/modified_generator_loss", "k": [], "r": "r1.6", "t": "tf.contrib.gan.losses.modified_generator_loss"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/gan/losses/mutual_information_penalty", "k": [], "r": "r1.6", "t": "tf.contrib.gan.losses.mutual_information_penalty"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/gan/losses/wargs", "k": [], "r": "r1.6", "t": "tf.contrib.gan.losses.wargs"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/gan/losses/wargs/acgan_discriminator_loss", "k": [], "r": "r1.6", "t": "tf.contrib.gan.losses.wargs.acgan_discriminator_loss"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/gan/losses/wargs/acgan_generator_loss", "k": [], "r": "r1.6", "t": "tf.contrib.gan.losses.wargs.acgan_generator_loss"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/gan/losses/wargs/combine_adversarial_loss", "k": [], "r": "r1.6", "t": "tf.contrib.gan.losses.wargs.combine_adversarial_loss"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/gan/losses/wargs/cycle_consistency_loss", "k": [], "r": "r1.6", "t": "tf.contrib.gan.losses.wargs.cycle_consistency_loss"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/gan/losses/wargs/least_squares_discriminator_loss", "k": [], "r": "r1.6", "t": "tf.contrib.gan.losses.wargs.least_squares_discriminator_loss"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/gan/losses/wargs/least_squares_generator_loss", "k": [], "r": "r1.6", "t": "tf.contrib.gan.losses.wargs.least_squares_generator_loss"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/gan/losses/wargs/minimax_discriminator_loss", "k": [], "r": "r1.6", "t": "tf.contrib.gan.losses.wargs.minimax_discriminator_loss"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/gan/losses/wargs/minimax_generator_loss", "k": [], "r": "r1.6", "t": "tf.contrib.gan.losses.wargs.minimax_generator_loss"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/gan/losses/wargs/modified_discriminator_loss", "k": [], "r": "r1.6", "t": "tf.contrib.gan.losses.wargs.modified_discriminator_loss"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/gan/losses/wargs/modified_generator_loss", "k": [], "r": "r1.6", "t": "tf.contrib.gan.losses.wargs.modified_generator_loss"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/gan/losses/wargs/mutual_information_penalty", "k": [], "r": "r1.6", "t": "tf.contrib.gan.losses.wargs.mutual_information_penalty"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/gan/losses/wargs/wasserstein_discriminator_loss", "k": [], "r": "r1.6", "t": "tf.contrib.gan.losses.wargs.wasserstein_discriminator_loss"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/gan/losses/wargs/wasserstein_generator_loss", "k": [], "r": "r1.6", "t": "tf.contrib.gan.losses.wargs.wasserstein_generator_loss"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/gan/losses/wargs/wasserstein_gradient_penalty", "k": [], "r": "r1.6", "t": "tf.contrib.gan.losses.wargs.wasserstein_gradient_penalty"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/gan/losses/wasserstein_discriminator_loss", "k": [], "r": "r1.6", "t": "tf.contrib.gan.losses.wasserstein_discriminator_loss"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/gan/losses/wasserstein_generator_loss", "k": [], "r": "r1.6", "t": "tf.contrib.gan.losses.wasserstein_generator_loss"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/gan/losses/wasserstein_gradient_penalty", "k": [], "r": "r1.6", "t": "tf.contrib.gan.losses.wasserstein_gradient_penalty"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/graph_editor", "k": [], "r": "r1.6", "t": "tf.contrib.graph_editor"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/graph_editor/ControlOutputs", "k": ["graph", "__init__", "get", "get_all", "update"], "r": "r1.6", "t": "tf.contrib.graph_editor.ControlOutputs"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/graph_editor/SubGraphView", "k": ["connected_inputs", "connected_outputs", "graph", "inputs", "ops", "outputs", "passthroughs", "__bool__", "__copy__", "__enter__", "__exit__", "__init__", "__nonzero__", "consumers", "copy", "find_op_by_name", "input_index", "is_passthrough", "op", "output_index", "remap", "remap_default", "remap_inputs", "remap_outputs", "remap_outputs_make_unique", "remap_outputs_to_consumers", "remove_unused_ops"], "r": "r1.6", "t": "tf.contrib.graph_editor.SubGraphView"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/graph_editor/Transformer", "k": ["__call__", "__init__"], "r": "r1.6", "t": "tf.contrib.graph_editor.Transformer"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/graph_editor/TransformerInfo", "k": ["__init__", "original", "transformed"], "r": "r1.6", "t": "tf.contrib.graph_editor.TransformerInfo"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/graph_editor/add_control_inputs", "k": [], "r": "r1.6", "t": "tf.contrib.graph_editor.add_control_inputs"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/graph_editor/assign_renamed_collections_handler", "k": [], "r": "r1.6", "t": "tf.contrib.graph_editor.assign_renamed_collections_handler"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/graph_editor/bypass", "k": [], "r": "r1.6", "t": "tf.contrib.graph_editor.bypass"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/graph_editor/can_be_regex", "k": [], "r": "r1.6", "t": "tf.contrib.graph_editor.can_be_regex"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/graph_editor/check_cios", "k": [], "r": "r1.6", "t": "tf.contrib.graph_editor.check_cios"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/graph_editor/compute_boundary_ts", "k": [], "r": "r1.6", "t": "tf.contrib.graph_editor.compute_boundary_ts"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/graph_editor/connect", "k": [], "r": "r1.6", "t": "tf.contrib.graph_editor.connect"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/graph_editor/copy", "k": [], "r": "r1.6", "t": "tf.contrib.graph_editor.copy"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/graph_editor/copy_op_handler", "k": [], "r": "r1.6", "t": "tf.contrib.graph_editor.copy_op_handler"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/graph_editor/copy_with_input_replacements", "k": [], "r": "r1.6", "t": "tf.contrib.graph_editor.copy_with_input_replacements"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/graph_editor/detach", "k": [], "r": "r1.6", "t": "tf.contrib.graph_editor.detach"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/graph_editor/detach_control_inputs", "k": [], "r": "r1.6", "t": "tf.contrib.graph_editor.detach_control_inputs"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/graph_editor/detach_control_outputs", "k": [], "r": "r1.6", "t": "tf.contrib.graph_editor.detach_control_outputs"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/graph_editor/detach_inputs", "k": [], "r": "r1.6", "t": "tf.contrib.graph_editor.detach_inputs"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/graph_editor/detach_outputs", "k": [], "r": "r1.6", "t": "tf.contrib.graph_editor.detach_outputs"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/graph_editor/edit", "k": [], "r": "r1.6", "t": "tf.contrib.graph_editor.edit"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/graph_editor/filter_ops", "k": [], "r": "r1.6", "t": "tf.contrib.graph_editor.filter_ops"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/graph_editor/filter_ops_from_regex", "k": [], "r": "r1.6", "t": "tf.contrib.graph_editor.filter_ops_from_regex"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/graph_editor/filter_ts", "k": [], "r": "r1.6", "t": "tf.contrib.graph_editor.filter_ts"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/graph_editor/filter_ts_from_regex", "k": [], "r": "r1.6", "t": "tf.contrib.graph_editor.filter_ts_from_regex"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/graph_editor/get_backward_walk_ops", "k": [], "r": "r1.6", "t": "tf.contrib.graph_editor.get_backward_walk_ops"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/graph_editor/get_consuming_ops", "k": [], "r": "r1.6", "t": "tf.contrib.graph_editor.get_consuming_ops"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/graph_editor/get_forward_walk_ops", "k": [], "r": "r1.6", "t": "tf.contrib.graph_editor.get_forward_walk_ops"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/graph_editor/get_generating_ops", "k": [], "r": "r1.6", "t": "tf.contrib.graph_editor.get_generating_ops"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/graph_editor/get_name_scope_ops", "k": [], "r": "r1.6", "t": "tf.contrib.graph_editor.get_name_scope_ops"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/graph_editor/get_ops_ios", "k": [], "r": "r1.6", "t": "tf.contrib.graph_editor.get_ops_ios"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/graph_editor/get_tensors", "k": [], "r": "r1.6", "t": "tf.contrib.graph_editor.get_tensors"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/graph_editor/get_walks_intersection_ops", "k": [], "r": "r1.6", "t": "tf.contrib.graph_editor.get_walks_intersection_ops"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/graph_editor/get_walks_union_ops", "k": [], "r": "r1.6", "t": "tf.contrib.graph_editor.get_walks_union_ops"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/graph_editor/get_within_boundary_ops", "k": [], "r": "r1.6", "t": "tf.contrib.graph_editor.get_within_boundary_ops"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/graph_editor/graph_replace", "k": [], "r": "r1.6", "t": "tf.contrib.graph_editor.graph_replace"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/graph_editor/keep_t_if_possible_handler", "k": [], "r": "r1.6", "t": "tf.contrib.graph_editor.keep_t_if_possible_handler"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/graph_editor/make_list_of_op", "k": [], "r": "r1.6", "t": "tf.contrib.graph_editor.make_list_of_op"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/graph_editor/make_list_of_t", "k": [], "r": "r1.6", "t": "tf.contrib.graph_editor.make_list_of_t"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/graph_editor/make_placeholder_from_dtype_and_shape", "k": [], "r": "r1.6", "t": "tf.contrib.graph_editor.make_placeholder_from_dtype_and_shape"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/graph_editor/make_placeholder_from_tensor", "k": [], "r": "r1.6", "t": "tf.contrib.graph_editor.make_placeholder_from_tensor"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/graph_editor/make_regex", "k": [], "r": "r1.6", "t": "tf.contrib.graph_editor.make_regex"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/graph_editor/make_view", "k": [], "r": "r1.6", "t": "tf.contrib.graph_editor.make_view"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/graph_editor/make_view_from_scope", "k": [], "r": "r1.6", "t": "tf.contrib.graph_editor.make_view_from_scope"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/graph_editor/placeholder_name", "k": [], "r": "r1.6", "t": "tf.contrib.graph_editor.placeholder_name"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/graph_editor/remove_control_inputs", "k": [], "r": "r1.6", "t": "tf.contrib.graph_editor.remove_control_inputs"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/graph_editor/replace_t_with_placeholder_handler", "k": [], "r": "r1.6", "t": "tf.contrib.graph_editor.replace_t_with_placeholder_handler"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/graph_editor/reroute", "k": [], "r": "r1.6", "t": "tf.contrib.graph_editor.reroute"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/graph_editor/reroute_inputs", "k": [], "r": "r1.6", "t": "tf.contrib.graph_editor.reroute_inputs"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/graph_editor/reroute_ios", "k": [], "r": "r1.6", "t": "tf.contrib.graph_editor.reroute_ios"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/graph_editor/reroute_outputs", "k": [], "r": "r1.6", "t": "tf.contrib.graph_editor.reroute_outputs"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/graph_editor/reroute_ts", "k": [], "r": "r1.6", "t": "tf.contrib.graph_editor.reroute_ts"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/graph_editor/select", "k": [], "r": "r1.6", "t": "tf.contrib.graph_editor.select"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/graph_editor/select_ops", "k": [], "r": "r1.6", "t": "tf.contrib.graph_editor.select_ops"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/graph_editor/select_ops_and_ts", "k": [], "r": "r1.6", "t": "tf.contrib.graph_editor.select_ops_and_ts"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/graph_editor/select_ts", "k": [], "r": "r1.6", "t": "tf.contrib.graph_editor.select_ts"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/graph_editor/subgraph", "k": [], "r": "r1.6", "t": "tf.contrib.graph_editor.subgraph"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/graph_editor/swap_inputs", "k": [], "r": "r1.6", "t": "tf.contrib.graph_editor.swap_inputs"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/graph_editor/swap_ios", "k": [], "r": "r1.6", "t": "tf.contrib.graph_editor.swap_ios"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/graph_editor/swap_outputs", "k": [], "r": "r1.6", "t": "tf.contrib.graph_editor.swap_outputs"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/graph_editor/swap_ts", "k": [], "r": "r1.6", "t": "tf.contrib.graph_editor.swap_ts"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/graph_editor/transform", "k": [], "r": "r1.6", "t": "tf.contrib.graph_editor.transform"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/graph_editor/transform_op_if_inside_handler", "k": [], "r": "r1.6", "t": "tf.contrib.graph_editor.transform_op_if_inside_handler"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/graph_editor/util", "k": [], "r": "r1.6", "t": "tf.contrib.graph_editor.util"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/grid_rnn", "k": [], "r": "r1.6", "t": "tf.contrib.grid_rnn"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/image", "k": [], "r": "r1.6", "t": "tf.contrib.image"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/image/angles_to_projective_transforms", "k": [], "r": "r1.6", "t": "tf.contrib.image.angles_to_projective_transforms"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/image/compose_transforms", "k": [], "r": "r1.6", "t": "tf.contrib.image.compose_transforms"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/image/connected_components", "k": [], "r": "r1.6", "t": "tf.contrib.image.connected_components"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/image/rotate", "k": [], "r": "r1.6", "t": "tf.contrib.image.rotate"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/image/single_image_random_dot_stereograms", "k": [], "r": "r1.6", "t": "tf.contrib.image.single_image_random_dot_stereograms"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/image/transform", "k": [], "r": "r1.6", "t": "tf.contrib.image.transform"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/image/translate", "k": [], "r": "r1.6", "t": "tf.contrib.image.translate"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/image/translations_to_projective_transforms", "k": [], "r": "r1.6", "t": "tf.contrib.image.translations_to_projective_transforms"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/input_pipeline", "k": [], "r": "r1.6", "t": "tf.contrib.input_pipeline"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/input_pipeline/obtain_next", "k": [], "r": "r1.6", "t": "tf.contrib.input_pipeline.obtain_next"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/integrate", "k": [], "r": "r1.6", "t": "tf.contrib.integrate"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/integrate/odeint", "k": [], "r": "r1.6", "t": "tf.contrib.integrate.odeint"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/keras", "k": [], "r": "r1.6", "t": "tf.contrib.keras"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/kernel_methods", "k": [], "r": "r1.6", "t": "tf.contrib.kernel_methods"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/kernel_methods/KernelLinearClassifier", "k": ["config", "model_dir", "__init__", "evaluate", "export", "export_savedmodel", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "predict_classes", "predict_proba", "set_params"], "r": "r1.6", "t": "tf.contrib.kernel_methods.KernelLinearClassifier"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/kernel_methods/RandomFourierFeatureMapper", "k": ["input_dim", "name", "output_dim", "__init__", "map"], "r": "r1.6", "t": "tf.contrib.kernel_methods.RandomFourierFeatureMapper"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/kernel_methods/sparse_multiclass_hinge_loss", "k": [], "r": "r1.6", "t": "tf.contrib.kernel_methods.sparse_multiclass_hinge_loss"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/kfac", "k": [], "r": "r1.6", "t": "tf.contrib.kfac"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/kfac/curvature_matrix_vector_products", "k": [], "r": "r1.6", "t": "tf.contrib.kfac.curvature_matrix_vector_products"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/kfac/curvature_matrix_vector_products/CurvatureMatrixVectorProductComputer", "k": ["fisher_factor_inner_shapes", "generalized_gauss_newton_factor_inner_shapes", "__init__", "multiply_fisher", "multiply_fisher_factor", "multiply_fisher_factor_transpose", "multiply_generalized_gauss_newton", "multiply_generalized_gauss_newton_factor", "multiply_generalized_gauss_newton_factor_transpose", "multiply_hessian"], "r": "r1.6", "t": "tf.contrib.kfac.curvature_matrix_vector_products.CurvatureMatrixVectorProductComputer"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/kfac/estimator", "k": [], "r": "r1.6", "t": "tf.contrib.kfac.estimator"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/kfac/estimator/FisherEstimator", "k": ["damping", "variables", "__init__", "multiply", "multiply_inverse"], "r": "r1.6", "t": "tf.contrib.kfac.estimator.FisherEstimator"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/kfac/fisher_blocks", "k": [], "r": "r1.6", "t": "tf.contrib.kfac.fisher_blocks"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/kfac/fisher_blocks/ConvDiagonalFB", "k": ["num_registered_minibatches", "__init__", "instantiate_factors", "multiply", "multiply_inverse", "register_additional_minibatch", "tensors_to_compute_grads"], "r": "r1.6", "t": "tf.contrib.kfac.fisher_blocks.ConvDiagonalFB"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/kfac/fisher_blocks/ConvKFCBasicFB", "k": ["num_registered_minibatches", "__init__", "full_fisher_block", "instantiate_factors", "multiply", "multiply_inverse", "register_additional_minibatch", "tensors_to_compute_grads"], "r": "r1.6", "t": "tf.contrib.kfac.fisher_blocks.ConvKFCBasicFB"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/kfac/fisher_blocks/FisherBlock", "k": ["num_registered_minibatches", "__init__", "instantiate_factors", "multiply", "multiply_inverse", "tensors_to_compute_grads"], "r": "r1.6", "t": "tf.contrib.kfac.fisher_blocks.FisherBlock"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/kfac/fisher_blocks/FullFB", "k": ["num_registered_minibatches", "__init__", "full_fisher_block", "instantiate_factors", "multiply", "multiply_inverse", "register_additional_minibatch", "tensors_to_compute_grads"], "r": "r1.6", "t": "tf.contrib.kfac.fisher_blocks.FullFB"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/kfac/fisher_blocks/FullyConnectedDiagonalFB", "k": ["num_registered_minibatches", "__init__", "instantiate_factors", "multiply", "multiply_inverse", "register_additional_minibatch", "tensors_to_compute_grads"], "r": "r1.6", "t": "tf.contrib.kfac.fisher_blocks.FullyConnectedDiagonalFB"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/kfac/fisher_blocks/FullyConnectedKFACBasicFB", "k": ["num_registered_minibatches", "__init__", "full_fisher_block", "instantiate_factors", "multiply", "multiply_inverse", "register_additional_minibatch", "tensors_to_compute_grads"], "r": "r1.6", "t": "tf.contrib.kfac.fisher_blocks.FullyConnectedKFACBasicFB"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/kfac/fisher_blocks/KroneckerProductFB", "k": ["num_registered_minibatches", "__init__", "full_fisher_block", "instantiate_factors", "multiply", "multiply_inverse", "tensors_to_compute_grads"], "r": "r1.6", "t": "tf.contrib.kfac.fisher_blocks.KroneckerProductFB"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/kfac/fisher_blocks/NaiveDiagonalFB", "k": ["num_registered_minibatches", "__init__", "full_fisher_block", "instantiate_factors", "multiply", "multiply_inverse", "register_additional_minibatch", "tensors_to_compute_grads"], "r": "r1.6", "t": "tf.contrib.kfac.fisher_blocks.NaiveDiagonalFB"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/kfac/fisher_blocks/compute_pi_adjusted_damping", "k": [], "r": "r1.6", "t": "tf.contrib.kfac.fisher_blocks.compute_pi_adjusted_damping"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/kfac/fisher_blocks/compute_pi_tracenorm", "k": [], "r": "r1.6", "t": "tf.contrib.kfac.fisher_blocks.compute_pi_tracenorm"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/kfac/fisher_blocks/normalize_damping", "k": [], "r": "r1.6", "t": "tf.contrib.kfac.fisher_blocks.normalize_damping"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/kfac/fisher_blocks/num_conv_locations", "k": [], "r": "r1.6", "t": "tf.contrib.kfac.fisher_blocks.num_conv_locations"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/kfac/fisher_blocks/set_global_constants", "k": [], "r": "r1.6", "t": "tf.contrib.kfac.fisher_blocks.set_global_constants"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/kfac/fisher_factors", "k": [], "r": "r1.6", "t": "tf.contrib.kfac.fisher_factors"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/kfac/fisher_factors/ConvDiagonalFactor", "k": ["__init__", "get_cov", "instantiate_covariance", "make_covariance_update_op", "make_inverse_update_ops"], "r": "r1.6", "t": "tf.contrib.kfac.fisher_factors.ConvDiagonalFactor"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/kfac/fisher_factors/ConvInputKroneckerFactor", "k": ["__init__", "get_cov", "get_damped_inverse", "get_eigendecomp", "get_matpower", "instantiate_covariance", "make_covariance_update_op", "make_inverse_update_ops", "register_damped_inverse", "register_matpower", "reset_eigendecomp"], "r": "r1.6", "t": "tf.contrib.kfac.fisher_factors.ConvInputKroneckerFactor"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/kfac/fisher_factors/ConvOutputKroneckerFactor", "k": ["__init__", "get_cov", "get_damped_inverse", "get_eigendecomp", "get_matpower", "instantiate_covariance", "make_covariance_update_op", "make_inverse_update_ops", "register_damped_inverse", "register_matpower", "reset_eigendecomp"], "r": "r1.6", "t": "tf.contrib.kfac.fisher_factors.ConvOutputKroneckerFactor"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/kfac/fisher_factors/DiagonalFactor", "k": ["__init__", "get_cov", "instantiate_covariance", "make_covariance_update_op", "make_inverse_update_ops"], "r": "r1.6", "t": "tf.contrib.kfac.fisher_factors.DiagonalFactor"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/kfac/fisher_factors/FisherFactor", "k": ["__init__", "get_cov", "instantiate_covariance", "make_covariance_update_op", "make_inverse_update_ops"], "r": "r1.6", "t": "tf.contrib.kfac.fisher_factors.FisherFactor"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/kfac/fisher_factors/FullFactor", "k": ["__init__", "get_cov", "get_damped_inverse", "get_eigendecomp", "get_matpower", "instantiate_covariance", "make_covariance_update_op", "make_inverse_update_ops", "register_damped_inverse", "register_matpower", "reset_eigendecomp"], "r": "r1.6", "t": "tf.contrib.kfac.fisher_factors.FullFactor"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/kfac/fisher_factors/FullyConnectedDiagonalFactor", "k": ["__init__", "get_cov", "instantiate_covariance", "make_covariance_update_op", "make_inverse_update_ops"], "r": "r1.6", "t": "tf.contrib.kfac.fisher_factors.FullyConnectedDiagonalFactor"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/kfac/fisher_factors/FullyConnectedKroneckerFactor", "k": ["__init__", "get_cov", "get_damped_inverse", "get_eigendecomp", "get_matpower", "instantiate_covariance", "make_covariance_update_op", "make_inverse_update_ops", "register_damped_inverse", "register_matpower", "reset_eigendecomp"], "r": "r1.6", "t": "tf.contrib.kfac.fisher_factors.FullyConnectedKroneckerFactor"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/kfac/fisher_factors/InverseProvidingFactor", "k": ["__init__", "get_cov", "get_damped_inverse", "get_eigendecomp", "get_matpower", "instantiate_covariance", "make_covariance_update_op", "make_inverse_update_ops", "register_damped_inverse", "register_matpower", "reset_eigendecomp"], "r": "r1.6", "t": "tf.contrib.kfac.fisher_factors.InverseProvidingFactor"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/kfac/fisher_factors/NaiveDiagonalFactor", "k": ["__init__", "get_cov", "instantiate_covariance", "make_covariance_update_op", "make_inverse_update_ops"], "r": "r1.6", "t": "tf.contrib.kfac.fisher_factors.NaiveDiagonalFactor"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/kfac/fisher_factors/append_homog", "k": [], "r": "r1.6", "t": "tf.contrib.kfac.fisher_factors.append_homog"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/kfac/fisher_factors/compute_cov", "k": [], "r": "r1.6", "t": "tf.contrib.kfac.fisher_factors.compute_cov"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/kfac/fisher_factors/covariance_initializer", "k": [], "r": "r1.6", "t": "tf.contrib.kfac.fisher_factors.covariance_initializer"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/kfac/fisher_factors/diagonal_covariance_initializer", "k": [], "r": "r1.6", "t": "tf.contrib.kfac.fisher_factors.diagonal_covariance_initializer"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/kfac/fisher_factors/inverse_initializer", "k": [], "r": "r1.6", "t": "tf.contrib.kfac.fisher_factors.inverse_initializer"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/kfac/fisher_factors/maybe_colocate_with", "k": [], "r": "r1.6", "t": "tf.contrib.kfac.fisher_factors.maybe_colocate_with"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/kfac/fisher_factors/scalar_or_tensor_to_string", "k": [], "r": "r1.6", "t": "tf.contrib.kfac.fisher_factors.scalar_or_tensor_to_string"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/kfac/fisher_factors/scope_string_from_name", "k": [], "r": "r1.6", "t": "tf.contrib.kfac.fisher_factors.scope_string_from_name"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/kfac/fisher_factors/scope_string_from_params", "k": [], "r": "r1.6", "t": "tf.contrib.kfac.fisher_factors.scope_string_from_params"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/kfac/fisher_factors/set_global_constants", "k": [], "r": "r1.6", "t": "tf.contrib.kfac.fisher_factors.set_global_constants"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/kfac/layer_collection", "k": ["APPROX_DIAGONAL_NAME", "APPROX_FULL_NAME", "APPROX_KRONECKER_INDEP_NAME", "APPROX_KRONECKER_NAME", "APPROX_KRONECKER_SERIES_1_NAME", "APPROX_KRONECKER_SERIES_2_NAME", "VARIABLE_SCOPE"], "r": "r1.6", "t": "tf.contrib.kfac.layer_collection"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/kfac/layer_collection/LayerCollection", "k": ["default_conv2d_approximation", "default_fully_connected_approximation", "default_fully_connected_multi_approximation", "default_generic_approximation", "graph", "linked_parameters", "losses", "registered_variables", "subgraph", "__init__", "check_registration", "create_subgraph", "define_linked_parameters", "get_blocks", "get_factors", "get_use_count_map", "make_or_get_factor", "register_block", "register_categorical_predictive_distribution", "register_conv2d", "register_fully_connected", "register_fully_connected_multi", "register_generic", "register_multi_bernoulli_predictive_distribution", "register_normal_predictive_distribution", "set_default_conv2d_approximation", "set_default_fully_connected_approximation", "set_default_fully_connected_multi_approximation", "set_default_generic_approximation", "total_loss", "total_sampled_loss"], "r": "r1.6", "t": "tf.contrib.kfac.layer_collection.LayerCollection"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/kfac/layer_collection/LayerParametersDict", "k": ["__contains__", "__delitem__", "__eq__", "__getitem__", "__init__", "__iter__", "__ne__", "__reduce__", "__repr__", "__reversed__", "__setitem__", "clear", "copy", "fromkeys", "items", "iteritems", "iterkeys", "itervalues", "keys", "pop", "popitem", "setdefault", "update", "values", "viewitems", "viewkeys", "viewvalues", "__hash__"], "r": "r1.6", "t": "tf.contrib.kfac.layer_collection.LayerParametersDict"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/kfac/loss_functions", "k": [], "r": "r1.6", "t": "tf.contrib.kfac.loss_functions"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/kfac/loss_functions/CategoricalLogitsNegativeLogProbLoss", "k": ["dist", "fisher_factor_inner_shape", "fisher_factor_inner_static_shape", "hessian_factor_inner_shape", "hessian_factor_inner_static_shape", "input_minibatches", "inputs", "num_registered_minibatches", "params", "targets", "__init__", "evaluate", "evaluate_on_sample", "multiply_fisher", "multiply_fisher_factor", "multiply_fisher_factor_replicated_one_hot", "multiply_fisher_factor_transpose", "multiply_hessian", "multiply_hessian_factor", "multiply_hessian_factor_replicated_one_hot", "multiply_hessian_factor_transpose", "register_additional_minibatch", "sample"], "r": "r1.6", "t": "tf.contrib.kfac.loss_functions.CategoricalLogitsNegativeLogProbLoss"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/kfac/loss_functions/DistributionNegativeLogProbLoss", "k": ["dist", "fisher_factor_inner_shape", "fisher_factor_inner_static_shape", "hessian_factor_inner_shape", "hessian_factor_inner_static_shape", "input_minibatches", "inputs", "num_registered_minibatches", "params", "targets", "__init__", "evaluate", "evaluate_on_sample", "multiply_fisher", "multiply_fisher_factor", "multiply_fisher_factor_replicated_one_hot", "multiply_fisher_factor_transpose", "multiply_hessian", "multiply_hessian_factor", "multiply_hessian_factor_replicated_one_hot", "multiply_hessian_factor_transpose", "sample"], "r": "r1.6", "t": "tf.contrib.kfac.loss_functions.DistributionNegativeLogProbLoss"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/kfac/loss_functions/LossFunction", "k": ["hessian_factor_inner_shape", "hessian_factor_inner_static_shape", "input_minibatches", "inputs", "num_registered_minibatches", "targets", "evaluate", "multiply_hessian", "multiply_hessian_factor", "multiply_hessian_factor_replicated_one_hot", "multiply_hessian_factor_transpose"], "r": "r1.6", "t": "tf.contrib.kfac.loss_functions.LossFunction"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/kfac/loss_functions/MultiBernoulliNegativeLogProbLoss", "k": ["dist", "fisher_factor_inner_shape", "fisher_factor_inner_static_shape", "hessian_factor_inner_shape", "hessian_factor_inner_static_shape", "input_minibatches", "inputs", "num_registered_minibatches", "params", "targets", "__init__", "evaluate", "evaluate_on_sample", "multiply_fisher", "multiply_fisher_factor", "multiply_fisher_factor_replicated_one_hot", "multiply_fisher_factor_transpose", "multiply_hessian", "multiply_hessian_factor", "multiply_hessian_factor_replicated_one_hot", "multiply_hessian_factor_transpose", "sample"], "r": "r1.6", "t": "tf.contrib.kfac.loss_functions.MultiBernoulliNegativeLogProbLoss"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/kfac/loss_functions/NaturalParamsNegativeLogProbLoss", "k": ["fisher_factor_inner_shape", "fisher_factor_inner_static_shape", "hessian_factor_inner_shape", "hessian_factor_inner_static_shape", "input_minibatches", "inputs", "num_registered_minibatches", "params", "targets", "__init__", "evaluate", "evaluate_on_sample", "multiply_fisher", "multiply_fisher_factor", "multiply_fisher_factor_replicated_one_hot", "multiply_fisher_factor_transpose", "multiply_hessian", "multiply_hessian_factor", "multiply_hessian_factor_replicated_one_hot", "multiply_hessian_factor_transpose", "sample"], "r": "r1.6", "t": "tf.contrib.kfac.loss_functions.NaturalParamsNegativeLogProbLoss"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/kfac/loss_functions/NegativeLogProbLoss", "k": ["fisher_factor_inner_shape", "fisher_factor_inner_static_shape", "hessian_factor_inner_shape", "hessian_factor_inner_static_shape", "input_minibatches", "inputs", "num_registered_minibatches", "params", "targets", "__init__", "evaluate", "evaluate_on_sample", "multiply_fisher", "multiply_fisher_factor", "multiply_fisher_factor_replicated_one_hot", "multiply_fisher_factor_transpose", "multiply_hessian", "multiply_hessian_factor", "multiply_hessian_factor_replicated_one_hot", "multiply_hessian_factor_transpose", "sample"], "r": "r1.6", "t": "tf.contrib.kfac.loss_functions.NegativeLogProbLoss"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/kfac/loss_functions/NormalMeanNegativeLogProbLoss", "k": ["dist", "fisher_factor_inner_shape", "fisher_factor_inner_static_shape", "hessian_factor_inner_shape", "hessian_factor_inner_static_shape", "input_minibatches", "inputs", "num_registered_minibatches", "params", "targets", "__init__", "evaluate", "evaluate_on_sample", "multiply_fisher", "multiply_fisher_factor", "multiply_fisher_factor_replicated_one_hot", "multiply_fisher_factor_transpose", "multiply_hessian", "multiply_hessian_factor", "multiply_hessian_factor_replicated_one_hot", "multiply_hessian_factor_transpose", "sample"], "r": "r1.6", "t": "tf.contrib.kfac.loss_functions.NormalMeanNegativeLogProbLoss"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/kfac/loss_functions/NormalMeanVarianceNegativeLogProbLoss", "k": ["dist", "fisher_factor_inner_shape", "fisher_factor_inner_static_shape", "hessian_factor_inner_shape", "hessian_factor_inner_static_shape", "input_minibatches", "inputs", "num_registered_minibatches", "params", "targets", "__init__", "evaluate", "evaluate_on_sample", "multiply_fisher", "multiply_fisher_factor", "multiply_fisher_factor_replicated_one_hot", "multiply_fisher_factor_transpose", "multiply_hessian", "multiply_hessian_factor", "multiply_hessian_factor_replicated_one_hot", "multiply_hessian_factor_transpose", "sample"], "r": "r1.6", "t": "tf.contrib.kfac.loss_functions.NormalMeanVarianceNegativeLogProbLoss"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/kfac/loss_functions/OnehotCategoricalLogitsNegativeLogProbLoss", "k": ["dist", "fisher_factor_inner_shape", "fisher_factor_inner_static_shape", "hessian_factor_inner_shape", "hessian_factor_inner_static_shape", "input_minibatches", "inputs", "num_registered_minibatches", "params", "targets", "__init__", "evaluate", "evaluate_on_sample", "multiply_fisher", "multiply_fisher_factor", "multiply_fisher_factor_replicated_one_hot", "multiply_fisher_factor_transpose", "multiply_hessian", "multiply_hessian_factor", "multiply_hessian_factor_replicated_one_hot", "multiply_hessian_factor_transpose", "register_additional_minibatch", "sample"], "r": "r1.6", "t": "tf.contrib.kfac.loss_functions.OnehotCategoricalLogitsNegativeLogProbLoss"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/kfac/loss_functions/insert_slice_in_zeros", "k": [], "r": "r1.6", "t": "tf.contrib.kfac.loss_functions.insert_slice_in_zeros"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/kfac/op_queue", "k": [], "r": "r1.6", "t": "tf.contrib.kfac.op_queue"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/kfac/op_queue/OpQueue", "k": ["ops", "__init__", "next_op"], "r": "r1.6", "t": "tf.contrib.kfac.op_queue.OpQueue"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/kfac/optimizer", "k": [], "r": "r1.6", "t": "tf.contrib.kfac.optimizer"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/kfac/optimizer/KfacOptimizer", "k": ["cov_update_op", "cov_update_ops", "cov_update_thunks", "damping", "inv_update_op", "inv_update_ops", "inv_update_thunks", "variables", "__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.6", "t": "tf.contrib.kfac.optimizer.KfacOptimizer"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/kfac/utils", "k": [], "r": "r1.6", "t": "tf.contrib.kfac.utils"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/kfac/utils/SequenceDict", "k": ["__getitem__", "__init__", "__setitem__", "items"], "r": "r1.6", "t": "tf.contrib.kfac.utils.SequenceDict"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/kfac/utils/SubGraph", "k": ["__init__", "filter_list", "is_member", "variable_uses"], "r": "r1.6", "t": "tf.contrib.kfac.utils.SubGraph"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/kfac/utils/batch_execute", "k": [], "r": "r1.6", "t": "tf.contrib.kfac.utils.batch_execute"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/kfac/utils/column_to_tensors", "k": [], "r": "r1.6", "t": "tf.contrib.kfac.utils.column_to_tensors"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/kfac/utils/ensure_sequence", "k": [], "r": "r1.6", "t": "tf.contrib.kfac.utils.ensure_sequence"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/kfac/utils/fwd_gradients", "k": [], "r": "r1.6", "t": "tf.contrib.kfac.utils.fwd_gradients"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/kfac/utils/generate_random_signs", "k": [], "r": "r1.6", "t": "tf.contrib.kfac.utils.generate_random_signs"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/kfac/utils/kronecker_product", "k": [], "r": "r1.6", "t": "tf.contrib.kfac.utils.kronecker_product"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/kfac/utils/layer_params_to_mat2d", "k": [], "r": "r1.6", "t": "tf.contrib.kfac.utils.layer_params_to_mat2d"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/kfac/utils/mat2d_to_layer_params", "k": [], "r": "r1.6", "t": "tf.contrib.kfac.utils.mat2d_to_layer_params"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/kfac/utils/posdef_inv", "k": [], "r": "r1.6", "t": "tf.contrib.kfac.utils.posdef_inv"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/kfac/utils/posdef_inv_cholesky", "k": [], "r": "r1.6", "t": "tf.contrib.kfac.utils.posdef_inv_cholesky"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/kfac/utils/posdef_inv_matrix_inverse", "k": [], "r": "r1.6", "t": "tf.contrib.kfac.utils.posdef_inv_matrix_inverse"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/kfac/utils/set_global_constants", "k": [], "r": "r1.6", "t": "tf.contrib.kfac.utils.set_global_constants"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/kfac/utils/tensors_to_column", "k": [], "r": "r1.6", "t": "tf.contrib.kfac.utils.tensors_to_column"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/labeled_tensor", "k": [], "r": "r1.6", "t": "tf.contrib.labeled_tensor"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/layers", "k": ["OPTIMIZER_CLS_NAMES", "OPTIMIZER_SUMMARIES", "SPARSE_FEATURE_CROSS_DEFAULT_HASH_KEY", "elu", "legacy_linear", "legacy_relu", "linear", "relu", "relu6", "scale_gradient"], "r": "r1.6", "t": "tf.contrib.layers"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/layers/GDN", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "r1.6", "t": "tf.contrib.layers.GDN"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/layers/RevBlock", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "backward", "build", "call", "compute_output_shape", "count_params", "forward", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "r1.6", "t": "tf.contrib.layers.RevBlock"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/layers/apply_regularization", "k": [], "r": "r1.6", "t": "tf.contrib.layers.apply_regularization"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/layers/avg_pool2d", "k": [], "r": "r1.6", "t": "tf.contrib.layers.avg_pool2d"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/layers/avg_pool3d", "k": [], "r": "r1.6", "t": "tf.contrib.layers.avg_pool3d"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/layers/batch_norm", "k": [], "r": "r1.6", "t": "tf.contrib.layers.batch_norm"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/layers/bias_add", "k": [], "r": "r1.6", "t": "tf.contrib.layers.bias_add"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/layers/bow_encoder", "k": [], "r": "r1.6", "t": "tf.contrib.layers.bow_encoder"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/layers/bucketized_column", "k": [], "r": "r1.6", "t": "tf.contrib.layers.bucketized_column"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/layers/check_feature_columns", "k": [], "r": "r1.6", "t": "tf.contrib.layers.check_feature_columns"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/layers/conv2d", "k": [], "r": "r1.6", "t": "tf.contrib.layers.conv2d"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/layers/conv2d_in_plane", "k": [], "r": "r1.6", "t": "tf.contrib.layers.conv2d_in_plane"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/layers/conv2d_transpose", "k": [], "r": "r1.6", "t": "tf.contrib.layers.conv2d_transpose"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/layers/conv3d_transpose", "k": [], "r": "r1.6", "t": "tf.contrib.layers.conv3d_transpose"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/layers/create_feature_spec_for_parsing", "k": [], "r": "r1.6", "t": "tf.contrib.layers.create_feature_spec_for_parsing"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/layers/crossed_column", "k": [], "r": "r1.6", "t": "tf.contrib.layers.crossed_column"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/layers/dense_to_sparse", "k": [], "r": "r1.6", "t": "tf.contrib.layers.dense_to_sparse"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/layers/dropout", "k": [], "r": "r1.6", "t": "tf.contrib.layers.dropout"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/layers/embed_sequence", "k": [], "r": "r1.6", "t": "tf.contrib.layers.embed_sequence"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/layers/embedding_column", "k": [], "r": "r1.6", "t": "tf.contrib.layers.embedding_column"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/layers/embedding_lookup_unique", "k": [], "r": "r1.6", "t": "tf.contrib.layers.embedding_lookup_unique"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/layers/feature_column", "k": [], "r": "r1.6", "t": "tf.contrib.layers.feature_column"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/layers/flatten", "k": [], "r": "r1.6", "t": "tf.contrib.layers.flatten"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/layers/fully_connected", "k": [], "r": "r1.6", "t": "tf.contrib.layers.fully_connected"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/layers/gdn", "k": [], "r": "r1.6", "t": "tf.contrib.layers.gdn"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/layers/infer_real_valued_columns", "k": [], "r": "r1.6", "t": "tf.contrib.layers.infer_real_valued_columns"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/layers/input_from_feature_columns", "k": [], "r": "r1.6", "t": "tf.contrib.layers.input_from_feature_columns"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/layers/instance_norm", "k": [], "r": "r1.6", "t": "tf.contrib.layers.instance_norm"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/layers/joint_weighted_sum_from_feature_columns", "k": [], "r": "r1.6", "t": "tf.contrib.layers.joint_weighted_sum_from_feature_columns"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/layers/l1_l2_regularizer", "k": [], "r": "r1.6", "t": "tf.contrib.layers.l1_l2_regularizer"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/layers/l1_regularizer", "k": [], "r": "r1.6", "t": "tf.contrib.layers.l1_regularizer"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/layers/l2_regularizer", "k": [], "r": "r1.6", "t": "tf.contrib.layers.l2_regularizer"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/layers/layer_norm", "k": [], "r": "r1.6", "t": "tf.contrib.layers.layer_norm"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/layers/legacy_fully_connected", "k": [], "r": "r1.6", "t": "tf.contrib.layers.legacy_fully_connected"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/layers/make_place_holder_tensors_for_base_features", "k": [], "r": "r1.6", "t": "tf.contrib.layers.make_place_holder_tensors_for_base_features"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/layers/max_pool2d", "k": [], "r": "r1.6", "t": "tf.contrib.layers.max_pool2d"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/layers/max_pool3d", "k": [], "r": "r1.6", "t": "tf.contrib.layers.max_pool3d"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/layers/maxout", "k": [], "r": "r1.6", "t": "tf.contrib.layers.maxout"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/layers/multi_class_target", "k": [], "r": "r1.6", "t": "tf.contrib.layers.multi_class_target"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/layers/one_hot_column", "k": [], "r": "r1.6", "t": "tf.contrib.layers.one_hot_column"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/layers/one_hot_encoding", "k": [], "r": "r1.6", "t": "tf.contrib.layers.one_hot_encoding"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/layers/optimize_loss", "k": [], "r": "r1.6", "t": "tf.contrib.layers.optimize_loss"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/layers/parse_feature_columns_from_examples", "k": [], "r": "r1.6", "t": "tf.contrib.layers.parse_feature_columns_from_examples"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/layers/parse_feature_columns_from_sequence_examples", "k": [], "r": "r1.6", "t": "tf.contrib.layers.parse_feature_columns_from_sequence_examples"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/layers/real_valued_column", "k": [], "r": "r1.6", "t": "tf.contrib.layers.real_valued_column"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/layers/recompute_grad", "k": [], "r": "r1.6", "t": "tf.contrib.layers.recompute_grad"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/layers/regression_target", "k": [], "r": "r1.6", "t": "tf.contrib.layers.regression_target"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/layers/repeat", "k": [], "r": "r1.6", "t": "tf.contrib.layers.repeat"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/layers/rev_block", "k": [], "r": "r1.6", "t": "tf.contrib.layers.rev_block"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/layers/safe_embedding_lookup_sparse", "k": [], "r": "r1.6", "t": "tf.contrib.layers.safe_embedding_lookup_sparse"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/layers/scattered_embedding_column", "k": [], "r": "r1.6", "t": "tf.contrib.layers.scattered_embedding_column"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/layers/separable_conv2d", "k": [], "r": "r1.6", "t": "tf.contrib.layers.separable_conv2d"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/layers/sequence_input_from_feature_columns", "k": [], "r": "r1.6", "t": "tf.contrib.layers.sequence_input_from_feature_columns"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/layers/shared_embedding_columns", "k": [], "r": "r1.6", "t": "tf.contrib.layers.shared_embedding_columns"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/layers/softmax", "k": [], "r": "r1.6", "t": "tf.contrib.layers.softmax"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/layers/sparse_column_with_hash_bucket", "k": [], "r": "r1.6", "t": "tf.contrib.layers.sparse_column_with_hash_bucket"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/layers/sparse_column_with_integerized_feature", "k": [], "r": "r1.6", "t": "tf.contrib.layers.sparse_column_with_integerized_feature"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/layers/sparse_column_with_keys", "k": [], "r": "r1.6", "t": "tf.contrib.layers.sparse_column_with_keys"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/layers/sparse_column_with_vocabulary_file", "k": [], "r": "r1.6", "t": "tf.contrib.layers.sparse_column_with_vocabulary_file"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/layers/spatial_softmax", "k": [], "r": "r1.6", "t": "tf.contrib.layers.spatial_softmax"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/layers/stack", "k": [], "r": "r1.6", "t": "tf.contrib.layers.stack"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/layers/sum_regularizer", "k": [], "r": "r1.6", "t": "tf.contrib.layers.sum_regularizer"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/layers/summaries", "k": [], "r": "r1.6", "t": "tf.contrib.layers.summaries"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/layers/summarize_activation", "k": [], "r": "r1.6", "t": "tf.contrib.layers.summarize_activation"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/layers/summarize_activations", "k": [], "r": "r1.6", "t": "tf.contrib.layers.summarize_activations"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/layers/summarize_collection", "k": [], "r": "r1.6", "t": "tf.contrib.layers.summarize_collection"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/layers/summarize_tensor", "k": [], "r": "r1.6", "t": "tf.contrib.layers.summarize_tensor"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/layers/summarize_tensors", "k": [], "r": "r1.6", "t": "tf.contrib.layers.summarize_tensors"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/layers/transform_features", "k": [], "r": "r1.6", "t": "tf.contrib.layers.transform_features"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/layers/unit_norm", "k": [], "r": "r1.6", "t": "tf.contrib.layers.unit_norm"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/layers/variance_scaling_initializer", "k": [], "r": "r1.6", "t": "tf.contrib.layers.variance_scaling_initializer"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/layers/weighted_sparse_column", "k": [], "r": "r1.6", "t": "tf.contrib.layers.weighted_sparse_column"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/layers/weighted_sum_from_feature_columns", "k": [], "r": "r1.6", "t": "tf.contrib.layers.weighted_sum_from_feature_columns"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/layers/xavier_initializer", "k": [], "r": "r1.6", "t": "tf.contrib.layers.xavier_initializer"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/learn", "k": [], "r": "r1.6", "t": "tf.contrib.learn"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/learn/BaseEstimator", "k": ["config", "model_dir", "__init__", "evaluate", "export", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "set_params"], "r": "r1.6", "t": "tf.contrib.learn.BaseEstimator"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/learn/DNNClassifier", "k": ["config", "model_dir", "__init__", "evaluate", "export", "export_savedmodel", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "predict_classes", "predict_proba", "set_params"], "r": "r1.6", "t": "tf.contrib.learn.DNNClassifier"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/learn/DNNEstimator", "k": ["config", "model_dir", "__init__", "evaluate", "export", "export_savedmodel", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "set_params"], "r": "r1.6", "t": "tf.contrib.learn.DNNEstimator"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/learn/DNNLinearCombinedClassifier", "k": ["config", "model_dir", "__init__", "evaluate", "export", "export_savedmodel", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "predict_classes", "predict_proba", "set_params"], "r": "r1.6", "t": "tf.contrib.learn.DNNLinearCombinedClassifier"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/learn/DNNLinearCombinedEstimator", "k": ["config", "model_dir", "__init__", "evaluate", "export", "export_savedmodel", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "set_params"], "r": "r1.6", "t": "tf.contrib.learn.DNNLinearCombinedEstimator"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/learn/DNNLinearCombinedRegressor", "k": ["config", "model_dir", "__init__", "evaluate", "export", "export_savedmodel", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "predict_scores", "set_params"], "r": "r1.6", "t": "tf.contrib.learn.DNNLinearCombinedRegressor"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/learn/DNNRegressor", "k": ["config", "model_dir", "__init__", "evaluate", "export", "export_savedmodel", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "predict_scores", "set_params"], "r": "r1.6", "t": "tf.contrib.learn.DNNRegressor"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/learn/DynamicRnnEstimator", "k": ["config", "model_dir", "__init__", "evaluate", "export", "export_savedmodel", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "set_params"], "r": "r1.6", "t": "tf.contrib.learn.DynamicRnnEstimator"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/learn/Estimator", "k": ["config", "model_dir", "__init__", "evaluate", "export", "export_savedmodel", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "set_params"], "r": "r1.6", "t": "tf.contrib.learn.Estimator"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/learn/Evaluable", "k": ["model_dir", "evaluate"], "r": "r1.6", "t": "tf.contrib.learn.Evaluable"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/learn/Experiment", "k": ["estimator", "eval_metrics", "eval_steps", "train_steps", "__init__", "continuous_eval", "continuous_eval_on_train_data", "continuous_train_and_eval", "evaluate", "extend_train_hooks", "local_run", "reset_export_strategies", "run_std_server", "test", "train", "train_and_evaluate"], "r": "r1.6", "t": "tf.contrib.learn.Experiment"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/learn/ExportStrategy", "k": ["export_fn", "name", "strip_default_attrs", "__new__", "export"], "r": "r1.6", "t": "tf.contrib.learn.ExportStrategy"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/learn/Head", "k": ["logits_dimension", "create_model_fn_ops"], "r": "r1.6", "t": "tf.contrib.learn.Head"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/learn/InputFnOps", "k": ["default_inputs", "features", "labels", "__new__"], "r": "r1.6", "t": "tf.contrib.learn.InputFnOps"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/learn/KMeansClustering", "k": ["config", "model_dir", "__init__", "clusters", "evaluate", "export", "export_savedmodel", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "predict_cluster_idx", "score", "set_params", "transform", "ALL_SCORES", "CLUSTERS", "CLUSTER_IDX", "COSINE_DISTANCE", "KMEANS_PLUS_PLUS_INIT", "LOSS_OP_NAME", "RANDOM_INIT", "SCORES", "SQUARED_EUCLIDEAN_DISTANCE"], "r": "r1.6", "t": "tf.contrib.learn.KMeansClustering"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/learn/LinearClassifier", "k": ["config", "model_dir", "__init__", "evaluate", "export", "export_savedmodel", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "predict_classes", "predict_proba", "set_params"], "r": "r1.6", "t": "tf.contrib.learn.LinearClassifier"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/learn/LinearEstimator", "k": ["config", "model_dir", "__init__", "evaluate", "export", "export_savedmodel", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "set_params"], "r": "r1.6", "t": "tf.contrib.learn.LinearEstimator"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/learn/LinearRegressor", "k": ["config", "model_dir", "__init__", "evaluate", "export", "export_savedmodel", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "predict_scores", "set_params"], "r": "r1.6", "t": "tf.contrib.learn.LinearRegressor"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/learn/LogisticRegressor", "k": [], "r": "r1.6", "t": "tf.contrib.learn.LogisticRegressor"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/learn/MetricSpec", "k": ["label_key", "metric_fn", "prediction_key", "weight_key", "__init__", "create_metric_ops"], "r": "r1.6", "t": "tf.contrib.learn.MetricSpec"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/learn/ModeKeys", "k": ["validate", "EVAL", "INFER", "TRAIN"], "r": "r1.6", "t": "tf.contrib.learn.ModeKeys"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/learn/ModelFnOps", "k": ["eval_metric_ops", "loss", "mode", "output_alternatives", "predictions", "scaffold", "train_op", "training_chief_hooks", "training_hooks", "__new__", "estimator_spec"], "r": "r1.6", "t": "tf.contrib.learn.ModelFnOps"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/learn/NanLossDuringTrainingError", "k": [], "r": "r1.6", "t": "tf.contrib.learn.NanLossDuringTrainingError"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/learn/NotFittedError", "k": [], "r": "r1.6", "t": "tf.contrib.learn.NotFittedError"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/learn/PredictionKey", "k": ["CLASSES", "GENERIC", "LOGISTIC", "LOGITS", "PROBABILITIES", "SCORES", "TOP_K"], "r": "r1.6", "t": "tf.contrib.learn.PredictionKey"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/learn/ProblemType", "k": ["CLASSIFICATION", "LINEAR_REGRESSION", "LOGISTIC_REGRESSION", "UNSPECIFIED"], "r": "r1.6", "t": "tf.contrib.learn.ProblemType"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/learn/RunConfig", "k": ["cluster_spec", "environment", "evaluation_master", "global_id_in_cluster", "is_chief", "keep_checkpoint_every_n_hours", "keep_checkpoint_max", "log_step_count_steps", "master", "model_dir", "num_ps_replicas", "num_worker_replicas", "save_checkpoints_secs", "save_checkpoints_steps", "save_summary_steps", "service", "session_config", "task_id", "task_type", "tf_config", "tf_random_seed", "__init__", "get_task_id", "replace", "uid"], "r": "r1.6", "t": "tf.contrib.learn.RunConfig"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/learn/SKCompat", "k": ["__init__", "fit", "get_params", "predict", "score", "set_params"], "r": "r1.6", "t": "tf.contrib.learn.SKCompat"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/learn/SVM", "k": ["config", "model_dir", "__init__", "evaluate", "export", "export_savedmodel", "export_with_defaults", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "predict_classes", "predict_proba", "set_params"], "r": "r1.6", "t": "tf.contrib.learn.SVM"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/learn/TaskType", "k": ["MASTER", "PS", "WORKER"], "r": "r1.6", "t": "tf.contrib.learn.TaskType"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/learn/Trainable", "k": ["fit"], "r": "r1.6", "t": "tf.contrib.learn.Trainable"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/learn/binary_svm_head", "k": [], "r": "r1.6", "t": "tf.contrib.learn.binary_svm_head"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/learn/build_parsing_serving_input_fn", "k": [], "r": "r1.6", "t": "tf.contrib.learn.build_parsing_serving_input_fn"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/learn/datasets", "k": [], "r": "r1.6", "t": "tf.contrib.learn.datasets"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/learn/evaluate", "k": [], "r": "r1.6", "t": "tf.contrib.learn.evaluate"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/learn/extract_dask_data", "k": [], "r": "r1.6", "t": "tf.contrib.learn.extract_dask_data"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/learn/extract_dask_labels", "k": [], "r": "r1.6", "t": "tf.contrib.learn.extract_dask_labels"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/learn/extract_pandas_data", "k": [], "r": "r1.6", "t": "tf.contrib.learn.extract_pandas_data"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/learn/extract_pandas_labels", "k": [], "r": "r1.6", "t": "tf.contrib.learn.extract_pandas_labels"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/learn/extract_pandas_matrix", "k": [], "r": "r1.6", "t": "tf.contrib.learn.extract_pandas_matrix"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/learn/graph_actions", "k": [], "r": "r1.6", "t": "tf.contrib.learn.graph_actions"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/learn/head", "k": [], "r": "r1.6", "t": "tf.contrib.learn.head"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/learn/infer", "k": [], "r": "r1.6", "t": "tf.contrib.learn.infer"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/learn/infer_real_valued_columns_from_input", "k": [], "r": "r1.6", "t": "tf.contrib.learn.infer_real_valued_columns_from_input"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/learn/infer_real_valued_columns_from_input_fn", "k": [], "r": "r1.6", "t": "tf.contrib.learn.infer_real_valued_columns_from_input_fn"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/learn/io", "k": [], "r": "r1.6", "t": "tf.contrib.learn.io"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/learn/learn_runner", "k": [], "r": "r1.6", "t": "tf.contrib.learn.learn_runner"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/learn/learn_runner/run", "k": [], "r": "r1.6", "t": "tf.contrib.learn.learn_runner.run"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/learn/learn_runner/tune", "k": [], "r": "r1.6", "t": "tf.contrib.learn.learn_runner.tune"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/learn/make_export_strategy", "k": [], "r": "r1.6", "t": "tf.contrib.learn.make_export_strategy"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/learn/models", "k": [], "r": "r1.6", "t": "tf.contrib.learn.models"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/learn/monitors", "k": [], "r": "r1.6", "t": "tf.contrib.learn.monitors"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/learn/multi_class_head", "k": [], "r": "r1.6", "t": "tf.contrib.learn.multi_class_head"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/learn/multi_head", "k": [], "r": "r1.6", "t": "tf.contrib.learn.multi_head"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/learn/multi_label_head", "k": [], "r": "r1.6", "t": "tf.contrib.learn.multi_label_head"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/learn/no_op_train_fn", "k": [], "r": "r1.6", "t": "tf.contrib.learn.no_op_train_fn"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/learn/ops", "k": [], "r": "r1.6", "t": "tf.contrib.learn.ops"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/learn/poisson_regression_head", "k": [], "r": "r1.6", "t": "tf.contrib.learn.poisson_regression_head"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/learn/preprocessing", "k": [], "r": "r1.6", "t": "tf.contrib.learn.preprocessing"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/learn/read_batch_examples", "k": [], "r": "r1.6", "t": "tf.contrib.learn.read_batch_examples"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/learn/read_batch_features", "k": [], "r": "r1.6", "t": "tf.contrib.learn.read_batch_features"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/learn/read_batch_record_features", "k": [], "r": "r1.6", "t": "tf.contrib.learn.read_batch_record_features"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/learn/read_keyed_batch_examples", "k": [], "r": "r1.6", "t": "tf.contrib.learn.read_keyed_batch_examples"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/learn/read_keyed_batch_examples_shared_queue", "k": [], "r": "r1.6", "t": "tf.contrib.learn.read_keyed_batch_examples_shared_queue"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/learn/read_keyed_batch_features", "k": [], "r": "r1.6", "t": "tf.contrib.learn.read_keyed_batch_features"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/learn/read_keyed_batch_features_shared_queue", "k": [], "r": "r1.6", "t": "tf.contrib.learn.read_keyed_batch_features_shared_queue"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/learn/regression_head", "k": [], "r": "r1.6", "t": "tf.contrib.learn.regression_head"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/learn/run_feeds", "k": [], "r": "r1.6", "t": "tf.contrib.learn.run_feeds"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/learn/run_n", "k": [], "r": "r1.6", "t": "tf.contrib.learn.run_n"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/learn/train", "k": [], "r": "r1.6", "t": "tf.contrib.learn.train"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/learn/utils", "k": [], "r": "r1.6", "t": "tf.contrib.learn.utils"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/legacy_seq2seq", "k": [], "r": "r1.6", "t": "tf.contrib.legacy_seq2seq"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/legacy_seq2seq/attention_decoder", "k": [], "r": "r1.6", "t": "tf.contrib.legacy_seq2seq.attention_decoder"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/legacy_seq2seq/basic_rnn_seq2seq", "k": [], "r": "r1.6", "t": "tf.contrib.legacy_seq2seq.basic_rnn_seq2seq"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/legacy_seq2seq/embedding_attention_decoder", "k": [], "r": "r1.6", "t": "tf.contrib.legacy_seq2seq.embedding_attention_decoder"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/legacy_seq2seq/embedding_attention_seq2seq", "k": [], "r": "r1.6", "t": "tf.contrib.legacy_seq2seq.embedding_attention_seq2seq"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/legacy_seq2seq/embedding_rnn_decoder", "k": [], "r": "r1.6", "t": "tf.contrib.legacy_seq2seq.embedding_rnn_decoder"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/legacy_seq2seq/embedding_rnn_seq2seq", "k": [], "r": "r1.6", "t": "tf.contrib.legacy_seq2seq.embedding_rnn_seq2seq"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/legacy_seq2seq/embedding_tied_rnn_seq2seq", "k": [], "r": "r1.6", "t": "tf.contrib.legacy_seq2seq.embedding_tied_rnn_seq2seq"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/legacy_seq2seq/model_with_buckets", "k": [], "r": "r1.6", "t": "tf.contrib.legacy_seq2seq.model_with_buckets"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/legacy_seq2seq/one2many_rnn_seq2seq", "k": [], "r": "r1.6", "t": "tf.contrib.legacy_seq2seq.one2many_rnn_seq2seq"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/legacy_seq2seq/rnn_decoder", "k": [], "r": "r1.6", "t": "tf.contrib.legacy_seq2seq.rnn_decoder"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/legacy_seq2seq/sequence_loss", "k": [], "r": "r1.6", "t": "tf.contrib.legacy_seq2seq.sequence_loss"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/legacy_seq2seq/sequence_loss_by_example", "k": [], "r": "r1.6", "t": "tf.contrib.legacy_seq2seq.sequence_loss_by_example"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/legacy_seq2seq/tied_rnn_seq2seq", "k": [], "r": "r1.6", "t": "tf.contrib.legacy_seq2seq.tied_rnn_seq2seq"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/linalg", "k": [], "r": "r1.6", "t": "tf.contrib.linalg"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/linear_optimizer", "k": [], "r": "r1.6", "t": "tf.contrib.linear_optimizer"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/linear_optimizer/SDCAOptimizer", "k": ["example_id_column", "num_loss_partitions", "num_table_shards", "symmetric_l1_regularization", "symmetric_l2_regularization", "__init__", "get_name", "get_train_step"], "r": "r1.6", "t": "tf.contrib.linear_optimizer.SDCAOptimizer"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/linear_optimizer/SdcaModel", "k": ["__init__", "approximate_duality_gap", "minimize", "predictions", "regularized_loss", "unregularized_loss", "update_weights"], "r": "r1.6", "t": "tf.contrib.linear_optimizer.SdcaModel"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/linear_optimizer/SparseFeatureColumn", "k": ["example_indices", "feature_indices", "feature_values", "__init__"], "r": "r1.6", "t": "tf.contrib.linear_optimizer.SparseFeatureColumn"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/lite", "k": ["EXPERIMENTAL_USE_TOCO_API_DIRECTLY", "FLOAT", "GRAPHVIZ_DOT", "INT32", "INT64", "QUANTIZED_UINT8", "STRING", "TENSORFLOW_GRAPHDEF", "TFLITE"], "r": "r1.6", "t": "tf.contrib.lite"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/lite/OpHint", "k": ["__init__", "add_inputs", "add_outputs", "FUNCTION_INPUT_INDEX_ATTR", "FUNCTION_NAME_ATTR", "FUNCTION_OUTPUT_INDEX_ATTR", "FUNCTION_UUID_ATTR"], "r": "r1.6", "t": "tf.contrib.lite.OpHint"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/lite/convert_op_hints_to_stubs", "k": [], "r": "r1.6", "t": "tf.contrib.lite.convert_op_hints_to_stubs"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/lite/toco_convert", "k": [], "r": "r1.6", "t": "tf.contrib.lite.toco_convert"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/lite/toco_convert_protos", "k": [], "r": "r1.6", "t": "tf.contrib.lite.toco_convert_protos"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/lookup", "k": ["FastHashSpec"], "r": "r1.6", "t": "tf.contrib.lookup"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/lookup/HashTable", "k": ["default_value", "init", "key_dtype", "name", "table_ref", "value_dtype", "__init__", "lookup", "size"], "r": "r1.6", "t": "tf.contrib.lookup.HashTable"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/lookup/HasherSpec", "k": ["hasher", "key", "__new__"], "r": "r1.6", "t": "tf.contrib.lookup.HasherSpec"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/lookup/IdTableWithHashBuckets", "k": ["init", "key_dtype", "name", "table_ref", "value_dtype", "__init__", "lookup", "size"], "r": "r1.6", "t": "tf.contrib.lookup.IdTableWithHashBuckets"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/lookup/InitializableLookupTableBase", "k": ["default_value", "init", "key_dtype", "name", "table_ref", "value_dtype", "__init__", "lookup", "size"], "r": "r1.6", "t": "tf.contrib.lookup.InitializableLookupTableBase"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/lookup/KeyValueTensorInitializer", "k": ["key_dtype", "value_dtype", "__init__", "initialize"], "r": "r1.6", "t": "tf.contrib.lookup.KeyValueTensorInitializer"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/lookup/LookupInterface", "k": ["init", "key_dtype", "name", "value_dtype", "__init__", "lookup", "size"], "r": "r1.6", "t": "tf.contrib.lookup.LookupInterface"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/lookup/MutableDenseHashTable", "k": ["init", "key_dtype", "name", "value_dtype", "__init__", "export", "insert", "lookup", "size"], "r": "r1.6", "t": "tf.contrib.lookup.MutableDenseHashTable"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/lookup/MutableHashTable", "k": ["init", "key_dtype", "name", "value_dtype", "__init__", "export", "insert", "lookup", "size"], "r": "r1.6", "t": "tf.contrib.lookup.MutableHashTable"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/lookup/StrongHashSpec", "k": ["hasher", "key", "__new__"], "r": "r1.6", "t": "tf.contrib.lookup.StrongHashSpec"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/lookup/TableInitializerBase", "k": ["key_dtype", "value_dtype", "__init__", "initialize"], "r": "r1.6", "t": "tf.contrib.lookup.TableInitializerBase"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/lookup/TextFileIdTableInitializer", "k": ["key_dtype", "value_dtype", "__init__", "initialize"], "r": "r1.6", "t": "tf.contrib.lookup.TextFileIdTableInitializer"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/lookup/TextFileIndex", "k": ["LINE_NUMBER", "WHOLE_LINE"], "r": "r1.6", "t": "tf.contrib.lookup.TextFileIndex"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/lookup/TextFileInitializer", "k": ["key_dtype", "value_dtype", "__init__", "initialize"], "r": "r1.6", "t": "tf.contrib.lookup.TextFileInitializer"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/lookup/TextFileStringTableInitializer", "k": ["key_dtype", "value_dtype", "__init__", "initialize"], "r": "r1.6", "t": "tf.contrib.lookup.TextFileStringTableInitializer"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/lookup/index_table_from_file", "k": [], "r": "r1.6", "t": "tf.contrib.lookup.index_table_from_file"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/lookup/index_table_from_tensor", "k": [], "r": "r1.6", "t": "tf.contrib.lookup.index_table_from_tensor"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/lookup/index_to_string", "k": [], "r": "r1.6", "t": "tf.contrib.lookup.index_to_string"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/lookup/index_to_string_table_from_file", "k": [], "r": "r1.6", "t": "tf.contrib.lookup.index_to_string_table_from_file"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/lookup/index_to_string_table_from_tensor", "k": [], "r": "r1.6", "t": "tf.contrib.lookup.index_to_string_table_from_tensor"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/lookup/string_to_index", "k": [], "r": "r1.6", "t": "tf.contrib.lookup.string_to_index"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/lookup/string_to_index_table_from_file", "k": [], "r": "r1.6", "t": "tf.contrib.lookup.string_to_index_table_from_file"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/lookup/string_to_index_table_from_tensor", "k": [], "r": "r1.6", "t": "tf.contrib.lookup.string_to_index_table_from_tensor"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/losses", "k": [], "r": "r1.6", "t": "tf.contrib.losses"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/losses/absolute_difference", "k": [], "r": "r1.6", "t": "tf.contrib.losses.absolute_difference"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/losses/add_loss", "k": [], "r": "r1.6", "t": "tf.contrib.losses.add_loss"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/losses/compute_weighted_loss", "k": [], "r": "r1.6", "t": "tf.contrib.losses.compute_weighted_loss"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/losses/cosine_distance", "k": [], "r": "r1.6", "t": "tf.contrib.losses.cosine_distance"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/losses/get_losses", "k": [], "r": "r1.6", "t": "tf.contrib.losses.get_losses"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/losses/get_regularization_losses", "k": [], "r": "r1.6", "t": "tf.contrib.losses.get_regularization_losses"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/losses/get_total_loss", "k": [], "r": "r1.6", "t": "tf.contrib.losses.get_total_loss"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/losses/hinge_loss", "k": [], "r": "r1.6", "t": "tf.contrib.losses.hinge_loss"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/losses/log_loss", "k": [], "r": "r1.6", "t": "tf.contrib.losses.log_loss"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/losses/mean_pairwise_squared_error", "k": [], "r": "r1.6", "t": "tf.contrib.losses.mean_pairwise_squared_error"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/losses/mean_squared_error", "k": [], "r": "r1.6", "t": "tf.contrib.losses.mean_squared_error"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/losses/metric_learning", "k": [], "r": "r1.6", "t": "tf.contrib.losses.metric_learning"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/losses/metric_learning/cluster_loss", "k": [], "r": "r1.6", "t": "tf.contrib.losses.metric_learning.cluster_loss"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/losses/metric_learning/contrastive_loss", "k": [], "r": "r1.6", "t": "tf.contrib.losses.metric_learning.contrastive_loss"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/losses/metric_learning/lifted_struct_loss", "k": [], "r": "r1.6", "t": "tf.contrib.losses.metric_learning.lifted_struct_loss"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/losses/metric_learning/npairs_loss", "k": [], "r": "r1.6", "t": "tf.contrib.losses.metric_learning.npairs_loss"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/losses/metric_learning/npairs_loss_multilabel", "k": [], "r": "r1.6", "t": "tf.contrib.losses.metric_learning.npairs_loss_multilabel"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/losses/metric_learning/triplet_semihard_loss", "k": [], "r": "r1.6", "t": "tf.contrib.losses.metric_learning.triplet_semihard_loss"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/losses/sigmoid_cross_entropy", "k": [], "r": "r1.6", "t": "tf.contrib.losses.sigmoid_cross_entropy"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/losses/softmax_cross_entropy", "k": [], "r": "r1.6", "t": "tf.contrib.losses.softmax_cross_entropy"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/losses/sparse_softmax_cross_entropy", "k": [], "r": "r1.6", "t": "tf.contrib.losses.sparse_softmax_cross_entropy"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/memory_stats", "k": [], "r": "r1.6", "t": "tf.contrib.memory_stats"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/memory_stats/BytesInUse", "k": [], "r": "r1.6", "t": "tf.contrib.memory_stats.BytesInUse"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/memory_stats/BytesLimit", "k": [], "r": "r1.6", "t": "tf.contrib.memory_stats.BytesLimit"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/memory_stats/MaxBytesInUse", "k": [], "r": "r1.6", "t": "tf.contrib.memory_stats.MaxBytesInUse"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/meta_graph_transform", "k": [], "r": "r1.6", "t": "tf.contrib.meta_graph_transform"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/meta_graph_transform/meta_graph_transform", "k": ["absolute_import", "division", "print_function"], "r": "r1.6", "t": "tf.contrib.meta_graph_transform.meta_graph_transform"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/meta_graph_transform/meta_graph_transform/meta_graph_transform", "k": [], "r": "r1.6", "t": "tf.contrib.meta_graph_transform.meta_graph_transform.meta_graph_transform"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/metrics", "k": [], "r": "r1.6", "t": "tf.contrib.metrics"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/metrics/accuracy", "k": [], "r": "r1.6", "t": "tf.contrib.metrics.accuracy"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/metrics/aggregate_metric_map", "k": [], "r": "r1.6", "t": "tf.contrib.metrics.aggregate_metric_map"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/metrics/aggregate_metrics", "k": [], "r": "r1.6", "t": "tf.contrib.metrics.aggregate_metrics"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/metrics/auc_using_histogram", "k": [], "r": "r1.6", "t": "tf.contrib.metrics.auc_using_histogram"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/metrics/cohen_kappa", "k": [], "r": "r1.6", "t": "tf.contrib.metrics.cohen_kappa"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/metrics/confusion_matrix", "k": [], "r": "r1.6", "t": "tf.contrib.metrics.confusion_matrix"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/metrics/count", "k": [], "r": "r1.6", "t": "tf.contrib.metrics.count"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/metrics/precision_recall_at_equal_thresholds", "k": [], "r": "r1.6", "t": "tf.contrib.metrics.precision_recall_at_equal_thresholds"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/metrics/recall_at_precision", "k": [], "r": "r1.6", "t": "tf.contrib.metrics.recall_at_precision"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/metrics/sparse_recall_at_top_k", "k": [], "r": "r1.6", "t": "tf.contrib.metrics.sparse_recall_at_top_k"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/metrics/streaming_accuracy", "k": [], "r": "r1.6", "t": "tf.contrib.metrics.streaming_accuracy"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/metrics/streaming_auc", "k": [], "r": "r1.6", "t": "tf.contrib.metrics.streaming_auc"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/metrics/streaming_concat", "k": [], "r": "r1.6", "t": "tf.contrib.metrics.streaming_concat"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/metrics/streaming_covariance", "k": [], "r": "r1.6", "t": "tf.contrib.metrics.streaming_covariance"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/metrics/streaming_curve_points", "k": [], "r": "r1.6", "t": "tf.contrib.metrics.streaming_curve_points"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/metrics/streaming_dynamic_auc", "k": [], "r": "r1.6", "t": "tf.contrib.metrics.streaming_dynamic_auc"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/metrics/streaming_false_negative_rate", "k": [], "r": "r1.6", "t": "tf.contrib.metrics.streaming_false_negative_rate"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/metrics/streaming_false_negative_rate_at_thresholds", "k": [], "r": "r1.6", "t": "tf.contrib.metrics.streaming_false_negative_rate_at_thresholds"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/metrics/streaming_false_negatives", "k": [], "r": "r1.6", "t": "tf.contrib.metrics.streaming_false_negatives"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/metrics/streaming_false_negatives_at_thresholds", "k": [], "r": "r1.6", "t": "tf.contrib.metrics.streaming_false_negatives_at_thresholds"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/metrics/streaming_false_positive_rate", "k": [], "r": "r1.6", "t": "tf.contrib.metrics.streaming_false_positive_rate"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/metrics/streaming_false_positive_rate_at_thresholds", "k": [], "r": "r1.6", "t": "tf.contrib.metrics.streaming_false_positive_rate_at_thresholds"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/metrics/streaming_false_positives", "k": [], "r": "r1.6", "t": "tf.contrib.metrics.streaming_false_positives"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/metrics/streaming_false_positives_at_thresholds", "k": [], "r": "r1.6", "t": "tf.contrib.metrics.streaming_false_positives_at_thresholds"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/metrics/streaming_mean", "k": [], "r": "r1.6", "t": "tf.contrib.metrics.streaming_mean"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/metrics/streaming_mean_absolute_error", "k": [], "r": "r1.6", "t": "tf.contrib.metrics.streaming_mean_absolute_error"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/metrics/streaming_mean_cosine_distance", "k": [], "r": "r1.6", "t": "tf.contrib.metrics.streaming_mean_cosine_distance"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/metrics/streaming_mean_iou", "k": [], "r": "r1.6", "t": "tf.contrib.metrics.streaming_mean_iou"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/metrics/streaming_mean_relative_error", "k": [], "r": "r1.6", "t": "tf.contrib.metrics.streaming_mean_relative_error"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/metrics/streaming_mean_squared_error", "k": [], "r": "r1.6", "t": "tf.contrib.metrics.streaming_mean_squared_error"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/metrics/streaming_mean_tensor", "k": [], "r": "r1.6", "t": "tf.contrib.metrics.streaming_mean_tensor"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/metrics/streaming_pearson_correlation", "k": [], "r": "r1.6", "t": "tf.contrib.metrics.streaming_pearson_correlation"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/metrics/streaming_percentage_less", "k": [], "r": "r1.6", "t": "tf.contrib.metrics.streaming_percentage_less"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/metrics/streaming_precision", "k": [], "r": "r1.6", "t": "tf.contrib.metrics.streaming_precision"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/metrics/streaming_precision_at_thresholds", "k": [], "r": "r1.6", "t": "tf.contrib.metrics.streaming_precision_at_thresholds"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/metrics/streaming_recall", "k": [], "r": "r1.6", "t": "tf.contrib.metrics.streaming_recall"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/metrics/streaming_recall_at_k", "k": [], "r": "r1.6", "t": "tf.contrib.metrics.streaming_recall_at_k"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/metrics/streaming_recall_at_thresholds", "k": [], "r": "r1.6", "t": "tf.contrib.metrics.streaming_recall_at_thresholds"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/metrics/streaming_root_mean_squared_error", "k": [], "r": "r1.6", "t": "tf.contrib.metrics.streaming_root_mean_squared_error"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/metrics/streaming_sensitivity_at_specificity", "k": [], "r": "r1.6", "t": "tf.contrib.metrics.streaming_sensitivity_at_specificity"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/metrics/streaming_sparse_average_precision_at_k", "k": [], "r": "r1.6", "t": "tf.contrib.metrics.streaming_sparse_average_precision_at_k"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/metrics/streaming_sparse_average_precision_at_top_k", "k": [], "r": "r1.6", "t": "tf.contrib.metrics.streaming_sparse_average_precision_at_top_k"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/metrics/streaming_sparse_precision_at_k", "k": [], "r": "r1.6", "t": "tf.contrib.metrics.streaming_sparse_precision_at_k"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/metrics/streaming_sparse_precision_at_top_k", "k": [], "r": "r1.6", "t": "tf.contrib.metrics.streaming_sparse_precision_at_top_k"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/metrics/streaming_sparse_recall_at_k", "k": [], "r": "r1.6", "t": "tf.contrib.metrics.streaming_sparse_recall_at_k"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/metrics/streaming_specificity_at_sensitivity", "k": [], "r": "r1.6", "t": "tf.contrib.metrics.streaming_specificity_at_sensitivity"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/metrics/streaming_true_negatives", "k": [], "r": "r1.6", "t": "tf.contrib.metrics.streaming_true_negatives"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/metrics/streaming_true_negatives_at_thresholds", "k": [], "r": "r1.6", "t": "tf.contrib.metrics.streaming_true_negatives_at_thresholds"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/metrics/streaming_true_positives", "k": [], "r": "r1.6", "t": "tf.contrib.metrics.streaming_true_positives"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/metrics/streaming_true_positives_at_thresholds", "k": [], "r": "r1.6", "t": "tf.contrib.metrics.streaming_true_positives_at_thresholds"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/model_pruning", "k": [], "r": "r1.6", "t": "tf.contrib.model_pruning"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/model_pruning/MaskedBasicLSTMCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.6", "t": "tf.contrib.model_pruning.MaskedBasicLSTMCell"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/model_pruning/MaskedLSTMCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.6", "t": "tf.contrib.model_pruning.MaskedLSTMCell"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/model_pruning/Pruning", "k": ["__init__", "add_pruning_summaries", "conditional_mask_update_op", "mask_update_op", "print_hparams"], "r": "r1.6", "t": "tf.contrib.model_pruning.Pruning"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/model_pruning/apply_mask", "k": [], "r": "r1.6", "t": "tf.contrib.model_pruning.apply_mask"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/model_pruning/get_masked_weights", "k": [], "r": "r1.6", "t": "tf.contrib.model_pruning.get_masked_weights"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/model_pruning/get_masks", "k": [], "r": "r1.6", "t": "tf.contrib.model_pruning.get_masks"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/model_pruning/get_pruning_hparams", "k": [], "r": "r1.6", "t": "tf.contrib.model_pruning.get_pruning_hparams"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/model_pruning/get_thresholds", "k": [], "r": "r1.6", "t": "tf.contrib.model_pruning.get_thresholds"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/model_pruning/get_weight_sparsity", "k": [], "r": "r1.6", "t": "tf.contrib.model_pruning.get_weight_sparsity"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/model_pruning/get_weights", "k": [], "r": "r1.6", "t": "tf.contrib.model_pruning.get_weights"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/model_pruning/masked_conv2d", "k": [], "r": "r1.6", "t": "tf.contrib.model_pruning.masked_conv2d"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/model_pruning/masked_fully_connected", "k": [], "r": "r1.6", "t": "tf.contrib.model_pruning.masked_fully_connected"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/model_pruning/train", "k": [], "r": "r1.6", "t": "tf.contrib.model_pruning.train"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/nccl", "k": [], "r": "r1.6", "t": "tf.contrib.nccl"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/nccl/all_max", "k": [], "r": "r1.6", "t": "tf.contrib.nccl.all_max"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/nccl/all_min", "k": [], "r": "r1.6", "t": "tf.contrib.nccl.all_min"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/nccl/all_prod", "k": [], "r": "r1.6", "t": "tf.contrib.nccl.all_prod"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/nccl/all_sum", "k": [], "r": "r1.6", "t": "tf.contrib.nccl.all_sum"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/nccl/broadcast", "k": [], "r": "r1.6", "t": "tf.contrib.nccl.broadcast"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/nccl/reduce_sum", "k": [], "r": "r1.6", "t": "tf.contrib.nccl.reduce_sum"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/ndlstm", "k": [], "r": "r1.6", "t": "tf.contrib.ndlstm"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/nn", "k": [], "r": "r1.6", "t": "tf.contrib.nn"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/nn/alpha_dropout", "k": [], "r": "r1.6", "t": "tf.contrib.nn.alpha_dropout"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/nn/conv1d_transpose", "k": [], "r": "r1.6", "t": "tf.contrib.nn.conv1d_transpose"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/nn/deprecated_flipped_sigmoid_cross_entropy_with_logits", "k": [], "r": "r1.6", "t": "tf.contrib.nn.deprecated_flipped_sigmoid_cross_entropy_with_logits"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/nn/deprecated_flipped_softmax_cross_entropy_with_logits", "k": [], "r": "r1.6", "t": "tf.contrib.nn.deprecated_flipped_softmax_cross_entropy_with_logits"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/nn/deprecated_flipped_sparse_softmax_cross_entropy_with_logits", "k": [], "r": "r1.6", "t": "tf.contrib.nn.deprecated_flipped_sparse_softmax_cross_entropy_with_logits"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/nn/nth_element", "k": [], "r": "r1.6", "t": "tf.contrib.nn.nth_element"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/nn/rank_sampled_softmax_loss", "k": [], "r": "r1.6", "t": "tf.contrib.nn.rank_sampled_softmax_loss"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/nn/sampled_sparse_softmax_loss", "k": [], "r": "r1.6", "t": "tf.contrib.nn.sampled_sparse_softmax_loss"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/nn/scaled_softplus", "k": [], "r": "r1.6", "t": "tf.contrib.nn.scaled_softplus"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/opt", "k": [], "r": "r1.6", "t": "tf.contrib.opt"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/opt/AddSignOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.6", "t": "tf.contrib.opt.AddSignOptimizer"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/opt/DropStaleGradientOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.6", "t": "tf.contrib.opt.DropStaleGradientOptimizer"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/opt/ElasticAverageCustomGetter", "k": ["__call__", "__init__"], "r": "r1.6", "t": "tf.contrib.opt.ElasticAverageCustomGetter"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/opt/ElasticAverageOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_init_op", "get_name", "get_slot", "get_slot_names", "make_session_run_hook", "minimize", "variables", "BETA", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.6", "t": "tf.contrib.opt.ElasticAverageOptimizer"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/opt/ExternalOptimizerInterface", "k": ["__init__", "minimize"], "r": "r1.6", "t": "tf.contrib.opt.ExternalOptimizerInterface"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/opt/LazyAdamOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.6", "t": "tf.contrib.opt.LazyAdamOptimizer"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/opt/ModelAverageCustomGetter", "k": ["__call__", "__init__"], "r": "r1.6", "t": "tf.contrib.opt.ModelAverageCustomGetter"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/opt/ModelAverageOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_init_op", "get_name", "get_slot", "get_slot_names", "make_session_run_hook", "minimize", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.6", "t": "tf.contrib.opt.ModelAverageOptimizer"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/opt/MovingAverageOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "swapping_saver", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.6", "t": "tf.contrib.opt.MovingAverageOptimizer"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/opt/MultitaskOptimizerWrapper", "k": ["__getattr__", "__init__"], "r": "r1.6", "t": "tf.contrib.opt.MultitaskOptimizerWrapper"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/opt/NadamOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.6", "t": "tf.contrib.opt.NadamOptimizer"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/opt/PowerSignOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.6", "t": "tf.contrib.opt.PowerSignOptimizer"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/opt/ScipyOptimizerInterface", "k": ["__init__", "minimize"], "r": "r1.6", "t": "tf.contrib.opt.ScipyOptimizerInterface"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/opt/VariableClippingOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.6", "t": "tf.contrib.opt.VariableClippingOptimizer"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/opt/clip_gradients_by_global_norm", "k": [], "r": "r1.6", "t": "tf.contrib.opt.clip_gradients_by_global_norm"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/periodic_resample", "k": [], "r": "r1.6", "t": "tf.contrib.periodic_resample"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/periodic_resample/periodic_resample", "k": [], "r": "r1.6", "t": "tf.contrib.periodic_resample.periodic_resample"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/predictor", "k": [], "r": "r1.6", "t": "tf.contrib.predictor"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/predictor/from_contrib_estimator", "k": [], "r": "r1.6", "t": "tf.contrib.predictor.from_contrib_estimator"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/predictor/from_estimator", "k": [], "r": "r1.6", "t": "tf.contrib.predictor.from_estimator"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/predictor/from_saved_model", "k": [], "r": "r1.6", "t": "tf.contrib.predictor.from_saved_model"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/quantization", "k": [], "r": "r1.6", "t": "tf.contrib.quantization"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/quantize", "k": [], "r": "r1.6", "t": "tf.contrib.quantize"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/quantize/create_eval_graph", "k": [], "r": "r1.6", "t": "tf.contrib.quantize.create_eval_graph"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/quantize/create_training_graph", "k": [], "r": "r1.6", "t": "tf.contrib.quantize.create_training_graph"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/quantize/experimental_create_eval_graph", "k": [], "r": "r1.6", "t": "tf.contrib.quantize.experimental_create_eval_graph"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/quantize/experimental_create_training_graph", "k": [], "r": "r1.6", "t": "tf.contrib.quantize.experimental_create_training_graph"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/receptive_field", "k": [], "r": "r1.6", "t": "tf.contrib.receptive_field"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/receptive_field/compute_receptive_field_from_graph_def", "k": [], "r": "r1.6", "t": "tf.contrib.receptive_field.compute_receptive_field_from_graph_def"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/receptive_field/get_compute_order", "k": [], "r": "r1.6", "t": "tf.contrib.receptive_field.get_compute_order"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/reduce_slice_ops", "k": ["absolute_import", "division", "print_function"], "r": "r1.6", "t": "tf.contrib.reduce_slice_ops"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/reduce_slice_ops/python", "k": [], "r": "r1.6", "t": "tf.contrib.reduce_slice_ops.python"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/reduce_slice_ops/python/ops", "k": [], "r": "r1.6", "t": "tf.contrib.reduce_slice_ops.python.ops"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/remote_fused_graph", "k": [], "r": "r1.6", "t": "tf.contrib.remote_fused_graph"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/remote_fused_graph/remote_fused_graph_execute", "k": [], "r": "r1.6", "t": "tf.contrib.remote_fused_graph.remote_fused_graph_execute"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/resampler", "k": [], "r": "r1.6", "t": "tf.contrib.resampler"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/resampler/resampler", "k": [], "r": "r1.6", "t": "tf.contrib.resampler.resampler"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/rnn", "k": [], "r": "r1.6", "t": "tf.contrib.rnn"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/rnn/AttentionCellWrapper", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.6", "t": "tf.contrib.rnn.AttentionCellWrapper"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/rnn/BasicLSTMCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.6", "t": "tf.contrib.rnn.BasicLSTMCell"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/rnn/BasicRNNCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.6", "t": "tf.contrib.rnn.BasicRNNCell"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/rnn/BidirectionalGridLSTMCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "state_tuple_type", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.6", "t": "tf.contrib.rnn.BidirectionalGridLSTMCell"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/rnn/CompiledWrapper", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.6", "t": "tf.contrib.rnn.CompiledWrapper"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/rnn/Conv1DLSTMCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.6", "t": "tf.contrib.rnn.Conv1DLSTMCell"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/rnn/Conv2DLSTMCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.6", "t": "tf.contrib.rnn.Conv2DLSTMCell"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/rnn/Conv3DLSTMCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.6", "t": "tf.contrib.rnn.Conv3DLSTMCell"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/rnn/ConvLSTMCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.6", "t": "tf.contrib.rnn.ConvLSTMCell"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/rnn/CoupledInputForgetGateLSTMCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.6", "t": "tf.contrib.rnn.CoupledInputForgetGateLSTMCell"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/rnn/DeviceWrapper", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.6", "t": "tf.contrib.rnn.DeviceWrapper"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/rnn/DropoutWrapper", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "wrapped_cell", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.6", "t": "tf.contrib.rnn.DropoutWrapper"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/rnn/EmbeddingWrapper", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.6", "t": "tf.contrib.rnn.EmbeddingWrapper"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/rnn/FusedRNNCell", "k": ["__call__"], "r": "r1.6", "t": "tf.contrib.rnn.FusedRNNCell"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/rnn/FusedRNNCellAdaptor", "k": ["__call__", "__init__"], "r": "r1.6", "t": "tf.contrib.rnn.FusedRNNCellAdaptor"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/rnn/GLSTMCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.6", "t": "tf.contrib.rnn.GLSTMCell"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/rnn/GRUBlockCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.6", "t": "tf.contrib.rnn.GRUBlockCell"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/rnn/GRUBlockCellV2", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.6", "t": "tf.contrib.rnn.GRUBlockCellV2"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/rnn/GRUCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.6", "t": "tf.contrib.rnn.GRUCell"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/rnn/GridLSTMCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "state_tuple_type", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.6", "t": "tf.contrib.rnn.GridLSTMCell"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/rnn/HighwayWrapper", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.6", "t": "tf.contrib.rnn.HighwayWrapper"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/rnn/InputProjectionWrapper", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.6", "t": "tf.contrib.rnn.InputProjectionWrapper"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/rnn/IntersectionRNNCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.6", "t": "tf.contrib.rnn.IntersectionRNNCell"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/rnn/LSTMBlockCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.6", "t": "tf.contrib.rnn.LSTMBlockCell"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/rnn/LSTMBlockFusedCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "num_units", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "r1.6", "t": "tf.contrib.rnn.LSTMBlockFusedCell"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/rnn/LSTMBlockWrapper", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "num_units", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "r1.6", "t": "tf.contrib.rnn.LSTMBlockWrapper"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/rnn/LSTMCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.6", "t": "tf.contrib.rnn.LSTMCell"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/rnn/LSTMStateTuple", "k": ["c", "dtype", "h", "__new__"], "r": "r1.6", "t": "tf.contrib.rnn.LSTMStateTuple"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/rnn/LayerNormBasicLSTMCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.6", "t": "tf.contrib.rnn.LayerNormBasicLSTMCell"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/rnn/MultiRNNCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.6", "t": "tf.contrib.rnn.MultiRNNCell"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/rnn/NASCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.6", "t": "tf.contrib.rnn.NASCell"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/rnn/OutputProjectionWrapper", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.6", "t": "tf.contrib.rnn.OutputProjectionWrapper"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/rnn/PhasedLSTMCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.6", "t": "tf.contrib.rnn.PhasedLSTMCell"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/rnn/RNNCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.6", "t": "tf.contrib.rnn.RNNCell"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/rnn/ResidualWrapper", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.6", "t": "tf.contrib.rnn.ResidualWrapper"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/rnn/TimeFreqLSTMCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.6", "t": "tf.contrib.rnn.TimeFreqLSTMCell"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/rnn/TimeReversedFusedRNN", "k": ["__call__", "__init__"], "r": "r1.6", "t": "tf.contrib.rnn.TimeReversedFusedRNN"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/rnn/UGRNNCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.6", "t": "tf.contrib.rnn.UGRNNCell"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/rnn/stack_bidirectional_dynamic_rnn", "k": [], "r": "r1.6", "t": "tf.contrib.rnn.stack_bidirectional_dynamic_rnn"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/rnn/stack_bidirectional_rnn", "k": [], "r": "r1.6", "t": "tf.contrib.rnn.stack_bidirectional_rnn"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/saved_model", "k": [], "r": "r1.6", "t": "tf.contrib.saved_model"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/saved_model/get_signature_def_by_key", "k": [], "r": "r1.6", "t": "tf.contrib.saved_model.get_signature_def_by_key"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/seq2seq", "k": [], "r": "r1.6", "t": "tf.contrib.seq2seq"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/seq2seq/AttentionMechanism", "k": ["alignments_size", "state_size"], "r": "r1.6", "t": "tf.contrib.seq2seq.AttentionMechanism"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/seq2seq/AttentionWrapper", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.6", "t": "tf.contrib.seq2seq.AttentionWrapper"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/seq2seq/AttentionWrapperState", "k": ["alignment_history", "alignments", "attention", "attention_state", "cell_state", "time", "__new__", "clone"], "r": "r1.6", "t": "tf.contrib.seq2seq.AttentionWrapperState"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/seq2seq/BahdanauAttention", "k": ["alignments_size", "batch_size", "keys", "memory_layer", "query_layer", "state_size", "values", "__call__", "__init__", "initial_alignments", "initial_state"], "r": "r1.6", "t": "tf.contrib.seq2seq.BahdanauAttention"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/seq2seq/BahdanauMonotonicAttention", "k": ["alignments_size", "batch_size", "keys", "memory_layer", "query_layer", "state_size", "values", "__call__", "__init__", "initial_alignments", "initial_state"], "r": "r1.6", "t": "tf.contrib.seq2seq.BahdanauMonotonicAttention"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/seq2seq/BasicDecoder", "k": ["batch_size", "output_dtype", "output_size", "tracks_own_finished", "__init__", "finalize", "initialize", "step"], "r": "r1.6", "t": "tf.contrib.seq2seq.BasicDecoder"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/seq2seq/BasicDecoderOutput", "k": ["rnn_output", "sample_id", "__new__"], "r": "r1.6", "t": "tf.contrib.seq2seq.BasicDecoderOutput"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/seq2seq/BeamSearchDecoder", "k": ["batch_size", "output_dtype", "output_size", "tracks_own_finished", "__init__", "finalize", "initialize", "step"], "r": "r1.6", "t": "tf.contrib.seq2seq.BeamSearchDecoder"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/seq2seq/BeamSearchDecoderOutput", "k": ["parent_ids", "predicted_ids", "scores", "__new__"], "r": "r1.6", "t": "tf.contrib.seq2seq.BeamSearchDecoderOutput"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/seq2seq/BeamSearchDecoderState", "k": ["cell_state", "finished", "lengths", "log_probs", "__new__"], "r": "r1.6", "t": "tf.contrib.seq2seq.BeamSearchDecoderState"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/seq2seq/CustomHelper", "k": ["batch_size", "sample_ids_dtype", "sample_ids_shape", "__init__", "initialize", "next_inputs", "sample"], "r": "r1.6", "t": "tf.contrib.seq2seq.CustomHelper"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/seq2seq/Decoder", "k": ["batch_size", "output_dtype", "output_size", "tracks_own_finished", "finalize", "initialize", "step"], "r": "r1.6", "t": "tf.contrib.seq2seq.Decoder"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/seq2seq/FinalBeamSearchDecoderOutput", "k": ["beam_search_decoder_output", "predicted_ids", "__new__"], "r": "r1.6", "t": "tf.contrib.seq2seq.FinalBeamSearchDecoderOutput"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/seq2seq/GreedyEmbeddingHelper", "k": ["batch_size", "sample_ids_dtype", "sample_ids_shape", "__init__", "initialize", "next_inputs", "sample"], "r": "r1.6", "t": "tf.contrib.seq2seq.GreedyEmbeddingHelper"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/seq2seq/Helper", "k": ["batch_size", "sample_ids_dtype", "sample_ids_shape", "initialize", "next_inputs", "sample"], "r": "r1.6", "t": "tf.contrib.seq2seq.Helper"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/seq2seq/InferenceHelper", "k": ["batch_size", "sample_ids_dtype", "sample_ids_shape", "__init__", "initialize", "next_inputs", "sample"], "r": "r1.6", "t": "tf.contrib.seq2seq.InferenceHelper"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/seq2seq/LuongAttention", "k": ["alignments_size", "batch_size", "keys", "memory_layer", "query_layer", "state_size", "values", "__call__", "__init__", "initial_alignments", "initial_state"], "r": "r1.6", "t": "tf.contrib.seq2seq.LuongAttention"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/seq2seq/LuongMonotonicAttention", "k": ["alignments_size", "batch_size", "keys", "memory_layer", "query_layer", "state_size", "values", "__call__", "__init__", "initial_alignments", "initial_state"], "r": "r1.6", "t": "tf.contrib.seq2seq.LuongMonotonicAttention"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/seq2seq/SampleEmbeddingHelper", "k": ["batch_size", "sample_ids_dtype", "sample_ids_shape", "__init__", "initialize", "next_inputs", "sample"], "r": "r1.6", "t": "tf.contrib.seq2seq.SampleEmbeddingHelper"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/seq2seq/ScheduledEmbeddingTrainingHelper", "k": ["batch_size", "inputs", "sample_ids_dtype", "sample_ids_shape", "sequence_length", "__init__", "initialize", "next_inputs", "sample"], "r": "r1.6", "t": "tf.contrib.seq2seq.ScheduledEmbeddingTrainingHelper"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/seq2seq/ScheduledOutputTrainingHelper", "k": ["batch_size", "inputs", "sample_ids_dtype", "sample_ids_shape", "sequence_length", "__init__", "initialize", "next_inputs", "sample"], "r": "r1.6", "t": "tf.contrib.seq2seq.ScheduledOutputTrainingHelper"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/seq2seq/TrainingHelper", "k": ["batch_size", "inputs", "sample_ids_dtype", "sample_ids_shape", "sequence_length", "__init__", "initialize", "next_inputs", "sample"], "r": "r1.6", "t": "tf.contrib.seq2seq.TrainingHelper"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/seq2seq/dynamic_decode", "k": [], "r": "r1.6", "t": "tf.contrib.seq2seq.dynamic_decode"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/seq2seq/gather_tree", "k": [], "r": "r1.6", "t": "tf.contrib.seq2seq.gather_tree"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/seq2seq/hardmax", "k": [], "r": "r1.6", "t": "tf.contrib.seq2seq.hardmax"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/seq2seq/monotonic_attention", "k": [], "r": "r1.6", "t": "tf.contrib.seq2seq.monotonic_attention"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/seq2seq/safe_cumprod", "k": [], "r": "r1.6", "t": "tf.contrib.seq2seq.safe_cumprod"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/seq2seq/sequence_loss", "k": [], "r": "r1.6", "t": "tf.contrib.seq2seq.sequence_loss"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/seq2seq/tile_batch", "k": [], "r": "r1.6", "t": "tf.contrib.seq2seq.tile_batch"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/session_bundle", "k": [], "r": "r1.6", "t": "tf.contrib.session_bundle"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/signal", "k": [], "r": "r1.6", "t": "tf.contrib.signal"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/signal/frame", "k": [], "r": "r1.6", "t": "tf.contrib.signal.frame"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/signal/hamming_window", "k": [], "r": "r1.6", "t": "tf.contrib.signal.hamming_window"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/signal/hann_window", "k": [], "r": "r1.6", "t": "tf.contrib.signal.hann_window"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/signal/inverse_stft", "k": [], "r": "r1.6", "t": "tf.contrib.signal.inverse_stft"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/signal/inverse_stft_window_fn", "k": [], "r": "r1.6", "t": "tf.contrib.signal.inverse_stft_window_fn"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/signal/linear_to_mel_weight_matrix", "k": [], "r": "r1.6", "t": "tf.contrib.signal.linear_to_mel_weight_matrix"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/signal/mfccs_from_log_mel_spectrograms", "k": [], "r": "r1.6", "t": "tf.contrib.signal.mfccs_from_log_mel_spectrograms"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/signal/overlap_and_add", "k": [], "r": "r1.6", "t": "tf.contrib.signal.overlap_and_add"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/signal/stft", "k": [], "r": "r1.6", "t": "tf.contrib.signal.stft"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/slim", "k": [], "r": "r1.6", "t": "tf.contrib.slim"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/solvers", "k": [], "r": "r1.6", "t": "tf.contrib.solvers"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/sparsemax", "k": [], "r": "r1.6", "t": "tf.contrib.sparsemax"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/sparsemax/sparsemax", "k": [], "r": "r1.6", "t": "tf.contrib.sparsemax.sparsemax"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/sparsemax/sparsemax_loss", "k": [], "r": "r1.6", "t": "tf.contrib.sparsemax.sparsemax_loss"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/specs", "k": [], "r": "r1.6", "t": "tf.contrib.specs"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/staging", "k": ["absolute_import", "division", "print_function"], "r": "r1.6", "t": "tf.contrib.staging"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/staging/StagingArea", "k": ["capacity", "dtypes", "memory_limit", "name", "names", "shapes", "__init__", "clear", "get", "peek", "put", "size"], "r": "r1.6", "t": "tf.contrib.staging.StagingArea"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/stat_summarizer", "k": [], "r": "r1.6", "t": "tf.contrib.stat_summarizer"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/stat_summarizer/DeleteStatSummarizer", "k": [], "r": "r1.6", "t": "tf.contrib.stat_summarizer.DeleteStatSummarizer"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/stat_summarizer/NewStatSummarizer", "k": [], "r": "r1.6", "t": "tf.contrib.stat_summarizer.NewStatSummarizer"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/stat_summarizer/StatSummarizer", "k": ["GetOutputString", "PrintStepStats", "ProcessStepStats", "ProcessStepStatsStr", "__getattr__", "__init__", "__setattr__", "__swig_getmethods__", "__swig_setmethods__"], "r": "r1.6", "t": "tf.contrib.stat_summarizer.StatSummarizer"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/stateless", "k": [], "r": "r1.6", "t": "tf.contrib.stateless"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/stateless/stateless_random_normal", "k": [], "r": "r1.6", "t": "tf.contrib.stateless.stateless_random_normal"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/stateless/stateless_random_uniform", "k": [], "r": "r1.6", "t": "tf.contrib.stateless.stateless_random_uniform"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/stateless/stateless_truncated_normal", "k": [], "r": "r1.6", "t": "tf.contrib.stateless.stateless_truncated_normal"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/summary", "k": ["absolute_import", "division", "print_function"], "r": "r1.6", "t": "tf.contrib.summary"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/summary/SummaryWriter", "k": ["__init__", "as_default", "set_as_default"], "r": "r1.6", "t": "tf.contrib.summary.SummaryWriter"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/summary/all_summary_ops", "k": [], "r": "r1.6", "t": "tf.contrib.summary.all_summary_ops"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/summary/always_record_summaries", "k": [], "r": "r1.6", "t": "tf.contrib.summary.always_record_summaries"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/summary/audio", "k": [], "r": "r1.6", "t": "tf.contrib.summary.audio"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/summary/create_db_writer", "k": [], "r": "r1.6", "t": "tf.contrib.summary.create_db_writer"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/summary/create_file_writer", "k": [], "r": "r1.6", "t": "tf.contrib.summary.create_file_writer"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/summary/create_summary_file_writer", "k": [], "r": "r1.6", "t": "tf.contrib.summary.create_summary_file_writer"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/summary/eval_dir", "k": [], "r": "r1.6", "t": "tf.contrib.summary.eval_dir"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/summary/flush", "k": [], "r": "r1.6", "t": "tf.contrib.summary.flush"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/summary/generic", "k": [], "r": "r1.6", "t": "tf.contrib.summary.generic"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/summary/graph", "k": [], "r": "r1.6", "t": "tf.contrib.summary.graph"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/summary/histogram", "k": [], "r": "r1.6", "t": "tf.contrib.summary.histogram"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/summary/image", "k": [], "r": "r1.6", "t": "tf.contrib.summary.image"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/summary/import_event", "k": [], "r": "r1.6", "t": "tf.contrib.summary.import_event"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/summary/initialize", "k": [], "r": "r1.6", "t": "tf.contrib.summary.initialize"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/summary/never_record_summaries", "k": [], "r": "r1.6", "t": "tf.contrib.summary.never_record_summaries"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/summary/record_summaries_every_n_global_steps", "k": [], "r": "r1.6", "t": "tf.contrib.summary.record_summaries_every_n_global_steps"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/summary/scalar", "k": [], "r": "r1.6", "t": "tf.contrib.summary.scalar"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/summary/should_record_summaries", "k": [], "r": "r1.6", "t": "tf.contrib.summary.should_record_summaries"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/summary/summary_writer_initializer_op", "k": [], "r": "r1.6", "t": "tf.contrib.summary.summary_writer_initializer_op"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/tensor_forest", "k": [], "r": "r1.6", "t": "tf.contrib.tensor_forest"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/tensorboard", "k": [], "r": "r1.6", "t": "tf.contrib.tensorboard"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/testing", "k": [], "r": "r1.6", "t": "tf.contrib.testing"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/tfprof", "k": [], "r": "r1.6", "t": "tf.contrib.tfprof"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/timeseries", "k": [], "r": "r1.6", "t": "tf.contrib.timeseries"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/timeseries/ARModel", "k": ["__init__", "define_loss", "generate", "get_batch_loss", "get_start_state", "initialize_graph", "loss_op", "predict", "prediction_ops", "random_model_parameters", "NORMAL_LIKELIHOOD_LOSS", "SQUARED_LOSS"], "r": "r1.6", "t": "tf.contrib.timeseries.ARModel"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/timeseries/ARRegressor", "k": ["config", "model_dir", "model_fn", "params", "__init__", "build_raw_serving_input_receiver_fn", "evaluate", "export_savedmodel", "get_variable_names", "get_variable_value", "latest_checkpoint", "predict", "train"], "r": "r1.6", "t": "tf.contrib.timeseries.ARRegressor"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/timeseries/CSVReader", "k": ["__init__", "check_dataset_size", "read", "read_full"], "r": "r1.6", "t": "tf.contrib.timeseries.CSVReader"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/timeseries/FilteringResults", "k": ["STATE_PREFIX", "STATE_TUPLE", "TIMES"], "r": "r1.6", "t": "tf.contrib.timeseries.FilteringResults"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/timeseries/NumpyReader", "k": ["__init__", "check_dataset_size", "read", "read_full"], "r": "r1.6", "t": "tf.contrib.timeseries.NumpyReader"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/timeseries/RandomWindowInputFn", "k": ["__call__", "__init__", "create_batch"], "r": "r1.6", "t": "tf.contrib.timeseries.RandomWindowInputFn"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/timeseries/StructuralEnsembleRegressor", "k": ["config", "model_dir", "model_fn", "params", "__init__", "build_raw_serving_input_receiver_fn", "evaluate", "export_savedmodel", "get_variable_names", "get_variable_value", "latest_checkpoint", "predict", "train"], "r": "r1.6", "t": "tf.contrib.timeseries.StructuralEnsembleRegressor"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/timeseries/TrainEvalFeatures", "k": ["TIMES", "VALUES"], "r": "r1.6", "t": "tf.contrib.timeseries.TrainEvalFeatures"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/timeseries/WholeDatasetInputFn", "k": ["__call__", "__init__", "create_batch"], "r": "r1.6", "t": "tf.contrib.timeseries.WholeDatasetInputFn"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/timeseries/predict_continuation_input_fn", "k": [], "r": "r1.6", "t": "tf.contrib.timeseries.predict_continuation_input_fn"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/timeseries/saved_model_utils", "k": [], "r": "r1.6", "t": "tf.contrib.timeseries.saved_model_utils"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/timeseries/saved_model_utils/filter_continuation", "k": [], "r": "r1.6", "t": "tf.contrib.timeseries.saved_model_utils.filter_continuation"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/timeseries/saved_model_utils/predict_continuation", "k": [], "r": "r1.6", "t": "tf.contrib.timeseries.saved_model_utils.predict_continuation"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/tpu", "k": [], "r": "r1.6", "t": "tf.contrib.tpu"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/tpu/CrossShardOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.6", "t": "tf.contrib.tpu.CrossShardOptimizer"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/tpu/DeviceAssignment", "k": ["computation_shape", "core_assignment", "num_replicas", "topology", "__init__", "host_device", "tpu_device", "tpu_ordinal"], "r": "r1.6", "t": "tf.contrib.tpu.DeviceAssignment"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/tpu/InfeedQueue", "k": ["number_of_shards", "number_of_tuple_elements", "shard_dimensions", "sharding_policies", "tuple_shapes", "tuple_types", "__init__", "freeze", "generate_dequeue_op", "generate_enqueue_ops", "set_configuration_from_input_tensors", "set_configuration_from_sharded_input_tensors", "set_number_of_shards", "set_shard_dimensions", "set_tuple_shapes", "set_tuple_types", "split_inputs_and_generate_enqueue_ops"], "r": "r1.6", "t": "tf.contrib.tpu.InfeedQueue"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/tpu/RunConfig", "k": ["cluster_spec", "evaluation_master", "global_id_in_cluster", "is_chief", "keep_checkpoint_every_n_hours", "keep_checkpoint_max", "log_step_count_steps", "master", "model_dir", "num_ps_replicas", "num_worker_replicas", "save_checkpoints_secs", "save_checkpoints_steps", "save_summary_steps", "service", "session_config", "task_id", "task_type", "tf_random_seed", "tpu_config", "__init__", "replace"], "r": "r1.6", "t": "tf.contrib.tpu.RunConfig"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/tpu/TPUConfig", "k": ["initial_infeed_sleep_secs", "iterations_per_loop", "num_shards", "per_host_input_for_training", "tpu_job_name", "__new__"], "r": "r1.6", "t": "tf.contrib.tpu.TPUConfig"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/tpu/TPUEstimator", "k": ["config", "model_dir", "model_fn", "params", "__init__", "evaluate", "export_savedmodel", "get_variable_names", "get_variable_value", "latest_checkpoint", "predict", "train"], "r": "r1.6", "t": "tf.contrib.tpu.TPUEstimator"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/tpu/TPUEstimatorSpec", "k": ["eval_metrics", "export_outputs", "host_call", "loss", "mode", "predictions", "scaffold_fn", "train_op", "__new__", "as_estimator_spec"], "r": "r1.6", "t": "tf.contrib.tpu.TPUEstimatorSpec"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/tpu/Topology", "k": ["device_coordinates", "mesh_shape", "__init__", "serialized"], "r": "r1.6", "t": "tf.contrib.tpu.Topology"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/tpu/batch_parallel", "k": [], "r": "r1.6", "t": "tf.contrib.tpu.batch_parallel"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/tpu/core", "k": [], "r": "r1.6", "t": "tf.contrib.tpu.core"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/tpu/cross_replica_sum", "k": [], "r": "r1.6", "t": "tf.contrib.tpu.cross_replica_sum"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/tpu/device_assignment", "k": [], "r": "r1.6", "t": "tf.contrib.tpu.device_assignment"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/tpu/infeed_dequeue", "k": [], "r": "r1.6", "t": "tf.contrib.tpu.infeed_dequeue"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/tpu/infeed_dequeue_tuple", "k": [], "r": "r1.6", "t": "tf.contrib.tpu.infeed_dequeue_tuple"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/tpu/initialize_system", "k": [], "r": "r1.6", "t": "tf.contrib.tpu.initialize_system"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/tpu/outfeed_enqueue", "k": [], "r": "r1.6", "t": "tf.contrib.tpu.outfeed_enqueue"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/tpu/outfeed_enqueue_tuple", "k": [], "r": "r1.6", "t": "tf.contrib.tpu.outfeed_enqueue_tuple"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/tpu/profiler", "k": [], "r": "r1.6", "t": "tf.contrib.tpu.profiler"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/tpu/profiler/Device", "k": ["ResourcesEntry"], "r": "r1.6", "t": "tf.contrib.tpu.profiler.Device"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/tpu/profiler/Device/ResourcesEntry", "k": [], "r": "r1.6", "t": "tf.contrib.tpu.profiler.Device.ResourcesEntry"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/tpu/profiler/Resource", "k": [], "r": "r1.6", "t": "tf.contrib.tpu.profiler.Resource"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/tpu/profiler/Trace", "k": ["DevicesEntry"], "r": "r1.6", "t": "tf.contrib.tpu.profiler.Trace"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/tpu/profiler/Trace/DevicesEntry", "k": [], "r": "r1.6", "t": "tf.contrib.tpu.profiler.Trace.DevicesEntry"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/tpu/profiler/TraceEvent", "k": [], "r": "r1.6", "t": "tf.contrib.tpu.profiler.TraceEvent"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/tpu/repeat", "k": [], "r": "r1.6", "t": "tf.contrib.tpu.repeat"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/tpu/replicate", "k": [], "r": "r1.6", "t": "tf.contrib.tpu.replicate"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/tpu/rewrite", "k": [], "r": "r1.6", "t": "tf.contrib.tpu.rewrite"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/tpu/shard", "k": [], "r": "r1.6", "t": "tf.contrib.tpu.shard"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/tpu/shutdown_system", "k": [], "r": "r1.6", "t": "tf.contrib.tpu.shutdown_system"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/tpu/while_loop", "k": [], "r": "r1.6", "t": "tf.contrib.tpu.while_loop"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/training", "k": [], "r": "r1.6", "t": "tf.contrib.training"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/training/FeedingQueueRunner", "k": ["cancel_op", "close_op", "enqueue_ops", "exceptions_raised", "name", "queue", "queue_closed_exception_types", "__init__", "create_threads", "from_proto", "to_proto"], "r": "r1.6", "t": "tf.contrib.training.FeedingQueueRunner"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/training/GreedyLoadBalancingStrategy", "k": ["__call__", "__init__"], "r": "r1.6", "t": "tf.contrib.training.GreedyLoadBalancingStrategy"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/training/HParams", "k": ["__contains__", "__init__", "add_hparam", "from_proto", "get", "get_model_structure", "override_from_dict", "parse", "parse_json", "set_from_map", "set_hparam", "set_model_structure", "to_json", "to_proto", "values"], "r": "r1.6", "t": "tf.contrib.training.HParams"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/training/NextQueuedSequenceBatch", "k": ["batch_size", "context", "insertion_index", "key", "length", "next_key", "sequence", "sequence_count", "sequences", "total_length", "__init__", "save_state", "state"], "r": "r1.6", "t": "tf.contrib.training.NextQueuedSequenceBatch"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/training/RandomStrategy", "k": ["__call__", "__init__"], "r": "r1.6", "t": "tf.contrib.training.RandomStrategy"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/training/SequenceQueueingStateSaver", "k": ["barrier", "batch_size", "name", "next_batch", "num_unroll", "prefetch_op", "__init__", "close"], "r": "r1.6", "t": "tf.contrib.training.SequenceQueueingStateSaver"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/training/StopAfterNEvalsHook", "k": ["__init__", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "r1.6", "t": "tf.contrib.training.StopAfterNEvalsHook"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/training/SummaryAtEndHook", "k": ["__init__", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "r1.6", "t": "tf.contrib.training.SummaryAtEndHook"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/training/add_gradients_summaries", "k": [], "r": "r1.6", "t": "tf.contrib.training.add_gradients_summaries"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/training/batch_sequences_with_states", "k": [], "r": "r1.6", "t": "tf.contrib.training.batch_sequences_with_states"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/training/bucket", "k": [], "r": "r1.6", "t": "tf.contrib.training.bucket"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/training/bucket_by_sequence_length", "k": [], "r": "r1.6", "t": "tf.contrib.training.bucket_by_sequence_length"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/training/byte_size_load_fn", "k": [], "r": "r1.6", "t": "tf.contrib.training.byte_size_load_fn"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/training/checkpoints_iterator", "k": [], "r": "r1.6", "t": "tf.contrib.training.checkpoints_iterator"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/training/clip_gradient_norms", "k": [], "r": "r1.6", "t": "tf.contrib.training.clip_gradient_norms"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/training/clip_gradient_norms_fn", "k": [], "r": "r1.6", "t": "tf.contrib.training.clip_gradient_norms_fn"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/training/create_train_op", "k": [], "r": "r1.6", "t": "tf.contrib.training.create_train_op"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/training/evaluate_once", "k": [], "r": "r1.6", "t": "tf.contrib.training.evaluate_once"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/training/evaluate_repeatedly", "k": [], "r": "r1.6", "t": "tf.contrib.training.evaluate_repeatedly"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/training/get_or_create_eval_step", "k": [], "r": "r1.6", "t": "tf.contrib.training.get_or_create_eval_step"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/training/multiply_gradients", "k": [], "r": "r1.6", "t": "tf.contrib.training.multiply_gradients"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/training/parse_values", "k": [], "r": "r1.6", "t": "tf.contrib.training.parse_values"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/training/rejection_sample", "k": [], "r": "r1.6", "t": "tf.contrib.training.rejection_sample"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/training/resample_at_rate", "k": [], "r": "r1.6", "t": "tf.contrib.training.resample_at_rate"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/training/stratified_sample", "k": [], "r": "r1.6", "t": "tf.contrib.training.stratified_sample"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/training/train", "k": [], "r": "r1.6", "t": "tf.contrib.training.train"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/training/wait_for_new_checkpoint", "k": [], "r": "r1.6", "t": "tf.contrib.training.wait_for_new_checkpoint"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/training/weighted_resample", "k": [], "r": "r1.6", "t": "tf.contrib.training.weighted_resample"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/util", "k": [], "r": "r1.6", "t": "tf.contrib.util"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/util/constant_value", "k": [], "r": "r1.6", "t": "tf.contrib.util.constant_value"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/util/loader", "k": [], "r": "r1.6", "t": "tf.contrib.util.loader"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/util/ops_used_by_graph_def", "k": [], "r": "r1.6", "t": "tf.contrib.util.ops_used_by_graph_def"}, {"p": "/versions/r1.6/api_docs/python/tf/contrib/util/stripped_op_list_for_graph", "k": [], "r": "r1.6", "t": "tf.contrib.util.stripped_op_list_for_graph"}, {"p": "/versions/r1.6/api_docs/python/tf/control_dependencies", "k": [], "r": "r1.6", "t": "tf.control_dependencies"}, {"p": "/versions/r1.6/api_docs/python/tf/convert_to_tensor", "k": [], "r": "r1.6", "t": "tf.convert_to_tensor"}, {"p": "/versions/r1.6/api_docs/python/tf/convert_to_tensor_or_indexed_slices", "k": [], "r": "r1.6", "t": "tf.convert_to_tensor_or_indexed_slices"}, {"p": "/versions/r1.6/api_docs/python/tf/convert_to_tensor_or_sparse_tensor", "k": [], "r": "r1.6", "t": "tf.convert_to_tensor_or_sparse_tensor"}, {"p": "/versions/r1.6/api_docs/python/tf/cos", "k": [], "r": "r1.6", "t": "tf.cos"}, {"p": "/versions/r1.6/api_docs/python/tf/cosh", "k": [], "r": "r1.6", "t": "tf.cosh"}, {"p": "/versions/r1.6/api_docs/python/tf/count_nonzero", "k": [], "r": "r1.6", "t": "tf.count_nonzero"}, {"p": "/versions/r1.6/api_docs/python/tf/count_up_to", "k": [], "r": "r1.6", "t": "tf.count_up_to"}, {"p": "/versions/r1.6/api_docs/python/tf/create_partitioned_variables", "k": [], "r": "r1.6", "t": "tf.create_partitioned_variables"}, {"p": "/versions/r1.6/api_docs/python/tf/cross", "k": [], "r": "r1.6", "t": "tf.cross"}, {"p": "/versions/r1.6/api_docs/python/tf/cumprod", "k": [], "r": "r1.6", "t": "tf.cumprod"}, {"p": "/versions/r1.6/api_docs/python/tf/cumsum", "k": [], "r": "r1.6", "t": "tf.cumsum"}, {"p": "/versions/r1.6/api_docs/python/tf/data", "k": [], "r": "r1.6", "t": "tf.data"}, {"p": "/versions/r1.6/api_docs/python/tf/data/Dataset", "k": ["output_classes", "output_shapes", "output_types", "__init__", "apply", "batch", "cache", "concatenate", "filter", "flat_map", "from_generator", "from_sparse_tensor_slices", "from_tensor_slices", "from_tensors", "interleave", "list_files", "make_initializable_iterator", "make_one_shot_iterator", "map", "padded_batch", "prefetch", "range", "repeat", "shard", "shuffle", "skip", "take", "zip"], "r": "r1.6", "t": "tf.data.Dataset"}, {"p": "/versions/r1.6/api_docs/python/tf/data/FixedLengthRecordDataset", "k": ["output_classes", "output_shapes", "output_types", "__init__", "apply", "batch", "cache", "concatenate", "filter", "flat_map", "from_generator", "from_sparse_tensor_slices", "from_tensor_slices", "from_tensors", "interleave", "list_files", "make_initializable_iterator", "make_one_shot_iterator", "map", "padded_batch", "prefetch", "range", "repeat", "shard", "shuffle", "skip", "take", "zip"], "r": "r1.6", "t": "tf.data.FixedLengthRecordDataset"}, {"p": "/versions/r1.6/api_docs/python/tf/data/Iterator", "k": ["initializer", "output_classes", "output_shapes", "output_types", "__init__", "from_string_handle", "from_structure", "get_next", "make_initializer", "string_handle"], "r": "r1.6", "t": "tf.data.Iterator"}, {"p": "/versions/r1.6/api_docs/python/tf/data/TFRecordDataset", "k": ["output_classes", "output_shapes", "output_types", "__init__", "apply", "batch", "cache", "concatenate", "filter", "flat_map", "from_generator", "from_sparse_tensor_slices", "from_tensor_slices", "from_tensors", "interleave", "list_files", "make_initializable_iterator", "make_one_shot_iterator", "map", "padded_batch", "prefetch", "range", "repeat", "shard", "shuffle", "skip", "take", "zip"], "r": "r1.6", "t": "tf.data.TFRecordDataset"}, {"p": "/versions/r1.6/api_docs/python/tf/data/TextLineDataset", "k": ["output_classes", "output_shapes", "output_types", "__init__", "apply", "batch", "cache", "concatenate", "filter", "flat_map", "from_generator", "from_sparse_tensor_slices", "from_tensor_slices", "from_tensors", "interleave", "list_files", "make_initializable_iterator", "make_one_shot_iterator", "map", "padded_batch", "prefetch", "range", "repeat", "shard", "shuffle", "skip", "take", "zip"], "r": "r1.6", "t": "tf.data.TextLineDataset"}, {"p": "/versions/r1.6/api_docs/python/tf/decode_base64", "k": [], "r": "r1.6", "t": "tf.decode_base64"}, {"p": "/versions/r1.6/api_docs/python/tf/decode_csv", "k": [], "r": "r1.6", "t": "tf.decode_csv"}, {"p": "/versions/r1.6/api_docs/python/tf/decode_json_example", "k": [], "r": "r1.6", "t": "tf.decode_json_example"}, {"p": "/versions/r1.6/api_docs/python/tf/decode_raw", "k": [], "r": "r1.6", "t": "tf.decode_raw"}, {"p": "/versions/r1.6/api_docs/python/tf/delete_session_tensor", "k": [], "r": "r1.6", "t": "tf.delete_session_tensor"}, {"p": "/versions/r1.6/api_docs/python/tf/depth_to_space", "k": [], "r": "r1.6", "t": "tf.depth_to_space"}, {"p": "/versions/r1.6/api_docs/python/tf/dequantize", "k": [], "r": "r1.6", "t": "tf.dequantize"}, {"p": "/versions/r1.6/api_docs/python/tf/deserialize_many_sparse", "k": [], "r": "r1.6", "t": "tf.deserialize_many_sparse"}, {"p": "/versions/r1.6/api_docs/python/tf/device", "k": [], "r": "r1.6", "t": "tf.device"}, {"p": "/versions/r1.6/api_docs/python/tf/diag", "k": [], "r": "r1.6", "t": "tf.diag"}, {"p": "/versions/r1.6/api_docs/python/tf/diag_part", "k": [], "r": "r1.6", "t": "tf.diag_part"}, {"p": "/versions/r1.6/api_docs/python/tf/digamma", "k": [], "r": "r1.6", "t": "tf.digamma"}, {"p": "/versions/r1.6/api_docs/python/tf/distributions", "k": ["FULLY_REPARAMETERIZED", "NOT_REPARAMETERIZED"], "r": "r1.6", "t": "tf.distributions"}, {"p": "/versions/r1.6/api_docs/python/tf/distributions/Bernoulli", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "logits", "name", "parameters", "probs", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.6", "t": "tf.distributions.Bernoulli"}, {"p": "/versions/r1.6/api_docs/python/tf/distributions/Beta", "k": ["allow_nan_stats", "batch_shape", "concentration0", "concentration1", "dtype", "event_shape", "name", "parameters", "reparameterization_type", "total_concentration", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.6", "t": "tf.distributions.Beta"}, {"p": "/versions/r1.6/api_docs/python/tf/distributions/Categorical", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "event_size", "logits", "name", "parameters", "probs", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.6", "t": "tf.distributions.Categorical"}, {"p": "/versions/r1.6/api_docs/python/tf/distributions/Dirichlet", "k": ["allow_nan_stats", "batch_shape", "concentration", "dtype", "event_shape", "name", "parameters", "reparameterization_type", "total_concentration", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.6", "t": "tf.distributions.Dirichlet"}, {"p": "/versions/r1.6/api_docs/python/tf/distributions/DirichletMultinomial", "k": ["allow_nan_stats", "batch_shape", "concentration", "dtype", "event_shape", "name", "parameters", "reparameterization_type", "total_concentration", "total_count", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.6", "t": "tf.distributions.DirichletMultinomial"}, {"p": "/versions/r1.6/api_docs/python/tf/distributions/Distribution", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "name", "parameters", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.6", "t": "tf.distributions.Distribution"}, {"p": "/versions/r1.6/api_docs/python/tf/distributions/Exponential", "k": ["allow_nan_stats", "batch_shape", "concentration", "dtype", "event_shape", "name", "parameters", "rate", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.6", "t": "tf.distributions.Exponential"}, {"p": "/versions/r1.6/api_docs/python/tf/distributions/Gamma", "k": ["allow_nan_stats", "batch_shape", "concentration", "dtype", "event_shape", "name", "parameters", "rate", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.6", "t": "tf.distributions.Gamma"}, {"p": "/versions/r1.6/api_docs/python/tf/distributions/Laplace", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.6", "t": "tf.distributions.Laplace"}, {"p": "/versions/r1.6/api_docs/python/tf/distributions/Multinomial", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "logits", "name", "parameters", "probs", "reparameterization_type", "total_count", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.6", "t": "tf.distributions.Multinomial"}, {"p": "/versions/r1.6/api_docs/python/tf/distributions/Normal", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.6", "t": "tf.distributions.Normal"}, {"p": "/versions/r1.6/api_docs/python/tf/distributions/RegisterKL", "k": ["__call__", "__init__"], "r": "r1.6", "t": "tf.distributions.RegisterKL"}, {"p": "/versions/r1.6/api_docs/python/tf/distributions/ReparameterizationType", "k": ["__eq__", "__init__"], "r": "r1.6", "t": "tf.distributions.ReparameterizationType"}, {"p": "/versions/r1.6/api_docs/python/tf/distributions/StudentT", "k": ["allow_nan_stats", "batch_shape", "df", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.6", "t": "tf.distributions.StudentT"}, {"p": "/versions/r1.6/api_docs/python/tf/distributions/Uniform", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "high", "low", "name", "parameters", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "range", "sample", "stddev", "survival_function", "variance"], "r": "r1.6", "t": "tf.distributions.Uniform"}, {"p": "/versions/r1.6/api_docs/python/tf/distributions/bijectors", "k": [], "r": "r1.6", "t": "tf.distributions.bijectors"}, {"p": "/versions/r1.6/api_docs/python/tf/distributions/bijectors/Bijector", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.6", "t": "tf.distributions.bijectors.Bijector"}, {"p": "/versions/r1.6/api_docs/python/tf/distributions/bijectors/Identity", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.6", "t": "tf.distributions.bijectors.Identity"}, {"p": "/versions/r1.6/api_docs/python/tf/distributions/kl_divergence", "k": [], "r": "r1.6", "t": "tf.distributions.kl_divergence"}, {"p": "/versions/r1.6/api_docs/python/tf/div", "k": [], "r": "r1.6", "t": "tf.div"}, {"p": "/versions/r1.6/api_docs/python/tf/divide", "k": [], "r": "r1.6", "t": "tf.divide"}, {"p": "/versions/r1.6/api_docs/python/tf/dynamic_partition", "k": [], "r": "r1.6", "t": "tf.dynamic_partition"}, {"p": "/versions/r1.6/api_docs/python/tf/dynamic_stitch", "k": [], "r": "r1.6", "t": "tf.dynamic_stitch"}, {"p": "/versions/r1.6/api_docs/python/tf/edit_distance", "k": [], "r": "r1.6", "t": "tf.edit_distance"}, {"p": "/versions/r1.6/api_docs/python/tf/einsum", "k": [], "r": "r1.6", "t": "tf.einsum"}, {"p": "/versions/r1.6/api_docs/python/tf/encode_base64", "k": [], "r": "r1.6", "t": "tf.encode_base64"}, {"p": "/versions/r1.6/api_docs/python/tf/equal", "k": [], "r": "r1.6", "t": "tf.equal"}, {"p": "/versions/r1.6/api_docs/python/tf/erf", "k": [], "r": "r1.6", "t": "tf.erf"}, {"p": "/versions/r1.6/api_docs/python/tf/erfc", "k": [], "r": "r1.6", "t": "tf.erfc"}, {"p": "/versions/r1.6/api_docs/python/tf/errors", "k": ["ABORTED", "ALREADY_EXISTS", "CANCELLED", "DATA_LOSS", "DEADLINE_EXCEEDED", "FAILED_PRECONDITION", "INTERNAL", "INVALID_ARGUMENT", "NOT_FOUND", "OK", "OUT_OF_RANGE", "PERMISSION_DENIED", "RESOURCE_EXHAUSTED", "UNAUTHENTICATED", "UNAVAILABLE", "UNIMPLEMENTED", "UNKNOWN"], "r": "r1.6", "t": "tf.errors"}, {"p": "/versions/r1.6/api_docs/python/tf/errors/AbortedError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "r1.6", "t": "tf.errors.AbortedError"}, {"p": "/versions/r1.6/api_docs/python/tf/errors/AlreadyExistsError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "r1.6", "t": "tf.errors.AlreadyExistsError"}, {"p": "/versions/r1.6/api_docs/python/tf/errors/CancelledError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "r1.6", "t": "tf.errors.CancelledError"}, {"p": "/versions/r1.6/api_docs/python/tf/errors/DataLossError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "r1.6", "t": "tf.errors.DataLossError"}, {"p": "/versions/r1.6/api_docs/python/tf/errors/DeadlineExceededError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "r1.6", "t": "tf.errors.DeadlineExceededError"}, {"p": "/versions/r1.6/api_docs/python/tf/errors/FailedPreconditionError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "r1.6", "t": "tf.errors.FailedPreconditionError"}, {"p": "/versions/r1.6/api_docs/python/tf/errors/InternalError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "r1.6", "t": "tf.errors.InternalError"}, {"p": "/versions/r1.6/api_docs/python/tf/errors/InvalidArgumentError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "r1.6", "t": "tf.errors.InvalidArgumentError"}, {"p": "/versions/r1.6/api_docs/python/tf/errors/NotFoundError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "r1.6", "t": "tf.errors.NotFoundError"}, {"p": "/versions/r1.6/api_docs/python/tf/errors/OutOfRangeError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "r1.6", "t": "tf.errors.OutOfRangeError"}, {"p": "/versions/r1.6/api_docs/python/tf/errors/PermissionDeniedError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "r1.6", "t": "tf.errors.PermissionDeniedError"}, {"p": "/versions/r1.6/api_docs/python/tf/errors/ResourceExhaustedError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "r1.6", "t": "tf.errors.ResourceExhaustedError"}, {"p": "/versions/r1.6/api_docs/python/tf/errors/UnauthenticatedError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "r1.6", "t": "tf.errors.UnauthenticatedError"}, {"p": "/versions/r1.6/api_docs/python/tf/errors/UnavailableError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "r1.6", "t": "tf.errors.UnavailableError"}, {"p": "/versions/r1.6/api_docs/python/tf/errors/UnimplementedError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "r1.6", "t": "tf.errors.UnimplementedError"}, {"p": "/versions/r1.6/api_docs/python/tf/errors/UnknownError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "r1.6", "t": "tf.errors.UnknownError"}, {"p": "/versions/r1.6/api_docs/python/tf/errors/error_code_from_exception_type", "k": [], "r": "r1.6", "t": "tf.errors.error_code_from_exception_type"}, {"p": "/versions/r1.6/api_docs/python/tf/errors/exception_type_from_error_code", "k": [], "r": "r1.6", "t": "tf.errors.exception_type_from_error_code"}, {"p": "/versions/r1.6/api_docs/python/tf/errors/raise_exception_on_not_ok_status", "k": ["__enter__", "__exit__"], "r": "r1.6", "t": "tf.errors.raise_exception_on_not_ok_status"}, {"p": "/versions/r1.6/api_docs/python/tf/estimator", "k": [], "r": "r1.6", "t": "tf.estimator"}, {"p": "/versions/r1.6/api_docs/python/tf/estimator/BaselineClassifier", "k": ["config", "model_dir", "model_fn", "params", "__init__", "evaluate", "export_savedmodel", "get_variable_names", "get_variable_value", "latest_checkpoint", "predict", "train"], "r": "r1.6", "t": "tf.estimator.BaselineClassifier"}, {"p": "/versions/r1.6/api_docs/python/tf/estimator/BaselineRegressor", "k": ["config", "model_dir", "model_fn", "params", "__init__", "evaluate", "export_savedmodel", "get_variable_names", "get_variable_value", "latest_checkpoint", "predict", "train"], "r": "r1.6", "t": "tf.estimator.BaselineRegressor"}, {"p": "/versions/r1.6/api_docs/python/tf/estimator/DNNClassifier", "k": ["config", "model_dir", "model_fn", "params", "__init__", "evaluate", "export_savedmodel", "get_variable_names", "get_variable_value", "latest_checkpoint", "predict", "train"], "r": "r1.6", "t": "tf.estimator.DNNClassifier"}, {"p": "/versions/r1.6/api_docs/python/tf/estimator/DNNLinearCombinedClassifier", "k": ["config", "model_dir", "model_fn", "params", "__init__", "evaluate", "export_savedmodel", "get_variable_names", "get_variable_value", "latest_checkpoint", "predict", "train"], "r": "r1.6", "t": "tf.estimator.DNNLinearCombinedClassifier"}, {"p": "/versions/r1.6/api_docs/python/tf/estimator/DNNLinearCombinedRegressor", "k": ["config", "model_dir", "model_fn", "params", "__init__", "evaluate", "export_savedmodel", "get_variable_names", "get_variable_value", "latest_checkpoint", "predict", "train"], "r": "r1.6", "t": "tf.estimator.DNNLinearCombinedRegressor"}, {"p": "/versions/r1.6/api_docs/python/tf/estimator/DNNRegressor", "k": ["config", "model_dir", "model_fn", "params", "__init__", "evaluate", "export_savedmodel", "get_variable_names", "get_variable_value", "latest_checkpoint", "predict", "train"], "r": "r1.6", "t": "tf.estimator.DNNRegressor"}, {"p": "/versions/r1.6/api_docs/python/tf/estimator/Estimator", "k": ["config", "model_dir", "model_fn", "params", "__init__", "evaluate", "export_savedmodel", "get_variable_names", "get_variable_value", "latest_checkpoint", "predict", "train"], "r": "r1.6", "t": "tf.estimator.Estimator"}, {"p": "/versions/r1.6/api_docs/python/tf/estimator/EstimatorSpec", "k": ["eval_metric_ops", "evaluation_hooks", "export_outputs", "loss", "mode", "prediction_hooks", "predictions", "scaffold", "train_op", "training_chief_hooks", "training_hooks", "__new__"], "r": "r1.6", "t": "tf.estimator.EstimatorSpec"}, {"p": "/versions/r1.6/api_docs/python/tf/estimator/EvalSpec", "k": ["exporters", "hooks", "input_fn", "name", "start_delay_secs", "steps", "throttle_secs", "__new__"], "r": "r1.6", "t": "tf.estimator.EvalSpec"}, {"p": "/versions/r1.6/api_docs/python/tf/estimator/Exporter", "k": ["name", "export"], "r": "r1.6", "t": "tf.estimator.Exporter"}, {"p": "/versions/r1.6/api_docs/python/tf/estimator/FinalExporter", "k": ["name", "__init__", "export"], "r": "r1.6", "t": "tf.estimator.FinalExporter"}, {"p": "/versions/r1.6/api_docs/python/tf/estimator/LatestExporter", "k": ["name", "__init__", "export"], "r": "r1.6", "t": "tf.estimator.LatestExporter"}, {"p": "/versions/r1.6/api_docs/python/tf/estimator/LinearClassifier", "k": ["config", "model_dir", "model_fn", "params", "__init__", "evaluate", "export_savedmodel", "get_variable_names", "get_variable_value", "latest_checkpoint", "predict", "train"], "r": "r1.6", "t": "tf.estimator.LinearClassifier"}, {"p": "/versions/r1.6/api_docs/python/tf/estimator/LinearRegressor", "k": ["config", "model_dir", "model_fn", "params", "__init__", "evaluate", "export_savedmodel", "get_variable_names", "get_variable_value", "latest_checkpoint", "predict", "train"], "r": "r1.6", "t": "tf.estimator.LinearRegressor"}, {"p": "/versions/r1.6/api_docs/python/tf/estimator/ModeKeys", "k": ["EVAL", "PREDICT", "TRAIN"], "r": "r1.6", "t": "tf.estimator.ModeKeys"}, {"p": "/versions/r1.6/api_docs/python/tf/estimator/RunConfig", "k": ["cluster_spec", "evaluation_master", "global_id_in_cluster", "is_chief", "keep_checkpoint_every_n_hours", "keep_checkpoint_max", "log_step_count_steps", "master", "model_dir", "num_ps_replicas", "num_worker_replicas", "save_checkpoints_secs", "save_checkpoints_steps", "save_summary_steps", "service", "session_config", "task_id", "task_type", "tf_random_seed", "__init__", "replace"], "r": "r1.6", "t": "tf.estimator.RunConfig"}, {"p": "/versions/r1.6/api_docs/python/tf/estimator/TrainSpec", "k": ["hooks", "input_fn", "max_steps", "__new__"], "r": "r1.6", "t": "tf.estimator.TrainSpec"}, {"p": "/versions/r1.6/api_docs/python/tf/estimator/VocabInfo", "k": ["backup_initializer", "new_vocab", "new_vocab_size", "num_oov_buckets", "old_vocab", "old_vocab_size", "__new__"], "r": "r1.6", "t": "tf.estimator.VocabInfo"}, {"p": "/versions/r1.6/api_docs/python/tf/estimator/WarmStartSettings", "k": ["ckpt_to_initialize_from", "var_name_to_prev_var_name", "var_name_to_vocab_info", "vars_to_warm_start", "__new__"], "r": "r1.6", "t": "tf.estimator.WarmStartSettings"}, {"p": "/versions/r1.6/api_docs/python/tf/estimator/classifier_parse_example_spec", "k": [], "r": "r1.6", "t": "tf.estimator.classifier_parse_example_spec"}, {"p": "/versions/r1.6/api_docs/python/tf/estimator/export", "k": [], "r": "r1.6", "t": "tf.estimator.export"}, {"p": "/versions/r1.6/api_docs/python/tf/estimator/export/ClassificationOutput", "k": ["classes", "scores", "__init__", "as_signature_def"], "r": "r1.6", "t": "tf.estimator.export.ClassificationOutput"}, {"p": "/versions/r1.6/api_docs/python/tf/estimator/export/ExportOutput", "k": ["as_signature_def"], "r": "r1.6", "t": "tf.estimator.export.ExportOutput"}, {"p": "/versions/r1.6/api_docs/python/tf/estimator/export/PredictOutput", "k": ["outputs", "__init__", "as_signature_def"], "r": "r1.6", "t": "tf.estimator.export.PredictOutput"}, {"p": "/versions/r1.6/api_docs/python/tf/estimator/export/RegressionOutput", "k": ["value", "__init__", "as_signature_def"], "r": "r1.6", "t": "tf.estimator.export.RegressionOutput"}, {"p": "/versions/r1.6/api_docs/python/tf/estimator/export/ServingInputReceiver", "k": ["features", "receiver_tensors", "receiver_tensors_alternatives", "__new__"], "r": "r1.6", "t": "tf.estimator.export.ServingInputReceiver"}, {"p": "/versions/r1.6/api_docs/python/tf/estimator/export/build_parsing_serving_input_receiver_fn", "k": [], "r": "r1.6", "t": "tf.estimator.export.build_parsing_serving_input_receiver_fn"}, {"p": "/versions/r1.6/api_docs/python/tf/estimator/export/build_raw_serving_input_receiver_fn", "k": [], "r": "r1.6", "t": "tf.estimator.export.build_raw_serving_input_receiver_fn"}, {"p": "/versions/r1.6/api_docs/python/tf/estimator/inputs", "k": [], "r": "r1.6", "t": "tf.estimator.inputs"}, {"p": "/versions/r1.6/api_docs/python/tf/estimator/inputs/numpy_input_fn", "k": [], "r": "r1.6", "t": "tf.estimator.inputs.numpy_input_fn"}, {"p": "/versions/r1.6/api_docs/python/tf/estimator/inputs/pandas_input_fn", "k": [], "r": "r1.6", "t": "tf.estimator.inputs.pandas_input_fn"}, {"p": "/versions/r1.6/api_docs/python/tf/estimator/regressor_parse_example_spec", "k": [], "r": "r1.6", "t": "tf.estimator.regressor_parse_example_spec"}, {"p": "/versions/r1.6/api_docs/python/tf/estimator/train_and_evaluate", "k": [], "r": "r1.6", "t": "tf.estimator.train_and_evaluate"}, {"p": "/versions/r1.6/api_docs/python/tf/exp", "k": [], "r": "r1.6", "t": "tf.exp"}, {"p": "/versions/r1.6/api_docs/python/tf/expand_dims", "k": [], "r": "r1.6", "t": "tf.expand_dims"}, {"p": "/versions/r1.6/api_docs/python/tf/expm1", "k": [], "r": "r1.6", "t": "tf.expm1"}, {"p": "/versions/r1.6/api_docs/python/tf/extract_image_patches", "k": [], "r": "r1.6", "t": "tf.extract_image_patches"}, {"p": "/versions/r1.6/api_docs/python/tf/eye", "k": [], "r": "r1.6", "t": "tf.eye"}, {"p": "/versions/r1.6/api_docs/python/tf/fake_quant_with_min_max_args", "k": [], "r": "r1.6", "t": "tf.fake_quant_with_min_max_args"}, {"p": "/versions/r1.6/api_docs/python/tf/fake_quant_with_min_max_args_gradient", "k": [], "r": "r1.6", "t": "tf.fake_quant_with_min_max_args_gradient"}, {"p": "/versions/r1.6/api_docs/python/tf/fake_quant_with_min_max_vars", "k": [], "r": "r1.6", "t": "tf.fake_quant_with_min_max_vars"}, {"p": "/versions/r1.6/api_docs/python/tf/fake_quant_with_min_max_vars_gradient", "k": [], "r": "r1.6", "t": "tf.fake_quant_with_min_max_vars_gradient"}, {"p": "/versions/r1.6/api_docs/python/tf/fake_quant_with_min_max_vars_per_channel", "k": [], "r": "r1.6", "t": "tf.fake_quant_with_min_max_vars_per_channel"}, {"p": "/versions/r1.6/api_docs/python/tf/fake_quant_with_min_max_vars_per_channel_gradient", "k": [], "r": "r1.6", "t": "tf.fake_quant_with_min_max_vars_per_channel_gradient"}, {"p": "/versions/r1.6/api_docs/python/tf/feature_column", "k": [], "r": "r1.6", "t": "tf.feature_column"}, {"p": "/versions/r1.6/api_docs/python/tf/feature_column/bucketized_column", "k": [], "r": "r1.6", "t": "tf.feature_column.bucketized_column"}, {"p": "/versions/r1.6/api_docs/python/tf/feature_column/categorical_column_with_hash_bucket", "k": [], "r": "r1.6", "t": "tf.feature_column.categorical_column_with_hash_bucket"}, {"p": "/versions/r1.6/api_docs/python/tf/feature_column/categorical_column_with_identity", "k": [], "r": "r1.6", "t": "tf.feature_column.categorical_column_with_identity"}, {"p": "/versions/r1.6/api_docs/python/tf/feature_column/categorical_column_with_vocabulary_file", "k": [], "r": "r1.6", "t": "tf.feature_column.categorical_column_with_vocabulary_file"}, {"p": "/versions/r1.6/api_docs/python/tf/feature_column/categorical_column_with_vocabulary_list", "k": [], "r": "r1.6", "t": "tf.feature_column.categorical_column_with_vocabulary_list"}, {"p": "/versions/r1.6/api_docs/python/tf/feature_column/crossed_column", "k": [], "r": "r1.6", "t": "tf.feature_column.crossed_column"}, {"p": "/versions/r1.6/api_docs/python/tf/feature_column/embedding_column", "k": [], "r": "r1.6", "t": "tf.feature_column.embedding_column"}, {"p": "/versions/r1.6/api_docs/python/tf/feature_column/indicator_column", "k": [], "r": "r1.6", "t": "tf.feature_column.indicator_column"}, {"p": "/versions/r1.6/api_docs/python/tf/feature_column/input_layer", "k": [], "r": "r1.6", "t": "tf.feature_column.input_layer"}, {"p": "/versions/r1.6/api_docs/python/tf/feature_column/linear_model", "k": [], "r": "r1.6", "t": "tf.feature_column.linear_model"}, {"p": "/versions/r1.6/api_docs/python/tf/feature_column/make_parse_example_spec", "k": [], "r": "r1.6", "t": "tf.feature_column.make_parse_example_spec"}, {"p": "/versions/r1.6/api_docs/python/tf/feature_column/numeric_column", "k": [], "r": "r1.6", "t": "tf.feature_column.numeric_column"}, {"p": "/versions/r1.6/api_docs/python/tf/feature_column/shared_embedding_columns", "k": [], "r": "r1.6", "t": "tf.feature_column.shared_embedding_columns"}, {"p": "/versions/r1.6/api_docs/python/tf/feature_column/weighted_categorical_column", "k": [], "r": "r1.6", "t": "tf.feature_column.weighted_categorical_column"}, {"p": "/versions/r1.6/api_docs/python/tf/fft", "k": [], "r": "r1.6", "t": "tf.fft"}, {"p": "/versions/r1.6/api_docs/python/tf/fft2d", "k": [], "r": "r1.6", "t": "tf.fft2d"}, {"p": "/versions/r1.6/api_docs/python/tf/fft3d", "k": [], "r": "r1.6", "t": "tf.fft3d"}, {"p": "/versions/r1.6/api_docs/python/tf/fill", "k": [], "r": "r1.6", "t": "tf.fill"}, {"p": "/versions/r1.6/api_docs/python/tf/fixed_size_partitioner", "k": [], "r": "r1.6", "t": "tf.fixed_size_partitioner"}, {"p": "/versions/r1.6/api_docs/python/tf/flags", "k": [], "r": "r1.6", "t": "tf.flags"}, {"p": "/versions/r1.6/api_docs/python/tf/floor", "k": [], "r": "r1.6", "t": "tf.floor"}, {"p": "/versions/r1.6/api_docs/python/tf/floor_div", "k": [], "r": "r1.6", "t": "tf.floor_div"}, {"p": "/versions/r1.6/api_docs/python/tf/floordiv", "k": [], "r": "r1.6", "t": "tf.floordiv"}, {"p": "/versions/r1.6/api_docs/python/tf/floormod", "k": [], "r": "r1.6", "t": "tf.floormod"}, {"p": "/versions/r1.6/api_docs/python/tf/foldl", "k": [], "r": "r1.6", "t": "tf.foldl"}, {"p": "/versions/r1.6/api_docs/python/tf/foldr", "k": [], "r": "r1.6", "t": "tf.foldr"}, {"p": "/versions/r1.6/api_docs/python/tf/gather", "k": [], "r": "r1.6", "t": "tf.gather"}, {"p": "/versions/r1.6/api_docs/python/tf/gather_nd", "k": [], "r": "r1.6", "t": "tf.gather_nd"}, {"p": "/versions/r1.6/api_docs/python/tf/get_collection", "k": [], "r": "r1.6", "t": "tf.get_collection"}, {"p": "/versions/r1.6/api_docs/python/tf/get_collection_ref", "k": [], "r": "r1.6", "t": "tf.get_collection_ref"}, {"p": "/versions/r1.6/api_docs/python/tf/get_default_graph", "k": [], "r": "r1.6", "t": "tf.get_default_graph"}, {"p": "/versions/r1.6/api_docs/python/tf/get_default_session", "k": [], "r": "r1.6", "t": "tf.get_default_session"}, {"p": "/versions/r1.6/api_docs/python/tf/get_local_variable", "k": [], "r": "r1.6", "t": "tf.get_local_variable"}, {"p": "/versions/r1.6/api_docs/python/tf/get_seed", "k": [], "r": "r1.6", "t": "tf.get_seed"}, {"p": "/versions/r1.6/api_docs/python/tf/get_session_handle", "k": [], "r": "r1.6", "t": "tf.get_session_handle"}, {"p": "/versions/r1.6/api_docs/python/tf/get_session_tensor", "k": [], "r": "r1.6", "t": "tf.get_session_tensor"}, {"p": "/versions/r1.6/api_docs/python/tf/get_variable", "k": [], "r": "r1.6", "t": "tf.get_variable"}, {"p": "/versions/r1.6/api_docs/python/tf/get_variable_scope", "k": [], "r": "r1.6", "t": "tf.get_variable_scope"}, {"p": "/versions/r1.6/api_docs/python/tf/gfile", "k": [], "r": "r1.6", "t": "tf.gfile"}, {"p": "/versions/r1.6/api_docs/python/tf/gfile/Copy", "k": [], "r": "r1.6", "t": "tf.gfile.Copy"}, {"p": "/versions/r1.6/api_docs/python/tf/gfile/DeleteRecursively", "k": [], "r": "r1.6", "t": "tf.gfile.DeleteRecursively"}, {"p": "/versions/r1.6/api_docs/python/tf/gfile/Exists", "k": [], "r": "r1.6", "t": "tf.gfile.Exists"}, {"p": "/versions/r1.6/api_docs/python/tf/gfile/FastGFile", "k": ["mode", "name", "__enter__", "__exit__", "__init__", "__iter__", "__next__", "close", "flush", "next", "read", "readline", "readlines", "seek", "size", "tell", "write"], "r": "r1.6", "t": "tf.gfile.FastGFile"}, {"p": "/versions/r1.6/api_docs/python/tf/gfile/GFile", "k": ["mode", "name", "__enter__", "__exit__", "__init__", "__iter__", "__next__", "close", "flush", "next", "read", "readline", "readlines", "seek", "size", "tell", "write"], "r": "r1.6", "t": "tf.gfile.GFile"}, {"p": "/versions/r1.6/api_docs/python/tf/gfile/Glob", "k": [], "r": "r1.6", "t": "tf.gfile.Glob"}, {"p": "/versions/r1.6/api_docs/python/tf/gfile/IsDirectory", "k": [], "r": "r1.6", "t": "tf.gfile.IsDirectory"}, {"p": "/versions/r1.6/api_docs/python/tf/gfile/ListDirectory", "k": [], "r": "r1.6", "t": "tf.gfile.ListDirectory"}, {"p": "/versions/r1.6/api_docs/python/tf/gfile/MakeDirs", "k": [], "r": "r1.6", "t": "tf.gfile.MakeDirs"}, {"p": "/versions/r1.6/api_docs/python/tf/gfile/MkDir", "k": [], "r": "r1.6", "t": "tf.gfile.MkDir"}, {"p": "/versions/r1.6/api_docs/python/tf/gfile/Remove", "k": [], "r": "r1.6", "t": "tf.gfile.Remove"}, {"p": "/versions/r1.6/api_docs/python/tf/gfile/Rename", "k": [], "r": "r1.6", "t": "tf.gfile.Rename"}, {"p": "/versions/r1.6/api_docs/python/tf/gfile/Stat", "k": [], "r": "r1.6", "t": "tf.gfile.Stat"}, {"p": "/versions/r1.6/api_docs/python/tf/gfile/Walk", "k": [], "r": "r1.6", "t": "tf.gfile.Walk"}, {"p": "/versions/r1.6/api_docs/python/tf/global_norm", "k": [], "r": "r1.6", "t": "tf.global_norm"}, {"p": "/versions/r1.6/api_docs/python/tf/global_variables", "k": [], "r": "r1.6", "t": "tf.global_variables"}, {"p": "/versions/r1.6/api_docs/python/tf/global_variables_initializer", "k": [], "r": "r1.6", "t": "tf.global_variables_initializer"}, {"p": "/versions/r1.6/api_docs/python/tf/glorot_normal_initializer", "k": [], "r": "r1.6", "t": "tf.glorot_normal_initializer"}, {"p": "/versions/r1.6/api_docs/python/tf/glorot_uniform_initializer", "k": [], "r": "r1.6", "t": "tf.glorot_uniform_initializer"}, {"p": "/versions/r1.6/api_docs/python/tf/gradients", "k": [], "r": "r1.6", "t": "tf.gradients"}, {"p": "/versions/r1.6/api_docs/python/tf/graph_util", "k": [], "r": "r1.6", "t": "tf.graph_util"}, {"p": "/versions/r1.6/api_docs/python/tf/graph_util/convert_variables_to_constants", "k": [], "r": "r1.6", "t": "tf.graph_util.convert_variables_to_constants"}, {"p": "/versions/r1.6/api_docs/python/tf/graph_util/extract_sub_graph", "k": [], "r": "r1.6", "t": "tf.graph_util.extract_sub_graph"}, {"p": "/versions/r1.6/api_docs/python/tf/graph_util/must_run_on_cpu", "k": [], "r": "r1.6", "t": "tf.graph_util.must_run_on_cpu"}, {"p": "/versions/r1.6/api_docs/python/tf/graph_util/remove_training_nodes", "k": [], "r": "r1.6", "t": "tf.graph_util.remove_training_nodes"}, {"p": "/versions/r1.6/api_docs/python/tf/graph_util/tensor_shape_from_node_def_name", "k": [], "r": "r1.6", "t": "tf.graph_util.tensor_shape_from_node_def_name"}, {"p": "/versions/r1.6/api_docs/python/tf/greater", "k": [], "r": "r1.6", "t": "tf.greater"}, {"p": "/versions/r1.6/api_docs/python/tf/greater_equal", "k": [], "r": "r1.6", "t": "tf.greater_equal"}, {"p": "/versions/r1.6/api_docs/python/tf/group", "k": [], "r": "r1.6", "t": "tf.group"}, {"p": "/versions/r1.6/api_docs/python/tf/guarantee_const", "k": [], "r": "r1.6", "t": "tf.guarantee_const"}, {"p": "/versions/r1.6/api_docs/python/tf/hessians", "k": [], "r": "r1.6", "t": "tf.hessians"}, {"p": "/versions/r1.6/api_docs/python/tf/histogram_fixed_width", "k": [], "r": "r1.6", "t": "tf.histogram_fixed_width"}, {"p": "/versions/r1.6/api_docs/python/tf/histogram_fixed_width_bins", "k": [], "r": "r1.6", "t": "tf.histogram_fixed_width_bins"}, {"p": "/versions/r1.6/api_docs/python/tf/identity", "k": [], "r": "r1.6", "t": "tf.identity"}, {"p": "/versions/r1.6/api_docs/python/tf/identity_n", "k": [], "r": "r1.6", "t": "tf.identity_n"}, {"p": "/versions/r1.6/api_docs/python/tf/ifft", "k": [], "r": "r1.6", "t": "tf.ifft"}, {"p": "/versions/r1.6/api_docs/python/tf/ifft2d", "k": [], "r": "r1.6", "t": "tf.ifft2d"}, {"p": "/versions/r1.6/api_docs/python/tf/ifft3d", "k": [], "r": "r1.6", "t": "tf.ifft3d"}, {"p": "/versions/r1.6/api_docs/python/tf/igamma", "k": [], "r": "r1.6", "t": "tf.igamma"}, {"p": "/versions/r1.6/api_docs/python/tf/igammac", "k": [], "r": "r1.6", "t": "tf.igammac"}, {"p": "/versions/r1.6/api_docs/python/tf/imag", "k": [], "r": "r1.6", "t": "tf.imag"}, {"p": "/versions/r1.6/api_docs/python/tf/image", "k": [], "r": "r1.6", "t": "tf.image"}, {"p": "/versions/r1.6/api_docs/python/tf/image/ResizeMethod", "k": ["AREA", "BICUBIC", "BILINEAR", "NEAREST_NEIGHBOR"], "r": "r1.6", "t": "tf.image.ResizeMethod"}, {"p": "/versions/r1.6/api_docs/python/tf/image/adjust_brightness", "k": [], "r": "r1.6", "t": "tf.image.adjust_brightness"}, {"p": "/versions/r1.6/api_docs/python/tf/image/adjust_contrast", "k": [], "r": "r1.6", "t": "tf.image.adjust_contrast"}, {"p": "/versions/r1.6/api_docs/python/tf/image/adjust_gamma", "k": [], "r": "r1.6", "t": "tf.image.adjust_gamma"}, {"p": "/versions/r1.6/api_docs/python/tf/image/adjust_hue", "k": [], "r": "r1.6", "t": "tf.image.adjust_hue"}, {"p": "/versions/r1.6/api_docs/python/tf/image/adjust_saturation", "k": [], "r": "r1.6", "t": "tf.image.adjust_saturation"}, {"p": "/versions/r1.6/api_docs/python/tf/image/central_crop", "k": [], "r": "r1.6", "t": "tf.image.central_crop"}, {"p": "/versions/r1.6/api_docs/python/tf/image/convert_image_dtype", "k": [], "r": "r1.6", "t": "tf.image.convert_image_dtype"}, {"p": "/versions/r1.6/api_docs/python/tf/image/crop_and_resize", "k": [], "r": "r1.6", "t": "tf.image.crop_and_resize"}, {"p": "/versions/r1.6/api_docs/python/tf/image/crop_to_bounding_box", "k": [], "r": "r1.6", "t": "tf.image.crop_to_bounding_box"}, {"p": "/versions/r1.6/api_docs/python/tf/image/decode_and_crop_jpeg", "k": [], "r": "r1.6", "t": "tf.image.decode_and_crop_jpeg"}, {"p": "/versions/r1.6/api_docs/python/tf/image/decode_bmp", "k": [], "r": "r1.6", "t": "tf.image.decode_bmp"}, {"p": "/versions/r1.6/api_docs/python/tf/image/decode_gif", "k": [], "r": "r1.6", "t": "tf.image.decode_gif"}, {"p": "/versions/r1.6/api_docs/python/tf/image/decode_image", "k": [], "r": "r1.6", "t": "tf.image.decode_image"}, {"p": "/versions/r1.6/api_docs/python/tf/image/decode_jpeg", "k": [], "r": "r1.6", "t": "tf.image.decode_jpeg"}, {"p": "/versions/r1.6/api_docs/python/tf/image/decode_png", "k": [], "r": "r1.6", "t": "tf.image.decode_png"}, {"p": "/versions/r1.6/api_docs/python/tf/image/draw_bounding_boxes", "k": [], "r": "r1.6", "t": "tf.image.draw_bounding_boxes"}, {"p": "/versions/r1.6/api_docs/python/tf/image/encode_jpeg", "k": [], "r": "r1.6", "t": "tf.image.encode_jpeg"}, {"p": "/versions/r1.6/api_docs/python/tf/image/encode_png", "k": [], "r": "r1.6", "t": "tf.image.encode_png"}, {"p": "/versions/r1.6/api_docs/python/tf/image/extract_glimpse", "k": [], "r": "r1.6", "t": "tf.image.extract_glimpse"}, {"p": "/versions/r1.6/api_docs/python/tf/image/extract_jpeg_shape", "k": [], "r": "r1.6", "t": "tf.image.extract_jpeg_shape"}, {"p": "/versions/r1.6/api_docs/python/tf/image/flip_left_right", "k": [], "r": "r1.6", "t": "tf.image.flip_left_right"}, {"p": "/versions/r1.6/api_docs/python/tf/image/flip_up_down", "k": [], "r": "r1.6", "t": "tf.image.flip_up_down"}, {"p": "/versions/r1.6/api_docs/python/tf/image/grayscale_to_rgb", "k": [], "r": "r1.6", "t": "tf.image.grayscale_to_rgb"}, {"p": "/versions/r1.6/api_docs/python/tf/image/hsv_to_rgb", "k": [], "r": "r1.6", "t": "tf.image.hsv_to_rgb"}, {"p": "/versions/r1.6/api_docs/python/tf/image/non_max_suppression", "k": [], "r": "r1.6", "t": "tf.image.non_max_suppression"}, {"p": "/versions/r1.6/api_docs/python/tf/image/pad_to_bounding_box", "k": [], "r": "r1.6", "t": "tf.image.pad_to_bounding_box"}, {"p": "/versions/r1.6/api_docs/python/tf/image/per_image_standardization", "k": [], "r": "r1.6", "t": "tf.image.per_image_standardization"}, {"p": "/versions/r1.6/api_docs/python/tf/image/random_brightness", "k": [], "r": "r1.6", "t": "tf.image.random_brightness"}, {"p": "/versions/r1.6/api_docs/python/tf/image/random_contrast", "k": [], "r": "r1.6", "t": "tf.image.random_contrast"}, {"p": "/versions/r1.6/api_docs/python/tf/image/random_flip_left_right", "k": [], "r": "r1.6", "t": "tf.image.random_flip_left_right"}, {"p": "/versions/r1.6/api_docs/python/tf/image/random_flip_up_down", "k": [], "r": "r1.6", "t": "tf.image.random_flip_up_down"}, {"p": "/versions/r1.6/api_docs/python/tf/image/random_hue", "k": [], "r": "r1.6", "t": "tf.image.random_hue"}, {"p": "/versions/r1.6/api_docs/python/tf/image/random_saturation", "k": [], "r": "r1.6", "t": "tf.image.random_saturation"}, {"p": "/versions/r1.6/api_docs/python/tf/image/resize_area", "k": [], "r": "r1.6", "t": "tf.image.resize_area"}, {"p": "/versions/r1.6/api_docs/python/tf/image/resize_bicubic", "k": [], "r": "r1.6", "t": "tf.image.resize_bicubic"}, {"p": "/versions/r1.6/api_docs/python/tf/image/resize_bilinear", "k": [], "r": "r1.6", "t": "tf.image.resize_bilinear"}, {"p": "/versions/r1.6/api_docs/python/tf/image/resize_image_with_crop_or_pad", "k": [], "r": "r1.6", "t": "tf.image.resize_image_with_crop_or_pad"}, {"p": "/versions/r1.6/api_docs/python/tf/image/resize_images", "k": [], "r": "r1.6", "t": "tf.image.resize_images"}, {"p": "/versions/r1.6/api_docs/python/tf/image/resize_nearest_neighbor", "k": [], "r": "r1.6", "t": "tf.image.resize_nearest_neighbor"}, {"p": "/versions/r1.6/api_docs/python/tf/image/rgb_to_grayscale", "k": [], "r": "r1.6", "t": "tf.image.rgb_to_grayscale"}, {"p": "/versions/r1.6/api_docs/python/tf/image/rgb_to_hsv", "k": [], "r": "r1.6", "t": "tf.image.rgb_to_hsv"}, {"p": "/versions/r1.6/api_docs/python/tf/image/rgb_to_yiq", "k": [], "r": "r1.6", "t": "tf.image.rgb_to_yiq"}, {"p": "/versions/r1.6/api_docs/python/tf/image/rgb_to_yuv", "k": [], "r": "r1.6", "t": "tf.image.rgb_to_yuv"}, {"p": "/versions/r1.6/api_docs/python/tf/image/rot90", "k": [], "r": "r1.6", "t": "tf.image.rot90"}, {"p": "/versions/r1.6/api_docs/python/tf/image/sample_distorted_bounding_box", "k": [], "r": "r1.6", "t": "tf.image.sample_distorted_bounding_box"}, {"p": "/versions/r1.6/api_docs/python/tf/image/total_variation", "k": [], "r": "r1.6", "t": "tf.image.total_variation"}, {"p": "/versions/r1.6/api_docs/python/tf/image/transpose_image", "k": [], "r": "r1.6", "t": "tf.image.transpose_image"}, {"p": "/versions/r1.6/api_docs/python/tf/image/yiq_to_rgb", "k": [], "r": "r1.6", "t": "tf.image.yiq_to_rgb"}, {"p": "/versions/r1.6/api_docs/python/tf/image/yuv_to_rgb", "k": [], "r": "r1.6", "t": "tf.image.yuv_to_rgb"}, {"p": "/versions/r1.6/api_docs/python/tf/import_graph_def", "k": [], "r": "r1.6", "t": "tf.import_graph_def"}, {"p": "/versions/r1.6/api_docs/python/tf/initialize_all_tables", "k": [], "r": "r1.6", "t": "tf.initialize_all_tables"}, {"p": "/versions/r1.6/api_docs/python/tf/initialize_all_variables", "k": [], "r": "r1.6", "t": "tf.initialize_all_variables"}, {"p": "/versions/r1.6/api_docs/python/tf/initialize_local_variables", "k": [], "r": "r1.6", "t": "tf.initialize_local_variables"}, {"p": "/versions/r1.6/api_docs/python/tf/initialize_variables", "k": [], "r": "r1.6", "t": "tf.initialize_variables"}, {"p": "/versions/r1.6/api_docs/python/tf/initializers", "k": ["absolute_import", "division", "print_function"], "r": "r1.6", "t": "tf.initializers"}, {"p": "/versions/r1.6/api_docs/python/tf/initializers/identity", "k": ["__call__", "__init__", "from_config", "get_config"], "r": "r1.6", "t": "tf.initializers.identity"}, {"p": "/versions/r1.6/api_docs/python/tf/invert_permutation", "k": [], "r": "r1.6", "t": "tf.invert_permutation"}, {"p": "/versions/r1.6/api_docs/python/tf/is_finite", "k": [], "r": "r1.6", "t": "tf.is_finite"}, {"p": "/versions/r1.6/api_docs/python/tf/is_inf", "k": [], "r": "r1.6", "t": "tf.is_inf"}, {"p": "/versions/r1.6/api_docs/python/tf/is_nan", "k": [], "r": "r1.6", "t": "tf.is_nan"}, {"p": "/versions/r1.6/api_docs/python/tf/is_non_decreasing", "k": [], "r": "r1.6", "t": "tf.is_non_decreasing"}, {"p": "/versions/r1.6/api_docs/python/tf/is_numeric_tensor", "k": [], "r": "r1.6", "t": "tf.is_numeric_tensor"}, {"p": "/versions/r1.6/api_docs/python/tf/is_strictly_increasing", "k": [], "r": "r1.6", "t": "tf.is_strictly_increasing"}, {"p": "/versions/r1.6/api_docs/python/tf/is_variable_initialized", "k": [], "r": "r1.6", "t": "tf.is_variable_initialized"}, {"p": "/versions/r1.6/api_docs/python/tf/keras", "k": ["__version__"], "r": "r1.6", "t": "tf.keras"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/Input", "k": [], "r": "r1.6", "t": "tf.keras.Input"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/Model", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "input_spec", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "state_updates", "stateful", "trainable_variables", "trainable_weights", "updates", "uses_learning_phase", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compile", "compute_mask", "compute_output_shape", "count_params", "evaluate", "evaluate_generator", "fit", "fit_generator", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_layer", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "load_weights", "predict", "predict_generator", "predict_on_batch", "reset_states", "save", "save_weights", "set_weights", "summary", "test_on_batch", "to_json", "to_yaml", "train_on_batch"], "r": "r1.6", "t": "tf.keras.Model"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/Sequential", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "input_spec", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "regularizers", "scope_name", "state_updates", "stateful", "trainable", "trainable_variables", "trainable_weights", "updates", "uses_learning_phase", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compile", "compute_mask", "compute_output_shape", "count_params", "evaluate", "evaluate_generator", "fit", "fit_generator", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_layer", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "load_weights", "pop", "predict", "predict_classes", "predict_generator", "predict_on_batch", "predict_proba", "reset_states", "save", "save_weights", "set_weights", "summary", "test_on_batch", "to_json", "to_yaml", "train_on_batch"], "r": "r1.6", "t": "tf.keras.Sequential"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/activations", "k": [], "r": "r1.6", "t": "tf.keras.activations"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/activations/deserialize", "k": [], "r": "r1.6", "t": "tf.keras.activations.deserialize"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/activations/elu", "k": [], "r": "r1.6", "t": "tf.keras.activations.elu"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/activations/get", "k": [], "r": "r1.6", "t": "tf.keras.activations.get"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/activations/hard_sigmoid", "k": [], "r": "r1.6", "t": "tf.keras.activations.hard_sigmoid"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/activations/linear", "k": [], "r": "r1.6", "t": "tf.keras.activations.linear"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/activations/relu", "k": [], "r": "r1.6", "t": "tf.keras.activations.relu"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/activations/selu", "k": [], "r": "r1.6", "t": "tf.keras.activations.selu"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/activations/serialize", "k": [], "r": "r1.6", "t": "tf.keras.activations.serialize"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/activations/sigmoid", "k": [], "r": "r1.6", "t": "tf.keras.activations.sigmoid"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/activations/softmax", "k": [], "r": "r1.6", "t": "tf.keras.activations.softmax"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/activations/softplus", "k": [], "r": "r1.6", "t": "tf.keras.activations.softplus"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/activations/softsign", "k": [], "r": "r1.6", "t": "tf.keras.activations.softsign"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/activations/tanh", "k": [], "r": "r1.6", "t": "tf.keras.activations.tanh"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/applications", "k": [], "r": "r1.6", "t": "tf.keras.applications"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/applications/DenseNet121", "k": [], "r": "r1.6", "t": "tf.keras.applications.DenseNet121"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/applications/DenseNet169", "k": [], "r": "r1.6", "t": "tf.keras.applications.DenseNet169"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/applications/DenseNet201", "k": [], "r": "r1.6", "t": "tf.keras.applications.DenseNet201"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/applications/InceptionResNetV2", "k": [], "r": "r1.6", "t": "tf.keras.applications.InceptionResNetV2"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/applications/InceptionV3", "k": [], "r": "r1.6", "t": "tf.keras.applications.InceptionV3"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/applications/MobileNet", "k": [], "r": "r1.6", "t": "tf.keras.applications.MobileNet"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/applications/NASNetLarge", "k": [], "r": "r1.6", "t": "tf.keras.applications.NASNetLarge"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/applications/NASNetMobile", "k": [], "r": "r1.6", "t": "tf.keras.applications.NASNetMobile"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/applications/ResNet50", "k": [], "r": "r1.6", "t": "tf.keras.applications.ResNet50"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/applications/VGG16", "k": [], "r": "r1.6", "t": "tf.keras.applications.VGG16"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/applications/VGG19", "k": [], "r": "r1.6", "t": "tf.keras.applications.VGG19"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/applications/Xception", "k": [], "r": "r1.6", "t": "tf.keras.applications.Xception"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/applications/densenet", "k": [], "r": "r1.6", "t": "tf.keras.applications.densenet"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/applications/densenet/decode_predictions", "k": [], "r": "r1.6", "t": "tf.keras.applications.densenet.decode_predictions"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/applications/densenet/preprocess_input", "k": [], "r": "r1.6", "t": "tf.keras.applications.densenet.preprocess_input"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/applications/inception_resnet_v2", "k": [], "r": "r1.6", "t": "tf.keras.applications.inception_resnet_v2"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/applications/inception_resnet_v2/preprocess_input", "k": [], "r": "r1.6", "t": "tf.keras.applications.inception_resnet_v2.preprocess_input"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/applications/inception_v3", "k": [], "r": "r1.6", "t": "tf.keras.applications.inception_v3"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/applications/inception_v3/preprocess_input", "k": [], "r": "r1.6", "t": "tf.keras.applications.inception_v3.preprocess_input"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/applications/mobilenet", "k": [], "r": "r1.6", "t": "tf.keras.applications.mobilenet"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/applications/mobilenet/preprocess_input", "k": [], "r": "r1.6", "t": "tf.keras.applications.mobilenet.preprocess_input"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/applications/nasnet", "k": [], "r": "r1.6", "t": "tf.keras.applications.nasnet"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/applications/resnet50", "k": [], "r": "r1.6", "t": "tf.keras.applications.resnet50"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/applications/resnet50/preprocess_input", "k": [], "r": "r1.6", "t": "tf.keras.applications.resnet50.preprocess_input"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/applications/vgg16", "k": [], "r": "r1.6", "t": "tf.keras.applications.vgg16"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/applications/vgg19", "k": [], "r": "r1.6", "t": "tf.keras.applications.vgg19"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/applications/xception", "k": [], "r": "r1.6", "t": "tf.keras.applications.xception"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/applications/xception/preprocess_input", "k": [], "r": "r1.6", "t": "tf.keras.applications.xception.preprocess_input"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend", "k": [], "r": "r1.6", "t": "tf.keras.backend"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/abs", "k": [], "r": "r1.6", "t": "tf.keras.backend.abs"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/all", "k": [], "r": "r1.6", "t": "tf.keras.backend.all"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/any", "k": [], "r": "r1.6", "t": "tf.keras.backend.any"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/arange", "k": [], "r": "r1.6", "t": "tf.keras.backend.arange"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/argmax", "k": [], "r": "r1.6", "t": "tf.keras.backend.argmax"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/argmin", "k": [], "r": "r1.6", "t": "tf.keras.backend.argmin"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/backend", "k": [], "r": "r1.6", "t": "tf.keras.backend.backend"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/batch_dot", "k": [], "r": "r1.6", "t": "tf.keras.backend.batch_dot"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/batch_flatten", "k": [], "r": "r1.6", "t": "tf.keras.backend.batch_flatten"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/batch_get_value", "k": [], "r": "r1.6", "t": "tf.keras.backend.batch_get_value"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/batch_normalization", "k": [], "r": "r1.6", "t": "tf.keras.backend.batch_normalization"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/batch_set_value", "k": [], "r": "r1.6", "t": "tf.keras.backend.batch_set_value"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/bias_add", "k": [], "r": "r1.6", "t": "tf.keras.backend.bias_add"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/binary_crossentropy", "k": [], "r": "r1.6", "t": "tf.keras.backend.binary_crossentropy"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/cast", "k": [], "r": "r1.6", "t": "tf.keras.backend.cast"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/cast_to_floatx", "k": [], "r": "r1.6", "t": "tf.keras.backend.cast_to_floatx"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/categorical_crossentropy", "k": [], "r": "r1.6", "t": "tf.keras.backend.categorical_crossentropy"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/clear_session", "k": [], "r": "r1.6", "t": "tf.keras.backend.clear_session"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/clip", "k": [], "r": "r1.6", "t": "tf.keras.backend.clip"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/concatenate", "k": [], "r": "r1.6", "t": "tf.keras.backend.concatenate"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/constant", "k": [], "r": "r1.6", "t": "tf.keras.backend.constant"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/conv1d", "k": [], "r": "r1.6", "t": "tf.keras.backend.conv1d"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/conv2d", "k": [], "r": "r1.6", "t": "tf.keras.backend.conv2d"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/conv2d_transpose", "k": [], "r": "r1.6", "t": "tf.keras.backend.conv2d_transpose"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/conv3d", "k": [], "r": "r1.6", "t": "tf.keras.backend.conv3d"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/cos", "k": [], "r": "r1.6", "t": "tf.keras.backend.cos"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/count_params", "k": [], "r": "r1.6", "t": "tf.keras.backend.count_params"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/ctc_batch_cost", "k": [], "r": "r1.6", "t": "tf.keras.backend.ctc_batch_cost"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/ctc_decode", "k": [], "r": "r1.6", "t": "tf.keras.backend.ctc_decode"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/ctc_label_dense_to_sparse", "k": [], "r": "r1.6", "t": "tf.keras.backend.ctc_label_dense_to_sparse"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/dot", "k": [], "r": "r1.6", "t": "tf.keras.backend.dot"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/dropout", "k": [], "r": "r1.6", "t": "tf.keras.backend.dropout"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/dtype", "k": [], "r": "r1.6", "t": "tf.keras.backend.dtype"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/elu", "k": [], "r": "r1.6", "t": "tf.keras.backend.elu"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/epsilon", "k": [], "r": "r1.6", "t": "tf.keras.backend.epsilon"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/equal", "k": [], "r": "r1.6", "t": "tf.keras.backend.equal"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/eval", "k": [], "r": "r1.6", "t": "tf.keras.backend.eval"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/exp", "k": [], "r": "r1.6", "t": "tf.keras.backend.exp"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/expand_dims", "k": [], "r": "r1.6", "t": "tf.keras.backend.expand_dims"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/eye", "k": [], "r": "r1.6", "t": "tf.keras.backend.eye"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/flatten", "k": [], "r": "r1.6", "t": "tf.keras.backend.flatten"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/floatx", "k": [], "r": "r1.6", "t": "tf.keras.backend.floatx"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/foldl", "k": [], "r": "r1.6", "t": "tf.keras.backend.foldl"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/foldr", "k": [], "r": "r1.6", "t": "tf.keras.backend.foldr"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/function", "k": [], "r": "r1.6", "t": "tf.keras.backend.function"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/gather", "k": [], "r": "r1.6", "t": "tf.keras.backend.gather"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/get_session", "k": [], "r": "r1.6", "t": "tf.keras.backend.get_session"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/get_uid", "k": [], "r": "r1.6", "t": "tf.keras.backend.get_uid"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/get_value", "k": [], "r": "r1.6", "t": "tf.keras.backend.get_value"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/gradients", "k": [], "r": "r1.6", "t": "tf.keras.backend.gradients"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/greater", "k": [], "r": "r1.6", "t": "tf.keras.backend.greater"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/greater_equal", "k": [], "r": "r1.6", "t": "tf.keras.backend.greater_equal"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/hard_sigmoid", "k": [], "r": "r1.6", "t": "tf.keras.backend.hard_sigmoid"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/image_data_format", "k": [], "r": "r1.6", "t": "tf.keras.backend.image_data_format"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/in_test_phase", "k": [], "r": "r1.6", "t": "tf.keras.backend.in_test_phase"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/in_top_k", "k": [], "r": "r1.6", "t": "tf.keras.backend.in_top_k"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/in_train_phase", "k": [], "r": "r1.6", "t": "tf.keras.backend.in_train_phase"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/int_shape", "k": [], "r": "r1.6", "t": "tf.keras.backend.int_shape"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/is_sparse", "k": [], "r": "r1.6", "t": "tf.keras.backend.is_sparse"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/l2_normalize", "k": [], "r": "r1.6", "t": "tf.keras.backend.l2_normalize"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/learning_phase", "k": [], "r": "r1.6", "t": "tf.keras.backend.learning_phase"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/less", "k": [], "r": "r1.6", "t": "tf.keras.backend.less"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/less_equal", "k": [], "r": "r1.6", "t": "tf.keras.backend.less_equal"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/log", "k": [], "r": "r1.6", "t": "tf.keras.backend.log"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/manual_variable_initialization", "k": [], "r": "r1.6", "t": "tf.keras.backend.manual_variable_initialization"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/map_fn", "k": [], "r": "r1.6", "t": "tf.keras.backend.map_fn"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/max", "k": [], "r": "r1.6", "t": "tf.keras.backend.max"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/maximum", "k": [], "r": "r1.6", "t": "tf.keras.backend.maximum"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/mean", "k": [], "r": "r1.6", "t": "tf.keras.backend.mean"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/min", "k": [], "r": "r1.6", "t": "tf.keras.backend.min"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/minimum", "k": [], "r": "r1.6", "t": "tf.keras.backend.minimum"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/moving_average_update", "k": [], "r": "r1.6", "t": "tf.keras.backend.moving_average_update"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/ndim", "k": [], "r": "r1.6", "t": "tf.keras.backend.ndim"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/normalize_batch_in_training", "k": [], "r": "r1.6", "t": "tf.keras.backend.normalize_batch_in_training"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/not_equal", "k": [], "r": "r1.6", "t": "tf.keras.backend.not_equal"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/one_hot", "k": [], "r": "r1.6", "t": "tf.keras.backend.one_hot"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/ones", "k": [], "r": "r1.6", "t": "tf.keras.backend.ones"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/ones_like", "k": [], "r": "r1.6", "t": "tf.keras.backend.ones_like"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/permute_dimensions", "k": [], "r": "r1.6", "t": "tf.keras.backend.permute_dimensions"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/placeholder", "k": [], "r": "r1.6", "t": "tf.keras.backend.placeholder"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/pool2d", "k": [], "r": "r1.6", "t": "tf.keras.backend.pool2d"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/pool3d", "k": [], "r": "r1.6", "t": "tf.keras.backend.pool3d"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/pow", "k": [], "r": "r1.6", "t": "tf.keras.backend.pow"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/print_tensor", "k": [], "r": "r1.6", "t": "tf.keras.backend.print_tensor"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/prod", "k": [], "r": "r1.6", "t": "tf.keras.backend.prod"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/random_binomial", "k": [], "r": "r1.6", "t": "tf.keras.backend.random_binomial"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/random_normal", "k": [], "r": "r1.6", "t": "tf.keras.backend.random_normal"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/random_normal_variable", "k": [], "r": "r1.6", "t": "tf.keras.backend.random_normal_variable"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/random_uniform", "k": [], "r": "r1.6", "t": "tf.keras.backend.random_uniform"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/random_uniform_variable", "k": [], "r": "r1.6", "t": "tf.keras.backend.random_uniform_variable"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/relu", "k": [], "r": "r1.6", "t": "tf.keras.backend.relu"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/repeat", "k": [], "r": "r1.6", "t": "tf.keras.backend.repeat"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/repeat_elements", "k": [], "r": "r1.6", "t": "tf.keras.backend.repeat_elements"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/reset_uids", "k": [], "r": "r1.6", "t": "tf.keras.backend.reset_uids"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/reshape", "k": [], "r": "r1.6", "t": "tf.keras.backend.reshape"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/resize_images", "k": [], "r": "r1.6", "t": "tf.keras.backend.resize_images"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/resize_volumes", "k": [], "r": "r1.6", "t": "tf.keras.backend.resize_volumes"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/reverse", "k": [], "r": "r1.6", "t": "tf.keras.backend.reverse"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/rnn", "k": [], "r": "r1.6", "t": "tf.keras.backend.rnn"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/round", "k": [], "r": "r1.6", "t": "tf.keras.backend.round"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/separable_conv2d", "k": [], "r": "r1.6", "t": "tf.keras.backend.separable_conv2d"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/set_epsilon", "k": [], "r": "r1.6", "t": "tf.keras.backend.set_epsilon"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/set_floatx", "k": [], "r": "r1.6", "t": "tf.keras.backend.set_floatx"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/set_image_data_format", "k": [], "r": "r1.6", "t": "tf.keras.backend.set_image_data_format"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/set_learning_phase", "k": [], "r": "r1.6", "t": "tf.keras.backend.set_learning_phase"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/set_session", "k": [], "r": "r1.6", "t": "tf.keras.backend.set_session"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/set_value", "k": [], "r": "r1.6", "t": "tf.keras.backend.set_value"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/shape", "k": [], "r": "r1.6", "t": "tf.keras.backend.shape"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/sigmoid", "k": [], "r": "r1.6", "t": "tf.keras.backend.sigmoid"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/sign", "k": [], "r": "r1.6", "t": "tf.keras.backend.sign"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/sin", "k": [], "r": "r1.6", "t": "tf.keras.backend.sin"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/softmax", "k": [], "r": "r1.6", "t": "tf.keras.backend.softmax"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/softplus", "k": [], "r": "r1.6", "t": "tf.keras.backend.softplus"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/softsign", "k": [], "r": "r1.6", "t": "tf.keras.backend.softsign"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/sparse_categorical_crossentropy", "k": [], "r": "r1.6", "t": "tf.keras.backend.sparse_categorical_crossentropy"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/spatial_2d_padding", "k": [], "r": "r1.6", "t": "tf.keras.backend.spatial_2d_padding"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/spatial_3d_padding", "k": [], "r": "r1.6", "t": "tf.keras.backend.spatial_3d_padding"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/sqrt", "k": [], "r": "r1.6", "t": "tf.keras.backend.sqrt"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/square", "k": [], "r": "r1.6", "t": "tf.keras.backend.square"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/squeeze", "k": [], "r": "r1.6", "t": "tf.keras.backend.squeeze"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/stack", "k": [], "r": "r1.6", "t": "tf.keras.backend.stack"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/std", "k": [], "r": "r1.6", "t": "tf.keras.backend.std"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/stop_gradient", "k": [], "r": "r1.6", "t": "tf.keras.backend.stop_gradient"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/sum", "k": [], "r": "r1.6", "t": "tf.keras.backend.sum"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/switch", "k": [], "r": "r1.6", "t": "tf.keras.backend.switch"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/tanh", "k": [], "r": "r1.6", "t": "tf.keras.backend.tanh"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/temporal_padding", "k": [], "r": "r1.6", "t": "tf.keras.backend.temporal_padding"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/to_dense", "k": [], "r": "r1.6", "t": "tf.keras.backend.to_dense"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/transpose", "k": [], "r": "r1.6", "t": "tf.keras.backend.transpose"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/truncated_normal", "k": [], "r": "r1.6", "t": "tf.keras.backend.truncated_normal"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/update", "k": [], "r": "r1.6", "t": "tf.keras.backend.update"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/update_add", "k": [], "r": "r1.6", "t": "tf.keras.backend.update_add"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/update_sub", "k": [], "r": "r1.6", "t": "tf.keras.backend.update_sub"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/var", "k": [], "r": "r1.6", "t": "tf.keras.backend.var"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/variable", "k": [], "r": "r1.6", "t": "tf.keras.backend.variable"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/zeros", "k": [], "r": "r1.6", "t": "tf.keras.backend.zeros"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/backend/zeros_like", "k": [], "r": "r1.6", "t": "tf.keras.backend.zeros_like"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/callbacks", "k": [], "r": "r1.6", "t": "tf.keras.callbacks"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/callbacks/BaseLogger", "k": ["__init__", "on_batch_begin", "on_batch_end", "on_epoch_begin", "on_epoch_end", "on_train_begin", "on_train_end", "set_model", "set_params"], "r": "r1.6", "t": "tf.keras.callbacks.BaseLogger"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/callbacks/CSVLogger", "k": ["__init__", "on_batch_begin", "on_batch_end", "on_epoch_begin", "on_epoch_end", "on_train_begin", "on_train_end", "set_model", "set_params"], "r": "r1.6", "t": "tf.keras.callbacks.CSVLogger"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/callbacks/Callback", "k": ["__init__", "on_batch_begin", "on_batch_end", "on_epoch_begin", "on_epoch_end", "on_train_begin", "on_train_end", "set_model", "set_params"], "r": "r1.6", "t": "tf.keras.callbacks.Callback"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/callbacks/EarlyStopping", "k": ["__init__", "on_batch_begin", "on_batch_end", "on_epoch_begin", "on_epoch_end", "on_train_begin", "on_train_end", "set_model", "set_params"], "r": "r1.6", "t": "tf.keras.callbacks.EarlyStopping"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/callbacks/History", "k": ["__init__", "on_batch_begin", "on_batch_end", "on_epoch_begin", "on_epoch_end", "on_train_begin", "on_train_end", "set_model", "set_params"], "r": "r1.6", "t": "tf.keras.callbacks.History"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/callbacks/LambdaCallback", "k": ["__init__", "on_batch_begin", "on_batch_end", "on_epoch_begin", "on_epoch_end", "on_train_begin", "on_train_end", "set_model", "set_params"], "r": "r1.6", "t": "tf.keras.callbacks.LambdaCallback"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/callbacks/LearningRateScheduler", "k": ["__init__", "on_batch_begin", "on_batch_end", "on_epoch_begin", "on_epoch_end", "on_train_begin", "on_train_end", "set_model", "set_params"], "r": "r1.6", "t": "tf.keras.callbacks.LearningRateScheduler"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/callbacks/ModelCheckpoint", "k": ["__init__", "on_batch_begin", "on_batch_end", "on_epoch_begin", "on_epoch_end", "on_train_begin", "on_train_end", "set_model", "set_params"], "r": "r1.6", "t": "tf.keras.callbacks.ModelCheckpoint"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/callbacks/ProgbarLogger", "k": ["__init__", "on_batch_begin", "on_batch_end", "on_epoch_begin", "on_epoch_end", "on_train_begin", "on_train_end", "set_model", "set_params"], "r": "r1.6", "t": "tf.keras.callbacks.ProgbarLogger"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/callbacks/ReduceLROnPlateau", "k": ["__init__", "in_cooldown", "on_batch_begin", "on_batch_end", "on_epoch_begin", "on_epoch_end", "on_train_begin", "on_train_end", "set_model", "set_params"], "r": "r1.6", "t": "tf.keras.callbacks.ReduceLROnPlateau"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/callbacks/RemoteMonitor", "k": ["__init__", "on_batch_begin", "on_batch_end", "on_epoch_begin", "on_epoch_end", "on_train_begin", "on_train_end", "set_model", "set_params"], "r": "r1.6", "t": "tf.keras.callbacks.RemoteMonitor"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/callbacks/TensorBoard", "k": ["__init__", "on_batch_begin", "on_batch_end", "on_epoch_begin", "on_epoch_end", "on_train_begin", "on_train_end", "set_model", "set_params"], "r": "r1.6", "t": "tf.keras.callbacks.TensorBoard"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/callbacks/TerminateOnNaN", "k": ["__init__", "on_batch_begin", "on_batch_end", "on_epoch_begin", "on_epoch_end", "on_train_begin", "on_train_end", "set_model", "set_params"], "r": "r1.6", "t": "tf.keras.callbacks.TerminateOnNaN"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/constraints", "k": [], "r": "r1.6", "t": "tf.keras.constraints"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/constraints/Constraint", "k": ["__call__", "get_config"], "r": "r1.6", "t": "tf.keras.constraints.Constraint"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/constraints/MaxNorm", "k": ["__call__", "__init__", "get_config"], "r": "r1.6", "t": "tf.keras.constraints.MaxNorm"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/constraints/MinMaxNorm", "k": ["__call__", "__init__", "get_config"], "r": "r1.6", "t": "tf.keras.constraints.MinMaxNorm"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/constraints/NonNeg", "k": ["__call__", "get_config"], "r": "r1.6", "t": "tf.keras.constraints.NonNeg"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/constraints/UnitNorm", "k": ["__call__", "__init__", "get_config"], "r": "r1.6", "t": "tf.keras.constraints.UnitNorm"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/constraints/deserialize", "k": [], "r": "r1.6", "t": "tf.keras.constraints.deserialize"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/constraints/get", "k": [], "r": "r1.6", "t": "tf.keras.constraints.get"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/constraints/serialize", "k": [], "r": "r1.6", "t": "tf.keras.constraints.serialize"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/datasets", "k": [], "r": "r1.6", "t": "tf.keras.datasets"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/datasets/boston_housing", "k": [], "r": "r1.6", "t": "tf.keras.datasets.boston_housing"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/datasets/boston_housing/load_data", "k": [], "r": "r1.6", "t": "tf.keras.datasets.boston_housing.load_data"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/datasets/cifar10", "k": [], "r": "r1.6", "t": "tf.keras.datasets.cifar10"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/datasets/cifar10/load_data", "k": [], "r": "r1.6", "t": "tf.keras.datasets.cifar10.load_data"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/datasets/cifar100", "k": [], "r": "r1.6", "t": "tf.keras.datasets.cifar100"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/datasets/cifar100/load_data", "k": [], "r": "r1.6", "t": "tf.keras.datasets.cifar100.load_data"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/datasets/fashion_mnist", "k": [], "r": "r1.6", "t": "tf.keras.datasets.fashion_mnist"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/datasets/imdb", "k": [], "r": "r1.6", "t": "tf.keras.datasets.imdb"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/datasets/imdb/get_word_index", "k": [], "r": "r1.6", "t": "tf.keras.datasets.imdb.get_word_index"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/datasets/imdb/load_data", "k": [], "r": "r1.6", "t": "tf.keras.datasets.imdb.load_data"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/datasets/mnist", "k": [], "r": "r1.6", "t": "tf.keras.datasets.mnist"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/datasets/mnist/load_data", "k": [], "r": "r1.6", "t": "tf.keras.datasets.mnist.load_data"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/datasets/reuters", "k": [], "r": "r1.6", "t": "tf.keras.datasets.reuters"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/datasets/reuters/get_word_index", "k": [], "r": "r1.6", "t": "tf.keras.datasets.reuters.get_word_index"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/datasets/reuters/load_data", "k": [], "r": "r1.6", "t": "tf.keras.datasets.reuters.load_data"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/estimator", "k": [], "r": "r1.6", "t": "tf.keras.estimator"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/estimator/model_to_estimator", "k": [], "r": "r1.6", "t": "tf.keras.estimator.model_to_estimator"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/initializers", "k": [], "r": "r1.6", "t": "tf.keras.initializers"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/initializers/Initializer", "k": ["__call__", "from_config", "get_config"], "r": "r1.6", "t": "tf.keras.initializers.Initializer"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/initializers/deserialize", "k": [], "r": "r1.6", "t": "tf.keras.initializers.deserialize"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/initializers/get", "k": [], "r": "r1.6", "t": "tf.keras.initializers.get"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/initializers/glorot_normal", "k": [], "r": "r1.6", "t": "tf.keras.initializers.glorot_normal"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/initializers/glorot_uniform", "k": [], "r": "r1.6", "t": "tf.keras.initializers.glorot_uniform"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/initializers/he_normal", "k": [], "r": "r1.6", "t": "tf.keras.initializers.he_normal"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/initializers/he_uniform", "k": [], "r": "r1.6", "t": "tf.keras.initializers.he_uniform"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/initializers/lecun_normal", "k": [], "r": "r1.6", "t": "tf.keras.initializers.lecun_normal"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/initializers/lecun_uniform", "k": [], "r": "r1.6", "t": "tf.keras.initializers.lecun_uniform"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/initializers/serialize", "k": [], "r": "r1.6", "t": "tf.keras.initializers.serialize"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/layers", "k": [], "r": "r1.6", "t": "tf.keras.layers"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/layers/Activation", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.6", "t": "tf.keras.layers.Activation"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/layers/ActivityRegularization", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.6", "t": "tf.keras.layers.ActivityRegularization"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/layers/Add", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.6", "t": "tf.keras.layers.Add"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/layers/AlphaDropout", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.6", "t": "tf.keras.layers.AlphaDropout"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/layers/Average", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.6", "t": "tf.keras.layers.Average"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/layers/AveragePooling1D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.6", "t": "tf.keras.layers.AveragePooling1D"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/layers/AveragePooling2D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.6", "t": "tf.keras.layers.AveragePooling2D"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/layers/AveragePooling3D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.6", "t": "tf.keras.layers.AveragePooling3D"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/layers/BatchNormalization", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.6", "t": "tf.keras.layers.BatchNormalization"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/layers/Bidirectional", "k": ["activity_regularizer", "constraints", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "reset_states", "set_weights"], "r": "r1.6", "t": "tf.keras.layers.Bidirectional"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/layers/Concatenate", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.6", "t": "tf.keras.layers.Concatenate"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/layers/Conv1D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.6", "t": "tf.keras.layers.Conv1D"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/layers/Conv2D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.6", "t": "tf.keras.layers.Conv2D"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/layers/Conv2DTranspose", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.6", "t": "tf.keras.layers.Conv2DTranspose"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/layers/Conv3D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.6", "t": "tf.keras.layers.Conv3D"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/layers/Conv3DTranspose", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.6", "t": "tf.keras.layers.Conv3DTranspose"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/layers/ConvLSTM2D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_constants", "get_initial_state", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "input_conv", "preprocess_input", "recurrent_conv", "reset_states", "set_weights", "step"], "r": "r1.6", "t": "tf.keras.layers.ConvLSTM2D"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/layers/Cropping1D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.6", "t": "tf.keras.layers.Cropping1D"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/layers/Cropping2D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.6", "t": "tf.keras.layers.Cropping2D"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/layers/Cropping3D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.6", "t": "tf.keras.layers.Cropping3D"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/layers/Dense", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.6", "t": "tf.keras.layers.Dense"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/layers/Dot", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.6", "t": "tf.keras.layers.Dot"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/layers/Dropout", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.6", "t": "tf.keras.layers.Dropout"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/layers/ELU", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.6", "t": "tf.keras.layers.ELU"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/layers/Embedding", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.6", "t": "tf.keras.layers.Embedding"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/layers/Flatten", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.6", "t": "tf.keras.layers.Flatten"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/layers/GRU", "k": ["activation", "activity_regularizer", "bias_constraint", "bias_initializer", "bias_regularizer", "dropout", "dtype", "graph", "implementation", "input", "input_mask", "input_shape", "kernel_constraint", "kernel_initializer", "kernel_regularizer", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "recurrent_activation", "recurrent_constraint", "recurrent_dropout", "recurrent_initializer", "recurrent_regularizer", "scope_name", "states", "trainable_variables", "trainable_weights", "units", "updates", "use_bias", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_initial_state", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "reset_states", "set_weights"], "r": "r1.6", "t": "tf.keras.layers.GRU"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/layers/GRUCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.6", "t": "tf.keras.layers.GRUCell"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/layers/GaussianDropout", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.6", "t": "tf.keras.layers.GaussianDropout"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/layers/GaussianNoise", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.6", "t": "tf.keras.layers.GaussianNoise"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/layers/GlobalAveragePooling1D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.6", "t": "tf.keras.layers.GlobalAveragePooling1D"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/layers/GlobalAveragePooling2D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.6", "t": "tf.keras.layers.GlobalAveragePooling2D"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/layers/GlobalAveragePooling3D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.6", "t": "tf.keras.layers.GlobalAveragePooling3D"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/layers/GlobalMaxPool1D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.6", "t": "tf.keras.layers.GlobalMaxPool1D"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/layers/GlobalMaxPool2D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.6", "t": "tf.keras.layers.GlobalMaxPool2D"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/layers/GlobalMaxPool3D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.6", "t": "tf.keras.layers.GlobalMaxPool3D"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/layers/InputLayer", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.6", "t": "tf.keras.layers.InputLayer"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/layers/LSTM", "k": ["activation", "activity_regularizer", "bias_constraint", "bias_initializer", "bias_regularizer", "dropout", "dtype", "graph", "implementation", "input", "input_mask", "input_shape", "kernel_constraint", "kernel_initializer", "kernel_regularizer", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "recurrent_activation", "recurrent_constraint", "recurrent_dropout", "recurrent_initializer", "recurrent_regularizer", "scope_name", "states", "trainable_variables", "trainable_weights", "unit_forget_bias", "units", "updates", "use_bias", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_initial_state", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "reset_states", "set_weights"], "r": "r1.6", "t": "tf.keras.layers.LSTM"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/layers/LSTMCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.6", "t": "tf.keras.layers.LSTMCell"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/layers/Lambda", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.6", "t": "tf.keras.layers.Lambda"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/layers/Layer", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.6", "t": "tf.keras.layers.Layer"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/layers/LeakyReLU", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.6", "t": "tf.keras.layers.LeakyReLU"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/layers/LocallyConnected1D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.6", "t": "tf.keras.layers.LocallyConnected1D"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/layers/LocallyConnected2D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.6", "t": "tf.keras.layers.LocallyConnected2D"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/layers/Masking", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.6", "t": "tf.keras.layers.Masking"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/layers/MaxPool1D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.6", "t": "tf.keras.layers.MaxPool1D"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/layers/MaxPool2D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.6", "t": "tf.keras.layers.MaxPool2D"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/layers/MaxPool3D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.6", "t": "tf.keras.layers.MaxPool3D"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/layers/Maximum", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.6", "t": "tf.keras.layers.Maximum"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/layers/Multiply", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.6", "t": "tf.keras.layers.Multiply"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/layers/PReLU", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.6", "t": "tf.keras.layers.PReLU"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/layers/Permute", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.6", "t": "tf.keras.layers.Permute"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/layers/RNN", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "states", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_initial_state", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "reset_states", "set_weights"], "r": "r1.6", "t": "tf.keras.layers.RNN"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/layers/RepeatVector", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.6", "t": "tf.keras.layers.RepeatVector"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/layers/Reshape", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.6", "t": "tf.keras.layers.Reshape"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/layers/SeparableConv1D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.6", "t": "tf.keras.layers.SeparableConv1D"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/layers/SeparableConv2D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.6", "t": "tf.keras.layers.SeparableConv2D"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/layers/SimpleRNN", "k": ["activation", "activity_regularizer", "bias_constraint", "bias_initializer", "bias_regularizer", "dropout", "dtype", "graph", "input", "input_mask", "input_shape", "kernel_constraint", "kernel_initializer", "kernel_regularizer", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "recurrent_constraint", "recurrent_dropout", "recurrent_initializer", "recurrent_regularizer", "scope_name", "states", "trainable_variables", "trainable_weights", "units", "updates", "use_bias", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_initial_state", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "reset_states", "set_weights"], "r": "r1.6", "t": "tf.keras.layers.SimpleRNN"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/layers/SimpleRNNCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.6", "t": "tf.keras.layers.SimpleRNNCell"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/layers/Softmax", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.6", "t": "tf.keras.layers.Softmax"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/layers/SpatialDropout1D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.6", "t": "tf.keras.layers.SpatialDropout1D"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/layers/SpatialDropout2D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.6", "t": "tf.keras.layers.SpatialDropout2D"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/layers/SpatialDropout3D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.6", "t": "tf.keras.layers.SpatialDropout3D"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/layers/StackedRNNCells", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.6", "t": "tf.keras.layers.StackedRNNCells"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/layers/ThresholdedReLU", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.6", "t": "tf.keras.layers.ThresholdedReLU"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/layers/TimeDistributed", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.6", "t": "tf.keras.layers.TimeDistributed"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/layers/UpSampling1D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.6", "t": "tf.keras.layers.UpSampling1D"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/layers/UpSampling2D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.6", "t": "tf.keras.layers.UpSampling2D"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/layers/UpSampling3D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.6", "t": "tf.keras.layers.UpSampling3D"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/layers/Wrapper", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.6", "t": "tf.keras.layers.Wrapper"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/layers/ZeroPadding1D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.6", "t": "tf.keras.layers.ZeroPadding1D"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/layers/ZeroPadding2D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.6", "t": "tf.keras.layers.ZeroPadding2D"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/layers/ZeroPadding3D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.6", "t": "tf.keras.layers.ZeroPadding3D"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/layers/add", "k": [], "r": "r1.6", "t": "tf.keras.layers.add"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/layers/average", "k": [], "r": "r1.6", "t": "tf.keras.layers.average"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/layers/concatenate", "k": [], "r": "r1.6", "t": "tf.keras.layers.concatenate"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/layers/dot", "k": [], "r": "r1.6", "t": "tf.keras.layers.dot"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/layers/maximum", "k": [], "r": "r1.6", "t": "tf.keras.layers.maximum"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/layers/multiply", "k": [], "r": "r1.6", "t": "tf.keras.layers.multiply"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/losses", "k": [], "r": "r1.6", "t": "tf.keras.losses"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/losses/binary_crossentropy", "k": [], "r": "r1.6", "t": "tf.keras.losses.binary_crossentropy"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/losses/categorical_crossentropy", "k": [], "r": "r1.6", "t": "tf.keras.losses.categorical_crossentropy"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/losses/categorical_hinge", "k": [], "r": "r1.6", "t": "tf.keras.losses.categorical_hinge"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/losses/cosine_proximity", "k": [], "r": "r1.6", "t": "tf.keras.losses.cosine_proximity"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/losses/deserialize", "k": [], "r": "r1.6", "t": "tf.keras.losses.deserialize"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/losses/get", "k": [], "r": "r1.6", "t": "tf.keras.losses.get"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/losses/hinge", "k": [], "r": "r1.6", "t": "tf.keras.losses.hinge"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/losses/kullback_leibler_divergence", "k": [], "r": "r1.6", "t": "tf.keras.losses.kullback_leibler_divergence"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/losses/logcosh", "k": [], "r": "r1.6", "t": "tf.keras.losses.logcosh"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/losses/mean_absolute_error", "k": [], "r": "r1.6", "t": "tf.keras.losses.mean_absolute_error"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/losses/mean_absolute_percentage_error", "k": [], "r": "r1.6", "t": "tf.keras.losses.mean_absolute_percentage_error"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/losses/mean_squared_error", "k": [], "r": "r1.6", "t": "tf.keras.losses.mean_squared_error"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/losses/mean_squared_logarithmic_error", "k": [], "r": "r1.6", "t": "tf.keras.losses.mean_squared_logarithmic_error"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/losses/poisson", "k": [], "r": "r1.6", "t": "tf.keras.losses.poisson"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/losses/serialize", "k": [], "r": "r1.6", "t": "tf.keras.losses.serialize"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/losses/sparse_categorical_crossentropy", "k": [], "r": "r1.6", "t": "tf.keras.losses.sparse_categorical_crossentropy"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/losses/squared_hinge", "k": [], "r": "r1.6", "t": "tf.keras.losses.squared_hinge"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/metrics", "k": [], "r": "r1.6", "t": "tf.keras.metrics"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/metrics/binary_accuracy", "k": [], "r": "r1.6", "t": "tf.keras.metrics.binary_accuracy"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/metrics/categorical_accuracy", "k": [], "r": "r1.6", "t": "tf.keras.metrics.categorical_accuracy"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/metrics/deserialize", "k": [], "r": "r1.6", "t": "tf.keras.metrics.deserialize"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/metrics/get", "k": [], "r": "r1.6", "t": "tf.keras.metrics.get"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/metrics/serialize", "k": [], "r": "r1.6", "t": "tf.keras.metrics.serialize"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/metrics/sparse_top_k_categorical_accuracy", "k": [], "r": "r1.6", "t": "tf.keras.metrics.sparse_top_k_categorical_accuracy"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/metrics/top_k_categorical_accuracy", "k": [], "r": "r1.6", "t": "tf.keras.metrics.top_k_categorical_accuracy"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/models", "k": [], "r": "r1.6", "t": "tf.keras.models"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/models/load_model", "k": [], "r": "r1.6", "t": "tf.keras.models.load_model"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/models/model_from_config", "k": [], "r": "r1.6", "t": "tf.keras.models.model_from_config"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/models/model_from_json", "k": [], "r": "r1.6", "t": "tf.keras.models.model_from_json"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/models/model_from_yaml", "k": [], "r": "r1.6", "t": "tf.keras.models.model_from_yaml"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/models/save_model", "k": [], "r": "r1.6", "t": "tf.keras.models.save_model"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/optimizers", "k": [], "r": "r1.6", "t": "tf.keras.optimizers"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/optimizers/Adadelta", "k": ["__init__", "from_config", "get_config", "get_gradients", "get_updates", "get_weights", "set_weights"], "r": "r1.6", "t": "tf.keras.optimizers.Adadelta"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/optimizers/Adagrad", "k": ["__init__", "from_config", "get_config", "get_gradients", "get_updates", "get_weights", "set_weights"], "r": "r1.6", "t": "tf.keras.optimizers.Adagrad"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/optimizers/Adam", "k": ["__init__", "from_config", "get_config", "get_gradients", "get_updates", "get_weights", "set_weights"], "r": "r1.6", "t": "tf.keras.optimizers.Adam"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/optimizers/Adamax", "k": ["__init__", "from_config", "get_config", "get_gradients", "get_updates", "get_weights", "set_weights"], "r": "r1.6", "t": "tf.keras.optimizers.Adamax"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/optimizers/Nadam", "k": ["__init__", "from_config", "get_config", "get_gradients", "get_updates", "get_weights", "set_weights"], "r": "r1.6", "t": "tf.keras.optimizers.Nadam"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/optimizers/Optimizer", "k": ["__init__", "from_config", "get_config", "get_gradients", "get_updates", "get_weights", "set_weights"], "r": "r1.6", "t": "tf.keras.optimizers.Optimizer"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/optimizers/RMSprop", "k": ["__init__", "from_config", "get_config", "get_gradients", "get_updates", "get_weights", "set_weights"], "r": "r1.6", "t": "tf.keras.optimizers.RMSprop"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/optimizers/SGD", "k": ["__init__", "from_config", "get_config", "get_gradients", "get_updates", "get_weights", "set_weights"], "r": "r1.6", "t": "tf.keras.optimizers.SGD"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/optimizers/deserialize", "k": [], "r": "r1.6", "t": "tf.keras.optimizers.deserialize"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/optimizers/get", "k": [], "r": "r1.6", "t": "tf.keras.optimizers.get"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/optimizers/serialize", "k": [], "r": "r1.6", "t": "tf.keras.optimizers.serialize"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/preprocessing", "k": [], "r": "r1.6", "t": "tf.keras.preprocessing"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/preprocessing/image", "k": [], "r": "r1.6", "t": "tf.keras.preprocessing.image"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/preprocessing/image/DirectoryIterator", "k": ["__getitem__", "__init__", "__iter__", "__len__", "__next__", "next", "on_epoch_end", "reset"], "r": "r1.6", "t": "tf.keras.preprocessing.image.DirectoryIterator"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/preprocessing/image/ImageDataGenerator", "k": ["__init__", "fit", "flow", "flow_from_directory", "random_transform", "standardize"], "r": "r1.6", "t": "tf.keras.preprocessing.image.ImageDataGenerator"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/preprocessing/image/Iterator", "k": ["__getitem__", "__init__", "__iter__", "__len__", "__next__", "on_epoch_end", "reset"], "r": "r1.6", "t": "tf.keras.preprocessing.image.Iterator"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/preprocessing/image/NumpyArrayIterator", "k": ["__getitem__", "__init__", "__iter__", "__len__", "__next__", "next", "on_epoch_end", "reset"], "r": "r1.6", "t": "tf.keras.preprocessing.image.NumpyArrayIterator"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/preprocessing/image/apply_transform", "k": [], "r": "r1.6", "t": "tf.keras.preprocessing.image.apply_transform"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/preprocessing/image/array_to_img", "k": [], "r": "r1.6", "t": "tf.keras.preprocessing.image.array_to_img"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/preprocessing/image/flip_axis", "k": [], "r": "r1.6", "t": "tf.keras.preprocessing.image.flip_axis"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/preprocessing/image/img_to_array", "k": [], "r": "r1.6", "t": "tf.keras.preprocessing.image.img_to_array"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/preprocessing/image/load_img", "k": [], "r": "r1.6", "t": "tf.keras.preprocessing.image.load_img"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/preprocessing/image/random_channel_shift", "k": [], "r": "r1.6", "t": "tf.keras.preprocessing.image.random_channel_shift"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/preprocessing/image/random_rotation", "k": [], "r": "r1.6", "t": "tf.keras.preprocessing.image.random_rotation"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/preprocessing/image/random_shear", "k": [], "r": "r1.6", "t": "tf.keras.preprocessing.image.random_shear"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/preprocessing/image/random_shift", "k": [], "r": "r1.6", "t": "tf.keras.preprocessing.image.random_shift"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/preprocessing/image/random_zoom", "k": [], "r": "r1.6", "t": "tf.keras.preprocessing.image.random_zoom"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/preprocessing/sequence", "k": [], "r": "r1.6", "t": "tf.keras.preprocessing.sequence"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/preprocessing/sequence/make_sampling_table", "k": [], "r": "r1.6", "t": "tf.keras.preprocessing.sequence.make_sampling_table"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/preprocessing/sequence/pad_sequences", "k": [], "r": "r1.6", "t": "tf.keras.preprocessing.sequence.pad_sequences"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/preprocessing/sequence/skipgrams", "k": [], "r": "r1.6", "t": "tf.keras.preprocessing.sequence.skipgrams"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/preprocessing/text", "k": [], "r": "r1.6", "t": "tf.keras.preprocessing.text"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/preprocessing/text/Tokenizer", "k": ["__init__", "fit_on_sequences", "fit_on_texts", "sequences_to_matrix", "texts_to_matrix", "texts_to_sequences", "texts_to_sequences_generator"], "r": "r1.6", "t": "tf.keras.preprocessing.text.Tokenizer"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/preprocessing/text/one_hot", "k": [], "r": "r1.6", "t": "tf.keras.preprocessing.text.one_hot"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/preprocessing/text/text_to_word_sequence", "k": [], "r": "r1.6", "t": "tf.keras.preprocessing.text.text_to_word_sequence"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/regularizers", "k": [], "r": "r1.6", "t": "tf.keras.regularizers"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/regularizers/L1L2", "k": ["__call__", "__init__", "from_config", "get_config"], "r": "r1.6", "t": "tf.keras.regularizers.L1L2"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/regularizers/Regularizer", "k": ["__call__", "from_config"], "r": "r1.6", "t": "tf.keras.regularizers.Regularizer"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/regularizers/deserialize", "k": [], "r": "r1.6", "t": "tf.keras.regularizers.deserialize"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/regularizers/get", "k": [], "r": "r1.6", "t": "tf.keras.regularizers.get"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/regularizers/l1", "k": [], "r": "r1.6", "t": "tf.keras.regularizers.l1"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/regularizers/l1_l2", "k": [], "r": "r1.6", "t": "tf.keras.regularizers.l1_l2"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/regularizers/l2", "k": [], "r": "r1.6", "t": "tf.keras.regularizers.l2"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/regularizers/serialize", "k": [], "r": "r1.6", "t": "tf.keras.regularizers.serialize"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/utils", "k": [], "r": "r1.6", "t": "tf.keras.utils"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/utils/CustomObjectScope", "k": ["__enter__", "__exit__", "__init__"], "r": "r1.6", "t": "tf.keras.utils.CustomObjectScope"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/utils/GeneratorEnqueuer", "k": ["__init__", "get", "is_running", "start", "stop"], "r": "r1.6", "t": "tf.keras.utils.GeneratorEnqueuer"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/utils/HDF5Matrix", "k": ["dtype", "ndim", "shape", "size", "__getitem__", "__init__", "__len__", "refs"], "r": "r1.6", "t": "tf.keras.utils.HDF5Matrix"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/utils/Progbar", "k": ["__init__", "add", "update"], "r": "r1.6", "t": "tf.keras.utils.Progbar"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/utils/Sequence", "k": ["__getitem__", "__len__", "on_epoch_end"], "r": "r1.6", "t": "tf.keras.utils.Sequence"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/utils/SequenceEnqueuer", "k": ["get", "is_running", "start", "stop"], "r": "r1.6", "t": "tf.keras.utils.SequenceEnqueuer"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/utils/convert_all_kernels_in_model", "k": [], "r": "r1.6", "t": "tf.keras.utils.convert_all_kernels_in_model"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/utils/custom_object_scope", "k": [], "r": "r1.6", "t": "tf.keras.utils.custom_object_scope"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/utils/deserialize_keras_object", "k": [], "r": "r1.6", "t": "tf.keras.utils.deserialize_keras_object"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/utils/get_custom_objects", "k": [], "r": "r1.6", "t": "tf.keras.utils.get_custom_objects"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/utils/get_file", "k": [], "r": "r1.6", "t": "tf.keras.utils.get_file"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/utils/multi_gpu_model", "k": [], "r": "r1.6", "t": "tf.keras.utils.multi_gpu_model"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/utils/normalize", "k": [], "r": "r1.6", "t": "tf.keras.utils.normalize"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/utils/plot_model", "k": [], "r": "r1.6", "t": "tf.keras.utils.plot_model"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/utils/serialize_keras_object", "k": [], "r": "r1.6", "t": "tf.keras.utils.serialize_keras_object"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/utils/to_categorical", "k": [], "r": "r1.6", "t": "tf.keras.utils.to_categorical"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/wrappers", "k": [], "r": "r1.6", "t": "tf.keras.wrappers"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/wrappers/scikit_learn", "k": [], "r": "r1.6", "t": "tf.keras.wrappers.scikit_learn"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/wrappers/scikit_learn/KerasClassifier", "k": ["__init__", "check_params", "filter_sk_params", "fit", "get_params", "predict", "predict_proba", "score", "set_params"], "r": "r1.6", "t": "tf.keras.wrappers.scikit_learn.KerasClassifier"}, {"p": "/versions/r1.6/api_docs/python/tf/keras/wrappers/scikit_learn/KerasRegressor", "k": ["__init__", "check_params", "filter_sk_params", "fit", "get_params", "predict", "score", "set_params"], "r": "r1.6", "t": "tf.keras.wrappers.scikit_learn.KerasRegressor"}, {"p": "/versions/r1.6/api_docs/python/tf/layers", "k": [], "r": "r1.6", "t": "tf.layers"}, {"p": "/versions/r1.6/api_docs/python/tf/layers/AveragePooling1D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "r1.6", "t": "tf.layers.AveragePooling1D"}, {"p": "/versions/r1.6/api_docs/python/tf/layers/AveragePooling2D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "r1.6", "t": "tf.layers.AveragePooling2D"}, {"p": "/versions/r1.6/api_docs/python/tf/layers/AveragePooling3D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "r1.6", "t": "tf.layers.AveragePooling3D"}, {"p": "/versions/r1.6/api_docs/python/tf/layers/BatchNormalization", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "r1.6", "t": "tf.layers.BatchNormalization"}, {"p": "/versions/r1.6/api_docs/python/tf/layers/Conv1D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "r1.6", "t": "tf.layers.Conv1D"}, {"p": "/versions/r1.6/api_docs/python/tf/layers/Conv2D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "r1.6", "t": "tf.layers.Conv2D"}, {"p": "/versions/r1.6/api_docs/python/tf/layers/Conv2DTranspose", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "r1.6", "t": "tf.layers.Conv2DTranspose"}, {"p": "/versions/r1.6/api_docs/python/tf/layers/Conv3D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "r1.6", "t": "tf.layers.Conv3D"}, {"p": "/versions/r1.6/api_docs/python/tf/layers/Conv3DTranspose", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "r1.6", "t": "tf.layers.Conv3DTranspose"}, {"p": "/versions/r1.6/api_docs/python/tf/layers/Dense", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "r1.6", "t": "tf.layers.Dense"}, {"p": "/versions/r1.6/api_docs/python/tf/layers/Dropout", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "r1.6", "t": "tf.layers.Dropout"}, {"p": "/versions/r1.6/api_docs/python/tf/layers/Flatten", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "r1.6", "t": "tf.layers.Flatten"}, {"p": "/versions/r1.6/api_docs/python/tf/layers/Input", "k": [], "r": "r1.6", "t": "tf.layers.Input"}, {"p": "/versions/r1.6/api_docs/python/tf/layers/InputSpec", "k": ["__init__"], "r": "r1.6", "t": "tf.layers.InputSpec"}, {"p": "/versions/r1.6/api_docs/python/tf/layers/Layer", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "r1.6", "t": "tf.layers.Layer"}, {"p": "/versions/r1.6/api_docs/python/tf/layers/MaxPooling1D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "r1.6", "t": "tf.layers.MaxPooling1D"}, {"p": "/versions/r1.6/api_docs/python/tf/layers/MaxPooling2D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "r1.6", "t": "tf.layers.MaxPooling2D"}, {"p": "/versions/r1.6/api_docs/python/tf/layers/MaxPooling3D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "r1.6", "t": "tf.layers.MaxPooling3D"}, {"p": "/versions/r1.6/api_docs/python/tf/layers/SeparableConv1D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "r1.6", "t": "tf.layers.SeparableConv1D"}, {"p": "/versions/r1.6/api_docs/python/tf/layers/SeparableConv2D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "r1.6", "t": "tf.layers.SeparableConv2D"}, {"p": "/versions/r1.6/api_docs/python/tf/layers/average_pooling1d", "k": [], "r": "r1.6", "t": "tf.layers.average_pooling1d"}, {"p": "/versions/r1.6/api_docs/python/tf/layers/average_pooling2d", "k": [], "r": "r1.6", "t": "tf.layers.average_pooling2d"}, {"p": "/versions/r1.6/api_docs/python/tf/layers/average_pooling3d", "k": [], "r": "r1.6", "t": "tf.layers.average_pooling3d"}, {"p": "/versions/r1.6/api_docs/python/tf/layers/batch_normalization", "k": [], "r": "r1.6", "t": "tf.layers.batch_normalization"}, {"p": "/versions/r1.6/api_docs/python/tf/layers/conv1d", "k": [], "r": "r1.6", "t": "tf.layers.conv1d"}, {"p": "/versions/r1.6/api_docs/python/tf/layers/conv2d", "k": [], "r": "r1.6", "t": "tf.layers.conv2d"}, {"p": "/versions/r1.6/api_docs/python/tf/layers/conv2d_transpose", "k": [], "r": "r1.6", "t": "tf.layers.conv2d_transpose"}, {"p": "/versions/r1.6/api_docs/python/tf/layers/conv3d", "k": [], "r": "r1.6", "t": "tf.layers.conv3d"}, {"p": "/versions/r1.6/api_docs/python/tf/layers/conv3d_transpose", "k": [], "r": "r1.6", "t": "tf.layers.conv3d_transpose"}, {"p": "/versions/r1.6/api_docs/python/tf/layers/dense", "k": [], "r": "r1.6", "t": "tf.layers.dense"}, {"p": "/versions/r1.6/api_docs/python/tf/layers/dropout", "k": [], "r": "r1.6", "t": "tf.layers.dropout"}, {"p": "/versions/r1.6/api_docs/python/tf/layers/flatten", "k": [], "r": "r1.6", "t": "tf.layers.flatten"}, {"p": "/versions/r1.6/api_docs/python/tf/layers/max_pooling1d", "k": [], "r": "r1.6", "t": "tf.layers.max_pooling1d"}, {"p": "/versions/r1.6/api_docs/python/tf/layers/max_pooling2d", "k": [], "r": "r1.6", "t": "tf.layers.max_pooling2d"}, {"p": "/versions/r1.6/api_docs/python/tf/layers/max_pooling3d", "k": [], "r": "r1.6", "t": "tf.layers.max_pooling3d"}, {"p": "/versions/r1.6/api_docs/python/tf/layers/separable_conv1d", "k": [], "r": "r1.6", "t": "tf.layers.separable_conv1d"}, {"p": "/versions/r1.6/api_docs/python/tf/layers/separable_conv2d", "k": [], "r": "r1.6", "t": "tf.layers.separable_conv2d"}, {"p": "/versions/r1.6/api_docs/python/tf/lbeta", "k": [], "r": "r1.6", "t": "tf.lbeta"}, {"p": "/versions/r1.6/api_docs/python/tf/less", "k": [], "r": "r1.6", "t": "tf.less"}, {"p": "/versions/r1.6/api_docs/python/tf/less_equal", "k": [], "r": "r1.6", "t": "tf.less_equal"}, {"p": "/versions/r1.6/api_docs/python/tf/lgamma", "k": [], "r": "r1.6", "t": "tf.lgamma"}, {"p": "/versions/r1.6/api_docs/python/tf/lin_space", "k": [], "r": "r1.6", "t": "tf.lin_space"}, {"p": "/versions/r1.6/api_docs/python/tf/linalg", "k": [], "r": "r1.6", "t": "tf.linalg"}, {"p": "/versions/r1.6/api_docs/python/tf/linalg/LinearOperator", "k": ["batch_shape", "domain_dimension", "dtype", "graph_parents", "is_non_singular", "is_positive_definite", "is_self_adjoint", "is_square", "name", "range_dimension", "shape", "tensor_rank", "__init__", "add_to_tensor", "assert_non_singular", "assert_positive_definite", "assert_self_adjoint", "batch_shape_tensor", "determinant", "diag_part", "domain_dimension_tensor", "log_abs_determinant", "matmul", "matvec", "range_dimension_tensor", "shape_tensor", "solve", "solvevec", "tensor_rank_tensor", "to_dense", "trace"], "r": "r1.6", "t": "tf.linalg.LinearOperator"}, {"p": "/versions/r1.6/api_docs/python/tf/linalg/LinearOperatorComposition", "k": ["batch_shape", "domain_dimension", "dtype", "graph_parents", "is_non_singular", "is_positive_definite", "is_self_adjoint", "is_square", "name", "operators", "range_dimension", "shape", "tensor_rank", "__init__", "add_to_tensor", "assert_non_singular", "assert_positive_definite", "assert_self_adjoint", "batch_shape_tensor", "determinant", "diag_part", "domain_dimension_tensor", "log_abs_determinant", "matmul", "matvec", "range_dimension_tensor", "shape_tensor", "solve", "solvevec", "tensor_rank_tensor", "to_dense", "trace"], "r": "r1.6", "t": "tf.linalg.LinearOperatorComposition"}, {"p": "/versions/r1.6/api_docs/python/tf/linalg/LinearOperatorDiag", "k": ["batch_shape", "diag", "domain_dimension", "dtype", "graph_parents", "is_non_singular", "is_positive_definite", "is_self_adjoint", "is_square", "name", "range_dimension", "shape", "tensor_rank", "__init__", "add_to_tensor", "assert_non_singular", "assert_positive_definite", "assert_self_adjoint", "batch_shape_tensor", "determinant", "diag_part", "domain_dimension_tensor", "log_abs_determinant", "matmul", "matvec", "range_dimension_tensor", "shape_tensor", "solve", "solvevec", "tensor_rank_tensor", "to_dense", "trace"], "r": "r1.6", "t": "tf.linalg.LinearOperatorDiag"}, {"p": "/versions/r1.6/api_docs/python/tf/linalg/LinearOperatorFullMatrix", "k": ["batch_shape", "domain_dimension", "dtype", "graph_parents", "is_non_singular", "is_positive_definite", "is_self_adjoint", "is_square", "name", "range_dimension", "shape", "tensor_rank", "__init__", "add_to_tensor", "assert_non_singular", "assert_positive_definite", "assert_self_adjoint", "batch_shape_tensor", "determinant", "diag_part", "domain_dimension_tensor", "log_abs_determinant", "matmul", "matvec", "range_dimension_tensor", "shape_tensor", "solve", "solvevec", "tensor_rank_tensor", "to_dense", "trace"], "r": "r1.6", "t": "tf.linalg.LinearOperatorFullMatrix"}, {"p": "/versions/r1.6/api_docs/python/tf/linalg/LinearOperatorIdentity", "k": ["batch_shape", "domain_dimension", "dtype", "graph_parents", "is_non_singular", "is_positive_definite", "is_self_adjoint", "is_square", "name", "range_dimension", "shape", "tensor_rank", "__init__", "add_to_tensor", "assert_non_singular", "assert_positive_definite", "assert_self_adjoint", "batch_shape_tensor", "determinant", "diag_part", "domain_dimension_tensor", "log_abs_determinant", "matmul", "matvec", "range_dimension_tensor", "shape_tensor", "solve", "solvevec", "tensor_rank_tensor", "to_dense", "trace"], "r": "r1.6", "t": "tf.linalg.LinearOperatorIdentity"}, {"p": "/versions/r1.6/api_docs/python/tf/linalg/LinearOperatorLowRankUpdate", "k": ["base_operator", "batch_shape", "diag_operator", "diag_update", "domain_dimension", "dtype", "graph_parents", "is_diag_update_positive", "is_non_singular", "is_positive_definite", "is_self_adjoint", "is_square", "name", "range_dimension", "shape", "tensor_rank", "u", "v", "__init__", "add_to_tensor", "assert_non_singular", "assert_positive_definite", "assert_self_adjoint", "batch_shape_tensor", "determinant", "diag_part", "domain_dimension_tensor", "log_abs_determinant", "matmul", "matvec", "range_dimension_tensor", "shape_tensor", "solve", "solvevec", "tensor_rank_tensor", "to_dense", "trace"], "r": "r1.6", "t": "tf.linalg.LinearOperatorLowRankUpdate"}, {"p": "/versions/r1.6/api_docs/python/tf/linalg/LinearOperatorLowerTriangular", "k": ["batch_shape", "domain_dimension", "dtype", "graph_parents", "is_non_singular", "is_positive_definite", "is_self_adjoint", "is_square", "name", "range_dimension", "shape", "tensor_rank", "__init__", "add_to_tensor", "assert_non_singular", "assert_positive_definite", "assert_self_adjoint", "batch_shape_tensor", "determinant", "diag_part", "domain_dimension_tensor", "log_abs_determinant", "matmul", "matvec", "range_dimension_tensor", "shape_tensor", "solve", "solvevec", "tensor_rank_tensor", "to_dense", "trace"], "r": "r1.6", "t": "tf.linalg.LinearOperatorLowerTriangular"}, {"p": "/versions/r1.6/api_docs/python/tf/linalg/LinearOperatorScaledIdentity", "k": ["batch_shape", "domain_dimension", "dtype", "graph_parents", "is_non_singular", "is_positive_definite", "is_self_adjoint", "is_square", "multiplier", "name", "range_dimension", "shape", "tensor_rank", "__init__", "add_to_tensor", "assert_non_singular", "assert_positive_definite", "assert_self_adjoint", "batch_shape_tensor", "determinant", "diag_part", "domain_dimension_tensor", "log_abs_determinant", "matmul", "matvec", "range_dimension_tensor", "shape_tensor", "solve", "solvevec", "tensor_rank_tensor", "to_dense", "trace"], "r": "r1.6", "t": "tf.linalg.LinearOperatorScaledIdentity"}, {"p": "/versions/r1.6/api_docs/python/tf/linalg/adjoint", "k": [], "r": "r1.6", "t": "tf.linalg.adjoint"}, {"p": "/versions/r1.6/api_docs/python/tf/linalg/expm", "k": [], "r": "r1.6", "t": "tf.linalg.expm"}, {"p": "/versions/r1.6/api_docs/python/tf/linalg/logdet", "k": [], "r": "r1.6", "t": "tf.linalg.logdet"}, {"p": "/versions/r1.6/api_docs/python/tf/linalg/logm", "k": [], "r": "r1.6", "t": "tf.linalg.logm"}, {"p": "/versions/r1.6/api_docs/python/tf/linalg/slogdet", "k": [], "r": "r1.6", "t": "tf.linalg.slogdet"}, {"p": "/versions/r1.6/api_docs/python/tf/load_file_system_library", "k": [], "r": "r1.6", "t": "tf.load_file_system_library"}, {"p": "/versions/r1.6/api_docs/python/tf/load_op_library", "k": [], "r": "r1.6", "t": "tf.load_op_library"}, {"p": "/versions/r1.6/api_docs/python/tf/local_variables", "k": [], "r": "r1.6", "t": "tf.local_variables"}, {"p": "/versions/r1.6/api_docs/python/tf/local_variables_initializer", "k": [], "r": "r1.6", "t": "tf.local_variables_initializer"}, {"p": "/versions/r1.6/api_docs/python/tf/log", "k": [], "r": "r1.6", "t": "tf.log"}, {"p": "/versions/r1.6/api_docs/python/tf/log1p", "k": [], "r": "r1.6", "t": "tf.log1p"}, {"p": "/versions/r1.6/api_docs/python/tf/log_sigmoid", "k": [], "r": "r1.6", "t": "tf.log_sigmoid"}, {"p": "/versions/r1.6/api_docs/python/tf/logging", "k": ["DEBUG", "ERROR", "FATAL", "INFO", "WARN"], "r": "r1.6", "t": "tf.logging"}, {"p": "/versions/r1.6/api_docs/python/tf/logging/TaskLevelStatusMessage", "k": [], "r": "r1.6", "t": "tf.logging.TaskLevelStatusMessage"}, {"p": "/versions/r1.6/api_docs/python/tf/logging/debug", "k": [], "r": "r1.6", "t": "tf.logging.debug"}, {"p": "/versions/r1.6/api_docs/python/tf/logging/error", "k": [], "r": "r1.6", "t": "tf.logging.error"}, {"p": "/versions/r1.6/api_docs/python/tf/logging/fatal", "k": [], "r": "r1.6", "t": "tf.logging.fatal"}, {"p": "/versions/r1.6/api_docs/python/tf/logging/flush", "k": [], "r": "r1.6", "t": "tf.logging.flush"}, {"p": "/versions/r1.6/api_docs/python/tf/logging/get_verbosity", "k": [], "r": "r1.6", "t": "tf.logging.get_verbosity"}, {"p": "/versions/r1.6/api_docs/python/tf/logging/info", "k": [], "r": "r1.6", "t": "tf.logging.info"}, {"p": "/versions/r1.6/api_docs/python/tf/logging/log", "k": [], "r": "r1.6", "t": "tf.logging.log"}, {"p": "/versions/r1.6/api_docs/python/tf/logging/log_every_n", "k": [], "r": "r1.6", "t": "tf.logging.log_every_n"}, {"p": "/versions/r1.6/api_docs/python/tf/logging/log_first_n", "k": [], "r": "r1.6", "t": "tf.logging.log_first_n"}, {"p": "/versions/r1.6/api_docs/python/tf/logging/log_if", "k": [], "r": "r1.6", "t": "tf.logging.log_if"}, {"p": "/versions/r1.6/api_docs/python/tf/logging/set_verbosity", "k": [], "r": "r1.6", "t": "tf.logging.set_verbosity"}, {"p": "/versions/r1.6/api_docs/python/tf/logging/vlog", "k": [], "r": "r1.6", "t": "tf.logging.vlog"}, {"p": "/versions/r1.6/api_docs/python/tf/logging/warn", "k": [], "r": "r1.6", "t": "tf.logging.warn"}, {"p": "/versions/r1.6/api_docs/python/tf/logging/warning", "k": [], "r": "r1.6", "t": "tf.logging.warning"}, {"p": "/versions/r1.6/api_docs/python/tf/logical_and", "k": [], "r": "r1.6", "t": "tf.logical_and"}, {"p": "/versions/r1.6/api_docs/python/tf/logical_not", "k": [], "r": "r1.6", "t": "tf.logical_not"}, {"p": "/versions/r1.6/api_docs/python/tf/logical_or", "k": [], "r": "r1.6", "t": "tf.logical_or"}, {"p": "/versions/r1.6/api_docs/python/tf/logical_xor", "k": [], "r": "r1.6", "t": "tf.logical_xor"}, {"p": "/versions/r1.6/api_docs/python/tf/losses", "k": [], "r": "r1.6", "t": "tf.losses"}, {"p": "/versions/r1.6/api_docs/python/tf/losses/Reduction", "k": ["all", "validate", "MEAN", "NONE", "SUM", "SUM_BY_NONZERO_WEIGHTS", "SUM_OVER_BATCH_SIZE", "SUM_OVER_NONZERO_WEIGHTS"], "r": "r1.6", "t": "tf.losses.Reduction"}, {"p": "/versions/r1.6/api_docs/python/tf/losses/absolute_difference", "k": [], "r": "r1.6", "t": "tf.losses.absolute_difference"}, {"p": "/versions/r1.6/api_docs/python/tf/losses/add_loss", "k": [], "r": "r1.6", "t": "tf.losses.add_loss"}, {"p": "/versions/r1.6/api_docs/python/tf/losses/compute_weighted_loss", "k": [], "r": "r1.6", "t": "tf.losses.compute_weighted_loss"}, {"p": "/versions/r1.6/api_docs/python/tf/losses/cosine_distance", "k": [], "r": "r1.6", "t": "tf.losses.cosine_distance"}, {"p": "/versions/r1.6/api_docs/python/tf/losses/get_losses", "k": [], "r": "r1.6", "t": "tf.losses.get_losses"}, {"p": "/versions/r1.6/api_docs/python/tf/losses/get_regularization_loss", "k": [], "r": "r1.6", "t": "tf.losses.get_regularization_loss"}, {"p": "/versions/r1.6/api_docs/python/tf/losses/get_regularization_losses", "k": [], "r": "r1.6", "t": "tf.losses.get_regularization_losses"}, {"p": "/versions/r1.6/api_docs/python/tf/losses/get_total_loss", "k": [], "r": "r1.6", "t": "tf.losses.get_total_loss"}, {"p": "/versions/r1.6/api_docs/python/tf/losses/hinge_loss", "k": [], "r": "r1.6", "t": "tf.losses.hinge_loss"}, {"p": "/versions/r1.6/api_docs/python/tf/losses/huber_loss", "k": [], "r": "r1.6", "t": "tf.losses.huber_loss"}, {"p": "/versions/r1.6/api_docs/python/tf/losses/log_loss", "k": [], "r": "r1.6", "t": "tf.losses.log_loss"}, {"p": "/versions/r1.6/api_docs/python/tf/losses/mean_pairwise_squared_error", "k": [], "r": "r1.6", "t": "tf.losses.mean_pairwise_squared_error"}, {"p": "/versions/r1.6/api_docs/python/tf/losses/mean_squared_error", "k": [], "r": "r1.6", "t": "tf.losses.mean_squared_error"}, {"p": "/versions/r1.6/api_docs/python/tf/losses/sigmoid_cross_entropy", "k": [], "r": "r1.6", "t": "tf.losses.sigmoid_cross_entropy"}, {"p": "/versions/r1.6/api_docs/python/tf/losses/softmax_cross_entropy", "k": [], "r": "r1.6", "t": "tf.losses.softmax_cross_entropy"}, {"p": "/versions/r1.6/api_docs/python/tf/losses/sparse_softmax_cross_entropy", "k": [], "r": "r1.6", "t": "tf.losses.sparse_softmax_cross_entropy"}, {"p": "/versions/r1.6/api_docs/python/tf/make_ndarray", "k": [], "r": "r1.6", "t": "tf.make_ndarray"}, {"p": "/versions/r1.6/api_docs/python/tf/make_template", "k": [], "r": "r1.6", "t": "tf.make_template"}, {"p": "/versions/r1.6/api_docs/python/tf/make_tensor_proto", "k": [], "r": "r1.6", "t": "tf.make_tensor_proto"}, {"p": "/versions/r1.6/api_docs/python/tf/manip", "k": [], "r": "r1.6", "t": "tf.manip"}, {"p": "/versions/r1.6/api_docs/python/tf/manip/roll", "k": [], "r": "r1.6", "t": "tf.manip.roll"}, {"p": "/versions/r1.6/api_docs/python/tf/map_fn", "k": [], "r": "r1.6", "t": "tf.map_fn"}, {"p": "/versions/r1.6/api_docs/python/tf/matching_files", "k": [], "r": "r1.6", "t": "tf.matching_files"}, {"p": "/versions/r1.6/api_docs/python/tf/matmul", "k": [], "r": "r1.6", "t": "tf.matmul"}, {"p": "/versions/r1.6/api_docs/python/tf/matrix_band_part", "k": [], "r": "r1.6", "t": "tf.matrix_band_part"}, {"p": "/versions/r1.6/api_docs/python/tf/matrix_determinant", "k": [], "r": "r1.6", "t": "tf.matrix_determinant"}, {"p": "/versions/r1.6/api_docs/python/tf/matrix_diag", "k": [], "r": "r1.6", "t": "tf.matrix_diag"}, {"p": "/versions/r1.6/api_docs/python/tf/matrix_diag_part", "k": [], "r": "r1.6", "t": "tf.matrix_diag_part"}, {"p": "/versions/r1.6/api_docs/python/tf/matrix_inverse", "k": [], "r": "r1.6", "t": "tf.matrix_inverse"}, {"p": "/versions/r1.6/api_docs/python/tf/matrix_set_diag", "k": [], "r": "r1.6", "t": "tf.matrix_set_diag"}, {"p": "/versions/r1.6/api_docs/python/tf/matrix_solve", "k": [], "r": "r1.6", "t": "tf.matrix_solve"}, {"p": "/versions/r1.6/api_docs/python/tf/matrix_solve_ls", "k": [], "r": "r1.6", "t": "tf.matrix_solve_ls"}, {"p": "/versions/r1.6/api_docs/python/tf/matrix_transpose", "k": [], "r": "r1.6", "t": "tf.matrix_transpose"}, {"p": "/versions/r1.6/api_docs/python/tf/matrix_triangular_solve", "k": [], "r": "r1.6", "t": "tf.matrix_triangular_solve"}, {"p": "/versions/r1.6/api_docs/python/tf/maximum", "k": [], "r": "r1.6", "t": "tf.maximum"}, {"p": "/versions/r1.6/api_docs/python/tf/meshgrid", "k": [], "r": "r1.6", "t": "tf.meshgrid"}, {"p": "/versions/r1.6/api_docs/python/tf/metrics", "k": [], "r": "r1.6", "t": "tf.metrics"}, {"p": "/versions/r1.6/api_docs/python/tf/metrics/accuracy", "k": [], "r": "r1.6", "t": "tf.metrics.accuracy"}, {"p": "/versions/r1.6/api_docs/python/tf/metrics/auc", "k": [], "r": "r1.6", "t": "tf.metrics.auc"}, {"p": "/versions/r1.6/api_docs/python/tf/metrics/average_precision_at_k", "k": [], "r": "r1.6", "t": "tf.metrics.average_precision_at_k"}, {"p": "/versions/r1.6/api_docs/python/tf/metrics/false_negatives", "k": [], "r": "r1.6", "t": "tf.metrics.false_negatives"}, {"p": "/versions/r1.6/api_docs/python/tf/metrics/false_negatives_at_thresholds", "k": [], "r": "r1.6", "t": "tf.metrics.false_negatives_at_thresholds"}, {"p": "/versions/r1.6/api_docs/python/tf/metrics/false_positives", "k": [], "r": "r1.6", "t": "tf.metrics.false_positives"}, {"p": "/versions/r1.6/api_docs/python/tf/metrics/false_positives_at_thresholds", "k": [], "r": "r1.6", "t": "tf.metrics.false_positives_at_thresholds"}, {"p": "/versions/r1.6/api_docs/python/tf/metrics/mean", "k": [], "r": "r1.6", "t": "tf.metrics.mean"}, {"p": "/versions/r1.6/api_docs/python/tf/metrics/mean_absolute_error", "k": [], "r": "r1.6", "t": "tf.metrics.mean_absolute_error"}, {"p": "/versions/r1.6/api_docs/python/tf/metrics/mean_cosine_distance", "k": [], "r": "r1.6", "t": "tf.metrics.mean_cosine_distance"}, {"p": "/versions/r1.6/api_docs/python/tf/metrics/mean_iou", "k": [], "r": "r1.6", "t": "tf.metrics.mean_iou"}, {"p": "/versions/r1.6/api_docs/python/tf/metrics/mean_per_class_accuracy", "k": [], "r": "r1.6", "t": "tf.metrics.mean_per_class_accuracy"}, {"p": "/versions/r1.6/api_docs/python/tf/metrics/mean_relative_error", "k": [], "r": "r1.6", "t": "tf.metrics.mean_relative_error"}, {"p": "/versions/r1.6/api_docs/python/tf/metrics/mean_squared_error", "k": [], "r": "r1.6", "t": "tf.metrics.mean_squared_error"}, {"p": "/versions/r1.6/api_docs/python/tf/metrics/mean_tensor", "k": [], "r": "r1.6", "t": "tf.metrics.mean_tensor"}, {"p": "/versions/r1.6/api_docs/python/tf/metrics/percentage_below", "k": [], "r": "r1.6", "t": "tf.metrics.percentage_below"}, {"p": "/versions/r1.6/api_docs/python/tf/metrics/precision", "k": [], "r": "r1.6", "t": "tf.metrics.precision"}, {"p": "/versions/r1.6/api_docs/python/tf/metrics/precision_at_k", "k": [], "r": "r1.6", "t": "tf.metrics.precision_at_k"}, {"p": "/versions/r1.6/api_docs/python/tf/metrics/precision_at_thresholds", "k": [], "r": "r1.6", "t": "tf.metrics.precision_at_thresholds"}, {"p": "/versions/r1.6/api_docs/python/tf/metrics/precision_at_top_k", "k": [], "r": "r1.6", "t": "tf.metrics.precision_at_top_k"}, {"p": "/versions/r1.6/api_docs/python/tf/metrics/recall", "k": [], "r": "r1.6", "t": "tf.metrics.recall"}, {"p": "/versions/r1.6/api_docs/python/tf/metrics/recall_at_k", "k": [], "r": "r1.6", "t": "tf.metrics.recall_at_k"}, {"p": "/versions/r1.6/api_docs/python/tf/metrics/recall_at_thresholds", "k": [], "r": "r1.6", "t": "tf.metrics.recall_at_thresholds"}, {"p": "/versions/r1.6/api_docs/python/tf/metrics/recall_at_top_k", "k": [], "r": "r1.6", "t": "tf.metrics.recall_at_top_k"}, {"p": "/versions/r1.6/api_docs/python/tf/metrics/root_mean_squared_error", "k": [], "r": "r1.6", "t": "tf.metrics.root_mean_squared_error"}, {"p": "/versions/r1.6/api_docs/python/tf/metrics/sensitivity_at_specificity", "k": [], "r": "r1.6", "t": "tf.metrics.sensitivity_at_specificity"}, {"p": "/versions/r1.6/api_docs/python/tf/metrics/sparse_average_precision_at_k", "k": [], "r": "r1.6", "t": "tf.metrics.sparse_average_precision_at_k"}, {"p": "/versions/r1.6/api_docs/python/tf/metrics/sparse_precision_at_k", "k": [], "r": "r1.6", "t": "tf.metrics.sparse_precision_at_k"}, {"p": "/versions/r1.6/api_docs/python/tf/metrics/specificity_at_sensitivity", "k": [], "r": "r1.6", "t": "tf.metrics.specificity_at_sensitivity"}, {"p": "/versions/r1.6/api_docs/python/tf/metrics/true_negatives", "k": [], "r": "r1.6", "t": "tf.metrics.true_negatives"}, {"p": "/versions/r1.6/api_docs/python/tf/metrics/true_negatives_at_thresholds", "k": [], "r": "r1.6", "t": "tf.metrics.true_negatives_at_thresholds"}, {"p": "/versions/r1.6/api_docs/python/tf/metrics/true_positives", "k": [], "r": "r1.6", "t": "tf.metrics.true_positives"}, {"p": "/versions/r1.6/api_docs/python/tf/metrics/true_positives_at_thresholds", "k": [], "r": "r1.6", "t": "tf.metrics.true_positives_at_thresholds"}, {"p": "/versions/r1.6/api_docs/python/tf/min_max_variable_partitioner", "k": [], "r": "r1.6", "t": "tf.min_max_variable_partitioner"}, {"p": "/versions/r1.6/api_docs/python/tf/minimum", "k": [], "r": "r1.6", "t": "tf.minimum"}, {"p": "/versions/r1.6/api_docs/python/tf/model_variables", "k": [], "r": "r1.6", "t": "tf.model_variables"}, {"p": "/versions/r1.6/api_docs/python/tf/moving_average_variables", "k": [], "r": "r1.6", "t": "tf.moving_average_variables"}, {"p": "/versions/r1.6/api_docs/python/tf/multinomial", "k": [], "r": "r1.6", "t": "tf.multinomial"}, {"p": "/versions/r1.6/api_docs/python/tf/multiply", "k": [], "r": "r1.6", "t": "tf.multiply"}, {"p": "/versions/r1.6/api_docs/python/tf/name_scope", "k": ["name", "__enter__", "__exit__", "__init__"], "r": "r1.6", "t": "tf.name_scope"}, {"p": "/versions/r1.6/api_docs/python/tf/negative", "k": [], "r": "r1.6", "t": "tf.negative"}, {"p": "/versions/r1.6/api_docs/python/tf/nn", "k": ["swish"], "r": "r1.6", "t": "tf.nn"}, {"p": "/versions/r1.6/api_docs/python/tf/nn/all_candidate_sampler", "k": [], "r": "r1.6", "t": "tf.nn.all_candidate_sampler"}, {"p": "/versions/r1.6/api_docs/python/tf/nn/atrous_conv2d", "k": [], "r": "r1.6", "t": "tf.nn.atrous_conv2d"}, {"p": "/versions/r1.6/api_docs/python/tf/nn/atrous_conv2d_transpose", "k": [], "r": "r1.6", "t": "tf.nn.atrous_conv2d_transpose"}, {"p": "/versions/r1.6/api_docs/python/tf/nn/avg_pool", "k": [], "r": "r1.6", "t": "tf.nn.avg_pool"}, {"p": "/versions/r1.6/api_docs/python/tf/nn/avg_pool3d", "k": [], "r": "r1.6", "t": "tf.nn.avg_pool3d"}, {"p": "/versions/r1.6/api_docs/python/tf/nn/batch_norm_with_global_normalization", "k": [], "r": "r1.6", "t": "tf.nn.batch_norm_with_global_normalization"}, {"p": "/versions/r1.6/api_docs/python/tf/nn/batch_normalization", "k": [], "r": "r1.6", "t": "tf.nn.batch_normalization"}, {"p": "/versions/r1.6/api_docs/python/tf/nn/bias_add", "k": [], "r": "r1.6", "t": "tf.nn.bias_add"}, {"p": "/versions/r1.6/api_docs/python/tf/nn/bidirectional_dynamic_rnn", "k": [], "r": "r1.6", "t": "tf.nn.bidirectional_dynamic_rnn"}, {"p": "/versions/r1.6/api_docs/python/tf/nn/compute_accidental_hits", "k": [], "r": "r1.6", "t": "tf.nn.compute_accidental_hits"}, {"p": "/versions/r1.6/api_docs/python/tf/nn/conv1d", "k": [], "r": "r1.6", "t": "tf.nn.conv1d"}, {"p": "/versions/r1.6/api_docs/python/tf/nn/conv2d", "k": [], "r": "r1.6", "t": "tf.nn.conv2d"}, {"p": "/versions/r1.6/api_docs/python/tf/nn/conv2d_backprop_filter", "k": [], "r": "r1.6", "t": "tf.nn.conv2d_backprop_filter"}, {"p": "/versions/r1.6/api_docs/python/tf/nn/conv2d_backprop_input", "k": [], "r": "r1.6", "t": "tf.nn.conv2d_backprop_input"}, {"p": "/versions/r1.6/api_docs/python/tf/nn/conv2d_transpose", "k": [], "r": "r1.6", "t": "tf.nn.conv2d_transpose"}, {"p": "/versions/r1.6/api_docs/python/tf/nn/conv3d", "k": [], "r": "r1.6", "t": "tf.nn.conv3d"}, {"p": "/versions/r1.6/api_docs/python/tf/nn/conv3d_backprop_filter_v2", "k": [], "r": "r1.6", "t": "tf.nn.conv3d_backprop_filter_v2"}, {"p": "/versions/r1.6/api_docs/python/tf/nn/conv3d_transpose", "k": [], "r": "r1.6", "t": "tf.nn.conv3d_transpose"}, {"p": "/versions/r1.6/api_docs/python/tf/nn/convolution", "k": [], "r": "r1.6", "t": "tf.nn.convolution"}, {"p": "/versions/r1.6/api_docs/python/tf/nn/crelu", "k": [], "r": "r1.6", "t": "tf.nn.crelu"}, {"p": "/versions/r1.6/api_docs/python/tf/nn/ctc_beam_search_decoder", "k": [], "r": "r1.6", "t": "tf.nn.ctc_beam_search_decoder"}, {"p": "/versions/r1.6/api_docs/python/tf/nn/ctc_greedy_decoder", "k": [], "r": "r1.6", "t": "tf.nn.ctc_greedy_decoder"}, {"p": "/versions/r1.6/api_docs/python/tf/nn/ctc_loss", "k": [], "r": "r1.6", "t": "tf.nn.ctc_loss"}, {"p": "/versions/r1.6/api_docs/python/tf/nn/depthwise_conv2d", "k": [], "r": "r1.6", "t": "tf.nn.depthwise_conv2d"}, {"p": "/versions/r1.6/api_docs/python/tf/nn/depthwise_conv2d_native", "k": [], "r": "r1.6", "t": "tf.nn.depthwise_conv2d_native"}, {"p": "/versions/r1.6/api_docs/python/tf/nn/depthwise_conv2d_native_backprop_filter", "k": [], "r": "r1.6", "t": "tf.nn.depthwise_conv2d_native_backprop_filter"}, {"p": "/versions/r1.6/api_docs/python/tf/nn/depthwise_conv2d_native_backprop_input", "k": [], "r": "r1.6", "t": "tf.nn.depthwise_conv2d_native_backprop_input"}, {"p": "/versions/r1.6/api_docs/python/tf/nn/dilation2d", "k": [], "r": "r1.6", "t": "tf.nn.dilation2d"}, {"p": "/versions/r1.6/api_docs/python/tf/nn/dropout", "k": [], "r": "r1.6", "t": "tf.nn.dropout"}, {"p": "/versions/r1.6/api_docs/python/tf/nn/dynamic_rnn", "k": [], "r": "r1.6", "t": "tf.nn.dynamic_rnn"}, {"p": "/versions/r1.6/api_docs/python/tf/nn/elu", "k": [], "r": "r1.6", "t": "tf.nn.elu"}, {"p": "/versions/r1.6/api_docs/python/tf/nn/embedding_lookup", "k": [], "r": "r1.6", "t": "tf.nn.embedding_lookup"}, {"p": "/versions/r1.6/api_docs/python/tf/nn/embedding_lookup_sparse", "k": [], "r": "r1.6", "t": "tf.nn.embedding_lookup_sparse"}, {"p": "/versions/r1.6/api_docs/python/tf/nn/erosion2d", "k": [], "r": "r1.6", "t": "tf.nn.erosion2d"}, {"p": "/versions/r1.6/api_docs/python/tf/nn/fixed_unigram_candidate_sampler", "k": [], "r": "r1.6", "t": "tf.nn.fixed_unigram_candidate_sampler"}, {"p": "/versions/r1.6/api_docs/python/tf/nn/fractional_avg_pool", "k": [], "r": "r1.6", "t": "tf.nn.fractional_avg_pool"}, {"p": "/versions/r1.6/api_docs/python/tf/nn/fractional_max_pool", "k": [], "r": "r1.6", "t": "tf.nn.fractional_max_pool"}, {"p": "/versions/r1.6/api_docs/python/tf/nn/fused_batch_norm", "k": [], "r": "r1.6", "t": "tf.nn.fused_batch_norm"}, {"p": "/versions/r1.6/api_docs/python/tf/nn/in_top_k", "k": [], "r": "r1.6", "t": "tf.nn.in_top_k"}, {"p": "/versions/r1.6/api_docs/python/tf/nn/l2_loss", "k": [], "r": "r1.6", "t": "tf.nn.l2_loss"}, {"p": "/versions/r1.6/api_docs/python/tf/nn/l2_normalize", "k": [], "r": "r1.6", "t": "tf.nn.l2_normalize"}, {"p": "/versions/r1.6/api_docs/python/tf/nn/leaky_relu", "k": [], "r": "r1.6", "t": "tf.nn.leaky_relu"}, {"p": "/versions/r1.6/api_docs/python/tf/nn/learned_unigram_candidate_sampler", "k": [], "r": "r1.6", "t": "tf.nn.learned_unigram_candidate_sampler"}, {"p": "/versions/r1.6/api_docs/python/tf/nn/local_response_normalization", "k": [], "r": "r1.6", "t": "tf.nn.local_response_normalization"}, {"p": "/versions/r1.6/api_docs/python/tf/nn/log_poisson_loss", "k": [], "r": "r1.6", "t": "tf.nn.log_poisson_loss"}, {"p": "/versions/r1.6/api_docs/python/tf/nn/log_softmax", "k": [], "r": "r1.6", "t": "tf.nn.log_softmax"}, {"p": "/versions/r1.6/api_docs/python/tf/nn/log_uniform_candidate_sampler", "k": [], "r": "r1.6", "t": "tf.nn.log_uniform_candidate_sampler"}, {"p": "/versions/r1.6/api_docs/python/tf/nn/max_pool", "k": [], "r": "r1.6", "t": "tf.nn.max_pool"}, {"p": "/versions/r1.6/api_docs/python/tf/nn/max_pool3d", "k": [], "r": "r1.6", "t": "tf.nn.max_pool3d"}, {"p": "/versions/r1.6/api_docs/python/tf/nn/max_pool_with_argmax", "k": [], "r": "r1.6", "t": "tf.nn.max_pool_with_argmax"}, {"p": "/versions/r1.6/api_docs/python/tf/nn/moments", "k": [], "r": "r1.6", "t": "tf.nn.moments"}, {"p": "/versions/r1.6/api_docs/python/tf/nn/nce_loss", "k": [], "r": "r1.6", "t": "tf.nn.nce_loss"}, {"p": "/versions/r1.6/api_docs/python/tf/nn/normalize_moments", "k": [], "r": "r1.6", "t": "tf.nn.normalize_moments"}, {"p": "/versions/r1.6/api_docs/python/tf/nn/pool", "k": [], "r": "r1.6", "t": "tf.nn.pool"}, {"p": "/versions/r1.6/api_docs/python/tf/nn/quantized_avg_pool", "k": [], "r": "r1.6", "t": "tf.nn.quantized_avg_pool"}, {"p": "/versions/r1.6/api_docs/python/tf/nn/quantized_conv2d", "k": [], "r": "r1.6", "t": "tf.nn.quantized_conv2d"}, {"p": "/versions/r1.6/api_docs/python/tf/nn/quantized_max_pool", "k": [], "r": "r1.6", "t": "tf.nn.quantized_max_pool"}, {"p": "/versions/r1.6/api_docs/python/tf/nn/quantized_relu_x", "k": [], "r": "r1.6", "t": "tf.nn.quantized_relu_x"}, {"p": "/versions/r1.6/api_docs/python/tf/nn/raw_rnn", "k": [], "r": "r1.6", "t": "tf.nn.raw_rnn"}, {"p": "/versions/r1.6/api_docs/python/tf/nn/relu", "k": [], "r": "r1.6", "t": "tf.nn.relu"}, {"p": "/versions/r1.6/api_docs/python/tf/nn/relu6", "k": [], "r": "r1.6", "t": "tf.nn.relu6"}, {"p": "/versions/r1.6/api_docs/python/tf/nn/relu_layer", "k": [], "r": "r1.6", "t": "tf.nn.relu_layer"}, {"p": "/versions/r1.6/api_docs/python/tf/nn/rnn_cell", "k": [], "r": "r1.6", "t": "tf.nn.rnn_cell"}, {"p": "/versions/r1.6/api_docs/python/tf/nn/sampled_softmax_loss", "k": [], "r": "r1.6", "t": "tf.nn.sampled_softmax_loss"}, {"p": "/versions/r1.6/api_docs/python/tf/nn/selu", "k": [], "r": "r1.6", "t": "tf.nn.selu"}, {"p": "/versions/r1.6/api_docs/python/tf/nn/separable_conv2d", "k": [], "r": "r1.6", "t": "tf.nn.separable_conv2d"}, {"p": "/versions/r1.6/api_docs/python/tf/nn/sigmoid_cross_entropy_with_logits", "k": [], "r": "r1.6", "t": "tf.nn.sigmoid_cross_entropy_with_logits"}, {"p": "/versions/r1.6/api_docs/python/tf/nn/softmax", "k": [], "r": "r1.6", "t": "tf.nn.softmax"}, {"p": "/versions/r1.6/api_docs/python/tf/nn/softmax_cross_entropy_with_logits", "k": [], "r": "r1.6", "t": "tf.nn.softmax_cross_entropy_with_logits"}, {"p": "/versions/r1.6/api_docs/python/tf/nn/softmax_cross_entropy_with_logits_v2", "k": [], "r": "r1.6", "t": "tf.nn.softmax_cross_entropy_with_logits_v2"}, {"p": "/versions/r1.6/api_docs/python/tf/nn/softplus", "k": [], "r": "r1.6", "t": "tf.nn.softplus"}, {"p": "/versions/r1.6/api_docs/python/tf/nn/softsign", "k": [], "r": "r1.6", "t": "tf.nn.softsign"}, {"p": "/versions/r1.6/api_docs/python/tf/nn/sparse_softmax_cross_entropy_with_logits", "k": [], "r": "r1.6", "t": "tf.nn.sparse_softmax_cross_entropy_with_logits"}, {"p": "/versions/r1.6/api_docs/python/tf/nn/static_bidirectional_rnn", "k": [], "r": "r1.6", "t": "tf.nn.static_bidirectional_rnn"}, {"p": "/versions/r1.6/api_docs/python/tf/nn/static_rnn", "k": [], "r": "r1.6", "t": "tf.nn.static_rnn"}, {"p": "/versions/r1.6/api_docs/python/tf/nn/static_state_saving_rnn", "k": [], "r": "r1.6", "t": "tf.nn.static_state_saving_rnn"}, {"p": "/versions/r1.6/api_docs/python/tf/nn/sufficient_statistics", "k": [], "r": "r1.6", "t": "tf.nn.sufficient_statistics"}, {"p": "/versions/r1.6/api_docs/python/tf/nn/top_k", "k": [], "r": "r1.6", "t": "tf.nn.top_k"}, {"p": "/versions/r1.6/api_docs/python/tf/nn/uniform_candidate_sampler", "k": [], "r": "r1.6", "t": "tf.nn.uniform_candidate_sampler"}, {"p": "/versions/r1.6/api_docs/python/tf/nn/weighted_cross_entropy_with_logits", "k": [], "r": "r1.6", "t": "tf.nn.weighted_cross_entropy_with_logits"}, {"p": "/versions/r1.6/api_docs/python/tf/nn/weighted_moments", "k": [], "r": "r1.6", "t": "tf.nn.weighted_moments"}, {"p": "/versions/r1.6/api_docs/python/tf/nn/with_space_to_batch", "k": [], "r": "r1.6", "t": "tf.nn.with_space_to_batch"}, {"p": "/versions/r1.6/api_docs/python/tf/nn/xw_plus_b", "k": [], "r": "r1.6", "t": "tf.nn.xw_plus_b"}, {"p": "/versions/r1.6/api_docs/python/tf/nn/zero_fraction", "k": [], "r": "r1.6", "t": "tf.nn.zero_fraction"}, {"p": "/versions/r1.6/api_docs/python/tf/no_op", "k": [], "r": "r1.6", "t": "tf.no_op"}, {"p": "/versions/r1.6/api_docs/python/tf/no_regularizer", "k": [], "r": "r1.6", "t": "tf.no_regularizer"}, {"p": "/versions/r1.6/api_docs/python/tf/norm", "k": [], "r": "r1.6", "t": "tf.norm"}, {"p": "/versions/r1.6/api_docs/python/tf/not_equal", "k": [], "r": "r1.6", "t": "tf.not_equal"}, {"p": "/versions/r1.6/api_docs/python/tf/one_hot", "k": [], "r": "r1.6", "t": "tf.one_hot"}, {"p": "/versions/r1.6/api_docs/python/tf/ones", "k": [], "r": "r1.6", "t": "tf.ones"}, {"p": "/versions/r1.6/api_docs/python/tf/ones_initializer", "k": ["__call__", "__init__", "from_config", "get_config"], "r": "r1.6", "t": "tf.ones_initializer"}, {"p": "/versions/r1.6/api_docs/python/tf/ones_like", "k": [], "r": "r1.6", "t": "tf.ones_like"}, {"p": "/versions/r1.6/api_docs/python/tf/op_scope", "k": [], "r": "r1.6", "t": "tf.op_scope"}, {"p": "/versions/r1.6/api_docs/python/tf/orthogonal_initializer", "k": ["__call__", "__init__", "from_config", "get_config"], "r": "r1.6", "t": "tf.orthogonal_initializer"}, {"p": "/versions/r1.6/api_docs/python/tf/pad", "k": [], "r": "r1.6", "t": "tf.pad"}, {"p": "/versions/r1.6/api_docs/python/tf/parallel_stack", "k": [], "r": "r1.6", "t": "tf.parallel_stack"}, {"p": "/versions/r1.6/api_docs/python/tf/parse_example", "k": [], "r": "r1.6", "t": "tf.parse_example"}, {"p": "/versions/r1.6/api_docs/python/tf/parse_single_example", "k": [], "r": "r1.6", "t": "tf.parse_single_example"}, {"p": "/versions/r1.6/api_docs/python/tf/parse_single_sequence_example", "k": [], "r": "r1.6", "t": "tf.parse_single_sequence_example"}, {"p": "/versions/r1.6/api_docs/python/tf/parse_tensor", "k": [], "r": "r1.6", "t": "tf.parse_tensor"}, {"p": "/versions/r1.6/api_docs/python/tf/placeholder", "k": [], "r": "r1.6", "t": "tf.placeholder"}, {"p": "/versions/r1.6/api_docs/python/tf/placeholder_with_default", "k": [], "r": "r1.6", "t": "tf.placeholder_with_default"}, {"p": "/versions/r1.6/api_docs/python/tf/polygamma", "k": [], "r": "r1.6", "t": "tf.polygamma"}, {"p": "/versions/r1.6/api_docs/python/tf/pow", "k": [], "r": "r1.6", "t": "tf.pow"}, {"p": "/versions/r1.6/api_docs/python/tf/profiler", "k": [], "r": "r1.6", "t": "tf.profiler"}, {"p": "/versions/r1.6/api_docs/python/tf/profiler/AdviceProto", "k": ["Checker", "CheckersEntry"], "r": "r1.6", "t": "tf.profiler.AdviceProto"}, {"p": "/versions/r1.6/api_docs/python/tf/profiler/AdviceProto/Checker", "k": [], "r": "r1.6", "t": "tf.profiler.AdviceProto.Checker"}, {"p": "/versions/r1.6/api_docs/python/tf/profiler/AdviceProto/CheckersEntry", "k": [], "r": "r1.6", "t": "tf.profiler.AdviceProto.CheckersEntry"}, {"p": "/versions/r1.6/api_docs/python/tf/profiler/GraphNodeProto", "k": ["InputShapesEntry"], "r": "r1.6", "t": "tf.profiler.GraphNodeProto"}, {"p": "/versions/r1.6/api_docs/python/tf/profiler/GraphNodeProto/InputShapesEntry", "k": [], "r": "r1.6", "t": "tf.profiler.GraphNodeProto.InputShapesEntry"}, {"p": "/versions/r1.6/api_docs/python/tf/profiler/MultiGraphNodeProto", "k": [], "r": "r1.6", "t": "tf.profiler.MultiGraphNodeProto"}, {"p": "/versions/r1.6/api_docs/python/tf/profiler/OpLogProto", "k": ["IdToStringEntry"], "r": "r1.6", "t": "tf.profiler.OpLogProto"}, {"p": "/versions/r1.6/api_docs/python/tf/profiler/OpLogProto/IdToStringEntry", "k": [], "r": "r1.6", "t": "tf.profiler.OpLogProto.IdToStringEntry"}, {"p": "/versions/r1.6/api_docs/python/tf/profiler/ProfileOptionBuilder", "k": ["__init__", "account_displayed_op_only", "build", "float_operation", "order_by", "select", "time_and_memory", "trainable_variables_parameter", "with_accounted_types", "with_empty_output", "with_file_output", "with_max_depth", "with_min_execution_time", "with_min_float_operations", "with_min_memory", "with_min_occurrence", "with_min_parameters", "with_node_names", "with_pprof_output", "with_stdout_output", "with_step", "with_timeline_output"], "r": "r1.6", "t": "tf.profiler.ProfileOptionBuilder"}, {"p": "/versions/r1.6/api_docs/python/tf/profiler/Profiler", "k": ["__init__", "add_step", "advise", "profile_graph", "profile_name_scope", "profile_operations", "profile_python", "serialize_to_string"], "r": "r1.6", "t": "tf.profiler.Profiler"}, {"p": "/versions/r1.6/api_docs/python/tf/profiler/advise", "k": [], "r": "r1.6", "t": "tf.profiler.advise"}, {"p": "/versions/r1.6/api_docs/python/tf/profiler/profile", "k": [], "r": "r1.6", "t": "tf.profiler.profile"}, {"p": "/versions/r1.6/api_docs/python/tf/profiler/write_op_log", "k": [], "r": "r1.6", "t": "tf.profiler.write_op_log"}, {"p": "/versions/r1.6/api_docs/python/tf/py_func", "k": [], "r": "r1.6", "t": "tf.py_func"}, {"p": "/versions/r1.6/api_docs/python/tf/python_io", "k": [], "r": "r1.6", "t": "tf.python_io"}, {"p": "/versions/r1.6/api_docs/python/tf/python_io/TFRecordCompressionType", "k": ["GZIP", "NONE", "ZLIB"], "r": "r1.6", "t": "tf.python_io.TFRecordCompressionType"}, {"p": "/versions/r1.6/api_docs/python/tf/python_io/TFRecordOptions", "k": ["__init__", "get_compression_type_string", "compression_type_map"], "r": "r1.6", "t": "tf.python_io.TFRecordOptions"}, {"p": "/versions/r1.6/api_docs/python/tf/python_io/TFRecordWriter", "k": ["__enter__", "__exit__", "__init__", "close", "flush", "write"], "r": "r1.6", "t": "tf.python_io.TFRecordWriter"}, {"p": "/versions/r1.6/api_docs/python/tf/python_io/tf_record_iterator", "k": [], "r": "r1.6", "t": "tf.python_io.tf_record_iterator"}, {"p": "/versions/r1.6/api_docs/python/tf/pywrap_tensorflow", "k": [], "r": "r1.6", "t": "tf.pywrap_tensorflow"}, {"p": "/versions/r1.6/api_docs/python/tf/qr", "k": [], "r": "r1.6", "t": "tf.qr"}, {"p": "/versions/r1.6/api_docs/python/tf/quantize", "k": [], "r": "r1.6", "t": "tf.quantize"}, {"p": "/versions/r1.6/api_docs/python/tf/quantize_v2", "k": [], "r": "r1.6", "t": "tf.quantize_v2"}, {"p": "/versions/r1.6/api_docs/python/tf/quantized_concat", "k": [], "r": "r1.6", "t": "tf.quantized_concat"}, {"p": "/versions/r1.6/api_docs/python/tf/random_crop", "k": [], "r": "r1.6", "t": "tf.random_crop"}, {"p": "/versions/r1.6/api_docs/python/tf/random_gamma", "k": [], "r": "r1.6", "t": "tf.random_gamma"}, {"p": "/versions/r1.6/api_docs/python/tf/random_normal", "k": [], "r": "r1.6", "t": "tf.random_normal"}, {"p": "/versions/r1.6/api_docs/python/tf/random_normal_initializer", "k": ["__call__", "__init__", "from_config", "get_config"], "r": "r1.6", "t": "tf.random_normal_initializer"}, {"p": "/versions/r1.6/api_docs/python/tf/random_poisson", "k": [], "r": "r1.6", "t": "tf.random_poisson"}, {"p": "/versions/r1.6/api_docs/python/tf/random_shuffle", "k": [], "r": "r1.6", "t": "tf.random_shuffle"}, {"p": "/versions/r1.6/api_docs/python/tf/random_uniform", "k": [], "r": "r1.6", "t": "tf.random_uniform"}, {"p": "/versions/r1.6/api_docs/python/tf/random_uniform_initializer", "k": ["__call__", "__init__", "from_config", "get_config"], "r": "r1.6", "t": "tf.random_uniform_initializer"}, {"p": "/versions/r1.6/api_docs/python/tf/range", "k": [], "r": "r1.6", "t": "tf.range"}, {"p": "/versions/r1.6/api_docs/python/tf/rank", "k": [], "r": "r1.6", "t": "tf.rank"}, {"p": "/versions/r1.6/api_docs/python/tf/read_file", "k": [], "r": "r1.6", "t": "tf.read_file"}, {"p": "/versions/r1.6/api_docs/python/tf/real", "k": [], "r": "r1.6", "t": "tf.real"}, {"p": "/versions/r1.6/api_docs/python/tf/realdiv", "k": [], "r": "r1.6", "t": "tf.realdiv"}, {"p": "/versions/r1.6/api_docs/python/tf/reciprocal", "k": [], "r": "r1.6", "t": "tf.reciprocal"}, {"p": "/versions/r1.6/api_docs/python/tf/reduce_all", "k": [], "r": "r1.6", "t": "tf.reduce_all"}, {"p": "/versions/r1.6/api_docs/python/tf/reduce_any", "k": [], "r": "r1.6", "t": "tf.reduce_any"}, {"p": "/versions/r1.6/api_docs/python/tf/reduce_join", "k": [], "r": "r1.6", "t": "tf.reduce_join"}, {"p": "/versions/r1.6/api_docs/python/tf/reduce_logsumexp", "k": [], "r": "r1.6", "t": "tf.reduce_logsumexp"}, {"p": "/versions/r1.6/api_docs/python/tf/reduce_max", "k": [], "r": "r1.6", "t": "tf.reduce_max"}, {"p": "/versions/r1.6/api_docs/python/tf/reduce_mean", "k": [], "r": "r1.6", "t": "tf.reduce_mean"}, {"p": "/versions/r1.6/api_docs/python/tf/reduce_min", "k": [], "r": "r1.6", "t": "tf.reduce_min"}, {"p": "/versions/r1.6/api_docs/python/tf/reduce_prod", "k": [], "r": "r1.6", "t": "tf.reduce_prod"}, {"p": "/versions/r1.6/api_docs/python/tf/reduce_sum", "k": [], "r": "r1.6", "t": "tf.reduce_sum"}, {"p": "/versions/r1.6/api_docs/python/tf/register_tensor_conversion_function", "k": [], "r": "r1.6", "t": "tf.register_tensor_conversion_function"}, {"p": "/versions/r1.6/api_docs/python/tf/report_uninitialized_variables", "k": [], "r": "r1.6", "t": "tf.report_uninitialized_variables"}, {"p": "/versions/r1.6/api_docs/python/tf/required_space_to_batch_paddings", "k": [], "r": "r1.6", "t": "tf.required_space_to_batch_paddings"}, {"p": "/versions/r1.6/api_docs/python/tf/reset_default_graph", "k": [], "r": "r1.6", "t": "tf.reset_default_graph"}, {"p": "/versions/r1.6/api_docs/python/tf/reshape", "k": [], "r": "r1.6", "t": "tf.reshape"}, {"p": "/versions/r1.6/api_docs/python/tf/resource_loader", "k": [], "r": "r1.6", "t": "tf.resource_loader"}, {"p": "/versions/r1.6/api_docs/python/tf/resource_loader/get_data_files_path", "k": [], "r": "r1.6", "t": "tf.resource_loader.get_data_files_path"}, {"p": "/versions/r1.6/api_docs/python/tf/resource_loader/get_path_to_datafile", "k": [], "r": "r1.6", "t": "tf.resource_loader.get_path_to_datafile"}, {"p": "/versions/r1.6/api_docs/python/tf/resource_loader/get_root_dir_with_all_resources", "k": [], "r": "r1.6", "t": "tf.resource_loader.get_root_dir_with_all_resources"}, {"p": "/versions/r1.6/api_docs/python/tf/resource_loader/load_resource", "k": [], "r": "r1.6", "t": "tf.resource_loader.load_resource"}, {"p": "/versions/r1.6/api_docs/python/tf/resource_loader/readahead_file_path", "k": [], "r": "r1.6", "t": "tf.resource_loader.readahead_file_path"}, {"p": "/versions/r1.6/api_docs/python/tf/reverse", "k": [], "r": "r1.6", "t": "tf.reverse"}, {"p": "/versions/r1.6/api_docs/python/tf/reverse_sequence", "k": [], "r": "r1.6", "t": "tf.reverse_sequence"}, {"p": "/versions/r1.6/api_docs/python/tf/reverse_v2", "k": [], "r": "r1.6", "t": "tf.reverse_v2"}, {"p": "/versions/r1.6/api_docs/python/tf/rint", "k": [], "r": "r1.6", "t": "tf.rint"}, {"p": "/versions/r1.6/api_docs/python/tf/round", "k": [], "r": "r1.6", "t": "tf.round"}, {"p": "/versions/r1.6/api_docs/python/tf/rsqrt", "k": [], "r": "r1.6", "t": "tf.rsqrt"}, {"p": "/versions/r1.6/api_docs/python/tf/saturate_cast", "k": [], "r": "r1.6", "t": "tf.saturate_cast"}, {"p": "/versions/r1.6/api_docs/python/tf/saved_model", "k": [], "r": "r1.6", "t": "tf.saved_model"}, {"p": "/versions/r1.6/api_docs/python/tf/saved_model/builder", "k": [], "r": "r1.6", "t": "tf.saved_model.builder"}, {"p": "/versions/r1.6/api_docs/python/tf/saved_model/builder/SavedModelBuilder", "k": ["__init__", "add_meta_graph", "add_meta_graph_and_variables", "save"], "r": "r1.6", "t": "tf.saved_model.builder.SavedModelBuilder"}, {"p": "/versions/r1.6/api_docs/python/tf/saved_model/constants", "k": ["ASSETS_DIRECTORY", "ASSETS_KEY", "LEGACY_INIT_OP_KEY", "MAIN_OP_KEY", "SAVED_MODEL_FILENAME_PB", "SAVED_MODEL_FILENAME_PBTXT", "SAVED_MODEL_SCHEMA_VERSION", "VARIABLES_DIRECTORY", "VARIABLES_FILENAME"], "r": "r1.6", "t": "tf.saved_model.constants"}, {"p": "/versions/r1.6/api_docs/python/tf/saved_model/loader", "k": [], "r": "r1.6", "t": "tf.saved_model.loader"}, {"p": "/versions/r1.6/api_docs/python/tf/saved_model/loader/load", "k": [], "r": "r1.6", "t": "tf.saved_model.loader.load"}, {"p": "/versions/r1.6/api_docs/python/tf/saved_model/loader/maybe_saved_model_directory", "k": [], "r": "r1.6", "t": "tf.saved_model.loader.maybe_saved_model_directory"}, {"p": "/versions/r1.6/api_docs/python/tf/saved_model/main_op", "k": [], "r": "r1.6", "t": "tf.saved_model.main_op"}, {"p": "/versions/r1.6/api_docs/python/tf/saved_model/main_op/main_op", "k": [], "r": "r1.6", "t": "tf.saved_model.main_op.main_op"}, {"p": "/versions/r1.6/api_docs/python/tf/saved_model/main_op/main_op_with_restore", "k": [], "r": "r1.6", "t": "tf.saved_model.main_op.main_op_with_restore"}, {"p": "/versions/r1.6/api_docs/python/tf/saved_model/signature_constants", "k": ["CLASSIFY_INPUTS", "CLASSIFY_METHOD_NAME", "CLASSIFY_OUTPUT_CLASSES", "CLASSIFY_OUTPUT_SCORES", "DEFAULT_SERVING_SIGNATURE_DEF_KEY", "PREDICT_INPUTS", "PREDICT_METHOD_NAME", "PREDICT_OUTPUTS", "REGRESS_INPUTS", "REGRESS_METHOD_NAME", "REGRESS_OUTPUTS"], "r": "r1.6", "t": "tf.saved_model.signature_constants"}, {"p": "/versions/r1.6/api_docs/python/tf/saved_model/signature_def_utils", "k": [], "r": "r1.6", "t": "tf.saved_model.signature_def_utils"}, {"p": "/versions/r1.6/api_docs/python/tf/saved_model/signature_def_utils/build_signature_def", "k": [], "r": "r1.6", "t": "tf.saved_model.signature_def_utils.build_signature_def"}, {"p": "/versions/r1.6/api_docs/python/tf/saved_model/signature_def_utils/classification_signature_def", "k": [], "r": "r1.6", "t": "tf.saved_model.signature_def_utils.classification_signature_def"}, {"p": "/versions/r1.6/api_docs/python/tf/saved_model/signature_def_utils/is_valid_signature", "k": [], "r": "r1.6", "t": "tf.saved_model.signature_def_utils.is_valid_signature"}, {"p": "/versions/r1.6/api_docs/python/tf/saved_model/signature_def_utils/predict_signature_def", "k": [], "r": "r1.6", "t": "tf.saved_model.signature_def_utils.predict_signature_def"}, {"p": "/versions/r1.6/api_docs/python/tf/saved_model/signature_def_utils/regression_signature_def", "k": [], "r": "r1.6", "t": "tf.saved_model.signature_def_utils.regression_signature_def"}, {"p": "/versions/r1.6/api_docs/python/tf/saved_model/simple_save", "k": [], "r": "r1.6", "t": "tf.saved_model.simple_save"}, {"p": "/versions/r1.6/api_docs/python/tf/saved_model/tag_constants", "k": ["GPU", "SERVING", "TPU", "TRAINING"], "r": "r1.6", "t": "tf.saved_model.tag_constants"}, {"p": "/versions/r1.6/api_docs/python/tf/saved_model/utils", "k": [], "r": "r1.6", "t": "tf.saved_model.utils"}, {"p": "/versions/r1.6/api_docs/python/tf/saved_model/utils/build_tensor_info", "k": [], "r": "r1.6", "t": "tf.saved_model.utils.build_tensor_info"}, {"p": "/versions/r1.6/api_docs/python/tf/saved_model/utils/get_tensor_from_tensor_info", "k": [], "r": "r1.6", "t": "tf.saved_model.utils.get_tensor_from_tensor_info"}, {"p": "/versions/r1.6/api_docs/python/tf/scalar_mul", "k": [], "r": "r1.6", "t": "tf.scalar_mul"}, {"p": "/versions/r1.6/api_docs/python/tf/scan", "k": [], "r": "r1.6", "t": "tf.scan"}, {"p": "/versions/r1.6/api_docs/python/tf/scatter_add", "k": [], "r": "r1.6", "t": "tf.scatter_add"}, {"p": "/versions/r1.6/api_docs/python/tf/scatter_div", "k": [], "r": "r1.6", "t": "tf.scatter_div"}, {"p": "/versions/r1.6/api_docs/python/tf/scatter_mul", "k": [], "r": "r1.6", "t": "tf.scatter_mul"}, {"p": "/versions/r1.6/api_docs/python/tf/scatter_nd", "k": [], "r": "r1.6", "t": "tf.scatter_nd"}, {"p": "/versions/r1.6/api_docs/python/tf/scatter_nd_add", "k": [], "r": "r1.6", "t": "tf.scatter_nd_add"}, {"p": "/versions/r1.6/api_docs/python/tf/scatter_nd_sub", "k": [], "r": "r1.6", "t": "tf.scatter_nd_sub"}, {"p": "/versions/r1.6/api_docs/python/tf/scatter_nd_update", "k": [], "r": "r1.6", "t": "tf.scatter_nd_update"}, {"p": "/versions/r1.6/api_docs/python/tf/scatter_sub", "k": [], "r": "r1.6", "t": "tf.scatter_sub"}, {"p": "/versions/r1.6/api_docs/python/tf/scatter_update", "k": [], "r": "r1.6", "t": "tf.scatter_update"}, {"p": "/versions/r1.6/api_docs/python/tf/segment_max", "k": [], "r": "r1.6", "t": "tf.segment_max"}, {"p": "/versions/r1.6/api_docs/python/tf/segment_mean", "k": [], "r": "r1.6", "t": "tf.segment_mean"}, {"p": "/versions/r1.6/api_docs/python/tf/segment_min", "k": [], "r": "r1.6", "t": "tf.segment_min"}, {"p": "/versions/r1.6/api_docs/python/tf/segment_prod", "k": [], "r": "r1.6", "t": "tf.segment_prod"}, {"p": "/versions/r1.6/api_docs/python/tf/segment_sum", "k": [], "r": "r1.6", "t": "tf.segment_sum"}, {"p": "/versions/r1.6/api_docs/python/tf/self_adjoint_eig", "k": [], "r": "r1.6", "t": "tf.self_adjoint_eig"}, {"p": "/versions/r1.6/api_docs/python/tf/self_adjoint_eigvals", "k": [], "r": "r1.6", "t": "tf.self_adjoint_eigvals"}, {"p": "/versions/r1.6/api_docs/python/tf/sequence_mask", "k": [], "r": "r1.6", "t": "tf.sequence_mask"}, {"p": "/versions/r1.6/api_docs/python/tf/serialize_many_sparse", "k": [], "r": "r1.6", "t": "tf.serialize_many_sparse"}, {"p": "/versions/r1.6/api_docs/python/tf/serialize_sparse", "k": [], "r": "r1.6", "t": "tf.serialize_sparse"}, {"p": "/versions/r1.6/api_docs/python/tf/serialize_tensor", "k": [], "r": "r1.6", "t": "tf.serialize_tensor"}, {"p": "/versions/r1.6/api_docs/python/tf/set_random_seed", "k": [], "r": "r1.6", "t": "tf.set_random_seed"}, {"p": "/versions/r1.6/api_docs/python/tf/setdiff1d", "k": [], "r": "r1.6", "t": "tf.setdiff1d"}, {"p": "/versions/r1.6/api_docs/python/tf/sets", "k": [], "r": "r1.6", "t": "tf.sets"}, {"p": "/versions/r1.6/api_docs/python/tf/sets/set_difference", "k": [], "r": "r1.6", "t": "tf.sets.set_difference"}, {"p": "/versions/r1.6/api_docs/python/tf/sets/set_intersection", "k": [], "r": "r1.6", "t": "tf.sets.set_intersection"}, {"p": "/versions/r1.6/api_docs/python/tf/sets/set_size", "k": [], "r": "r1.6", "t": "tf.sets.set_size"}, {"p": "/versions/r1.6/api_docs/python/tf/sets/set_union", "k": [], "r": "r1.6", "t": "tf.sets.set_union"}, {"p": "/versions/r1.6/api_docs/python/tf/shape", "k": [], "r": "r1.6", "t": "tf.shape"}, {"p": "/versions/r1.6/api_docs/python/tf/shape_n", "k": [], "r": "r1.6", "t": "tf.shape_n"}, {"p": "/versions/r1.6/api_docs/python/tf/sigmoid", "k": [], "r": "r1.6", "t": "tf.sigmoid"}, {"p": "/versions/r1.6/api_docs/python/tf/sign", "k": [], "r": "r1.6", "t": "tf.sign"}, {"p": "/versions/r1.6/api_docs/python/tf/sin", "k": [], "r": "r1.6", "t": "tf.sin"}, {"p": "/versions/r1.6/api_docs/python/tf/sinh", "k": [], "r": "r1.6", "t": "tf.sinh"}, {"p": "/versions/r1.6/api_docs/python/tf/size", "k": [], "r": "r1.6", "t": "tf.size"}, {"p": "/versions/r1.6/api_docs/python/tf/slice", "k": [], "r": "r1.6", "t": "tf.slice"}, {"p": "/versions/r1.6/api_docs/python/tf/space_to_batch", "k": [], "r": "r1.6", "t": "tf.space_to_batch"}, {"p": "/versions/r1.6/api_docs/python/tf/space_to_batch_nd", "k": [], "r": "r1.6", "t": "tf.space_to_batch_nd"}, {"p": "/versions/r1.6/api_docs/python/tf/space_to_depth", "k": [], "r": "r1.6", "t": "tf.space_to_depth"}, {"p": "/versions/r1.6/api_docs/python/tf/sparse_add", "k": [], "r": "r1.6", "t": "tf.sparse_add"}, {"p": "/versions/r1.6/api_docs/python/tf/sparse_concat", "k": [], "r": "r1.6", "t": "tf.sparse_concat"}, {"p": "/versions/r1.6/api_docs/python/tf/sparse_fill_empty_rows", "k": [], "r": "r1.6", "t": "tf.sparse_fill_empty_rows"}, {"p": "/versions/r1.6/api_docs/python/tf/sparse_mask", "k": [], "r": "r1.6", "t": "tf.sparse_mask"}, {"p": "/versions/r1.6/api_docs/python/tf/sparse_matmul", "k": [], "r": "r1.6", "t": "tf.sparse_matmul"}, {"p": "/versions/r1.6/api_docs/python/tf/sparse_maximum", "k": [], "r": "r1.6", "t": "tf.sparse_maximum"}, {"p": "/versions/r1.6/api_docs/python/tf/sparse_merge", "k": [], "r": "r1.6", "t": "tf.sparse_merge"}, {"p": "/versions/r1.6/api_docs/python/tf/sparse_minimum", "k": [], "r": "r1.6", "t": "tf.sparse_minimum"}, {"p": "/versions/r1.6/api_docs/python/tf/sparse_placeholder", "k": [], "r": "r1.6", "t": "tf.sparse_placeholder"}, {"p": "/versions/r1.6/api_docs/python/tf/sparse_reduce_max", "k": [], "r": "r1.6", "t": "tf.sparse_reduce_max"}, {"p": "/versions/r1.6/api_docs/python/tf/sparse_reduce_max_sparse", "k": [], "r": "r1.6", "t": "tf.sparse_reduce_max_sparse"}, {"p": "/versions/r1.6/api_docs/python/tf/sparse_reduce_sum", "k": [], "r": "r1.6", "t": "tf.sparse_reduce_sum"}, {"p": "/versions/r1.6/api_docs/python/tf/sparse_reduce_sum_sparse", "k": [], "r": "r1.6", "t": "tf.sparse_reduce_sum_sparse"}, {"p": "/versions/r1.6/api_docs/python/tf/sparse_reorder", "k": [], "r": "r1.6", "t": "tf.sparse_reorder"}, {"p": "/versions/r1.6/api_docs/python/tf/sparse_reset_shape", "k": [], "r": "r1.6", "t": "tf.sparse_reset_shape"}, {"p": "/versions/r1.6/api_docs/python/tf/sparse_reshape", "k": [], "r": "r1.6", "t": "tf.sparse_reshape"}, {"p": "/versions/r1.6/api_docs/python/tf/sparse_retain", "k": [], "r": "r1.6", "t": "tf.sparse_retain"}, {"p": "/versions/r1.6/api_docs/python/tf/sparse_segment_mean", "k": [], "r": "r1.6", "t": "tf.sparse_segment_mean"}, {"p": "/versions/r1.6/api_docs/python/tf/sparse_segment_sqrt_n", "k": [], "r": "r1.6", "t": "tf.sparse_segment_sqrt_n"}, {"p": "/versions/r1.6/api_docs/python/tf/sparse_segment_sum", "k": [], "r": "r1.6", "t": "tf.sparse_segment_sum"}, {"p": "/versions/r1.6/api_docs/python/tf/sparse_slice", "k": [], "r": "r1.6", "t": "tf.sparse_slice"}, {"p": "/versions/r1.6/api_docs/python/tf/sparse_softmax", "k": [], "r": "r1.6", "t": "tf.sparse_softmax"}, {"p": "/versions/r1.6/api_docs/python/tf/sparse_split", "k": [], "r": "r1.6", "t": "tf.sparse_split"}, {"p": "/versions/r1.6/api_docs/python/tf/sparse_tensor_dense_matmul", "k": [], "r": "r1.6", "t": "tf.sparse_tensor_dense_matmul"}, {"p": "/versions/r1.6/api_docs/python/tf/sparse_tensor_to_dense", "k": [], "r": "r1.6", "t": "tf.sparse_tensor_to_dense"}, {"p": "/versions/r1.6/api_docs/python/tf/sparse_to_dense", "k": [], "r": "r1.6", "t": "tf.sparse_to_dense"}, {"p": "/versions/r1.6/api_docs/python/tf/sparse_to_indicator", "k": [], "r": "r1.6", "t": "tf.sparse_to_indicator"}, {"p": "/versions/r1.6/api_docs/python/tf/sparse_transpose", "k": [], "r": "r1.6", "t": "tf.sparse_transpose"}, {"p": "/versions/r1.6/api_docs/python/tf/spectral", "k": [], "r": "r1.6", "t": "tf.spectral"}, {"p": "/versions/r1.6/api_docs/python/tf/spectral/dct", "k": [], "r": "r1.6", "t": "tf.spectral.dct"}, {"p": "/versions/r1.6/api_docs/python/tf/spectral/irfft", "k": [], "r": "r1.6", "t": "tf.spectral.irfft"}, {"p": "/versions/r1.6/api_docs/python/tf/spectral/irfft2d", "k": [], "r": "r1.6", "t": "tf.spectral.irfft2d"}, {"p": "/versions/r1.6/api_docs/python/tf/spectral/irfft3d", "k": [], "r": "r1.6", "t": "tf.spectral.irfft3d"}, {"p": "/versions/r1.6/api_docs/python/tf/spectral/rfft", "k": [], "r": "r1.6", "t": "tf.spectral.rfft"}, {"p": "/versions/r1.6/api_docs/python/tf/spectral/rfft2d", "k": [], "r": "r1.6", "t": "tf.spectral.rfft2d"}, {"p": "/versions/r1.6/api_docs/python/tf/spectral/rfft3d", "k": [], "r": "r1.6", "t": "tf.spectral.rfft3d"}, {"p": "/versions/r1.6/api_docs/python/tf/split", "k": [], "r": "r1.6", "t": "tf.split"}, {"p": "/versions/r1.6/api_docs/python/tf/sqrt", "k": [], "r": "r1.6", "t": "tf.sqrt"}, {"p": "/versions/r1.6/api_docs/python/tf/square", "k": [], "r": "r1.6", "t": "tf.square"}, {"p": "/versions/r1.6/api_docs/python/tf/squared_difference", "k": [], "r": "r1.6", "t": "tf.squared_difference"}, {"p": "/versions/r1.6/api_docs/python/tf/squeeze", "k": [], "r": "r1.6", "t": "tf.squeeze"}, {"p": "/versions/r1.6/api_docs/python/tf/stack", "k": [], "r": "r1.6", "t": "tf.stack"}, {"p": "/versions/r1.6/api_docs/python/tf/stop_gradient", "k": [], "r": "r1.6", "t": "tf.stop_gradient"}, {"p": "/versions/r1.6/api_docs/python/tf/strided_slice", "k": [], "r": "r1.6", "t": "tf.strided_slice"}, {"p": "/versions/r1.6/api_docs/python/tf/string_join", "k": [], "r": "r1.6", "t": "tf.string_join"}, {"p": "/versions/r1.6/api_docs/python/tf/string_split", "k": [], "r": "r1.6", "t": "tf.string_split"}, {"p": "/versions/r1.6/api_docs/python/tf/string_to_hash_bucket", "k": [], "r": "r1.6", "t": "tf.string_to_hash_bucket"}, {"p": "/versions/r1.6/api_docs/python/tf/string_to_hash_bucket_fast", "k": [], "r": "r1.6", "t": "tf.string_to_hash_bucket_fast"}, {"p": "/versions/r1.6/api_docs/python/tf/string_to_hash_bucket_strong", "k": [], "r": "r1.6", "t": "tf.string_to_hash_bucket_strong"}, {"p": "/versions/r1.6/api_docs/python/tf/string_to_number", "k": [], "r": "r1.6", "t": "tf.string_to_number"}, {"p": "/versions/r1.6/api_docs/python/tf/substr", "k": [], "r": "r1.6", "t": "tf.substr"}, {"p": "/versions/r1.6/api_docs/python/tf/subtract", "k": [], "r": "r1.6", "t": "tf.subtract"}, {"p": "/versions/r1.6/api_docs/python/tf/summary", "k": [], "r": "r1.6", "t": "tf.summary"}, {"p": "/versions/r1.6/api_docs/python/tf/summary/FileWriter", "k": ["__enter__", "__exit__", "__init__", "add_event", "add_graph", "add_meta_graph", "add_run_metadata", "add_session_log", "add_summary", "close", "flush", "get_logdir", "reopen"], "r": "r1.6", "t": "tf.summary.FileWriter"}, {"p": "/versions/r1.6/api_docs/python/tf/summary/FileWriterCache", "k": ["clear", "get"], "r": "r1.6", "t": "tf.summary.FileWriterCache"}, {"p": "/versions/r1.6/api_docs/python/tf/summary/SummaryDescription", "k": [], "r": "r1.6", "t": "tf.summary.SummaryDescription"}, {"p": "/versions/r1.6/api_docs/python/tf/summary/TaggedRunMetadata", "k": [], "r": "r1.6", "t": "tf.summary.TaggedRunMetadata"}, {"p": "/versions/r1.6/api_docs/python/tf/summary/audio", "k": [], "r": "r1.6", "t": "tf.summary.audio"}, {"p": "/versions/r1.6/api_docs/python/tf/summary/get_summary_description", "k": [], "r": "r1.6", "t": "tf.summary.get_summary_description"}, {"p": "/versions/r1.6/api_docs/python/tf/summary/histogram", "k": [], "r": "r1.6", "t": "tf.summary.histogram"}, {"p": "/versions/r1.6/api_docs/python/tf/summary/image", "k": [], "r": "r1.6", "t": "tf.summary.image"}, {"p": "/versions/r1.6/api_docs/python/tf/summary/merge", "k": [], "r": "r1.6", "t": "tf.summary.merge"}, {"p": "/versions/r1.6/api_docs/python/tf/summary/merge_all", "k": [], "r": "r1.6", "t": "tf.summary.merge_all"}, {"p": "/versions/r1.6/api_docs/python/tf/summary/scalar", "k": [], "r": "r1.6", "t": "tf.summary.scalar"}, {"p": "/versions/r1.6/api_docs/python/tf/summary/tensor_summary", "k": [], "r": "r1.6", "t": "tf.summary.tensor_summary"}, {"p": "/versions/r1.6/api_docs/python/tf/summary/text", "k": [], "r": "r1.6", "t": "tf.summary.text"}, {"p": "/versions/r1.6/api_docs/python/tf/svd", "k": [], "r": "r1.6", "t": "tf.svd"}, {"p": "/versions/r1.6/api_docs/python/tf/sysconfig", "k": [], "r": "r1.6", "t": "tf.sysconfig"}, {"p": "/versions/r1.6/api_docs/python/tf/sysconfig/get_compile_flags", "k": [], "r": "r1.6", "t": "tf.sysconfig.get_compile_flags"}, {"p": "/versions/r1.6/api_docs/python/tf/sysconfig/get_include", "k": [], "r": "r1.6", "t": "tf.sysconfig.get_include"}, {"p": "/versions/r1.6/api_docs/python/tf/sysconfig/get_lib", "k": [], "r": "r1.6", "t": "tf.sysconfig.get_lib"}, {"p": "/versions/r1.6/api_docs/python/tf/sysconfig/get_link_flags", "k": [], "r": "r1.6", "t": "tf.sysconfig.get_link_flags"}, {"p": "/versions/r1.6/api_docs/python/tf/tables_initializer", "k": [], "r": "r1.6", "t": "tf.tables_initializer"}, {"p": "/versions/r1.6/api_docs/python/tf/tan", "k": [], "r": "r1.6", "t": "tf.tan"}, {"p": "/versions/r1.6/api_docs/python/tf/tanh", "k": [], "r": "r1.6", "t": "tf.tanh"}, {"p": "/versions/r1.6/api_docs/python/tf/tensordot", "k": [], "r": "r1.6", "t": "tf.tensordot"}, {"p": "/versions/r1.6/api_docs/python/tf/test", "k": [], "r": "r1.6", "t": "tf.test"}, {"p": "/versions/r1.6/api_docs/python/tf/test/Benchmark", "k": ["is_abstract", "report_benchmark", "run_op_benchmark"], "r": "r1.6", "t": "tf.test.Benchmark"}, {"p": "/versions/r1.6/api_docs/python/tf/test/StubOutForTesting", "k": ["CleanUp", "Set", "SmartSet", "SmartUnsetAll", "UnsetAll", "__del__", "__enter__", "__exit__", "__init__"], "r": "r1.6", "t": "tf.test.StubOutForTesting"}, {"p": "/versions/r1.6/api_docs/python/tf/test/TestCase", "k": ["failureException", "__call__", "__eq__", "__init__", "__ne__", "addCleanup", "addTypeEqualityFunc", "assertAllClose", "assertAllCloseAccordingToType", "assertAllEqual", "assertAlmostEqual", "assertAlmostEquals", "assertArrayNear", "assertDeviceEqual", "assertDictContainsSubset", "assertDictEqual", "assertEqual", "assertEquals", "assertFalse", "assertGreater", "assertGreaterEqual", "assertIn", "assertIs", "assertIsInstance", "assertIsNone", "assertIsNot", "assertIsNotNone", "assertItemsEqual", "assertLess", "assertLessEqual", "assertListEqual", "assertMultiLineEqual", "assertNDArrayNear", "assertNear", "assertNotAlmostEqual", "assertNotAlmostEquals", "assertNotEqual", "assertNotEquals", "assertNotIn", "assertNotIsInstance", "assertNotRegexpMatches", "assertProtoEquals", "assertProtoEqualsVersion", "assertRaises", "assertRaisesOpError", "assertRaisesRegexp", "assertRaisesWithPredicateMatch", "assertRegexpMatches", "assertSequenceEqual", "assertSetEqual", "assertShapeEqual", "assertStartsWith", "assertTrue", "assertTupleEqual", "assert_", "checkedThread", "countTestCases", "debug", "defaultTestResult", "doCleanups", "evaluate", "fail", "failIf", "failIfAlmostEqual", "failIfEqual", "failUnless", "failUnlessAlmostEqual", "failUnlessEqual", "failUnlessRaises", "get_temp_dir", "id", "run", "setUp", "setUpClass", "shortDescription", "skipTest", "tearDown", "tearDownClass", "test_session", "longMessage", "maxDiff"], "r": "r1.6", "t": "tf.test.TestCase"}, {"p": "/versions/r1.6/api_docs/python/tf/test/TestCase/failureException", "k": [], "r": "r1.6", "t": "tf.test.TestCase.failureException"}, {"p": "/versions/r1.6/api_docs/python/tf/test/assert_equal_graph_def", "k": [], "r": "r1.6", "t": "tf.test.assert_equal_graph_def"}, {"p": "/versions/r1.6/api_docs/python/tf/test/compute_gradient", "k": [], "r": "r1.6", "t": "tf.test.compute_gradient"}, {"p": "/versions/r1.6/api_docs/python/tf/test/compute_gradient_error", "k": [], "r": "r1.6", "t": "tf.test.compute_gradient_error"}, {"p": "/versions/r1.6/api_docs/python/tf/test/create_local_cluster", "k": [], "r": "r1.6", "t": "tf.test.create_local_cluster"}, {"p": "/versions/r1.6/api_docs/python/tf/test/get_temp_dir", "k": [], "r": "r1.6", "t": "tf.test.get_temp_dir"}, {"p": "/versions/r1.6/api_docs/python/tf/test/gpu_device_name", "k": [], "r": "r1.6", "t": "tf.test.gpu_device_name"}, {"p": "/versions/r1.6/api_docs/python/tf/test/is_built_with_cuda", "k": [], "r": "r1.6", "t": "tf.test.is_built_with_cuda"}, {"p": "/versions/r1.6/api_docs/python/tf/test/is_gpu_available", "k": [], "r": "r1.6", "t": "tf.test.is_gpu_available"}, {"p": "/versions/r1.6/api_docs/python/tf/test/main", "k": [], "r": "r1.6", "t": "tf.test.main"}, {"p": "/versions/r1.6/api_docs/python/tf/test/test_src_dir_path", "k": [], "r": "r1.6", "t": "tf.test.test_src_dir_path"}, {"p": "/versions/r1.6/api_docs/python/tf/tile", "k": [], "r": "r1.6", "t": "tf.tile"}, {"p": "/versions/r1.6/api_docs/python/tf/to_bfloat16", "k": [], "r": "r1.6", "t": "tf.to_bfloat16"}, {"p": "/versions/r1.6/api_docs/python/tf/to_double", "k": [], "r": "r1.6", "t": "tf.to_double"}, {"p": "/versions/r1.6/api_docs/python/tf/to_float", "k": [], "r": "r1.6", "t": "tf.to_float"}, {"p": "/versions/r1.6/api_docs/python/tf/to_int32", "k": [], "r": "r1.6", "t": "tf.to_int32"}, {"p": "/versions/r1.6/api_docs/python/tf/to_int64", "k": [], "r": "r1.6", "t": "tf.to_int64"}, {"p": "/versions/r1.6/api_docs/python/tf/tools", "k": [], "r": "r1.6", "t": "tf.tools"}, {"p": "/versions/r1.6/api_docs/python/tf/trace", "k": [], "r": "r1.6", "t": "tf.trace"}, {"p": "/versions/r1.6/api_docs/python/tf/train", "k": [], "r": "r1.6", "t": "tf.train"}, {"p": "/versions/r1.6/api_docs/python/tf/train/AdadeltaOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.6", "t": "tf.train.AdadeltaOptimizer"}, {"p": "/versions/r1.6/api_docs/python/tf/train/AdagradDAOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.6", "t": "tf.train.AdagradDAOptimizer"}, {"p": "/versions/r1.6/api_docs/python/tf/train/AdagradOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.6", "t": "tf.train.AdagradOptimizer"}, {"p": "/versions/r1.6/api_docs/python/tf/train/AdamOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.6", "t": "tf.train.AdamOptimizer"}, {"p": "/versions/r1.6/api_docs/python/tf/train/BytesList", "k": [], "r": "r1.6", "t": "tf.train.BytesList"}, {"p": "/versions/r1.6/api_docs/python/tf/train/CheckpointSaverHook", "k": ["__init__", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "r1.6", "t": "tf.train.CheckpointSaverHook"}, {"p": "/versions/r1.6/api_docs/python/tf/train/CheckpointSaverListener", "k": ["after_save", "before_save", "begin", "end"], "r": "r1.6", "t": "tf.train.CheckpointSaverListener"}, {"p": "/versions/r1.6/api_docs/python/tf/train/ChiefSessionCreator", "k": ["__init__", "create_session"], "r": "r1.6", "t": "tf.train.ChiefSessionCreator"}, {"p": "/versions/r1.6/api_docs/python/tf/train/ClusterDef", "k": [], "r": "r1.6", "t": "tf.train.ClusterDef"}, {"p": "/versions/r1.6/api_docs/python/tf/train/ClusterSpec", "k": ["jobs", "__bool__", "__eq__", "__init__", "__ne__", "__nonzero__", "as_cluster_def", "as_dict", "job_tasks", "num_tasks", "task_address", "task_indices"], "r": "r1.6", "t": "tf.train.ClusterSpec"}, {"p": "/versions/r1.6/api_docs/python/tf/train/Coordinator", "k": ["joined", "__init__", "clear_stop", "join", "raise_requested_exception", "register_thread", "request_stop", "should_stop", "stop_on_exception", "wait_for_stop"], "r": "r1.6", "t": "tf.train.Coordinator"}, {"p": "/versions/r1.6/api_docs/python/tf/train/Example", "k": [], "r": "r1.6", "t": "tf.train.Example"}, {"p": "/versions/r1.6/api_docs/python/tf/train/ExponentialMovingAverage", "k": ["__init__", "apply", "average", "average_name", "variables_to_restore"], "r": "r1.6", "t": "tf.train.ExponentialMovingAverage"}, {"p": "/versions/r1.6/api_docs/python/tf/train/Feature", "k": [], "r": "r1.6", "t": "tf.train.Feature"}, {"p": "/versions/r1.6/api_docs/python/tf/train/FeatureList", "k": [], "r": "r1.6", "t": "tf.train.FeatureList"}, {"p": "/versions/r1.6/api_docs/python/tf/train/FeatureLists", "k": ["FeatureListEntry"], "r": "r1.6", "t": "tf.train.FeatureLists"}, {"p": "/versions/r1.6/api_docs/python/tf/train/FeatureLists/FeatureListEntry", "k": [], "r": "r1.6", "t": "tf.train.FeatureLists.FeatureListEntry"}, {"p": "/versions/r1.6/api_docs/python/tf/train/Features", "k": ["FeatureEntry"], "r": "r1.6", "t": "tf.train.Features"}, {"p": "/versions/r1.6/api_docs/python/tf/train/Features/FeatureEntry", "k": [], "r": "r1.6", "t": "tf.train.Features.FeatureEntry"}, {"p": "/versions/r1.6/api_docs/python/tf/train/FeedFnHook", "k": ["__init__", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "r1.6", "t": "tf.train.FeedFnHook"}, {"p": "/versions/r1.6/api_docs/python/tf/train/FinalOpsHook", "k": ["final_ops_values", "__init__", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "r1.6", "t": "tf.train.FinalOpsHook"}, {"p": "/versions/r1.6/api_docs/python/tf/train/FloatList", "k": [], "r": "r1.6", "t": "tf.train.FloatList"}, {"p": "/versions/r1.6/api_docs/python/tf/train/FtrlOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.6", "t": "tf.train.FtrlOptimizer"}, {"p": "/versions/r1.6/api_docs/python/tf/train/GlobalStepWaiterHook", "k": ["__init__", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "r1.6", "t": "tf.train.GlobalStepWaiterHook"}, {"p": "/versions/r1.6/api_docs/python/tf/train/GradientDescentOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.6", "t": "tf.train.GradientDescentOptimizer"}, {"p": "/versions/r1.6/api_docs/python/tf/train/Int64List", "k": [], "r": "r1.6", "t": "tf.train.Int64List"}, {"p": "/versions/r1.6/api_docs/python/tf/train/JobDef", "k": ["TasksEntry"], "r": "r1.6", "t": "tf.train.JobDef"}, {"p": "/versions/r1.6/api_docs/python/tf/train/JobDef/TasksEntry", "k": [], "r": "r1.6", "t": "tf.train.JobDef.TasksEntry"}, {"p": "/versions/r1.6/api_docs/python/tf/train/LoggingTensorHook", "k": ["__init__", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "r1.6", "t": "tf.train.LoggingTensorHook"}, {"p": "/versions/r1.6/api_docs/python/tf/train/LooperThread", "k": ["daemon", "ident", "name", "__init__", "getName", "isAlive", "isDaemon", "is_alive", "join", "loop", "run", "run_loop", "setDaemon", "setName", "start", "start_loop", "stop_loop"], "r": "r1.6", "t": "tf.train.LooperThread"}, {"p": "/versions/r1.6/api_docs/python/tf/train/MomentumOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.6", "t": "tf.train.MomentumOptimizer"}, {"p": "/versions/r1.6/api_docs/python/tf/train/MonitoredSession", "k": ["StepContext", "graph", "__enter__", "__exit__", "__init__", "close", "run", "run_step_fn", "should_stop"], "r": "r1.6", "t": "tf.train.MonitoredSession"}, {"p": "/versions/r1.6/api_docs/python/tf/train/MonitoredSession/StepContext", "k": ["session", "__init__", "request_stop", "run_with_hooks"], "r": "r1.6", "t": "tf.train.MonitoredSession.StepContext"}, {"p": "/versions/r1.6/api_docs/python/tf/train/MonitoredTrainingSession", "k": [], "r": "r1.6", "t": "tf.train.MonitoredTrainingSession"}, {"p": "/versions/r1.6/api_docs/python/tf/train/NanLossDuringTrainingError", "k": [], "r": "r1.6", "t": "tf.train.NanLossDuringTrainingError"}, {"p": "/versions/r1.6/api_docs/python/tf/train/NanTensorHook", "k": ["__init__", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "r1.6", "t": "tf.train.NanTensorHook"}, {"p": "/versions/r1.6/api_docs/python/tf/train/NewCheckpointReader", "k": [], "r": "r1.6", "t": "tf.train.NewCheckpointReader"}, {"p": "/versions/r1.6/api_docs/python/tf/train/Optimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.6", "t": "tf.train.Optimizer"}, {"p": "/versions/r1.6/api_docs/python/tf/train/ProfilerHook", "k": ["__init__", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "r1.6", "t": "tf.train.ProfilerHook"}, {"p": "/versions/r1.6/api_docs/python/tf/train/ProximalAdagradOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.6", "t": "tf.train.ProximalAdagradOptimizer"}, {"p": "/versions/r1.6/api_docs/python/tf/train/ProximalGradientDescentOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.6", "t": "tf.train.ProximalGradientDescentOptimizer"}, {"p": "/versions/r1.6/api_docs/python/tf/train/QueueRunner", "k": ["cancel_op", "close_op", "enqueue_ops", "exceptions_raised", "name", "queue", "queue_closed_exception_types", "__init__", "create_threads", "from_proto", "to_proto"], "r": "r1.6", "t": "tf.train.QueueRunner"}, {"p": "/versions/r1.6/api_docs/python/tf/train/RMSPropOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.6", "t": "tf.train.RMSPropOptimizer"}, {"p": "/versions/r1.6/api_docs/python/tf/train/Saver", "k": ["last_checkpoints", "__init__", "as_saver_def", "build", "export_meta_graph", "from_proto", "recover_last_checkpoints", "restore", "save", "set_last_checkpoints", "set_last_checkpoints_with_time", "to_proto"], "r": "r1.6", "t": "tf.train.Saver"}, {"p": "/versions/r1.6/api_docs/python/tf/train/SaverDef", "k": ["CheckpointFormatVersion", "LEGACY", "V1", "V2"], "r": "r1.6", "t": "tf.train.SaverDef"}, {"p": "/versions/r1.6/api_docs/python/tf/train/Scaffold", "k": ["init_feed_dict", "init_fn", "init_op", "local_init_op", "ready_for_local_init_op", "ready_op", "saver", "summary_op", "__init__", "finalize", "get_or_default"], "r": "r1.6", "t": "tf.train.Scaffold"}, {"p": "/versions/r1.6/api_docs/python/tf/train/SecondOrStepTimer", "k": ["__init__", "last_triggered_step", "reset", "should_trigger_for_step", "update_last_triggered_step"], "r": "r1.6", "t": "tf.train.SecondOrStepTimer"}, {"p": "/versions/r1.6/api_docs/python/tf/train/SequenceExample", "k": [], "r": "r1.6", "t": "tf.train.SequenceExample"}, {"p": "/versions/r1.6/api_docs/python/tf/train/Server", "k": ["server_def", "target", "__init__", "create_local_server", "join", "start"], "r": "r1.6", "t": "tf.train.Server"}, {"p": "/versions/r1.6/api_docs/python/tf/train/ServerDef", "k": [], "r": "r1.6", "t": "tf.train.ServerDef"}, {"p": "/versions/r1.6/api_docs/python/tf/train/SessionCreator", "k": ["create_session"], "r": "r1.6", "t": "tf.train.SessionCreator"}, {"p": "/versions/r1.6/api_docs/python/tf/train/SessionManager", "k": ["__init__", "prepare_session", "recover_session", "wait_for_session"], "r": "r1.6", "t": "tf.train.SessionManager"}, {"p": "/versions/r1.6/api_docs/python/tf/train/SessionRunArgs", "k": ["feed_dict", "fetches", "options", "__new__"], "r": "r1.6", "t": "tf.train.SessionRunArgs"}, {"p": "/versions/r1.6/api_docs/python/tf/train/SessionRunContext", "k": ["original_args", "session", "stop_requested", "__init__", "request_stop"], "r": "r1.6", "t": "tf.train.SessionRunContext"}, {"p": "/versions/r1.6/api_docs/python/tf/train/SessionRunHook", "k": ["after_create_session", "after_run", "before_run", "begin", "end"], "r": "r1.6", "t": "tf.train.SessionRunHook"}, {"p": "/versions/r1.6/api_docs/python/tf/train/SessionRunValues", "k": ["options", "results", "run_metadata", "__new__"], "r": "r1.6", "t": "tf.train.SessionRunValues"}, {"p": "/versions/r1.6/api_docs/python/tf/train/SingularMonitoredSession", "k": ["StepContext", "graph", "__enter__", "__exit__", "__init__", "close", "raw_session", "run", "run_step_fn", "should_stop"], "r": "r1.6", "t": "tf.train.SingularMonitoredSession"}, {"p": "/versions/r1.6/api_docs/python/tf/train/StepCounterHook", "k": ["__init__", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "r1.6", "t": "tf.train.StepCounterHook"}, {"p": "/versions/r1.6/api_docs/python/tf/train/StopAtStepHook", "k": ["__init__", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "r1.6", "t": "tf.train.StopAtStepHook"}, {"p": "/versions/r1.6/api_docs/python/tf/train/SummarySaverHook", "k": ["__init__", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "r1.6", "t": "tf.train.SummarySaverHook"}, {"p": "/versions/r1.6/api_docs/python/tf/train/Supervisor", "k": ["coord", "global_step", "init_feed_dict", "init_op", "is_chief", "ready_for_local_init_op", "ready_op", "save_model_secs", "save_path", "save_summaries_secs", "saver", "session_manager", "summary_op", "summary_writer", "Loop", "PrepareSession", "RequestStop", "ShouldStop", "StartQueueRunners", "StartStandardServices", "Stop", "StopOnException", "SummaryComputed", "WaitForStop", "__init__", "loop", "managed_session", "prepare_or_wait_for_session", "request_stop", "should_stop", "start_queue_runners", "start_standard_services", "stop", "stop_on_exception", "summary_computed", "wait_for_stop", "USE_DEFAULT"], "r": "r1.6", "t": "tf.train.Supervisor"}, {"p": "/versions/r1.6/api_docs/python/tf/train/SyncReplicasOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_chief_queue_runner", "get_init_tokens_op", "get_name", "get_slot", "get_slot_names", "make_session_run_hook", "minimize", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.6", "t": "tf.train.SyncReplicasOptimizer"}, {"p": "/versions/r1.6/api_docs/python/tf/train/WorkerSessionCreator", "k": ["__init__", "create_session"], "r": "r1.6", "t": "tf.train.WorkerSessionCreator"}, {"p": "/versions/r1.6/api_docs/python/tf/train/add_queue_runner", "k": [], "r": "r1.6", "t": "tf.train.add_queue_runner"}, {"p": "/versions/r1.6/api_docs/python/tf/train/assert_global_step", "k": [], "r": "r1.6", "t": "tf.train.assert_global_step"}, {"p": "/versions/r1.6/api_docs/python/tf/train/basic_train_loop", "k": [], "r": "r1.6", "t": "tf.train.basic_train_loop"}, {"p": "/versions/r1.6/api_docs/python/tf/train/batch", "k": [], "r": "r1.6", "t": "tf.train.batch"}, {"p": "/versions/r1.6/api_docs/python/tf/train/batch_join", "k": [], "r": "r1.6", "t": "tf.train.batch_join"}, {"p": "/versions/r1.6/api_docs/python/tf/train/checkpoint_exists", "k": [], "r": "r1.6", "t": "tf.train.checkpoint_exists"}, {"p": "/versions/r1.6/api_docs/python/tf/train/cosine_decay", "k": [], "r": "r1.6", "t": "tf.train.cosine_decay"}, {"p": "/versions/r1.6/api_docs/python/tf/train/cosine_decay_restarts", "k": [], "r": "r1.6", "t": "tf.train.cosine_decay_restarts"}, {"p": "/versions/r1.6/api_docs/python/tf/train/create_global_step", "k": [], "r": "r1.6", "t": "tf.train.create_global_step"}, {"p": "/versions/r1.6/api_docs/python/tf/train/do_quantize_training_on_graphdef", "k": [], "r": "r1.6", "t": "tf.train.do_quantize_training_on_graphdef"}, {"p": "/versions/r1.6/api_docs/python/tf/train/exponential_decay", "k": [], "r": "r1.6", "t": "tf.train.exponential_decay"}, {"p": "/versions/r1.6/api_docs/python/tf/train/export_meta_graph", "k": [], "r": "r1.6", "t": "tf.train.export_meta_graph"}, {"p": "/versions/r1.6/api_docs/python/tf/train/generate_checkpoint_state_proto", "k": [], "r": "r1.6", "t": "tf.train.generate_checkpoint_state_proto"}, {"p": "/versions/r1.6/api_docs/python/tf/train/get_checkpoint_mtimes", "k": [], "r": "r1.6", "t": "tf.train.get_checkpoint_mtimes"}, {"p": "/versions/r1.6/api_docs/python/tf/train/get_checkpoint_state", "k": [], "r": "r1.6", "t": "tf.train.get_checkpoint_state"}, {"p": "/versions/r1.6/api_docs/python/tf/train/get_global_step", "k": [], "r": "r1.6", "t": "tf.train.get_global_step"}, {"p": "/versions/r1.6/api_docs/python/tf/train/get_or_create_global_step", "k": [], "r": "r1.6", "t": "tf.train.get_or_create_global_step"}, {"p": "/versions/r1.6/api_docs/python/tf/train/global_step", "k": [], "r": "r1.6", "t": "tf.train.global_step"}, {"p": "/versions/r1.6/api_docs/python/tf/train/import_meta_graph", "k": [], "r": "r1.6", "t": "tf.train.import_meta_graph"}, {"p": "/versions/r1.6/api_docs/python/tf/train/init_from_checkpoint", "k": [], "r": "r1.6", "t": "tf.train.init_from_checkpoint"}, {"p": "/versions/r1.6/api_docs/python/tf/train/input_producer", "k": [], "r": "r1.6", "t": "tf.train.input_producer"}, {"p": "/versions/r1.6/api_docs/python/tf/train/inverse_time_decay", "k": [], "r": "r1.6", "t": "tf.train.inverse_time_decay"}, {"p": "/versions/r1.6/api_docs/python/tf/train/latest_checkpoint", "k": [], "r": "r1.6", "t": "tf.train.latest_checkpoint"}, {"p": "/versions/r1.6/api_docs/python/tf/train/limit_epochs", "k": [], "r": "r1.6", "t": "tf.train.limit_epochs"}, {"p": "/versions/r1.6/api_docs/python/tf/train/linear_cosine_decay", "k": [], "r": "r1.6", "t": "tf.train.linear_cosine_decay"}, {"p": "/versions/r1.6/api_docs/python/tf/train/list_variables", "k": [], "r": "r1.6", "t": "tf.train.list_variables"}, {"p": "/versions/r1.6/api_docs/python/tf/train/load_checkpoint", "k": [], "r": "r1.6", "t": "tf.train.load_checkpoint"}, {"p": "/versions/r1.6/api_docs/python/tf/train/load_variable", "k": [], "r": "r1.6", "t": "tf.train.load_variable"}, {"p": "/versions/r1.6/api_docs/python/tf/train/match_filenames_once", "k": [], "r": "r1.6", "t": "tf.train.match_filenames_once"}, {"p": "/versions/r1.6/api_docs/python/tf/train/maybe_batch", "k": [], "r": "r1.6", "t": "tf.train.maybe_batch"}, {"p": "/versions/r1.6/api_docs/python/tf/train/maybe_batch_join", "k": [], "r": "r1.6", "t": "tf.train.maybe_batch_join"}, {"p": "/versions/r1.6/api_docs/python/tf/train/maybe_shuffle_batch", "k": [], "r": "r1.6", "t": "tf.train.maybe_shuffle_batch"}, {"p": "/versions/r1.6/api_docs/python/tf/train/maybe_shuffle_batch_join", "k": [], "r": "r1.6", "t": "tf.train.maybe_shuffle_batch_join"}, {"p": "/versions/r1.6/api_docs/python/tf/train/natural_exp_decay", "k": [], "r": "r1.6", "t": "tf.train.natural_exp_decay"}, {"p": "/versions/r1.6/api_docs/python/tf/train/noisy_linear_cosine_decay", "k": [], "r": "r1.6", "t": "tf.train.noisy_linear_cosine_decay"}, {"p": "/versions/r1.6/api_docs/python/tf/train/piecewise_constant", "k": [], "r": "r1.6", "t": "tf.train.piecewise_constant"}, {"p": "/versions/r1.6/api_docs/python/tf/train/polynomial_decay", "k": [], "r": "r1.6", "t": "tf.train.polynomial_decay"}, {"p": "/versions/r1.6/api_docs/python/tf/train/queue_runner", "k": [], "r": "r1.6", "t": "tf.train.queue_runner"}, {"p": "/versions/r1.6/api_docs/python/tf/train/range_input_producer", "k": [], "r": "r1.6", "t": "tf.train.range_input_producer"}, {"p": "/versions/r1.6/api_docs/python/tf/train/replica_device_setter", "k": [], "r": "r1.6", "t": "tf.train.replica_device_setter"}, {"p": "/versions/r1.6/api_docs/python/tf/train/sdca_fprint", "k": [], "r": "r1.6", "t": "tf.train.sdca_fprint"}, {"p": "/versions/r1.6/api_docs/python/tf/train/sdca_optimizer", "k": [], "r": "r1.6", "t": "tf.train.sdca_optimizer"}, {"p": "/versions/r1.6/api_docs/python/tf/train/sdca_shrink_l1", "k": [], "r": "r1.6", "t": "tf.train.sdca_shrink_l1"}, {"p": "/versions/r1.6/api_docs/python/tf/train/shuffle_batch", "k": [], "r": "r1.6", "t": "tf.train.shuffle_batch"}, {"p": "/versions/r1.6/api_docs/python/tf/train/shuffle_batch_join", "k": [], "r": "r1.6", "t": "tf.train.shuffle_batch_join"}, {"p": "/versions/r1.6/api_docs/python/tf/train/slice_input_producer", "k": [], "r": "r1.6", "t": "tf.train.slice_input_producer"}, {"p": "/versions/r1.6/api_docs/python/tf/train/start_queue_runners", "k": [], "r": "r1.6", "t": "tf.train.start_queue_runners"}, {"p": "/versions/r1.6/api_docs/python/tf/train/string_input_producer", "k": [], "r": "r1.6", "t": "tf.train.string_input_producer"}, {"p": "/versions/r1.6/api_docs/python/tf/train/summary_iterator", "k": [], "r": "r1.6", "t": "tf.train.summary_iterator"}, {"p": "/versions/r1.6/api_docs/python/tf/train/update_checkpoint_state", "k": [], "r": "r1.6", "t": "tf.train.update_checkpoint_state"}, {"p": "/versions/r1.6/api_docs/python/tf/train/write_graph", "k": [], "r": "r1.6", "t": "tf.train.write_graph"}, {"p": "/versions/r1.6/api_docs/python/tf/trainable_variables", "k": [], "r": "r1.6", "t": "tf.trainable_variables"}, {"p": "/versions/r1.6/api_docs/python/tf/transpose", "k": [], "r": "r1.6", "t": "tf.transpose"}, {"p": "/versions/r1.6/api_docs/python/tf/truediv", "k": [], "r": "r1.6", "t": "tf.truediv"}, {"p": "/versions/r1.6/api_docs/python/tf/truncated_normal", "k": [], "r": "r1.6", "t": "tf.truncated_normal"}, {"p": "/versions/r1.6/api_docs/python/tf/truncated_normal_initializer", "k": ["__call__", "__init__", "from_config", "get_config"], "r": "r1.6", "t": "tf.truncated_normal_initializer"}, {"p": "/versions/r1.6/api_docs/python/tf/truncatediv", "k": [], "r": "r1.6", "t": "tf.truncatediv"}, {"p": "/versions/r1.6/api_docs/python/tf/truncatemod", "k": [], "r": "r1.6", "t": "tf.truncatemod"}, {"p": "/versions/r1.6/api_docs/python/tf/tuple", "k": [], "r": "r1.6", "t": "tf.tuple"}, {"p": "/versions/r1.6/api_docs/python/tf/uniform_unit_scaling_initializer", "k": ["__call__", "__init__", "from_config", "get_config"], "r": "r1.6", "t": "tf.uniform_unit_scaling_initializer"}, {"p": "/versions/r1.6/api_docs/python/tf/unique", "k": [], "r": "r1.6", "t": "tf.unique"}, {"p": "/versions/r1.6/api_docs/python/tf/unique_with_counts", "k": [], "r": "r1.6", "t": "tf.unique_with_counts"}, {"p": "/versions/r1.6/api_docs/python/tf/unravel_index", "k": [], "r": "r1.6", "t": "tf.unravel_index"}, {"p": "/versions/r1.6/api_docs/python/tf/unsorted_segment_max", "k": [], "r": "r1.6", "t": "tf.unsorted_segment_max"}, {"p": "/versions/r1.6/api_docs/python/tf/unsorted_segment_sum", "k": [], "r": "r1.6", "t": "tf.unsorted_segment_sum"}, {"p": "/versions/r1.6/api_docs/python/tf/unstack", "k": [], "r": "r1.6", "t": "tf.unstack"}, {"p": "/versions/r1.6/api_docs/python/tf/user_ops", "k": [], "r": "r1.6", "t": "tf.user_ops"}, {"p": "/versions/r1.6/api_docs/python/tf/variable_axis_size_partitioner", "k": [], "r": "r1.6", "t": "tf.variable_axis_size_partitioner"}, {"p": "/versions/r1.6/api_docs/python/tf/variable_op_scope", "k": [], "r": "r1.6", "t": "tf.variable_op_scope"}, {"p": "/versions/r1.6/api_docs/python/tf/variable_scope", "k": ["__enter__", "__exit__", "__init__"], "r": "r1.6", "t": "tf.variable_scope"}, {"p": "/versions/r1.6/api_docs/python/tf/variables_initializer", "k": [], "r": "r1.6", "t": "tf.variables_initializer"}, {"p": "/versions/r1.6/api_docs/python/tf/variance_scaling_initializer", "k": ["__call__", "__init__", "from_config", "get_config"], "r": "r1.6", "t": "tf.variance_scaling_initializer"}, {"p": "/versions/r1.6/api_docs/python/tf/verify_tensor_all_finite", "k": [], "r": "r1.6", "t": "tf.verify_tensor_all_finite"}, {"p": "/versions/r1.6/api_docs/python/tf/where", "k": [], "r": "r1.6", "t": "tf.where"}, {"p": "/versions/r1.6/api_docs/python/tf/while_loop", "k": [], "r": "r1.6", "t": "tf.while_loop"}, {"p": "/versions/r1.6/api_docs/python/tf/write_file", "k": [], "r": "r1.6", "t": "tf.write_file"}, {"p": "/versions/r1.6/api_docs/python/tf/zeros", "k": [], "r": "r1.6", "t": "tf.zeros"}, {"p": "/versions/r1.6/api_docs/python/tf/zeros_initializer", "k": ["__call__", "__init__", "from_config", "get_config"], "r": "r1.6", "t": "tf.zeros_initializer"}, {"p": "/versions/r1.6/api_docs/python/tf/zeros_like", "k": [], "r": "r1.6", "t": "tf.zeros_like"}, {"p": "/versions/r1.6/api_docs/python/tf/zeta", "k": [], "r": "r1.6", "t": "tf.zeta"}, {"p": "/versions/r1.6/api_docs/python/tfdbg", "k": [], "r": "r1.6", "t": "tfdbg"}, {"p": "/versions/r1.6/api_docs/python/tfdbg/DebugDumpDir", "k": ["core_metadata", "dumped_tensor_data", "python_graph", "run_feed_keys_info", "run_fetches_info", "size", "t0", "__init__", "debug_watch_keys", "devices", "find", "find_some_path", "get_dump_sizes_bytes", "get_rel_timestamps", "get_tensor_file_paths", "get_tensors", "loaded_partition_graphs", "node_attributes", "node_device", "node_exists", "node_inputs", "node_op_type", "node_recipients", "node_traceback", "nodes", "partition_graphs", "reconstructed_non_debug_partition_graphs", "set_python_graph", "transitive_inputs", "watch_key_to_data"], "r": "r1.6", "t": "tfdbg.DebugDumpDir"}, {"p": "/versions/r1.6/api_docs/python/tfdbg/DebugTensorDatum", "k": ["debug_op", "device_name", "dump_size_bytes", "extended_timestamp", "file_path", "node_name", "output_slot", "tensor_name", "timestamp", "watch_key", "__init__", "get_tensor"], "r": "r1.6", "t": "tfdbg.DebugTensorDatum"}, {"p": "/versions/r1.6/api_docs/python/tfdbg/DumpingDebugHook", "k": ["__init__", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "r1.6", "t": "tfdbg.DumpingDebugHook"}, {"p": "/versions/r1.6/api_docs/python/tfdbg/DumpingDebugWrapperSession", "k": ["graph", "graph_def", "run_call_count", "sess_str", "session", "__enter__", "__exit__", "__init__", "as_default", "close", "increment_run_call_count", "invoke_node_stepper", "list_devices", "make_callable", "on_run_end", "on_run_start", "on_session_init", "partial_run", "partial_run_setup", "prepare_run_debug_urls", "reset", "run", "run_step_fn", "should_stop"], "r": "r1.6", "t": "tfdbg.DumpingDebugWrapperSession"}, {"p": "/versions/r1.6/api_docs/python/tfdbg/GradientsDebugger", "k": ["graph", "y_tensor", "__enter__", "__exit__", "__init__", "gradient_tensor", "gradient_tensors", "identify_gradient", "register_gradient_tensor", "watch_gradients_by_tensor_names", "watch_gradients_by_tensors"], "r": "r1.6", "t": "tfdbg.GradientsDebugger"}, {"p": "/versions/r1.6/api_docs/python/tfdbg/GrpcDebugHook", "k": ["__init__", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "r1.6", "t": "tfdbg.GrpcDebugHook"}, {"p": "/versions/r1.6/api_docs/python/tfdbg/GrpcDebugWrapperSession", "k": ["graph", "graph_def", "run_call_count", "sess_str", "session", "__enter__", "__exit__", "__init__", "as_default", "close", "increment_run_call_count", "invoke_node_stepper", "list_devices", "make_callable", "on_run_end", "on_run_start", "on_session_init", "partial_run", "partial_run_setup", "prepare_run_debug_urls", "reset", "run", "run_step_fn", "should_stop"], "r": "r1.6", "t": "tfdbg.GrpcDebugWrapperSession"}, {"p": "/versions/r1.6/api_docs/python/tfdbg/LocalCLIDebugHook", "k": ["__init__", "add_tensor_filter", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "r1.6", "t": "tfdbg.LocalCLIDebugHook"}, {"p": "/versions/r1.6/api_docs/python/tfdbg/LocalCLIDebugWrapperSession", "k": ["graph", "graph_def", "run_call_count", "sess_str", "session", "__enter__", "__exit__", "__init__", "add_tensor_filter", "as_default", "close", "increment_run_call_count", "invoke_node_stepper", "list_devices", "make_callable", "on_run_end", "on_run_start", "on_session_init", "partial_run", "partial_run_setup", "reset", "run", "run_step_fn", "should_stop"], "r": "r1.6", "t": "tfdbg.LocalCLIDebugWrapperSession"}, {"p": "/versions/r1.6/api_docs/python/tfdbg/TensorBoardDebugHook", "k": ["__init__", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "r1.6", "t": "tfdbg.TensorBoardDebugHook"}, {"p": "/versions/r1.6/api_docs/python/tfdbg/TensorBoardDebugWrapperSession", "k": ["graph", "graph_def", "run_call_count", "sess_str", "session", "__enter__", "__exit__", "__init__", "as_default", "close", "increment_run_call_count", "invoke_node_stepper", "list_devices", "make_callable", "on_run_end", "on_run_start", "on_session_init", "partial_run", "partial_run_setup", "prepare_run_debug_urls", "reset", "run", "run_step_fn", "should_stop"], "r": "r1.6", "t": "tfdbg.TensorBoardDebugWrapperSession"}, {"p": "/versions/r1.6/api_docs/python/tfdbg/WatchOptions", "k": ["__init__"], "r": "r1.6", "t": "tfdbg.WatchOptions"}, {"p": "/versions/r1.6/api_docs/python/tfdbg/add_debug_tensor_watch", "k": [], "r": "r1.6", "t": "tfdbg.add_debug_tensor_watch"}, {"p": "/versions/r1.6/api_docs/python/tfdbg/has_inf_or_nan", "k": [], "r": "r1.6", "t": "tfdbg.has_inf_or_nan"}, {"p": "/versions/r1.6/api_docs/python/tfdbg/load_tensor_from_event", "k": [], "r": "r1.6", "t": "tfdbg.load_tensor_from_event"}, {"p": "/versions/r1.6/api_docs/python/tfdbg/load_tensor_from_event_file", "k": [], "r": "r1.6", "t": "tfdbg.load_tensor_from_event_file"}, {"p": "/versions/r1.6/api_docs/python/tfdbg/reconstruct_non_debug_graph_def", "k": [], "r": "r1.6", "t": "tfdbg.reconstruct_non_debug_graph_def"}, {"p": "/versions/r1.6/api_docs/python/tfdbg/watch_graph", "k": [], "r": "r1.6", "t": "tfdbg.watch_graph"}, {"p": "/versions/r1.6/api_docs/python/tfdbg/watch_graph_with_blacklists", "k": [], "r": "r1.6", "t": "tfdbg.watch_graph_with_blacklists"}, {"p": "/versions/r1.7/api_docs/python/tf", "k": ["AUTO_REUSE", "COMPILER_VERSION", "CXX11_ABI_FLAG", "GIT_VERSION", "GRAPH_DEF_VERSION", "GRAPH_DEF_VERSION_MIN_CONSUMER", "GRAPH_DEF_VERSION_MIN_PRODUCER", "MONOLITHIC_BUILD", "QUANTIZED_DTYPES", "VERSION", "__compiler_version__", "__cxx11_abi_flag__", "__git_version__", "__monolithic_build__", "__version__", "bfloat16", "bool", "complex128", "complex64", "double", "float16", "float32", "float64", "half", "int16", "int32", "int64", "int8", "newaxis", "qint16", "qint32", "qint8", "quint16", "quint8", "resource", "string", "uint16", "uint32", "uint64", "uint8", "variant"], "r": "r1.7", "t": "tf"}, {"p": "/versions/r1.7/api_docs/python/tf/AggregationMethod", "k": ["ADD_N", "DEFAULT", "EXPERIMENTAL_ACCUMULATE_N", "EXPERIMENTAL_TREE"], "r": "r1.7", "t": "tf.AggregationMethod"}, {"p": "/versions/r1.7/api_docs/python/tf/Assert", "k": [], "r": "r1.7", "t": "tf.Assert"}, {"p": "/versions/r1.7/api_docs/python/tf/AttrValue", "k": ["ListValue"], "r": "r1.7", "t": "tf.AttrValue"}, {"p": "/versions/r1.7/api_docs/python/tf/AttrValue/ListValue", "k": [], "r": "r1.7", "t": "tf.AttrValue.ListValue"}, {"p": "/versions/r1.7/api_docs/python/tf/ConditionalAccumulator", "k": ["accumulator_ref", "dtype", "name", "__init__", "apply_grad", "num_accumulated", "set_global_step", "take_grad"], "r": "r1.7", "t": "tf.ConditionalAccumulator"}, {"p": "/versions/r1.7/api_docs/python/tf/ConditionalAccumulatorBase", "k": ["accumulator_ref", "dtype", "name", "__init__", "num_accumulated", "set_global_step"], "r": "r1.7", "t": "tf.ConditionalAccumulatorBase"}, {"p": "/versions/r1.7/api_docs/python/tf/ConfigProto", "k": ["DeviceCountEntry"], "r": "r1.7", "t": "tf.ConfigProto"}, {"p": "/versions/r1.7/api_docs/python/tf/ConfigProto/DeviceCountEntry", "k": [], "r": "r1.7", "t": "tf.ConfigProto.DeviceCountEntry"}, {"p": "/versions/r1.7/api_docs/python/tf/DType", "k": ["as_datatype_enum", "as_numpy_dtype", "base_dtype", "is_bool", "is_complex", "is_floating", "is_integer", "is_numpy_compatible", "is_quantized", "is_unsigned", "limits", "max", "min", "name", "real_dtype", "size", "__eq__", "__init__", "__int__", "__ne__", "is_compatible_with"], "r": "r1.7", "t": "tf.DType"}, {"p": "/versions/r1.7/api_docs/python/tf/DeviceSpec", "k": ["job", "replica", "task", "__init__", "from_string", "merge_from", "parse_from_string", "to_string"], "r": "r1.7", "t": "tf.DeviceSpec"}, {"p": "/versions/r1.7/api_docs/python/tf/Dimension", "k": ["value", "__add__", "__div__", "__eq__", "__floordiv__", "__ge__", "__gt__", "__index__", "__init__", "__int__", "__le__", "__long__", "__lt__", "__mod__", "__mul__", "__ne__", "__sub__", "assert_is_compatible_with", "is_compatible_with", "merge_with"], "r": "r1.7", "t": "tf.Dimension"}, {"p": "/versions/r1.7/api_docs/python/tf/Event", "k": [], "r": "r1.7", "t": "tf.Event"}, {"p": "/versions/r1.7/api_docs/python/tf/FIFOQueue", "k": ["dtypes", "name", "names", "queue_ref", "shapes", "__init__", "close", "dequeue", "dequeue_many", "dequeue_up_to", "enqueue", "enqueue_many", "from_list", "is_closed", "size"], "r": "r1.7", "t": "tf.FIFOQueue"}, {"p": "/versions/r1.7/api_docs/python/tf/FixedLenFeature", "k": ["default_value", "dtype", "shape", "__new__"], "r": "r1.7", "t": "tf.FixedLenFeature"}, {"p": "/versions/r1.7/api_docs/python/tf/FixedLenSequenceFeature", "k": ["allow_missing", "default_value", "dtype", "shape", "__new__"], "r": "r1.7", "t": "tf.FixedLenSequenceFeature"}, {"p": "/versions/r1.7/api_docs/python/tf/FixedLengthRecordReader", "k": ["reader_ref", "supports_serialize", "__init__", "num_records_produced", "num_work_units_completed", "read", "read_up_to", "reset", "restore_state", "serialize_state"], "r": "r1.7", "t": "tf.FixedLengthRecordReader"}, {"p": "/versions/r1.7/api_docs/python/tf/GPUOptions", "k": ["Experimental"], "r": "r1.7", "t": "tf.GPUOptions"}, {"p": "/versions/r1.7/api_docs/python/tf/GPUOptions/Experimental", "k": ["VirtualDevices"], "r": "r1.7", "t": "tf.GPUOptions.Experimental"}, {"p": "/versions/r1.7/api_docs/python/tf/GPUOptions/Experimental/VirtualDevices", "k": [], "r": "r1.7", "t": "tf.GPUOptions.Experimental.VirtualDevices"}, {"p": "/versions/r1.7/api_docs/python/tf/Graph", "k": ["building_function", "collections", "finalized", "graph_def_versions", "seed", "version", "__init__", "add_to_collection", "add_to_collections", "as_default", "as_graph_def", "as_graph_element", "clear_collection", "colocate_with", "container", "control_dependencies", "create_op", "device", "finalize", "get_all_collection_keys", "get_collection", "get_collection_ref", "get_name_scope", "get_operation_by_name", "get_operations", "get_tensor_by_name", "gradient_override_map", "is_feedable", "is_fetchable", "name_scope", "prevent_feeding", "prevent_fetching", "switch_to_thread_local", "unique_name"], "r": "r1.7", "t": "tf.Graph"}, {"p": "/versions/r1.7/api_docs/python/tf/GraphDef", "k": [], "r": "r1.7", "t": "tf.GraphDef"}, {"p": "/versions/r1.7/api_docs/python/tf/GraphKeys", "k": ["ACTIVATIONS", "ASSET_FILEPATHS", "BIASES", "CONCATENATED_VARIABLES", "COND_CONTEXT", "EVAL_STEP", "GLOBAL_STEP", "GLOBAL_VARIABLES", "INIT_OP", "LOCAL_INIT_OP", "LOCAL_RESOURCES", "LOCAL_VARIABLES", "LOSSES", "METRIC_VARIABLES", "MODEL_VARIABLES", "MOVING_AVERAGE_VARIABLES", "QUEUE_RUNNERS", "READY_FOR_LOCAL_INIT_OP", "READY_OP", "REGULARIZATION_LOSSES", "RESOURCES", "SAVEABLE_OBJECTS", "SAVERS", "SUMMARIES", "SUMMARY_OP", "TABLE_INITIALIZERS", "TRAINABLE_RESOURCE_VARIABLES", "TRAINABLE_VARIABLES", "TRAIN_OP", "UPDATE_OPS", "VARIABLES", "WEIGHTS", "WHILE_CONTEXT"], "r": "r1.7", "t": "tf.GraphKeys"}, {"p": "/versions/r1.7/api_docs/python/tf/GraphOptions", "k": [], "r": "r1.7", "t": "tf.GraphOptions"}, {"p": "/versions/r1.7/api_docs/python/tf/HistogramProto", "k": [], "r": "r1.7", "t": "tf.HistogramProto"}, {"p": "/versions/r1.7/api_docs/python/tf/IdentityReader", "k": ["reader_ref", "supports_serialize", "__init__", "num_records_produced", "num_work_units_completed", "read", "read_up_to", "reset", "restore_state", "serialize_state"], "r": "r1.7", "t": "tf.IdentityReader"}, {"p": "/versions/r1.7/api_docs/python/tf/IndexedSlices", "k": ["dense_shape", "device", "dtype", "graph", "indices", "name", "op", "values", "__init__", "__neg__"], "r": "r1.7", "t": "tf.IndexedSlices"}, {"p": "/versions/r1.7/api_docs/python/tf/InteractiveSession", "k": ["graph", "graph_def", "sess_str", "__init__", "as_default", "close", "list_devices", "make_callable", "partial_run", "partial_run_setup", "run"], "r": "r1.7", "t": "tf.InteractiveSession"}, {"p": "/versions/r1.7/api_docs/python/tf/LMDBReader", "k": ["reader_ref", "supports_serialize", "__init__", "num_records_produced", "num_work_units_completed", "read", "read_up_to", "reset", "restore_state", "serialize_state"], "r": "r1.7", "t": "tf.LMDBReader"}, {"p": "/versions/r1.7/api_docs/python/tf/LogMessage", "k": ["DEBUGGING", "ERROR", "FATAL", "INFO", "Level", "UNKNOWN", "WARN"], "r": "r1.7", "t": "tf.LogMessage"}, {"p": "/versions/r1.7/api_docs/python/tf/MetaGraphDef", "k": ["CollectionDefEntry", "MetaInfoDef", "SignatureDefEntry"], "r": "r1.7", "t": "tf.MetaGraphDef"}, {"p": "/versions/r1.7/api_docs/python/tf/MetaGraphDef/CollectionDefEntry", "k": [], "r": "r1.7", "t": "tf.MetaGraphDef.CollectionDefEntry"}, {"p": "/versions/r1.7/api_docs/python/tf/MetaGraphDef/MetaInfoDef", "k": [], "r": "r1.7", "t": "tf.MetaGraphDef.MetaInfoDef"}, {"p": "/versions/r1.7/api_docs/python/tf/MetaGraphDef/SignatureDefEntry", "k": [], "r": "r1.7", "t": "tf.MetaGraphDef.SignatureDefEntry"}, {"p": "/versions/r1.7/api_docs/python/tf/NameAttrList", "k": ["AttrEntry"], "r": "r1.7", "t": "tf.NameAttrList"}, {"p": "/versions/r1.7/api_docs/python/tf/NameAttrList/AttrEntry", "k": [], "r": "r1.7", "t": "tf.NameAttrList.AttrEntry"}, {"p": "/versions/r1.7/api_docs/python/tf/NoGradient", "k": [], "r": "r1.7", "t": "tf.NoGradient"}, {"p": "/versions/r1.7/api_docs/python/tf/NodeDef", "k": ["AttrEntry"], "r": "r1.7", "t": "tf.NodeDef"}, {"p": "/versions/r1.7/api_docs/python/tf/NodeDef/AttrEntry", "k": [], "r": "r1.7", "t": "tf.NodeDef.AttrEntry"}, {"p": "/versions/r1.7/api_docs/python/tf/OpError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "r1.7", "t": "tf.OpError"}, {"p": "/versions/r1.7/api_docs/python/tf/Operation", "k": ["control_inputs", "device", "graph", "inputs", "name", "node_def", "op_def", "outputs", "traceback", "traceback_with_start_lines", "type", "__init__", "colocation_groups", "get_attr", "run", "values"], "r": "r1.7", "t": "tf.Operation"}, {"p": "/versions/r1.7/api_docs/python/tf/OptimizerOptions", "k": ["DEFAULT", "GlobalJitLevel", "L0", "L1", "Level", "OFF", "ON_1", "ON_2"], "r": "r1.7", "t": "tf.OptimizerOptions"}, {"p": "/versions/r1.7/api_docs/python/tf/PaddingFIFOQueue", "k": ["dtypes", "name", "names", "queue_ref", "shapes", "__init__", "close", "dequeue", "dequeue_many", "dequeue_up_to", "enqueue", "enqueue_many", "from_list", "is_closed", "size"], "r": "r1.7", "t": "tf.PaddingFIFOQueue"}, {"p": "/versions/r1.7/api_docs/python/tf/Print", "k": [], "r": "r1.7", "t": "tf.Print"}, {"p": "/versions/r1.7/api_docs/python/tf/PriorityQueue", "k": ["dtypes", "name", "names", "queue_ref", "shapes", "__init__", "close", "dequeue", "dequeue_many", "dequeue_up_to", "enqueue", "enqueue_many", "from_list", "is_closed", "size"], "r": "r1.7", "t": "tf.PriorityQueue"}, {"p": "/versions/r1.7/api_docs/python/tf/QueueBase", "k": ["dtypes", "name", "names", "queue_ref", "shapes", "__init__", "close", "dequeue", "dequeue_many", "dequeue_up_to", "enqueue", "enqueue_many", "from_list", "is_closed", "size"], "r": "r1.7", "t": "tf.QueueBase"}, {"p": "/versions/r1.7/api_docs/python/tf/RandomShuffleQueue", "k": ["dtypes", "name", "names", "queue_ref", "shapes", "__init__", "close", "dequeue", "dequeue_many", "dequeue_up_to", "enqueue", "enqueue_many", "from_list", "is_closed", "size"], "r": "r1.7", "t": "tf.RandomShuffleQueue"}, {"p": "/versions/r1.7/api_docs/python/tf/ReaderBase", "k": ["reader_ref", "supports_serialize", "__init__", "num_records_produced", "num_work_units_completed", "read", "read_up_to", "reset", "restore_state", "serialize_state"], "r": "r1.7", "t": "tf.ReaderBase"}, {"p": "/versions/r1.7/api_docs/python/tf/RegisterGradient", "k": ["__call__", "__init__"], "r": "r1.7", "t": "tf.RegisterGradient"}, {"p": "/versions/r1.7/api_docs/python/tf/RunMetadata", "k": [], "r": "r1.7", "t": "tf.RunMetadata"}, {"p": "/versions/r1.7/api_docs/python/tf/RunOptions", "k": ["FULL_TRACE", "HARDWARE_TRACE", "NO_TRACE", "SOFTWARE_TRACE", "TraceLevel"], "r": "r1.7", "t": "tf.RunOptions"}, {"p": "/versions/r1.7/api_docs/python/tf/Session", "k": ["graph", "graph_def", "sess_str", "__enter__", "__exit__", "__init__", "as_default", "close", "list_devices", "make_callable", "partial_run", "partial_run_setup", "reset", "run"], "r": "r1.7", "t": "tf.Session"}, {"p": "/versions/r1.7/api_docs/python/tf/SessionLog", "k": ["CHECKPOINT", "START", "STATUS_UNSPECIFIED", "STOP", "SessionStatus"], "r": "r1.7", "t": "tf.SessionLog"}, {"p": "/versions/r1.7/api_docs/python/tf/SparseConditionalAccumulator", "k": ["accumulator_ref", "dtype", "name", "__init__", "apply_grad", "apply_indexed_slices_grad", "num_accumulated", "set_global_step", "take_grad", "take_indexed_slices_grad"], "r": "r1.7", "t": "tf.SparseConditionalAccumulator"}, {"p": "/versions/r1.7/api_docs/python/tf/SparseFeature", "k": ["already_sorted", "dtype", "index_key", "size", "value_key", "__new__"], "r": "r1.7", "t": "tf.SparseFeature"}, {"p": "/versions/r1.7/api_docs/python/tf/SparseTensor", "k": ["dense_shape", "dtype", "graph", "indices", "op", "values", "__div__", "__init__", "__mul__", "__truediv__", "eval", "from_value", "get_shape"], "r": "r1.7", "t": "tf.SparseTensor"}, {"p": "/versions/r1.7/api_docs/python/tf/SparseTensorValue", "k": ["dense_shape", "indices", "values", "__new__"], "r": "r1.7", "t": "tf.SparseTensorValue"}, {"p": "/versions/r1.7/api_docs/python/tf/Summary", "k": ["Audio", "Image", "Value"], "r": "r1.7", "t": "tf.Summary"}, {"p": "/versions/r1.7/api_docs/python/tf/Summary/Audio", "k": [], "r": "r1.7", "t": "tf.Summary.Audio"}, {"p": "/versions/r1.7/api_docs/python/tf/Summary/Image", "k": [], "r": "r1.7", "t": "tf.Summary.Image"}, {"p": "/versions/r1.7/api_docs/python/tf/Summary/Value", "k": [], "r": "r1.7", "t": "tf.Summary.Value"}, {"p": "/versions/r1.7/api_docs/python/tf/SummaryMetadata", "k": ["PluginData"], "r": "r1.7", "t": "tf.SummaryMetadata"}, {"p": "/versions/r1.7/api_docs/python/tf/SummaryMetadata/PluginData", "k": [], "r": "r1.7", "t": "tf.SummaryMetadata.PluginData"}, {"p": "/versions/r1.7/api_docs/python/tf/TFRecordReader", "k": ["reader_ref", "supports_serialize", "__init__", "num_records_produced", "num_work_units_completed", "read", "read_up_to", "reset", "restore_state", "serialize_state"], "r": "r1.7", "t": "tf.TFRecordReader"}, {"p": "/versions/r1.7/api_docs/python/tf/Tensor", "k": ["device", "dtype", "graph", "name", "op", "shape", "value_index", "__abs__", "__add__", "__and__", "__bool__", "__div__", "__eq__", "__floordiv__", "__ge__", "__getitem__", "__gt__", "__init__", "__invert__", "__iter__", "__le__", "__lt__", "__matmul__", "__mod__", "__mul__", "__neg__", "__nonzero__", "__or__", "__pow__", "__radd__", "__rand__", "__rdiv__", "__rfloordiv__", "__rmatmul__", "__rmod__", "__rmul__", "__ror__", "__rpow__", "__rsub__", "__rtruediv__", "__rxor__", "__sub__", "__truediv__", "__xor__", "consumers", "eval", "get_shape", "set_shape", "OVERLOADABLE_OPERATORS", "__array_priority__"], "r": "r1.7", "t": "tf.Tensor"}, {"p": "/versions/r1.7/api_docs/python/tf/TensorArray", "k": ["dtype", "flow", "handle", "__init__", "close", "concat", "gather", "grad", "identity", "read", "scatter", "size", "split", "stack", "unstack", "write"], "r": "r1.7", "t": "tf.TensorArray"}, {"p": "/versions/r1.7/api_docs/python/tf/TensorInfo", "k": ["CooSparse"], "r": "r1.7", "t": "tf.TensorInfo"}, {"p": "/versions/r1.7/api_docs/python/tf/TensorInfo/CooSparse", "k": [], "r": "r1.7", "t": "tf.TensorInfo.CooSparse"}, {"p": "/versions/r1.7/api_docs/python/tf/TensorShape", "k": ["dims", "ndims", "__bool__", "__eq__", "__getitem__", "__init__", "__iter__", "__len__", "__ne__", "__nonzero__", "as_list", "as_proto", "assert_has_rank", "assert_is_compatible_with", "assert_is_fully_defined", "assert_same_rank", "concatenate", "is_compatible_with", "is_fully_defined", "merge_with", "most_specific_compatible_shape", "num_elements", "with_rank", "with_rank_at_least", "with_rank_at_most"], "r": "r1.7", "t": "tf.TensorShape"}, {"p": "/versions/r1.7/api_docs/python/tf/TextLineReader", "k": ["reader_ref", "supports_serialize", "__init__", "num_records_produced", "num_work_units_completed", "read", "read_up_to", "reset", "restore_state", "serialize_state"], "r": "r1.7", "t": "tf.TextLineReader"}, {"p": "/versions/r1.7/api_docs/python/tf/VarLenFeature", "k": ["dtype", "__new__"], "r": "r1.7", "t": "tf.VarLenFeature"}, {"p": "/versions/r1.7/api_docs/python/tf/Variable", "k": ["SaveSliceInfo", "constraint", "device", "dtype", "graph", "initial_value", "initializer", "name", "op", "shape", "__abs__", "__add__", "__and__", "__div__", "__floordiv__", "__ge__", "__getitem__", "__gt__", "__iadd__", "__idiv__", "__imul__", "__init__", "__invert__", "__ipow__", "__irealdiv__", "__isub__", "__iter__", "__itruediv__", "__le__", "__lt__", "__matmul__", "__mod__", "__mul__", "__neg__", "__or__", "__pow__", "__radd__", "__rand__", "__rdiv__", "__rfloordiv__", "__rmatmul__", "__rmod__", "__rmul__", "__ror__", "__rpow__", "__rsub__", "__rtruediv__", "__rxor__", "__sub__", "__truediv__", "__xor__", "assign", "assign_add", "assign_sub", "count_up_to", "eval", "from_proto", "get_shape", "initialized_value", "load", "read_value", "scatter_sub", "set_shape", "to_proto", "value", "__array_priority__"], "r": "r1.7", "t": "tf.Variable"}, {"p": "/versions/r1.7/api_docs/python/tf/Variable/SaveSliceInfo", "k": ["spec", "__init__", "to_proto"], "r": "r1.7", "t": "tf.Variable.SaveSliceInfo"}, {"p": "/versions/r1.7/api_docs/python/tf/VariableScope", "k": ["caching_device", "constraint", "custom_getter", "dtype", "initializer", "name", "original_name_scope", "partitioner", "regularizer", "reuse", "use_resource", "__init__", "get_collection", "get_variable", "global_variables", "local_variables", "reuse_variables", "set_caching_device", "set_custom_getter", "set_dtype", "set_initializer", "set_partitioner", "set_regularizer", "set_use_resource", "trainable_variables"], "r": "r1.7", "t": "tf.VariableScope"}, {"p": "/versions/r1.7/api_docs/python/tf/WholeFileReader", "k": ["reader_ref", "supports_serialize", "__init__", "num_records_produced", "num_work_units_completed", "read", "read_up_to", "reset", "restore_state", "serialize_state"], "r": "r1.7", "t": "tf.WholeFileReader"}, {"p": "/versions/r1.7/api_docs/python/tf/abs", "k": [], "r": "r1.7", "t": "tf.abs"}, {"p": "/versions/r1.7/api_docs/python/tf/accumulate_n", "k": [], "r": "r1.7", "t": "tf.accumulate_n"}, {"p": "/versions/r1.7/api_docs/python/tf/acos", "k": [], "r": "r1.7", "t": "tf.acos"}, {"p": "/versions/r1.7/api_docs/python/tf/acosh", "k": [], "r": "r1.7", "t": "tf.acosh"}, {"p": "/versions/r1.7/api_docs/python/tf/add", "k": [], "r": "r1.7", "t": "tf.add"}, {"p": "/versions/r1.7/api_docs/python/tf/add_check_numerics_ops", "k": [], "r": "r1.7", "t": "tf.add_check_numerics_ops"}, {"p": "/versions/r1.7/api_docs/python/tf/add_n", "k": [], "r": "r1.7", "t": "tf.add_n"}, {"p": "/versions/r1.7/api_docs/python/tf/add_to_collection", "k": [], "r": "r1.7", "t": "tf.add_to_collection"}, {"p": "/versions/r1.7/api_docs/python/tf/all_variables", "k": [], "r": "r1.7", "t": "tf.all_variables"}, {"p": "/versions/r1.7/api_docs/python/tf/angle", "k": [], "r": "r1.7", "t": "tf.angle"}, {"p": "/versions/r1.7/api_docs/python/tf/app", "k": [], "r": "r1.7", "t": "tf.app"}, {"p": "/versions/r1.7/api_docs/python/tf/app/run", "k": [], "r": "r1.7", "t": "tf.app.run"}, {"p": "/versions/r1.7/api_docs/python/tf/arg_max", "k": [], "r": "r1.7", "t": "tf.arg_max"}, {"p": "/versions/r1.7/api_docs/python/tf/arg_min", "k": [], "r": "r1.7", "t": "tf.arg_min"}, {"p": "/versions/r1.7/api_docs/python/tf/argmax", "k": [], "r": "r1.7", "t": "tf.argmax"}, {"p": "/versions/r1.7/api_docs/python/tf/argmin", "k": [], "r": "r1.7", "t": "tf.argmin"}, {"p": "/versions/r1.7/api_docs/python/tf/as_dtype", "k": [], "r": "r1.7", "t": "tf.as_dtype"}, {"p": "/versions/r1.7/api_docs/python/tf/as_string", "k": [], "r": "r1.7", "t": "tf.as_string"}, {"p": "/versions/r1.7/api_docs/python/tf/asin", "k": [], "r": "r1.7", "t": "tf.asin"}, {"p": "/versions/r1.7/api_docs/python/tf/asinh", "k": [], "r": "r1.7", "t": "tf.asinh"}, {"p": "/versions/r1.7/api_docs/python/tf/assert_equal", "k": [], "r": "r1.7", "t": "tf.assert_equal"}, {"p": "/versions/r1.7/api_docs/python/tf/assert_greater", "k": [], "r": "r1.7", "t": "tf.assert_greater"}, {"p": "/versions/r1.7/api_docs/python/tf/assert_greater_equal", "k": [], "r": "r1.7", "t": "tf.assert_greater_equal"}, {"p": "/versions/r1.7/api_docs/python/tf/assert_integer", "k": [], "r": "r1.7", "t": "tf.assert_integer"}, {"p": "/versions/r1.7/api_docs/python/tf/assert_less", "k": [], "r": "r1.7", "t": "tf.assert_less"}, {"p": "/versions/r1.7/api_docs/python/tf/assert_less_equal", "k": [], "r": "r1.7", "t": "tf.assert_less_equal"}, {"p": "/versions/r1.7/api_docs/python/tf/assert_near", "k": [], "r": "r1.7", "t": "tf.assert_near"}, {"p": "/versions/r1.7/api_docs/python/tf/assert_negative", "k": [], "r": "r1.7", "t": "tf.assert_negative"}, {"p": "/versions/r1.7/api_docs/python/tf/assert_non_negative", "k": [], "r": "r1.7", "t": "tf.assert_non_negative"}, {"p": "/versions/r1.7/api_docs/python/tf/assert_non_positive", "k": [], "r": "r1.7", "t": "tf.assert_non_positive"}, {"p": "/versions/r1.7/api_docs/python/tf/assert_none_equal", "k": [], "r": "r1.7", "t": "tf.assert_none_equal"}, {"p": "/versions/r1.7/api_docs/python/tf/assert_positive", "k": [], "r": "r1.7", "t": "tf.assert_positive"}, {"p": "/versions/r1.7/api_docs/python/tf/assert_proper_iterable", "k": [], "r": "r1.7", "t": "tf.assert_proper_iterable"}, {"p": "/versions/r1.7/api_docs/python/tf/assert_rank", "k": [], "r": "r1.7", "t": "tf.assert_rank"}, {"p": "/versions/r1.7/api_docs/python/tf/assert_rank_at_least", "k": [], "r": "r1.7", "t": "tf.assert_rank_at_least"}, {"p": "/versions/r1.7/api_docs/python/tf/assert_rank_in", "k": [], "r": "r1.7", "t": "tf.assert_rank_in"}, {"p": "/versions/r1.7/api_docs/python/tf/assert_same_float_dtype", "k": [], "r": "r1.7", "t": "tf.assert_same_float_dtype"}, {"p": "/versions/r1.7/api_docs/python/tf/assert_scalar", "k": [], "r": "r1.7", "t": "tf.assert_scalar"}, {"p": "/versions/r1.7/api_docs/python/tf/assert_type", "k": [], "r": "r1.7", "t": "tf.assert_type"}, {"p": "/versions/r1.7/api_docs/python/tf/assert_variables_initialized", "k": [], "r": "r1.7", "t": "tf.assert_variables_initialized"}, {"p": "/versions/r1.7/api_docs/python/tf/assign", "k": [], "r": "r1.7", "t": "tf.assign"}, {"p": "/versions/r1.7/api_docs/python/tf/assign_add", "k": [], "r": "r1.7", "t": "tf.assign_add"}, {"p": "/versions/r1.7/api_docs/python/tf/assign_sub", "k": [], "r": "r1.7", "t": "tf.assign_sub"}, {"p": "/versions/r1.7/api_docs/python/tf/atan", "k": [], "r": "r1.7", "t": "tf.atan"}, {"p": "/versions/r1.7/api_docs/python/tf/atan2", "k": [], "r": "r1.7", "t": "tf.atan2"}, {"p": "/versions/r1.7/api_docs/python/tf/atanh", "k": [], "r": "r1.7", "t": "tf.atanh"}, {"p": "/versions/r1.7/api_docs/python/tf/batch_to_space", "k": [], "r": "r1.7", "t": "tf.batch_to_space"}, {"p": "/versions/r1.7/api_docs/python/tf/batch_to_space_nd", "k": [], "r": "r1.7", "t": "tf.batch_to_space_nd"}, {"p": "/versions/r1.7/api_docs/python/tf/betainc", "k": [], "r": "r1.7", "t": "tf.betainc"}, {"p": "/versions/r1.7/api_docs/python/tf/bincount", "k": [], "r": "r1.7", "t": "tf.bincount"}, {"p": "/versions/r1.7/api_docs/python/tf/bitcast", "k": [], "r": "r1.7", "t": "tf.bitcast"}, {"p": "/versions/r1.7/api_docs/python/tf/bitwise", "k": [], "r": "r1.7", "t": "tf.bitwise"}, {"p": "/versions/r1.7/api_docs/python/tf/bitwise/bitwise_and", "k": [], "r": "r1.7", "t": "tf.bitwise.bitwise_and"}, {"p": "/versions/r1.7/api_docs/python/tf/bitwise/bitwise_or", "k": [], "r": "r1.7", "t": "tf.bitwise.bitwise_or"}, {"p": "/versions/r1.7/api_docs/python/tf/bitwise/bitwise_xor", "k": [], "r": "r1.7", "t": "tf.bitwise.bitwise_xor"}, {"p": "/versions/r1.7/api_docs/python/tf/bitwise/invert", "k": [], "r": "r1.7", "t": "tf.bitwise.invert"}, {"p": "/versions/r1.7/api_docs/python/tf/bitwise/left_shift", "k": [], "r": "r1.7", "t": "tf.bitwise.left_shift"}, {"p": "/versions/r1.7/api_docs/python/tf/bitwise/right_shift", "k": [], "r": "r1.7", "t": "tf.bitwise.right_shift"}, {"p": "/versions/r1.7/api_docs/python/tf/boolean_mask", "k": [], "r": "r1.7", "t": "tf.boolean_mask"}, {"p": "/versions/r1.7/api_docs/python/tf/broadcast_dynamic_shape", "k": [], "r": "r1.7", "t": "tf.broadcast_dynamic_shape"}, {"p": "/versions/r1.7/api_docs/python/tf/broadcast_static_shape", "k": [], "r": "r1.7", "t": "tf.broadcast_static_shape"}, {"p": "/versions/r1.7/api_docs/python/tf/case", "k": [], "r": "r1.7", "t": "tf.case"}, {"p": "/versions/r1.7/api_docs/python/tf/cast", "k": [], "r": "r1.7", "t": "tf.cast"}, {"p": "/versions/r1.7/api_docs/python/tf/ceil", "k": [], "r": "r1.7", "t": "tf.ceil"}, {"p": "/versions/r1.7/api_docs/python/tf/check_numerics", "k": [], "r": "r1.7", "t": "tf.check_numerics"}, {"p": "/versions/r1.7/api_docs/python/tf/cholesky", "k": [], "r": "r1.7", "t": "tf.cholesky"}, {"p": "/versions/r1.7/api_docs/python/tf/cholesky_solve", "k": [], "r": "r1.7", "t": "tf.cholesky_solve"}, {"p": "/versions/r1.7/api_docs/python/tf/clip_by_average_norm", "k": [], "r": "r1.7", "t": "tf.clip_by_average_norm"}, {"p": "/versions/r1.7/api_docs/python/tf/clip_by_global_norm", "k": [], "r": "r1.7", "t": "tf.clip_by_global_norm"}, {"p": "/versions/r1.7/api_docs/python/tf/clip_by_norm", "k": [], "r": "r1.7", "t": "tf.clip_by_norm"}, {"p": "/versions/r1.7/api_docs/python/tf/clip_by_value", "k": [], "r": "r1.7", "t": "tf.clip_by_value"}, {"p": "/versions/r1.7/api_docs/python/tf/colocate_with", "k": [], "r": "r1.7", "t": "tf.colocate_with"}, {"p": "/versions/r1.7/api_docs/python/tf/compat", "k": ["bytes_or_text_types", "complex_types", "integral_types", "real_types"], "r": "r1.7", "t": "tf.compat"}, {"p": "/versions/r1.7/api_docs/python/tf/compat/as_bytes", "k": [], "r": "r1.7", "t": "tf.compat.as_bytes"}, {"p": "/versions/r1.7/api_docs/python/tf/compat/as_str_any", "k": [], "r": "r1.7", "t": "tf.compat.as_str_any"}, {"p": "/versions/r1.7/api_docs/python/tf/compat/as_text", "k": [], "r": "r1.7", "t": "tf.compat.as_text"}, {"p": "/versions/r1.7/api_docs/python/tf/compat/path_to_str", "k": [], "r": "r1.7", "t": "tf.compat.path_to_str"}, {"p": "/versions/r1.7/api_docs/python/tf/complex", "k": [], "r": "r1.7", "t": "tf.complex"}, {"p": "/versions/r1.7/api_docs/python/tf/concat", "k": [], "r": "r1.7", "t": "tf.concat"}, {"p": "/versions/r1.7/api_docs/python/tf/cond", "k": [], "r": "r1.7", "t": "tf.cond"}, {"p": "/versions/r1.7/api_docs/python/tf/confusion_matrix", "k": [], "r": "r1.7", "t": "tf.confusion_matrix"}, {"p": "/versions/r1.7/api_docs/python/tf/conj", "k": [], "r": "r1.7", "t": "tf.conj"}, {"p": "/versions/r1.7/api_docs/python/tf/constant", "k": [], "r": "r1.7", "t": "tf.constant"}, {"p": "/versions/r1.7/api_docs/python/tf/constant_initializer", "k": ["__call__", "__init__", "from_config", "get_config"], "r": "r1.7", "t": "tf.constant_initializer"}, {"p": "/versions/r1.7/api_docs/python/tf/container", "k": [], "r": "r1.7", "t": "tf.container"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib", "k": [], "r": "r1.7", "t": "tf.contrib"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/batching", "k": [], "r": "r1.7", "t": "tf.contrib.batching"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/batching/batch_function", "k": [], "r": "r1.7", "t": "tf.contrib.batching.batch_function"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/bayesflow", "k": [], "r": "r1.7", "t": "tf.contrib.bayesflow"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/bayesflow/custom_grad", "k": [], "r": "r1.7", "t": "tf.contrib.bayesflow.custom_grad"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/bayesflow/custom_grad/custom_gradient", "k": [], "r": "r1.7", "t": "tf.contrib.bayesflow.custom_grad.custom_gradient"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/bayesflow/hmc", "k": [], "r": "r1.7", "t": "tf.contrib.bayesflow.hmc"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/bayesflow/hmc/kernel", "k": [], "r": "r1.7", "t": "tf.contrib.bayesflow.hmc.kernel"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/bayesflow/hmc/sample_chain", "k": [], "r": "r1.7", "t": "tf.contrib.bayesflow.hmc.sample_chain"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/bayesflow/metropolis_hastings", "k": [], "r": "r1.7", "t": "tf.contrib.bayesflow.metropolis_hastings"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/bayesflow/metropolis_hastings/evolve", "k": [], "r": "r1.7", "t": "tf.contrib.bayesflow.metropolis_hastings.evolve"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/bayesflow/metropolis_hastings/kernel", "k": [], "r": "r1.7", "t": "tf.contrib.bayesflow.metropolis_hastings.kernel"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/bayesflow/metropolis_hastings/proposal_normal", "k": [], "r": "r1.7", "t": "tf.contrib.bayesflow.metropolis_hastings.proposal_normal"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/bayesflow/metropolis_hastings/proposal_uniform", "k": [], "r": "r1.7", "t": "tf.contrib.bayesflow.metropolis_hastings.proposal_uniform"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/bayesflow/monte_carlo", "k": [], "r": "r1.7", "t": "tf.contrib.bayesflow.monte_carlo"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/bayesflow/monte_carlo/expectation", "k": [], "r": "r1.7", "t": "tf.contrib.bayesflow.monte_carlo.expectation"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/bayesflow/monte_carlo/expectation_importance_sampler", "k": [], "r": "r1.7", "t": "tf.contrib.bayesflow.monte_carlo.expectation_importance_sampler"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/bayesflow/monte_carlo/expectation_importance_sampler_logspace", "k": [], "r": "r1.7", "t": "tf.contrib.bayesflow.monte_carlo.expectation_importance_sampler_logspace"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/bayesflow/optimizers", "k": [], "r": "r1.7", "t": "tf.contrib.bayesflow.optimizers"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/bayesflow/optimizers/SGLDOptimizer", "k": ["variable_scope", "__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.7", "t": "tf.contrib.bayesflow.optimizers.SGLDOptimizer"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/bayesflow/optimizers/VariationalSGDOptimizer", "k": ["variable_scope", "__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.7", "t": "tf.contrib.bayesflow.optimizers.VariationalSGDOptimizer"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/cloud", "k": [], "r": "r1.7", "t": "tf.contrib.cloud"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/cloud/BigQueryReader", "k": ["reader_ref", "supports_serialize", "__init__", "num_records_produced", "num_work_units_completed", "partitions", "read", "read_up_to", "reset", "restore_state", "serialize_state"], "r": "r1.7", "t": "tf.contrib.cloud.BigQueryReader"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/cluster_resolver", "k": [], "r": "r1.7", "t": "tf.contrib.cluster_resolver"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/cluster_resolver/ClusterResolver", "k": ["cluster_spec", "master"], "r": "r1.7", "t": "tf.contrib.cluster_resolver.ClusterResolver"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/cluster_resolver/GceClusterResolver", "k": ["__init__", "cluster_spec", "master"], "r": "r1.7", "t": "tf.contrib.cluster_resolver.GceClusterResolver"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/cluster_resolver/SimpleClusterResolver", "k": ["__init__", "cluster_spec", "master"], "r": "r1.7", "t": "tf.contrib.cluster_resolver.SimpleClusterResolver"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/cluster_resolver/TPUClusterResolver", "k": ["__deepcopy__", "__init__", "cluster_spec", "get_master", "master"], "r": "r1.7", "t": "tf.contrib.cluster_resolver.TPUClusterResolver"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/cluster_resolver/UnionClusterResolver", "k": ["__init__", "cluster_spec", "master"], "r": "r1.7", "t": "tf.contrib.cluster_resolver.UnionClusterResolver"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/coder", "k": [], "r": "r1.7", "t": "tf.contrib.coder"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/compiler", "k": [], "r": "r1.7", "t": "tf.contrib.compiler"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/copy_graph", "k": [], "r": "r1.7", "t": "tf.contrib.copy_graph"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/copy_graph/copy_op_to_graph", "k": [], "r": "r1.7", "t": "tf.contrib.copy_graph.copy_op_to_graph"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/copy_graph/copy_variable_to_graph", "k": [], "r": "r1.7", "t": "tf.contrib.copy_graph.copy_variable_to_graph"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/copy_graph/get_copied_op", "k": [], "r": "r1.7", "t": "tf.contrib.copy_graph.get_copied_op"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/crf", "k": [], "r": "r1.7", "t": "tf.contrib.crf"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/crf/CrfDecodeBackwardRnnCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.7", "t": "tf.contrib.crf.CrfDecodeBackwardRnnCell"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/crf/CrfDecodeForwardRnnCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.7", "t": "tf.contrib.crf.CrfDecodeForwardRnnCell"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/crf/CrfForwardRnnCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.7", "t": "tf.contrib.crf.CrfForwardRnnCell"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/crf/crf_binary_score", "k": [], "r": "r1.7", "t": "tf.contrib.crf.crf_binary_score"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/crf/crf_decode", "k": [], "r": "r1.7", "t": "tf.contrib.crf.crf_decode"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/crf/crf_log_likelihood", "k": [], "r": "r1.7", "t": "tf.contrib.crf.crf_log_likelihood"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/crf/crf_log_norm", "k": [], "r": "r1.7", "t": "tf.contrib.crf.crf_log_norm"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/crf/crf_sequence_score", "k": [], "r": "r1.7", "t": "tf.contrib.crf.crf_sequence_score"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/crf/crf_unary_score", "k": [], "r": "r1.7", "t": "tf.contrib.crf.crf_unary_score"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/crf/viterbi_decode", "k": [], "r": "r1.7", "t": "tf.contrib.crf.viterbi_decode"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/cudnn_rnn", "k": [], "r": "r1.7", "t": "tf.contrib.cudnn_rnn"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/cudnn_rnn/CudnnCompatibleGRUCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.7", "t": "tf.contrib.cudnn_rnn.CudnnCompatibleGRUCell"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/cudnn_rnn/CudnnCompatibleLSTMCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.7", "t": "tf.contrib.cudnn_rnn.CudnnCompatibleLSTMCell"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/cudnn_rnn/CudnnGRU", "k": ["activity_regularizer", "canonical_bias_shapes", "canonical_weight_shapes", "direction", "dtype", "graph", "input", "input_mode", "input_shape", "input_size", "losses", "name", "non_trainable_variables", "non_trainable_weights", "num_dirs", "num_layers", "num_units", "output", "output_shape", "rnn_mode", "saveable", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "state_shape"], "r": "r1.7", "t": "tf.contrib.cudnn_rnn.CudnnGRU"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/cudnn_rnn/CudnnGRUSaveable", "k": ["__init__", "restore"], "r": "r1.7", "t": "tf.contrib.cudnn_rnn.CudnnGRUSaveable"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/cudnn_rnn/CudnnLSTM", "k": ["activity_regularizer", "canonical_bias_shapes", "canonical_weight_shapes", "direction", "dtype", "graph", "input", "input_mode", "input_shape", "input_size", "losses", "name", "non_trainable_variables", "non_trainable_weights", "num_dirs", "num_layers", "num_units", "output", "output_shape", "rnn_mode", "saveable", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "state_shape"], "r": "r1.7", "t": "tf.contrib.cudnn_rnn.CudnnLSTM"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/cudnn_rnn/CudnnLSTMSaveable", "k": ["__init__", "restore"], "r": "r1.7", "t": "tf.contrib.cudnn_rnn.CudnnLSTMSaveable"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/cudnn_rnn/CudnnRNNRelu", "k": ["activity_regularizer", "canonical_bias_shapes", "canonical_weight_shapes", "direction", "dtype", "graph", "input", "input_mode", "input_shape", "input_size", "losses", "name", "non_trainable_variables", "non_trainable_weights", "num_dirs", "num_layers", "num_units", "output", "output_shape", "rnn_mode", "saveable", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "state_shape"], "r": "r1.7", "t": "tf.contrib.cudnn_rnn.CudnnRNNRelu"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/cudnn_rnn/CudnnRNNReluSaveable", "k": ["__init__", "restore"], "r": "r1.7", "t": "tf.contrib.cudnn_rnn.CudnnRNNReluSaveable"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/cudnn_rnn/CudnnRNNTanh", "k": ["activity_regularizer", "canonical_bias_shapes", "canonical_weight_shapes", "direction", "dtype", "graph", "input", "input_mode", "input_shape", "input_size", "losses", "name", "non_trainable_variables", "non_trainable_weights", "num_dirs", "num_layers", "num_units", "output", "output_shape", "rnn_mode", "saveable", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "state_shape"], "r": "r1.7", "t": "tf.contrib.cudnn_rnn.CudnnRNNTanh"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/cudnn_rnn/CudnnRNNTanhSaveable", "k": ["__init__", "restore"], "r": "r1.7", "t": "tf.contrib.cudnn_rnn.CudnnRNNTanhSaveable"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/data", "k": [], "r": "r1.7", "t": "tf.contrib.data"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/data/Counter", "k": [], "r": "r1.7", "t": "tf.contrib.data.Counter"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/data/SqlDataset", "k": ["output_classes", "output_shapes", "output_types", "__init__", "apply", "batch", "cache", "concatenate", "filter", "flat_map", "from_generator", "from_sparse_tensor_slices", "from_tensor_slices", "from_tensors", "interleave", "list_files", "make_initializable_iterator", "make_one_shot_iterator", "map", "padded_batch", "prefetch", "range", "repeat", "shard", "shuffle", "skip", "take", "zip"], "r": "r1.7", "t": "tf.contrib.data.SqlDataset"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/data/batch_and_drop_remainder", "k": [], "r": "r1.7", "t": "tf.contrib.data.batch_and_drop_remainder"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/data/bucket_by_sequence_length", "k": [], "r": "r1.7", "t": "tf.contrib.data.bucket_by_sequence_length"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/data/dense_to_sparse_batch", "k": [], "r": "r1.7", "t": "tf.contrib.data.dense_to_sparse_batch"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/data/enumerate_dataset", "k": [], "r": "r1.7", "t": "tf.contrib.data.enumerate_dataset"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/data/get_single_element", "k": [], "r": "r1.7", "t": "tf.contrib.data.get_single_element"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/data/group_by_window", "k": [], "r": "r1.7", "t": "tf.contrib.data.group_by_window"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/data/ignore_errors", "k": [], "r": "r1.7", "t": "tf.contrib.data.ignore_errors"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/data/make_batched_features_dataset", "k": [], "r": "r1.7", "t": "tf.contrib.data.make_batched_features_dataset"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/data/make_saveable_from_iterator", "k": [], "r": "r1.7", "t": "tf.contrib.data.make_saveable_from_iterator"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/data/map_and_batch", "k": [], "r": "r1.7", "t": "tf.contrib.data.map_and_batch"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/data/padded_batch_and_drop_remainder", "k": [], "r": "r1.7", "t": "tf.contrib.data.padded_batch_and_drop_remainder"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/data/parallel_interleave", "k": [], "r": "r1.7", "t": "tf.contrib.data.parallel_interleave"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/data/read_batch_features", "k": [], "r": "r1.7", "t": "tf.contrib.data.read_batch_features"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/data/rejection_resample", "k": [], "r": "r1.7", "t": "tf.contrib.data.rejection_resample"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/data/scan", "k": [], "r": "r1.7", "t": "tf.contrib.data.scan"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/data/shuffle_and_repeat", "k": [], "r": "r1.7", "t": "tf.contrib.data.shuffle_and_repeat"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/data/sliding_window_batch", "k": [], "r": "r1.7", "t": "tf.contrib.data.sliding_window_batch"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/data/sloppy_interleave", "k": [], "r": "r1.7", "t": "tf.contrib.data.sloppy_interleave"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/data/unbatch", "k": [], "r": "r1.7", "t": "tf.contrib.data.unbatch"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/decision_trees", "k": [], "r": "r1.7", "t": "tf.contrib.decision_trees"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/deprecated", "k": [], "r": "r1.7", "t": "tf.contrib.deprecated"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/deprecated/audio_summary", "k": [], "r": "r1.7", "t": "tf.contrib.deprecated.audio_summary"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/deprecated/histogram_summary", "k": [], "r": "r1.7", "t": "tf.contrib.deprecated.histogram_summary"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/deprecated/image_summary", "k": [], "r": "r1.7", "t": "tf.contrib.deprecated.image_summary"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/deprecated/merge_all_summaries", "k": [], "r": "r1.7", "t": "tf.contrib.deprecated.merge_all_summaries"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/deprecated/merge_summary", "k": [], "r": "r1.7", "t": "tf.contrib.deprecated.merge_summary"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/deprecated/scalar_summary", "k": [], "r": "r1.7", "t": "tf.contrib.deprecated.scalar_summary"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/distributions", "k": ["FULLY_REPARAMETERIZED", "NOT_REPARAMETERIZED"], "r": "r1.7", "t": "tf.contrib.distributions"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/distributions/Autoregressive", "k": ["allow_nan_stats", "batch_shape", "distribution0", "distribution_fn", "dtype", "event_shape", "name", "num_steps", "parameters", "reparameterization_type", "sample0", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.7", "t": "tf.contrib.distributions.Autoregressive"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/distributions/BetaWithSoftplusConcentration", "k": ["allow_nan_stats", "batch_shape", "concentration0", "concentration1", "dtype", "event_shape", "name", "parameters", "reparameterization_type", "total_concentration", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.7", "t": "tf.contrib.distributions.BetaWithSoftplusConcentration"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/distributions/Binomial", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "logits", "name", "parameters", "probs", "reparameterization_type", "total_count", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.7", "t": "tf.contrib.distributions.Binomial"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/distributions/Cauchy", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.7", "t": "tf.contrib.distributions.Cauchy"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/distributions/Chi2", "k": ["allow_nan_stats", "batch_shape", "concentration", "df", "dtype", "event_shape", "name", "parameters", "rate", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.7", "t": "tf.contrib.distributions.Chi2"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/distributions/Chi2WithAbsDf", "k": ["allow_nan_stats", "batch_shape", "concentration", "df", "dtype", "event_shape", "name", "parameters", "rate", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.7", "t": "tf.contrib.distributions.Chi2WithAbsDf"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/distributions/ConditionalDistribution", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "name", "parameters", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.7", "t": "tf.contrib.distributions.ConditionalDistribution"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/distributions/ConditionalTransformedDistribution", "k": ["allow_nan_stats", "batch_shape", "bijector", "distribution", "dtype", "event_shape", "name", "parameters", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.7", "t": "tf.contrib.distributions.ConditionalTransformedDistribution"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/distributions/Deterministic", "k": ["allow_nan_stats", "atol", "batch_shape", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "rtol", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.7", "t": "tf.contrib.distributions.Deterministic"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/distributions/ExpRelaxedOneHotCategorical", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "event_size", "logits", "name", "parameters", "probs", "reparameterization_type", "temperature", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.7", "t": "tf.contrib.distributions.ExpRelaxedOneHotCategorical"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/distributions/ExponentialWithSoftplusRate", "k": ["allow_nan_stats", "batch_shape", "concentration", "dtype", "event_shape", "name", "parameters", "rate", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.7", "t": "tf.contrib.distributions.ExponentialWithSoftplusRate"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/distributions/GammaWithSoftplusConcentrationRate", "k": ["allow_nan_stats", "batch_shape", "concentration", "dtype", "event_shape", "name", "parameters", "rate", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.7", "t": "tf.contrib.distributions.GammaWithSoftplusConcentrationRate"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/distributions/Geometric", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "logits", "name", "parameters", "probs", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.7", "t": "tf.contrib.distributions.Geometric"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/distributions/HalfNormal", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "name", "parameters", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.7", "t": "tf.contrib.distributions.HalfNormal"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/distributions/Independent", "k": ["allow_nan_stats", "batch_shape", "distribution", "dtype", "event_shape", "name", "parameters", "reinterpreted_batch_ndims", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.7", "t": "tf.contrib.distributions.Independent"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/distributions/InverseGamma", "k": ["allow_nan_stats", "batch_shape", "concentration", "dtype", "event_shape", "name", "parameters", "rate", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.7", "t": "tf.contrib.distributions.InverseGamma"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/distributions/InverseGammaWithSoftplusConcentrationRate", "k": ["allow_nan_stats", "batch_shape", "concentration", "dtype", "event_shape", "name", "parameters", "rate", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.7", "t": "tf.contrib.distributions.InverseGammaWithSoftplusConcentrationRate"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/distributions/Kumaraswamy", "k": ["allow_nan_stats", "batch_shape", "bijector", "concentration0", "concentration1", "distribution", "dtype", "event_shape", "name", "parameters", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.7", "t": "tf.contrib.distributions.Kumaraswamy"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/distributions/LaplaceWithSoftplusScale", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.7", "t": "tf.contrib.distributions.LaplaceWithSoftplusScale"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/distributions/Logistic", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.7", "t": "tf.contrib.distributions.Logistic"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/distributions/Mixture", "k": ["allow_nan_stats", "batch_shape", "cat", "components", "dtype", "event_shape", "name", "num_components", "parameters", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "entropy_lower_bound", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.7", "t": "tf.contrib.distributions.Mixture"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/distributions/MixtureSameFamily", "k": ["allow_nan_stats", "batch_shape", "components_distribution", "dtype", "event_shape", "mixture_distribution", "name", "parameters", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.7", "t": "tf.contrib.distributions.MixtureSameFamily"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/distributions/MultivariateNormalDiag", "k": ["allow_nan_stats", "batch_shape", "bijector", "distribution", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.7", "t": "tf.contrib.distributions.MultivariateNormalDiag"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/distributions/MultivariateNormalDiagPlusLowRank", "k": ["allow_nan_stats", "batch_shape", "bijector", "distribution", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.7", "t": "tf.contrib.distributions.MultivariateNormalDiagPlusLowRank"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/distributions/MultivariateNormalDiagWithSoftplusScale", "k": ["allow_nan_stats", "batch_shape", "bijector", "distribution", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.7", "t": "tf.contrib.distributions.MultivariateNormalDiagWithSoftplusScale"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/distributions/MultivariateNormalFullCovariance", "k": ["allow_nan_stats", "batch_shape", "bijector", "distribution", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.7", "t": "tf.contrib.distributions.MultivariateNormalFullCovariance"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/distributions/MultivariateNormalTriL", "k": ["allow_nan_stats", "batch_shape", "bijector", "distribution", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.7", "t": "tf.contrib.distributions.MultivariateNormalTriL"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/distributions/NegativeBinomial", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "logits", "name", "parameters", "probs", "reparameterization_type", "total_count", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.7", "t": "tf.contrib.distributions.NegativeBinomial"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/distributions/NormalWithSoftplusScale", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.7", "t": "tf.contrib.distributions.NormalWithSoftplusScale"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/distributions/OneHotCategorical", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "event_size", "logits", "name", "parameters", "probs", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.7", "t": "tf.contrib.distributions.OneHotCategorical"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/distributions/Poisson", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "log_rate", "name", "parameters", "rate", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.7", "t": "tf.contrib.distributions.Poisson"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/distributions/PoissonLogNormalQuadratureCompound", "k": ["allow_nan_stats", "batch_shape", "distribution", "dtype", "event_shape", "loc", "mixture_distribution", "name", "parameters", "quadrature_size", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.7", "t": "tf.contrib.distributions.PoissonLogNormalQuadratureCompound"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/distributions/QuantizedDistribution", "k": ["allow_nan_stats", "batch_shape", "distribution", "dtype", "event_shape", "name", "parameters", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.7", "t": "tf.contrib.distributions.QuantizedDistribution"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/distributions/RelaxedBernoulli", "k": ["allow_nan_stats", "batch_shape", "bijector", "distribution", "dtype", "event_shape", "logits", "name", "parameters", "probs", "reparameterization_type", "temperature", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.7", "t": "tf.contrib.distributions.RelaxedBernoulli"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/distributions/RelaxedOneHotCategorical", "k": ["allow_nan_stats", "batch_shape", "bijector", "distribution", "dtype", "event_shape", "name", "parameters", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.7", "t": "tf.contrib.distributions.RelaxedOneHotCategorical"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/distributions/SinhArcsinh", "k": ["allow_nan_stats", "batch_shape", "bijector", "distribution", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "skewness", "tailweight", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.7", "t": "tf.contrib.distributions.SinhArcsinh"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/distributions/StudentTWithAbsDfSoftplusScale", "k": ["allow_nan_stats", "batch_shape", "df", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.7", "t": "tf.contrib.distributions.StudentTWithAbsDfSoftplusScale"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/distributions/TransformedDistribution", "k": ["allow_nan_stats", "batch_shape", "bijector", "distribution", "dtype", "event_shape", "name", "parameters", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.7", "t": "tf.contrib.distributions.TransformedDistribution"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/distributions/VectorDeterministic", "k": ["allow_nan_stats", "atol", "batch_shape", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "rtol", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.7", "t": "tf.contrib.distributions.VectorDeterministic"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/distributions/VectorDiffeomixture", "k": ["allow_nan_stats", "batch_shape", "distribution", "dtype", "endpoint_affine", "event_shape", "grid", "interpolated_affine", "mixture_distribution", "name", "parameters", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.7", "t": "tf.contrib.distributions.VectorDiffeomixture"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/distributions/VectorExponentialDiag", "k": ["allow_nan_stats", "batch_shape", "bijector", "distribution", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.7", "t": "tf.contrib.distributions.VectorExponentialDiag"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/distributions/VectorLaplaceDiag", "k": ["allow_nan_stats", "batch_shape", "bijector", "distribution", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.7", "t": "tf.contrib.distributions.VectorLaplaceDiag"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/distributions/VectorSinhArcsinhDiag", "k": ["allow_nan_stats", "batch_shape", "bijector", "distribution", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "skewness", "tailweight", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.7", "t": "tf.contrib.distributions.VectorSinhArcsinhDiag"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/distributions/WishartCholesky", "k": ["allow_nan_stats", "batch_shape", "cholesky_input_output_matrices", "df", "dimension", "dtype", "event_shape", "name", "parameters", "reparameterization_type", "scale_operator", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_normalization", "log_prob", "log_survival_function", "mean", "mean_log_det", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "scale", "stddev", "survival_function", "variance"], "r": "r1.7", "t": "tf.contrib.distributions.WishartCholesky"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/distributions/WishartFull", "k": ["allow_nan_stats", "batch_shape", "cholesky_input_output_matrices", "df", "dimension", "dtype", "event_shape", "name", "parameters", "reparameterization_type", "scale_operator", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_normalization", "log_prob", "log_survival_function", "mean", "mean_log_det", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "scale", "stddev", "survival_function", "variance"], "r": "r1.7", "t": "tf.contrib.distributions.WishartFull"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/distributions/assign_log_moving_mean_exp", "k": [], "r": "r1.7", "t": "tf.contrib.distributions.assign_log_moving_mean_exp"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/distributions/assign_moving_mean_variance", "k": [], "r": "r1.7", "t": "tf.contrib.distributions.assign_moving_mean_variance"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/distributions/auto_correlation", "k": [], "r": "r1.7", "t": "tf.contrib.distributions.auto_correlation"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/distributions/bijectors", "k": [], "r": "r1.7", "t": "tf.contrib.distributions.bijectors"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/distributions/bijectors/AbsoluteValue", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.7", "t": "tf.contrib.distributions.bijectors.AbsoluteValue"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/distributions/bijectors/Affine", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "scale", "shift", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.7", "t": "tf.contrib.distributions.bijectors.Affine"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/distributions/bijectors/AffineLinearOperator", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "scale", "shift", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.7", "t": "tf.contrib.distributions.bijectors.AffineLinearOperator"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/distributions/bijectors/BatchNormalization", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.7", "t": "tf.contrib.distributions.bijectors.BatchNormalization"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/distributions/bijectors/Chain", "k": ["bijectors", "dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.7", "t": "tf.contrib.distributions.bijectors.Chain"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/distributions/bijectors/CholeskyOuterProduct", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.7", "t": "tf.contrib.distributions.bijectors.CholeskyOuterProduct"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/distributions/bijectors/ConditionalBijector", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.7", "t": "tf.contrib.distributions.bijectors.ConditionalBijector"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/distributions/bijectors/Exp", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "power", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.7", "t": "tf.contrib.distributions.bijectors.Exp"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/distributions/bijectors/Gumbel", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "loc", "name", "scale", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.7", "t": "tf.contrib.distributions.bijectors.Gumbel"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/distributions/bijectors/Inline", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.7", "t": "tf.contrib.distributions.bijectors.Inline"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/distributions/bijectors/Invert", "k": ["bijector", "dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.7", "t": "tf.contrib.distributions.bijectors.Invert"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/distributions/bijectors/Kumaraswamy", "k": ["concentration0", "concentration1", "dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.7", "t": "tf.contrib.distributions.bijectors.Kumaraswamy"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/distributions/bijectors/MaskedAutoregressiveFlow", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.7", "t": "tf.contrib.distributions.bijectors.MaskedAutoregressiveFlow"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/distributions/bijectors/Permute", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "permutation", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.7", "t": "tf.contrib.distributions.bijectors.Permute"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/distributions/bijectors/PowerTransform", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "power", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.7", "t": "tf.contrib.distributions.bijectors.PowerTransform"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/distributions/bijectors/RealNVP", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.7", "t": "tf.contrib.distributions.bijectors.RealNVP"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/distributions/bijectors/Reshape", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.7", "t": "tf.contrib.distributions.bijectors.Reshape"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/distributions/bijectors/Sigmoid", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.7", "t": "tf.contrib.distributions.bijectors.Sigmoid"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/distributions/bijectors/SigmoidCentered", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.7", "t": "tf.contrib.distributions.bijectors.SigmoidCentered"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/distributions/bijectors/SinhArcsinh", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "skewness", "tailweight", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.7", "t": "tf.contrib.distributions.bijectors.SinhArcsinh"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/distributions/bijectors/SoftmaxCentered", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.7", "t": "tf.contrib.distributions.bijectors.SoftmaxCentered"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/distributions/bijectors/Softplus", "k": ["dtype", "event_ndims", "graph_parents", "hinge_softness", "is_constant_jacobian", "name", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.7", "t": "tf.contrib.distributions.bijectors.Softplus"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/distributions/bijectors/masked_autoregressive_default_template", "k": [], "r": "r1.7", "t": "tf.contrib.distributions.bijectors.masked_autoregressive_default_template"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/distributions/bijectors/masked_dense", "k": [], "r": "r1.7", "t": "tf.contrib.distributions.bijectors.masked_dense"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/distributions/bijectors/real_nvp_default_template", "k": [], "r": "r1.7", "t": "tf.contrib.distributions.bijectors.real_nvp_default_template"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/distributions/estimator_head_distribution_regression", "k": [], "r": "r1.7", "t": "tf.contrib.distributions.estimator_head_distribution_regression"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/distributions/fill_triangular", "k": [], "r": "r1.7", "t": "tf.contrib.distributions.fill_triangular"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/distributions/matrix_diag_transform", "k": [], "r": "r1.7", "t": "tf.contrib.distributions.matrix_diag_transform"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/distributions/moving_mean_variance", "k": [], "r": "r1.7", "t": "tf.contrib.distributions.moving_mean_variance"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/distributions/normal_conjugates_known_scale_posterior", "k": [], "r": "r1.7", "t": "tf.contrib.distributions.normal_conjugates_known_scale_posterior"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/distributions/normal_conjugates_known_scale_predictive", "k": [], "r": "r1.7", "t": "tf.contrib.distributions.normal_conjugates_known_scale_predictive"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/distributions/percentile", "k": [], "r": "r1.7", "t": "tf.contrib.distributions.percentile"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/distributions/quadrature_scheme_lognormal_gauss_hermite", "k": [], "r": "r1.7", "t": "tf.contrib.distributions.quadrature_scheme_lognormal_gauss_hermite"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/distributions/quadrature_scheme_lognormal_quantiles", "k": [], "r": "r1.7", "t": "tf.contrib.distributions.quadrature_scheme_lognormal_quantiles"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/distributions/quadrature_scheme_softmaxnormal_gauss_hermite", "k": [], "r": "r1.7", "t": "tf.contrib.distributions.quadrature_scheme_softmaxnormal_gauss_hermite"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/distributions/quadrature_scheme_softmaxnormal_quantiles", "k": [], "r": "r1.7", "t": "tf.contrib.distributions.quadrature_scheme_softmaxnormal_quantiles"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/distributions/reduce_weighted_logsumexp", "k": [], "r": "r1.7", "t": "tf.contrib.distributions.reduce_weighted_logsumexp"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/distributions/softplus_inverse", "k": [], "r": "r1.7", "t": "tf.contrib.distributions.softplus_inverse"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/distributions/tridiag", "k": [], "r": "r1.7", "t": "tf.contrib.distributions.tridiag"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/eager", "k": ["DEVICE_PLACEMENT_EXPLICIT", "DEVICE_PLACEMENT_SILENT", "DEVICE_PLACEMENT_WARN"], "r": "r1.7", "t": "tf.contrib.eager"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/eager/Checkpoint", "k": ["save_counter", "__init__", "__setattr__", "restore", "save"], "r": "r1.7", "t": "tf.contrib.eager.Checkpoint"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/eager/Checkpointable", "k": ["__setattr__"], "r": "r1.7", "t": "tf.contrib.eager.Checkpointable"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/eager/CheckpointableSaver", "k": ["__init__", "restore", "save"], "r": "r1.7", "t": "tf.contrib.eager.CheckpointableSaver"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/eager/EagerVariableStore", "k": ["__init__", "as_default", "copy", "non_trainable_variables", "trainable_variables", "variables"], "r": "r1.7", "t": "tf.contrib.eager.EagerVariableStore"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/eager/GradientTape", "k": ["__enter__", "__exit__", "__init__", "gradient", "watch", "watched_variables"], "r": "r1.7", "t": "tf.contrib.eager.GradientTape"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/eager/Iterator", "k": ["output_classes", "output_shapes", "output_types", "__init__", "__iter__", "__next__", "get_next", "next"], "r": "r1.7", "t": "tf.contrib.eager.Iterator"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/eager/Network", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "layers", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_layer", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "track_layer"], "r": "r1.7", "t": "tf.contrib.eager.Network"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/eager/Saver", "k": ["__init__", "restore", "save"], "r": "r1.7", "t": "tf.contrib.eager.Saver"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/eager/Sequential", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "layers", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_layer", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "track_layer"], "r": "r1.7", "t": "tf.contrib.eager.Sequential"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/eager/Variable", "k": ["SaveSliceInfo", "constraint", "create", "device", "dtype", "graph", "handle", "initial_value", "initializer", "name", "op", "shape", "__abs__", "__add__", "__and__", "__bool__", "__div__", "__floordiv__", "__ge__", "__getitem__", "__gt__", "__iadd__", "__idiv__", "__imul__", "__init__", "__int__", "__invert__", "__ipow__", "__irealdiv__", "__isub__", "__iter__", "__itruediv__", "__le__", "__lt__", "__matmul__", "__mod__", "__mul__", "__neg__", "__nonzero__", "__or__", "__pow__", "__radd__", "__rand__", "__rdiv__", "__rfloordiv__", "__rmatmul__", "__rmod__", "__rmul__", "__ror__", "__rpow__", "__rsub__", "__rtruediv__", "__rxor__", "__sub__", "__truediv__", "__xor__", "assign", "assign_add", "assign_sub", "count_up_to", "eval", "from_proto", "get_shape", "initialized_value", "load", "numpy", "read_value", "scatter_sub", "set_shape", "sparse_read", "to_proto", "value", "__array_priority__"], "r": "r1.7", "t": "tf.contrib.eager.Variable"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/eager/add_execution_callback", "k": [], "r": "r1.7", "t": "tf.contrib.eager.add_execution_callback"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/eager/clear_execution_callbacks", "k": [], "r": "r1.7", "t": "tf.contrib.eager.clear_execution_callbacks"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/eager/defun", "k": [], "r": "r1.7", "t": "tf.contrib.eager.defun"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/eager/get_optimizer_variables", "k": [], "r": "r1.7", "t": "tf.contrib.eager.get_optimizer_variables"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/eager/gradients_function", "k": [], "r": "r1.7", "t": "tf.contrib.eager.gradients_function"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/eager/implicit_gradients", "k": [], "r": "r1.7", "t": "tf.contrib.eager.implicit_gradients"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/eager/implicit_value_and_gradients", "k": [], "r": "r1.7", "t": "tf.contrib.eager.implicit_value_and_gradients"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/eager/inf_callback", "k": [], "r": "r1.7", "t": "tf.contrib.eager.inf_callback"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/eager/inf_nan_callback", "k": [], "r": "r1.7", "t": "tf.contrib.eager.inf_nan_callback"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/eager/list_devices", "k": [], "r": "r1.7", "t": "tf.contrib.eager.list_devices"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/eager/make_template", "k": [], "r": "r1.7", "t": "tf.contrib.eager.make_template"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/eager/metrics", "k": [], "r": "r1.7", "t": "tf.contrib.eager.metrics"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/eager/metrics/Accuracy", "k": ["name", "variables", "__call__", "__init__", "add_variable", "aggregate", "build", "call", "init_variables", "result", "value"], "r": "r1.7", "t": "tf.contrib.eager.metrics.Accuracy"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/eager/metrics/Mean", "k": ["name", "variables", "__call__", "__init__", "add_variable", "aggregate", "build", "call", "init_variables", "result", "value"], "r": "r1.7", "t": "tf.contrib.eager.metrics.Mean"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/eager/metrics/Metric", "k": ["name", "variables", "__call__", "__init__", "add_variable", "aggregate", "build", "call", "init_variables", "result", "value"], "r": "r1.7", "t": "tf.contrib.eager.metrics.Metric"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/eager/nan_callback", "k": [], "r": "r1.7", "t": "tf.contrib.eager.nan_callback"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/eager/num_gpus", "k": [], "r": "r1.7", "t": "tf.contrib.eager.num_gpus"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/eager/py_func", "k": [], "r": "r1.7", "t": "tf.contrib.eager.py_func"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/eager/restore_network_checkpoint", "k": [], "r": "r1.7", "t": "tf.contrib.eager.restore_network_checkpoint"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/eager/restore_variables_on_create", "k": [], "r": "r1.7", "t": "tf.contrib.eager.restore_variables_on_create"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/eager/run", "k": [], "r": "r1.7", "t": "tf.contrib.eager.run"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/eager/run_test_in_graph_and_eager_modes", "k": [], "r": "r1.7", "t": "tf.contrib.eager.run_test_in_graph_and_eager_modes"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/eager/save_network_checkpoint", "k": [], "r": "r1.7", "t": "tf.contrib.eager.save_network_checkpoint"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/eager/seterr", "k": [], "r": "r1.7", "t": "tf.contrib.eager.seterr"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/eager/value_and_gradients_function", "k": [], "r": "r1.7", "t": "tf.contrib.eager.value_and_gradients_function"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/estimator", "k": [], "r": "r1.7", "t": "tf.contrib.estimator"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/estimator/DNNEstimator", "k": ["config", "model_dir", "model_fn", "params", "__init__", "evaluate", "export_savedmodel", "get_variable_names", "get_variable_value", "latest_checkpoint", "predict", "train"], "r": "r1.7", "t": "tf.contrib.estimator.DNNEstimator"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/estimator/DNNLinearCombinedEstimator", "k": ["config", "model_dir", "model_fn", "params", "__init__", "evaluate", "export_savedmodel", "get_variable_names", "get_variable_value", "latest_checkpoint", "predict", "train"], "r": "r1.7", "t": "tf.contrib.estimator.DNNLinearCombinedEstimator"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/estimator/LinearEstimator", "k": ["config", "model_dir", "model_fn", "params", "__init__", "evaluate", "export_savedmodel", "get_variable_names", "get_variable_value", "latest_checkpoint", "predict", "train"], "r": "r1.7", "t": "tf.contrib.estimator.LinearEstimator"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/estimator/TowerOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "has_been_used", "minimize", "variables", "COLLECTION_FOR_GRAPH_STATES", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.7", "t": "tf.contrib.estimator.TowerOptimizer"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/estimator/add_metrics", "k": [], "r": "r1.7", "t": "tf.contrib.estimator.add_metrics"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/estimator/binary_classification_head", "k": [], "r": "r1.7", "t": "tf.contrib.estimator.binary_classification_head"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/estimator/call_logit_fn", "k": [], "r": "r1.7", "t": "tf.contrib.estimator.call_logit_fn"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/estimator/clip_gradients_by_norm", "k": [], "r": "r1.7", "t": "tf.contrib.estimator.clip_gradients_by_norm"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/estimator/dnn_logit_fn_builder", "k": [], "r": "r1.7", "t": "tf.contrib.estimator.dnn_logit_fn_builder"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/estimator/forward_features", "k": [], "r": "r1.7", "t": "tf.contrib.estimator.forward_features"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/estimator/linear_logit_fn_builder", "k": [], "r": "r1.7", "t": "tf.contrib.estimator.linear_logit_fn_builder"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/estimator/multi_class_head", "k": [], "r": "r1.7", "t": "tf.contrib.estimator.multi_class_head"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/estimator/multi_head", "k": [], "r": "r1.7", "t": "tf.contrib.estimator.multi_head"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/estimator/multi_label_head", "k": [], "r": "r1.7", "t": "tf.contrib.estimator.multi_label_head"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/estimator/poisson_regression_head", "k": [], "r": "r1.7", "t": "tf.contrib.estimator.poisson_regression_head"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/estimator/regression_head", "k": [], "r": "r1.7", "t": "tf.contrib.estimator.regression_head"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/estimator/replicate_model_fn", "k": [], "r": "r1.7", "t": "tf.contrib.estimator.replicate_model_fn"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/factorization", "k": ["COSINE_DISTANCE", "KMEANS_PLUS_PLUS_INIT", "RANDOM_INIT", "SQUARED_EUCLIDEAN_DISTANCE"], "r": "r1.7", "t": "tf.contrib.factorization"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/factorization/GMM", "k": ["config", "model_dir", "__init__", "clusters", "covariances", "evaluate", "export", "export_savedmodel", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "predict_assignments", "score", "set_params", "weights", "ASSIGNMENTS", "LOG_LIKELIHOOD", "SCORES"], "r": "r1.7", "t": "tf.contrib.factorization.GMM"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/factorization/GmmAlgorithm", "k": ["__init__", "alphas", "assignments", "clusters", "covariances", "init_ops", "is_initialized", "log_likelihood_op", "scores", "training_ops", "CLUSTERS_COVS_VARIABLE", "CLUSTERS_VARIABLE", "CLUSTERS_WEIGHT"], "r": "r1.7", "t": "tf.contrib.factorization.GmmAlgorithm"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/factorization/KMeans", "k": ["__init__", "training_graph"], "r": "r1.7", "t": "tf.contrib.factorization.KMeans"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/factorization/KMeansClustering", "k": ["config", "model_dir", "model_fn", "params", "__init__", "cluster_centers", "evaluate", "export_savedmodel", "get_variable_names", "get_variable_value", "latest_checkpoint", "predict", "predict_cluster_index", "score", "train", "transform", "ALL_DISTANCES", "CLUSTER_CENTERS_VAR_NAME", "CLUSTER_INDEX", "COSINE_DISTANCE", "KMEANS_PLUS_PLUS_INIT", "RANDOM_INIT", "SCORE", "SQUARED_EUCLIDEAN_DISTANCE"], "r": "r1.7", "t": "tf.contrib.factorization.KMeansClustering"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/factorization/WALSMatrixFactorization", "k": ["config", "model_dir", "__init__", "evaluate", "export", "export_savedmodel", "fit", "get_col_factors", "get_params", "get_projections", "get_row_factors", "get_variable_names", "get_variable_value", "partial_fit", "predict", "set_params", "COMPLETED_SWEEPS", "INPUT_COLS", "INPUT_ROWS", "LOSS", "PROJECTION_RESULT", "PROJECTION_WEIGHTS", "PROJECT_ROW", "RWSE"], "r": "r1.7", "t": "tf.contrib.factorization.WALSMatrixFactorization"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/factorization/WALSModel", "k": ["col_factors", "col_update_prep_gramian_op", "col_weights", "initialize_col_update_op", "initialize_op", "initialize_row_update_op", "row_factors", "row_update_prep_gramian_op", "row_weights", "worker_init", "__init__", "project_col_factors", "project_row_factors", "scatter_update", "update_col_factors", "update_row_factors"], "r": "r1.7", "t": "tf.contrib.factorization.WALSModel"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/factorization/gmm", "k": [], "r": "r1.7", "t": "tf.contrib.factorization.gmm"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/feature_column", "k": [], "r": "r1.7", "t": "tf.contrib.feature_column"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/ffmpeg", "k": [], "r": "r1.7", "t": "tf.contrib.ffmpeg"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/ffmpeg/decode_audio", "k": [], "r": "r1.7", "t": "tf.contrib.ffmpeg.decode_audio"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/ffmpeg/decode_video", "k": [], "r": "r1.7", "t": "tf.contrib.ffmpeg.decode_video"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/ffmpeg/encode_audio", "k": [], "r": "r1.7", "t": "tf.contrib.ffmpeg.encode_audio"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/framework", "k": [], "r": "r1.7", "t": "tf.contrib.framework"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/framework/BoundedTensorSpec", "k": ["dtype", "maximum", "minimum", "name", "shape", "__eq__", "__init__", "__ne__", "from_spec", "from_tensor", "is_compatible_with"], "r": "r1.7", "t": "tf.contrib.framework.BoundedTensorSpec"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/framework/CriticalSection", "k": ["name", "__init__", "execute"], "r": "r1.7", "t": "tf.contrib.framework.CriticalSection"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/framework/TensorSpec", "k": ["dtype", "name", "shape", "__eq__", "__init__", "__ne__", "from_spec", "from_tensor", "is_compatible_with"], "r": "r1.7", "t": "tf.contrib.framework.TensorSpec"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/framework/VariableDeviceChooser", "k": ["__call__", "__init__"], "r": "r1.7", "t": "tf.contrib.framework.VariableDeviceChooser"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/framework/add_arg_scope", "k": [], "r": "r1.7", "t": "tf.contrib.framework.add_arg_scope"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/framework/add_model_variable", "k": [], "r": "r1.7", "t": "tf.contrib.framework.add_model_variable"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/framework/arg_scope", "k": [], "r": "r1.7", "t": "tf.contrib.framework.arg_scope"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/framework/arg_scoped_arguments", "k": [], "r": "r1.7", "t": "tf.contrib.framework.arg_scoped_arguments"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/framework/assert_global_step", "k": [], "r": "r1.7", "t": "tf.contrib.framework.assert_global_step"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/framework/assert_or_get_global_step", "k": [], "r": "r1.7", "t": "tf.contrib.framework.assert_or_get_global_step"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/framework/assert_scalar_int", "k": [], "r": "r1.7", "t": "tf.contrib.framework.assert_scalar_int"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/framework/assign_from_checkpoint", "k": [], "r": "r1.7", "t": "tf.contrib.framework.assign_from_checkpoint"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/framework/assign_from_checkpoint_fn", "k": [], "r": "r1.7", "t": "tf.contrib.framework.assign_from_checkpoint_fn"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/framework/assign_from_values", "k": [], "r": "r1.7", "t": "tf.contrib.framework.assign_from_values"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/framework/assign_from_values_fn", "k": [], "r": "r1.7", "t": "tf.contrib.framework.assign_from_values_fn"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/framework/convolutional_delta_orthogonal", "k": ["__call__", "__init__", "from_config", "get_config"], "r": "r1.7", "t": "tf.contrib.framework.convolutional_delta_orthogonal"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/framework/create_global_step", "k": [], "r": "r1.7", "t": "tf.contrib.framework.create_global_step"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/framework/current_arg_scope", "k": [], "r": "r1.7", "t": "tf.contrib.framework.current_arg_scope"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/framework/deprecated", "k": [], "r": "r1.7", "t": "tf.contrib.framework.deprecated"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/framework/deprecated_arg_values", "k": [], "r": "r1.7", "t": "tf.contrib.framework.deprecated_arg_values"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/framework/deprecated_args", "k": [], "r": "r1.7", "t": "tf.contrib.framework.deprecated_args"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/framework/filter_variables", "k": [], "r": "r1.7", "t": "tf.contrib.framework.filter_variables"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/framework/fuse_op", "k": [], "r": "r1.7", "t": "tf.contrib.framework.fuse_op"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/framework/get_global_step", "k": [], "r": "r1.7", "t": "tf.contrib.framework.get_global_step"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/framework/get_graph_from_inputs", "k": [], "r": "r1.7", "t": "tf.contrib.framework.get_graph_from_inputs"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/framework/get_local_variables", "k": [], "r": "r1.7", "t": "tf.contrib.framework.get_local_variables"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/framework/get_model_variables", "k": [], "r": "r1.7", "t": "tf.contrib.framework.get_model_variables"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/framework/get_name_scope", "k": [], "r": "r1.7", "t": "tf.contrib.framework.get_name_scope"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/framework/get_or_create_global_step", "k": [], "r": "r1.7", "t": "tf.contrib.framework.get_or_create_global_step"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/framework/get_placeholders", "k": [], "r": "r1.7", "t": "tf.contrib.framework.get_placeholders"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/framework/get_trainable_variables", "k": [], "r": "r1.7", "t": "tf.contrib.framework.get_trainable_variables"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/framework/get_unique_variable", "k": [], "r": "r1.7", "t": "tf.contrib.framework.get_unique_variable"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/framework/get_variable_full_name", "k": [], "r": "r1.7", "t": "tf.contrib.framework.get_variable_full_name"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/framework/get_variables", "k": [], "r": "r1.7", "t": "tf.contrib.framework.get_variables"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/framework/get_variables_by_name", "k": [], "r": "r1.7", "t": "tf.contrib.framework.get_variables_by_name"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/framework/get_variables_by_suffix", "k": [], "r": "r1.7", "t": "tf.contrib.framework.get_variables_by_suffix"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/framework/get_variables_to_restore", "k": [], "r": "r1.7", "t": "tf.contrib.framework.get_variables_to_restore"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/framework/global_variable", "k": [], "r": "r1.7", "t": "tf.contrib.framework.global_variable"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/framework/has_arg_scope", "k": [], "r": "r1.7", "t": "tf.contrib.framework.has_arg_scope"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/framework/init_from_checkpoint", "k": [], "r": "r1.7", "t": "tf.contrib.framework.init_from_checkpoint"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/framework/is_tensor", "k": [], "r": "r1.7", "t": "tf.contrib.framework.is_tensor"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/framework/list_variables", "k": [], "r": "r1.7", "t": "tf.contrib.framework.list_variables"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/framework/load_and_remap_matrix_initializer", "k": [], "r": "r1.7", "t": "tf.contrib.framework.load_and_remap_matrix_initializer"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/framework/load_checkpoint", "k": [], "r": "r1.7", "t": "tf.contrib.framework.load_checkpoint"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/framework/load_embedding_initializer", "k": [], "r": "r1.7", "t": "tf.contrib.framework.load_embedding_initializer"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/framework/load_linear_multiclass_bias_initializer", "k": [], "r": "r1.7", "t": "tf.contrib.framework.load_linear_multiclass_bias_initializer"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/framework/load_variable", "k": [], "r": "r1.7", "t": "tf.contrib.framework.load_variable"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/framework/load_variable_slot_initializer", "k": [], "r": "r1.7", "t": "tf.contrib.framework.load_variable_slot_initializer"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/framework/local_variable", "k": [], "r": "r1.7", "t": "tf.contrib.framework.local_variable"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/framework/model_variable", "k": [], "r": "r1.7", "t": "tf.contrib.framework.model_variable"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/framework/nest", "k": [], "r": "r1.7", "t": "tf.contrib.framework.nest"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/framework/nest/assert_same_structure", "k": [], "r": "r1.7", "t": "tf.contrib.framework.nest.assert_same_structure"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/framework/nest/assert_shallow_structure", "k": [], "r": "r1.7", "t": "tf.contrib.framework.nest.assert_shallow_structure"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/framework/nest/flatten", "k": [], "r": "r1.7", "t": "tf.contrib.framework.nest.flatten"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/framework/nest/flatten_dict_items", "k": [], "r": "r1.7", "t": "tf.contrib.framework.nest.flatten_dict_items"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/framework/nest/flatten_up_to", "k": [], "r": "r1.7", "t": "tf.contrib.framework.nest.flatten_up_to"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/framework/nest/flatten_with_joined_string_paths", "k": [], "r": "r1.7", "t": "tf.contrib.framework.nest.flatten_with_joined_string_paths"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/framework/nest/get_traverse_shallow_structure", "k": [], "r": "r1.7", "t": "tf.contrib.framework.nest.get_traverse_shallow_structure"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/framework/nest/is_sequence", "k": [], "r": "r1.7", "t": "tf.contrib.framework.nest.is_sequence"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/framework/nest/map_structure", "k": [], "r": "r1.7", "t": "tf.contrib.framework.nest.map_structure"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/framework/nest/map_structure_up_to", "k": [], "r": "r1.7", "t": "tf.contrib.framework.nest.map_structure_up_to"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/framework/nest/pack_sequence_as", "k": [], "r": "r1.7", "t": "tf.contrib.framework.nest.pack_sequence_as"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/framework/nest/yield_flat_paths", "k": [], "r": "r1.7", "t": "tf.contrib.framework.nest.yield_flat_paths"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/framework/prepend_name_scope", "k": [], "r": "r1.7", "t": "tf.contrib.framework.prepend_name_scope"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/framework/py_func", "k": [], "r": "r1.7", "t": "tf.contrib.framework.py_func"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/framework/reduce_sum_n", "k": [], "r": "r1.7", "t": "tf.contrib.framework.reduce_sum_n"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/framework/remove_squeezable_dimensions", "k": [], "r": "r1.7", "t": "tf.contrib.framework.remove_squeezable_dimensions"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/framework/smart_cond", "k": [], "r": "r1.7", "t": "tf.contrib.framework.smart_cond"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/framework/smart_constant_value", "k": [], "r": "r1.7", "t": "tf.contrib.framework.smart_constant_value"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/framework/sort", "k": [], "r": "r1.7", "t": "tf.contrib.framework.sort"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/framework/strip_name_scope", "k": [], "r": "r1.7", "t": "tf.contrib.framework.strip_name_scope"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/framework/variable", "k": [], "r": "r1.7", "t": "tf.contrib.framework.variable"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/framework/with_same_shape", "k": [], "r": "r1.7", "t": "tf.contrib.framework.with_same_shape"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/framework/with_shape", "k": [], "r": "r1.7", "t": "tf.contrib.framework.with_shape"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/framework/zero_initializer", "k": [], "r": "r1.7", "t": "tf.contrib.framework.zero_initializer"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/gan", "k": [], "r": "r1.7", "t": "tf.contrib.gan"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/gan/ACGANModel", "k": ["discriminator_fn", "discriminator_gen_classification_logits", "discriminator_gen_outputs", "discriminator_real_classification_logits", "discriminator_real_outputs", "discriminator_scope", "discriminator_variables", "generated_data", "generator_fn", "generator_inputs", "generator_scope", "generator_variables", "one_hot_labels", "real_data", "__new__"], "r": "r1.7", "t": "tf.contrib.gan.ACGANModel"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/gan/CycleGANLoss", "k": ["loss_x2y", "loss_y2x", "__new__"], "r": "r1.7", "t": "tf.contrib.gan.CycleGANLoss"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/gan/CycleGANModel", "k": ["model_x2y", "model_y2x", "reconstructed_x", "reconstructed_y", "__new__"], "r": "r1.7", "t": "tf.contrib.gan.CycleGANModel"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/gan/GANLoss", "k": ["discriminator_loss", "generator_loss", "__new__"], "r": "r1.7", "t": "tf.contrib.gan.GANLoss"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/gan/GANModel", "k": ["discriminator_fn", "discriminator_gen_outputs", "discriminator_real_outputs", "discriminator_scope", "discriminator_variables", "generated_data", "generator_fn", "generator_inputs", "generator_scope", "generator_variables", "real_data", "__new__"], "r": "r1.7", "t": "tf.contrib.gan.GANModel"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/gan/GANTrainOps", "k": ["discriminator_train_op", "generator_train_op", "global_step_inc_op", "__new__"], "r": "r1.7", "t": "tf.contrib.gan.GANTrainOps"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/gan/GANTrainSteps", "k": ["discriminator_train_steps", "generator_train_steps", "__new__"], "r": "r1.7", "t": "tf.contrib.gan.GANTrainSteps"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/gan/InfoGANModel", "k": ["discriminator_and_aux_fn", "discriminator_fn", "discriminator_gen_outputs", "discriminator_real_outputs", "discriminator_scope", "discriminator_variables", "generated_data", "generator_fn", "generator_inputs", "generator_scope", "generator_variables", "predicted_distributions", "real_data", "structured_generator_inputs", "__new__"], "r": "r1.7", "t": "tf.contrib.gan.InfoGANModel"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/gan/RunTrainOpsHook", "k": ["__init__", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "r1.7", "t": "tf.contrib.gan.RunTrainOpsHook"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/gan/acgan_model", "k": [], "r": "r1.7", "t": "tf.contrib.gan.acgan_model"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/gan/cyclegan_loss", "k": [], "r": "r1.7", "t": "tf.contrib.gan.cyclegan_loss"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/gan/cyclegan_model", "k": [], "r": "r1.7", "t": "tf.contrib.gan.cyclegan_model"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/gan/estimator", "k": [], "r": "r1.7", "t": "tf.contrib.gan.estimator"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/gan/estimator/GANEstimator", "k": ["config", "model_dir", "model_fn", "params", "__init__", "evaluate", "export_savedmodel", "get_variable_names", "get_variable_value", "latest_checkpoint", "predict", "train"], "r": "r1.7", "t": "tf.contrib.gan.estimator.GANEstimator"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/gan/estimator/GANHead", "k": ["logits_dimension", "name", "__init__", "create_estimator_spec", "create_loss"], "r": "r1.7", "t": "tf.contrib.gan.estimator.GANHead"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/gan/estimator/SummaryType", "k": ["IMAGES", "IMAGE_COMPARISON", "NONE", "VARIABLES", "__members__"], "r": "r1.7", "t": "tf.contrib.gan.estimator.SummaryType"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/gan/estimator/gan_estimator", "k": ["__all__"], "r": "r1.7", "t": "tf.contrib.gan.estimator.gan_estimator"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/gan/estimator/gan_head", "k": [], "r": "r1.7", "t": "tf.contrib.gan.estimator.gan_head"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/gan/estimator/head", "k": ["__all__"], "r": "r1.7", "t": "tf.contrib.gan.estimator.head"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/gan/eval", "k": ["INCEPTION_DEFAULT_IMAGE_SIZE", "frechet_inception_distance", "inception_score"], "r": "r1.7", "t": "tf.contrib.gan.eval"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/gan/eval/add_gan_model_image_summaries", "k": [], "r": "r1.7", "t": "tf.contrib.gan.eval.add_gan_model_image_summaries"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/gan/eval/add_gan_model_summaries", "k": [], "r": "r1.7", "t": "tf.contrib.gan.eval.add_gan_model_summaries"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/gan/eval/add_image_comparison_summaries", "k": [], "r": "r1.7", "t": "tf.contrib.gan.eval.add_image_comparison_summaries"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/gan/eval/add_regularization_loss_summaries", "k": [], "r": "r1.7", "t": "tf.contrib.gan.eval.add_regularization_loss_summaries"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/gan/eval/classifier_metrics", "k": ["INCEPTION_DEFAULT_IMAGE_SIZE", "__all__", "frechet_inception_distance", "inception_score"], "r": "r1.7", "t": "tf.contrib.gan.eval.classifier_metrics"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/gan/eval/classifier_score", "k": [], "r": "r1.7", "t": "tf.contrib.gan.eval.classifier_score"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/gan/eval/classifier_score_from_logits", "k": [], "r": "r1.7", "t": "tf.contrib.gan.eval.classifier_score_from_logits"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/gan/eval/eval_utils", "k": ["__all__"], "r": "r1.7", "t": "tf.contrib.gan.eval.eval_utils"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/gan/eval/frechet_classifier_distance", "k": [], "r": "r1.7", "t": "tf.contrib.gan.eval.frechet_classifier_distance"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/gan/eval/frechet_classifier_distance_from_activations", "k": [], "r": "r1.7", "t": "tf.contrib.gan.eval.frechet_classifier_distance_from_activations"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/gan/eval/get_graph_def_from_disk", "k": [], "r": "r1.7", "t": "tf.contrib.gan.eval.get_graph_def_from_disk"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/gan/eval/get_graph_def_from_resource", "k": [], "r": "r1.7", "t": "tf.contrib.gan.eval.get_graph_def_from_resource"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/gan/eval/get_graph_def_from_url_tarball", "k": [], "r": "r1.7", "t": "tf.contrib.gan.eval.get_graph_def_from_url_tarball"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/gan/eval/image_grid", "k": [], "r": "r1.7", "t": "tf.contrib.gan.eval.image_grid"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/gan/eval/image_reshaper", "k": [], "r": "r1.7", "t": "tf.contrib.gan.eval.image_reshaper"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/gan/eval/preprocess_image", "k": [], "r": "r1.7", "t": "tf.contrib.gan.eval.preprocess_image"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/gan/eval/run_image_classifier", "k": [], "r": "r1.7", "t": "tf.contrib.gan.eval.run_image_classifier"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/gan/eval/run_inception", "k": [], "r": "r1.7", "t": "tf.contrib.gan.eval.run_inception"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/gan/eval/sliced_wasserstein_distance", "k": [], "r": "r1.7", "t": "tf.contrib.gan.eval.sliced_wasserstein_distance"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/gan/eval/summaries", "k": ["__all__"], "r": "r1.7", "t": "tf.contrib.gan.eval.summaries"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/gan/features", "k": [], "r": "r1.7", "t": "tf.contrib.gan.features"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/gan/features/VBN", "k": ["__call__", "__init__", "reference_batch_normalization"], "r": "r1.7", "t": "tf.contrib.gan.features.VBN"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/gan/features/clip_discriminator_weights", "k": [], "r": "r1.7", "t": "tf.contrib.gan.features.clip_discriminator_weights"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/gan/features/clip_variables", "k": [], "r": "r1.7", "t": "tf.contrib.gan.features.clip_variables"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/gan/features/condition_tensor", "k": [], "r": "r1.7", "t": "tf.contrib.gan.features.condition_tensor"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/gan/features/condition_tensor_from_onehot", "k": [], "r": "r1.7", "t": "tf.contrib.gan.features.condition_tensor_from_onehot"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/gan/features/tensor_pool", "k": [], "r": "r1.7", "t": "tf.contrib.gan.features.tensor_pool"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/gan/gan_loss", "k": [], "r": "r1.7", "t": "tf.contrib.gan.gan_loss"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/gan/gan_model", "k": [], "r": "r1.7", "t": "tf.contrib.gan.gan_model"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/gan/gan_train", "k": [], "r": "r1.7", "t": "tf.contrib.gan.gan_train"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/gan/gan_train_ops", "k": [], "r": "r1.7", "t": "tf.contrib.gan.gan_train_ops"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/gan/get_joint_train_hooks", "k": [], "r": "r1.7", "t": "tf.contrib.gan.get_joint_train_hooks"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/gan/get_sequential_train_hooks", "k": [], "r": "r1.7", "t": "tf.contrib.gan.get_sequential_train_hooks"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/gan/get_sequential_train_steps", "k": [], "r": "r1.7", "t": "tf.contrib.gan.get_sequential_train_steps"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/gan/infogan_model", "k": [], "r": "r1.7", "t": "tf.contrib.gan.infogan_model"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/gan/losses", "k": [], "r": "r1.7", "t": "tf.contrib.gan.losses"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/gan/losses/acgan_discriminator_loss", "k": [], "r": "r1.7", "t": "tf.contrib.gan.losses.acgan_discriminator_loss"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/gan/losses/acgan_generator_loss", "k": [], "r": "r1.7", "t": "tf.contrib.gan.losses.acgan_generator_loss"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/gan/losses/combine_adversarial_loss", "k": [], "r": "r1.7", "t": "tf.contrib.gan.losses.combine_adversarial_loss"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/gan/losses/cycle_consistency_loss", "k": [], "r": "r1.7", "t": "tf.contrib.gan.losses.cycle_consistency_loss"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/gan/losses/least_squares_discriminator_loss", "k": [], "r": "r1.7", "t": "tf.contrib.gan.losses.least_squares_discriminator_loss"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/gan/losses/least_squares_generator_loss", "k": [], "r": "r1.7", "t": "tf.contrib.gan.losses.least_squares_generator_loss"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/gan/losses/minimax_discriminator_loss", "k": [], "r": "r1.7", "t": "tf.contrib.gan.losses.minimax_discriminator_loss"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/gan/losses/minimax_generator_loss", "k": [], "r": "r1.7", "t": "tf.contrib.gan.losses.minimax_generator_loss"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/gan/losses/modified_discriminator_loss", "k": [], "r": "r1.7", "t": "tf.contrib.gan.losses.modified_discriminator_loss"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/gan/losses/modified_generator_loss", "k": [], "r": "r1.7", "t": "tf.contrib.gan.losses.modified_generator_loss"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/gan/losses/mutual_information_penalty", "k": [], "r": "r1.7", "t": "tf.contrib.gan.losses.mutual_information_penalty"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/gan/losses/wargs", "k": [], "r": "r1.7", "t": "tf.contrib.gan.losses.wargs"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/gan/losses/wargs/acgan_discriminator_loss", "k": [], "r": "r1.7", "t": "tf.contrib.gan.losses.wargs.acgan_discriminator_loss"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/gan/losses/wargs/acgan_generator_loss", "k": [], "r": "r1.7", "t": "tf.contrib.gan.losses.wargs.acgan_generator_loss"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/gan/losses/wargs/combine_adversarial_loss", "k": [], "r": "r1.7", "t": "tf.contrib.gan.losses.wargs.combine_adversarial_loss"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/gan/losses/wargs/cycle_consistency_loss", "k": [], "r": "r1.7", "t": "tf.contrib.gan.losses.wargs.cycle_consistency_loss"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/gan/losses/wargs/least_squares_discriminator_loss", "k": [], "r": "r1.7", "t": "tf.contrib.gan.losses.wargs.least_squares_discriminator_loss"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/gan/losses/wargs/least_squares_generator_loss", "k": [], "r": "r1.7", "t": "tf.contrib.gan.losses.wargs.least_squares_generator_loss"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/gan/losses/wargs/minimax_discriminator_loss", "k": [], "r": "r1.7", "t": "tf.contrib.gan.losses.wargs.minimax_discriminator_loss"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/gan/losses/wargs/minimax_generator_loss", "k": [], "r": "r1.7", "t": "tf.contrib.gan.losses.wargs.minimax_generator_loss"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/gan/losses/wargs/modified_discriminator_loss", "k": [], "r": "r1.7", "t": "tf.contrib.gan.losses.wargs.modified_discriminator_loss"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/gan/losses/wargs/modified_generator_loss", "k": [], "r": "r1.7", "t": "tf.contrib.gan.losses.wargs.modified_generator_loss"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/gan/losses/wargs/mutual_information_penalty", "k": [], "r": "r1.7", "t": "tf.contrib.gan.losses.wargs.mutual_information_penalty"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/gan/losses/wargs/wasserstein_discriminator_loss", "k": [], "r": "r1.7", "t": "tf.contrib.gan.losses.wargs.wasserstein_discriminator_loss"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/gan/losses/wargs/wasserstein_generator_loss", "k": [], "r": "r1.7", "t": "tf.contrib.gan.losses.wargs.wasserstein_generator_loss"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/gan/losses/wargs/wasserstein_gradient_penalty", "k": [], "r": "r1.7", "t": "tf.contrib.gan.losses.wargs.wasserstein_gradient_penalty"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/gan/losses/wasserstein_discriminator_loss", "k": [], "r": "r1.7", "t": "tf.contrib.gan.losses.wasserstein_discriminator_loss"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/gan/losses/wasserstein_generator_loss", "k": [], "r": "r1.7", "t": "tf.contrib.gan.losses.wasserstein_generator_loss"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/gan/losses/wasserstein_gradient_penalty", "k": [], "r": "r1.7", "t": "tf.contrib.gan.losses.wasserstein_gradient_penalty"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/graph_editor", "k": [], "r": "r1.7", "t": "tf.contrib.graph_editor"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/graph_editor/ControlOutputs", "k": ["graph", "__init__", "get", "get_all", "update"], "r": "r1.7", "t": "tf.contrib.graph_editor.ControlOutputs"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/graph_editor/SubGraphView", "k": ["connected_inputs", "connected_outputs", "graph", "inputs", "ops", "outputs", "passthroughs", "__bool__", "__copy__", "__enter__", "__exit__", "__init__", "__nonzero__", "consumers", "copy", "find_op_by_name", "input_index", "is_passthrough", "op", "output_index", "remap", "remap_default", "remap_inputs", "remap_outputs", "remap_outputs_make_unique", "remap_outputs_to_consumers", "remove_unused_ops"], "r": "r1.7", "t": "tf.contrib.graph_editor.SubGraphView"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/graph_editor/Transformer", "k": ["__call__", "__init__"], "r": "r1.7", "t": "tf.contrib.graph_editor.Transformer"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/graph_editor/TransformerInfo", "k": ["__init__", "original", "transformed"], "r": "r1.7", "t": "tf.contrib.graph_editor.TransformerInfo"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/graph_editor/add_control_inputs", "k": [], "r": "r1.7", "t": "tf.contrib.graph_editor.add_control_inputs"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/graph_editor/assign_renamed_collections_handler", "k": [], "r": "r1.7", "t": "tf.contrib.graph_editor.assign_renamed_collections_handler"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/graph_editor/bypass", "k": [], "r": "r1.7", "t": "tf.contrib.graph_editor.bypass"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/graph_editor/can_be_regex", "k": [], "r": "r1.7", "t": "tf.contrib.graph_editor.can_be_regex"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/graph_editor/check_cios", "k": [], "r": "r1.7", "t": "tf.contrib.graph_editor.check_cios"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/graph_editor/compute_boundary_ts", "k": [], "r": "r1.7", "t": "tf.contrib.graph_editor.compute_boundary_ts"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/graph_editor/connect", "k": [], "r": "r1.7", "t": "tf.contrib.graph_editor.connect"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/graph_editor/copy", "k": [], "r": "r1.7", "t": "tf.contrib.graph_editor.copy"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/graph_editor/copy_op_handler", "k": [], "r": "r1.7", "t": "tf.contrib.graph_editor.copy_op_handler"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/graph_editor/copy_with_input_replacements", "k": [], "r": "r1.7", "t": "tf.contrib.graph_editor.copy_with_input_replacements"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/graph_editor/detach", "k": [], "r": "r1.7", "t": "tf.contrib.graph_editor.detach"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/graph_editor/detach_control_inputs", "k": [], "r": "r1.7", "t": "tf.contrib.graph_editor.detach_control_inputs"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/graph_editor/detach_control_outputs", "k": [], "r": "r1.7", "t": "tf.contrib.graph_editor.detach_control_outputs"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/graph_editor/detach_inputs", "k": [], "r": "r1.7", "t": "tf.contrib.graph_editor.detach_inputs"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/graph_editor/detach_outputs", "k": [], "r": "r1.7", "t": "tf.contrib.graph_editor.detach_outputs"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/graph_editor/edit", "k": [], "r": "r1.7", "t": "tf.contrib.graph_editor.edit"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/graph_editor/filter_ops", "k": [], "r": "r1.7", "t": "tf.contrib.graph_editor.filter_ops"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/graph_editor/filter_ops_from_regex", "k": [], "r": "r1.7", "t": "tf.contrib.graph_editor.filter_ops_from_regex"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/graph_editor/filter_ts", "k": [], "r": "r1.7", "t": "tf.contrib.graph_editor.filter_ts"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/graph_editor/filter_ts_from_regex", "k": [], "r": "r1.7", "t": "tf.contrib.graph_editor.filter_ts_from_regex"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/graph_editor/get_backward_walk_ops", "k": [], "r": "r1.7", "t": "tf.contrib.graph_editor.get_backward_walk_ops"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/graph_editor/get_consuming_ops", "k": [], "r": "r1.7", "t": "tf.contrib.graph_editor.get_consuming_ops"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/graph_editor/get_forward_walk_ops", "k": [], "r": "r1.7", "t": "tf.contrib.graph_editor.get_forward_walk_ops"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/graph_editor/get_generating_ops", "k": [], "r": "r1.7", "t": "tf.contrib.graph_editor.get_generating_ops"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/graph_editor/get_name_scope_ops", "k": [], "r": "r1.7", "t": "tf.contrib.graph_editor.get_name_scope_ops"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/graph_editor/get_ops_ios", "k": [], "r": "r1.7", "t": "tf.contrib.graph_editor.get_ops_ios"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/graph_editor/get_tensors", "k": [], "r": "r1.7", "t": "tf.contrib.graph_editor.get_tensors"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/graph_editor/get_walks_intersection_ops", "k": [], "r": "r1.7", "t": "tf.contrib.graph_editor.get_walks_intersection_ops"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/graph_editor/get_walks_union_ops", "k": [], "r": "r1.7", "t": "tf.contrib.graph_editor.get_walks_union_ops"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/graph_editor/get_within_boundary_ops", "k": [], "r": "r1.7", "t": "tf.contrib.graph_editor.get_within_boundary_ops"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/graph_editor/graph_replace", "k": [], "r": "r1.7", "t": "tf.contrib.graph_editor.graph_replace"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/graph_editor/keep_t_if_possible_handler", "k": [], "r": "r1.7", "t": "tf.contrib.graph_editor.keep_t_if_possible_handler"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/graph_editor/make_list_of_op", "k": [], "r": "r1.7", "t": "tf.contrib.graph_editor.make_list_of_op"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/graph_editor/make_list_of_t", "k": [], "r": "r1.7", "t": "tf.contrib.graph_editor.make_list_of_t"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/graph_editor/make_placeholder_from_dtype_and_shape", "k": [], "r": "r1.7", "t": "tf.contrib.graph_editor.make_placeholder_from_dtype_and_shape"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/graph_editor/make_placeholder_from_tensor", "k": [], "r": "r1.7", "t": "tf.contrib.graph_editor.make_placeholder_from_tensor"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/graph_editor/make_regex", "k": [], "r": "r1.7", "t": "tf.contrib.graph_editor.make_regex"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/graph_editor/make_view", "k": [], "r": "r1.7", "t": "tf.contrib.graph_editor.make_view"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/graph_editor/make_view_from_scope", "k": [], "r": "r1.7", "t": "tf.contrib.graph_editor.make_view_from_scope"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/graph_editor/placeholder_name", "k": [], "r": "r1.7", "t": "tf.contrib.graph_editor.placeholder_name"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/graph_editor/remove_control_inputs", "k": [], "r": "r1.7", "t": "tf.contrib.graph_editor.remove_control_inputs"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/graph_editor/replace_t_with_placeholder_handler", "k": [], "r": "r1.7", "t": "tf.contrib.graph_editor.replace_t_with_placeholder_handler"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/graph_editor/reroute", "k": [], "r": "r1.7", "t": "tf.contrib.graph_editor.reroute"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/graph_editor/reroute_inputs", "k": [], "r": "r1.7", "t": "tf.contrib.graph_editor.reroute_inputs"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/graph_editor/reroute_ios", "k": [], "r": "r1.7", "t": "tf.contrib.graph_editor.reroute_ios"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/graph_editor/reroute_outputs", "k": [], "r": "r1.7", "t": "tf.contrib.graph_editor.reroute_outputs"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/graph_editor/reroute_ts", "k": [], "r": "r1.7", "t": "tf.contrib.graph_editor.reroute_ts"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/graph_editor/select", "k": [], "r": "r1.7", "t": "tf.contrib.graph_editor.select"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/graph_editor/select_ops", "k": [], "r": "r1.7", "t": "tf.contrib.graph_editor.select_ops"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/graph_editor/select_ops_and_ts", "k": [], "r": "r1.7", "t": "tf.contrib.graph_editor.select_ops_and_ts"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/graph_editor/select_ts", "k": [], "r": "r1.7", "t": "tf.contrib.graph_editor.select_ts"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/graph_editor/subgraph", "k": [], "r": "r1.7", "t": "tf.contrib.graph_editor.subgraph"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/graph_editor/swap_inputs", "k": [], "r": "r1.7", "t": "tf.contrib.graph_editor.swap_inputs"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/graph_editor/swap_ios", "k": [], "r": "r1.7", "t": "tf.contrib.graph_editor.swap_ios"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/graph_editor/swap_outputs", "k": [], "r": "r1.7", "t": "tf.contrib.graph_editor.swap_outputs"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/graph_editor/swap_ts", "k": [], "r": "r1.7", "t": "tf.contrib.graph_editor.swap_ts"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/graph_editor/transform", "k": [], "r": "r1.7", "t": "tf.contrib.graph_editor.transform"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/graph_editor/transform_op_if_inside_handler", "k": [], "r": "r1.7", "t": "tf.contrib.graph_editor.transform_op_if_inside_handler"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/graph_editor/util", "k": [], "r": "r1.7", "t": "tf.contrib.graph_editor.util"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/grid_rnn", "k": [], "r": "r1.7", "t": "tf.contrib.grid_rnn"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/image", "k": [], "r": "r1.7", "t": "tf.contrib.image"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/image/angles_to_projective_transforms", "k": [], "r": "r1.7", "t": "tf.contrib.image.angles_to_projective_transforms"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/image/compose_transforms", "k": [], "r": "r1.7", "t": "tf.contrib.image.compose_transforms"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/image/connected_components", "k": [], "r": "r1.7", "t": "tf.contrib.image.connected_components"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/image/rotate", "k": [], "r": "r1.7", "t": "tf.contrib.image.rotate"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/image/single_image_random_dot_stereograms", "k": [], "r": "r1.7", "t": "tf.contrib.image.single_image_random_dot_stereograms"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/image/transform", "k": [], "r": "r1.7", "t": "tf.contrib.image.transform"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/image/translate", "k": [], "r": "r1.7", "t": "tf.contrib.image.translate"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/image/translations_to_projective_transforms", "k": [], "r": "r1.7", "t": "tf.contrib.image.translations_to_projective_transforms"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/input_pipeline", "k": [], "r": "r1.7", "t": "tf.contrib.input_pipeline"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/input_pipeline/obtain_next", "k": [], "r": "r1.7", "t": "tf.contrib.input_pipeline.obtain_next"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/integrate", "k": [], "r": "r1.7", "t": "tf.contrib.integrate"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/integrate/odeint", "k": [], "r": "r1.7", "t": "tf.contrib.integrate.odeint"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/keras", "k": [], "r": "r1.7", "t": "tf.contrib.keras"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/kernel_methods", "k": [], "r": "r1.7", "t": "tf.contrib.kernel_methods"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/kernel_methods/KernelLinearClassifier", "k": ["config", "model_dir", "__init__", "evaluate", "export", "export_savedmodel", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "predict_classes", "predict_proba", "set_params"], "r": "r1.7", "t": "tf.contrib.kernel_methods.KernelLinearClassifier"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/kernel_methods/RandomFourierFeatureMapper", "k": ["input_dim", "name", "output_dim", "__init__", "map"], "r": "r1.7", "t": "tf.contrib.kernel_methods.RandomFourierFeatureMapper"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/kernel_methods/sparse_multiclass_hinge_loss", "k": [], "r": "r1.7", "t": "tf.contrib.kernel_methods.sparse_multiclass_hinge_loss"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/kfac", "k": [], "r": "r1.7", "t": "tf.contrib.kfac"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/kfac/curvature_matrix_vector_products", "k": [], "r": "r1.7", "t": "tf.contrib.kfac.curvature_matrix_vector_products"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/kfac/curvature_matrix_vector_products/CurvatureMatrixVectorProductComputer", "k": ["fisher_factor_inner_shapes", "generalized_gauss_newton_factor_inner_shapes", "__init__", "multiply_fisher", "multiply_fisher_factor", "multiply_fisher_factor_transpose", "multiply_generalized_gauss_newton", "multiply_generalized_gauss_newton_factor", "multiply_generalized_gauss_newton_factor_transpose", "multiply_hessian"], "r": "r1.7", "t": "tf.contrib.kfac.curvature_matrix_vector_products.CurvatureMatrixVectorProductComputer"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/kfac/estimator", "k": [], "r": "r1.7", "t": "tf.contrib.kfac.estimator"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/kfac/estimator/FisherEstimator", "k": ["damping", "variables", "__init__", "multiply", "multiply_inverse"], "r": "r1.7", "t": "tf.contrib.kfac.estimator.FisherEstimator"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/kfac/fisher_blocks", "k": [], "r": "r1.7", "t": "tf.contrib.kfac.fisher_blocks"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/kfac/fisher_blocks/ConvDiagonalFB", "k": ["num_registered_minibatches", "__init__", "instantiate_factors", "multiply", "multiply_inverse", "register_additional_minibatch", "tensors_to_compute_grads"], "r": "r1.7", "t": "tf.contrib.kfac.fisher_blocks.ConvDiagonalFB"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/kfac/fisher_blocks/ConvKFCBasicFB", "k": ["num_registered_minibatches", "__init__", "full_fisher_block", "instantiate_factors", "multiply", "multiply_inverse", "register_additional_minibatch", "tensors_to_compute_grads"], "r": "r1.7", "t": "tf.contrib.kfac.fisher_blocks.ConvKFCBasicFB"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/kfac/fisher_blocks/EmbeddingKFACFB", "k": ["num_registered_minibatches", "__init__", "full_fisher_block", "instantiate_factors", "multiply", "multiply_inverse", "register_additional_minibatch", "tensors_to_compute_grads"], "r": "r1.7", "t": "tf.contrib.kfac.fisher_blocks.EmbeddingKFACFB"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/kfac/fisher_blocks/FisherBlock", "k": ["num_registered_minibatches", "__init__", "instantiate_factors", "multiply", "multiply_inverse", "tensors_to_compute_grads"], "r": "r1.7", "t": "tf.contrib.kfac.fisher_blocks.FisherBlock"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/kfac/fisher_blocks/FullFB", "k": ["num_registered_minibatches", "__init__", "full_fisher_block", "instantiate_factors", "multiply", "multiply_inverse", "register_additional_minibatch", "tensors_to_compute_grads"], "r": "r1.7", "t": "tf.contrib.kfac.fisher_blocks.FullFB"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/kfac/fisher_blocks/FullyConnectedDiagonalFB", "k": ["num_registered_minibatches", "__init__", "instantiate_factors", "multiply", "multiply_inverse", "register_additional_minibatch", "tensors_to_compute_grads"], "r": "r1.7", "t": "tf.contrib.kfac.fisher_blocks.FullyConnectedDiagonalFB"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/kfac/fisher_blocks/FullyConnectedKFACBasicFB", "k": ["num_registered_minibatches", "__init__", "full_fisher_block", "instantiate_factors", "multiply", "multiply_inverse", "register_additional_minibatch", "tensors_to_compute_grads"], "r": "r1.7", "t": "tf.contrib.kfac.fisher_blocks.FullyConnectedKFACBasicFB"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/kfac/fisher_blocks/KroneckerProductFB", "k": ["num_registered_minibatches", "__init__", "full_fisher_block", "instantiate_factors", "multiply", "multiply_inverse", "tensors_to_compute_grads"], "r": "r1.7", "t": "tf.contrib.kfac.fisher_blocks.KroneckerProductFB"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/kfac/fisher_blocks/NaiveDiagonalFB", "k": ["num_registered_minibatches", "__init__", "full_fisher_block", "instantiate_factors", "multiply", "multiply_inverse", "register_additional_minibatch", "tensors_to_compute_grads"], "r": "r1.7", "t": "tf.contrib.kfac.fisher_blocks.NaiveDiagonalFB"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/kfac/fisher_blocks/compute_pi_adjusted_damping", "k": [], "r": "r1.7", "t": "tf.contrib.kfac.fisher_blocks.compute_pi_adjusted_damping"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/kfac/fisher_blocks/compute_pi_tracenorm", "k": [], "r": "r1.7", "t": "tf.contrib.kfac.fisher_blocks.compute_pi_tracenorm"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/kfac/fisher_blocks/normalize_damping", "k": [], "r": "r1.7", "t": "tf.contrib.kfac.fisher_blocks.normalize_damping"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/kfac/fisher_blocks/num_conv_locations", "k": [], "r": "r1.7", "t": "tf.contrib.kfac.fisher_blocks.num_conv_locations"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/kfac/fisher_blocks/set_global_constants", "k": [], "r": "r1.7", "t": "tf.contrib.kfac.fisher_blocks.set_global_constants"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/kfac/fisher_factors", "k": [], "r": "r1.7", "t": "tf.contrib.kfac.fisher_factors"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/kfac/fisher_factors/ConvDiagonalFactor", "k": ["__init__", "get_cov", "get_cov_var", "instantiate_covariance", "left_multiply", "left_multiply_inverse", "make_covariance_update_op", "make_inverse_update_ops", "register_damped_inverse", "right_multiply", "right_multiply_inverse"], "r": "r1.7", "t": "tf.contrib.kfac.fisher_factors.ConvDiagonalFactor"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/kfac/fisher_factors/ConvInputKroneckerFactor", "k": ["__init__", "get_cov", "get_cov_var", "get_damped_inverse", "get_eigendecomp", "get_matpower", "instantiate_covariance", "left_multiply", "left_multiply_inverse", "make_covariance_update_op", "make_inverse_update_ops", "register_damped_inverse", "register_matpower", "reset_eigendecomp", "right_multiply", "right_multiply_inverse"], "r": "r1.7", "t": "tf.contrib.kfac.fisher_factors.ConvInputKroneckerFactor"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/kfac/fisher_factors/ConvOutputKroneckerFactor", "k": ["__init__", "get_cov", "get_cov_var", "get_damped_inverse", "get_eigendecomp", "get_matpower", "instantiate_covariance", "left_multiply", "left_multiply_inverse", "make_covariance_update_op", "make_inverse_update_ops", "register_damped_inverse", "register_matpower", "reset_eigendecomp", "right_multiply", "right_multiply_inverse"], "r": "r1.7", "t": "tf.contrib.kfac.fisher_factors.ConvOutputKroneckerFactor"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/kfac/fisher_factors/DiagonalFactor", "k": ["__init__", "get_cov", "get_cov_var", "instantiate_covariance", "left_multiply", "left_multiply_inverse", "make_covariance_update_op", "make_inverse_update_ops", "register_damped_inverse", "right_multiply", "right_multiply_inverse"], "r": "r1.7", "t": "tf.contrib.kfac.fisher_factors.DiagonalFactor"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/kfac/fisher_factors/EmbeddingInputKroneckerFactor", "k": ["__init__", "get_cov", "get_cov_var", "instantiate_covariance", "left_multiply", "left_multiply_inverse", "make_covariance_update_op", "make_inverse_update_ops", "register_damped_inverse", "right_multiply", "right_multiply_inverse"], "r": "r1.7", "t": "tf.contrib.kfac.fisher_factors.EmbeddingInputKroneckerFactor"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/kfac/fisher_factors/FisherFactor", "k": ["__init__", "get_cov", "get_cov_var", "instantiate_covariance", "left_multiply", "left_multiply_inverse", "make_covariance_update_op", "make_inverse_update_ops", "right_multiply", "right_multiply_inverse"], "r": "r1.7", "t": "tf.contrib.kfac.fisher_factors.FisherFactor"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/kfac/fisher_factors/FullFactor", "k": ["__init__", "get_cov", "get_cov_var", "get_damped_inverse", "get_eigendecomp", "get_matpower", "instantiate_covariance", "left_multiply", "left_multiply_inverse", "make_covariance_update_op", "make_inverse_update_ops", "register_damped_inverse", "register_matpower", "reset_eigendecomp", "right_multiply", "right_multiply_inverse"], "r": "r1.7", "t": "tf.contrib.kfac.fisher_factors.FullFactor"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/kfac/fisher_factors/FullyConnectedDiagonalFactor", "k": ["__init__", "get_cov", "get_cov_var", "instantiate_covariance", "left_multiply", "left_multiply_inverse", "make_covariance_update_op", "make_inverse_update_ops", "register_damped_inverse", "right_multiply", "right_multiply_inverse"], "r": "r1.7", "t": "tf.contrib.kfac.fisher_factors.FullyConnectedDiagonalFactor"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/kfac/fisher_factors/FullyConnectedKroneckerFactor", "k": ["__init__", "get_cov", "get_cov_var", "get_damped_inverse", "get_eigendecomp", "get_matpower", "instantiate_covariance", "left_multiply", "left_multiply_inverse", "make_covariance_update_op", "make_inverse_update_ops", "register_damped_inverse", "register_matpower", "reset_eigendecomp", "right_multiply", "right_multiply_inverse"], "r": "r1.7", "t": "tf.contrib.kfac.fisher_factors.FullyConnectedKroneckerFactor"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/kfac/fisher_factors/InverseProvidingFactor", "k": ["__init__", "get_cov", "get_cov_var", "get_damped_inverse", "get_eigendecomp", "get_matpower", "instantiate_covariance", "left_multiply", "left_multiply_inverse", "make_covariance_update_op", "make_inverse_update_ops", "register_damped_inverse", "register_matpower", "reset_eigendecomp", "right_multiply", "right_multiply_inverse"], "r": "r1.7", "t": "tf.contrib.kfac.fisher_factors.InverseProvidingFactor"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/kfac/fisher_factors/NaiveDiagonalFactor", "k": ["__init__", "get_cov", "get_cov_var", "instantiate_covariance", "left_multiply", "left_multiply_inverse", "make_covariance_update_op", "make_inverse_update_ops", "register_damped_inverse", "right_multiply", "right_multiply_inverse"], "r": "r1.7", "t": "tf.contrib.kfac.fisher_factors.NaiveDiagonalFactor"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/kfac/fisher_factors/append_homog", "k": [], "r": "r1.7", "t": "tf.contrib.kfac.fisher_factors.append_homog"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/kfac/fisher_factors/compute_cov", "k": [], "r": "r1.7", "t": "tf.contrib.kfac.fisher_factors.compute_cov"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/kfac/fisher_factors/covariance_initializer", "k": [], "r": "r1.7", "t": "tf.contrib.kfac.fisher_factors.covariance_initializer"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/kfac/fisher_factors/diagonal_covariance_initializer", "k": [], "r": "r1.7", "t": "tf.contrib.kfac.fisher_factors.diagonal_covariance_initializer"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/kfac/fisher_factors/inverse_initializer", "k": [], "r": "r1.7", "t": "tf.contrib.kfac.fisher_factors.inverse_initializer"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/kfac/fisher_factors/maybe_colocate_with", "k": [], "r": "r1.7", "t": "tf.contrib.kfac.fisher_factors.maybe_colocate_with"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/kfac/fisher_factors/scalar_or_tensor_to_string", "k": [], "r": "r1.7", "t": "tf.contrib.kfac.fisher_factors.scalar_or_tensor_to_string"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/kfac/fisher_factors/scope_string_from_name", "k": [], "r": "r1.7", "t": "tf.contrib.kfac.fisher_factors.scope_string_from_name"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/kfac/fisher_factors/scope_string_from_params", "k": [], "r": "r1.7", "t": "tf.contrib.kfac.fisher_factors.scope_string_from_params"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/kfac/fisher_factors/set_global_constants", "k": [], "r": "r1.7", "t": "tf.contrib.kfac.fisher_factors.set_global_constants"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/kfac/layer_collection", "k": ["APPROX_DIAGONAL_NAME", "APPROX_FULL_NAME", "APPROX_KRONECKER_INDEP_NAME", "APPROX_KRONECKER_NAME", "APPROX_KRONECKER_SERIES_1_NAME", "APPROX_KRONECKER_SERIES_2_NAME", "VARIABLE_SCOPE"], "r": "r1.7", "t": "tf.contrib.kfac.layer_collection"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/kfac/layer_collection/LayerCollection", "k": ["default_conv2d_approximation", "default_embedding_approximation", "default_fully_connected_approximation", "default_fully_connected_multi_approximation", "default_generic_approximation", "graph", "linked_parameters", "losses", "registered_variables", "subgraph", "__init__", "check_registration", "create_subgraph", "define_linked_parameters", "get_blocks", "get_factors", "get_use_count_map", "make_or_get_factor", "register_block", "register_categorical_predictive_distribution", "register_conv2d", "register_embedding", "register_fully_connected", "register_fully_connected_multi", "register_generic", "register_multi_bernoulli_predictive_distribution", "register_normal_predictive_distribution", "set_default_conv2d_approximation", "set_default_embedding_approximation", "set_default_fully_connected_approximation", "set_default_fully_connected_multi_approximation", "set_default_generic_approximation", "total_loss", "total_sampled_loss"], "r": "r1.7", "t": "tf.contrib.kfac.layer_collection.LayerCollection"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/kfac/layer_collection/LayerParametersDict", "k": ["__contains__", "__delitem__", "__eq__", "__getitem__", "__init__", "__iter__", "__ne__", "__reduce__", "__repr__", "__reversed__", "__setitem__", "clear", "copy", "fromkeys", "items", "iteritems", "iterkeys", "itervalues", "keys", "pop", "popitem", "setdefault", "update", "values", "viewitems", "viewkeys", "viewvalues", "__hash__"], "r": "r1.7", "t": "tf.contrib.kfac.layer_collection.LayerParametersDict"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/kfac/loss_functions", "k": [], "r": "r1.7", "t": "tf.contrib.kfac.loss_functions"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/kfac/loss_functions/CategoricalLogitsNegativeLogProbLoss", "k": ["dist", "fisher_factor_inner_shape", "fisher_factor_inner_static_shape", "hessian_factor_inner_shape", "hessian_factor_inner_static_shape", "input_minibatches", "inputs", "num_registered_minibatches", "params", "targets", "__init__", "evaluate", "evaluate_on_sample", "multiply_fisher", "multiply_fisher_factor", "multiply_fisher_factor_replicated_one_hot", "multiply_fisher_factor_transpose", "multiply_hessian", "multiply_hessian_factor", "multiply_hessian_factor_replicated_one_hot", "multiply_hessian_factor_transpose", "register_additional_minibatch", "sample"], "r": "r1.7", "t": "tf.contrib.kfac.loss_functions.CategoricalLogitsNegativeLogProbLoss"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/kfac/loss_functions/DistributionNegativeLogProbLoss", "k": ["dist", "fisher_factor_inner_shape", "fisher_factor_inner_static_shape", "hessian_factor_inner_shape", "hessian_factor_inner_static_shape", "input_minibatches", "inputs", "num_registered_minibatches", "params", "targets", "__init__", "evaluate", "evaluate_on_sample", "multiply_fisher", "multiply_fisher_factor", "multiply_fisher_factor_replicated_one_hot", "multiply_fisher_factor_transpose", "multiply_hessian", "multiply_hessian_factor", "multiply_hessian_factor_replicated_one_hot", "multiply_hessian_factor_transpose", "sample"], "r": "r1.7", "t": "tf.contrib.kfac.loss_functions.DistributionNegativeLogProbLoss"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/kfac/loss_functions/LossFunction", "k": ["hessian_factor_inner_shape", "hessian_factor_inner_static_shape", "input_minibatches", "inputs", "num_registered_minibatches", "targets", "evaluate", "multiply_hessian", "multiply_hessian_factor", "multiply_hessian_factor_replicated_one_hot", "multiply_hessian_factor_transpose"], "r": "r1.7", "t": "tf.contrib.kfac.loss_functions.LossFunction"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/kfac/loss_functions/MultiBernoulliNegativeLogProbLoss", "k": ["dist", "fisher_factor_inner_shape", "fisher_factor_inner_static_shape", "hessian_factor_inner_shape", "hessian_factor_inner_static_shape", "input_minibatches", "inputs", "num_registered_minibatches", "params", "targets", "__init__", "evaluate", "evaluate_on_sample", "multiply_fisher", "multiply_fisher_factor", "multiply_fisher_factor_replicated_one_hot", "multiply_fisher_factor_transpose", "multiply_hessian", "multiply_hessian_factor", "multiply_hessian_factor_replicated_one_hot", "multiply_hessian_factor_transpose", "sample"], "r": "r1.7", "t": "tf.contrib.kfac.loss_functions.MultiBernoulliNegativeLogProbLoss"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/kfac/loss_functions/NaturalParamsNegativeLogProbLoss", "k": ["fisher_factor_inner_shape", "fisher_factor_inner_static_shape", "hessian_factor_inner_shape", "hessian_factor_inner_static_shape", "input_minibatches", "inputs", "num_registered_minibatches", "params", "targets", "__init__", "evaluate", "evaluate_on_sample", "multiply_fisher", "multiply_fisher_factor", "multiply_fisher_factor_replicated_one_hot", "multiply_fisher_factor_transpose", "multiply_hessian", "multiply_hessian_factor", "multiply_hessian_factor_replicated_one_hot", "multiply_hessian_factor_transpose", "sample"], "r": "r1.7", "t": "tf.contrib.kfac.loss_functions.NaturalParamsNegativeLogProbLoss"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/kfac/loss_functions/NegativeLogProbLoss", "k": ["fisher_factor_inner_shape", "fisher_factor_inner_static_shape", "hessian_factor_inner_shape", "hessian_factor_inner_static_shape", "input_minibatches", "inputs", "num_registered_minibatches", "params", "targets", "__init__", "evaluate", "evaluate_on_sample", "multiply_fisher", "multiply_fisher_factor", "multiply_fisher_factor_replicated_one_hot", "multiply_fisher_factor_transpose", "multiply_hessian", "multiply_hessian_factor", "multiply_hessian_factor_replicated_one_hot", "multiply_hessian_factor_transpose", "sample"], "r": "r1.7", "t": "tf.contrib.kfac.loss_functions.NegativeLogProbLoss"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/kfac/loss_functions/NormalMeanNegativeLogProbLoss", "k": ["dist", "fisher_factor_inner_shape", "fisher_factor_inner_static_shape", "hessian_factor_inner_shape", "hessian_factor_inner_static_shape", "input_minibatches", "inputs", "num_registered_minibatches", "params", "targets", "__init__", "evaluate", "evaluate_on_sample", "multiply_fisher", "multiply_fisher_factor", "multiply_fisher_factor_replicated_one_hot", "multiply_fisher_factor_transpose", "multiply_hessian", "multiply_hessian_factor", "multiply_hessian_factor_replicated_one_hot", "multiply_hessian_factor_transpose", "sample"], "r": "r1.7", "t": "tf.contrib.kfac.loss_functions.NormalMeanNegativeLogProbLoss"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/kfac/loss_functions/NormalMeanVarianceNegativeLogProbLoss", "k": ["dist", "fisher_factor_inner_shape", "fisher_factor_inner_static_shape", "hessian_factor_inner_shape", "hessian_factor_inner_static_shape", "input_minibatches", "inputs", "num_registered_minibatches", "params", "targets", "__init__", "evaluate", "evaluate_on_sample", "multiply_fisher", "multiply_fisher_factor", "multiply_fisher_factor_replicated_one_hot", "multiply_fisher_factor_transpose", "multiply_hessian", "multiply_hessian_factor", "multiply_hessian_factor_replicated_one_hot", "multiply_hessian_factor_transpose", "sample"], "r": "r1.7", "t": "tf.contrib.kfac.loss_functions.NormalMeanVarianceNegativeLogProbLoss"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/kfac/loss_functions/OnehotCategoricalLogitsNegativeLogProbLoss", "k": ["dist", "fisher_factor_inner_shape", "fisher_factor_inner_static_shape", "hessian_factor_inner_shape", "hessian_factor_inner_static_shape", "input_minibatches", "inputs", "num_registered_minibatches", "params", "targets", "__init__", "evaluate", "evaluate_on_sample", "multiply_fisher", "multiply_fisher_factor", "multiply_fisher_factor_replicated_one_hot", "multiply_fisher_factor_transpose", "multiply_hessian", "multiply_hessian_factor", "multiply_hessian_factor_replicated_one_hot", "multiply_hessian_factor_transpose", "register_additional_minibatch", "sample"], "r": "r1.7", "t": "tf.contrib.kfac.loss_functions.OnehotCategoricalLogitsNegativeLogProbLoss"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/kfac/loss_functions/insert_slice_in_zeros", "k": [], "r": "r1.7", "t": "tf.contrib.kfac.loss_functions.insert_slice_in_zeros"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/kfac/op_queue", "k": [], "r": "r1.7", "t": "tf.contrib.kfac.op_queue"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/kfac/op_queue/OpQueue", "k": ["ops", "__init__", "next_op"], "r": "r1.7", "t": "tf.contrib.kfac.op_queue.OpQueue"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/kfac/optimizer", "k": [], "r": "r1.7", "t": "tf.contrib.kfac.optimizer"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/kfac/optimizer/KfacOptimizer", "k": ["cov_update_op", "cov_update_ops", "cov_update_thunks", "damping", "damping_adaptation_interval", "inv_update_op", "inv_update_ops", "inv_update_thunks", "variables", "__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "set_damping_adaptation_params", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.7", "t": "tf.contrib.kfac.optimizer.KfacOptimizer"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/kfac/utils", "k": [], "r": "r1.7", "t": "tf.contrib.kfac.utils"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/kfac/utils/SequenceDict", "k": ["__getitem__", "__init__", "__setitem__", "items"], "r": "r1.7", "t": "tf.contrib.kfac.utils.SequenceDict"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/kfac/utils/SubGraph", "k": ["__init__", "filter_list", "is_member", "variable_uses"], "r": "r1.7", "t": "tf.contrib.kfac.utils.SubGraph"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/kfac/utils/batch_execute", "k": [], "r": "r1.7", "t": "tf.contrib.kfac.utils.batch_execute"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/kfac/utils/column_to_tensors", "k": [], "r": "r1.7", "t": "tf.contrib.kfac.utils.column_to_tensors"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/kfac/utils/ensure_sequence", "k": [], "r": "r1.7", "t": "tf.contrib.kfac.utils.ensure_sequence"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/kfac/utils/fwd_gradients", "k": [], "r": "r1.7", "t": "tf.contrib.kfac.utils.fwd_gradients"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/kfac/utils/generate_random_signs", "k": [], "r": "r1.7", "t": "tf.contrib.kfac.utils.generate_random_signs"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/kfac/utils/kronecker_product", "k": [], "r": "r1.7", "t": "tf.contrib.kfac.utils.kronecker_product"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/kfac/utils/layer_params_to_mat2d", "k": [], "r": "r1.7", "t": "tf.contrib.kfac.utils.layer_params_to_mat2d"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/kfac/utils/mat2d_to_layer_params", "k": [], "r": "r1.7", "t": "tf.contrib.kfac.utils.mat2d_to_layer_params"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/kfac/utils/matmul_diag_sparse", "k": [], "r": "r1.7", "t": "tf.contrib.kfac.utils.matmul_diag_sparse"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/kfac/utils/matmul_sparse_dense", "k": [], "r": "r1.7", "t": "tf.contrib.kfac.utils.matmul_sparse_dense"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/kfac/utils/posdef_inv", "k": [], "r": "r1.7", "t": "tf.contrib.kfac.utils.posdef_inv"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/kfac/utils/posdef_inv_cholesky", "k": [], "r": "r1.7", "t": "tf.contrib.kfac.utils.posdef_inv_cholesky"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/kfac/utils/posdef_inv_matrix_inverse", "k": [], "r": "r1.7", "t": "tf.contrib.kfac.utils.posdef_inv_matrix_inverse"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/kfac/utils/set_global_constants", "k": [], "r": "r1.7", "t": "tf.contrib.kfac.utils.set_global_constants"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/kfac/utils/tensors_to_column", "k": [], "r": "r1.7", "t": "tf.contrib.kfac.utils.tensors_to_column"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/labeled_tensor", "k": [], "r": "r1.7", "t": "tf.contrib.labeled_tensor"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/layers", "k": ["OPTIMIZER_CLS_NAMES", "OPTIMIZER_SUMMARIES", "SPARSE_FEATURE_CROSS_DEFAULT_HASH_KEY", "elu", "legacy_linear", "legacy_relu", "linear", "relu", "relu6", "scale_gradient"], "r": "r1.7", "t": "tf.contrib.layers"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/layers/GDN", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "r1.7", "t": "tf.contrib.layers.GDN"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/layers/RevBlock", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "backward", "build", "call", "compute_output_shape", "count_params", "forward", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "r1.7", "t": "tf.contrib.layers.RevBlock"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/layers/apply_regularization", "k": [], "r": "r1.7", "t": "tf.contrib.layers.apply_regularization"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/layers/avg_pool2d", "k": [], "r": "r1.7", "t": "tf.contrib.layers.avg_pool2d"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/layers/avg_pool3d", "k": [], "r": "r1.7", "t": "tf.contrib.layers.avg_pool3d"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/layers/batch_norm", "k": [], "r": "r1.7", "t": "tf.contrib.layers.batch_norm"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/layers/bias_add", "k": [], "r": "r1.7", "t": "tf.contrib.layers.bias_add"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/layers/bow_encoder", "k": [], "r": "r1.7", "t": "tf.contrib.layers.bow_encoder"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/layers/bucketized_column", "k": [], "r": "r1.7", "t": "tf.contrib.layers.bucketized_column"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/layers/check_feature_columns", "k": [], "r": "r1.7", "t": "tf.contrib.layers.check_feature_columns"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/layers/conv2d", "k": [], "r": "r1.7", "t": "tf.contrib.layers.conv2d"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/layers/conv2d_in_plane", "k": [], "r": "r1.7", "t": "tf.contrib.layers.conv2d_in_plane"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/layers/conv2d_transpose", "k": [], "r": "r1.7", "t": "tf.contrib.layers.conv2d_transpose"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/layers/conv3d_transpose", "k": [], "r": "r1.7", "t": "tf.contrib.layers.conv3d_transpose"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/layers/create_feature_spec_for_parsing", "k": [], "r": "r1.7", "t": "tf.contrib.layers.create_feature_spec_for_parsing"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/layers/crossed_column", "k": [], "r": "r1.7", "t": "tf.contrib.layers.crossed_column"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/layers/dense_to_sparse", "k": [], "r": "r1.7", "t": "tf.contrib.layers.dense_to_sparse"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/layers/dropout", "k": [], "r": "r1.7", "t": "tf.contrib.layers.dropout"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/layers/embed_sequence", "k": [], "r": "r1.7", "t": "tf.contrib.layers.embed_sequence"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/layers/embedding_column", "k": [], "r": "r1.7", "t": "tf.contrib.layers.embedding_column"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/layers/embedding_lookup_unique", "k": [], "r": "r1.7", "t": "tf.contrib.layers.embedding_lookup_unique"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/layers/feature_column", "k": [], "r": "r1.7", "t": "tf.contrib.layers.feature_column"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/layers/flatten", "k": [], "r": "r1.7", "t": "tf.contrib.layers.flatten"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/layers/fully_connected", "k": [], "r": "r1.7", "t": "tf.contrib.layers.fully_connected"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/layers/gdn", "k": [], "r": "r1.7", "t": "tf.contrib.layers.gdn"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/layers/images_to_sequence", "k": [], "r": "r1.7", "t": "tf.contrib.layers.images_to_sequence"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/layers/infer_real_valued_columns", "k": [], "r": "r1.7", "t": "tf.contrib.layers.infer_real_valued_columns"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/layers/input_from_feature_columns", "k": [], "r": "r1.7", "t": "tf.contrib.layers.input_from_feature_columns"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/layers/instance_norm", "k": [], "r": "r1.7", "t": "tf.contrib.layers.instance_norm"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/layers/joint_weighted_sum_from_feature_columns", "k": [], "r": "r1.7", "t": "tf.contrib.layers.joint_weighted_sum_from_feature_columns"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/layers/l1_l2_regularizer", "k": [], "r": "r1.7", "t": "tf.contrib.layers.l1_l2_regularizer"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/layers/l1_regularizer", "k": [], "r": "r1.7", "t": "tf.contrib.layers.l1_regularizer"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/layers/l2_regularizer", "k": [], "r": "r1.7", "t": "tf.contrib.layers.l2_regularizer"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/layers/layer_norm", "k": [], "r": "r1.7", "t": "tf.contrib.layers.layer_norm"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/layers/legacy_fully_connected", "k": [], "r": "r1.7", "t": "tf.contrib.layers.legacy_fully_connected"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/layers/make_place_holder_tensors_for_base_features", "k": [], "r": "r1.7", "t": "tf.contrib.layers.make_place_holder_tensors_for_base_features"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/layers/max_pool2d", "k": [], "r": "r1.7", "t": "tf.contrib.layers.max_pool2d"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/layers/max_pool3d", "k": [], "r": "r1.7", "t": "tf.contrib.layers.max_pool3d"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/layers/maxout", "k": [], "r": "r1.7", "t": "tf.contrib.layers.maxout"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/layers/multi_class_target", "k": [], "r": "r1.7", "t": "tf.contrib.layers.multi_class_target"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/layers/one_hot_column", "k": [], "r": "r1.7", "t": "tf.contrib.layers.one_hot_column"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/layers/one_hot_encoding", "k": [], "r": "r1.7", "t": "tf.contrib.layers.one_hot_encoding"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/layers/optimize_loss", "k": [], "r": "r1.7", "t": "tf.contrib.layers.optimize_loss"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/layers/parse_feature_columns_from_examples", "k": [], "r": "r1.7", "t": "tf.contrib.layers.parse_feature_columns_from_examples"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/layers/parse_feature_columns_from_sequence_examples", "k": [], "r": "r1.7", "t": "tf.contrib.layers.parse_feature_columns_from_sequence_examples"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/layers/real_valued_column", "k": [], "r": "r1.7", "t": "tf.contrib.layers.real_valued_column"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/layers/recompute_grad", "k": [], "r": "r1.7", "t": "tf.contrib.layers.recompute_grad"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/layers/regression_target", "k": [], "r": "r1.7", "t": "tf.contrib.layers.regression_target"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/layers/repeat", "k": [], "r": "r1.7", "t": "tf.contrib.layers.repeat"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/layers/rev_block", "k": [], "r": "r1.7", "t": "tf.contrib.layers.rev_block"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/layers/safe_embedding_lookup_sparse", "k": [], "r": "r1.7", "t": "tf.contrib.layers.safe_embedding_lookup_sparse"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/layers/scattered_embedding_column", "k": [], "r": "r1.7", "t": "tf.contrib.layers.scattered_embedding_column"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/layers/separable_conv2d", "k": [], "r": "r1.7", "t": "tf.contrib.layers.separable_conv2d"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/layers/sequence_input_from_feature_columns", "k": [], "r": "r1.7", "t": "tf.contrib.layers.sequence_input_from_feature_columns"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/layers/sequence_to_images", "k": [], "r": "r1.7", "t": "tf.contrib.layers.sequence_to_images"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/layers/shared_embedding_columns", "k": [], "r": "r1.7", "t": "tf.contrib.layers.shared_embedding_columns"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/layers/softmax", "k": [], "r": "r1.7", "t": "tf.contrib.layers.softmax"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/layers/sparse_column_with_hash_bucket", "k": [], "r": "r1.7", "t": "tf.contrib.layers.sparse_column_with_hash_bucket"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/layers/sparse_column_with_integerized_feature", "k": [], "r": "r1.7", "t": "tf.contrib.layers.sparse_column_with_integerized_feature"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/layers/sparse_column_with_keys", "k": [], "r": "r1.7", "t": "tf.contrib.layers.sparse_column_with_keys"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/layers/sparse_column_with_vocabulary_file", "k": [], "r": "r1.7", "t": "tf.contrib.layers.sparse_column_with_vocabulary_file"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/layers/spatial_softmax", "k": [], "r": "r1.7", "t": "tf.contrib.layers.spatial_softmax"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/layers/stack", "k": [], "r": "r1.7", "t": "tf.contrib.layers.stack"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/layers/sum_regularizer", "k": [], "r": "r1.7", "t": "tf.contrib.layers.sum_regularizer"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/layers/summaries", "k": [], "r": "r1.7", "t": "tf.contrib.layers.summaries"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/layers/summarize_activation", "k": [], "r": "r1.7", "t": "tf.contrib.layers.summarize_activation"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/layers/summarize_activations", "k": [], "r": "r1.7", "t": "tf.contrib.layers.summarize_activations"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/layers/summarize_collection", "k": [], "r": "r1.7", "t": "tf.contrib.layers.summarize_collection"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/layers/summarize_tensor", "k": [], "r": "r1.7", "t": "tf.contrib.layers.summarize_tensor"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/layers/summarize_tensors", "k": [], "r": "r1.7", "t": "tf.contrib.layers.summarize_tensors"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/layers/transform_features", "k": [], "r": "r1.7", "t": "tf.contrib.layers.transform_features"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/layers/unit_norm", "k": [], "r": "r1.7", "t": "tf.contrib.layers.unit_norm"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/layers/variance_scaling_initializer", "k": [], "r": "r1.7", "t": "tf.contrib.layers.variance_scaling_initializer"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/layers/weighted_sparse_column", "k": [], "r": "r1.7", "t": "tf.contrib.layers.weighted_sparse_column"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/layers/weighted_sum_from_feature_columns", "k": [], "r": "r1.7", "t": "tf.contrib.layers.weighted_sum_from_feature_columns"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/layers/xavier_initializer", "k": [], "r": "r1.7", "t": "tf.contrib.layers.xavier_initializer"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/learn", "k": [], "r": "r1.7", "t": "tf.contrib.learn"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/learn/BaseEstimator", "k": ["config", "model_dir", "__init__", "evaluate", "export", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "set_params"], "r": "r1.7", "t": "tf.contrib.learn.BaseEstimator"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/learn/DNNClassifier", "k": ["config", "model_dir", "__init__", "evaluate", "export", "export_savedmodel", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "predict_classes", "predict_proba", "set_params"], "r": "r1.7", "t": "tf.contrib.learn.DNNClassifier"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/learn/DNNEstimator", "k": ["config", "model_dir", "__init__", "evaluate", "export", "export_savedmodel", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "set_params"], "r": "r1.7", "t": "tf.contrib.learn.DNNEstimator"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/learn/DNNLinearCombinedClassifier", "k": ["config", "model_dir", "__init__", "evaluate", "export", "export_savedmodel", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "predict_classes", "predict_proba", "set_params"], "r": "r1.7", "t": "tf.contrib.learn.DNNLinearCombinedClassifier"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/learn/DNNLinearCombinedEstimator", "k": ["config", "model_dir", "__init__", "evaluate", "export", "export_savedmodel", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "set_params"], "r": "r1.7", "t": "tf.contrib.learn.DNNLinearCombinedEstimator"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/learn/DNNLinearCombinedRegressor", "k": ["config", "model_dir", "__init__", "evaluate", "export", "export_savedmodel", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "predict_scores", "set_params"], "r": "r1.7", "t": "tf.contrib.learn.DNNLinearCombinedRegressor"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/learn/DNNRegressor", "k": ["config", "model_dir", "__init__", "evaluate", "export", "export_savedmodel", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "predict_scores", "set_params"], "r": "r1.7", "t": "tf.contrib.learn.DNNRegressor"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/learn/DynamicRnnEstimator", "k": ["config", "model_dir", "__init__", "evaluate", "export", "export_savedmodel", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "set_params"], "r": "r1.7", "t": "tf.contrib.learn.DynamicRnnEstimator"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/learn/Estimator", "k": ["config", "model_dir", "__init__", "evaluate", "export", "export_savedmodel", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "set_params"], "r": "r1.7", "t": "tf.contrib.learn.Estimator"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/learn/Evaluable", "k": ["model_dir", "evaluate"], "r": "r1.7", "t": "tf.contrib.learn.Evaluable"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/learn/Experiment", "k": ["estimator", "eval_metrics", "eval_steps", "train_steps", "__init__", "continuous_eval", "continuous_eval_on_train_data", "continuous_train_and_eval", "evaluate", "extend_train_hooks", "local_run", "reset_export_strategies", "run_std_server", "test", "train", "train_and_evaluate"], "r": "r1.7", "t": "tf.contrib.learn.Experiment"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/learn/ExportStrategy", "k": ["export_fn", "name", "strip_default_attrs", "__new__", "export"], "r": "r1.7", "t": "tf.contrib.learn.ExportStrategy"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/learn/Head", "k": ["logits_dimension", "create_model_fn_ops"], "r": "r1.7", "t": "tf.contrib.learn.Head"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/learn/InputFnOps", "k": ["default_inputs", "features", "labels", "__new__"], "r": "r1.7", "t": "tf.contrib.learn.InputFnOps"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/learn/KMeansClustering", "k": ["config", "model_dir", "__init__", "clusters", "evaluate", "export", "export_savedmodel", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "predict_cluster_idx", "score", "set_params", "transform", "ALL_SCORES", "CLUSTERS", "CLUSTER_IDX", "COSINE_DISTANCE", "KMEANS_PLUS_PLUS_INIT", "LOSS_OP_NAME", "RANDOM_INIT", "SCORES", "SQUARED_EUCLIDEAN_DISTANCE"], "r": "r1.7", "t": "tf.contrib.learn.KMeansClustering"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/learn/LinearClassifier", "k": ["config", "model_dir", "__init__", "evaluate", "export", "export_savedmodel", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "predict_classes", "predict_proba", "set_params"], "r": "r1.7", "t": "tf.contrib.learn.LinearClassifier"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/learn/LinearEstimator", "k": ["config", "model_dir", "__init__", "evaluate", "export", "export_savedmodel", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "set_params"], "r": "r1.7", "t": "tf.contrib.learn.LinearEstimator"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/learn/LinearRegressor", "k": ["config", "model_dir", "__init__", "evaluate", "export", "export_savedmodel", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "predict_scores", "set_params"], "r": "r1.7", "t": "tf.contrib.learn.LinearRegressor"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/learn/LogisticRegressor", "k": [], "r": "r1.7", "t": "tf.contrib.learn.LogisticRegressor"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/learn/MetricSpec", "k": ["label_key", "metric_fn", "prediction_key", "weight_key", "__init__", "create_metric_ops"], "r": "r1.7", "t": "tf.contrib.learn.MetricSpec"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/learn/ModeKeys", "k": ["validate", "EVAL", "INFER", "TRAIN"], "r": "r1.7", "t": "tf.contrib.learn.ModeKeys"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/learn/ModelFnOps", "k": ["eval_metric_ops", "loss", "mode", "output_alternatives", "predictions", "scaffold", "train_op", "training_chief_hooks", "training_hooks", "__new__", "estimator_spec"], "r": "r1.7", "t": "tf.contrib.learn.ModelFnOps"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/learn/NanLossDuringTrainingError", "k": [], "r": "r1.7", "t": "tf.contrib.learn.NanLossDuringTrainingError"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/learn/NotFittedError", "k": [], "r": "r1.7", "t": "tf.contrib.learn.NotFittedError"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/learn/PredictionKey", "k": ["CLASSES", "GENERIC", "LOGISTIC", "LOGITS", "PROBABILITIES", "SCORES", "TOP_K"], "r": "r1.7", "t": "tf.contrib.learn.PredictionKey"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/learn/ProblemType", "k": ["CLASSIFICATION", "LINEAR_REGRESSION", "LOGISTIC_REGRESSION", "UNSPECIFIED"], "r": "r1.7", "t": "tf.contrib.learn.ProblemType"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/learn/RunConfig", "k": ["cluster_spec", "environment", "evaluation_master", "global_id_in_cluster", "is_chief", "keep_checkpoint_every_n_hours", "keep_checkpoint_max", "log_step_count_steps", "master", "model_dir", "num_ps_replicas", "num_worker_replicas", "save_checkpoints_secs", "save_checkpoints_steps", "save_summary_steps", "service", "session_config", "task_id", "task_type", "tf_config", "tf_random_seed", "__init__", "get_task_id", "replace", "uid"], "r": "r1.7", "t": "tf.contrib.learn.RunConfig"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/learn/SKCompat", "k": ["__init__", "fit", "get_params", "predict", "score", "set_params"], "r": "r1.7", "t": "tf.contrib.learn.SKCompat"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/learn/SVM", "k": ["config", "model_dir", "__init__", "evaluate", "export", "export_savedmodel", "export_with_defaults", "fit", "get_params", "get_variable_names", "get_variable_value", "partial_fit", "predict", "predict_classes", "predict_proba", "set_params"], "r": "r1.7", "t": "tf.contrib.learn.SVM"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/learn/TaskType", "k": ["MASTER", "PS", "WORKER"], "r": "r1.7", "t": "tf.contrib.learn.TaskType"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/learn/Trainable", "k": ["fit"], "r": "r1.7", "t": "tf.contrib.learn.Trainable"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/learn/binary_svm_head", "k": [], "r": "r1.7", "t": "tf.contrib.learn.binary_svm_head"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/learn/build_parsing_serving_input_fn", "k": [], "r": "r1.7", "t": "tf.contrib.learn.build_parsing_serving_input_fn"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/learn/datasets", "k": [], "r": "r1.7", "t": "tf.contrib.learn.datasets"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/learn/evaluate", "k": [], "r": "r1.7", "t": "tf.contrib.learn.evaluate"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/learn/extract_dask_data", "k": [], "r": "r1.7", "t": "tf.contrib.learn.extract_dask_data"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/learn/extract_dask_labels", "k": [], "r": "r1.7", "t": "tf.contrib.learn.extract_dask_labels"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/learn/extract_pandas_data", "k": [], "r": "r1.7", "t": "tf.contrib.learn.extract_pandas_data"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/learn/extract_pandas_labels", "k": [], "r": "r1.7", "t": "tf.contrib.learn.extract_pandas_labels"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/learn/extract_pandas_matrix", "k": [], "r": "r1.7", "t": "tf.contrib.learn.extract_pandas_matrix"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/learn/graph_actions", "k": [], "r": "r1.7", "t": "tf.contrib.learn.graph_actions"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/learn/head", "k": [], "r": "r1.7", "t": "tf.contrib.learn.head"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/learn/infer", "k": [], "r": "r1.7", "t": "tf.contrib.learn.infer"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/learn/infer_real_valued_columns_from_input", "k": [], "r": "r1.7", "t": "tf.contrib.learn.infer_real_valued_columns_from_input"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/learn/infer_real_valued_columns_from_input_fn", "k": [], "r": "r1.7", "t": "tf.contrib.learn.infer_real_valued_columns_from_input_fn"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/learn/io", "k": [], "r": "r1.7", "t": "tf.contrib.learn.io"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/learn/learn_runner", "k": [], "r": "r1.7", "t": "tf.contrib.learn.learn_runner"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/learn/learn_runner/run", "k": [], "r": "r1.7", "t": "tf.contrib.learn.learn_runner.run"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/learn/learn_runner/tune", "k": [], "r": "r1.7", "t": "tf.contrib.learn.learn_runner.tune"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/learn/make_export_strategy", "k": [], "r": "r1.7", "t": "tf.contrib.learn.make_export_strategy"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/learn/models", "k": [], "r": "r1.7", "t": "tf.contrib.learn.models"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/learn/monitors", "k": [], "r": "r1.7", "t": "tf.contrib.learn.monitors"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/learn/multi_class_head", "k": [], "r": "r1.7", "t": "tf.contrib.learn.multi_class_head"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/learn/multi_head", "k": [], "r": "r1.7", "t": "tf.contrib.learn.multi_head"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/learn/multi_label_head", "k": [], "r": "r1.7", "t": "tf.contrib.learn.multi_label_head"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/learn/no_op_train_fn", "k": [], "r": "r1.7", "t": "tf.contrib.learn.no_op_train_fn"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/learn/ops", "k": [], "r": "r1.7", "t": "tf.contrib.learn.ops"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/learn/poisson_regression_head", "k": [], "r": "r1.7", "t": "tf.contrib.learn.poisson_regression_head"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/learn/preprocessing", "k": [], "r": "r1.7", "t": "tf.contrib.learn.preprocessing"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/learn/read_batch_examples", "k": [], "r": "r1.7", "t": "tf.contrib.learn.read_batch_examples"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/learn/read_batch_features", "k": [], "r": "r1.7", "t": "tf.contrib.learn.read_batch_features"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/learn/read_batch_record_features", "k": [], "r": "r1.7", "t": "tf.contrib.learn.read_batch_record_features"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/learn/read_keyed_batch_examples", "k": [], "r": "r1.7", "t": "tf.contrib.learn.read_keyed_batch_examples"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/learn/read_keyed_batch_examples_shared_queue", "k": [], "r": "r1.7", "t": "tf.contrib.learn.read_keyed_batch_examples_shared_queue"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/learn/read_keyed_batch_features", "k": [], "r": "r1.7", "t": "tf.contrib.learn.read_keyed_batch_features"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/learn/read_keyed_batch_features_shared_queue", "k": [], "r": "r1.7", "t": "tf.contrib.learn.read_keyed_batch_features_shared_queue"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/learn/regression_head", "k": [], "r": "r1.7", "t": "tf.contrib.learn.regression_head"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/learn/run_feeds", "k": [], "r": "r1.7", "t": "tf.contrib.learn.run_feeds"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/learn/run_n", "k": [], "r": "r1.7", "t": "tf.contrib.learn.run_n"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/learn/train", "k": [], "r": "r1.7", "t": "tf.contrib.learn.train"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/learn/utils", "k": [], "r": "r1.7", "t": "tf.contrib.learn.utils"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/legacy_seq2seq", "k": [], "r": "r1.7", "t": "tf.contrib.legacy_seq2seq"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/legacy_seq2seq/attention_decoder", "k": [], "r": "r1.7", "t": "tf.contrib.legacy_seq2seq.attention_decoder"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/legacy_seq2seq/basic_rnn_seq2seq", "k": [], "r": "r1.7", "t": "tf.contrib.legacy_seq2seq.basic_rnn_seq2seq"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/legacy_seq2seq/embedding_attention_decoder", "k": [], "r": "r1.7", "t": "tf.contrib.legacy_seq2seq.embedding_attention_decoder"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/legacy_seq2seq/embedding_attention_seq2seq", "k": [], "r": "r1.7", "t": "tf.contrib.legacy_seq2seq.embedding_attention_seq2seq"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/legacy_seq2seq/embedding_rnn_decoder", "k": [], "r": "r1.7", "t": "tf.contrib.legacy_seq2seq.embedding_rnn_decoder"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/legacy_seq2seq/embedding_rnn_seq2seq", "k": [], "r": "r1.7", "t": "tf.contrib.legacy_seq2seq.embedding_rnn_seq2seq"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/legacy_seq2seq/embedding_tied_rnn_seq2seq", "k": [], "r": "r1.7", "t": "tf.contrib.legacy_seq2seq.embedding_tied_rnn_seq2seq"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/legacy_seq2seq/model_with_buckets", "k": [], "r": "r1.7", "t": "tf.contrib.legacy_seq2seq.model_with_buckets"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/legacy_seq2seq/one2many_rnn_seq2seq", "k": [], "r": "r1.7", "t": "tf.contrib.legacy_seq2seq.one2many_rnn_seq2seq"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/legacy_seq2seq/rnn_decoder", "k": [], "r": "r1.7", "t": "tf.contrib.legacy_seq2seq.rnn_decoder"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/legacy_seq2seq/sequence_loss", "k": [], "r": "r1.7", "t": "tf.contrib.legacy_seq2seq.sequence_loss"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/legacy_seq2seq/sequence_loss_by_example", "k": [], "r": "r1.7", "t": "tf.contrib.legacy_seq2seq.sequence_loss_by_example"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/legacy_seq2seq/tied_rnn_seq2seq", "k": [], "r": "r1.7", "t": "tf.contrib.legacy_seq2seq.tied_rnn_seq2seq"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/linalg", "k": [], "r": "r1.7", "t": "tf.contrib.linalg"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/linear_optimizer", "k": [], "r": "r1.7", "t": "tf.contrib.linear_optimizer"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/linear_optimizer/SDCAOptimizer", "k": ["example_id_column", "num_loss_partitions", "num_table_shards", "symmetric_l1_regularization", "symmetric_l2_regularization", "__init__", "get_name", "get_train_step"], "r": "r1.7", "t": "tf.contrib.linear_optimizer.SDCAOptimizer"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/linear_optimizer/SdcaModel", "k": ["__init__", "approximate_duality_gap", "minimize", "predictions", "regularized_loss", "unregularized_loss", "update_weights"], "r": "r1.7", "t": "tf.contrib.linear_optimizer.SdcaModel"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/linear_optimizer/SparseFeatureColumn", "k": ["example_indices", "feature_indices", "feature_values", "__init__"], "r": "r1.7", "t": "tf.contrib.linear_optimizer.SparseFeatureColumn"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/lite", "k": ["EXPERIMENTAL_USE_TOCO_API_DIRECTLY", "FLOAT", "GRAPHVIZ_DOT", "INT32", "INT64", "QUANTIZED_UINT8", "STRING", "TENSORFLOW_GRAPHDEF", "TFLITE"], "r": "r1.7", "t": "tf.contrib.lite"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/lite/OpHint", "k": ["__init__", "add_inputs", "add_outputs", "FUNCTION_INPUT_INDEX_ATTR", "FUNCTION_NAME_ATTR", "FUNCTION_OUTPUT_INDEX_ATTR", "FUNCTION_UUID_ATTR"], "r": "r1.7", "t": "tf.contrib.lite.OpHint"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/lite/convert_op_hints_to_stubs", "k": [], "r": "r1.7", "t": "tf.contrib.lite.convert_op_hints_to_stubs"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/lite/toco_convert", "k": [], "r": "r1.7", "t": "tf.contrib.lite.toco_convert"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/lite/toco_convert_protos", "k": [], "r": "r1.7", "t": "tf.contrib.lite.toco_convert_protos"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/lookup", "k": ["FastHashSpec"], "r": "r1.7", "t": "tf.contrib.lookup"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/lookup/HashTable", "k": ["default_value", "init", "key_dtype", "name", "table_ref", "value_dtype", "__init__", "lookup", "size"], "r": "r1.7", "t": "tf.contrib.lookup.HashTable"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/lookup/HasherSpec", "k": ["hasher", "key", "__new__"], "r": "r1.7", "t": "tf.contrib.lookup.HasherSpec"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/lookup/IdTableWithHashBuckets", "k": ["init", "key_dtype", "name", "table_ref", "value_dtype", "__init__", "lookup", "size"], "r": "r1.7", "t": "tf.contrib.lookup.IdTableWithHashBuckets"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/lookup/InitializableLookupTableBase", "k": ["default_value", "init", "key_dtype", "name", "table_ref", "value_dtype", "__init__", "lookup", "size"], "r": "r1.7", "t": "tf.contrib.lookup.InitializableLookupTableBase"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/lookup/KeyValueTensorInitializer", "k": ["key_dtype", "value_dtype", "__init__", "initialize"], "r": "r1.7", "t": "tf.contrib.lookup.KeyValueTensorInitializer"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/lookup/LookupInterface", "k": ["init", "key_dtype", "name", "value_dtype", "__init__", "lookup", "size"], "r": "r1.7", "t": "tf.contrib.lookup.LookupInterface"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/lookup/MutableDenseHashTable", "k": ["init", "key_dtype", "name", "value_dtype", "__init__", "export", "insert", "lookup", "size"], "r": "r1.7", "t": "tf.contrib.lookup.MutableDenseHashTable"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/lookup/MutableHashTable", "k": ["init", "key_dtype", "name", "value_dtype", "__init__", "export", "insert", "lookup", "size"], "r": "r1.7", "t": "tf.contrib.lookup.MutableHashTable"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/lookup/StrongHashSpec", "k": ["hasher", "key", "__new__"], "r": "r1.7", "t": "tf.contrib.lookup.StrongHashSpec"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/lookup/TableInitializerBase", "k": ["key_dtype", "value_dtype", "__init__", "initialize"], "r": "r1.7", "t": "tf.contrib.lookup.TableInitializerBase"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/lookup/TextFileIdTableInitializer", "k": ["key_dtype", "value_dtype", "__init__", "initialize"], "r": "r1.7", "t": "tf.contrib.lookup.TextFileIdTableInitializer"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/lookup/TextFileIndex", "k": ["LINE_NUMBER", "WHOLE_LINE"], "r": "r1.7", "t": "tf.contrib.lookup.TextFileIndex"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/lookup/TextFileInitializer", "k": ["key_dtype", "value_dtype", "__init__", "initialize"], "r": "r1.7", "t": "tf.contrib.lookup.TextFileInitializer"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/lookup/TextFileStringTableInitializer", "k": ["key_dtype", "value_dtype", "__init__", "initialize"], "r": "r1.7", "t": "tf.contrib.lookup.TextFileStringTableInitializer"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/lookup/index_table_from_file", "k": [], "r": "r1.7", "t": "tf.contrib.lookup.index_table_from_file"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/lookup/index_table_from_tensor", "k": [], "r": "r1.7", "t": "tf.contrib.lookup.index_table_from_tensor"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/lookup/index_to_string", "k": [], "r": "r1.7", "t": "tf.contrib.lookup.index_to_string"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/lookup/index_to_string_table_from_file", "k": [], "r": "r1.7", "t": "tf.contrib.lookup.index_to_string_table_from_file"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/lookup/index_to_string_table_from_tensor", "k": [], "r": "r1.7", "t": "tf.contrib.lookup.index_to_string_table_from_tensor"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/lookup/string_to_index", "k": [], "r": "r1.7", "t": "tf.contrib.lookup.string_to_index"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/lookup/string_to_index_table_from_file", "k": [], "r": "r1.7", "t": "tf.contrib.lookup.string_to_index_table_from_file"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/lookup/string_to_index_table_from_tensor", "k": [], "r": "r1.7", "t": "tf.contrib.lookup.string_to_index_table_from_tensor"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/losses", "k": [], "r": "r1.7", "t": "tf.contrib.losses"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/losses/absolute_difference", "k": [], "r": "r1.7", "t": "tf.contrib.losses.absolute_difference"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/losses/add_loss", "k": [], "r": "r1.7", "t": "tf.contrib.losses.add_loss"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/losses/compute_weighted_loss", "k": [], "r": "r1.7", "t": "tf.contrib.losses.compute_weighted_loss"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/losses/cosine_distance", "k": [], "r": "r1.7", "t": "tf.contrib.losses.cosine_distance"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/losses/get_losses", "k": [], "r": "r1.7", "t": "tf.contrib.losses.get_losses"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/losses/get_regularization_losses", "k": [], "r": "r1.7", "t": "tf.contrib.losses.get_regularization_losses"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/losses/get_total_loss", "k": [], "r": "r1.7", "t": "tf.contrib.losses.get_total_loss"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/losses/hinge_loss", "k": [], "r": "r1.7", "t": "tf.contrib.losses.hinge_loss"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/losses/log_loss", "k": [], "r": "r1.7", "t": "tf.contrib.losses.log_loss"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/losses/mean_pairwise_squared_error", "k": [], "r": "r1.7", "t": "tf.contrib.losses.mean_pairwise_squared_error"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/losses/mean_squared_error", "k": [], "r": "r1.7", "t": "tf.contrib.losses.mean_squared_error"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/losses/metric_learning", "k": [], "r": "r1.7", "t": "tf.contrib.losses.metric_learning"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/losses/metric_learning/cluster_loss", "k": [], "r": "r1.7", "t": "tf.contrib.losses.metric_learning.cluster_loss"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/losses/metric_learning/contrastive_loss", "k": [], "r": "r1.7", "t": "tf.contrib.losses.metric_learning.contrastive_loss"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/losses/metric_learning/lifted_struct_loss", "k": [], "r": "r1.7", "t": "tf.contrib.losses.metric_learning.lifted_struct_loss"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/losses/metric_learning/npairs_loss", "k": [], "r": "r1.7", "t": "tf.contrib.losses.metric_learning.npairs_loss"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/losses/metric_learning/npairs_loss_multilabel", "k": [], "r": "r1.7", "t": "tf.contrib.losses.metric_learning.npairs_loss_multilabel"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/losses/metric_learning/triplet_semihard_loss", "k": [], "r": "r1.7", "t": "tf.contrib.losses.metric_learning.triplet_semihard_loss"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/losses/sigmoid_cross_entropy", "k": [], "r": "r1.7", "t": "tf.contrib.losses.sigmoid_cross_entropy"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/losses/softmax_cross_entropy", "k": [], "r": "r1.7", "t": "tf.contrib.losses.softmax_cross_entropy"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/losses/sparse_softmax_cross_entropy", "k": [], "r": "r1.7", "t": "tf.contrib.losses.sparse_softmax_cross_entropy"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/memory_stats", "k": [], "r": "r1.7", "t": "tf.contrib.memory_stats"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/memory_stats/BytesInUse", "k": [], "r": "r1.7", "t": "tf.contrib.memory_stats.BytesInUse"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/memory_stats/BytesLimit", "k": [], "r": "r1.7", "t": "tf.contrib.memory_stats.BytesLimit"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/memory_stats/MaxBytesInUse", "k": [], "r": "r1.7", "t": "tf.contrib.memory_stats.MaxBytesInUse"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/meta_graph_transform", "k": [], "r": "r1.7", "t": "tf.contrib.meta_graph_transform"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/meta_graph_transform/meta_graph_transform", "k": ["absolute_import", "division", "print_function"], "r": "r1.7", "t": "tf.contrib.meta_graph_transform.meta_graph_transform"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/meta_graph_transform/meta_graph_transform/meta_graph_transform", "k": [], "r": "r1.7", "t": "tf.contrib.meta_graph_transform.meta_graph_transform.meta_graph_transform"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/metrics", "k": [], "r": "r1.7", "t": "tf.contrib.metrics"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/metrics/accuracy", "k": [], "r": "r1.7", "t": "tf.contrib.metrics.accuracy"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/metrics/aggregate_metric_map", "k": [], "r": "r1.7", "t": "tf.contrib.metrics.aggregate_metric_map"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/metrics/aggregate_metrics", "k": [], "r": "r1.7", "t": "tf.contrib.metrics.aggregate_metrics"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/metrics/auc_using_histogram", "k": [], "r": "r1.7", "t": "tf.contrib.metrics.auc_using_histogram"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/metrics/auc_with_confidence_intervals", "k": [], "r": "r1.7", "t": "tf.contrib.metrics.auc_with_confidence_intervals"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/metrics/cohen_kappa", "k": [], "r": "r1.7", "t": "tf.contrib.metrics.cohen_kappa"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/metrics/confusion_matrix", "k": [], "r": "r1.7", "t": "tf.contrib.metrics.confusion_matrix"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/metrics/count", "k": [], "r": "r1.7", "t": "tf.contrib.metrics.count"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/metrics/precision_recall_at_equal_thresholds", "k": [], "r": "r1.7", "t": "tf.contrib.metrics.precision_recall_at_equal_thresholds"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/metrics/recall_at_precision", "k": [], "r": "r1.7", "t": "tf.contrib.metrics.recall_at_precision"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/metrics/sparse_recall_at_top_k", "k": [], "r": "r1.7", "t": "tf.contrib.metrics.sparse_recall_at_top_k"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/metrics/streaming_accuracy", "k": [], "r": "r1.7", "t": "tf.contrib.metrics.streaming_accuracy"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/metrics/streaming_auc", "k": [], "r": "r1.7", "t": "tf.contrib.metrics.streaming_auc"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/metrics/streaming_concat", "k": [], "r": "r1.7", "t": "tf.contrib.metrics.streaming_concat"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/metrics/streaming_covariance", "k": [], "r": "r1.7", "t": "tf.contrib.metrics.streaming_covariance"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/metrics/streaming_curve_points", "k": [], "r": "r1.7", "t": "tf.contrib.metrics.streaming_curve_points"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/metrics/streaming_dynamic_auc", "k": [], "r": "r1.7", "t": "tf.contrib.metrics.streaming_dynamic_auc"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/metrics/streaming_false_negative_rate", "k": [], "r": "r1.7", "t": "tf.contrib.metrics.streaming_false_negative_rate"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/metrics/streaming_false_negative_rate_at_thresholds", "k": [], "r": "r1.7", "t": "tf.contrib.metrics.streaming_false_negative_rate_at_thresholds"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/metrics/streaming_false_negatives", "k": [], "r": "r1.7", "t": "tf.contrib.metrics.streaming_false_negatives"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/metrics/streaming_false_negatives_at_thresholds", "k": [], "r": "r1.7", "t": "tf.contrib.metrics.streaming_false_negatives_at_thresholds"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/metrics/streaming_false_positive_rate", "k": [], "r": "r1.7", "t": "tf.contrib.metrics.streaming_false_positive_rate"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/metrics/streaming_false_positive_rate_at_thresholds", "k": [], "r": "r1.7", "t": "tf.contrib.metrics.streaming_false_positive_rate_at_thresholds"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/metrics/streaming_false_positives", "k": [], "r": "r1.7", "t": "tf.contrib.metrics.streaming_false_positives"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/metrics/streaming_false_positives_at_thresholds", "k": [], "r": "r1.7", "t": "tf.contrib.metrics.streaming_false_positives_at_thresholds"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/metrics/streaming_mean", "k": [], "r": "r1.7", "t": "tf.contrib.metrics.streaming_mean"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/metrics/streaming_mean_absolute_error", "k": [], "r": "r1.7", "t": "tf.contrib.metrics.streaming_mean_absolute_error"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/metrics/streaming_mean_cosine_distance", "k": [], "r": "r1.7", "t": "tf.contrib.metrics.streaming_mean_cosine_distance"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/metrics/streaming_mean_iou", "k": [], "r": "r1.7", "t": "tf.contrib.metrics.streaming_mean_iou"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/metrics/streaming_mean_relative_error", "k": [], "r": "r1.7", "t": "tf.contrib.metrics.streaming_mean_relative_error"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/metrics/streaming_mean_squared_error", "k": [], "r": "r1.7", "t": "tf.contrib.metrics.streaming_mean_squared_error"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/metrics/streaming_mean_tensor", "k": [], "r": "r1.7", "t": "tf.contrib.metrics.streaming_mean_tensor"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/metrics/streaming_pearson_correlation", "k": [], "r": "r1.7", "t": "tf.contrib.metrics.streaming_pearson_correlation"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/metrics/streaming_percentage_less", "k": [], "r": "r1.7", "t": "tf.contrib.metrics.streaming_percentage_less"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/metrics/streaming_precision", "k": [], "r": "r1.7", "t": "tf.contrib.metrics.streaming_precision"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/metrics/streaming_precision_at_thresholds", "k": [], "r": "r1.7", "t": "tf.contrib.metrics.streaming_precision_at_thresholds"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/metrics/streaming_recall", "k": [], "r": "r1.7", "t": "tf.contrib.metrics.streaming_recall"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/metrics/streaming_recall_at_k", "k": [], "r": "r1.7", "t": "tf.contrib.metrics.streaming_recall_at_k"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/metrics/streaming_recall_at_thresholds", "k": [], "r": "r1.7", "t": "tf.contrib.metrics.streaming_recall_at_thresholds"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/metrics/streaming_root_mean_squared_error", "k": [], "r": "r1.7", "t": "tf.contrib.metrics.streaming_root_mean_squared_error"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/metrics/streaming_sensitivity_at_specificity", "k": [], "r": "r1.7", "t": "tf.contrib.metrics.streaming_sensitivity_at_specificity"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/metrics/streaming_sparse_average_precision_at_k", "k": [], "r": "r1.7", "t": "tf.contrib.metrics.streaming_sparse_average_precision_at_k"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/metrics/streaming_sparse_average_precision_at_top_k", "k": [], "r": "r1.7", "t": "tf.contrib.metrics.streaming_sparse_average_precision_at_top_k"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/metrics/streaming_sparse_precision_at_k", "k": [], "r": "r1.7", "t": "tf.contrib.metrics.streaming_sparse_precision_at_k"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/metrics/streaming_sparse_precision_at_top_k", "k": [], "r": "r1.7", "t": "tf.contrib.metrics.streaming_sparse_precision_at_top_k"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/metrics/streaming_sparse_recall_at_k", "k": [], "r": "r1.7", "t": "tf.contrib.metrics.streaming_sparse_recall_at_k"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/metrics/streaming_specificity_at_sensitivity", "k": [], "r": "r1.7", "t": "tf.contrib.metrics.streaming_specificity_at_sensitivity"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/metrics/streaming_true_negatives", "k": [], "r": "r1.7", "t": "tf.contrib.metrics.streaming_true_negatives"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/metrics/streaming_true_negatives_at_thresholds", "k": [], "r": "r1.7", "t": "tf.contrib.metrics.streaming_true_negatives_at_thresholds"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/metrics/streaming_true_positives", "k": [], "r": "r1.7", "t": "tf.contrib.metrics.streaming_true_positives"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/metrics/streaming_true_positives_at_thresholds", "k": [], "r": "r1.7", "t": "tf.contrib.metrics.streaming_true_positives_at_thresholds"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/model_pruning", "k": [], "r": "r1.7", "t": "tf.contrib.model_pruning"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/model_pruning/MaskedBasicLSTMCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.7", "t": "tf.contrib.model_pruning.MaskedBasicLSTMCell"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/model_pruning/MaskedLSTMCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.7", "t": "tf.contrib.model_pruning.MaskedLSTMCell"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/model_pruning/Pruning", "k": ["__init__", "add_pruning_summaries", "conditional_mask_update_op", "mask_update_op", "print_hparams"], "r": "r1.7", "t": "tf.contrib.model_pruning.Pruning"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/model_pruning/apply_mask", "k": [], "r": "r1.7", "t": "tf.contrib.model_pruning.apply_mask"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/model_pruning/get_masked_weights", "k": [], "r": "r1.7", "t": "tf.contrib.model_pruning.get_masked_weights"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/model_pruning/get_masks", "k": [], "r": "r1.7", "t": "tf.contrib.model_pruning.get_masks"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/model_pruning/get_pruning_hparams", "k": [], "r": "r1.7", "t": "tf.contrib.model_pruning.get_pruning_hparams"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/model_pruning/get_thresholds", "k": [], "r": "r1.7", "t": "tf.contrib.model_pruning.get_thresholds"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/model_pruning/get_weight_sparsity", "k": [], "r": "r1.7", "t": "tf.contrib.model_pruning.get_weight_sparsity"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/model_pruning/get_weights", "k": [], "r": "r1.7", "t": "tf.contrib.model_pruning.get_weights"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/model_pruning/masked_conv2d", "k": [], "r": "r1.7", "t": "tf.contrib.model_pruning.masked_conv2d"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/model_pruning/masked_fully_connected", "k": [], "r": "r1.7", "t": "tf.contrib.model_pruning.masked_fully_connected"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/model_pruning/train", "k": [], "r": "r1.7", "t": "tf.contrib.model_pruning.train"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/nccl", "k": [], "r": "r1.7", "t": "tf.contrib.nccl"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/nccl/all_max", "k": [], "r": "r1.7", "t": "tf.contrib.nccl.all_max"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/nccl/all_min", "k": [], "r": "r1.7", "t": "tf.contrib.nccl.all_min"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/nccl/all_prod", "k": [], "r": "r1.7", "t": "tf.contrib.nccl.all_prod"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/nccl/all_sum", "k": [], "r": "r1.7", "t": "tf.contrib.nccl.all_sum"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/nccl/broadcast", "k": [], "r": "r1.7", "t": "tf.contrib.nccl.broadcast"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/nccl/reduce_sum", "k": [], "r": "r1.7", "t": "tf.contrib.nccl.reduce_sum"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/nn", "k": [], "r": "r1.7", "t": "tf.contrib.nn"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/nn/alpha_dropout", "k": [], "r": "r1.7", "t": "tf.contrib.nn.alpha_dropout"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/nn/conv1d_transpose", "k": [], "r": "r1.7", "t": "tf.contrib.nn.conv1d_transpose"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/nn/deprecated_flipped_sigmoid_cross_entropy_with_logits", "k": [], "r": "r1.7", "t": "tf.contrib.nn.deprecated_flipped_sigmoid_cross_entropy_with_logits"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/nn/deprecated_flipped_softmax_cross_entropy_with_logits", "k": [], "r": "r1.7", "t": "tf.contrib.nn.deprecated_flipped_softmax_cross_entropy_with_logits"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/nn/deprecated_flipped_sparse_softmax_cross_entropy_with_logits", "k": [], "r": "r1.7", "t": "tf.contrib.nn.deprecated_flipped_sparse_softmax_cross_entropy_with_logits"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/nn/nth_element", "k": [], "r": "r1.7", "t": "tf.contrib.nn.nth_element"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/nn/rank_sampled_softmax_loss", "k": [], "r": "r1.7", "t": "tf.contrib.nn.rank_sampled_softmax_loss"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/nn/sampled_sparse_softmax_loss", "k": [], "r": "r1.7", "t": "tf.contrib.nn.sampled_sparse_softmax_loss"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/nn/scaled_softplus", "k": [], "r": "r1.7", "t": "tf.contrib.nn.scaled_softplus"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/opt", "k": [], "r": "r1.7", "t": "tf.contrib.opt"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/opt/AddSignOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.7", "t": "tf.contrib.opt.AddSignOptimizer"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/opt/DropStaleGradientOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.7", "t": "tf.contrib.opt.DropStaleGradientOptimizer"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/opt/ElasticAverageCustomGetter", "k": ["__call__", "__init__"], "r": "r1.7", "t": "tf.contrib.opt.ElasticAverageCustomGetter"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/opt/ElasticAverageOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_init_op", "get_name", "get_slot", "get_slot_names", "make_session_run_hook", "minimize", "variables", "BETA", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.7", "t": "tf.contrib.opt.ElasticAverageOptimizer"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/opt/ExternalOptimizerInterface", "k": ["__init__", "minimize"], "r": "r1.7", "t": "tf.contrib.opt.ExternalOptimizerInterface"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/opt/LazyAdamOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.7", "t": "tf.contrib.opt.LazyAdamOptimizer"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/opt/ModelAverageCustomGetter", "k": ["__call__", "__init__"], "r": "r1.7", "t": "tf.contrib.opt.ModelAverageCustomGetter"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/opt/ModelAverageOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_init_op", "get_name", "get_slot", "get_slot_names", "make_session_run_hook", "minimize", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.7", "t": "tf.contrib.opt.ModelAverageOptimizer"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/opt/MovingAverageOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "swapping_saver", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.7", "t": "tf.contrib.opt.MovingAverageOptimizer"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/opt/MultitaskOptimizerWrapper", "k": ["__getattr__", "__init__"], "r": "r1.7", "t": "tf.contrib.opt.MultitaskOptimizerWrapper"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/opt/NadamOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.7", "t": "tf.contrib.opt.NadamOptimizer"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/opt/PowerSignOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.7", "t": "tf.contrib.opt.PowerSignOptimizer"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/opt/ScipyOptimizerInterface", "k": ["__init__", "minimize"], "r": "r1.7", "t": "tf.contrib.opt.ScipyOptimizerInterface"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/opt/VariableClippingOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.7", "t": "tf.contrib.opt.VariableClippingOptimizer"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/opt/clip_gradients_by_global_norm", "k": [], "r": "r1.7", "t": "tf.contrib.opt.clip_gradients_by_global_norm"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/periodic_resample", "k": [], "r": "r1.7", "t": "tf.contrib.periodic_resample"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/periodic_resample/periodic_resample", "k": [], "r": "r1.7", "t": "tf.contrib.periodic_resample.periodic_resample"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/predictor", "k": [], "r": "r1.7", "t": "tf.contrib.predictor"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/predictor/from_contrib_estimator", "k": [], "r": "r1.7", "t": "tf.contrib.predictor.from_contrib_estimator"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/predictor/from_estimator", "k": [], "r": "r1.7", "t": "tf.contrib.predictor.from_estimator"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/predictor/from_saved_model", "k": [], "r": "r1.7", "t": "tf.contrib.predictor.from_saved_model"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/quantization", "k": [], "r": "r1.7", "t": "tf.contrib.quantization"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/quantize", "k": [], "r": "r1.7", "t": "tf.contrib.quantize"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/quantize/create_eval_graph", "k": [], "r": "r1.7", "t": "tf.contrib.quantize.create_eval_graph"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/quantize/create_training_graph", "k": [], "r": "r1.7", "t": "tf.contrib.quantize.create_training_graph"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/quantize/experimental_create_eval_graph", "k": [], "r": "r1.7", "t": "tf.contrib.quantize.experimental_create_eval_graph"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/quantize/experimental_create_training_graph", "k": [], "r": "r1.7", "t": "tf.contrib.quantize.experimental_create_training_graph"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/receptive_field", "k": [], "r": "r1.7", "t": "tf.contrib.receptive_field"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/receptive_field/compute_receptive_field_from_graph_def", "k": [], "r": "r1.7", "t": "tf.contrib.receptive_field.compute_receptive_field_from_graph_def"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/receptive_field/get_compute_order", "k": [], "r": "r1.7", "t": "tf.contrib.receptive_field.get_compute_order"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/reduce_slice_ops", "k": ["absolute_import", "division", "print_function"], "r": "r1.7", "t": "tf.contrib.reduce_slice_ops"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/reduce_slice_ops/python", "k": [], "r": "r1.7", "t": "tf.contrib.reduce_slice_ops.python"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/reduce_slice_ops/python/ops", "k": [], "r": "r1.7", "t": "tf.contrib.reduce_slice_ops.python.ops"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/remote_fused_graph", "k": [], "r": "r1.7", "t": "tf.contrib.remote_fused_graph"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/remote_fused_graph/remote_fused_graph_execute", "k": [], "r": "r1.7", "t": "tf.contrib.remote_fused_graph.remote_fused_graph_execute"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/resampler", "k": [], "r": "r1.7", "t": "tf.contrib.resampler"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/resampler/resampler", "k": [], "r": "r1.7", "t": "tf.contrib.resampler.resampler"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/rnn", "k": [], "r": "r1.7", "t": "tf.contrib.rnn"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/rnn/AttentionCellWrapper", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.7", "t": "tf.contrib.rnn.AttentionCellWrapper"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/rnn/BasicLSTMCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.7", "t": "tf.contrib.rnn.BasicLSTMCell"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/rnn/BasicRNNCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.7", "t": "tf.contrib.rnn.BasicRNNCell"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/rnn/BidirectionalGridLSTMCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "state_tuple_type", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.7", "t": "tf.contrib.rnn.BidirectionalGridLSTMCell"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/rnn/CompiledWrapper", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.7", "t": "tf.contrib.rnn.CompiledWrapper"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/rnn/Conv1DLSTMCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.7", "t": "tf.contrib.rnn.Conv1DLSTMCell"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/rnn/Conv2DLSTMCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.7", "t": "tf.contrib.rnn.Conv2DLSTMCell"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/rnn/Conv3DLSTMCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.7", "t": "tf.contrib.rnn.Conv3DLSTMCell"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/rnn/ConvLSTMCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.7", "t": "tf.contrib.rnn.ConvLSTMCell"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/rnn/CoupledInputForgetGateLSTMCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.7", "t": "tf.contrib.rnn.CoupledInputForgetGateLSTMCell"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/rnn/DeviceWrapper", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.7", "t": "tf.contrib.rnn.DeviceWrapper"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/rnn/DropoutWrapper", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "wrapped_cell", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.7", "t": "tf.contrib.rnn.DropoutWrapper"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/rnn/EmbeddingWrapper", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.7", "t": "tf.contrib.rnn.EmbeddingWrapper"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/rnn/FusedRNNCell", "k": ["__call__"], "r": "r1.7", "t": "tf.contrib.rnn.FusedRNNCell"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/rnn/FusedRNNCellAdaptor", "k": ["__call__", "__init__"], "r": "r1.7", "t": "tf.contrib.rnn.FusedRNNCellAdaptor"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/rnn/GLSTMCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.7", "t": "tf.contrib.rnn.GLSTMCell"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/rnn/GRUBlockCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.7", "t": "tf.contrib.rnn.GRUBlockCell"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/rnn/GRUBlockCellV2", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.7", "t": "tf.contrib.rnn.GRUBlockCellV2"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/rnn/GRUCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.7", "t": "tf.contrib.rnn.GRUCell"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/rnn/GridLSTMCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "state_tuple_type", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.7", "t": "tf.contrib.rnn.GridLSTMCell"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/rnn/HighwayWrapper", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.7", "t": "tf.contrib.rnn.HighwayWrapper"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/rnn/InputProjectionWrapper", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.7", "t": "tf.contrib.rnn.InputProjectionWrapper"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/rnn/IntersectionRNNCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.7", "t": "tf.contrib.rnn.IntersectionRNNCell"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/rnn/LSTMBlockCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.7", "t": "tf.contrib.rnn.LSTMBlockCell"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/rnn/LSTMBlockFusedCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "num_units", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "r1.7", "t": "tf.contrib.rnn.LSTMBlockFusedCell"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/rnn/LSTMBlockWrapper", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "num_units", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "r1.7", "t": "tf.contrib.rnn.LSTMBlockWrapper"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/rnn/LSTMCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.7", "t": "tf.contrib.rnn.LSTMCell"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/rnn/LSTMStateTuple", "k": ["c", "dtype", "h", "__new__"], "r": "r1.7", "t": "tf.contrib.rnn.LSTMStateTuple"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/rnn/LayerNormBasicLSTMCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.7", "t": "tf.contrib.rnn.LayerNormBasicLSTMCell"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/rnn/LayerRNNCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.7", "t": "tf.contrib.rnn.LayerRNNCell"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/rnn/MultiRNNCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.7", "t": "tf.contrib.rnn.MultiRNNCell"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/rnn/NASCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.7", "t": "tf.contrib.rnn.NASCell"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/rnn/OutputProjectionWrapper", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.7", "t": "tf.contrib.rnn.OutputProjectionWrapper"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/rnn/PhasedLSTMCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.7", "t": "tf.contrib.rnn.PhasedLSTMCell"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/rnn/RNNCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.7", "t": "tf.contrib.rnn.RNNCell"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/rnn/ResidualWrapper", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.7", "t": "tf.contrib.rnn.ResidualWrapper"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/rnn/TimeFreqLSTMCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.7", "t": "tf.contrib.rnn.TimeFreqLSTMCell"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/rnn/TimeReversedFusedRNN", "k": ["__call__", "__init__"], "r": "r1.7", "t": "tf.contrib.rnn.TimeReversedFusedRNN"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/rnn/UGRNNCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.7", "t": "tf.contrib.rnn.UGRNNCell"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/rnn/best_effort_input_batch_size", "k": [], "r": "r1.7", "t": "tf.contrib.rnn.best_effort_input_batch_size"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/rnn/stack_bidirectional_dynamic_rnn", "k": [], "r": "r1.7", "t": "tf.contrib.rnn.stack_bidirectional_dynamic_rnn"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/rnn/stack_bidirectional_rnn", "k": [], "r": "r1.7", "t": "tf.contrib.rnn.stack_bidirectional_rnn"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/rnn/transpose_batch_time", "k": [], "r": "r1.7", "t": "tf.contrib.rnn.transpose_batch_time"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/saved_model", "k": [], "r": "r1.7", "t": "tf.contrib.saved_model"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/saved_model/get_signature_def_by_key", "k": [], "r": "r1.7", "t": "tf.contrib.saved_model.get_signature_def_by_key"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/seq2seq", "k": [], "r": "r1.7", "t": "tf.contrib.seq2seq"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/seq2seq/AttentionMechanism", "k": ["alignments_size", "state_size"], "r": "r1.7", "t": "tf.contrib.seq2seq.AttentionMechanism"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/seq2seq/AttentionWrapper", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "output_size", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for", "zero_state"], "r": "r1.7", "t": "tf.contrib.seq2seq.AttentionWrapper"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/seq2seq/AttentionWrapperState", "k": ["alignment_history", "alignments", "attention", "attention_state", "cell_state", "time", "__new__", "clone"], "r": "r1.7", "t": "tf.contrib.seq2seq.AttentionWrapperState"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/seq2seq/BahdanauAttention", "k": ["alignments_size", "batch_size", "keys", "memory_layer", "query_layer", "state_size", "values", "__call__", "__init__", "initial_alignments", "initial_state"], "r": "r1.7", "t": "tf.contrib.seq2seq.BahdanauAttention"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/seq2seq/BahdanauMonotonicAttention", "k": ["alignments_size", "batch_size", "keys", "memory_layer", "query_layer", "state_size", "values", "__call__", "__init__", "initial_alignments", "initial_state"], "r": "r1.7", "t": "tf.contrib.seq2seq.BahdanauMonotonicAttention"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/seq2seq/BasicDecoder", "k": ["batch_size", "output_dtype", "output_size", "tracks_own_finished", "__init__", "finalize", "initialize", "step"], "r": "r1.7", "t": "tf.contrib.seq2seq.BasicDecoder"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/seq2seq/BasicDecoderOutput", "k": ["rnn_output", "sample_id", "__new__"], "r": "r1.7", "t": "tf.contrib.seq2seq.BasicDecoderOutput"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/seq2seq/BeamSearchDecoder", "k": ["batch_size", "output_dtype", "output_size", "tracks_own_finished", "__init__", "finalize", "initialize", "step"], "r": "r1.7", "t": "tf.contrib.seq2seq.BeamSearchDecoder"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/seq2seq/BeamSearchDecoderOutput", "k": ["parent_ids", "predicted_ids", "scores", "__new__"], "r": "r1.7", "t": "tf.contrib.seq2seq.BeamSearchDecoderOutput"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/seq2seq/BeamSearchDecoderState", "k": ["cell_state", "finished", "lengths", "log_probs", "__new__"], "r": "r1.7", "t": "tf.contrib.seq2seq.BeamSearchDecoderState"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/seq2seq/CustomHelper", "k": ["batch_size", "sample_ids_dtype", "sample_ids_shape", "__init__", "initialize", "next_inputs", "sample"], "r": "r1.7", "t": "tf.contrib.seq2seq.CustomHelper"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/seq2seq/Decoder", "k": ["batch_size", "output_dtype", "output_size", "tracks_own_finished", "finalize", "initialize", "step"], "r": "r1.7", "t": "tf.contrib.seq2seq.Decoder"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/seq2seq/FinalBeamSearchDecoderOutput", "k": ["beam_search_decoder_output", "predicted_ids", "__new__"], "r": "r1.7", "t": "tf.contrib.seq2seq.FinalBeamSearchDecoderOutput"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/seq2seq/GreedyEmbeddingHelper", "k": ["batch_size", "sample_ids_dtype", "sample_ids_shape", "__init__", "initialize", "next_inputs", "sample"], "r": "r1.7", "t": "tf.contrib.seq2seq.GreedyEmbeddingHelper"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/seq2seq/Helper", "k": ["batch_size", "sample_ids_dtype", "sample_ids_shape", "initialize", "next_inputs", "sample"], "r": "r1.7", "t": "tf.contrib.seq2seq.Helper"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/seq2seq/InferenceHelper", "k": ["batch_size", "sample_ids_dtype", "sample_ids_shape", "__init__", "initialize", "next_inputs", "sample"], "r": "r1.7", "t": "tf.contrib.seq2seq.InferenceHelper"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/seq2seq/LuongAttention", "k": ["alignments_size", "batch_size", "keys", "memory_layer", "query_layer", "state_size", "values", "__call__", "__init__", "initial_alignments", "initial_state"], "r": "r1.7", "t": "tf.contrib.seq2seq.LuongAttention"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/seq2seq/LuongMonotonicAttention", "k": ["alignments_size", "batch_size", "keys", "memory_layer", "query_layer", "state_size", "values", "__call__", "__init__", "initial_alignments", "initial_state"], "r": "r1.7", "t": "tf.contrib.seq2seq.LuongMonotonicAttention"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/seq2seq/SampleEmbeddingHelper", "k": ["batch_size", "sample_ids_dtype", "sample_ids_shape", "__init__", "initialize", "next_inputs", "sample"], "r": "r1.7", "t": "tf.contrib.seq2seq.SampleEmbeddingHelper"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/seq2seq/ScheduledEmbeddingTrainingHelper", "k": ["batch_size", "inputs", "sample_ids_dtype", "sample_ids_shape", "sequence_length", "__init__", "initialize", "next_inputs", "sample"], "r": "r1.7", "t": "tf.contrib.seq2seq.ScheduledEmbeddingTrainingHelper"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/seq2seq/ScheduledOutputTrainingHelper", "k": ["batch_size", "inputs", "sample_ids_dtype", "sample_ids_shape", "sequence_length", "__init__", "initialize", "next_inputs", "sample"], "r": "r1.7", "t": "tf.contrib.seq2seq.ScheduledOutputTrainingHelper"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/seq2seq/TrainingHelper", "k": ["batch_size", "inputs", "sample_ids_dtype", "sample_ids_shape", "sequence_length", "__init__", "initialize", "next_inputs", "sample"], "r": "r1.7", "t": "tf.contrib.seq2seq.TrainingHelper"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/seq2seq/dynamic_decode", "k": [], "r": "r1.7", "t": "tf.contrib.seq2seq.dynamic_decode"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/seq2seq/gather_tree", "k": [], "r": "r1.7", "t": "tf.contrib.seq2seq.gather_tree"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/seq2seq/hardmax", "k": [], "r": "r1.7", "t": "tf.contrib.seq2seq.hardmax"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/seq2seq/monotonic_attention", "k": [], "r": "r1.7", "t": "tf.contrib.seq2seq.monotonic_attention"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/seq2seq/safe_cumprod", "k": [], "r": "r1.7", "t": "tf.contrib.seq2seq.safe_cumprod"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/seq2seq/sequence_loss", "k": [], "r": "r1.7", "t": "tf.contrib.seq2seq.sequence_loss"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/seq2seq/tile_batch", "k": [], "r": "r1.7", "t": "tf.contrib.seq2seq.tile_batch"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/session_bundle", "k": [], "r": "r1.7", "t": "tf.contrib.session_bundle"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/signal", "k": [], "r": "r1.7", "t": "tf.contrib.signal"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/signal/frame", "k": [], "r": "r1.7", "t": "tf.contrib.signal.frame"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/signal/hamming_window", "k": [], "r": "r1.7", "t": "tf.contrib.signal.hamming_window"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/signal/hann_window", "k": [], "r": "r1.7", "t": "tf.contrib.signal.hann_window"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/signal/inverse_stft", "k": [], "r": "r1.7", "t": "tf.contrib.signal.inverse_stft"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/signal/inverse_stft_window_fn", "k": [], "r": "r1.7", "t": "tf.contrib.signal.inverse_stft_window_fn"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/signal/linear_to_mel_weight_matrix", "k": [], "r": "r1.7", "t": "tf.contrib.signal.linear_to_mel_weight_matrix"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/signal/mfccs_from_log_mel_spectrograms", "k": [], "r": "r1.7", "t": "tf.contrib.signal.mfccs_from_log_mel_spectrograms"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/signal/overlap_and_add", "k": [], "r": "r1.7", "t": "tf.contrib.signal.overlap_and_add"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/signal/stft", "k": [], "r": "r1.7", "t": "tf.contrib.signal.stft"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/slim", "k": [], "r": "r1.7", "t": "tf.contrib.slim"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/solvers", "k": [], "r": "r1.7", "t": "tf.contrib.solvers"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/sparsemax", "k": [], "r": "r1.7", "t": "tf.contrib.sparsemax"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/sparsemax/sparsemax", "k": [], "r": "r1.7", "t": "tf.contrib.sparsemax.sparsemax"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/sparsemax/sparsemax_loss", "k": [], "r": "r1.7", "t": "tf.contrib.sparsemax.sparsemax_loss"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/specs", "k": [], "r": "r1.7", "t": "tf.contrib.specs"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/staging", "k": ["absolute_import", "division", "print_function"], "r": "r1.7", "t": "tf.contrib.staging"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/staging/StagingArea", "k": ["capacity", "dtypes", "memory_limit", "name", "names", "shapes", "__init__", "clear", "get", "peek", "put", "size"], "r": "r1.7", "t": "tf.contrib.staging.StagingArea"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/stat_summarizer", "k": [], "r": "r1.7", "t": "tf.contrib.stat_summarizer"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/stat_summarizer/DeleteStatSummarizer", "k": [], "r": "r1.7", "t": "tf.contrib.stat_summarizer.DeleteStatSummarizer"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/stat_summarizer/NewStatSummarizer", "k": [], "r": "r1.7", "t": "tf.contrib.stat_summarizer.NewStatSummarizer"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/stat_summarizer/StatSummarizer", "k": ["GetOutputString", "PrintStepStats", "ProcessStepStats", "ProcessStepStatsStr", "__getattr__", "__init__", "__setattr__", "__swig_getmethods__", "__swig_setmethods__"], "r": "r1.7", "t": "tf.contrib.stat_summarizer.StatSummarizer"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/stateless", "k": [], "r": "r1.7", "t": "tf.contrib.stateless"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/stateless/stateless_random_normal", "k": [], "r": "r1.7", "t": "tf.contrib.stateless.stateless_random_normal"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/stateless/stateless_random_uniform", "k": [], "r": "r1.7", "t": "tf.contrib.stateless.stateless_random_uniform"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/stateless/stateless_truncated_normal", "k": [], "r": "r1.7", "t": "tf.contrib.stateless.stateless_truncated_normal"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/summary", "k": ["absolute_import", "division", "print_function"], "r": "r1.7", "t": "tf.contrib.summary"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/summary/SummaryWriter", "k": ["__init__", "as_default", "set_as_default"], "r": "r1.7", "t": "tf.contrib.summary.SummaryWriter"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/summary/all_summary_ops", "k": [], "r": "r1.7", "t": "tf.contrib.summary.all_summary_ops"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/summary/always_record_summaries", "k": [], "r": "r1.7", "t": "tf.contrib.summary.always_record_summaries"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/summary/audio", "k": [], "r": "r1.7", "t": "tf.contrib.summary.audio"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/summary/create_db_writer", "k": [], "r": "r1.7", "t": "tf.contrib.summary.create_db_writer"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/summary/create_file_writer", "k": [], "r": "r1.7", "t": "tf.contrib.summary.create_file_writer"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/summary/create_summary_file_writer", "k": [], "r": "r1.7", "t": "tf.contrib.summary.create_summary_file_writer"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/summary/eval_dir", "k": [], "r": "r1.7", "t": "tf.contrib.summary.eval_dir"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/summary/flush", "k": [], "r": "r1.7", "t": "tf.contrib.summary.flush"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/summary/generic", "k": [], "r": "r1.7", "t": "tf.contrib.summary.generic"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/summary/graph", "k": [], "r": "r1.7", "t": "tf.contrib.summary.graph"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/summary/histogram", "k": [], "r": "r1.7", "t": "tf.contrib.summary.histogram"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/summary/image", "k": [], "r": "r1.7", "t": "tf.contrib.summary.image"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/summary/import_event", "k": [], "r": "r1.7", "t": "tf.contrib.summary.import_event"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/summary/initialize", "k": [], "r": "r1.7", "t": "tf.contrib.summary.initialize"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/summary/never_record_summaries", "k": [], "r": "r1.7", "t": "tf.contrib.summary.never_record_summaries"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/summary/record_summaries_every_n_global_steps", "k": [], "r": "r1.7", "t": "tf.contrib.summary.record_summaries_every_n_global_steps"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/summary/scalar", "k": [], "r": "r1.7", "t": "tf.contrib.summary.scalar"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/summary/should_record_summaries", "k": [], "r": "r1.7", "t": "tf.contrib.summary.should_record_summaries"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/summary/summary_writer_initializer_op", "k": [], "r": "r1.7", "t": "tf.contrib.summary.summary_writer_initializer_op"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/tensor_forest", "k": [], "r": "r1.7", "t": "tf.contrib.tensor_forest"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/tensorboard", "k": [], "r": "r1.7", "t": "tf.contrib.tensorboard"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/testing", "k": [], "r": "r1.7", "t": "tf.contrib.testing"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/tfprof", "k": [], "r": "r1.7", "t": "tf.contrib.tfprof"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/timeseries", "k": [], "r": "r1.7", "t": "tf.contrib.timeseries"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/timeseries/ARModel", "k": ["exogenous_feature_columns", "__init__", "define_loss", "generate", "get_batch_loss", "get_start_state", "initialize_graph", "loss_op", "predict", "prediction_ops", "random_model_parameters", "NORMAL_LIKELIHOOD_LOSS", "SQUARED_LOSS"], "r": "r1.7", "t": "tf.contrib.timeseries.ARModel"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/timeseries/ARRegressor", "k": ["config", "model_dir", "model_fn", "params", "__init__", "build_raw_serving_input_receiver_fn", "evaluate", "export_savedmodel", "get_variable_names", "get_variable_value", "latest_checkpoint", "predict", "train"], "r": "r1.7", "t": "tf.contrib.timeseries.ARRegressor"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/timeseries/CSVReader", "k": ["__init__", "check_dataset_size", "read", "read_full"], "r": "r1.7", "t": "tf.contrib.timeseries.CSVReader"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/timeseries/FilteringResults", "k": ["STATE_PREFIX", "STATE_TUPLE", "TIMES"], "r": "r1.7", "t": "tf.contrib.timeseries.FilteringResults"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/timeseries/NumpyReader", "k": ["__init__", "check_dataset_size", "read", "read_full"], "r": "r1.7", "t": "tf.contrib.timeseries.NumpyReader"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/timeseries/RandomWindowInputFn", "k": ["__call__", "__init__", "create_batch"], "r": "r1.7", "t": "tf.contrib.timeseries.RandomWindowInputFn"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/timeseries/StructuralEnsembleRegressor", "k": ["config", "model_dir", "model_fn", "params", "__init__", "build_raw_serving_input_receiver_fn", "evaluate", "export_savedmodel", "get_variable_names", "get_variable_value", "latest_checkpoint", "predict", "train"], "r": "r1.7", "t": "tf.contrib.timeseries.StructuralEnsembleRegressor"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/timeseries/TrainEvalFeatures", "k": ["TIMES", "VALUES"], "r": "r1.7", "t": "tf.contrib.timeseries.TrainEvalFeatures"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/timeseries/WholeDatasetInputFn", "k": ["__call__", "__init__", "create_batch"], "r": "r1.7", "t": "tf.contrib.timeseries.WholeDatasetInputFn"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/timeseries/predict_continuation_input_fn", "k": [], "r": "r1.7", "t": "tf.contrib.timeseries.predict_continuation_input_fn"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/timeseries/saved_model_utils", "k": [], "r": "r1.7", "t": "tf.contrib.timeseries.saved_model_utils"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/timeseries/saved_model_utils/filter_continuation", "k": [], "r": "r1.7", "t": "tf.contrib.timeseries.saved_model_utils.filter_continuation"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/timeseries/saved_model_utils/predict_continuation", "k": [], "r": "r1.7", "t": "tf.contrib.timeseries.saved_model_utils.predict_continuation"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/tpu", "k": [], "r": "r1.7", "t": "tf.contrib.tpu"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/tpu/CrossShardOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.7", "t": "tf.contrib.tpu.CrossShardOptimizer"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/tpu/DeviceAssignment", "k": ["computation_shape", "core_assignment", "num_cores_per_replica", "num_replicas", "topology", "__init__", "host_device", "lookup_replicas", "tpu_device", "tpu_ordinal"], "r": "r1.7", "t": "tf.contrib.tpu.DeviceAssignment"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/tpu/InfeedQueue", "k": ["number_of_shards", "number_of_tuple_elements", "shard_dimensions", "sharding_policies", "tuple_shapes", "tuple_types", "__init__", "freeze", "generate_dequeue_op", "generate_enqueue_ops", "set_configuration_from_input_tensors", "set_configuration_from_sharded_input_tensors", "set_number_of_shards", "set_shard_dimensions", "set_tuple_shapes", "set_tuple_types", "split_inputs_and_generate_enqueue_ops"], "r": "r1.7", "t": "tf.contrib.tpu.InfeedQueue"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/tpu/RunConfig", "k": ["cluster", "cluster_spec", "evaluation_master", "global_id_in_cluster", "is_chief", "keep_checkpoint_every_n_hours", "keep_checkpoint_max", "log_step_count_steps", "master", "model_dir", "num_ps_replicas", "num_worker_replicas", "save_checkpoints_secs", "save_checkpoints_steps", "save_summary_steps", "service", "session_config", "task_id", "task_type", "tf_random_seed", "tpu_config", "__init__", "replace"], "r": "r1.7", "t": "tf.contrib.tpu.RunConfig"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/tpu/TPUConfig", "k": ["computation_shape", "initial_infeed_sleep_secs", "iterations_per_loop", "num_shards", "per_host_input_for_training", "tpu_job_name", "__new__"], "r": "r1.7", "t": "tf.contrib.tpu.TPUConfig"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/tpu/TPUEstimator", "k": ["config", "model_dir", "model_fn", "params", "__init__", "evaluate", "export_savedmodel", "get_variable_names", "get_variable_value", "latest_checkpoint", "predict", "train"], "r": "r1.7", "t": "tf.contrib.tpu.TPUEstimator"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/tpu/TPUEstimatorSpec", "k": ["eval_metrics", "export_outputs", "host_call", "loss", "mode", "predictions", "scaffold_fn", "train_op", "__new__", "as_estimator_spec"], "r": "r1.7", "t": "tf.contrib.tpu.TPUEstimatorSpec"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/tpu/Topology", "k": ["device_coordinates", "mesh_shape", "__init__", "serialized"], "r": "r1.7", "t": "tf.contrib.tpu.Topology"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/tpu/batch_parallel", "k": [], "r": "r1.7", "t": "tf.contrib.tpu.batch_parallel"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/tpu/core", "k": [], "r": "r1.7", "t": "tf.contrib.tpu.core"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/tpu/cross_replica_sum", "k": [], "r": "r1.7", "t": "tf.contrib.tpu.cross_replica_sum"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/tpu/device_assignment", "k": [], "r": "r1.7", "t": "tf.contrib.tpu.device_assignment"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/tpu/infeed_dequeue", "k": [], "r": "r1.7", "t": "tf.contrib.tpu.infeed_dequeue"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/tpu/infeed_dequeue_tuple", "k": [], "r": "r1.7", "t": "tf.contrib.tpu.infeed_dequeue_tuple"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/tpu/initialize_system", "k": [], "r": "r1.7", "t": "tf.contrib.tpu.initialize_system"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/tpu/outfeed_enqueue", "k": [], "r": "r1.7", "t": "tf.contrib.tpu.outfeed_enqueue"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/tpu/outfeed_enqueue_tuple", "k": [], "r": "r1.7", "t": "tf.contrib.tpu.outfeed_enqueue_tuple"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/tpu/profiler", "k": [], "r": "r1.7", "t": "tf.contrib.tpu.profiler"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/tpu/profiler/Device", "k": ["ResourcesEntry"], "r": "r1.7", "t": "tf.contrib.tpu.profiler.Device"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/tpu/profiler/Device/ResourcesEntry", "k": [], "r": "r1.7", "t": "tf.contrib.tpu.profiler.Device.ResourcesEntry"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/tpu/profiler/Resource", "k": [], "r": "r1.7", "t": "tf.contrib.tpu.profiler.Resource"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/tpu/profiler/Trace", "k": ["DevicesEntry"], "r": "r1.7", "t": "tf.contrib.tpu.profiler.Trace"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/tpu/profiler/Trace/DevicesEntry", "k": [], "r": "r1.7", "t": "tf.contrib.tpu.profiler.Trace.DevicesEntry"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/tpu/profiler/TraceEvent", "k": [], "r": "r1.7", "t": "tf.contrib.tpu.profiler.TraceEvent"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/tpu/repeat", "k": [], "r": "r1.7", "t": "tf.contrib.tpu.repeat"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/tpu/replicate", "k": [], "r": "r1.7", "t": "tf.contrib.tpu.replicate"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/tpu/rewrite", "k": [], "r": "r1.7", "t": "tf.contrib.tpu.rewrite"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/tpu/shard", "k": [], "r": "r1.7", "t": "tf.contrib.tpu.shard"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/tpu/shutdown_system", "k": [], "r": "r1.7", "t": "tf.contrib.tpu.shutdown_system"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/tpu/while_loop", "k": [], "r": "r1.7", "t": "tf.contrib.tpu.while_loop"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/training", "k": [], "r": "r1.7", "t": "tf.contrib.training"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/training/FeedingQueueRunner", "k": ["cancel_op", "close_op", "enqueue_ops", "exceptions_raised", "name", "queue", "queue_closed_exception_types", "__init__", "create_threads", "from_proto", "to_proto"], "r": "r1.7", "t": "tf.contrib.training.FeedingQueueRunner"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/training/GreedyLoadBalancingStrategy", "k": ["__call__", "__init__"], "r": "r1.7", "t": "tf.contrib.training.GreedyLoadBalancingStrategy"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/training/HParams", "k": ["__contains__", "__init__", "add_hparam", "from_proto", "get", "get_model_structure", "override_from_dict", "parse", "parse_json", "set_from_map", "set_hparam", "set_model_structure", "to_json", "to_proto", "values"], "r": "r1.7", "t": "tf.contrib.training.HParams"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/training/NextQueuedSequenceBatch", "k": ["batch_size", "context", "insertion_index", "key", "length", "next_key", "sequence", "sequence_count", "sequences", "total_length", "__init__", "save_state", "state"], "r": "r1.7", "t": "tf.contrib.training.NextQueuedSequenceBatch"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/training/RandomStrategy", "k": ["__call__", "__init__"], "r": "r1.7", "t": "tf.contrib.training.RandomStrategy"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/training/SequenceQueueingStateSaver", "k": ["barrier", "batch_size", "name", "next_batch", "num_unroll", "prefetch_op", "__init__", "close"], "r": "r1.7", "t": "tf.contrib.training.SequenceQueueingStateSaver"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/training/StopAfterNEvalsHook", "k": ["__init__", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "r1.7", "t": "tf.contrib.training.StopAfterNEvalsHook"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/training/SummaryAtEndHook", "k": ["__init__", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "r1.7", "t": "tf.contrib.training.SummaryAtEndHook"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/training/add_gradients_summaries", "k": [], "r": "r1.7", "t": "tf.contrib.training.add_gradients_summaries"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/training/batch_sequences_with_states", "k": [], "r": "r1.7", "t": "tf.contrib.training.batch_sequences_with_states"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/training/bucket", "k": [], "r": "r1.7", "t": "tf.contrib.training.bucket"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/training/bucket_by_sequence_length", "k": [], "r": "r1.7", "t": "tf.contrib.training.bucket_by_sequence_length"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/training/byte_size_load_fn", "k": [], "r": "r1.7", "t": "tf.contrib.training.byte_size_load_fn"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/training/checkpoints_iterator", "k": [], "r": "r1.7", "t": "tf.contrib.training.checkpoints_iterator"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/training/clip_gradient_norms", "k": [], "r": "r1.7", "t": "tf.contrib.training.clip_gradient_norms"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/training/clip_gradient_norms_fn", "k": [], "r": "r1.7", "t": "tf.contrib.training.clip_gradient_norms_fn"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/training/create_train_op", "k": [], "r": "r1.7", "t": "tf.contrib.training.create_train_op"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/training/evaluate_once", "k": [], "r": "r1.7", "t": "tf.contrib.training.evaluate_once"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/training/evaluate_repeatedly", "k": [], "r": "r1.7", "t": "tf.contrib.training.evaluate_repeatedly"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/training/get_or_create_eval_step", "k": [], "r": "r1.7", "t": "tf.contrib.training.get_or_create_eval_step"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/training/multiply_gradients", "k": [], "r": "r1.7", "t": "tf.contrib.training.multiply_gradients"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/training/parse_values", "k": [], "r": "r1.7", "t": "tf.contrib.training.parse_values"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/training/rejection_sample", "k": [], "r": "r1.7", "t": "tf.contrib.training.rejection_sample"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/training/resample_at_rate", "k": [], "r": "r1.7", "t": "tf.contrib.training.resample_at_rate"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/training/stratified_sample", "k": [], "r": "r1.7", "t": "tf.contrib.training.stratified_sample"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/training/train", "k": [], "r": "r1.7", "t": "tf.contrib.training.train"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/training/wait_for_new_checkpoint", "k": [], "r": "r1.7", "t": "tf.contrib.training.wait_for_new_checkpoint"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/training/weighted_resample", "k": [], "r": "r1.7", "t": "tf.contrib.training.weighted_resample"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/util", "k": [], "r": "r1.7", "t": "tf.contrib.util"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/util/constant_value", "k": [], "r": "r1.7", "t": "tf.contrib.util.constant_value"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/util/loader", "k": [], "r": "r1.7", "t": "tf.contrib.util.loader"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/util/ops_used_by_graph_def", "k": [], "r": "r1.7", "t": "tf.contrib.util.ops_used_by_graph_def"}, {"p": "/versions/r1.7/api_docs/python/tf/contrib/util/stripped_op_list_for_graph", "k": [], "r": "r1.7", "t": "tf.contrib.util.stripped_op_list_for_graph"}, {"p": "/versions/r1.7/api_docs/python/tf/control_dependencies", "k": [], "r": "r1.7", "t": "tf.control_dependencies"}, {"p": "/versions/r1.7/api_docs/python/tf/convert_to_tensor", "k": [], "r": "r1.7", "t": "tf.convert_to_tensor"}, {"p": "/versions/r1.7/api_docs/python/tf/convert_to_tensor_or_indexed_slices", "k": [], "r": "r1.7", "t": "tf.convert_to_tensor_or_indexed_slices"}, {"p": "/versions/r1.7/api_docs/python/tf/convert_to_tensor_or_sparse_tensor", "k": [], "r": "r1.7", "t": "tf.convert_to_tensor_or_sparse_tensor"}, {"p": "/versions/r1.7/api_docs/python/tf/cos", "k": [], "r": "r1.7", "t": "tf.cos"}, {"p": "/versions/r1.7/api_docs/python/tf/cosh", "k": [], "r": "r1.7", "t": "tf.cosh"}, {"p": "/versions/r1.7/api_docs/python/tf/count_nonzero", "k": [], "r": "r1.7", "t": "tf.count_nonzero"}, {"p": "/versions/r1.7/api_docs/python/tf/count_up_to", "k": [], "r": "r1.7", "t": "tf.count_up_to"}, {"p": "/versions/r1.7/api_docs/python/tf/create_partitioned_variables", "k": [], "r": "r1.7", "t": "tf.create_partitioned_variables"}, {"p": "/versions/r1.7/api_docs/python/tf/cross", "k": [], "r": "r1.7", "t": "tf.cross"}, {"p": "/versions/r1.7/api_docs/python/tf/cumprod", "k": [], "r": "r1.7", "t": "tf.cumprod"}, {"p": "/versions/r1.7/api_docs/python/tf/cumsum", "k": [], "r": "r1.7", "t": "tf.cumsum"}, {"p": "/versions/r1.7/api_docs/python/tf/custom_gradient", "k": [], "r": "r1.7", "t": "tf.custom_gradient"}, {"p": "/versions/r1.7/api_docs/python/tf/data", "k": [], "r": "r1.7", "t": "tf.data"}, {"p": "/versions/r1.7/api_docs/python/tf/data/Dataset", "k": ["output_classes", "output_shapes", "output_types", "__init__", "apply", "batch", "cache", "concatenate", "filter", "flat_map", "from_generator", "from_sparse_tensor_slices", "from_tensor_slices", "from_tensors", "interleave", "list_files", "make_initializable_iterator", "make_one_shot_iterator", "map", "padded_batch", "prefetch", "range", "repeat", "shard", "shuffle", "skip", "take", "zip"], "r": "r1.7", "t": "tf.data.Dataset"}, {"p": "/versions/r1.7/api_docs/python/tf/data/FixedLengthRecordDataset", "k": ["output_classes", "output_shapes", "output_types", "__init__", "apply", "batch", "cache", "concatenate", "filter", "flat_map", "from_generator", "from_sparse_tensor_slices", "from_tensor_slices", "from_tensors", "interleave", "list_files", "make_initializable_iterator", "make_one_shot_iterator", "map", "padded_batch", "prefetch", "range", "repeat", "shard", "shuffle", "skip", "take", "zip"], "r": "r1.7", "t": "tf.data.FixedLengthRecordDataset"}, {"p": "/versions/r1.7/api_docs/python/tf/data/Iterator", "k": ["initializer", "output_classes", "output_shapes", "output_types", "__init__", "from_string_handle", "from_structure", "get_next", "make_initializer", "string_handle"], "r": "r1.7", "t": "tf.data.Iterator"}, {"p": "/versions/r1.7/api_docs/python/tf/data/TFRecordDataset", "k": ["output_classes", "output_shapes", "output_types", "__init__", "apply", "batch", "cache", "concatenate", "filter", "flat_map", "from_generator", "from_sparse_tensor_slices", "from_tensor_slices", "from_tensors", "interleave", "list_files", "make_initializable_iterator", "make_one_shot_iterator", "map", "padded_batch", "prefetch", "range", "repeat", "shard", "shuffle", "skip", "take", "zip"], "r": "r1.7", "t": "tf.data.TFRecordDataset"}, {"p": "/versions/r1.7/api_docs/python/tf/data/TextLineDataset", "k": ["output_classes", "output_shapes", "output_types", "__init__", "apply", "batch", "cache", "concatenate", "filter", "flat_map", "from_generator", "from_sparse_tensor_slices", "from_tensor_slices", "from_tensors", "interleave", "list_files", "make_initializable_iterator", "make_one_shot_iterator", "map", "padded_batch", "prefetch", "range", "repeat", "shard", "shuffle", "skip", "take", "zip"], "r": "r1.7", "t": "tf.data.TextLineDataset"}, {"p": "/versions/r1.7/api_docs/python/tf/decode_base64", "k": [], "r": "r1.7", "t": "tf.decode_base64"}, {"p": "/versions/r1.7/api_docs/python/tf/decode_csv", "k": [], "r": "r1.7", "t": "tf.decode_csv"}, {"p": "/versions/r1.7/api_docs/python/tf/decode_json_example", "k": [], "r": "r1.7", "t": "tf.decode_json_example"}, {"p": "/versions/r1.7/api_docs/python/tf/decode_raw", "k": [], "r": "r1.7", "t": "tf.decode_raw"}, {"p": "/versions/r1.7/api_docs/python/tf/delete_session_tensor", "k": [], "r": "r1.7", "t": "tf.delete_session_tensor"}, {"p": "/versions/r1.7/api_docs/python/tf/depth_to_space", "k": [], "r": "r1.7", "t": "tf.depth_to_space"}, {"p": "/versions/r1.7/api_docs/python/tf/dequantize", "k": [], "r": "r1.7", "t": "tf.dequantize"}, {"p": "/versions/r1.7/api_docs/python/tf/deserialize_many_sparse", "k": [], "r": "r1.7", "t": "tf.deserialize_many_sparse"}, {"p": "/versions/r1.7/api_docs/python/tf/device", "k": [], "r": "r1.7", "t": "tf.device"}, {"p": "/versions/r1.7/api_docs/python/tf/diag", "k": [], "r": "r1.7", "t": "tf.diag"}, {"p": "/versions/r1.7/api_docs/python/tf/diag_part", "k": [], "r": "r1.7", "t": "tf.diag_part"}, {"p": "/versions/r1.7/api_docs/python/tf/digamma", "k": [], "r": "r1.7", "t": "tf.digamma"}, {"p": "/versions/r1.7/api_docs/python/tf/distributions", "k": ["FULLY_REPARAMETERIZED", "NOT_REPARAMETERIZED"], "r": "r1.7", "t": "tf.distributions"}, {"p": "/versions/r1.7/api_docs/python/tf/distributions/Bernoulli", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "logits", "name", "parameters", "probs", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.7", "t": "tf.distributions.Bernoulli"}, {"p": "/versions/r1.7/api_docs/python/tf/distributions/Beta", "k": ["allow_nan_stats", "batch_shape", "concentration0", "concentration1", "dtype", "event_shape", "name", "parameters", "reparameterization_type", "total_concentration", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.7", "t": "tf.distributions.Beta"}, {"p": "/versions/r1.7/api_docs/python/tf/distributions/Categorical", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "event_size", "logits", "name", "parameters", "probs", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.7", "t": "tf.distributions.Categorical"}, {"p": "/versions/r1.7/api_docs/python/tf/distributions/Dirichlet", "k": ["allow_nan_stats", "batch_shape", "concentration", "dtype", "event_shape", "name", "parameters", "reparameterization_type", "total_concentration", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.7", "t": "tf.distributions.Dirichlet"}, {"p": "/versions/r1.7/api_docs/python/tf/distributions/DirichletMultinomial", "k": ["allow_nan_stats", "batch_shape", "concentration", "dtype", "event_shape", "name", "parameters", "reparameterization_type", "total_concentration", "total_count", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.7", "t": "tf.distributions.DirichletMultinomial"}, {"p": "/versions/r1.7/api_docs/python/tf/distributions/Distribution", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "name", "parameters", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.7", "t": "tf.distributions.Distribution"}, {"p": "/versions/r1.7/api_docs/python/tf/distributions/Exponential", "k": ["allow_nan_stats", "batch_shape", "concentration", "dtype", "event_shape", "name", "parameters", "rate", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.7", "t": "tf.distributions.Exponential"}, {"p": "/versions/r1.7/api_docs/python/tf/distributions/Gamma", "k": ["allow_nan_stats", "batch_shape", "concentration", "dtype", "event_shape", "name", "parameters", "rate", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.7", "t": "tf.distributions.Gamma"}, {"p": "/versions/r1.7/api_docs/python/tf/distributions/Laplace", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.7", "t": "tf.distributions.Laplace"}, {"p": "/versions/r1.7/api_docs/python/tf/distributions/Multinomial", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "logits", "name", "parameters", "probs", "reparameterization_type", "total_count", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.7", "t": "tf.distributions.Multinomial"}, {"p": "/versions/r1.7/api_docs/python/tf/distributions/Normal", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.7", "t": "tf.distributions.Normal"}, {"p": "/versions/r1.7/api_docs/python/tf/distributions/RegisterKL", "k": ["__call__", "__init__"], "r": "r1.7", "t": "tf.distributions.RegisterKL"}, {"p": "/versions/r1.7/api_docs/python/tf/distributions/ReparameterizationType", "k": ["__eq__", "__init__"], "r": "r1.7", "t": "tf.distributions.ReparameterizationType"}, {"p": "/versions/r1.7/api_docs/python/tf/distributions/StudentT", "k": ["allow_nan_stats", "batch_shape", "df", "dtype", "event_shape", "loc", "name", "parameters", "reparameterization_type", "scale", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "sample", "stddev", "survival_function", "variance"], "r": "r1.7", "t": "tf.distributions.StudentT"}, {"p": "/versions/r1.7/api_docs/python/tf/distributions/Uniform", "k": ["allow_nan_stats", "batch_shape", "dtype", "event_shape", "high", "low", "name", "parameters", "reparameterization_type", "validate_args", "__init__", "batch_shape_tensor", "cdf", "copy", "covariance", "cross_entropy", "entropy", "event_shape_tensor", "is_scalar_batch", "is_scalar_event", "kl_divergence", "log_cdf", "log_prob", "log_survival_function", "mean", "mode", "param_shapes", "param_static_shapes", "prob", "quantile", "range", "sample", "stddev", "survival_function", "variance"], "r": "r1.7", "t": "tf.distributions.Uniform"}, {"p": "/versions/r1.7/api_docs/python/tf/distributions/bijectors", "k": [], "r": "r1.7", "t": "tf.distributions.bijectors"}, {"p": "/versions/r1.7/api_docs/python/tf/distributions/bijectors/Bijector", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.7", "t": "tf.distributions.bijectors.Bijector"}, {"p": "/versions/r1.7/api_docs/python/tf/distributions/bijectors/Identity", "k": ["dtype", "event_ndims", "graph_parents", "is_constant_jacobian", "name", "validate_args", "__init__", "forward", "forward_event_shape", "forward_event_shape_tensor", "forward_log_det_jacobian", "inverse", "inverse_event_shape", "inverse_event_shape_tensor", "inverse_log_det_jacobian"], "r": "r1.7", "t": "tf.distributions.bijectors.Identity"}, {"p": "/versions/r1.7/api_docs/python/tf/distributions/kl_divergence", "k": [], "r": "r1.7", "t": "tf.distributions.kl_divergence"}, {"p": "/versions/r1.7/api_docs/python/tf/div", "k": [], "r": "r1.7", "t": "tf.div"}, {"p": "/versions/r1.7/api_docs/python/tf/divide", "k": [], "r": "r1.7", "t": "tf.divide"}, {"p": "/versions/r1.7/api_docs/python/tf/dynamic_partition", "k": [], "r": "r1.7", "t": "tf.dynamic_partition"}, {"p": "/versions/r1.7/api_docs/python/tf/dynamic_stitch", "k": [], "r": "r1.7", "t": "tf.dynamic_stitch"}, {"p": "/versions/r1.7/api_docs/python/tf/edit_distance", "k": [], "r": "r1.7", "t": "tf.edit_distance"}, {"p": "/versions/r1.7/api_docs/python/tf/einsum", "k": [], "r": "r1.7", "t": "tf.einsum"}, {"p": "/versions/r1.7/api_docs/python/tf/enable_eager_execution", "k": [], "r": "r1.7", "t": "tf.enable_eager_execution"}, {"p": "/versions/r1.7/api_docs/python/tf/encode_base64", "k": [], "r": "r1.7", "t": "tf.encode_base64"}, {"p": "/versions/r1.7/api_docs/python/tf/equal", "k": [], "r": "r1.7", "t": "tf.equal"}, {"p": "/versions/r1.7/api_docs/python/tf/erf", "k": [], "r": "r1.7", "t": "tf.erf"}, {"p": "/versions/r1.7/api_docs/python/tf/erfc", "k": [], "r": "r1.7", "t": "tf.erfc"}, {"p": "/versions/r1.7/api_docs/python/tf/errors", "k": ["ABORTED", "ALREADY_EXISTS", "CANCELLED", "DATA_LOSS", "DEADLINE_EXCEEDED", "FAILED_PRECONDITION", "INTERNAL", "INVALID_ARGUMENT", "NOT_FOUND", "OK", "OUT_OF_RANGE", "PERMISSION_DENIED", "RESOURCE_EXHAUSTED", "UNAUTHENTICATED", "UNAVAILABLE", "UNIMPLEMENTED", "UNKNOWN"], "r": "r1.7", "t": "tf.errors"}, {"p": "/versions/r1.7/api_docs/python/tf/errors/AbortedError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "r1.7", "t": "tf.errors.AbortedError"}, {"p": "/versions/r1.7/api_docs/python/tf/errors/AlreadyExistsError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "r1.7", "t": "tf.errors.AlreadyExistsError"}, {"p": "/versions/r1.7/api_docs/python/tf/errors/CancelledError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "r1.7", "t": "tf.errors.CancelledError"}, {"p": "/versions/r1.7/api_docs/python/tf/errors/DataLossError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "r1.7", "t": "tf.errors.DataLossError"}, {"p": "/versions/r1.7/api_docs/python/tf/errors/DeadlineExceededError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "r1.7", "t": "tf.errors.DeadlineExceededError"}, {"p": "/versions/r1.7/api_docs/python/tf/errors/FailedPreconditionError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "r1.7", "t": "tf.errors.FailedPreconditionError"}, {"p": "/versions/r1.7/api_docs/python/tf/errors/InternalError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "r1.7", "t": "tf.errors.InternalError"}, {"p": "/versions/r1.7/api_docs/python/tf/errors/InvalidArgumentError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "r1.7", "t": "tf.errors.InvalidArgumentError"}, {"p": "/versions/r1.7/api_docs/python/tf/errors/NotFoundError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "r1.7", "t": "tf.errors.NotFoundError"}, {"p": "/versions/r1.7/api_docs/python/tf/errors/OutOfRangeError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "r1.7", "t": "tf.errors.OutOfRangeError"}, {"p": "/versions/r1.7/api_docs/python/tf/errors/PermissionDeniedError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "r1.7", "t": "tf.errors.PermissionDeniedError"}, {"p": "/versions/r1.7/api_docs/python/tf/errors/ResourceExhaustedError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "r1.7", "t": "tf.errors.ResourceExhaustedError"}, {"p": "/versions/r1.7/api_docs/python/tf/errors/UnauthenticatedError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "r1.7", "t": "tf.errors.UnauthenticatedError"}, {"p": "/versions/r1.7/api_docs/python/tf/errors/UnavailableError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "r1.7", "t": "tf.errors.UnavailableError"}, {"p": "/versions/r1.7/api_docs/python/tf/errors/UnimplementedError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "r1.7", "t": "tf.errors.UnimplementedError"}, {"p": "/versions/r1.7/api_docs/python/tf/errors/UnknownError", "k": ["error_code", "message", "node_def", "op", "__init__"], "r": "r1.7", "t": "tf.errors.UnknownError"}, {"p": "/versions/r1.7/api_docs/python/tf/errors/error_code_from_exception_type", "k": [], "r": "r1.7", "t": "tf.errors.error_code_from_exception_type"}, {"p": "/versions/r1.7/api_docs/python/tf/errors/exception_type_from_error_code", "k": [], "r": "r1.7", "t": "tf.errors.exception_type_from_error_code"}, {"p": "/versions/r1.7/api_docs/python/tf/errors/raise_exception_on_not_ok_status", "k": ["__enter__", "__exit__"], "r": "r1.7", "t": "tf.errors.raise_exception_on_not_ok_status"}, {"p": "/versions/r1.7/api_docs/python/tf/estimator", "k": [], "r": "r1.7", "t": "tf.estimator"}, {"p": "/versions/r1.7/api_docs/python/tf/estimator/BaselineClassifier", "k": ["config", "model_dir", "model_fn", "params", "__init__", "evaluate", "export_savedmodel", "get_variable_names", "get_variable_value", "latest_checkpoint", "predict", "train"], "r": "r1.7", "t": "tf.estimator.BaselineClassifier"}, {"p": "/versions/r1.7/api_docs/python/tf/estimator/BaselineRegressor", "k": ["config", "model_dir", "model_fn", "params", "__init__", "evaluate", "export_savedmodel", "get_variable_names", "get_variable_value", "latest_checkpoint", "predict", "train"], "r": "r1.7", "t": "tf.estimator.BaselineRegressor"}, {"p": "/versions/r1.7/api_docs/python/tf/estimator/DNNClassifier", "k": ["config", "model_dir", "model_fn", "params", "__init__", "evaluate", "export_savedmodel", "get_variable_names", "get_variable_value", "latest_checkpoint", "predict", "train"], "r": "r1.7", "t": "tf.estimator.DNNClassifier"}, {"p": "/versions/r1.7/api_docs/python/tf/estimator/DNNLinearCombinedClassifier", "k": ["config", "model_dir", "model_fn", "params", "__init__", "evaluate", "export_savedmodel", "get_variable_names", "get_variable_value", "latest_checkpoint", "predict", "train"], "r": "r1.7", "t": "tf.estimator.DNNLinearCombinedClassifier"}, {"p": "/versions/r1.7/api_docs/python/tf/estimator/DNNLinearCombinedRegressor", "k": ["config", "model_dir", "model_fn", "params", "__init__", "evaluate", "export_savedmodel", "get_variable_names", "get_variable_value", "latest_checkpoint", "predict", "train"], "r": "r1.7", "t": "tf.estimator.DNNLinearCombinedRegressor"}, {"p": "/versions/r1.7/api_docs/python/tf/estimator/DNNRegressor", "k": ["config", "model_dir", "model_fn", "params", "__init__", "evaluate", "export_savedmodel", "get_variable_names", "get_variable_value", "latest_checkpoint", "predict", "train"], "r": "r1.7", "t": "tf.estimator.DNNRegressor"}, {"p": "/versions/r1.7/api_docs/python/tf/estimator/Estimator", "k": ["config", "model_dir", "model_fn", "params", "__init__", "evaluate", "export_savedmodel", "get_variable_names", "get_variable_value", "latest_checkpoint", "predict", "train"], "r": "r1.7", "t": "tf.estimator.Estimator"}, {"p": "/versions/r1.7/api_docs/python/tf/estimator/EstimatorSpec", "k": ["eval_metric_ops", "evaluation_hooks", "export_outputs", "loss", "mode", "prediction_hooks", "predictions", "scaffold", "train_op", "training_chief_hooks", "training_hooks", "__new__"], "r": "r1.7", "t": "tf.estimator.EstimatorSpec"}, {"p": "/versions/r1.7/api_docs/python/tf/estimator/EvalSpec", "k": ["exporters", "hooks", "input_fn", "name", "start_delay_secs", "steps", "throttle_secs", "__new__"], "r": "r1.7", "t": "tf.estimator.EvalSpec"}, {"p": "/versions/r1.7/api_docs/python/tf/estimator/Exporter", "k": ["name", "export"], "r": "r1.7", "t": "tf.estimator.Exporter"}, {"p": "/versions/r1.7/api_docs/python/tf/estimator/FinalExporter", "k": ["name", "__init__", "export"], "r": "r1.7", "t": "tf.estimator.FinalExporter"}, {"p": "/versions/r1.7/api_docs/python/tf/estimator/LatestExporter", "k": ["name", "__init__", "export"], "r": "r1.7", "t": "tf.estimator.LatestExporter"}, {"p": "/versions/r1.7/api_docs/python/tf/estimator/LinearClassifier", "k": ["config", "model_dir", "model_fn", "params", "__init__", "evaluate", "export_savedmodel", "get_variable_names", "get_variable_value", "latest_checkpoint", "predict", "train"], "r": "r1.7", "t": "tf.estimator.LinearClassifier"}, {"p": "/versions/r1.7/api_docs/python/tf/estimator/LinearRegressor", "k": ["config", "model_dir", "model_fn", "params", "__init__", "evaluate", "export_savedmodel", "get_variable_names", "get_variable_value", "latest_checkpoint", "predict", "train"], "r": "r1.7", "t": "tf.estimator.LinearRegressor"}, {"p": "/versions/r1.7/api_docs/python/tf/estimator/ModeKeys", "k": ["EVAL", "PREDICT", "TRAIN"], "r": "r1.7", "t": "tf.estimator.ModeKeys"}, {"p": "/versions/r1.7/api_docs/python/tf/estimator/RunConfig", "k": ["cluster_spec", "evaluation_master", "global_id_in_cluster", "is_chief", "keep_checkpoint_every_n_hours", "keep_checkpoint_max", "log_step_count_steps", "master", "model_dir", "num_ps_replicas", "num_worker_replicas", "save_checkpoints_secs", "save_checkpoints_steps", "save_summary_steps", "service", "session_config", "task_id", "task_type", "tf_random_seed", "__init__", "replace"], "r": "r1.7", "t": "tf.estimator.RunConfig"}, {"p": "/versions/r1.7/api_docs/python/tf/estimator/TrainSpec", "k": ["hooks", "input_fn", "max_steps", "__new__"], "r": "r1.7", "t": "tf.estimator.TrainSpec"}, {"p": "/versions/r1.7/api_docs/python/tf/estimator/VocabInfo", "k": ["backup_initializer", "new_vocab", "new_vocab_size", "num_oov_buckets", "old_vocab", "old_vocab_size", "__new__"], "r": "r1.7", "t": "tf.estimator.VocabInfo"}, {"p": "/versions/r1.7/api_docs/python/tf/estimator/WarmStartSettings", "k": ["ckpt_to_initialize_from", "var_name_to_prev_var_name", "var_name_to_vocab_info", "vars_to_warm_start", "__new__"], "r": "r1.7", "t": "tf.estimator.WarmStartSettings"}, {"p": "/versions/r1.7/api_docs/python/tf/estimator/classifier_parse_example_spec", "k": [], "r": "r1.7", "t": "tf.estimator.classifier_parse_example_spec"}, {"p": "/versions/r1.7/api_docs/python/tf/estimator/export", "k": [], "r": "r1.7", "t": "tf.estimator.export"}, {"p": "/versions/r1.7/api_docs/python/tf/estimator/export/ClassificationOutput", "k": ["classes", "scores", "__init__", "as_signature_def"], "r": "r1.7", "t": "tf.estimator.export.ClassificationOutput"}, {"p": "/versions/r1.7/api_docs/python/tf/estimator/export/ExportOutput", "k": ["as_signature_def"], "r": "r1.7", "t": "tf.estimator.export.ExportOutput"}, {"p": "/versions/r1.7/api_docs/python/tf/estimator/export/PredictOutput", "k": ["outputs", "__init__", "as_signature_def"], "r": "r1.7", "t": "tf.estimator.export.PredictOutput"}, {"p": "/versions/r1.7/api_docs/python/tf/estimator/export/RegressionOutput", "k": ["value", "__init__", "as_signature_def"], "r": "r1.7", "t": "tf.estimator.export.RegressionOutput"}, {"p": "/versions/r1.7/api_docs/python/tf/estimator/export/ServingInputReceiver", "k": ["features", "receiver_tensors", "receiver_tensors_alternatives", "__new__"], "r": "r1.7", "t": "tf.estimator.export.ServingInputReceiver"}, {"p": "/versions/r1.7/api_docs/python/tf/estimator/export/TensorServingInputReceiver", "k": ["features", "receiver_tensors", "receiver_tensors_alternatives", "__new__"], "r": "r1.7", "t": "tf.estimator.export.TensorServingInputReceiver"}, {"p": "/versions/r1.7/api_docs/python/tf/estimator/export/build_parsing_serving_input_receiver_fn", "k": [], "r": "r1.7", "t": "tf.estimator.export.build_parsing_serving_input_receiver_fn"}, {"p": "/versions/r1.7/api_docs/python/tf/estimator/export/build_raw_serving_input_receiver_fn", "k": [], "r": "r1.7", "t": "tf.estimator.export.build_raw_serving_input_receiver_fn"}, {"p": "/versions/r1.7/api_docs/python/tf/estimator/inputs", "k": [], "r": "r1.7", "t": "tf.estimator.inputs"}, {"p": "/versions/r1.7/api_docs/python/tf/estimator/inputs/numpy_input_fn", "k": [], "r": "r1.7", "t": "tf.estimator.inputs.numpy_input_fn"}, {"p": "/versions/r1.7/api_docs/python/tf/estimator/inputs/pandas_input_fn", "k": [], "r": "r1.7", "t": "tf.estimator.inputs.pandas_input_fn"}, {"p": "/versions/r1.7/api_docs/python/tf/estimator/regressor_parse_example_spec", "k": [], "r": "r1.7", "t": "tf.estimator.regressor_parse_example_spec"}, {"p": "/versions/r1.7/api_docs/python/tf/estimator/train_and_evaluate", "k": [], "r": "r1.7", "t": "tf.estimator.train_and_evaluate"}, {"p": "/versions/r1.7/api_docs/python/tf/executing_eagerly", "k": [], "r": "r1.7", "t": "tf.executing_eagerly"}, {"p": "/versions/r1.7/api_docs/python/tf/exp", "k": [], "r": "r1.7", "t": "tf.exp"}, {"p": "/versions/r1.7/api_docs/python/tf/expand_dims", "k": [], "r": "r1.7", "t": "tf.expand_dims"}, {"p": "/versions/r1.7/api_docs/python/tf/expm1", "k": [], "r": "r1.7", "t": "tf.expm1"}, {"p": "/versions/r1.7/api_docs/python/tf/extract_image_patches", "k": [], "r": "r1.7", "t": "tf.extract_image_patches"}, {"p": "/versions/r1.7/api_docs/python/tf/eye", "k": [], "r": "r1.7", "t": "tf.eye"}, {"p": "/versions/r1.7/api_docs/python/tf/fake_quant_with_min_max_args", "k": [], "r": "r1.7", "t": "tf.fake_quant_with_min_max_args"}, {"p": "/versions/r1.7/api_docs/python/tf/fake_quant_with_min_max_args_gradient", "k": [], "r": "r1.7", "t": "tf.fake_quant_with_min_max_args_gradient"}, {"p": "/versions/r1.7/api_docs/python/tf/fake_quant_with_min_max_vars", "k": [], "r": "r1.7", "t": "tf.fake_quant_with_min_max_vars"}, {"p": "/versions/r1.7/api_docs/python/tf/fake_quant_with_min_max_vars_gradient", "k": [], "r": "r1.7", "t": "tf.fake_quant_with_min_max_vars_gradient"}, {"p": "/versions/r1.7/api_docs/python/tf/fake_quant_with_min_max_vars_per_channel", "k": [], "r": "r1.7", "t": "tf.fake_quant_with_min_max_vars_per_channel"}, {"p": "/versions/r1.7/api_docs/python/tf/fake_quant_with_min_max_vars_per_channel_gradient", "k": [], "r": "r1.7", "t": "tf.fake_quant_with_min_max_vars_per_channel_gradient"}, {"p": "/versions/r1.7/api_docs/python/tf/feature_column", "k": [], "r": "r1.7", "t": "tf.feature_column"}, {"p": "/versions/r1.7/api_docs/python/tf/feature_column/bucketized_column", "k": [], "r": "r1.7", "t": "tf.feature_column.bucketized_column"}, {"p": "/versions/r1.7/api_docs/python/tf/feature_column/categorical_column_with_hash_bucket", "k": [], "r": "r1.7", "t": "tf.feature_column.categorical_column_with_hash_bucket"}, {"p": "/versions/r1.7/api_docs/python/tf/feature_column/categorical_column_with_identity", "k": [], "r": "r1.7", "t": "tf.feature_column.categorical_column_with_identity"}, {"p": "/versions/r1.7/api_docs/python/tf/feature_column/categorical_column_with_vocabulary_file", "k": [], "r": "r1.7", "t": "tf.feature_column.categorical_column_with_vocabulary_file"}, {"p": "/versions/r1.7/api_docs/python/tf/feature_column/categorical_column_with_vocabulary_list", "k": [], "r": "r1.7", "t": "tf.feature_column.categorical_column_with_vocabulary_list"}, {"p": "/versions/r1.7/api_docs/python/tf/feature_column/crossed_column", "k": [], "r": "r1.7", "t": "tf.feature_column.crossed_column"}, {"p": "/versions/r1.7/api_docs/python/tf/feature_column/embedding_column", "k": [], "r": "r1.7", "t": "tf.feature_column.embedding_column"}, {"p": "/versions/r1.7/api_docs/python/tf/feature_column/indicator_column", "k": [], "r": "r1.7", "t": "tf.feature_column.indicator_column"}, {"p": "/versions/r1.7/api_docs/python/tf/feature_column/input_layer", "k": [], "r": "r1.7", "t": "tf.feature_column.input_layer"}, {"p": "/versions/r1.7/api_docs/python/tf/feature_column/linear_model", "k": [], "r": "r1.7", "t": "tf.feature_column.linear_model"}, {"p": "/versions/r1.7/api_docs/python/tf/feature_column/make_parse_example_spec", "k": [], "r": "r1.7", "t": "tf.feature_column.make_parse_example_spec"}, {"p": "/versions/r1.7/api_docs/python/tf/feature_column/numeric_column", "k": [], "r": "r1.7", "t": "tf.feature_column.numeric_column"}, {"p": "/versions/r1.7/api_docs/python/tf/feature_column/shared_embedding_columns", "k": [], "r": "r1.7", "t": "tf.feature_column.shared_embedding_columns"}, {"p": "/versions/r1.7/api_docs/python/tf/feature_column/weighted_categorical_column", "k": [], "r": "r1.7", "t": "tf.feature_column.weighted_categorical_column"}, {"p": "/versions/r1.7/api_docs/python/tf/fft", "k": [], "r": "r1.7", "t": "tf.fft"}, {"p": "/versions/r1.7/api_docs/python/tf/fft2d", "k": [], "r": "r1.7", "t": "tf.fft2d"}, {"p": "/versions/r1.7/api_docs/python/tf/fft3d", "k": [], "r": "r1.7", "t": "tf.fft3d"}, {"p": "/versions/r1.7/api_docs/python/tf/fill", "k": [], "r": "r1.7", "t": "tf.fill"}, {"p": "/versions/r1.7/api_docs/python/tf/fixed_size_partitioner", "k": [], "r": "r1.7", "t": "tf.fixed_size_partitioner"}, {"p": "/versions/r1.7/api_docs/python/tf/flags", "k": [], "r": "r1.7", "t": "tf.flags"}, {"p": "/versions/r1.7/api_docs/python/tf/floor", "k": [], "r": "r1.7", "t": "tf.floor"}, {"p": "/versions/r1.7/api_docs/python/tf/floor_div", "k": [], "r": "r1.7", "t": "tf.floor_div"}, {"p": "/versions/r1.7/api_docs/python/tf/floordiv", "k": [], "r": "r1.7", "t": "tf.floordiv"}, {"p": "/versions/r1.7/api_docs/python/tf/floormod", "k": [], "r": "r1.7", "t": "tf.floormod"}, {"p": "/versions/r1.7/api_docs/python/tf/foldl", "k": [], "r": "r1.7", "t": "tf.foldl"}, {"p": "/versions/r1.7/api_docs/python/tf/foldr", "k": [], "r": "r1.7", "t": "tf.foldr"}, {"p": "/versions/r1.7/api_docs/python/tf/gather", "k": [], "r": "r1.7", "t": "tf.gather"}, {"p": "/versions/r1.7/api_docs/python/tf/gather_nd", "k": [], "r": "r1.7", "t": "tf.gather_nd"}, {"p": "/versions/r1.7/api_docs/python/tf/get_collection", "k": [], "r": "r1.7", "t": "tf.get_collection"}, {"p": "/versions/r1.7/api_docs/python/tf/get_collection_ref", "k": [], "r": "r1.7", "t": "tf.get_collection_ref"}, {"p": "/versions/r1.7/api_docs/python/tf/get_default_graph", "k": [], "r": "r1.7", "t": "tf.get_default_graph"}, {"p": "/versions/r1.7/api_docs/python/tf/get_default_session", "k": [], "r": "r1.7", "t": "tf.get_default_session"}, {"p": "/versions/r1.7/api_docs/python/tf/get_local_variable", "k": [], "r": "r1.7", "t": "tf.get_local_variable"}, {"p": "/versions/r1.7/api_docs/python/tf/get_seed", "k": [], "r": "r1.7", "t": "tf.get_seed"}, {"p": "/versions/r1.7/api_docs/python/tf/get_session_handle", "k": [], "r": "r1.7", "t": "tf.get_session_handle"}, {"p": "/versions/r1.7/api_docs/python/tf/get_session_tensor", "k": [], "r": "r1.7", "t": "tf.get_session_tensor"}, {"p": "/versions/r1.7/api_docs/python/tf/get_variable", "k": [], "r": "r1.7", "t": "tf.get_variable"}, {"p": "/versions/r1.7/api_docs/python/tf/get_variable_scope", "k": [], "r": "r1.7", "t": "tf.get_variable_scope"}, {"p": "/versions/r1.7/api_docs/python/tf/gfile", "k": [], "r": "r1.7", "t": "tf.gfile"}, {"p": "/versions/r1.7/api_docs/python/tf/gfile/Copy", "k": [], "r": "r1.7", "t": "tf.gfile.Copy"}, {"p": "/versions/r1.7/api_docs/python/tf/gfile/DeleteRecursively", "k": [], "r": "r1.7", "t": "tf.gfile.DeleteRecursively"}, {"p": "/versions/r1.7/api_docs/python/tf/gfile/Exists", "k": [], "r": "r1.7", "t": "tf.gfile.Exists"}, {"p": "/versions/r1.7/api_docs/python/tf/gfile/FastGFile", "k": ["mode", "name", "__enter__", "__exit__", "__init__", "__iter__", "__next__", "close", "flush", "next", "read", "readline", "readlines", "seek", "size", "tell", "write"], "r": "r1.7", "t": "tf.gfile.FastGFile"}, {"p": "/versions/r1.7/api_docs/python/tf/gfile/GFile", "k": ["mode", "name", "__enter__", "__exit__", "__init__", "__iter__", "__next__", "close", "flush", "next", "read", "readline", "readlines", "seek", "size", "tell", "write"], "r": "r1.7", "t": "tf.gfile.GFile"}, {"p": "/versions/r1.7/api_docs/python/tf/gfile/Glob", "k": [], "r": "r1.7", "t": "tf.gfile.Glob"}, {"p": "/versions/r1.7/api_docs/python/tf/gfile/IsDirectory", "k": [], "r": "r1.7", "t": "tf.gfile.IsDirectory"}, {"p": "/versions/r1.7/api_docs/python/tf/gfile/ListDirectory", "k": [], "r": "r1.7", "t": "tf.gfile.ListDirectory"}, {"p": "/versions/r1.7/api_docs/python/tf/gfile/MakeDirs", "k": [], "r": "r1.7", "t": "tf.gfile.MakeDirs"}, {"p": "/versions/r1.7/api_docs/python/tf/gfile/MkDir", "k": [], "r": "r1.7", "t": "tf.gfile.MkDir"}, {"p": "/versions/r1.7/api_docs/python/tf/gfile/Remove", "k": [], "r": "r1.7", "t": "tf.gfile.Remove"}, {"p": "/versions/r1.7/api_docs/python/tf/gfile/Rename", "k": [], "r": "r1.7", "t": "tf.gfile.Rename"}, {"p": "/versions/r1.7/api_docs/python/tf/gfile/Stat", "k": [], "r": "r1.7", "t": "tf.gfile.Stat"}, {"p": "/versions/r1.7/api_docs/python/tf/gfile/Walk", "k": [], "r": "r1.7", "t": "tf.gfile.Walk"}, {"p": "/versions/r1.7/api_docs/python/tf/global_norm", "k": [], "r": "r1.7", "t": "tf.global_norm"}, {"p": "/versions/r1.7/api_docs/python/tf/global_variables", "k": [], "r": "r1.7", "t": "tf.global_variables"}, {"p": "/versions/r1.7/api_docs/python/tf/global_variables_initializer", "k": [], "r": "r1.7", "t": "tf.global_variables_initializer"}, {"p": "/versions/r1.7/api_docs/python/tf/glorot_normal_initializer", "k": [], "r": "r1.7", "t": "tf.glorot_normal_initializer"}, {"p": "/versions/r1.7/api_docs/python/tf/glorot_uniform_initializer", "k": [], "r": "r1.7", "t": "tf.glorot_uniform_initializer"}, {"p": "/versions/r1.7/api_docs/python/tf/gradients", "k": [], "r": "r1.7", "t": "tf.gradients"}, {"p": "/versions/r1.7/api_docs/python/tf/graph_util", "k": [], "r": "r1.7", "t": "tf.graph_util"}, {"p": "/versions/r1.7/api_docs/python/tf/graph_util/convert_variables_to_constants", "k": [], "r": "r1.7", "t": "tf.graph_util.convert_variables_to_constants"}, {"p": "/versions/r1.7/api_docs/python/tf/graph_util/extract_sub_graph", "k": [], "r": "r1.7", "t": "tf.graph_util.extract_sub_graph"}, {"p": "/versions/r1.7/api_docs/python/tf/graph_util/must_run_on_cpu", "k": [], "r": "r1.7", "t": "tf.graph_util.must_run_on_cpu"}, {"p": "/versions/r1.7/api_docs/python/tf/graph_util/remove_training_nodes", "k": [], "r": "r1.7", "t": "tf.graph_util.remove_training_nodes"}, {"p": "/versions/r1.7/api_docs/python/tf/graph_util/tensor_shape_from_node_def_name", "k": [], "r": "r1.7", "t": "tf.graph_util.tensor_shape_from_node_def_name"}, {"p": "/versions/r1.7/api_docs/python/tf/greater", "k": [], "r": "r1.7", "t": "tf.greater"}, {"p": "/versions/r1.7/api_docs/python/tf/greater_equal", "k": [], "r": "r1.7", "t": "tf.greater_equal"}, {"p": "/versions/r1.7/api_docs/python/tf/group", "k": [], "r": "r1.7", "t": "tf.group"}, {"p": "/versions/r1.7/api_docs/python/tf/guarantee_const", "k": [], "r": "r1.7", "t": "tf.guarantee_const"}, {"p": "/versions/r1.7/api_docs/python/tf/hessians", "k": [], "r": "r1.7", "t": "tf.hessians"}, {"p": "/versions/r1.7/api_docs/python/tf/histogram_fixed_width", "k": [], "r": "r1.7", "t": "tf.histogram_fixed_width"}, {"p": "/versions/r1.7/api_docs/python/tf/histogram_fixed_width_bins", "k": [], "r": "r1.7", "t": "tf.histogram_fixed_width_bins"}, {"p": "/versions/r1.7/api_docs/python/tf/identity", "k": [], "r": "r1.7", "t": "tf.identity"}, {"p": "/versions/r1.7/api_docs/python/tf/identity_n", "k": [], "r": "r1.7", "t": "tf.identity_n"}, {"p": "/versions/r1.7/api_docs/python/tf/ifft", "k": [], "r": "r1.7", "t": "tf.ifft"}, {"p": "/versions/r1.7/api_docs/python/tf/ifft2d", "k": [], "r": "r1.7", "t": "tf.ifft2d"}, {"p": "/versions/r1.7/api_docs/python/tf/ifft3d", "k": [], "r": "r1.7", "t": "tf.ifft3d"}, {"p": "/versions/r1.7/api_docs/python/tf/igamma", "k": [], "r": "r1.7", "t": "tf.igamma"}, {"p": "/versions/r1.7/api_docs/python/tf/igammac", "k": [], "r": "r1.7", "t": "tf.igammac"}, {"p": "/versions/r1.7/api_docs/python/tf/imag", "k": [], "r": "r1.7", "t": "tf.imag"}, {"p": "/versions/r1.7/api_docs/python/tf/image", "k": [], "r": "r1.7", "t": "tf.image"}, {"p": "/versions/r1.7/api_docs/python/tf/image/ResizeMethod", "k": ["AREA", "BICUBIC", "BILINEAR", "NEAREST_NEIGHBOR"], "r": "r1.7", "t": "tf.image.ResizeMethod"}, {"p": "/versions/r1.7/api_docs/python/tf/image/adjust_brightness", "k": [], "r": "r1.7", "t": "tf.image.adjust_brightness"}, {"p": "/versions/r1.7/api_docs/python/tf/image/adjust_contrast", "k": [], "r": "r1.7", "t": "tf.image.adjust_contrast"}, {"p": "/versions/r1.7/api_docs/python/tf/image/adjust_gamma", "k": [], "r": "r1.7", "t": "tf.image.adjust_gamma"}, {"p": "/versions/r1.7/api_docs/python/tf/image/adjust_hue", "k": [], "r": "r1.7", "t": "tf.image.adjust_hue"}, {"p": "/versions/r1.7/api_docs/python/tf/image/adjust_saturation", "k": [], "r": "r1.7", "t": "tf.image.adjust_saturation"}, {"p": "/versions/r1.7/api_docs/python/tf/image/central_crop", "k": [], "r": "r1.7", "t": "tf.image.central_crop"}, {"p": "/versions/r1.7/api_docs/python/tf/image/convert_image_dtype", "k": [], "r": "r1.7", "t": "tf.image.convert_image_dtype"}, {"p": "/versions/r1.7/api_docs/python/tf/image/crop_and_resize", "k": [], "r": "r1.7", "t": "tf.image.crop_and_resize"}, {"p": "/versions/r1.7/api_docs/python/tf/image/crop_to_bounding_box", "k": [], "r": "r1.7", "t": "tf.image.crop_to_bounding_box"}, {"p": "/versions/r1.7/api_docs/python/tf/image/decode_and_crop_jpeg", "k": [], "r": "r1.7", "t": "tf.image.decode_and_crop_jpeg"}, {"p": "/versions/r1.7/api_docs/python/tf/image/decode_bmp", "k": [], "r": "r1.7", "t": "tf.image.decode_bmp"}, {"p": "/versions/r1.7/api_docs/python/tf/image/decode_gif", "k": [], "r": "r1.7", "t": "tf.image.decode_gif"}, {"p": "/versions/r1.7/api_docs/python/tf/image/decode_image", "k": [], "r": "r1.7", "t": "tf.image.decode_image"}, {"p": "/versions/r1.7/api_docs/python/tf/image/decode_jpeg", "k": [], "r": "r1.7", "t": "tf.image.decode_jpeg"}, {"p": "/versions/r1.7/api_docs/python/tf/image/decode_png", "k": [], "r": "r1.7", "t": "tf.image.decode_png"}, {"p": "/versions/r1.7/api_docs/python/tf/image/draw_bounding_boxes", "k": [], "r": "r1.7", "t": "tf.image.draw_bounding_boxes"}, {"p": "/versions/r1.7/api_docs/python/tf/image/encode_jpeg", "k": [], "r": "r1.7", "t": "tf.image.encode_jpeg"}, {"p": "/versions/r1.7/api_docs/python/tf/image/encode_png", "k": [], "r": "r1.7", "t": "tf.image.encode_png"}, {"p": "/versions/r1.7/api_docs/python/tf/image/extract_glimpse", "k": [], "r": "r1.7", "t": "tf.image.extract_glimpse"}, {"p": "/versions/r1.7/api_docs/python/tf/image/extract_jpeg_shape", "k": [], "r": "r1.7", "t": "tf.image.extract_jpeg_shape"}, {"p": "/versions/r1.7/api_docs/python/tf/image/flip_left_right", "k": [], "r": "r1.7", "t": "tf.image.flip_left_right"}, {"p": "/versions/r1.7/api_docs/python/tf/image/flip_up_down", "k": [], "r": "r1.7", "t": "tf.image.flip_up_down"}, {"p": "/versions/r1.7/api_docs/python/tf/image/grayscale_to_rgb", "k": [], "r": "r1.7", "t": "tf.image.grayscale_to_rgb"}, {"p": "/versions/r1.7/api_docs/python/tf/image/hsv_to_rgb", "k": [], "r": "r1.7", "t": "tf.image.hsv_to_rgb"}, {"p": "/versions/r1.7/api_docs/python/tf/image/is_jpeg", "k": [], "r": "r1.7", "t": "tf.image.is_jpeg"}, {"p": "/versions/r1.7/api_docs/python/tf/image/non_max_suppression", "k": [], "r": "r1.7", "t": "tf.image.non_max_suppression"}, {"p": "/versions/r1.7/api_docs/python/tf/image/pad_to_bounding_box", "k": [], "r": "r1.7", "t": "tf.image.pad_to_bounding_box"}, {"p": "/versions/r1.7/api_docs/python/tf/image/per_image_standardization", "k": [], "r": "r1.7", "t": "tf.image.per_image_standardization"}, {"p": "/versions/r1.7/api_docs/python/tf/image/random_brightness", "k": [], "r": "r1.7", "t": "tf.image.random_brightness"}, {"p": "/versions/r1.7/api_docs/python/tf/image/random_contrast", "k": [], "r": "r1.7", "t": "tf.image.random_contrast"}, {"p": "/versions/r1.7/api_docs/python/tf/image/random_flip_left_right", "k": [], "r": "r1.7", "t": "tf.image.random_flip_left_right"}, {"p": "/versions/r1.7/api_docs/python/tf/image/random_flip_up_down", "k": [], "r": "r1.7", "t": "tf.image.random_flip_up_down"}, {"p": "/versions/r1.7/api_docs/python/tf/image/random_hue", "k": [], "r": "r1.7", "t": "tf.image.random_hue"}, {"p": "/versions/r1.7/api_docs/python/tf/image/random_saturation", "k": [], "r": "r1.7", "t": "tf.image.random_saturation"}, {"p": "/versions/r1.7/api_docs/python/tf/image/resize_area", "k": [], "r": "r1.7", "t": "tf.image.resize_area"}, {"p": "/versions/r1.7/api_docs/python/tf/image/resize_bicubic", "k": [], "r": "r1.7", "t": "tf.image.resize_bicubic"}, {"p": "/versions/r1.7/api_docs/python/tf/image/resize_bilinear", "k": [], "r": "r1.7", "t": "tf.image.resize_bilinear"}, {"p": "/versions/r1.7/api_docs/python/tf/image/resize_image_with_crop_or_pad", "k": [], "r": "r1.7", "t": "tf.image.resize_image_with_crop_or_pad"}, {"p": "/versions/r1.7/api_docs/python/tf/image/resize_images", "k": [], "r": "r1.7", "t": "tf.image.resize_images"}, {"p": "/versions/r1.7/api_docs/python/tf/image/resize_nearest_neighbor", "k": [], "r": "r1.7", "t": "tf.image.resize_nearest_neighbor"}, {"p": "/versions/r1.7/api_docs/python/tf/image/rgb_to_grayscale", "k": [], "r": "r1.7", "t": "tf.image.rgb_to_grayscale"}, {"p": "/versions/r1.7/api_docs/python/tf/image/rgb_to_hsv", "k": [], "r": "r1.7", "t": "tf.image.rgb_to_hsv"}, {"p": "/versions/r1.7/api_docs/python/tf/image/rgb_to_yiq", "k": [], "r": "r1.7", "t": "tf.image.rgb_to_yiq"}, {"p": "/versions/r1.7/api_docs/python/tf/image/rgb_to_yuv", "k": [], "r": "r1.7", "t": "tf.image.rgb_to_yuv"}, {"p": "/versions/r1.7/api_docs/python/tf/image/rot90", "k": [], "r": "r1.7", "t": "tf.image.rot90"}, {"p": "/versions/r1.7/api_docs/python/tf/image/sample_distorted_bounding_box", "k": [], "r": "r1.7", "t": "tf.image.sample_distorted_bounding_box"}, {"p": "/versions/r1.7/api_docs/python/tf/image/total_variation", "k": [], "r": "r1.7", "t": "tf.image.total_variation"}, {"p": "/versions/r1.7/api_docs/python/tf/image/transpose_image", "k": [], "r": "r1.7", "t": "tf.image.transpose_image"}, {"p": "/versions/r1.7/api_docs/python/tf/image/yiq_to_rgb", "k": [], "r": "r1.7", "t": "tf.image.yiq_to_rgb"}, {"p": "/versions/r1.7/api_docs/python/tf/image/yuv_to_rgb", "k": [], "r": "r1.7", "t": "tf.image.yuv_to_rgb"}, {"p": "/versions/r1.7/api_docs/python/tf/import_graph_def", "k": [], "r": "r1.7", "t": "tf.import_graph_def"}, {"p": "/versions/r1.7/api_docs/python/tf/initialize_all_tables", "k": [], "r": "r1.7", "t": "tf.initialize_all_tables"}, {"p": "/versions/r1.7/api_docs/python/tf/initialize_all_variables", "k": [], "r": "r1.7", "t": "tf.initialize_all_variables"}, {"p": "/versions/r1.7/api_docs/python/tf/initialize_local_variables", "k": [], "r": "r1.7", "t": "tf.initialize_local_variables"}, {"p": "/versions/r1.7/api_docs/python/tf/initialize_variables", "k": [], "r": "r1.7", "t": "tf.initialize_variables"}, {"p": "/versions/r1.7/api_docs/python/tf/initializers", "k": ["absolute_import", "division", "print_function"], "r": "r1.7", "t": "tf.initializers"}, {"p": "/versions/r1.7/api_docs/python/tf/initializers/identity", "k": ["__call__", "__init__", "from_config", "get_config"], "r": "r1.7", "t": "tf.initializers.identity"}, {"p": "/versions/r1.7/api_docs/python/tf/invert_permutation", "k": [], "r": "r1.7", "t": "tf.invert_permutation"}, {"p": "/versions/r1.7/api_docs/python/tf/is_finite", "k": [], "r": "r1.7", "t": "tf.is_finite"}, {"p": "/versions/r1.7/api_docs/python/tf/is_inf", "k": [], "r": "r1.7", "t": "tf.is_inf"}, {"p": "/versions/r1.7/api_docs/python/tf/is_nan", "k": [], "r": "r1.7", "t": "tf.is_nan"}, {"p": "/versions/r1.7/api_docs/python/tf/is_non_decreasing", "k": [], "r": "r1.7", "t": "tf.is_non_decreasing"}, {"p": "/versions/r1.7/api_docs/python/tf/is_numeric_tensor", "k": [], "r": "r1.7", "t": "tf.is_numeric_tensor"}, {"p": "/versions/r1.7/api_docs/python/tf/is_strictly_increasing", "k": [], "r": "r1.7", "t": "tf.is_strictly_increasing"}, {"p": "/versions/r1.7/api_docs/python/tf/is_variable_initialized", "k": [], "r": "r1.7", "t": "tf.is_variable_initialized"}, {"p": "/versions/r1.7/api_docs/python/tf/keras", "k": ["__version__"], "r": "r1.7", "t": "tf.keras"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/Input", "k": [], "r": "r1.7", "t": "tf.keras.Input"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/Model", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "input_spec", "layers", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "state_updates", "stateful", "trainable_variables", "trainable_weights", "updates", "uses_learning_phase", "variables", "weights", "__call__", "__deepcopy__", "__init__", "__setattr__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compile", "compute_mask", "compute_output_shape", "count_params", "evaluate", "evaluate_generator", "fit", "fit_generator", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_layer", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "load_weights", "predict", "predict_generator", "predict_on_batch", "reset_states", "save", "save_weights", "set_weights", "summary", "test_on_batch", "to_json", "to_yaml", "train_on_batch"], "r": "r1.7", "t": "tf.keras.Model"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/Sequential", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "input_spec", "layers", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "regularizers", "scope_name", "state_updates", "stateful", "trainable", "trainable_variables", "trainable_weights", "updates", "uses_learning_phase", "variables", "weights", "__call__", "__deepcopy__", "__init__", "__setattr__", "add", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compile", "compute_mask", "compute_output_shape", "count_params", "evaluate", "evaluate_generator", "fit", "fit_generator", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_layer", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "load_weights", "pop", "predict", "predict_classes", "predict_generator", "predict_on_batch", "predict_proba", "reset_states", "save", "save_weights", "set_weights", "summary", "test_on_batch", "to_json", "to_yaml", "train_on_batch"], "r": "r1.7", "t": "tf.keras.Sequential"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/activations", "k": [], "r": "r1.7", "t": "tf.keras.activations"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/activations/deserialize", "k": [], "r": "r1.7", "t": "tf.keras.activations.deserialize"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/activations/elu", "k": [], "r": "r1.7", "t": "tf.keras.activations.elu"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/activations/get", "k": [], "r": "r1.7", "t": "tf.keras.activations.get"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/activations/hard_sigmoid", "k": [], "r": "r1.7", "t": "tf.keras.activations.hard_sigmoid"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/activations/linear", "k": [], "r": "r1.7", "t": "tf.keras.activations.linear"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/activations/relu", "k": [], "r": "r1.7", "t": "tf.keras.activations.relu"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/activations/selu", "k": [], "r": "r1.7", "t": "tf.keras.activations.selu"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/activations/serialize", "k": [], "r": "r1.7", "t": "tf.keras.activations.serialize"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/activations/sigmoid", "k": [], "r": "r1.7", "t": "tf.keras.activations.sigmoid"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/activations/softmax", "k": [], "r": "r1.7", "t": "tf.keras.activations.softmax"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/activations/softplus", "k": [], "r": "r1.7", "t": "tf.keras.activations.softplus"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/activations/softsign", "k": [], "r": "r1.7", "t": "tf.keras.activations.softsign"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/activations/tanh", "k": [], "r": "r1.7", "t": "tf.keras.activations.tanh"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/applications", "k": [], "r": "r1.7", "t": "tf.keras.applications"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/applications/DenseNet121", "k": [], "r": "r1.7", "t": "tf.keras.applications.DenseNet121"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/applications/DenseNet169", "k": [], "r": "r1.7", "t": "tf.keras.applications.DenseNet169"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/applications/DenseNet201", "k": [], "r": "r1.7", "t": "tf.keras.applications.DenseNet201"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/applications/InceptionResNetV2", "k": [], "r": "r1.7", "t": "tf.keras.applications.InceptionResNetV2"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/applications/InceptionV3", "k": [], "r": "r1.7", "t": "tf.keras.applications.InceptionV3"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/applications/MobileNet", "k": [], "r": "r1.7", "t": "tf.keras.applications.MobileNet"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/applications/NASNetLarge", "k": [], "r": "r1.7", "t": "tf.keras.applications.NASNetLarge"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/applications/NASNetMobile", "k": [], "r": "r1.7", "t": "tf.keras.applications.NASNetMobile"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/applications/ResNet50", "k": [], "r": "r1.7", "t": "tf.keras.applications.ResNet50"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/applications/VGG16", "k": [], "r": "r1.7", "t": "tf.keras.applications.VGG16"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/applications/VGG19", "k": [], "r": "r1.7", "t": "tf.keras.applications.VGG19"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/applications/Xception", "k": [], "r": "r1.7", "t": "tf.keras.applications.Xception"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/applications/densenet", "k": [], "r": "r1.7", "t": "tf.keras.applications.densenet"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/applications/densenet/decode_predictions", "k": [], "r": "r1.7", "t": "tf.keras.applications.densenet.decode_predictions"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/applications/densenet/preprocess_input", "k": [], "r": "r1.7", "t": "tf.keras.applications.densenet.preprocess_input"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/applications/inception_resnet_v2", "k": [], "r": "r1.7", "t": "tf.keras.applications.inception_resnet_v2"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/applications/inception_resnet_v2/preprocess_input", "k": [], "r": "r1.7", "t": "tf.keras.applications.inception_resnet_v2.preprocess_input"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/applications/inception_v3", "k": [], "r": "r1.7", "t": "tf.keras.applications.inception_v3"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/applications/inception_v3/preprocess_input", "k": [], "r": "r1.7", "t": "tf.keras.applications.inception_v3.preprocess_input"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/applications/mobilenet", "k": [], "r": "r1.7", "t": "tf.keras.applications.mobilenet"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/applications/mobilenet/preprocess_input", "k": [], "r": "r1.7", "t": "tf.keras.applications.mobilenet.preprocess_input"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/applications/nasnet", "k": [], "r": "r1.7", "t": "tf.keras.applications.nasnet"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/applications/resnet50", "k": [], "r": "r1.7", "t": "tf.keras.applications.resnet50"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/applications/resnet50/preprocess_input", "k": [], "r": "r1.7", "t": "tf.keras.applications.resnet50.preprocess_input"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/applications/vgg16", "k": [], "r": "r1.7", "t": "tf.keras.applications.vgg16"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/applications/vgg19", "k": [], "r": "r1.7", "t": "tf.keras.applications.vgg19"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/applications/xception", "k": [], "r": "r1.7", "t": "tf.keras.applications.xception"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/applications/xception/preprocess_input", "k": [], "r": "r1.7", "t": "tf.keras.applications.xception.preprocess_input"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend", "k": [], "r": "r1.7", "t": "tf.keras.backend"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/abs", "k": [], "r": "r1.7", "t": "tf.keras.backend.abs"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/all", "k": [], "r": "r1.7", "t": "tf.keras.backend.all"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/any", "k": [], "r": "r1.7", "t": "tf.keras.backend.any"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/arange", "k": [], "r": "r1.7", "t": "tf.keras.backend.arange"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/argmax", "k": [], "r": "r1.7", "t": "tf.keras.backend.argmax"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/argmin", "k": [], "r": "r1.7", "t": "tf.keras.backend.argmin"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/backend", "k": [], "r": "r1.7", "t": "tf.keras.backend.backend"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/batch_dot", "k": [], "r": "r1.7", "t": "tf.keras.backend.batch_dot"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/batch_flatten", "k": [], "r": "r1.7", "t": "tf.keras.backend.batch_flatten"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/batch_get_value", "k": [], "r": "r1.7", "t": "tf.keras.backend.batch_get_value"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/batch_normalization", "k": [], "r": "r1.7", "t": "tf.keras.backend.batch_normalization"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/batch_set_value", "k": [], "r": "r1.7", "t": "tf.keras.backend.batch_set_value"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/bias_add", "k": [], "r": "r1.7", "t": "tf.keras.backend.bias_add"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/binary_crossentropy", "k": [], "r": "r1.7", "t": "tf.keras.backend.binary_crossentropy"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/cast", "k": [], "r": "r1.7", "t": "tf.keras.backend.cast"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/cast_to_floatx", "k": [], "r": "r1.7", "t": "tf.keras.backend.cast_to_floatx"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/categorical_crossentropy", "k": [], "r": "r1.7", "t": "tf.keras.backend.categorical_crossentropy"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/clear_session", "k": [], "r": "r1.7", "t": "tf.keras.backend.clear_session"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/clip", "k": [], "r": "r1.7", "t": "tf.keras.backend.clip"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/concatenate", "k": [], "r": "r1.7", "t": "tf.keras.backend.concatenate"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/constant", "k": [], "r": "r1.7", "t": "tf.keras.backend.constant"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/conv1d", "k": [], "r": "r1.7", "t": "tf.keras.backend.conv1d"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/conv2d", "k": [], "r": "r1.7", "t": "tf.keras.backend.conv2d"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/conv2d_transpose", "k": [], "r": "r1.7", "t": "tf.keras.backend.conv2d_transpose"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/conv3d", "k": [], "r": "r1.7", "t": "tf.keras.backend.conv3d"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/cos", "k": [], "r": "r1.7", "t": "tf.keras.backend.cos"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/count_params", "k": [], "r": "r1.7", "t": "tf.keras.backend.count_params"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/ctc_batch_cost", "k": [], "r": "r1.7", "t": "tf.keras.backend.ctc_batch_cost"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/ctc_decode", "k": [], "r": "r1.7", "t": "tf.keras.backend.ctc_decode"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/ctc_label_dense_to_sparse", "k": [], "r": "r1.7", "t": "tf.keras.backend.ctc_label_dense_to_sparse"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/dot", "k": [], "r": "r1.7", "t": "tf.keras.backend.dot"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/dropout", "k": [], "r": "r1.7", "t": "tf.keras.backend.dropout"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/dtype", "k": [], "r": "r1.7", "t": "tf.keras.backend.dtype"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/elu", "k": [], "r": "r1.7", "t": "tf.keras.backend.elu"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/epsilon", "k": [], "r": "r1.7", "t": "tf.keras.backend.epsilon"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/equal", "k": [], "r": "r1.7", "t": "tf.keras.backend.equal"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/eval", "k": [], "r": "r1.7", "t": "tf.keras.backend.eval"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/exp", "k": [], "r": "r1.7", "t": "tf.keras.backend.exp"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/expand_dims", "k": [], "r": "r1.7", "t": "tf.keras.backend.expand_dims"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/eye", "k": [], "r": "r1.7", "t": "tf.keras.backend.eye"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/flatten", "k": [], "r": "r1.7", "t": "tf.keras.backend.flatten"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/floatx", "k": [], "r": "r1.7", "t": "tf.keras.backend.floatx"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/foldl", "k": [], "r": "r1.7", "t": "tf.keras.backend.foldl"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/foldr", "k": [], "r": "r1.7", "t": "tf.keras.backend.foldr"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/function", "k": [], "r": "r1.7", "t": "tf.keras.backend.function"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/gather", "k": [], "r": "r1.7", "t": "tf.keras.backend.gather"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/get_session", "k": [], "r": "r1.7", "t": "tf.keras.backend.get_session"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/get_uid", "k": [], "r": "r1.7", "t": "tf.keras.backend.get_uid"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/get_value", "k": [], "r": "r1.7", "t": "tf.keras.backend.get_value"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/gradients", "k": [], "r": "r1.7", "t": "tf.keras.backend.gradients"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/greater", "k": [], "r": "r1.7", "t": "tf.keras.backend.greater"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/greater_equal", "k": [], "r": "r1.7", "t": "tf.keras.backend.greater_equal"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/hard_sigmoid", "k": [], "r": "r1.7", "t": "tf.keras.backend.hard_sigmoid"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/image_data_format", "k": [], "r": "r1.7", "t": "tf.keras.backend.image_data_format"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/in_test_phase", "k": [], "r": "r1.7", "t": "tf.keras.backend.in_test_phase"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/in_top_k", "k": [], "r": "r1.7", "t": "tf.keras.backend.in_top_k"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/in_train_phase", "k": [], "r": "r1.7", "t": "tf.keras.backend.in_train_phase"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/int_shape", "k": [], "r": "r1.7", "t": "tf.keras.backend.int_shape"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/is_sparse", "k": [], "r": "r1.7", "t": "tf.keras.backend.is_sparse"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/l2_normalize", "k": [], "r": "r1.7", "t": "tf.keras.backend.l2_normalize"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/learning_phase", "k": [], "r": "r1.7", "t": "tf.keras.backend.learning_phase"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/less", "k": [], "r": "r1.7", "t": "tf.keras.backend.less"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/less_equal", "k": [], "r": "r1.7", "t": "tf.keras.backend.less_equal"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/log", "k": [], "r": "r1.7", "t": "tf.keras.backend.log"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/manual_variable_initialization", "k": [], "r": "r1.7", "t": "tf.keras.backend.manual_variable_initialization"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/map_fn", "k": [], "r": "r1.7", "t": "tf.keras.backend.map_fn"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/max", "k": [], "r": "r1.7", "t": "tf.keras.backend.max"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/maximum", "k": [], "r": "r1.7", "t": "tf.keras.backend.maximum"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/mean", "k": [], "r": "r1.7", "t": "tf.keras.backend.mean"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/min", "k": [], "r": "r1.7", "t": "tf.keras.backend.min"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/minimum", "k": [], "r": "r1.7", "t": "tf.keras.backend.minimum"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/moving_average_update", "k": [], "r": "r1.7", "t": "tf.keras.backend.moving_average_update"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/ndim", "k": [], "r": "r1.7", "t": "tf.keras.backend.ndim"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/normalize_batch_in_training", "k": [], "r": "r1.7", "t": "tf.keras.backend.normalize_batch_in_training"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/not_equal", "k": [], "r": "r1.7", "t": "tf.keras.backend.not_equal"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/one_hot", "k": [], "r": "r1.7", "t": "tf.keras.backend.one_hot"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/ones", "k": [], "r": "r1.7", "t": "tf.keras.backend.ones"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/ones_like", "k": [], "r": "r1.7", "t": "tf.keras.backend.ones_like"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/permute_dimensions", "k": [], "r": "r1.7", "t": "tf.keras.backend.permute_dimensions"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/placeholder", "k": [], "r": "r1.7", "t": "tf.keras.backend.placeholder"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/pool2d", "k": [], "r": "r1.7", "t": "tf.keras.backend.pool2d"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/pool3d", "k": [], "r": "r1.7", "t": "tf.keras.backend.pool3d"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/pow", "k": [], "r": "r1.7", "t": "tf.keras.backend.pow"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/print_tensor", "k": [], "r": "r1.7", "t": "tf.keras.backend.print_tensor"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/prod", "k": [], "r": "r1.7", "t": "tf.keras.backend.prod"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/random_binomial", "k": [], "r": "r1.7", "t": "tf.keras.backend.random_binomial"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/random_normal", "k": [], "r": "r1.7", "t": "tf.keras.backend.random_normal"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/random_normal_variable", "k": [], "r": "r1.7", "t": "tf.keras.backend.random_normal_variable"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/random_uniform", "k": [], "r": "r1.7", "t": "tf.keras.backend.random_uniform"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/random_uniform_variable", "k": [], "r": "r1.7", "t": "tf.keras.backend.random_uniform_variable"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/relu", "k": [], "r": "r1.7", "t": "tf.keras.backend.relu"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/repeat", "k": [], "r": "r1.7", "t": "tf.keras.backend.repeat"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/repeat_elements", "k": [], "r": "r1.7", "t": "tf.keras.backend.repeat_elements"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/reset_uids", "k": [], "r": "r1.7", "t": "tf.keras.backend.reset_uids"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/reshape", "k": [], "r": "r1.7", "t": "tf.keras.backend.reshape"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/resize_images", "k": [], "r": "r1.7", "t": "tf.keras.backend.resize_images"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/resize_volumes", "k": [], "r": "r1.7", "t": "tf.keras.backend.resize_volumes"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/reverse", "k": [], "r": "r1.7", "t": "tf.keras.backend.reverse"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/rnn", "k": [], "r": "r1.7", "t": "tf.keras.backend.rnn"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/round", "k": [], "r": "r1.7", "t": "tf.keras.backend.round"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/separable_conv2d", "k": [], "r": "r1.7", "t": "tf.keras.backend.separable_conv2d"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/set_epsilon", "k": [], "r": "r1.7", "t": "tf.keras.backend.set_epsilon"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/set_floatx", "k": [], "r": "r1.7", "t": "tf.keras.backend.set_floatx"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/set_image_data_format", "k": [], "r": "r1.7", "t": "tf.keras.backend.set_image_data_format"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/set_learning_phase", "k": [], "r": "r1.7", "t": "tf.keras.backend.set_learning_phase"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/set_session", "k": [], "r": "r1.7", "t": "tf.keras.backend.set_session"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/set_value", "k": [], "r": "r1.7", "t": "tf.keras.backend.set_value"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/shape", "k": [], "r": "r1.7", "t": "tf.keras.backend.shape"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/sigmoid", "k": [], "r": "r1.7", "t": "tf.keras.backend.sigmoid"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/sign", "k": [], "r": "r1.7", "t": "tf.keras.backend.sign"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/sin", "k": [], "r": "r1.7", "t": "tf.keras.backend.sin"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/softmax", "k": [], "r": "r1.7", "t": "tf.keras.backend.softmax"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/softplus", "k": [], "r": "r1.7", "t": "tf.keras.backend.softplus"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/softsign", "k": [], "r": "r1.7", "t": "tf.keras.backend.softsign"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/sparse_categorical_crossentropy", "k": [], "r": "r1.7", "t": "tf.keras.backend.sparse_categorical_crossentropy"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/spatial_2d_padding", "k": [], "r": "r1.7", "t": "tf.keras.backend.spatial_2d_padding"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/spatial_3d_padding", "k": [], "r": "r1.7", "t": "tf.keras.backend.spatial_3d_padding"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/sqrt", "k": [], "r": "r1.7", "t": "tf.keras.backend.sqrt"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/square", "k": [], "r": "r1.7", "t": "tf.keras.backend.square"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/squeeze", "k": [], "r": "r1.7", "t": "tf.keras.backend.squeeze"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/stack", "k": [], "r": "r1.7", "t": "tf.keras.backend.stack"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/std", "k": [], "r": "r1.7", "t": "tf.keras.backend.std"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/stop_gradient", "k": [], "r": "r1.7", "t": "tf.keras.backend.stop_gradient"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/sum", "k": [], "r": "r1.7", "t": "tf.keras.backend.sum"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/switch", "k": [], "r": "r1.7", "t": "tf.keras.backend.switch"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/tanh", "k": [], "r": "r1.7", "t": "tf.keras.backend.tanh"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/temporal_padding", "k": [], "r": "r1.7", "t": "tf.keras.backend.temporal_padding"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/to_dense", "k": [], "r": "r1.7", "t": "tf.keras.backend.to_dense"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/transpose", "k": [], "r": "r1.7", "t": "tf.keras.backend.transpose"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/truncated_normal", "k": [], "r": "r1.7", "t": "tf.keras.backend.truncated_normal"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/update", "k": [], "r": "r1.7", "t": "tf.keras.backend.update"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/update_add", "k": [], "r": "r1.7", "t": "tf.keras.backend.update_add"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/update_sub", "k": [], "r": "r1.7", "t": "tf.keras.backend.update_sub"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/var", "k": [], "r": "r1.7", "t": "tf.keras.backend.var"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/variable", "k": [], "r": "r1.7", "t": "tf.keras.backend.variable"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/zeros", "k": [], "r": "r1.7", "t": "tf.keras.backend.zeros"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/backend/zeros_like", "k": [], "r": "r1.7", "t": "tf.keras.backend.zeros_like"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/callbacks", "k": [], "r": "r1.7", "t": "tf.keras.callbacks"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/callbacks/BaseLogger", "k": ["__init__", "on_batch_begin", "on_batch_end", "on_epoch_begin", "on_epoch_end", "on_train_begin", "on_train_end", "set_model", "set_params"], "r": "r1.7", "t": "tf.keras.callbacks.BaseLogger"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/callbacks/CSVLogger", "k": ["__init__", "on_batch_begin", "on_batch_end", "on_epoch_begin", "on_epoch_end", "on_train_begin", "on_train_end", "set_model", "set_params"], "r": "r1.7", "t": "tf.keras.callbacks.CSVLogger"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/callbacks/Callback", "k": ["__init__", "on_batch_begin", "on_batch_end", "on_epoch_begin", "on_epoch_end", "on_train_begin", "on_train_end", "set_model", "set_params"], "r": "r1.7", "t": "tf.keras.callbacks.Callback"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/callbacks/EarlyStopping", "k": ["__init__", "on_batch_begin", "on_batch_end", "on_epoch_begin", "on_epoch_end", "on_train_begin", "on_train_end", "set_model", "set_params"], "r": "r1.7", "t": "tf.keras.callbacks.EarlyStopping"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/callbacks/History", "k": ["__init__", "on_batch_begin", "on_batch_end", "on_epoch_begin", "on_epoch_end", "on_train_begin", "on_train_end", "set_model", "set_params"], "r": "r1.7", "t": "tf.keras.callbacks.History"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/callbacks/LambdaCallback", "k": ["__init__", "on_batch_begin", "on_batch_end", "on_epoch_begin", "on_epoch_end", "on_train_begin", "on_train_end", "set_model", "set_params"], "r": "r1.7", "t": "tf.keras.callbacks.LambdaCallback"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/callbacks/LearningRateScheduler", "k": ["__init__", "on_batch_begin", "on_batch_end", "on_epoch_begin", "on_epoch_end", "on_train_begin", "on_train_end", "set_model", "set_params"], "r": "r1.7", "t": "tf.keras.callbacks.LearningRateScheduler"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/callbacks/ModelCheckpoint", "k": ["__init__", "on_batch_begin", "on_batch_end", "on_epoch_begin", "on_epoch_end", "on_train_begin", "on_train_end", "set_model", "set_params"], "r": "r1.7", "t": "tf.keras.callbacks.ModelCheckpoint"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/callbacks/ProgbarLogger", "k": ["__init__", "on_batch_begin", "on_batch_end", "on_epoch_begin", "on_epoch_end", "on_train_begin", "on_train_end", "set_model", "set_params"], "r": "r1.7", "t": "tf.keras.callbacks.ProgbarLogger"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/callbacks/ReduceLROnPlateau", "k": ["__init__", "in_cooldown", "on_batch_begin", "on_batch_end", "on_epoch_begin", "on_epoch_end", "on_train_begin", "on_train_end", "set_model", "set_params"], "r": "r1.7", "t": "tf.keras.callbacks.ReduceLROnPlateau"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/callbacks/RemoteMonitor", "k": ["__init__", "on_batch_begin", "on_batch_end", "on_epoch_begin", "on_epoch_end", "on_train_begin", "on_train_end", "set_model", "set_params"], "r": "r1.7", "t": "tf.keras.callbacks.RemoteMonitor"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/callbacks/TensorBoard", "k": ["__init__", "on_batch_begin", "on_batch_end", "on_epoch_begin", "on_epoch_end", "on_train_begin", "on_train_end", "set_model", "set_params"], "r": "r1.7", "t": "tf.keras.callbacks.TensorBoard"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/callbacks/TerminateOnNaN", "k": ["__init__", "on_batch_begin", "on_batch_end", "on_epoch_begin", "on_epoch_end", "on_train_begin", "on_train_end", "set_model", "set_params"], "r": "r1.7", "t": "tf.keras.callbacks.TerminateOnNaN"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/constraints", "k": [], "r": "r1.7", "t": "tf.keras.constraints"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/constraints/Constraint", "k": ["__call__", "get_config"], "r": "r1.7", "t": "tf.keras.constraints.Constraint"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/constraints/MaxNorm", "k": ["__call__", "__init__", "get_config"], "r": "r1.7", "t": "tf.keras.constraints.MaxNorm"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/constraints/MinMaxNorm", "k": ["__call__", "__init__", "get_config"], "r": "r1.7", "t": "tf.keras.constraints.MinMaxNorm"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/constraints/NonNeg", "k": ["__call__", "get_config"], "r": "r1.7", "t": "tf.keras.constraints.NonNeg"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/constraints/UnitNorm", "k": ["__call__", "__init__", "get_config"], "r": "r1.7", "t": "tf.keras.constraints.UnitNorm"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/constraints/deserialize", "k": [], "r": "r1.7", "t": "tf.keras.constraints.deserialize"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/constraints/get", "k": [], "r": "r1.7", "t": "tf.keras.constraints.get"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/constraints/serialize", "k": [], "r": "r1.7", "t": "tf.keras.constraints.serialize"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/datasets", "k": [], "r": "r1.7", "t": "tf.keras.datasets"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/datasets/boston_housing", "k": [], "r": "r1.7", "t": "tf.keras.datasets.boston_housing"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/datasets/boston_housing/load_data", "k": [], "r": "r1.7", "t": "tf.keras.datasets.boston_housing.load_data"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/datasets/cifar10", "k": [], "r": "r1.7", "t": "tf.keras.datasets.cifar10"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/datasets/cifar10/load_data", "k": [], "r": "r1.7", "t": "tf.keras.datasets.cifar10.load_data"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/datasets/cifar100", "k": [], "r": "r1.7", "t": "tf.keras.datasets.cifar100"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/datasets/cifar100/load_data", "k": [], "r": "r1.7", "t": "tf.keras.datasets.cifar100.load_data"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/datasets/fashion_mnist", "k": [], "r": "r1.7", "t": "tf.keras.datasets.fashion_mnist"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/datasets/imdb", "k": [], "r": "r1.7", "t": "tf.keras.datasets.imdb"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/datasets/imdb/get_word_index", "k": [], "r": "r1.7", "t": "tf.keras.datasets.imdb.get_word_index"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/datasets/imdb/load_data", "k": [], "r": "r1.7", "t": "tf.keras.datasets.imdb.load_data"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/datasets/mnist", "k": [], "r": "r1.7", "t": "tf.keras.datasets.mnist"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/datasets/mnist/load_data", "k": [], "r": "r1.7", "t": "tf.keras.datasets.mnist.load_data"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/datasets/reuters", "k": [], "r": "r1.7", "t": "tf.keras.datasets.reuters"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/datasets/reuters/get_word_index", "k": [], "r": "r1.7", "t": "tf.keras.datasets.reuters.get_word_index"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/datasets/reuters/load_data", "k": [], "r": "r1.7", "t": "tf.keras.datasets.reuters.load_data"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/estimator", "k": [], "r": "r1.7", "t": "tf.keras.estimator"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/estimator/model_to_estimator", "k": [], "r": "r1.7", "t": "tf.keras.estimator.model_to_estimator"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/initializers", "k": [], "r": "r1.7", "t": "tf.keras.initializers"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/initializers/Initializer", "k": ["__call__", "from_config", "get_config"], "r": "r1.7", "t": "tf.keras.initializers.Initializer"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/initializers/deserialize", "k": [], "r": "r1.7", "t": "tf.keras.initializers.deserialize"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/initializers/get", "k": [], "r": "r1.7", "t": "tf.keras.initializers.get"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/initializers/glorot_normal", "k": [], "r": "r1.7", "t": "tf.keras.initializers.glorot_normal"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/initializers/glorot_uniform", "k": [], "r": "r1.7", "t": "tf.keras.initializers.glorot_uniform"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/initializers/he_normal", "k": [], "r": "r1.7", "t": "tf.keras.initializers.he_normal"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/initializers/he_uniform", "k": [], "r": "r1.7", "t": "tf.keras.initializers.he_uniform"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/initializers/lecun_normal", "k": [], "r": "r1.7", "t": "tf.keras.initializers.lecun_normal"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/initializers/lecun_uniform", "k": [], "r": "r1.7", "t": "tf.keras.initializers.lecun_uniform"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/initializers/serialize", "k": [], "r": "r1.7", "t": "tf.keras.initializers.serialize"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/layers", "k": [], "r": "r1.7", "t": "tf.keras.layers"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/layers/Activation", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.7", "t": "tf.keras.layers.Activation"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/layers/ActivityRegularization", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.7", "t": "tf.keras.layers.ActivityRegularization"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/layers/Add", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.7", "t": "tf.keras.layers.Add"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/layers/AlphaDropout", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.7", "t": "tf.keras.layers.AlphaDropout"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/layers/Average", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.7", "t": "tf.keras.layers.Average"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/layers/AveragePooling1D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.7", "t": "tf.keras.layers.AveragePooling1D"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/layers/AveragePooling2D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.7", "t": "tf.keras.layers.AveragePooling2D"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/layers/AveragePooling3D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.7", "t": "tf.keras.layers.AveragePooling3D"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/layers/BatchNormalization", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.7", "t": "tf.keras.layers.BatchNormalization"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/layers/Bidirectional", "k": ["activity_regularizer", "constraints", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "reset_states", "set_weights"], "r": "r1.7", "t": "tf.keras.layers.Bidirectional"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/layers/Concatenate", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.7", "t": "tf.keras.layers.Concatenate"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/layers/Conv1D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.7", "t": "tf.keras.layers.Conv1D"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/layers/Conv2D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.7", "t": "tf.keras.layers.Conv2D"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/layers/Conv2DTranspose", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.7", "t": "tf.keras.layers.Conv2DTranspose"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/layers/Conv3D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.7", "t": "tf.keras.layers.Conv3D"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/layers/Conv3DTranspose", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.7", "t": "tf.keras.layers.Conv3DTranspose"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/layers/ConvLSTM2D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_constants", "get_initial_state", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "input_conv", "preprocess_input", "recurrent_conv", "reset_states", "set_weights", "step"], "r": "r1.7", "t": "tf.keras.layers.ConvLSTM2D"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/layers/Cropping1D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.7", "t": "tf.keras.layers.Cropping1D"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/layers/Cropping2D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.7", "t": "tf.keras.layers.Cropping2D"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/layers/Cropping3D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.7", "t": "tf.keras.layers.Cropping3D"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/layers/Dense", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.7", "t": "tf.keras.layers.Dense"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/layers/Dot", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.7", "t": "tf.keras.layers.Dot"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/layers/Dropout", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.7", "t": "tf.keras.layers.Dropout"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/layers/ELU", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.7", "t": "tf.keras.layers.ELU"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/layers/Embedding", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.7", "t": "tf.keras.layers.Embedding"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/layers/Flatten", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.7", "t": "tf.keras.layers.Flatten"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/layers/GRU", "k": ["activation", "activity_regularizer", "bias_constraint", "bias_initializer", "bias_regularizer", "dropout", "dtype", "graph", "implementation", "input", "input_mask", "input_shape", "kernel_constraint", "kernel_initializer", "kernel_regularizer", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "recurrent_activation", "recurrent_constraint", "recurrent_dropout", "recurrent_initializer", "recurrent_regularizer", "scope_name", "states", "trainable_variables", "trainable_weights", "units", "updates", "use_bias", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_initial_state", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "reset_states", "set_weights"], "r": "r1.7", "t": "tf.keras.layers.GRU"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/layers/GRUCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.7", "t": "tf.keras.layers.GRUCell"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/layers/GaussianDropout", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.7", "t": "tf.keras.layers.GaussianDropout"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/layers/GaussianNoise", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.7", "t": "tf.keras.layers.GaussianNoise"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/layers/GlobalAveragePooling1D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.7", "t": "tf.keras.layers.GlobalAveragePooling1D"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/layers/GlobalAveragePooling2D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.7", "t": "tf.keras.layers.GlobalAveragePooling2D"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/layers/GlobalAveragePooling3D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.7", "t": "tf.keras.layers.GlobalAveragePooling3D"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/layers/GlobalMaxPool1D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.7", "t": "tf.keras.layers.GlobalMaxPool1D"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/layers/GlobalMaxPool2D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.7", "t": "tf.keras.layers.GlobalMaxPool2D"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/layers/GlobalMaxPool3D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.7", "t": "tf.keras.layers.GlobalMaxPool3D"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/layers/InputLayer", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.7", "t": "tf.keras.layers.InputLayer"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/layers/LSTM", "k": ["activation", "activity_regularizer", "bias_constraint", "bias_initializer", "bias_regularizer", "dropout", "dtype", "graph", "implementation", "input", "input_mask", "input_shape", "kernel_constraint", "kernel_initializer", "kernel_regularizer", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "recurrent_activation", "recurrent_constraint", "recurrent_dropout", "recurrent_initializer", "recurrent_regularizer", "scope_name", "states", "trainable_variables", "trainable_weights", "unit_forget_bias", "units", "updates", "use_bias", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_initial_state", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "reset_states", "set_weights"], "r": "r1.7", "t": "tf.keras.layers.LSTM"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/layers/LSTMCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.7", "t": "tf.keras.layers.LSTMCell"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/layers/Lambda", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.7", "t": "tf.keras.layers.Lambda"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/layers/Layer", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.7", "t": "tf.keras.layers.Layer"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/layers/LeakyReLU", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.7", "t": "tf.keras.layers.LeakyReLU"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/layers/LocallyConnected1D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.7", "t": "tf.keras.layers.LocallyConnected1D"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/layers/LocallyConnected2D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.7", "t": "tf.keras.layers.LocallyConnected2D"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/layers/Masking", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.7", "t": "tf.keras.layers.Masking"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/layers/MaxPool1D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.7", "t": "tf.keras.layers.MaxPool1D"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/layers/MaxPool2D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.7", "t": "tf.keras.layers.MaxPool2D"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/layers/MaxPool3D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.7", "t": "tf.keras.layers.MaxPool3D"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/layers/Maximum", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.7", "t": "tf.keras.layers.Maximum"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/layers/Multiply", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.7", "t": "tf.keras.layers.Multiply"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/layers/PReLU", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.7", "t": "tf.keras.layers.PReLU"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/layers/Permute", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.7", "t": "tf.keras.layers.Permute"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/layers/RNN", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "states", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_initial_state", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "reset_states", "set_weights"], "r": "r1.7", "t": "tf.keras.layers.RNN"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/layers/RepeatVector", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.7", "t": "tf.keras.layers.RepeatVector"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/layers/Reshape", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.7", "t": "tf.keras.layers.Reshape"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/layers/SeparableConv1D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.7", "t": "tf.keras.layers.SeparableConv1D"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/layers/SeparableConv2D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.7", "t": "tf.keras.layers.SeparableConv2D"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/layers/SimpleRNN", "k": ["activation", "activity_regularizer", "bias_constraint", "bias_initializer", "bias_regularizer", "dropout", "dtype", "graph", "input", "input_mask", "input_shape", "kernel_constraint", "kernel_initializer", "kernel_regularizer", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "recurrent_constraint", "recurrent_dropout", "recurrent_initializer", "recurrent_regularizer", "scope_name", "states", "trainable_variables", "trainable_weights", "units", "updates", "use_bias", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_initial_state", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "reset_states", "set_weights"], "r": "r1.7", "t": "tf.keras.layers.SimpleRNN"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/layers/SimpleRNNCell", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.7", "t": "tf.keras.layers.SimpleRNNCell"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/layers/Softmax", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.7", "t": "tf.keras.layers.Softmax"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/layers/SpatialDropout1D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.7", "t": "tf.keras.layers.SpatialDropout1D"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/layers/SpatialDropout2D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.7", "t": "tf.keras.layers.SpatialDropout2D"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/layers/SpatialDropout3D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.7", "t": "tf.keras.layers.SpatialDropout3D"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/layers/StackedRNNCells", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "state_size", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.7", "t": "tf.keras.layers.StackedRNNCells"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/layers/ThresholdedReLU", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.7", "t": "tf.keras.layers.ThresholdedReLU"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/layers/TimeDistributed", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.7", "t": "tf.keras.layers.TimeDistributed"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/layers/UpSampling1D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.7", "t": "tf.keras.layers.UpSampling1D"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/layers/UpSampling2D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.7", "t": "tf.keras.layers.UpSampling2D"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/layers/UpSampling3D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.7", "t": "tf.keras.layers.UpSampling3D"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/layers/Wrapper", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.7", "t": "tf.keras.layers.Wrapper"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/layers/ZeroPadding1D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.7", "t": "tf.keras.layers.ZeroPadding1D"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/layers/ZeroPadding2D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.7", "t": "tf.keras.layers.ZeroPadding2D"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/layers/ZeroPadding3D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_mask", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_mask", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "add_weight", "apply", "build", "call", "compute_mask", "compute_output_shape", "count_params", "from_config", "get_config", "get_input_at", "get_input_mask_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_mask_at", "get_output_shape_at", "get_updates_for", "get_weights", "set_weights"], "r": "r1.7", "t": "tf.keras.layers.ZeroPadding3D"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/layers/add", "k": [], "r": "r1.7", "t": "tf.keras.layers.add"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/layers/average", "k": [], "r": "r1.7", "t": "tf.keras.layers.average"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/layers/concatenate", "k": [], "r": "r1.7", "t": "tf.keras.layers.concatenate"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/layers/dot", "k": [], "r": "r1.7", "t": "tf.keras.layers.dot"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/layers/maximum", "k": [], "r": "r1.7", "t": "tf.keras.layers.maximum"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/layers/multiply", "k": [], "r": "r1.7", "t": "tf.keras.layers.multiply"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/losses", "k": [], "r": "r1.7", "t": "tf.keras.losses"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/losses/binary_crossentropy", "k": [], "r": "r1.7", "t": "tf.keras.losses.binary_crossentropy"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/losses/categorical_crossentropy", "k": [], "r": "r1.7", "t": "tf.keras.losses.categorical_crossentropy"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/losses/categorical_hinge", "k": [], "r": "r1.7", "t": "tf.keras.losses.categorical_hinge"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/losses/cosine_proximity", "k": [], "r": "r1.7", "t": "tf.keras.losses.cosine_proximity"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/losses/deserialize", "k": [], "r": "r1.7", "t": "tf.keras.losses.deserialize"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/losses/get", "k": [], "r": "r1.7", "t": "tf.keras.losses.get"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/losses/hinge", "k": [], "r": "r1.7", "t": "tf.keras.losses.hinge"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/losses/kullback_leibler_divergence", "k": [], "r": "r1.7", "t": "tf.keras.losses.kullback_leibler_divergence"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/losses/logcosh", "k": [], "r": "r1.7", "t": "tf.keras.losses.logcosh"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/losses/mean_absolute_error", "k": [], "r": "r1.7", "t": "tf.keras.losses.mean_absolute_error"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/losses/mean_absolute_percentage_error", "k": [], "r": "r1.7", "t": "tf.keras.losses.mean_absolute_percentage_error"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/losses/mean_squared_error", "k": [], "r": "r1.7", "t": "tf.keras.losses.mean_squared_error"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/losses/mean_squared_logarithmic_error", "k": [], "r": "r1.7", "t": "tf.keras.losses.mean_squared_logarithmic_error"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/losses/poisson", "k": [], "r": "r1.7", "t": "tf.keras.losses.poisson"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/losses/serialize", "k": [], "r": "r1.7", "t": "tf.keras.losses.serialize"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/losses/sparse_categorical_crossentropy", "k": [], "r": "r1.7", "t": "tf.keras.losses.sparse_categorical_crossentropy"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/losses/squared_hinge", "k": [], "r": "r1.7", "t": "tf.keras.losses.squared_hinge"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/metrics", "k": [], "r": "r1.7", "t": "tf.keras.metrics"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/metrics/binary_accuracy", "k": [], "r": "r1.7", "t": "tf.keras.metrics.binary_accuracy"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/metrics/categorical_accuracy", "k": [], "r": "r1.7", "t": "tf.keras.metrics.categorical_accuracy"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/metrics/deserialize", "k": [], "r": "r1.7", "t": "tf.keras.metrics.deserialize"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/metrics/get", "k": [], "r": "r1.7", "t": "tf.keras.metrics.get"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/metrics/serialize", "k": [], "r": "r1.7", "t": "tf.keras.metrics.serialize"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/metrics/sparse_top_k_categorical_accuracy", "k": [], "r": "r1.7", "t": "tf.keras.metrics.sparse_top_k_categorical_accuracy"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/metrics/top_k_categorical_accuracy", "k": [], "r": "r1.7", "t": "tf.keras.metrics.top_k_categorical_accuracy"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/models", "k": [], "r": "r1.7", "t": "tf.keras.models"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/models/load_model", "k": [], "r": "r1.7", "t": "tf.keras.models.load_model"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/models/model_from_config", "k": [], "r": "r1.7", "t": "tf.keras.models.model_from_config"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/models/model_from_json", "k": [], "r": "r1.7", "t": "tf.keras.models.model_from_json"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/models/model_from_yaml", "k": [], "r": "r1.7", "t": "tf.keras.models.model_from_yaml"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/models/save_model", "k": [], "r": "r1.7", "t": "tf.keras.models.save_model"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/optimizers", "k": [], "r": "r1.7", "t": "tf.keras.optimizers"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/optimizers/Adadelta", "k": ["__init__", "from_config", "get_config", "get_gradients", "get_updates", "get_weights", "set_weights"], "r": "r1.7", "t": "tf.keras.optimizers.Adadelta"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/optimizers/Adagrad", "k": ["__init__", "from_config", "get_config", "get_gradients", "get_updates", "get_weights", "set_weights"], "r": "r1.7", "t": "tf.keras.optimizers.Adagrad"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/optimizers/Adam", "k": ["__init__", "from_config", "get_config", "get_gradients", "get_updates", "get_weights", "set_weights"], "r": "r1.7", "t": "tf.keras.optimizers.Adam"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/optimizers/Adamax", "k": ["__init__", "from_config", "get_config", "get_gradients", "get_updates", "get_weights", "set_weights"], "r": "r1.7", "t": "tf.keras.optimizers.Adamax"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/optimizers/Nadam", "k": ["__init__", "from_config", "get_config", "get_gradients", "get_updates", "get_weights", "set_weights"], "r": "r1.7", "t": "tf.keras.optimizers.Nadam"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/optimizers/Optimizer", "k": ["__init__", "from_config", "get_config", "get_gradients", "get_updates", "get_weights", "set_weights"], "r": "r1.7", "t": "tf.keras.optimizers.Optimizer"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/optimizers/RMSprop", "k": ["__init__", "from_config", "get_config", "get_gradients", "get_updates", "get_weights", "set_weights"], "r": "r1.7", "t": "tf.keras.optimizers.RMSprop"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/optimizers/SGD", "k": ["__init__", "from_config", "get_config", "get_gradients", "get_updates", "get_weights", "set_weights"], "r": "r1.7", "t": "tf.keras.optimizers.SGD"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/optimizers/deserialize", "k": [], "r": "r1.7", "t": "tf.keras.optimizers.deserialize"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/optimizers/get", "k": [], "r": "r1.7", "t": "tf.keras.optimizers.get"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/optimizers/serialize", "k": [], "r": "r1.7", "t": "tf.keras.optimizers.serialize"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/preprocessing", "k": [], "r": "r1.7", "t": "tf.keras.preprocessing"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/preprocessing/image", "k": [], "r": "r1.7", "t": "tf.keras.preprocessing.image"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/preprocessing/image/DirectoryIterator", "k": ["__getitem__", "__init__", "__iter__", "__len__", "__next__", "next", "on_epoch_end", "reset"], "r": "r1.7", "t": "tf.keras.preprocessing.image.DirectoryIterator"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/preprocessing/image/ImageDataGenerator", "k": ["__init__", "fit", "flow", "flow_from_directory", "random_transform", "standardize"], "r": "r1.7", "t": "tf.keras.preprocessing.image.ImageDataGenerator"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/preprocessing/image/Iterator", "k": ["__getitem__", "__init__", "__iter__", "__len__", "__next__", "on_epoch_end", "reset"], "r": "r1.7", "t": "tf.keras.preprocessing.image.Iterator"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/preprocessing/image/NumpyArrayIterator", "k": ["__getitem__", "__init__", "__iter__", "__len__", "__next__", "next", "on_epoch_end", "reset"], "r": "r1.7", "t": "tf.keras.preprocessing.image.NumpyArrayIterator"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/preprocessing/image/apply_transform", "k": [], "r": "r1.7", "t": "tf.keras.preprocessing.image.apply_transform"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/preprocessing/image/array_to_img", "k": [], "r": "r1.7", "t": "tf.keras.preprocessing.image.array_to_img"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/preprocessing/image/flip_axis", "k": [], "r": "r1.7", "t": "tf.keras.preprocessing.image.flip_axis"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/preprocessing/image/img_to_array", "k": [], "r": "r1.7", "t": "tf.keras.preprocessing.image.img_to_array"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/preprocessing/image/load_img", "k": [], "r": "r1.7", "t": "tf.keras.preprocessing.image.load_img"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/preprocessing/image/random_channel_shift", "k": [], "r": "r1.7", "t": "tf.keras.preprocessing.image.random_channel_shift"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/preprocessing/image/random_rotation", "k": [], "r": "r1.7", "t": "tf.keras.preprocessing.image.random_rotation"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/preprocessing/image/random_shear", "k": [], "r": "r1.7", "t": "tf.keras.preprocessing.image.random_shear"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/preprocessing/image/random_shift", "k": [], "r": "r1.7", "t": "tf.keras.preprocessing.image.random_shift"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/preprocessing/image/random_zoom", "k": [], "r": "r1.7", "t": "tf.keras.preprocessing.image.random_zoom"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/preprocessing/sequence", "k": [], "r": "r1.7", "t": "tf.keras.preprocessing.sequence"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/preprocessing/sequence/make_sampling_table", "k": [], "r": "r1.7", "t": "tf.keras.preprocessing.sequence.make_sampling_table"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/preprocessing/sequence/pad_sequences", "k": [], "r": "r1.7", "t": "tf.keras.preprocessing.sequence.pad_sequences"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/preprocessing/sequence/skipgrams", "k": [], "r": "r1.7", "t": "tf.keras.preprocessing.sequence.skipgrams"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/preprocessing/text", "k": [], "r": "r1.7", "t": "tf.keras.preprocessing.text"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/preprocessing/text/Tokenizer", "k": ["__init__", "fit_on_sequences", "fit_on_texts", "sequences_to_matrix", "texts_to_matrix", "texts_to_sequences", "texts_to_sequences_generator"], "r": "r1.7", "t": "tf.keras.preprocessing.text.Tokenizer"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/preprocessing/text/one_hot", "k": [], "r": "r1.7", "t": "tf.keras.preprocessing.text.one_hot"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/preprocessing/text/text_to_word_sequence", "k": [], "r": "r1.7", "t": "tf.keras.preprocessing.text.text_to_word_sequence"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/regularizers", "k": [], "r": "r1.7", "t": "tf.keras.regularizers"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/regularizers/L1L2", "k": ["__call__", "__init__", "from_config", "get_config"], "r": "r1.7", "t": "tf.keras.regularizers.L1L2"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/regularizers/Regularizer", "k": ["__call__", "from_config"], "r": "r1.7", "t": "tf.keras.regularizers.Regularizer"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/regularizers/deserialize", "k": [], "r": "r1.7", "t": "tf.keras.regularizers.deserialize"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/regularizers/get", "k": [], "r": "r1.7", "t": "tf.keras.regularizers.get"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/regularizers/l1", "k": [], "r": "r1.7", "t": "tf.keras.regularizers.l1"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/regularizers/l1_l2", "k": [], "r": "r1.7", "t": "tf.keras.regularizers.l1_l2"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/regularizers/l2", "k": [], "r": "r1.7", "t": "tf.keras.regularizers.l2"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/regularizers/serialize", "k": [], "r": "r1.7", "t": "tf.keras.regularizers.serialize"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/utils", "k": [], "r": "r1.7", "t": "tf.keras.utils"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/utils/CustomObjectScope", "k": ["__enter__", "__exit__", "__init__"], "r": "r1.7", "t": "tf.keras.utils.CustomObjectScope"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/utils/GeneratorEnqueuer", "k": ["__init__", "get", "is_running", "start", "stop"], "r": "r1.7", "t": "tf.keras.utils.GeneratorEnqueuer"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/utils/HDF5Matrix", "k": ["dtype", "ndim", "shape", "size", "__getitem__", "__init__", "__len__", "refs"], "r": "r1.7", "t": "tf.keras.utils.HDF5Matrix"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/utils/Progbar", "k": ["__init__", "add", "update"], "r": "r1.7", "t": "tf.keras.utils.Progbar"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/utils/Sequence", "k": ["__getitem__", "__len__", "on_epoch_end"], "r": "r1.7", "t": "tf.keras.utils.Sequence"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/utils/SequenceEnqueuer", "k": ["get", "is_running", "start", "stop"], "r": "r1.7", "t": "tf.keras.utils.SequenceEnqueuer"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/utils/convert_all_kernels_in_model", "k": [], "r": "r1.7", "t": "tf.keras.utils.convert_all_kernels_in_model"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/utils/custom_object_scope", "k": [], "r": "r1.7", "t": "tf.keras.utils.custom_object_scope"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/utils/deserialize_keras_object", "k": [], "r": "r1.7", "t": "tf.keras.utils.deserialize_keras_object"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/utils/get_custom_objects", "k": [], "r": "r1.7", "t": "tf.keras.utils.get_custom_objects"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/utils/get_file", "k": [], "r": "r1.7", "t": "tf.keras.utils.get_file"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/utils/multi_gpu_model", "k": [], "r": "r1.7", "t": "tf.keras.utils.multi_gpu_model"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/utils/normalize", "k": [], "r": "r1.7", "t": "tf.keras.utils.normalize"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/utils/plot_model", "k": [], "r": "r1.7", "t": "tf.keras.utils.plot_model"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/utils/serialize_keras_object", "k": [], "r": "r1.7", "t": "tf.keras.utils.serialize_keras_object"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/utils/to_categorical", "k": [], "r": "r1.7", "t": "tf.keras.utils.to_categorical"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/wrappers", "k": [], "r": "r1.7", "t": "tf.keras.wrappers"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/wrappers/scikit_learn", "k": [], "r": "r1.7", "t": "tf.keras.wrappers.scikit_learn"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/wrappers/scikit_learn/KerasClassifier", "k": ["__init__", "check_params", "filter_sk_params", "fit", "get_params", "predict", "predict_proba", "score", "set_params"], "r": "r1.7", "t": "tf.keras.wrappers.scikit_learn.KerasClassifier"}, {"p": "/versions/r1.7/api_docs/python/tf/keras/wrappers/scikit_learn/KerasRegressor", "k": ["__init__", "check_params", "filter_sk_params", "fit", "get_params", "predict", "score", "set_params"], "r": "r1.7", "t": "tf.keras.wrappers.scikit_learn.KerasRegressor"}, {"p": "/versions/r1.7/api_docs/python/tf/layers", "k": [], "r": "r1.7", "t": "tf.layers"}, {"p": "/versions/r1.7/api_docs/python/tf/layers/AveragePooling1D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "r1.7", "t": "tf.layers.AveragePooling1D"}, {"p": "/versions/r1.7/api_docs/python/tf/layers/AveragePooling2D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "r1.7", "t": "tf.layers.AveragePooling2D"}, {"p": "/versions/r1.7/api_docs/python/tf/layers/AveragePooling3D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "r1.7", "t": "tf.layers.AveragePooling3D"}, {"p": "/versions/r1.7/api_docs/python/tf/layers/BatchNormalization", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "r1.7", "t": "tf.layers.BatchNormalization"}, {"p": "/versions/r1.7/api_docs/python/tf/layers/Conv1D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "r1.7", "t": "tf.layers.Conv1D"}, {"p": "/versions/r1.7/api_docs/python/tf/layers/Conv2D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "r1.7", "t": "tf.layers.Conv2D"}, {"p": "/versions/r1.7/api_docs/python/tf/layers/Conv2DTranspose", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "r1.7", "t": "tf.layers.Conv2DTranspose"}, {"p": "/versions/r1.7/api_docs/python/tf/layers/Conv3D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "r1.7", "t": "tf.layers.Conv3D"}, {"p": "/versions/r1.7/api_docs/python/tf/layers/Conv3DTranspose", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "r1.7", "t": "tf.layers.Conv3DTranspose"}, {"p": "/versions/r1.7/api_docs/python/tf/layers/Dense", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "r1.7", "t": "tf.layers.Dense"}, {"p": "/versions/r1.7/api_docs/python/tf/layers/Dropout", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "r1.7", "t": "tf.layers.Dropout"}, {"p": "/versions/r1.7/api_docs/python/tf/layers/Flatten", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "r1.7", "t": "tf.layers.Flatten"}, {"p": "/versions/r1.7/api_docs/python/tf/layers/InputSpec", "k": ["__init__"], "r": "r1.7", "t": "tf.layers.InputSpec"}, {"p": "/versions/r1.7/api_docs/python/tf/layers/Layer", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "r1.7", "t": "tf.layers.Layer"}, {"p": "/versions/r1.7/api_docs/python/tf/layers/MaxPooling1D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "r1.7", "t": "tf.layers.MaxPooling1D"}, {"p": "/versions/r1.7/api_docs/python/tf/layers/MaxPooling2D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "r1.7", "t": "tf.layers.MaxPooling2D"}, {"p": "/versions/r1.7/api_docs/python/tf/layers/MaxPooling3D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "r1.7", "t": "tf.layers.MaxPooling3D"}, {"p": "/versions/r1.7/api_docs/python/tf/layers/SeparableConv1D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "r1.7", "t": "tf.layers.SeparableConv1D"}, {"p": "/versions/r1.7/api_docs/python/tf/layers/SeparableConv2D", "k": ["activity_regularizer", "dtype", "graph", "input", "input_shape", "losses", "name", "non_trainable_variables", "non_trainable_weights", "output", "output_shape", "scope_name", "trainable_variables", "trainable_weights", "updates", "variables", "weights", "__call__", "__deepcopy__", "__init__", "add_loss", "add_update", "add_variable", "apply", "build", "call", "compute_output_shape", "count_params", "get_input_at", "get_input_shape_at", "get_losses_for", "get_output_at", "get_output_shape_at", "get_updates_for"], "r": "r1.7", "t": "tf.layers.SeparableConv2D"}, {"p": "/versions/r1.7/api_docs/python/tf/layers/average_pooling1d", "k": [], "r": "r1.7", "t": "tf.layers.average_pooling1d"}, {"p": "/versions/r1.7/api_docs/python/tf/layers/average_pooling2d", "k": [], "r": "r1.7", "t": "tf.layers.average_pooling2d"}, {"p": "/versions/r1.7/api_docs/python/tf/layers/average_pooling3d", "k": [], "r": "r1.7", "t": "tf.layers.average_pooling3d"}, {"p": "/versions/r1.7/api_docs/python/tf/layers/batch_normalization", "k": [], "r": "r1.7", "t": "tf.layers.batch_normalization"}, {"p": "/versions/r1.7/api_docs/python/tf/layers/conv1d", "k": [], "r": "r1.7", "t": "tf.layers.conv1d"}, {"p": "/versions/r1.7/api_docs/python/tf/layers/conv2d", "k": [], "r": "r1.7", "t": "tf.layers.conv2d"}, {"p": "/versions/r1.7/api_docs/python/tf/layers/conv2d_transpose", "k": [], "r": "r1.7", "t": "tf.layers.conv2d_transpose"}, {"p": "/versions/r1.7/api_docs/python/tf/layers/conv3d", "k": [], "r": "r1.7", "t": "tf.layers.conv3d"}, {"p": "/versions/r1.7/api_docs/python/tf/layers/conv3d_transpose", "k": [], "r": "r1.7", "t": "tf.layers.conv3d_transpose"}, {"p": "/versions/r1.7/api_docs/python/tf/layers/dense", "k": [], "r": "r1.7", "t": "tf.layers.dense"}, {"p": "/versions/r1.7/api_docs/python/tf/layers/dropout", "k": [], "r": "r1.7", "t": "tf.layers.dropout"}, {"p": "/versions/r1.7/api_docs/python/tf/layers/flatten", "k": [], "r": "r1.7", "t": "tf.layers.flatten"}, {"p": "/versions/r1.7/api_docs/python/tf/layers/max_pooling1d", "k": [], "r": "r1.7", "t": "tf.layers.max_pooling1d"}, {"p": "/versions/r1.7/api_docs/python/tf/layers/max_pooling2d", "k": [], "r": "r1.7", "t": "tf.layers.max_pooling2d"}, {"p": "/versions/r1.7/api_docs/python/tf/layers/max_pooling3d", "k": [], "r": "r1.7", "t": "tf.layers.max_pooling3d"}, {"p": "/versions/r1.7/api_docs/python/tf/layers/separable_conv1d", "k": [], "r": "r1.7", "t": "tf.layers.separable_conv1d"}, {"p": "/versions/r1.7/api_docs/python/tf/layers/separable_conv2d", "k": [], "r": "r1.7", "t": "tf.layers.separable_conv2d"}, {"p": "/versions/r1.7/api_docs/python/tf/lbeta", "k": [], "r": "r1.7", "t": "tf.lbeta"}, {"p": "/versions/r1.7/api_docs/python/tf/less", "k": [], "r": "r1.7", "t": "tf.less"}, {"p": "/versions/r1.7/api_docs/python/tf/less_equal", "k": [], "r": "r1.7", "t": "tf.less_equal"}, {"p": "/versions/r1.7/api_docs/python/tf/lgamma", "k": [], "r": "r1.7", "t": "tf.lgamma"}, {"p": "/versions/r1.7/api_docs/python/tf/lin_space", "k": [], "r": "r1.7", "t": "tf.lin_space"}, {"p": "/versions/r1.7/api_docs/python/tf/linalg", "k": [], "r": "r1.7", "t": "tf.linalg"}, {"p": "/versions/r1.7/api_docs/python/tf/linalg/LinearOperator", "k": ["batch_shape", "domain_dimension", "dtype", "graph_parents", "is_non_singular", "is_positive_definite", "is_self_adjoint", "is_square", "name", "range_dimension", "shape", "tensor_rank", "__init__", "add_to_tensor", "assert_non_singular", "assert_positive_definite", "assert_self_adjoint", "batch_shape_tensor", "determinant", "diag_part", "domain_dimension_tensor", "log_abs_determinant", "matmul", "matvec", "range_dimension_tensor", "shape_tensor", "solve", "solvevec", "tensor_rank_tensor", "to_dense", "trace"], "r": "r1.7", "t": "tf.linalg.LinearOperator"}, {"p": "/versions/r1.7/api_docs/python/tf/linalg/LinearOperatorComposition", "k": ["batch_shape", "domain_dimension", "dtype", "graph_parents", "is_non_singular", "is_positive_definite", "is_self_adjoint", "is_square", "name", "operators", "range_dimension", "shape", "tensor_rank", "__init__", "add_to_tensor", "assert_non_singular", "assert_positive_definite", "assert_self_adjoint", "batch_shape_tensor", "determinant", "diag_part", "domain_dimension_tensor", "log_abs_determinant", "matmul", "matvec", "range_dimension_tensor", "shape_tensor", "solve", "solvevec", "tensor_rank_tensor", "to_dense", "trace"], "r": "r1.7", "t": "tf.linalg.LinearOperatorComposition"}, {"p": "/versions/r1.7/api_docs/python/tf/linalg/LinearOperatorDiag", "k": ["batch_shape", "diag", "domain_dimension", "dtype", "graph_parents", "is_non_singular", "is_positive_definite", "is_self_adjoint", "is_square", "name", "range_dimension", "shape", "tensor_rank", "__init__", "add_to_tensor", "assert_non_singular", "assert_positive_definite", "assert_self_adjoint", "batch_shape_tensor", "determinant", "diag_part", "domain_dimension_tensor", "log_abs_determinant", "matmul", "matvec", "range_dimension_tensor", "shape_tensor", "solve", "solvevec", "tensor_rank_tensor", "to_dense", "trace"], "r": "r1.7", "t": "tf.linalg.LinearOperatorDiag"}, {"p": "/versions/r1.7/api_docs/python/tf/linalg/LinearOperatorFullMatrix", "k": ["batch_shape", "domain_dimension", "dtype", "graph_parents", "is_non_singular", "is_positive_definite", "is_self_adjoint", "is_square", "name", "range_dimension", "shape", "tensor_rank", "__init__", "add_to_tensor", "assert_non_singular", "assert_positive_definite", "assert_self_adjoint", "batch_shape_tensor", "determinant", "diag_part", "domain_dimension_tensor", "log_abs_determinant", "matmul", "matvec", "range_dimension_tensor", "shape_tensor", "solve", "solvevec", "tensor_rank_tensor", "to_dense", "trace"], "r": "r1.7", "t": "tf.linalg.LinearOperatorFullMatrix"}, {"p": "/versions/r1.7/api_docs/python/tf/linalg/LinearOperatorIdentity", "k": ["batch_shape", "domain_dimension", "dtype", "graph_parents", "is_non_singular", "is_positive_definite", "is_self_adjoint", "is_square", "name", "range_dimension", "shape", "tensor_rank", "__init__", "add_to_tensor", "assert_non_singular", "assert_positive_definite", "assert_self_adjoint", "batch_shape_tensor", "determinant", "diag_part", "domain_dimension_tensor", "log_abs_determinant", "matmul", "matvec", "range_dimension_tensor", "shape_tensor", "solve", "solvevec", "tensor_rank_tensor", "to_dense", "trace"], "r": "r1.7", "t": "tf.linalg.LinearOperatorIdentity"}, {"p": "/versions/r1.7/api_docs/python/tf/linalg/LinearOperatorLowRankUpdate", "k": ["base_operator", "batch_shape", "diag_operator", "diag_update", "domain_dimension", "dtype", "graph_parents", "is_diag_update_positive", "is_non_singular", "is_positive_definite", "is_self_adjoint", "is_square", "name", "range_dimension", "shape", "tensor_rank", "u", "v", "__init__", "add_to_tensor", "assert_non_singular", "assert_positive_definite", "assert_self_adjoint", "batch_shape_tensor", "determinant", "diag_part", "domain_dimension_tensor", "log_abs_determinant", "matmul", "matvec", "range_dimension_tensor", "shape_tensor", "solve", "solvevec", "tensor_rank_tensor", "to_dense", "trace"], "r": "r1.7", "t": "tf.linalg.LinearOperatorLowRankUpdate"}, {"p": "/versions/r1.7/api_docs/python/tf/linalg/LinearOperatorLowerTriangular", "k": ["batch_shape", "domain_dimension", "dtype", "graph_parents", "is_non_singular", "is_positive_definite", "is_self_adjoint", "is_square", "name", "range_dimension", "shape", "tensor_rank", "__init__", "add_to_tensor", "assert_non_singular", "assert_positive_definite", "assert_self_adjoint", "batch_shape_tensor", "determinant", "diag_part", "domain_dimension_tensor", "log_abs_determinant", "matmul", "matvec", "range_dimension_tensor", "shape_tensor", "solve", "solvevec", "tensor_rank_tensor", "to_dense", "trace"], "r": "r1.7", "t": "tf.linalg.LinearOperatorLowerTriangular"}, {"p": "/versions/r1.7/api_docs/python/tf/linalg/LinearOperatorScaledIdentity", "k": ["batch_shape", "domain_dimension", "dtype", "graph_parents", "is_non_singular", "is_positive_definite", "is_self_adjoint", "is_square", "multiplier", "name", "range_dimension", "shape", "tensor_rank", "__init__", "add_to_tensor", "assert_non_singular", "assert_positive_definite", "assert_self_adjoint", "batch_shape_tensor", "determinant", "diag_part", "domain_dimension_tensor", "log_abs_determinant", "matmul", "matvec", "range_dimension_tensor", "shape_tensor", "solve", "solvevec", "tensor_rank_tensor", "to_dense", "trace"], "r": "r1.7", "t": "tf.linalg.LinearOperatorScaledIdentity"}, {"p": "/versions/r1.7/api_docs/python/tf/linalg/adjoint", "k": [], "r": "r1.7", "t": "tf.linalg.adjoint"}, {"p": "/versions/r1.7/api_docs/python/tf/linalg/expm", "k": [], "r": "r1.7", "t": "tf.linalg.expm"}, {"p": "/versions/r1.7/api_docs/python/tf/linalg/logdet", "k": [], "r": "r1.7", "t": "tf.linalg.logdet"}, {"p": "/versions/r1.7/api_docs/python/tf/linalg/logm", "k": [], "r": "r1.7", "t": "tf.linalg.logm"}, {"p": "/versions/r1.7/api_docs/python/tf/linalg/slogdet", "k": [], "r": "r1.7", "t": "tf.linalg.slogdet"}, {"p": "/versions/r1.7/api_docs/python/tf/load_file_system_library", "k": [], "r": "r1.7", "t": "tf.load_file_system_library"}, {"p": "/versions/r1.7/api_docs/python/tf/load_op_library", "k": [], "r": "r1.7", "t": "tf.load_op_library"}, {"p": "/versions/r1.7/api_docs/python/tf/local_variables", "k": [], "r": "r1.7", "t": "tf.local_variables"}, {"p": "/versions/r1.7/api_docs/python/tf/local_variables_initializer", "k": [], "r": "r1.7", "t": "tf.local_variables_initializer"}, {"p": "/versions/r1.7/api_docs/python/tf/log", "k": [], "r": "r1.7", "t": "tf.log"}, {"p": "/versions/r1.7/api_docs/python/tf/log1p", "k": [], "r": "r1.7", "t": "tf.log1p"}, {"p": "/versions/r1.7/api_docs/python/tf/log_sigmoid", "k": [], "r": "r1.7", "t": "tf.log_sigmoid"}, {"p": "/versions/r1.7/api_docs/python/tf/logging", "k": ["DEBUG", "ERROR", "FATAL", "INFO", "WARN"], "r": "r1.7", "t": "tf.logging"}, {"p": "/versions/r1.7/api_docs/python/tf/logging/TaskLevelStatusMessage", "k": [], "r": "r1.7", "t": "tf.logging.TaskLevelStatusMessage"}, {"p": "/versions/r1.7/api_docs/python/tf/logging/debug", "k": [], "r": "r1.7", "t": "tf.logging.debug"}, {"p": "/versions/r1.7/api_docs/python/tf/logging/error", "k": [], "r": "r1.7", "t": "tf.logging.error"}, {"p": "/versions/r1.7/api_docs/python/tf/logging/fatal", "k": [], "r": "r1.7", "t": "tf.logging.fatal"}, {"p": "/versions/r1.7/api_docs/python/tf/logging/flush", "k": [], "r": "r1.7", "t": "tf.logging.flush"}, {"p": "/versions/r1.7/api_docs/python/tf/logging/get_verbosity", "k": [], "r": "r1.7", "t": "tf.logging.get_verbosity"}, {"p": "/versions/r1.7/api_docs/python/tf/logging/info", "k": [], "r": "r1.7", "t": "tf.logging.info"}, {"p": "/versions/r1.7/api_docs/python/tf/logging/log", "k": [], "r": "r1.7", "t": "tf.logging.log"}, {"p": "/versions/r1.7/api_docs/python/tf/logging/log_every_n", "k": [], "r": "r1.7", "t": "tf.logging.log_every_n"}, {"p": "/versions/r1.7/api_docs/python/tf/logging/log_first_n", "k": [], "r": "r1.7", "t": "tf.logging.log_first_n"}, {"p": "/versions/r1.7/api_docs/python/tf/logging/log_if", "k": [], "r": "r1.7", "t": "tf.logging.log_if"}, {"p": "/versions/r1.7/api_docs/python/tf/logging/set_verbosity", "k": [], "r": "r1.7", "t": "tf.logging.set_verbosity"}, {"p": "/versions/r1.7/api_docs/python/tf/logging/vlog", "k": [], "r": "r1.7", "t": "tf.logging.vlog"}, {"p": "/versions/r1.7/api_docs/python/tf/logging/warn", "k": [], "r": "r1.7", "t": "tf.logging.warn"}, {"p": "/versions/r1.7/api_docs/python/tf/logging/warning", "k": [], "r": "r1.7", "t": "tf.logging.warning"}, {"p": "/versions/r1.7/api_docs/python/tf/logical_and", "k": [], "r": "r1.7", "t": "tf.logical_and"}, {"p": "/versions/r1.7/api_docs/python/tf/logical_not", "k": [], "r": "r1.7", "t": "tf.logical_not"}, {"p": "/versions/r1.7/api_docs/python/tf/logical_or", "k": [], "r": "r1.7", "t": "tf.logical_or"}, {"p": "/versions/r1.7/api_docs/python/tf/logical_xor", "k": [], "r": "r1.7", "t": "tf.logical_xor"}, {"p": "/versions/r1.7/api_docs/python/tf/losses", "k": [], "r": "r1.7", "t": "tf.losses"}, {"p": "/versions/r1.7/api_docs/python/tf/losses/Reduction", "k": ["all", "validate", "MEAN", "NONE", "SUM", "SUM_BY_NONZERO_WEIGHTS", "SUM_OVER_BATCH_SIZE", "SUM_OVER_NONZERO_WEIGHTS"], "r": "r1.7", "t": "tf.losses.Reduction"}, {"p": "/versions/r1.7/api_docs/python/tf/losses/absolute_difference", "k": [], "r": "r1.7", "t": "tf.losses.absolute_difference"}, {"p": "/versions/r1.7/api_docs/python/tf/losses/add_loss", "k": [], "r": "r1.7", "t": "tf.losses.add_loss"}, {"p": "/versions/r1.7/api_docs/python/tf/losses/compute_weighted_loss", "k": [], "r": "r1.7", "t": "tf.losses.compute_weighted_loss"}, {"p": "/versions/r1.7/api_docs/python/tf/losses/cosine_distance", "k": [], "r": "r1.7", "t": "tf.losses.cosine_distance"}, {"p": "/versions/r1.7/api_docs/python/tf/losses/get_losses", "k": [], "r": "r1.7", "t": "tf.losses.get_losses"}, {"p": "/versions/r1.7/api_docs/python/tf/losses/get_regularization_loss", "k": [], "r": "r1.7", "t": "tf.losses.get_regularization_loss"}, {"p": "/versions/r1.7/api_docs/python/tf/losses/get_regularization_losses", "k": [], "r": "r1.7", "t": "tf.losses.get_regularization_losses"}, {"p": "/versions/r1.7/api_docs/python/tf/losses/get_total_loss", "k": [], "r": "r1.7", "t": "tf.losses.get_total_loss"}, {"p": "/versions/r1.7/api_docs/python/tf/losses/hinge_loss", "k": [], "r": "r1.7", "t": "tf.losses.hinge_loss"}, {"p": "/versions/r1.7/api_docs/python/tf/losses/huber_loss", "k": [], "r": "r1.7", "t": "tf.losses.huber_loss"}, {"p": "/versions/r1.7/api_docs/python/tf/losses/log_loss", "k": [], "r": "r1.7", "t": "tf.losses.log_loss"}, {"p": "/versions/r1.7/api_docs/python/tf/losses/mean_pairwise_squared_error", "k": [], "r": "r1.7", "t": "tf.losses.mean_pairwise_squared_error"}, {"p": "/versions/r1.7/api_docs/python/tf/losses/mean_squared_error", "k": [], "r": "r1.7", "t": "tf.losses.mean_squared_error"}, {"p": "/versions/r1.7/api_docs/python/tf/losses/sigmoid_cross_entropy", "k": [], "r": "r1.7", "t": "tf.losses.sigmoid_cross_entropy"}, {"p": "/versions/r1.7/api_docs/python/tf/losses/softmax_cross_entropy", "k": [], "r": "r1.7", "t": "tf.losses.softmax_cross_entropy"}, {"p": "/versions/r1.7/api_docs/python/tf/losses/sparse_softmax_cross_entropy", "k": [], "r": "r1.7", "t": "tf.losses.sparse_softmax_cross_entropy"}, {"p": "/versions/r1.7/api_docs/python/tf/make_ndarray", "k": [], "r": "r1.7", "t": "tf.make_ndarray"}, {"p": "/versions/r1.7/api_docs/python/tf/make_template", "k": [], "r": "r1.7", "t": "tf.make_template"}, {"p": "/versions/r1.7/api_docs/python/tf/make_tensor_proto", "k": [], "r": "r1.7", "t": "tf.make_tensor_proto"}, {"p": "/versions/r1.7/api_docs/python/tf/manip", "k": [], "r": "r1.7", "t": "tf.manip"}, {"p": "/versions/r1.7/api_docs/python/tf/manip/roll", "k": [], "r": "r1.7", "t": "tf.manip.roll"}, {"p": "/versions/r1.7/api_docs/python/tf/map_fn", "k": [], "r": "r1.7", "t": "tf.map_fn"}, {"p": "/versions/r1.7/api_docs/python/tf/matching_files", "k": [], "r": "r1.7", "t": "tf.matching_files"}, {"p": "/versions/r1.7/api_docs/python/tf/matmul", "k": [], "r": "r1.7", "t": "tf.matmul"}, {"p": "/versions/r1.7/api_docs/python/tf/matrix_band_part", "k": [], "r": "r1.7", "t": "tf.matrix_band_part"}, {"p": "/versions/r1.7/api_docs/python/tf/matrix_determinant", "k": [], "r": "r1.7", "t": "tf.matrix_determinant"}, {"p": "/versions/r1.7/api_docs/python/tf/matrix_diag", "k": [], "r": "r1.7", "t": "tf.matrix_diag"}, {"p": "/versions/r1.7/api_docs/python/tf/matrix_diag_part", "k": [], "r": "r1.7", "t": "tf.matrix_diag_part"}, {"p": "/versions/r1.7/api_docs/python/tf/matrix_inverse", "k": [], "r": "r1.7", "t": "tf.matrix_inverse"}, {"p": "/versions/r1.7/api_docs/python/tf/matrix_set_diag", "k": [], "r": "r1.7", "t": "tf.matrix_set_diag"}, {"p": "/versions/r1.7/api_docs/python/tf/matrix_solve", "k": [], "r": "r1.7", "t": "tf.matrix_solve"}, {"p": "/versions/r1.7/api_docs/python/tf/matrix_solve_ls", "k": [], "r": "r1.7", "t": "tf.matrix_solve_ls"}, {"p": "/versions/r1.7/api_docs/python/tf/matrix_transpose", "k": [], "r": "r1.7", "t": "tf.matrix_transpose"}, {"p": "/versions/r1.7/api_docs/python/tf/matrix_triangular_solve", "k": [], "r": "r1.7", "t": "tf.matrix_triangular_solve"}, {"p": "/versions/r1.7/api_docs/python/tf/maximum", "k": [], "r": "r1.7", "t": "tf.maximum"}, {"p": "/versions/r1.7/api_docs/python/tf/meshgrid", "k": [], "r": "r1.7", "t": "tf.meshgrid"}, {"p": "/versions/r1.7/api_docs/python/tf/metrics", "k": [], "r": "r1.7", "t": "tf.metrics"}, {"p": "/versions/r1.7/api_docs/python/tf/metrics/accuracy", "k": [], "r": "r1.7", "t": "tf.metrics.accuracy"}, {"p": "/versions/r1.7/api_docs/python/tf/metrics/auc", "k": [], "r": "r1.7", "t": "tf.metrics.auc"}, {"p": "/versions/r1.7/api_docs/python/tf/metrics/average_precision_at_k", "k": [], "r": "r1.7", "t": "tf.metrics.average_precision_at_k"}, {"p": "/versions/r1.7/api_docs/python/tf/metrics/false_negatives", "k": [], "r": "r1.7", "t": "tf.metrics.false_negatives"}, {"p": "/versions/r1.7/api_docs/python/tf/metrics/false_negatives_at_thresholds", "k": [], "r": "r1.7", "t": "tf.metrics.false_negatives_at_thresholds"}, {"p": "/versions/r1.7/api_docs/python/tf/metrics/false_positives", "k": [], "r": "r1.7", "t": "tf.metrics.false_positives"}, {"p": "/versions/r1.7/api_docs/python/tf/metrics/false_positives_at_thresholds", "k": [], "r": "r1.7", "t": "tf.metrics.false_positives_at_thresholds"}, {"p": "/versions/r1.7/api_docs/python/tf/metrics/mean", "k": [], "r": "r1.7", "t": "tf.metrics.mean"}, {"p": "/versions/r1.7/api_docs/python/tf/metrics/mean_absolute_error", "k": [], "r": "r1.7", "t": "tf.metrics.mean_absolute_error"}, {"p": "/versions/r1.7/api_docs/python/tf/metrics/mean_cosine_distance", "k": [], "r": "r1.7", "t": "tf.metrics.mean_cosine_distance"}, {"p": "/versions/r1.7/api_docs/python/tf/metrics/mean_iou", "k": [], "r": "r1.7", "t": "tf.metrics.mean_iou"}, {"p": "/versions/r1.7/api_docs/python/tf/metrics/mean_per_class_accuracy", "k": [], "r": "r1.7", "t": "tf.metrics.mean_per_class_accuracy"}, {"p": "/versions/r1.7/api_docs/python/tf/metrics/mean_relative_error", "k": [], "r": "r1.7", "t": "tf.metrics.mean_relative_error"}, {"p": "/versions/r1.7/api_docs/python/tf/metrics/mean_squared_error", "k": [], "r": "r1.7", "t": "tf.metrics.mean_squared_error"}, {"p": "/versions/r1.7/api_docs/python/tf/metrics/mean_tensor", "k": [], "r": "r1.7", "t": "tf.metrics.mean_tensor"}, {"p": "/versions/r1.7/api_docs/python/tf/metrics/percentage_below", "k": [], "r": "r1.7", "t": "tf.metrics.percentage_below"}, {"p": "/versions/r1.7/api_docs/python/tf/metrics/precision", "k": [], "r": "r1.7", "t": "tf.metrics.precision"}, {"p": "/versions/r1.7/api_docs/python/tf/metrics/precision_at_k", "k": [], "r": "r1.7", "t": "tf.metrics.precision_at_k"}, {"p": "/versions/r1.7/api_docs/python/tf/metrics/precision_at_thresholds", "k": [], "r": "r1.7", "t": "tf.metrics.precision_at_thresholds"}, {"p": "/versions/r1.7/api_docs/python/tf/metrics/precision_at_top_k", "k": [], "r": "r1.7", "t": "tf.metrics.precision_at_top_k"}, {"p": "/versions/r1.7/api_docs/python/tf/metrics/recall", "k": [], "r": "r1.7", "t": "tf.metrics.recall"}, {"p": "/versions/r1.7/api_docs/python/tf/metrics/recall_at_k", "k": [], "r": "r1.7", "t": "tf.metrics.recall_at_k"}, {"p": "/versions/r1.7/api_docs/python/tf/metrics/recall_at_thresholds", "k": [], "r": "r1.7", "t": "tf.metrics.recall_at_thresholds"}, {"p": "/versions/r1.7/api_docs/python/tf/metrics/recall_at_top_k", "k": [], "r": "r1.7", "t": "tf.metrics.recall_at_top_k"}, {"p": "/versions/r1.7/api_docs/python/tf/metrics/root_mean_squared_error", "k": [], "r": "r1.7", "t": "tf.metrics.root_mean_squared_error"}, {"p": "/versions/r1.7/api_docs/python/tf/metrics/sensitivity_at_specificity", "k": [], "r": "r1.7", "t": "tf.metrics.sensitivity_at_specificity"}, {"p": "/versions/r1.7/api_docs/python/tf/metrics/sparse_average_precision_at_k", "k": [], "r": "r1.7", "t": "tf.metrics.sparse_average_precision_at_k"}, {"p": "/versions/r1.7/api_docs/python/tf/metrics/sparse_precision_at_k", "k": [], "r": "r1.7", "t": "tf.metrics.sparse_precision_at_k"}, {"p": "/versions/r1.7/api_docs/python/tf/metrics/specificity_at_sensitivity", "k": [], "r": "r1.7", "t": "tf.metrics.specificity_at_sensitivity"}, {"p": "/versions/r1.7/api_docs/python/tf/metrics/true_negatives", "k": [], "r": "r1.7", "t": "tf.metrics.true_negatives"}, {"p": "/versions/r1.7/api_docs/python/tf/metrics/true_negatives_at_thresholds", "k": [], "r": "r1.7", "t": "tf.metrics.true_negatives_at_thresholds"}, {"p": "/versions/r1.7/api_docs/python/tf/metrics/true_positives", "k": [], "r": "r1.7", "t": "tf.metrics.true_positives"}, {"p": "/versions/r1.7/api_docs/python/tf/metrics/true_positives_at_thresholds", "k": [], "r": "r1.7", "t": "tf.metrics.true_positives_at_thresholds"}, {"p": "/versions/r1.7/api_docs/python/tf/min_max_variable_partitioner", "k": [], "r": "r1.7", "t": "tf.min_max_variable_partitioner"}, {"p": "/versions/r1.7/api_docs/python/tf/minimum", "k": [], "r": "r1.7", "t": "tf.minimum"}, {"p": "/versions/r1.7/api_docs/python/tf/model_variables", "k": [], "r": "r1.7", "t": "tf.model_variables"}, {"p": "/versions/r1.7/api_docs/python/tf/moving_average_variables", "k": [], "r": "r1.7", "t": "tf.moving_average_variables"}, {"p": "/versions/r1.7/api_docs/python/tf/multinomial", "k": [], "r": "r1.7", "t": "tf.multinomial"}, {"p": "/versions/r1.7/api_docs/python/tf/multiply", "k": [], "r": "r1.7", "t": "tf.multiply"}, {"p": "/versions/r1.7/api_docs/python/tf/name_scope", "k": ["name", "__enter__", "__exit__", "__init__"], "r": "r1.7", "t": "tf.name_scope"}, {"p": "/versions/r1.7/api_docs/python/tf/negative", "k": [], "r": "r1.7", "t": "tf.negative"}, {"p": "/versions/r1.7/api_docs/python/tf/nn", "k": ["swish"], "r": "r1.7", "t": "tf.nn"}, {"p": "/versions/r1.7/api_docs/python/tf/nn/all_candidate_sampler", "k": [], "r": "r1.7", "t": "tf.nn.all_candidate_sampler"}, {"p": "/versions/r1.7/api_docs/python/tf/nn/atrous_conv2d", "k": [], "r": "r1.7", "t": "tf.nn.atrous_conv2d"}, {"p": "/versions/r1.7/api_docs/python/tf/nn/atrous_conv2d_transpose", "k": [], "r": "r1.7", "t": "tf.nn.atrous_conv2d_transpose"}, {"p": "/versions/r1.7/api_docs/python/tf/nn/avg_pool", "k": [], "r": "r1.7", "t": "tf.nn.avg_pool"}, {"p": "/versions/r1.7/api_docs/python/tf/nn/avg_pool3d", "k": [], "r": "r1.7", "t": "tf.nn.avg_pool3d"}, {"p": "/versions/r1.7/api_docs/python/tf/nn/batch_norm_with_global_normalization", "k": [], "r": "r1.7", "t": "tf.nn.batch_norm_with_global_normalization"}, {"p": "/versions/r1.7/api_docs/python/tf/nn/batch_normalization", "k": [], "r": "r1.7", "t": "tf.nn.batch_normalization"}, {"p": "/versions/r1.7/api_docs/python/tf/nn/bias_add", "k": [], "r": "r1.7", "t": "tf.nn.bias_add"}, {"p": "/versions/r1.7/api_docs/python/tf/nn/bidirectional_dynamic_rnn", "k": [], "r": "r1.7", "t": "tf.nn.bidirectional_dynamic_rnn"}, {"p": "/versions/r1.7/api_docs/python/tf/nn/compute_accidental_hits", "k": [], "r": "r1.7", "t": "tf.nn.compute_accidental_hits"}, {"p": "/versions/r1.7/api_docs/python/tf/nn/conv1d", "k": [], "r": "r1.7", "t": "tf.nn.conv1d"}, {"p": "/versions/r1.7/api_docs/python/tf/nn/conv2d", "k": [], "r": "r1.7", "t": "tf.nn.conv2d"}, {"p": "/versions/r1.7/api_docs/python/tf/nn/conv2d_backprop_filter", "k": [], "r": "r1.7", "t": "tf.nn.conv2d_backprop_filter"}, {"p": "/versions/r1.7/api_docs/python/tf/nn/conv2d_backprop_input", "k": [], "r": "r1.7", "t": "tf.nn.conv2d_backprop_input"}, {"p": "/versions/r1.7/api_docs/python/tf/nn/conv2d_transpose", "k": [], "r": "r1.7", "t": "tf.nn.conv2d_transpose"}, {"p": "/versions/r1.7/api_docs/python/tf/nn/conv3d", "k": [], "r": "r1.7", "t": "tf.nn.conv3d"}, {"p": "/versions/r1.7/api_docs/python/tf/nn/conv3d_backprop_filter_v2", "k": [], "r": "r1.7", "t": "tf.nn.conv3d_backprop_filter_v2"}, {"p": "/versions/r1.7/api_docs/python/tf/nn/conv3d_transpose", "k": [], "r": "r1.7", "t": "tf.nn.conv3d_transpose"}, {"p": "/versions/r1.7/api_docs/python/tf/nn/convolution", "k": [], "r": "r1.7", "t": "tf.nn.convolution"}, {"p": "/versions/r1.7/api_docs/python/tf/nn/crelu", "k": [], "r": "r1.7", "t": "tf.nn.crelu"}, {"p": "/versions/r1.7/api_docs/python/tf/nn/ctc_beam_search_decoder", "k": [], "r": "r1.7", "t": "tf.nn.ctc_beam_search_decoder"}, {"p": "/versions/r1.7/api_docs/python/tf/nn/ctc_greedy_decoder", "k": [], "r": "r1.7", "t": "tf.nn.ctc_greedy_decoder"}, {"p": "/versions/r1.7/api_docs/python/tf/nn/ctc_loss", "k": [], "r": "r1.7", "t": "tf.nn.ctc_loss"}, {"p": "/versions/r1.7/api_docs/python/tf/nn/depthwise_conv2d", "k": [], "r": "r1.7", "t": "tf.nn.depthwise_conv2d"}, {"p": "/versions/r1.7/api_docs/python/tf/nn/depthwise_conv2d_native", "k": [], "r": "r1.7", "t": "tf.nn.depthwise_conv2d_native"}, {"p": "/versions/r1.7/api_docs/python/tf/nn/depthwise_conv2d_native_backprop_filter", "k": [], "r": "r1.7", "t": "tf.nn.depthwise_conv2d_native_backprop_filter"}, {"p": "/versions/r1.7/api_docs/python/tf/nn/depthwise_conv2d_native_backprop_input", "k": [], "r": "r1.7", "t": "tf.nn.depthwise_conv2d_native_backprop_input"}, {"p": "/versions/r1.7/api_docs/python/tf/nn/dilation2d", "k": [], "r": "r1.7", "t": "tf.nn.dilation2d"}, {"p": "/versions/r1.7/api_docs/python/tf/nn/dropout", "k": [], "r": "r1.7", "t": "tf.nn.dropout"}, {"p": "/versions/r1.7/api_docs/python/tf/nn/dynamic_rnn", "k": [], "r": "r1.7", "t": "tf.nn.dynamic_rnn"}, {"p": "/versions/r1.7/api_docs/python/tf/nn/elu", "k": [], "r": "r1.7", "t": "tf.nn.elu"}, {"p": "/versions/r1.7/api_docs/python/tf/nn/embedding_lookup", "k": [], "r": "r1.7", "t": "tf.nn.embedding_lookup"}, {"p": "/versions/r1.7/api_docs/python/tf/nn/embedding_lookup_sparse", "k": [], "r": "r1.7", "t": "tf.nn.embedding_lookup_sparse"}, {"p": "/versions/r1.7/api_docs/python/tf/nn/erosion2d", "k": [], "r": "r1.7", "t": "tf.nn.erosion2d"}, {"p": "/versions/r1.7/api_docs/python/tf/nn/fixed_unigram_candidate_sampler", "k": [], "r": "r1.7", "t": "tf.nn.fixed_unigram_candidate_sampler"}, {"p": "/versions/r1.7/api_docs/python/tf/nn/fractional_avg_pool", "k": [], "r": "r1.7", "t": "tf.nn.fractional_avg_pool"}, {"p": "/versions/r1.7/api_docs/python/tf/nn/fractional_max_pool", "k": [], "r": "r1.7", "t": "tf.nn.fractional_max_pool"}, {"p": "/versions/r1.7/api_docs/python/tf/nn/fused_batch_norm", "k": [], "r": "r1.7", "t": "tf.nn.fused_batch_norm"}, {"p": "/versions/r1.7/api_docs/python/tf/nn/in_top_k", "k": [], "r": "r1.7", "t": "tf.nn.in_top_k"}, {"p": "/versions/r1.7/api_docs/python/tf/nn/l2_loss", "k": [], "r": "r1.7", "t": "tf.nn.l2_loss"}, {"p": "/versions/r1.7/api_docs/python/tf/nn/l2_normalize", "k": [], "r": "r1.7", "t": "tf.nn.l2_normalize"}, {"p": "/versions/r1.7/api_docs/python/tf/nn/leaky_relu", "k": [], "r": "r1.7", "t": "tf.nn.leaky_relu"}, {"p": "/versions/r1.7/api_docs/python/tf/nn/learned_unigram_candidate_sampler", "k": [], "r": "r1.7", "t": "tf.nn.learned_unigram_candidate_sampler"}, {"p": "/versions/r1.7/api_docs/python/tf/nn/local_response_normalization", "k": [], "r": "r1.7", "t": "tf.nn.local_response_normalization"}, {"p": "/versions/r1.7/api_docs/python/tf/nn/log_poisson_loss", "k": [], "r": "r1.7", "t": "tf.nn.log_poisson_loss"}, {"p": "/versions/r1.7/api_docs/python/tf/nn/log_softmax", "k": [], "r": "r1.7", "t": "tf.nn.log_softmax"}, {"p": "/versions/r1.7/api_docs/python/tf/nn/log_uniform_candidate_sampler", "k": [], "r": "r1.7", "t": "tf.nn.log_uniform_candidate_sampler"}, {"p": "/versions/r1.7/api_docs/python/tf/nn/max_pool", "k": [], "r": "r1.7", "t": "tf.nn.max_pool"}, {"p": "/versions/r1.7/api_docs/python/tf/nn/max_pool3d", "k": [], "r": "r1.7", "t": "tf.nn.max_pool3d"}, {"p": "/versions/r1.7/api_docs/python/tf/nn/max_pool_with_argmax", "k": [], "r": "r1.7", "t": "tf.nn.max_pool_with_argmax"}, {"p": "/versions/r1.7/api_docs/python/tf/nn/moments", "k": [], "r": "r1.7", "t": "tf.nn.moments"}, {"p": "/versions/r1.7/api_docs/python/tf/nn/nce_loss", "k": [], "r": "r1.7", "t": "tf.nn.nce_loss"}, {"p": "/versions/r1.7/api_docs/python/tf/nn/normalize_moments", "k": [], "r": "r1.7", "t": "tf.nn.normalize_moments"}, {"p": "/versions/r1.7/api_docs/python/tf/nn/pool", "k": [], "r": "r1.7", "t": "tf.nn.pool"}, {"p": "/versions/r1.7/api_docs/python/tf/nn/quantized_avg_pool", "k": [], "r": "r1.7", "t": "tf.nn.quantized_avg_pool"}, {"p": "/versions/r1.7/api_docs/python/tf/nn/quantized_conv2d", "k": [], "r": "r1.7", "t": "tf.nn.quantized_conv2d"}, {"p": "/versions/r1.7/api_docs/python/tf/nn/quantized_max_pool", "k": [], "r": "r1.7", "t": "tf.nn.quantized_max_pool"}, {"p": "/versions/r1.7/api_docs/python/tf/nn/quantized_relu_x", "k": [], "r": "r1.7", "t": "tf.nn.quantized_relu_x"}, {"p": "/versions/r1.7/api_docs/python/tf/nn/raw_rnn", "k": [], "r": "r1.7", "t": "tf.nn.raw_rnn"}, {"p": "/versions/r1.7/api_docs/python/tf/nn/relu", "k": [], "r": "r1.7", "t": "tf.nn.relu"}, {"p": "/versions/r1.7/api_docs/python/tf/nn/relu6", "k": [], "r": "r1.7", "t": "tf.nn.relu6"}, {"p": "/versions/r1.7/api_docs/python/tf/nn/relu_layer", "k": [], "r": "r1.7", "t": "tf.nn.relu_layer"}, {"p": "/versions/r1.7/api_docs/python/tf/nn/rnn_cell", "k": [], "r": "r1.7", "t": "tf.nn.rnn_cell"}, {"p": "/versions/r1.7/api_docs/python/tf/nn/sampled_softmax_loss", "k": [], "r": "r1.7", "t": "tf.nn.sampled_softmax_loss"}, {"p": "/versions/r1.7/api_docs/python/tf/nn/selu", "k": [], "r": "r1.7", "t": "tf.nn.selu"}, {"p": "/versions/r1.7/api_docs/python/tf/nn/separable_conv2d", "k": [], "r": "r1.7", "t": "tf.nn.separable_conv2d"}, {"p": "/versions/r1.7/api_docs/python/tf/nn/sigmoid_cross_entropy_with_logits", "k": [], "r": "r1.7", "t": "tf.nn.sigmoid_cross_entropy_with_logits"}, {"p": "/versions/r1.7/api_docs/python/tf/nn/softmax", "k": [], "r": "r1.7", "t": "tf.nn.softmax"}, {"p": "/versions/r1.7/api_docs/python/tf/nn/softmax_cross_entropy_with_logits", "k": [], "r": "r1.7", "t": "tf.nn.softmax_cross_entropy_with_logits"}, {"p": "/versions/r1.7/api_docs/python/tf/nn/softmax_cross_entropy_with_logits_v2", "k": [], "r": "r1.7", "t": "tf.nn.softmax_cross_entropy_with_logits_v2"}, {"p": "/versions/r1.7/api_docs/python/tf/nn/softplus", "k": [], "r": "r1.7", "t": "tf.nn.softplus"}, {"p": "/versions/r1.7/api_docs/python/tf/nn/softsign", "k": [], "r": "r1.7", "t": "tf.nn.softsign"}, {"p": "/versions/r1.7/api_docs/python/tf/nn/sparse_softmax_cross_entropy_with_logits", "k": [], "r": "r1.7", "t": "tf.nn.sparse_softmax_cross_entropy_with_logits"}, {"p": "/versions/r1.7/api_docs/python/tf/nn/static_bidirectional_rnn", "k": [], "r": "r1.7", "t": "tf.nn.static_bidirectional_rnn"}, {"p": "/versions/r1.7/api_docs/python/tf/nn/static_rnn", "k": [], "r": "r1.7", "t": "tf.nn.static_rnn"}, {"p": "/versions/r1.7/api_docs/python/tf/nn/static_state_saving_rnn", "k": [], "r": "r1.7", "t": "tf.nn.static_state_saving_rnn"}, {"p": "/versions/r1.7/api_docs/python/tf/nn/sufficient_statistics", "k": [], "r": "r1.7", "t": "tf.nn.sufficient_statistics"}, {"p": "/versions/r1.7/api_docs/python/tf/nn/top_k", "k": [], "r": "r1.7", "t": "tf.nn.top_k"}, {"p": "/versions/r1.7/api_docs/python/tf/nn/uniform_candidate_sampler", "k": [], "r": "r1.7", "t": "tf.nn.uniform_candidate_sampler"}, {"p": "/versions/r1.7/api_docs/python/tf/nn/weighted_cross_entropy_with_logits", "k": [], "r": "r1.7", "t": "tf.nn.weighted_cross_entropy_with_logits"}, {"p": "/versions/r1.7/api_docs/python/tf/nn/weighted_moments", "k": [], "r": "r1.7", "t": "tf.nn.weighted_moments"}, {"p": "/versions/r1.7/api_docs/python/tf/nn/with_space_to_batch", "k": [], "r": "r1.7", "t": "tf.nn.with_space_to_batch"}, {"p": "/versions/r1.7/api_docs/python/tf/nn/xw_plus_b", "k": [], "r": "r1.7", "t": "tf.nn.xw_plus_b"}, {"p": "/versions/r1.7/api_docs/python/tf/nn/zero_fraction", "k": [], "r": "r1.7", "t": "tf.nn.zero_fraction"}, {"p": "/versions/r1.7/api_docs/python/tf/no_op", "k": [], "r": "r1.7", "t": "tf.no_op"}, {"p": "/versions/r1.7/api_docs/python/tf/no_regularizer", "k": [], "r": "r1.7", "t": "tf.no_regularizer"}, {"p": "/versions/r1.7/api_docs/python/tf/norm", "k": [], "r": "r1.7", "t": "tf.norm"}, {"p": "/versions/r1.7/api_docs/python/tf/not_equal", "k": [], "r": "r1.7", "t": "tf.not_equal"}, {"p": "/versions/r1.7/api_docs/python/tf/one_hot", "k": [], "r": "r1.7", "t": "tf.one_hot"}, {"p": "/versions/r1.7/api_docs/python/tf/ones", "k": [], "r": "r1.7", "t": "tf.ones"}, {"p": "/versions/r1.7/api_docs/python/tf/ones_initializer", "k": ["__call__", "__init__", "from_config", "get_config"], "r": "r1.7", "t": "tf.ones_initializer"}, {"p": "/versions/r1.7/api_docs/python/tf/ones_like", "k": [], "r": "r1.7", "t": "tf.ones_like"}, {"p": "/versions/r1.7/api_docs/python/tf/op_scope", "k": [], "r": "r1.7", "t": "tf.op_scope"}, {"p": "/versions/r1.7/api_docs/python/tf/orthogonal_initializer", "k": ["__call__", "__init__", "from_config", "get_config"], "r": "r1.7", "t": "tf.orthogonal_initializer"}, {"p": "/versions/r1.7/api_docs/python/tf/pad", "k": [], "r": "r1.7", "t": "tf.pad"}, {"p": "/versions/r1.7/api_docs/python/tf/parallel_stack", "k": [], "r": "r1.7", "t": "tf.parallel_stack"}, {"p": "/versions/r1.7/api_docs/python/tf/parse_example", "k": [], "r": "r1.7", "t": "tf.parse_example"}, {"p": "/versions/r1.7/api_docs/python/tf/parse_single_example", "k": [], "r": "r1.7", "t": "tf.parse_single_example"}, {"p": "/versions/r1.7/api_docs/python/tf/parse_single_sequence_example", "k": [], "r": "r1.7", "t": "tf.parse_single_sequence_example"}, {"p": "/versions/r1.7/api_docs/python/tf/parse_tensor", "k": [], "r": "r1.7", "t": "tf.parse_tensor"}, {"p": "/versions/r1.7/api_docs/python/tf/placeholder", "k": [], "r": "r1.7", "t": "tf.placeholder"}, {"p": "/versions/r1.7/api_docs/python/tf/placeholder_with_default", "k": [], "r": "r1.7", "t": "tf.placeholder_with_default"}, {"p": "/versions/r1.7/api_docs/python/tf/polygamma", "k": [], "r": "r1.7", "t": "tf.polygamma"}, {"p": "/versions/r1.7/api_docs/python/tf/pow", "k": [], "r": "r1.7", "t": "tf.pow"}, {"p": "/versions/r1.7/api_docs/python/tf/profiler", "k": [], "r": "r1.7", "t": "tf.profiler"}, {"p": "/versions/r1.7/api_docs/python/tf/profiler/AdviceProto", "k": ["Checker", "CheckersEntry"], "r": "r1.7", "t": "tf.profiler.AdviceProto"}, {"p": "/versions/r1.7/api_docs/python/tf/profiler/AdviceProto/Checker", "k": [], "r": "r1.7", "t": "tf.profiler.AdviceProto.Checker"}, {"p": "/versions/r1.7/api_docs/python/tf/profiler/AdviceProto/CheckersEntry", "k": [], "r": "r1.7", "t": "tf.profiler.AdviceProto.CheckersEntry"}, {"p": "/versions/r1.7/api_docs/python/tf/profiler/GraphNodeProto", "k": ["InputShapesEntry"], "r": "r1.7", "t": "tf.profiler.GraphNodeProto"}, {"p": "/versions/r1.7/api_docs/python/tf/profiler/GraphNodeProto/InputShapesEntry", "k": [], "r": "r1.7", "t": "tf.profiler.GraphNodeProto.InputShapesEntry"}, {"p": "/versions/r1.7/api_docs/python/tf/profiler/MultiGraphNodeProto", "k": [], "r": "r1.7", "t": "tf.profiler.MultiGraphNodeProto"}, {"p": "/versions/r1.7/api_docs/python/tf/profiler/OpLogProto", "k": ["IdToStringEntry"], "r": "r1.7", "t": "tf.profiler.OpLogProto"}, {"p": "/versions/r1.7/api_docs/python/tf/profiler/OpLogProto/IdToStringEntry", "k": [], "r": "r1.7", "t": "tf.profiler.OpLogProto.IdToStringEntry"}, {"p": "/versions/r1.7/api_docs/python/tf/profiler/ProfileOptionBuilder", "k": ["__init__", "account_displayed_op_only", "build", "float_operation", "order_by", "select", "time_and_memory", "trainable_variables_parameter", "with_accounted_types", "with_empty_output", "with_file_output", "with_max_depth", "with_min_execution_time", "with_min_float_operations", "with_min_memory", "with_min_occurrence", "with_min_parameters", "with_node_names", "with_pprof_output", "with_stdout_output", "with_step", "with_timeline_output"], "r": "r1.7", "t": "tf.profiler.ProfileOptionBuilder"}, {"p": "/versions/r1.7/api_docs/python/tf/profiler/Profiler", "k": ["__init__", "add_step", "advise", "profile_graph", "profile_name_scope", "profile_operations", "profile_python", "serialize_to_string"], "r": "r1.7", "t": "tf.profiler.Profiler"}, {"p": "/versions/r1.7/api_docs/python/tf/profiler/advise", "k": [], "r": "r1.7", "t": "tf.profiler.advise"}, {"p": "/versions/r1.7/api_docs/python/tf/profiler/profile", "k": [], "r": "r1.7", "t": "tf.profiler.profile"}, {"p": "/versions/r1.7/api_docs/python/tf/profiler/write_op_log", "k": [], "r": "r1.7", "t": "tf.profiler.write_op_log"}, {"p": "/versions/r1.7/api_docs/python/tf/py_func", "k": [], "r": "r1.7", "t": "tf.py_func"}, {"p": "/versions/r1.7/api_docs/python/tf/python_io", "k": [], "r": "r1.7", "t": "tf.python_io"}, {"p": "/versions/r1.7/api_docs/python/tf/python_io/TFRecordCompressionType", "k": ["GZIP", "NONE", "ZLIB"], "r": "r1.7", "t": "tf.python_io.TFRecordCompressionType"}, {"p": "/versions/r1.7/api_docs/python/tf/python_io/TFRecordOptions", "k": ["__init__", "get_compression_type_string", "compression_type_map"], "r": "r1.7", "t": "tf.python_io.TFRecordOptions"}, {"p": "/versions/r1.7/api_docs/python/tf/python_io/TFRecordWriter", "k": ["__enter__", "__exit__", "__init__", "close", "flush", "write"], "r": "r1.7", "t": "tf.python_io.TFRecordWriter"}, {"p": "/versions/r1.7/api_docs/python/tf/python_io/tf_record_iterator", "k": [], "r": "r1.7", "t": "tf.python_io.tf_record_iterator"}, {"p": "/versions/r1.7/api_docs/python/tf/pywrap_tensorflow", "k": [], "r": "r1.7", "t": "tf.pywrap_tensorflow"}, {"p": "/versions/r1.7/api_docs/python/tf/qr", "k": [], "r": "r1.7", "t": "tf.qr"}, {"p": "/versions/r1.7/api_docs/python/tf/quantize", "k": [], "r": "r1.7", "t": "tf.quantize"}, {"p": "/versions/r1.7/api_docs/python/tf/quantize_v2", "k": [], "r": "r1.7", "t": "tf.quantize_v2"}, {"p": "/versions/r1.7/api_docs/python/tf/quantized_concat", "k": [], "r": "r1.7", "t": "tf.quantized_concat"}, {"p": "/versions/r1.7/api_docs/python/tf/random_crop", "k": [], "r": "r1.7", "t": "tf.random_crop"}, {"p": "/versions/r1.7/api_docs/python/tf/random_gamma", "k": [], "r": "r1.7", "t": "tf.random_gamma"}, {"p": "/versions/r1.7/api_docs/python/tf/random_normal", "k": [], "r": "r1.7", "t": "tf.random_normal"}, {"p": "/versions/r1.7/api_docs/python/tf/random_normal_initializer", "k": ["__call__", "__init__", "from_config", "get_config"], "r": "r1.7", "t": "tf.random_normal_initializer"}, {"p": "/versions/r1.7/api_docs/python/tf/random_poisson", "k": [], "r": "r1.7", "t": "tf.random_poisson"}, {"p": "/versions/r1.7/api_docs/python/tf/random_shuffle", "k": [], "r": "r1.7", "t": "tf.random_shuffle"}, {"p": "/versions/r1.7/api_docs/python/tf/random_uniform", "k": [], "r": "r1.7", "t": "tf.random_uniform"}, {"p": "/versions/r1.7/api_docs/python/tf/random_uniform_initializer", "k": ["__call__", "__init__", "from_config", "get_config"], "r": "r1.7", "t": "tf.random_uniform_initializer"}, {"p": "/versions/r1.7/api_docs/python/tf/range", "k": [], "r": "r1.7", "t": "tf.range"}, {"p": "/versions/r1.7/api_docs/python/tf/rank", "k": [], "r": "r1.7", "t": "tf.rank"}, {"p": "/versions/r1.7/api_docs/python/tf/read_file", "k": [], "r": "r1.7", "t": "tf.read_file"}, {"p": "/versions/r1.7/api_docs/python/tf/real", "k": [], "r": "r1.7", "t": "tf.real"}, {"p": "/versions/r1.7/api_docs/python/tf/realdiv", "k": [], "r": "r1.7", "t": "tf.realdiv"}, {"p": "/versions/r1.7/api_docs/python/tf/reciprocal", "k": [], "r": "r1.7", "t": "tf.reciprocal"}, {"p": "/versions/r1.7/api_docs/python/tf/reduce_all", "k": [], "r": "r1.7", "t": "tf.reduce_all"}, {"p": "/versions/r1.7/api_docs/python/tf/reduce_any", "k": [], "r": "r1.7", "t": "tf.reduce_any"}, {"p": "/versions/r1.7/api_docs/python/tf/reduce_join", "k": [], "r": "r1.7", "t": "tf.reduce_join"}, {"p": "/versions/r1.7/api_docs/python/tf/reduce_logsumexp", "k": [], "r": "r1.7", "t": "tf.reduce_logsumexp"}, {"p": "/versions/r1.7/api_docs/python/tf/reduce_max", "k": [], "r": "r1.7", "t": "tf.reduce_max"}, {"p": "/versions/r1.7/api_docs/python/tf/reduce_mean", "k": [], "r": "r1.7", "t": "tf.reduce_mean"}, {"p": "/versions/r1.7/api_docs/python/tf/reduce_min", "k": [], "r": "r1.7", "t": "tf.reduce_min"}, {"p": "/versions/r1.7/api_docs/python/tf/reduce_prod", "k": [], "r": "r1.7", "t": "tf.reduce_prod"}, {"p": "/versions/r1.7/api_docs/python/tf/reduce_sum", "k": [], "r": "r1.7", "t": "tf.reduce_sum"}, {"p": "/versions/r1.7/api_docs/python/tf/regex_replace", "k": [], "r": "r1.7", "t": "tf.regex_replace"}, {"p": "/versions/r1.7/api_docs/python/tf/register_tensor_conversion_function", "k": [], "r": "r1.7", "t": "tf.register_tensor_conversion_function"}, {"p": "/versions/r1.7/api_docs/python/tf/report_uninitialized_variables", "k": [], "r": "r1.7", "t": "tf.report_uninitialized_variables"}, {"p": "/versions/r1.7/api_docs/python/tf/required_space_to_batch_paddings", "k": [], "r": "r1.7", "t": "tf.required_space_to_batch_paddings"}, {"p": "/versions/r1.7/api_docs/python/tf/reset_default_graph", "k": [], "r": "r1.7", "t": "tf.reset_default_graph"}, {"p": "/versions/r1.7/api_docs/python/tf/reshape", "k": [], "r": "r1.7", "t": "tf.reshape"}, {"p": "/versions/r1.7/api_docs/python/tf/resource_loader", "k": [], "r": "r1.7", "t": "tf.resource_loader"}, {"p": "/versions/r1.7/api_docs/python/tf/resource_loader/get_data_files_path", "k": [], "r": "r1.7", "t": "tf.resource_loader.get_data_files_path"}, {"p": "/versions/r1.7/api_docs/python/tf/resource_loader/get_path_to_datafile", "k": [], "r": "r1.7", "t": "tf.resource_loader.get_path_to_datafile"}, {"p": "/versions/r1.7/api_docs/python/tf/resource_loader/get_root_dir_with_all_resources", "k": [], "r": "r1.7", "t": "tf.resource_loader.get_root_dir_with_all_resources"}, {"p": "/versions/r1.7/api_docs/python/tf/resource_loader/load_resource", "k": [], "r": "r1.7", "t": "tf.resource_loader.load_resource"}, {"p": "/versions/r1.7/api_docs/python/tf/resource_loader/readahead_file_path", "k": [], "r": "r1.7", "t": "tf.resource_loader.readahead_file_path"}, {"p": "/versions/r1.7/api_docs/python/tf/reverse", "k": [], "r": "r1.7", "t": "tf.reverse"}, {"p": "/versions/r1.7/api_docs/python/tf/reverse_sequence", "k": [], "r": "r1.7", "t": "tf.reverse_sequence"}, {"p": "/versions/r1.7/api_docs/python/tf/reverse_v2", "k": [], "r": "r1.7", "t": "tf.reverse_v2"}, {"p": "/versions/r1.7/api_docs/python/tf/rint", "k": [], "r": "r1.7", "t": "tf.rint"}, {"p": "/versions/r1.7/api_docs/python/tf/round", "k": [], "r": "r1.7", "t": "tf.round"}, {"p": "/versions/r1.7/api_docs/python/tf/rsqrt", "k": [], "r": "r1.7", "t": "tf.rsqrt"}, {"p": "/versions/r1.7/api_docs/python/tf/saturate_cast", "k": [], "r": "r1.7", "t": "tf.saturate_cast"}, {"p": "/versions/r1.7/api_docs/python/tf/saved_model", "k": [], "r": "r1.7", "t": "tf.saved_model"}, {"p": "/versions/r1.7/api_docs/python/tf/saved_model/builder", "k": [], "r": "r1.7", "t": "tf.saved_model.builder"}, {"p": "/versions/r1.7/api_docs/python/tf/saved_model/builder/SavedModelBuilder", "k": ["__init__", "add_meta_graph", "add_meta_graph_and_variables", "save"], "r": "r1.7", "t": "tf.saved_model.builder.SavedModelBuilder"}, {"p": "/versions/r1.7/api_docs/python/tf/saved_model/constants", "k": ["ASSETS_DIRECTORY", "ASSETS_KEY", "LEGACY_INIT_OP_KEY", "MAIN_OP_KEY", "SAVED_MODEL_FILENAME_PB", "SAVED_MODEL_FILENAME_PBTXT", "SAVED_MODEL_SCHEMA_VERSION", "VARIABLES_DIRECTORY", "VARIABLES_FILENAME"], "r": "r1.7", "t": "tf.saved_model.constants"}, {"p": "/versions/r1.7/api_docs/python/tf/saved_model/loader", "k": [], "r": "r1.7", "t": "tf.saved_model.loader"}, {"p": "/versions/r1.7/api_docs/python/tf/saved_model/loader/load", "k": [], "r": "r1.7", "t": "tf.saved_model.loader.load"}, {"p": "/versions/r1.7/api_docs/python/tf/saved_model/loader/maybe_saved_model_directory", "k": [], "r": "r1.7", "t": "tf.saved_model.loader.maybe_saved_model_directory"}, {"p": "/versions/r1.7/api_docs/python/tf/saved_model/main_op", "k": [], "r": "r1.7", "t": "tf.saved_model.main_op"}, {"p": "/versions/r1.7/api_docs/python/tf/saved_model/main_op/main_op", "k": [], "r": "r1.7", "t": "tf.saved_model.main_op.main_op"}, {"p": "/versions/r1.7/api_docs/python/tf/saved_model/main_op/main_op_with_restore", "k": [], "r": "r1.7", "t": "tf.saved_model.main_op.main_op_with_restore"}, {"p": "/versions/r1.7/api_docs/python/tf/saved_model/signature_constants", "k": ["CLASSIFY_INPUTS", "CLASSIFY_METHOD_NAME", "CLASSIFY_OUTPUT_CLASSES", "CLASSIFY_OUTPUT_SCORES", "DEFAULT_SERVING_SIGNATURE_DEF_KEY", "PREDICT_INPUTS", "PREDICT_METHOD_NAME", "PREDICT_OUTPUTS", "REGRESS_INPUTS", "REGRESS_METHOD_NAME", "REGRESS_OUTPUTS"], "r": "r1.7", "t": "tf.saved_model.signature_constants"}, {"p": "/versions/r1.7/api_docs/python/tf/saved_model/signature_def_utils", "k": [], "r": "r1.7", "t": "tf.saved_model.signature_def_utils"}, {"p": "/versions/r1.7/api_docs/python/tf/saved_model/signature_def_utils/build_signature_def", "k": [], "r": "r1.7", "t": "tf.saved_model.signature_def_utils.build_signature_def"}, {"p": "/versions/r1.7/api_docs/python/tf/saved_model/signature_def_utils/classification_signature_def", "k": [], "r": "r1.7", "t": "tf.saved_model.signature_def_utils.classification_signature_def"}, {"p": "/versions/r1.7/api_docs/python/tf/saved_model/signature_def_utils/is_valid_signature", "k": [], "r": "r1.7", "t": "tf.saved_model.signature_def_utils.is_valid_signature"}, {"p": "/versions/r1.7/api_docs/python/tf/saved_model/signature_def_utils/predict_signature_def", "k": [], "r": "r1.7", "t": "tf.saved_model.signature_def_utils.predict_signature_def"}, {"p": "/versions/r1.7/api_docs/python/tf/saved_model/signature_def_utils/regression_signature_def", "k": [], "r": "r1.7", "t": "tf.saved_model.signature_def_utils.regression_signature_def"}, {"p": "/versions/r1.7/api_docs/python/tf/saved_model/simple_save", "k": [], "r": "r1.7", "t": "tf.saved_model.simple_save"}, {"p": "/versions/r1.7/api_docs/python/tf/saved_model/tag_constants", "k": ["GPU", "SERVING", "TPU", "TRAINING"], "r": "r1.7", "t": "tf.saved_model.tag_constants"}, {"p": "/versions/r1.7/api_docs/python/tf/saved_model/utils", "k": [], "r": "r1.7", "t": "tf.saved_model.utils"}, {"p": "/versions/r1.7/api_docs/python/tf/saved_model/utils/build_tensor_info", "k": [], "r": "r1.7", "t": "tf.saved_model.utils.build_tensor_info"}, {"p": "/versions/r1.7/api_docs/python/tf/saved_model/utils/get_tensor_from_tensor_info", "k": [], "r": "r1.7", "t": "tf.saved_model.utils.get_tensor_from_tensor_info"}, {"p": "/versions/r1.7/api_docs/python/tf/scalar_mul", "k": [], "r": "r1.7", "t": "tf.scalar_mul"}, {"p": "/versions/r1.7/api_docs/python/tf/scan", "k": [], "r": "r1.7", "t": "tf.scan"}, {"p": "/versions/r1.7/api_docs/python/tf/scatter_add", "k": [], "r": "r1.7", "t": "tf.scatter_add"}, {"p": "/versions/r1.7/api_docs/python/tf/scatter_div", "k": [], "r": "r1.7", "t": "tf.scatter_div"}, {"p": "/versions/r1.7/api_docs/python/tf/scatter_mul", "k": [], "r": "r1.7", "t": "tf.scatter_mul"}, {"p": "/versions/r1.7/api_docs/python/tf/scatter_nd", "k": [], "r": "r1.7", "t": "tf.scatter_nd"}, {"p": "/versions/r1.7/api_docs/python/tf/scatter_nd_add", "k": [], "r": "r1.7", "t": "tf.scatter_nd_add"}, {"p": "/versions/r1.7/api_docs/python/tf/scatter_nd_sub", "k": [], "r": "r1.7", "t": "tf.scatter_nd_sub"}, {"p": "/versions/r1.7/api_docs/python/tf/scatter_nd_update", "k": [], "r": "r1.7", "t": "tf.scatter_nd_update"}, {"p": "/versions/r1.7/api_docs/python/tf/scatter_sub", "k": [], "r": "r1.7", "t": "tf.scatter_sub"}, {"p": "/versions/r1.7/api_docs/python/tf/scatter_update", "k": [], "r": "r1.7", "t": "tf.scatter_update"}, {"p": "/versions/r1.7/api_docs/python/tf/segment_max", "k": [], "r": "r1.7", "t": "tf.segment_max"}, {"p": "/versions/r1.7/api_docs/python/tf/segment_mean", "k": [], "r": "r1.7", "t": "tf.segment_mean"}, {"p": "/versions/r1.7/api_docs/python/tf/segment_min", "k": [], "r": "r1.7", "t": "tf.segment_min"}, {"p": "/versions/r1.7/api_docs/python/tf/segment_prod", "k": [], "r": "r1.7", "t": "tf.segment_prod"}, {"p": "/versions/r1.7/api_docs/python/tf/segment_sum", "k": [], "r": "r1.7", "t": "tf.segment_sum"}, {"p": "/versions/r1.7/api_docs/python/tf/self_adjoint_eig", "k": [], "r": "r1.7", "t": "tf.self_adjoint_eig"}, {"p": "/versions/r1.7/api_docs/python/tf/self_adjoint_eigvals", "k": [], "r": "r1.7", "t": "tf.self_adjoint_eigvals"}, {"p": "/versions/r1.7/api_docs/python/tf/sequence_mask", "k": [], "r": "r1.7", "t": "tf.sequence_mask"}, {"p": "/versions/r1.7/api_docs/python/tf/serialize_many_sparse", "k": [], "r": "r1.7", "t": "tf.serialize_many_sparse"}, {"p": "/versions/r1.7/api_docs/python/tf/serialize_sparse", "k": [], "r": "r1.7", "t": "tf.serialize_sparse"}, {"p": "/versions/r1.7/api_docs/python/tf/serialize_tensor", "k": [], "r": "r1.7", "t": "tf.serialize_tensor"}, {"p": "/versions/r1.7/api_docs/python/tf/set_random_seed", "k": [], "r": "r1.7", "t": "tf.set_random_seed"}, {"p": "/versions/r1.7/api_docs/python/tf/setdiff1d", "k": [], "r": "r1.7", "t": "tf.setdiff1d"}, {"p": "/versions/r1.7/api_docs/python/tf/sets", "k": [], "r": "r1.7", "t": "tf.sets"}, {"p": "/versions/r1.7/api_docs/python/tf/sets/set_difference", "k": [], "r": "r1.7", "t": "tf.sets.set_difference"}, {"p": "/versions/r1.7/api_docs/python/tf/sets/set_intersection", "k": [], "r": "r1.7", "t": "tf.sets.set_intersection"}, {"p": "/versions/r1.7/api_docs/python/tf/sets/set_size", "k": [], "r": "r1.7", "t": "tf.sets.set_size"}, {"p": "/versions/r1.7/api_docs/python/tf/sets/set_union", "k": [], "r": "r1.7", "t": "tf.sets.set_union"}, {"p": "/versions/r1.7/api_docs/python/tf/shape", "k": [], "r": "r1.7", "t": "tf.shape"}, {"p": "/versions/r1.7/api_docs/python/tf/shape_n", "k": [], "r": "r1.7", "t": "tf.shape_n"}, {"p": "/versions/r1.7/api_docs/python/tf/sigmoid", "k": [], "r": "r1.7", "t": "tf.sigmoid"}, {"p": "/versions/r1.7/api_docs/python/tf/sign", "k": [], "r": "r1.7", "t": "tf.sign"}, {"p": "/versions/r1.7/api_docs/python/tf/sin", "k": [], "r": "r1.7", "t": "tf.sin"}, {"p": "/versions/r1.7/api_docs/python/tf/sinh", "k": [], "r": "r1.7", "t": "tf.sinh"}, {"p": "/versions/r1.7/api_docs/python/tf/size", "k": [], "r": "r1.7", "t": "tf.size"}, {"p": "/versions/r1.7/api_docs/python/tf/slice", "k": [], "r": "r1.7", "t": "tf.slice"}, {"p": "/versions/r1.7/api_docs/python/tf/space_to_batch", "k": [], "r": "r1.7", "t": "tf.space_to_batch"}, {"p": "/versions/r1.7/api_docs/python/tf/space_to_batch_nd", "k": [], "r": "r1.7", "t": "tf.space_to_batch_nd"}, {"p": "/versions/r1.7/api_docs/python/tf/space_to_depth", "k": [], "r": "r1.7", "t": "tf.space_to_depth"}, {"p": "/versions/r1.7/api_docs/python/tf/sparse_add", "k": [], "r": "r1.7", "t": "tf.sparse_add"}, {"p": "/versions/r1.7/api_docs/python/tf/sparse_concat", "k": [], "r": "r1.7", "t": "tf.sparse_concat"}, {"p": "/versions/r1.7/api_docs/python/tf/sparse_fill_empty_rows", "k": [], "r": "r1.7", "t": "tf.sparse_fill_empty_rows"}, {"p": "/versions/r1.7/api_docs/python/tf/sparse_mask", "k": [], "r": "r1.7", "t": "tf.sparse_mask"}, {"p": "/versions/r1.7/api_docs/python/tf/sparse_matmul", "k": [], "r": "r1.7", "t": "tf.sparse_matmul"}, {"p": "/versions/r1.7/api_docs/python/tf/sparse_maximum", "k": [], "r": "r1.7", "t": "tf.sparse_maximum"}, {"p": "/versions/r1.7/api_docs/python/tf/sparse_merge", "k": [], "r": "r1.7", "t": "tf.sparse_merge"}, {"p": "/versions/r1.7/api_docs/python/tf/sparse_minimum", "k": [], "r": "r1.7", "t": "tf.sparse_minimum"}, {"p": "/versions/r1.7/api_docs/python/tf/sparse_placeholder", "k": [], "r": "r1.7", "t": "tf.sparse_placeholder"}, {"p": "/versions/r1.7/api_docs/python/tf/sparse_reduce_max", "k": [], "r": "r1.7", "t": "tf.sparse_reduce_max"}, {"p": "/versions/r1.7/api_docs/python/tf/sparse_reduce_max_sparse", "k": [], "r": "r1.7", "t": "tf.sparse_reduce_max_sparse"}, {"p": "/versions/r1.7/api_docs/python/tf/sparse_reduce_sum", "k": [], "r": "r1.7", "t": "tf.sparse_reduce_sum"}, {"p": "/versions/r1.7/api_docs/python/tf/sparse_reduce_sum_sparse", "k": [], "r": "r1.7", "t": "tf.sparse_reduce_sum_sparse"}, {"p": "/versions/r1.7/api_docs/python/tf/sparse_reorder", "k": [], "r": "r1.7", "t": "tf.sparse_reorder"}, {"p": "/versions/r1.7/api_docs/python/tf/sparse_reset_shape", "k": [], "r": "r1.7", "t": "tf.sparse_reset_shape"}, {"p": "/versions/r1.7/api_docs/python/tf/sparse_reshape", "k": [], "r": "r1.7", "t": "tf.sparse_reshape"}, {"p": "/versions/r1.7/api_docs/python/tf/sparse_retain", "k": [], "r": "r1.7", "t": "tf.sparse_retain"}, {"p": "/versions/r1.7/api_docs/python/tf/sparse_segment_mean", "k": [], "r": "r1.7", "t": "tf.sparse_segment_mean"}, {"p": "/versions/r1.7/api_docs/python/tf/sparse_segment_sqrt_n", "k": [], "r": "r1.7", "t": "tf.sparse_segment_sqrt_n"}, {"p": "/versions/r1.7/api_docs/python/tf/sparse_segment_sum", "k": [], "r": "r1.7", "t": "tf.sparse_segment_sum"}, {"p": "/versions/r1.7/api_docs/python/tf/sparse_slice", "k": [], "r": "r1.7", "t": "tf.sparse_slice"}, {"p": "/versions/r1.7/api_docs/python/tf/sparse_softmax", "k": [], "r": "r1.7", "t": "tf.sparse_softmax"}, {"p": "/versions/r1.7/api_docs/python/tf/sparse_split", "k": [], "r": "r1.7", "t": "tf.sparse_split"}, {"p": "/versions/r1.7/api_docs/python/tf/sparse_tensor_dense_matmul", "k": [], "r": "r1.7", "t": "tf.sparse_tensor_dense_matmul"}, {"p": "/versions/r1.7/api_docs/python/tf/sparse_tensor_to_dense", "k": [], "r": "r1.7", "t": "tf.sparse_tensor_to_dense"}, {"p": "/versions/r1.7/api_docs/python/tf/sparse_to_dense", "k": [], "r": "r1.7", "t": "tf.sparse_to_dense"}, {"p": "/versions/r1.7/api_docs/python/tf/sparse_to_indicator", "k": [], "r": "r1.7", "t": "tf.sparse_to_indicator"}, {"p": "/versions/r1.7/api_docs/python/tf/sparse_transpose", "k": [], "r": "r1.7", "t": "tf.sparse_transpose"}, {"p": "/versions/r1.7/api_docs/python/tf/spectral", "k": [], "r": "r1.7", "t": "tf.spectral"}, {"p": "/versions/r1.7/api_docs/python/tf/spectral/dct", "k": [], "r": "r1.7", "t": "tf.spectral.dct"}, {"p": "/versions/r1.7/api_docs/python/tf/spectral/irfft", "k": [], "r": "r1.7", "t": "tf.spectral.irfft"}, {"p": "/versions/r1.7/api_docs/python/tf/spectral/irfft2d", "k": [], "r": "r1.7", "t": "tf.spectral.irfft2d"}, {"p": "/versions/r1.7/api_docs/python/tf/spectral/irfft3d", "k": [], "r": "r1.7", "t": "tf.spectral.irfft3d"}, {"p": "/versions/r1.7/api_docs/python/tf/spectral/rfft", "k": [], "r": "r1.7", "t": "tf.spectral.rfft"}, {"p": "/versions/r1.7/api_docs/python/tf/spectral/rfft2d", "k": [], "r": "r1.7", "t": "tf.spectral.rfft2d"}, {"p": "/versions/r1.7/api_docs/python/tf/spectral/rfft3d", "k": [], "r": "r1.7", "t": "tf.spectral.rfft3d"}, {"p": "/versions/r1.7/api_docs/python/tf/split", "k": [], "r": "r1.7", "t": "tf.split"}, {"p": "/versions/r1.7/api_docs/python/tf/sqrt", "k": [], "r": "r1.7", "t": "tf.sqrt"}, {"p": "/versions/r1.7/api_docs/python/tf/square", "k": [], "r": "r1.7", "t": "tf.square"}, {"p": "/versions/r1.7/api_docs/python/tf/squared_difference", "k": [], "r": "r1.7", "t": "tf.squared_difference"}, {"p": "/versions/r1.7/api_docs/python/tf/squeeze", "k": [], "r": "r1.7", "t": "tf.squeeze"}, {"p": "/versions/r1.7/api_docs/python/tf/stack", "k": [], "r": "r1.7", "t": "tf.stack"}, {"p": "/versions/r1.7/api_docs/python/tf/stop_gradient", "k": [], "r": "r1.7", "t": "tf.stop_gradient"}, {"p": "/versions/r1.7/api_docs/python/tf/strided_slice", "k": [], "r": "r1.7", "t": "tf.strided_slice"}, {"p": "/versions/r1.7/api_docs/python/tf/string_join", "k": [], "r": "r1.7", "t": "tf.string_join"}, {"p": "/versions/r1.7/api_docs/python/tf/string_split", "k": [], "r": "r1.7", "t": "tf.string_split"}, {"p": "/versions/r1.7/api_docs/python/tf/string_to_hash_bucket", "k": [], "r": "r1.7", "t": "tf.string_to_hash_bucket"}, {"p": "/versions/r1.7/api_docs/python/tf/string_to_hash_bucket_fast", "k": [], "r": "r1.7", "t": "tf.string_to_hash_bucket_fast"}, {"p": "/versions/r1.7/api_docs/python/tf/string_to_hash_bucket_strong", "k": [], "r": "r1.7", "t": "tf.string_to_hash_bucket_strong"}, {"p": "/versions/r1.7/api_docs/python/tf/string_to_number", "k": [], "r": "r1.7", "t": "tf.string_to_number"}, {"p": "/versions/r1.7/api_docs/python/tf/substr", "k": [], "r": "r1.7", "t": "tf.substr"}, {"p": "/versions/r1.7/api_docs/python/tf/subtract", "k": [], "r": "r1.7", "t": "tf.subtract"}, {"p": "/versions/r1.7/api_docs/python/tf/summary", "k": [], "r": "r1.7", "t": "tf.summary"}, {"p": "/versions/r1.7/api_docs/python/tf/summary/FileWriter", "k": ["__enter__", "__exit__", "__init__", "add_event", "add_graph", "add_meta_graph", "add_run_metadata", "add_session_log", "add_summary", "close", "flush", "get_logdir", "reopen"], "r": "r1.7", "t": "tf.summary.FileWriter"}, {"p": "/versions/r1.7/api_docs/python/tf/summary/FileWriterCache", "k": ["clear", "get"], "r": "r1.7", "t": "tf.summary.FileWriterCache"}, {"p": "/versions/r1.7/api_docs/python/tf/summary/SummaryDescription", "k": [], "r": "r1.7", "t": "tf.summary.SummaryDescription"}, {"p": "/versions/r1.7/api_docs/python/tf/summary/TaggedRunMetadata", "k": [], "r": "r1.7", "t": "tf.summary.TaggedRunMetadata"}, {"p": "/versions/r1.7/api_docs/python/tf/summary/audio", "k": [], "r": "r1.7", "t": "tf.summary.audio"}, {"p": "/versions/r1.7/api_docs/python/tf/summary/get_summary_description", "k": [], "r": "r1.7", "t": "tf.summary.get_summary_description"}, {"p": "/versions/r1.7/api_docs/python/tf/summary/histogram", "k": [], "r": "r1.7", "t": "tf.summary.histogram"}, {"p": "/versions/r1.7/api_docs/python/tf/summary/image", "k": [], "r": "r1.7", "t": "tf.summary.image"}, {"p": "/versions/r1.7/api_docs/python/tf/summary/merge", "k": [], "r": "r1.7", "t": "tf.summary.merge"}, {"p": "/versions/r1.7/api_docs/python/tf/summary/merge_all", "k": [], "r": "r1.7", "t": "tf.summary.merge_all"}, {"p": "/versions/r1.7/api_docs/python/tf/summary/scalar", "k": [], "r": "r1.7", "t": "tf.summary.scalar"}, {"p": "/versions/r1.7/api_docs/python/tf/summary/tensor_summary", "k": [], "r": "r1.7", "t": "tf.summary.tensor_summary"}, {"p": "/versions/r1.7/api_docs/python/tf/summary/text", "k": [], "r": "r1.7", "t": "tf.summary.text"}, {"p": "/versions/r1.7/api_docs/python/tf/svd", "k": [], "r": "r1.7", "t": "tf.svd"}, {"p": "/versions/r1.7/api_docs/python/tf/sysconfig", "k": [], "r": "r1.7", "t": "tf.sysconfig"}, {"p": "/versions/r1.7/api_docs/python/tf/sysconfig/get_compile_flags", "k": [], "r": "r1.7", "t": "tf.sysconfig.get_compile_flags"}, {"p": "/versions/r1.7/api_docs/python/tf/sysconfig/get_include", "k": [], "r": "r1.7", "t": "tf.sysconfig.get_include"}, {"p": "/versions/r1.7/api_docs/python/tf/sysconfig/get_lib", "k": [], "r": "r1.7", "t": "tf.sysconfig.get_lib"}, {"p": "/versions/r1.7/api_docs/python/tf/sysconfig/get_link_flags", "k": [], "r": "r1.7", "t": "tf.sysconfig.get_link_flags"}, {"p": "/versions/r1.7/api_docs/python/tf/tables_initializer", "k": [], "r": "r1.7", "t": "tf.tables_initializer"}, {"p": "/versions/r1.7/api_docs/python/tf/tan", "k": [], "r": "r1.7", "t": "tf.tan"}, {"p": "/versions/r1.7/api_docs/python/tf/tanh", "k": [], "r": "r1.7", "t": "tf.tanh"}, {"p": "/versions/r1.7/api_docs/python/tf/tensordot", "k": [], "r": "r1.7", "t": "tf.tensordot"}, {"p": "/versions/r1.7/api_docs/python/tf/test", "k": [], "r": "r1.7", "t": "tf.test"}, {"p": "/versions/r1.7/api_docs/python/tf/test/Benchmark", "k": ["is_abstract", "report_benchmark", "run_op_benchmark"], "r": "r1.7", "t": "tf.test.Benchmark"}, {"p": "/versions/r1.7/api_docs/python/tf/test/StubOutForTesting", "k": ["CleanUp", "Set", "SmartSet", "SmartUnsetAll", "UnsetAll", "__del__", "__enter__", "__exit__", "__init__"], "r": "r1.7", "t": "tf.test.StubOutForTesting"}, {"p": "/versions/r1.7/api_docs/python/tf/test/TestCase", "k": ["failureException", "__call__", "__eq__", "__init__", "__ne__", "addCleanup", "addTypeEqualityFunc", "assertAllClose", "assertAllCloseAccordingToType", "assertAllEqual", "assertAlmostEqual", "assertAlmostEquals", "assertArrayNear", "assertDeviceEqual", "assertDictContainsSubset", "assertDictEqual", "assertEqual", "assertEquals", "assertFalse", "assertGreater", "assertGreaterEqual", "assertIn", "assertIs", "assertIsInstance", "assertIsNone", "assertIsNot", "assertIsNotNone", "assertItemsEqual", "assertLess", "assertLessEqual", "assertListEqual", "assertMultiLineEqual", "assertNDArrayNear", "assertNear", "assertNotAlmostEqual", "assertNotAlmostEquals", "assertNotEqual", "assertNotEquals", "assertNotIn", "assertNotIsInstance", "assertNotRegexpMatches", "assertProtoEquals", "assertProtoEqualsVersion", "assertRaises", "assertRaisesOpError", "assertRaisesRegexp", "assertRaisesWithPredicateMatch", "assertRegexpMatches", "assertSequenceEqual", "assertSetEqual", "assertShapeEqual", "assertStartsWith", "assertTrue", "assertTupleEqual", "assert_", "checkedThread", "countTestCases", "debug", "defaultTestResult", "doCleanups", "evaluate", "fail", "failIf", "failIfAlmostEqual", "failIfEqual", "failUnless", "failUnlessAlmostEqual", "failUnlessEqual", "failUnlessRaises", "get_temp_dir", "id", "run", "setUp", "setUpClass", "shortDescription", "skipTest", "tearDown", "tearDownClass", "test_session", "longMessage", "maxDiff"], "r": "r1.7", "t": "tf.test.TestCase"}, {"p": "/versions/r1.7/api_docs/python/tf/test/TestCase/failureException", "k": [], "r": "r1.7", "t": "tf.test.TestCase.failureException"}, {"p": "/versions/r1.7/api_docs/python/tf/test/assert_equal_graph_def", "k": [], "r": "r1.7", "t": "tf.test.assert_equal_graph_def"}, {"p": "/versions/r1.7/api_docs/python/tf/test/compute_gradient", "k": [], "r": "r1.7", "t": "tf.test.compute_gradient"}, {"p": "/versions/r1.7/api_docs/python/tf/test/compute_gradient_error", "k": [], "r": "r1.7", "t": "tf.test.compute_gradient_error"}, {"p": "/versions/r1.7/api_docs/python/tf/test/create_local_cluster", "k": [], "r": "r1.7", "t": "tf.test.create_local_cluster"}, {"p": "/versions/r1.7/api_docs/python/tf/test/get_temp_dir", "k": [], "r": "r1.7", "t": "tf.test.get_temp_dir"}, {"p": "/versions/r1.7/api_docs/python/tf/test/gpu_device_name", "k": [], "r": "r1.7", "t": "tf.test.gpu_device_name"}, {"p": "/versions/r1.7/api_docs/python/tf/test/is_built_with_cuda", "k": [], "r": "r1.7", "t": "tf.test.is_built_with_cuda"}, {"p": "/versions/r1.7/api_docs/python/tf/test/is_gpu_available", "k": [], "r": "r1.7", "t": "tf.test.is_gpu_available"}, {"p": "/versions/r1.7/api_docs/python/tf/test/main", "k": [], "r": "r1.7", "t": "tf.test.main"}, {"p": "/versions/r1.7/api_docs/python/tf/test/test_src_dir_path", "k": [], "r": "r1.7", "t": "tf.test.test_src_dir_path"}, {"p": "/versions/r1.7/api_docs/python/tf/tile", "k": [], "r": "r1.7", "t": "tf.tile"}, {"p": "/versions/r1.7/api_docs/python/tf/timestamp", "k": [], "r": "r1.7", "t": "tf.timestamp"}, {"p": "/versions/r1.7/api_docs/python/tf/to_bfloat16", "k": [], "r": "r1.7", "t": "tf.to_bfloat16"}, {"p": "/versions/r1.7/api_docs/python/tf/to_double", "k": [], "r": "r1.7", "t": "tf.to_double"}, {"p": "/versions/r1.7/api_docs/python/tf/to_float", "k": [], "r": "r1.7", "t": "tf.to_float"}, {"p": "/versions/r1.7/api_docs/python/tf/to_int32", "k": [], "r": "r1.7", "t": "tf.to_int32"}, {"p": "/versions/r1.7/api_docs/python/tf/to_int64", "k": [], "r": "r1.7", "t": "tf.to_int64"}, {"p": "/versions/r1.7/api_docs/python/tf/tools", "k": [], "r": "r1.7", "t": "tf.tools"}, {"p": "/versions/r1.7/api_docs/python/tf/trace", "k": [], "r": "r1.7", "t": "tf.trace"}, {"p": "/versions/r1.7/api_docs/python/tf/train", "k": [], "r": "r1.7", "t": "tf.train"}, {"p": "/versions/r1.7/api_docs/python/tf/train/AdadeltaOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.7", "t": "tf.train.AdadeltaOptimizer"}, {"p": "/versions/r1.7/api_docs/python/tf/train/AdagradDAOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.7", "t": "tf.train.AdagradDAOptimizer"}, {"p": "/versions/r1.7/api_docs/python/tf/train/AdagradOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.7", "t": "tf.train.AdagradOptimizer"}, {"p": "/versions/r1.7/api_docs/python/tf/train/AdamOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.7", "t": "tf.train.AdamOptimizer"}, {"p": "/versions/r1.7/api_docs/python/tf/train/BytesList", "k": [], "r": "r1.7", "t": "tf.train.BytesList"}, {"p": "/versions/r1.7/api_docs/python/tf/train/CheckpointSaverHook", "k": ["__init__", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "r1.7", "t": "tf.train.CheckpointSaverHook"}, {"p": "/versions/r1.7/api_docs/python/tf/train/CheckpointSaverListener", "k": ["after_save", "before_save", "begin", "end"], "r": "r1.7", "t": "tf.train.CheckpointSaverListener"}, {"p": "/versions/r1.7/api_docs/python/tf/train/ChiefSessionCreator", "k": ["__init__", "create_session"], "r": "r1.7", "t": "tf.train.ChiefSessionCreator"}, {"p": "/versions/r1.7/api_docs/python/tf/train/ClusterDef", "k": [], "r": "r1.7", "t": "tf.train.ClusterDef"}, {"p": "/versions/r1.7/api_docs/python/tf/train/ClusterSpec", "k": ["jobs", "__bool__", "__eq__", "__init__", "__ne__", "__nonzero__", "as_cluster_def", "as_dict", "job_tasks", "num_tasks", "task_address", "task_indices"], "r": "r1.7", "t": "tf.train.ClusterSpec"}, {"p": "/versions/r1.7/api_docs/python/tf/train/Coordinator", "k": ["joined", "__init__", "clear_stop", "join", "raise_requested_exception", "register_thread", "request_stop", "should_stop", "stop_on_exception", "wait_for_stop"], "r": "r1.7", "t": "tf.train.Coordinator"}, {"p": "/versions/r1.7/api_docs/python/tf/train/Example", "k": [], "r": "r1.7", "t": "tf.train.Example"}, {"p": "/versions/r1.7/api_docs/python/tf/train/ExponentialMovingAverage", "k": ["__init__", "apply", "average", "average_name", "variables_to_restore"], "r": "r1.7", "t": "tf.train.ExponentialMovingAverage"}, {"p": "/versions/r1.7/api_docs/python/tf/train/Feature", "k": [], "r": "r1.7", "t": "tf.train.Feature"}, {"p": "/versions/r1.7/api_docs/python/tf/train/FeatureList", "k": [], "r": "r1.7", "t": "tf.train.FeatureList"}, {"p": "/versions/r1.7/api_docs/python/tf/train/FeatureLists", "k": ["FeatureListEntry"], "r": "r1.7", "t": "tf.train.FeatureLists"}, {"p": "/versions/r1.7/api_docs/python/tf/train/FeatureLists/FeatureListEntry", "k": [], "r": "r1.7", "t": "tf.train.FeatureLists.FeatureListEntry"}, {"p": "/versions/r1.7/api_docs/python/tf/train/Features", "k": ["FeatureEntry"], "r": "r1.7", "t": "tf.train.Features"}, {"p": "/versions/r1.7/api_docs/python/tf/train/Features/FeatureEntry", "k": [], "r": "r1.7", "t": "tf.train.Features.FeatureEntry"}, {"p": "/versions/r1.7/api_docs/python/tf/train/FeedFnHook", "k": ["__init__", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "r1.7", "t": "tf.train.FeedFnHook"}, {"p": "/versions/r1.7/api_docs/python/tf/train/FinalOpsHook", "k": ["final_ops_values", "__init__", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "r1.7", "t": "tf.train.FinalOpsHook"}, {"p": "/versions/r1.7/api_docs/python/tf/train/FloatList", "k": [], "r": "r1.7", "t": "tf.train.FloatList"}, {"p": "/versions/r1.7/api_docs/python/tf/train/FtrlOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.7", "t": "tf.train.FtrlOptimizer"}, {"p": "/versions/r1.7/api_docs/python/tf/train/GlobalStepWaiterHook", "k": ["__init__", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "r1.7", "t": "tf.train.GlobalStepWaiterHook"}, {"p": "/versions/r1.7/api_docs/python/tf/train/GradientDescentOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.7", "t": "tf.train.GradientDescentOptimizer"}, {"p": "/versions/r1.7/api_docs/python/tf/train/Int64List", "k": [], "r": "r1.7", "t": "tf.train.Int64List"}, {"p": "/versions/r1.7/api_docs/python/tf/train/JobDef", "k": ["TasksEntry"], "r": "r1.7", "t": "tf.train.JobDef"}, {"p": "/versions/r1.7/api_docs/python/tf/train/JobDef/TasksEntry", "k": [], "r": "r1.7", "t": "tf.train.JobDef.TasksEntry"}, {"p": "/versions/r1.7/api_docs/python/tf/train/LoggingTensorHook", "k": ["__init__", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "r1.7", "t": "tf.train.LoggingTensorHook"}, {"p": "/versions/r1.7/api_docs/python/tf/train/LooperThread", "k": ["daemon", "ident", "name", "__init__", "getName", "isAlive", "isDaemon", "is_alive", "join", "loop", "run", "run_loop", "setDaemon", "setName", "start", "start_loop", "stop_loop"], "r": "r1.7", "t": "tf.train.LooperThread"}, {"p": "/versions/r1.7/api_docs/python/tf/train/MomentumOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.7", "t": "tf.train.MomentumOptimizer"}, {"p": "/versions/r1.7/api_docs/python/tf/train/MonitoredSession", "k": ["StepContext", "graph", "__enter__", "__exit__", "__init__", "close", "run", "run_step_fn", "should_stop"], "r": "r1.7", "t": "tf.train.MonitoredSession"}, {"p": "/versions/r1.7/api_docs/python/tf/train/MonitoredSession/StepContext", "k": ["session", "__init__", "request_stop", "run_with_hooks"], "r": "r1.7", "t": "tf.train.MonitoredSession.StepContext"}, {"p": "/versions/r1.7/api_docs/python/tf/train/MonitoredTrainingSession", "k": [], "r": "r1.7", "t": "tf.train.MonitoredTrainingSession"}, {"p": "/versions/r1.7/api_docs/python/tf/train/NanLossDuringTrainingError", "k": [], "r": "r1.7", "t": "tf.train.NanLossDuringTrainingError"}, {"p": "/versions/r1.7/api_docs/python/tf/train/NanTensorHook", "k": ["__init__", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "r1.7", "t": "tf.train.NanTensorHook"}, {"p": "/versions/r1.7/api_docs/python/tf/train/NewCheckpointReader", "k": [], "r": "r1.7", "t": "tf.train.NewCheckpointReader"}, {"p": "/versions/r1.7/api_docs/python/tf/train/Optimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.7", "t": "tf.train.Optimizer"}, {"p": "/versions/r1.7/api_docs/python/tf/train/ProfilerHook", "k": ["__init__", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "r1.7", "t": "tf.train.ProfilerHook"}, {"p": "/versions/r1.7/api_docs/python/tf/train/ProximalAdagradOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.7", "t": "tf.train.ProximalAdagradOptimizer"}, {"p": "/versions/r1.7/api_docs/python/tf/train/ProximalGradientDescentOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.7", "t": "tf.train.ProximalGradientDescentOptimizer"}, {"p": "/versions/r1.7/api_docs/python/tf/train/QueueRunner", "k": ["cancel_op", "close_op", "enqueue_ops", "exceptions_raised", "name", "queue", "queue_closed_exception_types", "__init__", "create_threads", "from_proto", "to_proto"], "r": "r1.7", "t": "tf.train.QueueRunner"}, {"p": "/versions/r1.7/api_docs/python/tf/train/RMSPropOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_name", "get_slot", "get_slot_names", "minimize", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.7", "t": "tf.train.RMSPropOptimizer"}, {"p": "/versions/r1.7/api_docs/python/tf/train/Saver", "k": ["last_checkpoints", "__init__", "as_saver_def", "build", "export_meta_graph", "from_proto", "recover_last_checkpoints", "restore", "save", "set_last_checkpoints", "set_last_checkpoints_with_time", "to_proto"], "r": "r1.7", "t": "tf.train.Saver"}, {"p": "/versions/r1.7/api_docs/python/tf/train/SaverDef", "k": ["CheckpointFormatVersion", "LEGACY", "V1", "V2"], "r": "r1.7", "t": "tf.train.SaverDef"}, {"p": "/versions/r1.7/api_docs/python/tf/train/Scaffold", "k": ["init_feed_dict", "init_fn", "init_op", "local_init_op", "ready_for_local_init_op", "ready_op", "saver", "summary_op", "__init__", "finalize", "get_or_default"], "r": "r1.7", "t": "tf.train.Scaffold"}, {"p": "/versions/r1.7/api_docs/python/tf/train/SecondOrStepTimer", "k": ["__init__", "last_triggered_step", "reset", "should_trigger_for_step", "update_last_triggered_step"], "r": "r1.7", "t": "tf.train.SecondOrStepTimer"}, {"p": "/versions/r1.7/api_docs/python/tf/train/SequenceExample", "k": [], "r": "r1.7", "t": "tf.train.SequenceExample"}, {"p": "/versions/r1.7/api_docs/python/tf/train/Server", "k": ["server_def", "target", "__init__", "create_local_server", "join", "start"], "r": "r1.7", "t": "tf.train.Server"}, {"p": "/versions/r1.7/api_docs/python/tf/train/ServerDef", "k": [], "r": "r1.7", "t": "tf.train.ServerDef"}, {"p": "/versions/r1.7/api_docs/python/tf/train/SessionCreator", "k": ["create_session"], "r": "r1.7", "t": "tf.train.SessionCreator"}, {"p": "/versions/r1.7/api_docs/python/tf/train/SessionManager", "k": ["__init__", "prepare_session", "recover_session", "wait_for_session"], "r": "r1.7", "t": "tf.train.SessionManager"}, {"p": "/versions/r1.7/api_docs/python/tf/train/SessionRunArgs", "k": ["feed_dict", "fetches", "options", "__new__"], "r": "r1.7", "t": "tf.train.SessionRunArgs"}, {"p": "/versions/r1.7/api_docs/python/tf/train/SessionRunContext", "k": ["original_args", "session", "stop_requested", "__init__", "request_stop"], "r": "r1.7", "t": "tf.train.SessionRunContext"}, {"p": "/versions/r1.7/api_docs/python/tf/train/SessionRunHook", "k": ["after_create_session", "after_run", "before_run", "begin", "end"], "r": "r1.7", "t": "tf.train.SessionRunHook"}, {"p": "/versions/r1.7/api_docs/python/tf/train/SessionRunValues", "k": ["options", "results", "run_metadata", "__new__"], "r": "r1.7", "t": "tf.train.SessionRunValues"}, {"p": "/versions/r1.7/api_docs/python/tf/train/SingularMonitoredSession", "k": ["StepContext", "graph", "__enter__", "__exit__", "__init__", "close", "raw_session", "run", "run_step_fn", "should_stop"], "r": "r1.7", "t": "tf.train.SingularMonitoredSession"}, {"p": "/versions/r1.7/api_docs/python/tf/train/StepCounterHook", "k": ["__init__", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "r1.7", "t": "tf.train.StepCounterHook"}, {"p": "/versions/r1.7/api_docs/python/tf/train/StopAtStepHook", "k": ["__init__", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "r1.7", "t": "tf.train.StopAtStepHook"}, {"p": "/versions/r1.7/api_docs/python/tf/train/SummarySaverHook", "k": ["__init__", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "r1.7", "t": "tf.train.SummarySaverHook"}, {"p": "/versions/r1.7/api_docs/python/tf/train/Supervisor", "k": ["coord", "global_step", "init_feed_dict", "init_op", "is_chief", "ready_for_local_init_op", "ready_op", "save_model_secs", "save_path", "save_summaries_secs", "saver", "session_manager", "summary_op", "summary_writer", "Loop", "PrepareSession", "RequestStop", "ShouldStop", "StartQueueRunners", "StartStandardServices", "Stop", "StopOnException", "SummaryComputed", "WaitForStop", "__init__", "loop", "managed_session", "prepare_or_wait_for_session", "request_stop", "should_stop", "start_queue_runners", "start_standard_services", "stop", "stop_on_exception", "summary_computed", "wait_for_stop", "USE_DEFAULT"], "r": "r1.7", "t": "tf.train.Supervisor"}, {"p": "/versions/r1.7/api_docs/python/tf/train/SyncReplicasOptimizer", "k": ["__init__", "apply_gradients", "compute_gradients", "get_chief_queue_runner", "get_init_tokens_op", "get_name", "get_slot", "get_slot_names", "make_session_run_hook", "minimize", "variables", "GATE_GRAPH", "GATE_NONE", "GATE_OP"], "r": "r1.7", "t": "tf.train.SyncReplicasOptimizer"}, {"p": "/versions/r1.7/api_docs/python/tf/train/WorkerSessionCreator", "k": ["__init__", "create_session"], "r": "r1.7", "t": "tf.train.WorkerSessionCreator"}, {"p": "/versions/r1.7/api_docs/python/tf/train/add_queue_runner", "k": [], "r": "r1.7", "t": "tf.train.add_queue_runner"}, {"p": "/versions/r1.7/api_docs/python/tf/train/assert_global_step", "k": [], "r": "r1.7", "t": "tf.train.assert_global_step"}, {"p": "/versions/r1.7/api_docs/python/tf/train/basic_train_loop", "k": [], "r": "r1.7", "t": "tf.train.basic_train_loop"}, {"p": "/versions/r1.7/api_docs/python/tf/train/batch", "k": [], "r": "r1.7", "t": "tf.train.batch"}, {"p": "/versions/r1.7/api_docs/python/tf/train/batch_join", "k": [], "r": "r1.7", "t": "tf.train.batch_join"}, {"p": "/versions/r1.7/api_docs/python/tf/train/checkpoint_exists", "k": [], "r": "r1.7", "t": "tf.train.checkpoint_exists"}, {"p": "/versions/r1.7/api_docs/python/tf/train/cosine_decay", "k": [], "r": "r1.7", "t": "tf.train.cosine_decay"}, {"p": "/versions/r1.7/api_docs/python/tf/train/cosine_decay_restarts", "k": [], "r": "r1.7", "t": "tf.train.cosine_decay_restarts"}, {"p": "/versions/r1.7/api_docs/python/tf/train/create_global_step", "k": [], "r": "r1.7", "t": "tf.train.create_global_step"}, {"p": "/versions/r1.7/api_docs/python/tf/train/do_quantize_training_on_graphdef", "k": [], "r": "r1.7", "t": "tf.train.do_quantize_training_on_graphdef"}, {"p": "/versions/r1.7/api_docs/python/tf/train/exponential_decay", "k": [], "r": "r1.7", "t": "tf.train.exponential_decay"}, {"p": "/versions/r1.7/api_docs/python/tf/train/export_meta_graph", "k": [], "r": "r1.7", "t": "tf.train.export_meta_graph"}, {"p": "/versions/r1.7/api_docs/python/tf/train/generate_checkpoint_state_proto", "k": [], "r": "r1.7", "t": "tf.train.generate_checkpoint_state_proto"}, {"p": "/versions/r1.7/api_docs/python/tf/train/get_checkpoint_mtimes", "k": [], "r": "r1.7", "t": "tf.train.get_checkpoint_mtimes"}, {"p": "/versions/r1.7/api_docs/python/tf/train/get_checkpoint_state", "k": [], "r": "r1.7", "t": "tf.train.get_checkpoint_state"}, {"p": "/versions/r1.7/api_docs/python/tf/train/get_global_step", "k": [], "r": "r1.7", "t": "tf.train.get_global_step"}, {"p": "/versions/r1.7/api_docs/python/tf/train/get_or_create_global_step", "k": [], "r": "r1.7", "t": "tf.train.get_or_create_global_step"}, {"p": "/versions/r1.7/api_docs/python/tf/train/global_step", "k": [], "r": "r1.7", "t": "tf.train.global_step"}, {"p": "/versions/r1.7/api_docs/python/tf/train/import_meta_graph", "k": [], "r": "r1.7", "t": "tf.train.import_meta_graph"}, {"p": "/versions/r1.7/api_docs/python/tf/train/init_from_checkpoint", "k": [], "r": "r1.7", "t": "tf.train.init_from_checkpoint"}, {"p": "/versions/r1.7/api_docs/python/tf/train/input_producer", "k": [], "r": "r1.7", "t": "tf.train.input_producer"}, {"p": "/versions/r1.7/api_docs/python/tf/train/inverse_time_decay", "k": [], "r": "r1.7", "t": "tf.train.inverse_time_decay"}, {"p": "/versions/r1.7/api_docs/python/tf/train/latest_checkpoint", "k": [], "r": "r1.7", "t": "tf.train.latest_checkpoint"}, {"p": "/versions/r1.7/api_docs/python/tf/train/limit_epochs", "k": [], "r": "r1.7", "t": "tf.train.limit_epochs"}, {"p": "/versions/r1.7/api_docs/python/tf/train/linear_cosine_decay", "k": [], "r": "r1.7", "t": "tf.train.linear_cosine_decay"}, {"p": "/versions/r1.7/api_docs/python/tf/train/list_variables", "k": [], "r": "r1.7", "t": "tf.train.list_variables"}, {"p": "/versions/r1.7/api_docs/python/tf/train/load_checkpoint", "k": [], "r": "r1.7", "t": "tf.train.load_checkpoint"}, {"p": "/versions/r1.7/api_docs/python/tf/train/load_variable", "k": [], "r": "r1.7", "t": "tf.train.load_variable"}, {"p": "/versions/r1.7/api_docs/python/tf/train/match_filenames_once", "k": [], "r": "r1.7", "t": "tf.train.match_filenames_once"}, {"p": "/versions/r1.7/api_docs/python/tf/train/maybe_batch", "k": [], "r": "r1.7", "t": "tf.train.maybe_batch"}, {"p": "/versions/r1.7/api_docs/python/tf/train/maybe_batch_join", "k": [], "r": "r1.7", "t": "tf.train.maybe_batch_join"}, {"p": "/versions/r1.7/api_docs/python/tf/train/maybe_shuffle_batch", "k": [], "r": "r1.7", "t": "tf.train.maybe_shuffle_batch"}, {"p": "/versions/r1.7/api_docs/python/tf/train/maybe_shuffle_batch_join", "k": [], "r": "r1.7", "t": "tf.train.maybe_shuffle_batch_join"}, {"p": "/versions/r1.7/api_docs/python/tf/train/natural_exp_decay", "k": [], "r": "r1.7", "t": "tf.train.natural_exp_decay"}, {"p": "/versions/r1.7/api_docs/python/tf/train/noisy_linear_cosine_decay", "k": [], "r": "r1.7", "t": "tf.train.noisy_linear_cosine_decay"}, {"p": "/versions/r1.7/api_docs/python/tf/train/piecewise_constant", "k": [], "r": "r1.7", "t": "tf.train.piecewise_constant"}, {"p": "/versions/r1.7/api_docs/python/tf/train/polynomial_decay", "k": [], "r": "r1.7", "t": "tf.train.polynomial_decay"}, {"p": "/versions/r1.7/api_docs/python/tf/train/queue_runner", "k": [], "r": "r1.7", "t": "tf.train.queue_runner"}, {"p": "/versions/r1.7/api_docs/python/tf/train/range_input_producer", "k": [], "r": "r1.7", "t": "tf.train.range_input_producer"}, {"p": "/versions/r1.7/api_docs/python/tf/train/replica_device_setter", "k": [], "r": "r1.7", "t": "tf.train.replica_device_setter"}, {"p": "/versions/r1.7/api_docs/python/tf/train/sdca_fprint", "k": [], "r": "r1.7", "t": "tf.train.sdca_fprint"}, {"p": "/versions/r1.7/api_docs/python/tf/train/sdca_optimizer", "k": [], "r": "r1.7", "t": "tf.train.sdca_optimizer"}, {"p": "/versions/r1.7/api_docs/python/tf/train/sdca_shrink_l1", "k": [], "r": "r1.7", "t": "tf.train.sdca_shrink_l1"}, {"p": "/versions/r1.7/api_docs/python/tf/train/shuffle_batch", "k": [], "r": "r1.7", "t": "tf.train.shuffle_batch"}, {"p": "/versions/r1.7/api_docs/python/tf/train/shuffle_batch_join", "k": [], "r": "r1.7", "t": "tf.train.shuffle_batch_join"}, {"p": "/versions/r1.7/api_docs/python/tf/train/slice_input_producer", "k": [], "r": "r1.7", "t": "tf.train.slice_input_producer"}, {"p": "/versions/r1.7/api_docs/python/tf/train/start_queue_runners", "k": [], "r": "r1.7", "t": "tf.train.start_queue_runners"}, {"p": "/versions/r1.7/api_docs/python/tf/train/string_input_producer", "k": [], "r": "r1.7", "t": "tf.train.string_input_producer"}, {"p": "/versions/r1.7/api_docs/python/tf/train/summary_iterator", "k": [], "r": "r1.7", "t": "tf.train.summary_iterator"}, {"p": "/versions/r1.7/api_docs/python/tf/train/update_checkpoint_state", "k": [], "r": "r1.7", "t": "tf.train.update_checkpoint_state"}, {"p": "/versions/r1.7/api_docs/python/tf/train/write_graph", "k": [], "r": "r1.7", "t": "tf.train.write_graph"}, {"p": "/versions/r1.7/api_docs/python/tf/trainable_variables", "k": [], "r": "r1.7", "t": "tf.trainable_variables"}, {"p": "/versions/r1.7/api_docs/python/tf/transpose", "k": [], "r": "r1.7", "t": "tf.transpose"}, {"p": "/versions/r1.7/api_docs/python/tf/truediv", "k": [], "r": "r1.7", "t": "tf.truediv"}, {"p": "/versions/r1.7/api_docs/python/tf/truncated_normal", "k": [], "r": "r1.7", "t": "tf.truncated_normal"}, {"p": "/versions/r1.7/api_docs/python/tf/truncated_normal_initializer", "k": ["__call__", "__init__", "from_config", "get_config"], "r": "r1.7", "t": "tf.truncated_normal_initializer"}, {"p": "/versions/r1.7/api_docs/python/tf/truncatediv", "k": [], "r": "r1.7", "t": "tf.truncatediv"}, {"p": "/versions/r1.7/api_docs/python/tf/truncatemod", "k": [], "r": "r1.7", "t": "tf.truncatemod"}, {"p": "/versions/r1.7/api_docs/python/tf/tuple", "k": [], "r": "r1.7", "t": "tf.tuple"}, {"p": "/versions/r1.7/api_docs/python/tf/uniform_unit_scaling_initializer", "k": ["__call__", "__init__", "from_config", "get_config"], "r": "r1.7", "t": "tf.uniform_unit_scaling_initializer"}, {"p": "/versions/r1.7/api_docs/python/tf/unique", "k": [], "r": "r1.7", "t": "tf.unique"}, {"p": "/versions/r1.7/api_docs/python/tf/unique_with_counts", "k": [], "r": "r1.7", "t": "tf.unique_with_counts"}, {"p": "/versions/r1.7/api_docs/python/tf/unravel_index", "k": [], "r": "r1.7", "t": "tf.unravel_index"}, {"p": "/versions/r1.7/api_docs/python/tf/unsorted_segment_max", "k": [], "r": "r1.7", "t": "tf.unsorted_segment_max"}, {"p": "/versions/r1.7/api_docs/python/tf/unsorted_segment_min", "k": [], "r": "r1.7", "t": "tf.unsorted_segment_min"}, {"p": "/versions/r1.7/api_docs/python/tf/unsorted_segment_prod", "k": [], "r": "r1.7", "t": "tf.unsorted_segment_prod"}, {"p": "/versions/r1.7/api_docs/python/tf/unsorted_segment_sqrt_n", "k": [], "r": "r1.7", "t": "tf.unsorted_segment_sqrt_n"}, {"p": "/versions/r1.7/api_docs/python/tf/unsorted_segment_sum", "k": [], "r": "r1.7", "t": "tf.unsorted_segment_sum"}, {"p": "/versions/r1.7/api_docs/python/tf/unstack", "k": [], "r": "r1.7", "t": "tf.unstack"}, {"p": "/versions/r1.7/api_docs/python/tf/user_ops", "k": [], "r": "r1.7", "t": "tf.user_ops"}, {"p": "/versions/r1.7/api_docs/python/tf/variable_axis_size_partitioner", "k": [], "r": "r1.7", "t": "tf.variable_axis_size_partitioner"}, {"p": "/versions/r1.7/api_docs/python/tf/variable_op_scope", "k": [], "r": "r1.7", "t": "tf.variable_op_scope"}, {"p": "/versions/r1.7/api_docs/python/tf/variable_scope", "k": ["__enter__", "__exit__", "__init__"], "r": "r1.7", "t": "tf.variable_scope"}, {"p": "/versions/r1.7/api_docs/python/tf/variables_initializer", "k": [], "r": "r1.7", "t": "tf.variables_initializer"}, {"p": "/versions/r1.7/api_docs/python/tf/variance_scaling_initializer", "k": ["__call__", "__init__", "from_config", "get_config"], "r": "r1.7", "t": "tf.variance_scaling_initializer"}, {"p": "/versions/r1.7/api_docs/python/tf/verify_tensor_all_finite", "k": [], "r": "r1.7", "t": "tf.verify_tensor_all_finite"}, {"p": "/versions/r1.7/api_docs/python/tf/where", "k": [], "r": "r1.7", "t": "tf.where"}, {"p": "/versions/r1.7/api_docs/python/tf/while_loop", "k": [], "r": "r1.7", "t": "tf.while_loop"}, {"p": "/versions/r1.7/api_docs/python/tf/write_file", "k": [], "r": "r1.7", "t": "tf.write_file"}, {"p": "/versions/r1.7/api_docs/python/tf/zeros", "k": [], "r": "r1.7", "t": "tf.zeros"}, {"p": "/versions/r1.7/api_docs/python/tf/zeros_initializer", "k": ["__call__", "__init__", "from_config", "get_config"], "r": "r1.7", "t": "tf.zeros_initializer"}, {"p": "/versions/r1.7/api_docs/python/tf/zeros_like", "k": [], "r": "r1.7", "t": "tf.zeros_like"}, {"p": "/versions/r1.7/api_docs/python/tf/zeta", "k": [], "r": "r1.7", "t": "tf.zeta"}, {"p": "/versions/r1.7/api_docs/python/tfdbg", "k": [], "r": "r1.7", "t": "tfdbg"}, {"p": "/versions/r1.7/api_docs/python/tfdbg/DebugDumpDir", "k": ["core_metadata", "dumped_tensor_data", "python_graph", "run_feed_keys_info", "run_fetches_info", "size", "t0", "__init__", "debug_watch_keys", "devices", "find", "find_some_path", "get_dump_sizes_bytes", "get_rel_timestamps", "get_tensor_file_paths", "get_tensors", "loaded_partition_graphs", "node_attributes", "node_device", "node_exists", "node_inputs", "node_op_type", "node_recipients", "node_traceback", "nodes", "partition_graphs", "reconstructed_non_debug_partition_graphs", "set_python_graph", "transitive_inputs", "watch_key_to_data"], "r": "r1.7", "t": "tfdbg.DebugDumpDir"}, {"p": "/versions/r1.7/api_docs/python/tfdbg/DebugTensorDatum", "k": ["debug_op", "device_name", "dump_size_bytes", "extended_timestamp", "file_path", "node_name", "output_slot", "tensor_name", "timestamp", "watch_key", "__init__", "get_tensor"], "r": "r1.7", "t": "tfdbg.DebugTensorDatum"}, {"p": "/versions/r1.7/api_docs/python/tfdbg/DumpingDebugHook", "k": ["__init__", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "r1.7", "t": "tfdbg.DumpingDebugHook"}, {"p": "/versions/r1.7/api_docs/python/tfdbg/DumpingDebugWrapperSession", "k": ["graph", "graph_def", "run_call_count", "sess_str", "session", "__enter__", "__exit__", "__init__", "as_default", "close", "increment_run_call_count", "invoke_node_stepper", "list_devices", "make_callable", "on_run_end", "on_run_start", "on_session_init", "partial_run", "partial_run_setup", "prepare_run_debug_urls", "reset", "run", "run_step_fn", "should_stop"], "r": "r1.7", "t": "tfdbg.DumpingDebugWrapperSession"}, {"p": "/versions/r1.7/api_docs/python/tfdbg/GradientsDebugger", "k": ["graph", "y_tensor", "__enter__", "__exit__", "__init__", "gradient_tensor", "gradient_tensors", "identify_gradient", "register_gradient_tensor", "watch_gradients_by_tensor_names", "watch_gradients_by_tensors"], "r": "r1.7", "t": "tfdbg.GradientsDebugger"}, {"p": "/versions/r1.7/api_docs/python/tfdbg/GrpcDebugHook", "k": ["__init__", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "r1.7", "t": "tfdbg.GrpcDebugHook"}, {"p": "/versions/r1.7/api_docs/python/tfdbg/GrpcDebugWrapperSession", "k": ["graph", "graph_def", "run_call_count", "sess_str", "session", "__enter__", "__exit__", "__init__", "as_default", "close", "increment_run_call_count", "invoke_node_stepper", "list_devices", "make_callable", "on_run_end", "on_run_start", "on_session_init", "partial_run", "partial_run_setup", "prepare_run_debug_urls", "reset", "run", "run_step_fn", "should_stop"], "r": "r1.7", "t": "tfdbg.GrpcDebugWrapperSession"}, {"p": "/versions/r1.7/api_docs/python/tfdbg/LocalCLIDebugHook", "k": ["__init__", "add_tensor_filter", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "r1.7", "t": "tfdbg.LocalCLIDebugHook"}, {"p": "/versions/r1.7/api_docs/python/tfdbg/LocalCLIDebugWrapperSession", "k": ["graph", "graph_def", "run_call_count", "sess_str", "session", "__enter__", "__exit__", "__init__", "add_tensor_filter", "as_default", "close", "increment_run_call_count", "invoke_node_stepper", "list_devices", "make_callable", "on_run_end", "on_run_start", "on_session_init", "partial_run", "partial_run_setup", "reset", "run", "run_step_fn", "should_stop"], "r": "r1.7", "t": "tfdbg.LocalCLIDebugWrapperSession"}, {"p": "/versions/r1.7/api_docs/python/tfdbg/TensorBoardDebugHook", "k": ["__init__", "after_create_session", "after_run", "before_run", "begin", "end"], "r": "r1.7", "t": "tfdbg.TensorBoardDebugHook"}, {"p": "/versions/r1.7/api_docs/python/tfdbg/TensorBoardDebugWrapperSession", "k": ["graph", "graph_def", "run_call_count", "sess_str", "session", "__enter__", "__exit__", "__init__", "as_default", "close", "increment_run_call_count", "invoke_node_stepper", "list_devices", "make_callable", "on_run_end", "on_run_start", "on_session_init", "partial_run", "partial_run_setup", "prepare_run_debug_urls", "reset", "run", "run_step_fn", "should_stop"], "r": "r1.7", "t": "tfdbg.TensorBoardDebugWrapperSession"}, {"p": "/versions/r1.7/api_docs/python/tfdbg/WatchOptions", "k": ["__init__"], "r": "r1.7", "t": "tfdbg.WatchOptions"}, {"p": "/versions/r1.7/api_docs/python/tfdbg/add_debug_tensor_watch", "k": [], "r": "r1.7", "t": "tfdbg.add_debug_tensor_watch"}, {"p": "/versions/r1.7/api_docs/python/tfdbg/has_inf_or_nan", "k": [], "r": "r1.7", "t": "tfdbg.has_inf_or_nan"}, {"p": "/versions/r1.7/api_docs/python/tfdbg/load_tensor_from_event", "k": [], "r": "r1.7", "t": "tfdbg.load_tensor_from_event"}, {"p": "/versions/r1.7/api_docs/python/tfdbg/load_tensor_from_event_file", "k": [], "r": "r1.7", "t": "tfdbg.load_tensor_from_event_file"}, {"p": "/versions/r1.7/api_docs/python/tfdbg/reconstruct_non_debug_graph_def", "k": [], "r": "r1.7", "t": "tfdbg.reconstruct_non_debug_graph_def"}, {"p": "/versions/r1.7/api_docs/python/tfdbg/watch_graph", "k": [], "r": "r1.7", "t": "tfdbg.watch_graph"}, {"p": "/versions/r1.7/api_docs/python/tfdbg/watch_graph_with_blacklists", "k": [], "r": "r1.7", "t": "tfdbg.watch_graph_with_blacklists"}]}